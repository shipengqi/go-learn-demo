{"index":{"version":"2.1.0","fields":["title","body"],"fieldVectors":[["title/index.html",[0,2.513,1,0.135]],["body/index.html",[0,1.467,1,0.368,2,1.524,3,1.38,4,2.051,5,3.175,6,2.576,7,1.276,8,0.985,9,1.498,10,1.068,11,1.506,12,2.213,13,0.725,14,1.398,15,3.143,16,1.772,17,2.217,18,3.973,19,1.943,20,2.82,21,1.367,22,3.479,23,2.203,24,3.074,25,2.574,26,1.712,27,1.766,28,1.647,29,1.85,30,4.798,31,0.594,32,0.587,33,0.651,34,0.706,35,0.818,36,0.763,37,0.612,38,1.145,39,0.968,40,0.987,41,0.806,42,0.894,43,0.783,44,0.79,45,1.285,46,0.909,47,2.217,48,1.311,49,2.217,50,2.217,51,2.217,52,2.217,53,2.196,54,1.173,55,3.899,56,1.248,57,3.208,58,2.068,59,2.734,60,2.369,61,1.722,62,2.093,63,1.658,64,2.925,65,1.04,66,2.815,67,4.754,68,3.017,69,2.244,70,1.943,71,2.217,72,3.735,73,1.549,74,0.828,75,1.022,76,3.345,77,2.217,78,2.217,79,2.556,80,1.943,81,2.455,82,1.939,83,6.462,84,1.789,85,4.673,86,2.217,87,2.217,88,2.217,89,2.217,90,2.217,91,2.217,92,2.041,93,2.217,94,2.217,95,3.026,96,2.537,97,1.398,98,2.217,99,2.217,100,1.705,101,1.705,102,2.217,103,2.455,104,4.179,105,4.039,106,2.217,107,0.827,108,2.005,109,0.956,110,1.022,111,0.506,112,0.535,113,0.953,114,0.682,115,0.711,116,0.682,117,0.782,118,0.817,119,0.817,120,0.799,121,0.876,122,0.909,123,3.208,124,4.182,125,4.193,126,2.633,127,7.146,128,1.97,129,3.083,130,2.217,131,4.096,132,3.659,133,2.217,134,0.866,135,2.217,136,5.161,137,2.455,138,1.772,139,5.963,140,2.455,141,2.217,142,1.647,143,1.943,144,2.455,145,1.705,146,4.134,147,2.455,148,2.217,149,3.659,150,2.217,151,1.506,152,2.217,153,3.208,154,1.772,155,2.455,156,2.217,157,2.217]],["title/index.html#Golang-介绍",[0,2.513,158,4.203]],["body/index.html#Golang-介绍",[2,1.51,3,2.541,4,1.933,5,4.578,6,2.429,7,2.35,8,0.929,9,2.159,10,3.244,11,4.578,12,2.484,13,2.205,14,4.25,15,3.905,16,5.385,17,6.738,18,4.46,19,5.906,20,4.067,21,4.155,22,4.752,23,1.824,24,4.527,25,3.197,26,3.152,159,7.461,160,7.461,161,1.98,162,7.461,163,7.461,164,7.461,165,7.461,166,7.461,167,7.461,168,7.461,169,7.461,170,7.461,171,5.277,172,7.461,173,7.461,174,7.461,175,7.461,176,7.461,177,7.461,178,7.461,179,6.738]],["title/index.html#数据类型",[180,5.714]],["body/index.html#数据类型",[2,1.456,181,8.752,182,8.752,183,8.752,184,8.752,185,8.752]],["title/index.html#三种文件",[186,5.714]],["body/index.html#三种文件",[27,2.458,187,8.725,188,8.725,189,8.725,190,8.725,191,8.725]],["title/index.html#package",[6,1.86]],["body/index.html#package",[2,1.627,6,3.36,27,2.088,28,5.676,29,6.374,192,8.459,193,8.459,194,7.64,195,8.459,196,8.459,197,4.517,198,6.106,199,8.459,200,8.459]],["title/index.html#注释",[201,5.16]],["body/index.html#注释",[1,0.284,202,4.154,203,8.836]],["title/index.html#行分隔符",[204,5.714]],["body/index.html#行分隔符",[1,0.321,2,1.456,205,8.752,206,8.752,207,8.752]],["title/index.html#os-Args",[30,4.125]],["body/index.html#os-Args",[1,0.358,2,1.272,6,2.489,7,2.408,8,0.952,27,2.274,30,7.141,31,0.632,32,0.531,33,0.589,34,0.682,35,0.722,36,0.815,37,0.905,38,0.971,39,1.114,40,1.135,41,1.19,42,1.32,43,1.477,44,2.461,45,4.002,46,2.83,47,6.904,48,4.082,49,6.904,50,6.904,51,6.904,52,6.904,161,1.667,208,7.645,209,7.645,210,7.645,211,7.645,212,7.645]],["title/index.html#空标识符",[213,5.714]],["body/index.html#空标识符",[1,0.351,2,1.354,4,2.109,25,3.487,30,5.874,31,0.611,32,0.565,33,0.627,34,0.726,35,0.768,53,3.497,54,2.768,55,7.654,56,1.528,57,7.571,214,8.137,215,8.137,216,7.349]],["title/index.html#命名",[217,5.714]],["body/index.html#命名",[8,1.069,20,4.682,53,3.608,218,8.59,219,8.59,220,8.59,221,8.59,222,3.345,223,1.554,224,8.59,225,8.59]],["title/index.html#声明",[226,5.16]],["body/index.html#声明",[4,2.212,5,5.238,6,3.201,8,1.063,23,2.087,27,2.107,194,7.71,223,1.545,227,8.537,228,8.537,229,8.537,230,7.71,231,8.537]],["title/index.html#make-和-new",[58,1.329,59,1.513,161,0.725]],["body/index.html#make-和-new",[22,4.361,24,4.485,26,3.52,58,3.877,59,4.669,161,1.817,171,3.983,223,1.856,232,8.333,233,8.333,234,8.333,235,8.333,236,8.333,237,8.333,238,8.333,239,8.333]],["title/index.html#类型转换",[240,5.16]],["body/index.html#类型转换",[1,0.361,2,1.324,4,2.304,8,0.991,22,4.167,31,0.643,32,0.681,33,0.756,34,0.793,35,0.892,36,0.849,40,0.9,60,3.725,61,2.65,62,3.099,63,1.835,64,5.747,65,1.555,66,5.531,67,7.474,68,5.185,69,1.719,70,4.799,71,5.474,72,6.418,73,3.824,74,1.238,75,2.525,76,4.952,77,5.474,79,2.942,80,4.799,82,2.984,223,1.097,241,6.062,242,6.062,243,6.062,244,6.062,245,6.062,246,6.062,247,4.568,248,5.088,249,6.062,250,6.062,251,6.062,252,6.062,253,3.412,254,6.062,255,6.062,256,6.062,257,6.062,258,6.062,259,6.062,260,6.062,261,6.062,262,6.062,263,5.088,264,6.062,265,3.376,266,6.062,267,6.062,268,6.062,269,6.062,270,6.062,271,6.062]],["title/index.html#自定义类型",[272,5.714]],["body/index.html#自定义类型",[1,0.362,4,2.127,5,3.898,8,1.022,9,2.376,23,2.57,31,0.581,32,0.57,33,0.633,34,0.732,35,0.908,36,0.875,37,0.752,38,0.807,39,1.325,40,1.219,41,0.989,42,1.097,62,2.214,63,1.676,74,1.297,76,3.538,79,2.834,82,2.381,83,9.206,84,3.623,85,8.213,86,5.737,87,5.737,88,5.737,89,5.737,90,5.737,91,5.737,92,3.238,93,5.737,94,5.737,95,4.844,96,4.061,97,3.619,98,5.737,99,5.737,101,4.413,102,5.737,202,2.986,223,1.149,273,6.353,274,6.353,275,6.353,276,6.353,277,6.353,278,6.353,279,6.353,280,6.353,281,6.353,282,6.353,283,6.353,284,6.353,285,6.353]],["title/index.html#未命名类型",[286,5.16]],["body/index.html#未命名类型",[286,7.954,287,8.808,288,8.808,289,8.808]],["title/index.html#类型断言",[290,5.714]],["body/index.html#类型断言",[1,0.361,2,1.218,3,1.822,12,2.988,15,4.369,18,5.366,20,2.917,23,1.79,25,3.138,31,0.342,32,0.372,33,0.412,34,0.477,35,0.505,36,0.57,37,0.633,38,0.68,39,0.779,40,0.794,41,0.833,42,0.924,43,1.033,56,1.686,63,1.565,65,1.373,69,2.818,79,2.282,104,4.736,105,4.964,106,4.832,107,1.801,108,3.624,109,2.083,110,2.228,111,1.103,112,1.167,113,1.259,114,1.487,115,1.549,116,1.487,117,1.704,118,1.781,119,1.781,120,1.742,121,1.91,122,1.98,123,5.796,124,5.139,125,5.931,126,4.758,127,9.139,128,3.561,129,4.609,130,4.832,131,6.608,132,6.613,133,4.832,134,1.887,135,4.832,197,2.857,202,2.515,223,0.968,291,5.35,292,4.235,293,5.35,294,5.35,295,4.832,296,4.49,297,4.832,298,5.35,299,5.35,300,5.35,301,5.35,302,5.35,303,3.69,304,3.477,305,5.35,306,5.35,307,5.35,308,5.35,309,5.35,310,5.35,311,5.35,312,5.35,313,4.032,314,5.35,315,5.35,316,5.35,317,5.35,318,5.35,319,5.35,320,5.35]],["title/index.html#编码",[321,4.796]],["body/index.html#编码",[2,1.396,38,1.368,92,2.595,113,1.547,136,6.359,139,7.88,141,5.941,142,4.414,143,5.207,146,5.387,148,5.941,149,7.581,150,5.941,151,4.036,152,5.941,153,6.645,154,4.748,156,5.941,157,5.941,161,1.435,171,3.144,303,3.315,321,7.759,322,6.578,323,6.578,324,6.578,325,6.578,326,6.578,327,6.578,328,6.578,329,6.578,330,6.578,331,6.578,332,6.578,333,6.578,334,6.578,335,6.578,336,6.578,337,6.578,338,6.578,339,6.578,340,6.578,341,5.521,342,6.578,343,6.578,344,5.941,345,6.578,346,4.414,347,6.578,348,6.578,349,6.578,350,6.578,351,6.578,352,6.578,353,6.578,354,6.578,355,6.578,356,6.578,357,6.578,358,6.578,359,6.578,360,6.578,361,6.578,362,6.578,363,6.578,364,6.578,365,6.578,366,6.578,367,6.578,368,6.578,369,6.578,370,5.941]],["title/advance/mm.html",[1,0.184]],["body/advance/mm.html",[1,0.368,2,1.187,371,7.135,372,8.306,373,5.15,374,6.657,375,7.415,376,6.439,377,6.444,378,6.444,379,5.421,380,5.648]],["title/advance/mm.html#内存分配",[381,5.714]],["body/advance/mm.html#内存分配",[]],["title/advance/mm.html#基本策略",[382,5.714]],["body/advance/mm.html#基本策略",[383,8.617,384,8.617,385,8.617,386,8.617,387,8.617,388,8.617,389,8.617,390,8.617,391,8.617,392,8.617,393,8.617]],["title/advance/mm.html#内存块",[394,5.714]],["body/advance/mm.html#内存块",[372,8.31,374,6.186,395,8.21,396,8.21,397,8.21,398,8.21,399,8.21,400,8.21,401,8.21,402,8.21,403,8.21,404,8.21,405,8.21,406,8.21,407,8.21,408,8.21,409,8.21,410,8.21,411,8.21,412,8.21]],["title/advance/mm.html#tcmalloc",[375,4.796]],["body/advance/mm.html#tcmalloc",[2,1.399,374,6.336,375,7.057,376,6.541,377,7.593,378,7.593,379,5.159,413,8.408,414,8.408,415,8.408,416,8.408,417,8.408,418,8.408,419,8.408,420,8.408,421,8.408,422,8.408,423,8.408]],["title/advance/mm.html#回收",[424,5.16]],["body/advance/mm.html#回收",[223,1.564,372,6.513,425,8.643,426,8.643,427,8.643,428,8.643,429,8.643,430,8.643,431,8.643,432,8.643]],["title/advance/mm.html#释放",[433,5.714]],["body/advance/mm.html#释放",[379,5.387,380,6.95,434,8.78,435,8.78,436,8.78]],["title/advance/gc.html",[1,0.184]],["body/advance/gc.html",[1,0.367,2,1.074,3,1.523,8,1.095,9,2.546,31,0.53,32,0.611,33,0.639,34,0.675,35,0.715,36,0.807,37,0.764,38,0.82,39,0.94,40,0.958,41,1.005,42,1.115,43,1.247,48,2.388,53,1.635,61,2.149,65,1.656,74,1.318,76,2.491,79,2.012,105,3.086,107,2.55,109,2.949,110,3.663,111,1.331,112,1.408,113,1.519,114,1.243,115,1.295,116,1.243,117,1.424,118,1.489,119,1.489,120,1.456,121,1.596,122,1.655,379,2.744,437,4.039,438,2.069,439,2.674,440,5.97,441,5.83,442,5.418,443,5.83,444,6.841,445,5.83,446,3.817,447,2.822,448,4.039,449,4.039,450,4.039,451,3.54,452,3.228,453,6.841,454,7.49,455,4.696,456,4.039,457,4.039,458,7.943,459,5.83,460,6.841,461,4.039,462,4.039,463,4.039,464,5.83,465,1.697,466,4.195,467,5.708,468,5.83,469,4.039,470,4.039,471,2.175,472,3.54,473,3.54,474,3.107,475,4.039,476,3.228,477,4.039,478,4.039,479,3.54,480,4.039,481,4.039,482,4.039,483,5.83,484,5.83,485,4.039,486,4.039,487,2.608,488,2.173,489,4.039,490,2.101,491,4.039,492,4.039,493,5.83,494,5.83,495,4.864,496,4.039,497,4.039,498,3.54,499,4.039,500,3.54,501,4.039,502,4.473]],["title/advance/gc.html#垃圾回收",[503,5.714]],["body/advance/gc.html#垃圾回收",[2,1.636,437,7.71,439,5.103,440,4.979,504,8.537,505,8.537,506,8.537,507,8.537,508,7.165,509,8.537,510,8.537,511,8.537,512,8.537]],["title/advance/gc.html#三色标记和写屏障",[513,5.714]],["body/advance/gc.html#三色标记和写屏障",[514,8.725,515,8.725,516,8.725,517,8.725,518,8.725,519,8.725,520,8.725]],["title/advance/gc.html#何时触发-GC",[440,2.451,521,4.203]],["body/advance/gc.html#何时触发-GC",[1,0.365,3,1.587,8,1.112,9,2.587,31,0.54,32,0.538,33,0.597,34,0.691,35,0.732,36,0.826,37,0.787,38,0.844,39,0.968,40,0.987,41,1.035,42,1.148,43,1.284,48,2.488,53,1.704,61,1.551,65,1.706,74,1.358,76,2.595,79,2.072,105,3.178,107,2.61,109,3.018,110,3.722,111,1.371,112,1.45,113,1.564,114,1.295,115,1.349,116,1.295,117,1.484,118,1.551,119,1.551,120,1.517,121,1.663,122,1.725,161,1.016,223,1.203,253,1.997,303,2.348,379,2.859,440,5.419,441,6.004,442,3.911,443,6.004,444,7,445,4.208,446,3.906,447,2.94,448,4.208,449,4.208,450,4.208,451,3.689,452,3.364,453,7,454,7.633,455,4.771,456,4.208,457,4.208,458,8.07,459,6.004,460,7,461,4.208,462,4.208,463,4.208,464,6.004,465,1.768,466,4.32,467,5.84,468,6.004,469,4.208,470,4.208,471,2.266,472,3.689,473,3.689,474,3.237,475,4.208,476,3.364,477,4.208,478,4.208,479,3.689,480,4.208,481,4.208,482,4.208,483,6.004,484,6.004,485,4.208,486,4.208,487,2.718,488,2.238,489,4.208,490,2.164,491,4.208,492,4.208,493,6.004,494,6.004,495,5.01,496,4.208,497,4.208,498,3.689,499,4.208,500,3.689,501,4.208,522,4.66,523,4.66,524,4.66,525,4.66,526,4.66,527,4.66,528,4.66,529,4.66,530,4.66,531,4.66,532,4.66,533,4.66,534,4.66,535,4.66,536,4.66,537,4.66,538,3.911,539,4.66,540,4.66,541,4.66,542,4.66,543,4.66,544,4.66,545,4.66,546,4.66,547,4.66,548,4.66,549,4.66,550,4.66]],["title/advance/gc.html#监控",[551,5.714]],["body/advance/gc.html#监控",[32,0.677,440,6.177,442,7.057,552,8.408,553,8.408,554,8.408,555,8.408,556,8.408,557,7.593,558,8.408,559,8.408,560,8.408,561,8.408,562,8.408,563,8.408]],["title/basic/error.html",[1,0.184]],["body/basic/error.html",[1,0.368,2,1.399,6,1.154,7,1.116,8,0.821,9,1.91,10,3.927,12,1.18,13,1.047,14,2.018,15,2.841,18,2.118,20,1.932,23,0.866,25,2.326,27,2.076,31,0.577,32,0.643,33,0.615,34,0.711,35,0.753,36,0.85,37,0.875,38,0.939,39,1.077,40,1.098,41,1.152,42,1.139,43,1.274,44,1.141,48,2.898,53,1.296,54,1.026,56,0.666,69,1.005,74,0.724,97,2.018,104,3.216,111,0.731,112,0.773,124,2.686,125,2.235,129,1.819,134,1.914,439,4.421,466,4.288,479,2.805,488,2.684,564,2.625,565,2.753,566,3.528,567,2.67,568,2.931,569,3.2,570,2.018,571,3.642,572,3.2,573,2.805,574,3.544,575,4.972,576,3.2,577,2.377,578,1.564,579,3.2,580,1.786,581,3.331,582,3.2,583,1.892,584,3.2,585,3.2,586,2.552,587,3.2,588,5.265,589,3.2,590,3.803,591,3.918,592,4.902,593,3.2,594,4.902,595,4.297,596,3.424,597,7.438,598,3.2,599,3.2,600,3.424,601,6.679,602,2.805,603,3.2,604,2.805,605,3.2,606,2.805,607,3.092,608,2.558,609,3.2,610,3.2]],["title/basic/error.html#错误",[263,4.796]],["body/basic/error.html#错误",[]],["title/basic/error.html#error-类型",[564,1.168,611,2.118]],["body/basic/error.html#error-类型",[1,0.362,9,2.653,14,3.677,31,0.53,32,0.576,33,0.639,34,0.74,35,0.783,36,0.884,37,0.981,38,1.053,39,1.208,40,1.232,41,1.292,42,1.115,43,1.247,53,2.36,54,1.869,97,3.677,197,3.447,222,2.514,564,2.305,565,3.021,566,4.195,567,4.865,568,3.249,569,5.83,571,4.332,572,5.83,573,5.11,575,6.25,576,5.83,577,4.332,578,2.85,579,5.83,580,3.253,581,5.089,582,5.83,583,2.25,584,5.83,585,5.83,586,3.899,587,5.83,612,6.456,613,6.456,614,6.456,615,6.456,616,6.456,617,6.456,618,6.456,619,6.456,620,6.456,621,6.456,622,6.456,623,6.456,624,6.456,625,6.456,626,6.456,627,6.456,628,2.689,629,6.456]],["title/basic/error.html#Panic-异常",[588,2.009,630,4.203]],["body/basic/error.html#Panic-异常",[2,1.629,10,2.625,12,2.009,25,3.402,27,1.959,31,0.567,32,0.654,33,0.465,34,0.538,35,0.57,36,0.643,48,4.239,124,3.929,223,1.772,292,4.778,303,3.041,341,5.065,344,5.451,439,5.634,466,5.159,564,2.619,588,5.274,589,5.451,590,4.321,591,5.731,592,7.17,593,5.451,594,7.17,595,6.285,596,5.008,631,6.036,632,5.451,633,6.036,634,6.036,635,6.036,636,6.036,637,6.036,638,4.193,639,6.036,640,6.036,641,4.548,642,6.036,643,6.036,644,2.885,645,6.036,646,6.036,647,6.036,648,6.036,649,6.036,650,6.036,651,6.036,652,6.036,653,6.036,654,6.036,655,6.036,656,6.036,657,6.036,658,6.036,659,6.036,660,6.036,661,5.451,662,6.036,663,6.036,664,6.036,665,6.036,666,6.036,667,6.036,668,6.036,669,6.036,670,6.036,671,6.036,672,6.036,673,3.608,674,6.036,675,6.036,676,6.036,677,6.036,678,6.036,679,6.036,680,6.036,681,6.036,682,6.036,683,6.036,684,6.036,685,6.036,686,6.036,687,6.036,688,6.036,689,6.036,690,6.036,691,6.036,692,6.036,693,6.036,694,6.036,695,6.036]],["title/basic/error.html#Recover-捕获异常",[597,3.167,696,4.203]],["body/basic/error.html#Recover-捕获异常",[1,0.359,6,1.715,7,1.66,8,1.031,10,4.305,13,1.557,15,3.793,18,3.15,20,2.872,23,1.288,27,2.201,31,0.463,32,0.503,33,0.559,34,0.646,35,0.684,36,0.772,37,0.857,38,0.92,39,1.055,40,1.076,41,1.128,42,1.251,43,1.399,44,1.696,56,0.99,69,1.494,104,3.879,111,1.086,112,1.149,125,3.324,129,2.705,134,2.556,223,1.614,253,2.258,303,2.655,466,3.424,479,4.171,488,3.148,564,2.301,565,2.373,566,3.424,568,2.21,571,3.535,575,3.971,588,5.244,597,7.944,598,4.759,599,4.759,600,4.571,601,8.055,602,4.171,603,4.759,604,4.171,605,4.759,606,4.171,607,4.128,608,3.804,609,4.759,610,4.759,632,6.544,644,2.519,697,5.269,698,5.269,699,5.269,700,5.269,701,4.759,702,5.269,703,5.269,704,5.269,705,5.269,706,5.269,707,5.269,708,6.544,709,5.269,710,5.269,711,5.269,712,5.269,713,5.269,714,5.269,715,5.269,716,3.424,717,5.269,718,5.269,719,5.269,720,5.269,721,3.971,722,5.269,723,5.269,724,5.269,725,5.269,726,4.759,727,5.269,728,5.269,729,5.269,730,5.269,731,5.269,732,5.269,733,5.269,734,5.269,735,5.269,736,3.424,737,5.269,738,5.269,739,5.269,740,5.269,741,5.269]],["title/basic/array.html",[1,0.184]],["body/basic/array.html",[1,0.368,2,0.837,4,2.533,8,0.626,23,1.23,31,0.662,32,0.726,33,0.826,34,0.78,35,0.826,36,0.861,37,0.83,38,0.891,39,1.022,40,1.042,41,1.093,46,3.236,61,2.336,63,1.704,68,4.713,69,1.99,74,1.786,92,2.768,125,4.427,128,2.446,134,1.774,446,4.072,471,2.446,583,1.754,742,3.174,743,3.982,744,5.555,745,4.427,746,3.631,747,3.631,748,4.543,749,4.405,750,4.543,751,5.555,752,4.543,753,4.543,754,4.543,755,4.543,756,4.543,757,4.543,758,6.338,759,4.543,760,3.631,761,4.543,762,4.543,763,5.555]],["title/basic/array.html#数组",[764,5.714]],["body/basic/array.html#数组",[1,0.366,4,2.593,23,1.45,31,0.652,32,0.695,33,0.816,34,0.529,35,0.741,36,0.632,37,0.702,38,0.753,39,0.864,40,0.881,41,0.924,46,3.465,63,1.744,68,5.13,69,1.682,74,1.603,125,4.952,134,2.092,223,1.073,265,3.304,446,3.956,583,2.068,742,3.743,743,4.696,744,6.214,745,4.952,746,4.282,747,4.282,748,5.358,749,4.795,750,5.358,751,6.214,752,5.358,753,5.358,754,5.358,755,5.358,756,5.358,757,5.358,758,7.089,759,5.358,760,4.282,761,5.358,765,5.933,766,5.933,767,4.696,768,5.933,769,5.358,770,5.933,771,5.933,772,5.933,773,5.933,774,5.933,775,5.933,776,5.933,777,5.358,778,5.933,779,5.933,780,5.933,781,5.933,782,5.933]],["title/basic/array.html#二维数组",[783,5.714]],["body/basic/array.html#二维数组",[1,0.367,4,1.863,31,0.615,32,0.717,33,0.796,34,0.859,35,0.838,36,0.946,37,0.851,38,0.913,39,1.047,40,1.068,41,1.12,63,1.253,69,2.039,74,1.813,128,3.497,161,1.568,762,6.494,784,7.191,785,7.191,786,7.191,787,7.191]],["title/basic/array.html#数组传入函数",[788,5.714]],["body/basic/array.html#数组传入函数",[1,0.353,8,1.031,31,0.529,32,0.575,33,0.638,61,3.217,92,3.812,471,4.028,763,7.65,789,8.283,790,8.283,791,7.48,792,8.283,793,8.283,794,8.283]],["title/basic/env_config.html",[1,0.135,2,0.699]],["body/basic/env_config.html",[0,4.302,1,0.367,2,1.751,3,1.393,28,6.668,31,0.508,32,0.5,33,0.555,34,0.642,35,0.571,36,0.645,37,0.716,38,0.768,39,0.881,40,0.898,41,0.942,42,1.044,43,0.79,48,2.184,65,1.05,111,0.843,112,0.892,113,0.962,114,1.137,115,1.184,116,1.137,117,1.303,118,1.362,119,1.362,120,1.332,121,1.46,122,1.514,142,2.745,465,1.553,596,2.581,795,3.527,796,3.695,797,5.462,798,3.695,799,3.561,800,7.12,801,3.695,802,7.271,803,2.745,804,3.238,805,3.083,806,3.433,807,5.462,808,7.18,809,5.462,810,5.462,811,3.695,812,5.462,813,3.695,814,6.499,815,3.695,816,5.462,817,3.695,818,3.695,819,3.695,820,3.695,821,3.695,822,4.366,823,3.695,824,7.18,825,3.238,826,3.695,827,5.462,828,3.695,829,6.499,830,3.238,831,3.695,832,3.445,833,2.445,834,3.238,835,3.695,836,3.695,837,5.462,838,1.68,839,3.238,840,3.695,841,3.695,842,3.695,843,5.462,844,3.695,845,9.084,846,3.695,847,3.695,848,3.695,849,3.695,850,3.695,851,3.238,852,3.695,853,3.695,854,3.695,855,5.462,856,3.695,857,3.695,858,3.695,859,3.695,860,3.695,861,3.695,862,3.695,863,3.695,864,3.695,865,3.695,866,3.695,867,3.695,868,3.695,869,3.695,870,3.695,871,3.695,872,3.695,873,6.499,874,3.695,875,3.695,876,3.695,877,3.695,878,3.695,879,3.695,880,3.695,881,3.695,882,3.695,883,3.695,884,3.695,885,3.695,886,3.695,887,3.695,888,3.695,889,3.695,890,3.695,891,3.695,892,3.695,893,3.695,894,3.695,895,3.695,896,3.695,897,3.695,898,3.695,899,3.695,900,3.695,901,3.695,902,3.695,903,3.695,904,3.695,905,3.695,906,3.695,907,3.695,908,3.238,909,3.695,910,3.695,911,3.695,912,3.695,913,3.695]],["title/basic/env_config.html#Go-环境配置",[2,0.699,914,4.203]],["body/basic/env_config.html#Go-环境配置",[]],["title/basic/env_config.html#安装",[915,5.714]],["body/basic/env_config.html#安装",[2,1.594,161,1.78,223,1.477,795,4.759,796,7.37,797,8.652,798,7.37,799,4.741,800,8.04,801,7.37,916,8.161,917,8.161,918,8.161,919,8.161,920,8.161,921,8.161,922,8.161,923,8.161,924,8.161,925,8.161,926,8.161,927,8.161,928,8.161,929,8.161,930,8.161]],["title/basic/env_config.html#工作区",[931,5.714]],["body/basic/env_config.html#工作区",[1,0.337,2,1.707,31,0.487,32,0.529,33,0.588,34,0.68,222,2.969,223,1.38,795,4.446,800,8.293,802,7.498,803,5.115,804,6.035,805,5.745,932,6.885,933,7.624,934,7.624,935,7.624,936,6.399,937,7.624,938,6.885,939,7.624,940,7.624,941,7.624,942,7.624,943,7.624,944,7.624,945,7.624,946,7.624,947,7.624,948,7.624,949,7.624,950,7.624,951,7.624,952,7.624,953,7.624,954,7.624,955,7.624]],["title/basic/env_config.html#Go-Module",[2,0.699,28,2.82]],["body/basic/env_config.html#Go-Module",[0,4.69,1,0.301,2,1.664,3,1.622,28,6.711,31,0.501,32,0.469,33,0.521,34,0.602,35,0.638,36,0.72,37,0.799,38,0.858,39,0.984,40,1.003,41,1.052,42,1.166,43,0.92,48,2.544,65,1.222,111,0.982,112,1.039,113,1.121,114,1.324,115,1.379,116,1.324,117,1.517,118,1.586,119,1.586,120,1.551,121,1.7,122,1.763,161,1.711,197,2.544,223,1.222,253,2.042,465,1.808,799,2.358,802,7.045,807,6.099,808,7.085,809,6.099,810,6.099,811,4.302,812,6.099,813,4.302,814,7.085,815,4.302,816,6.099,817,4.302,818,4.302,819,4.302,820,4.302,821,4.302,822,4.875,823,4.302,824,7.709,825,3.771,826,4.302,827,6.099,828,4.302,829,7.085,830,3.771,831,4.302,832,3.847,833,2.848,834,3.771,835,4.302,836,4.302,837,6.099,838,1.957,839,3.771,840,4.302,841,4.302,842,4.302,843,6.099,844,4.302,845,9.355,846,4.302,847,4.302,848,4.302,849,4.302,850,4.302,851,3.771,852,4.302,853,4.302,854,4.302,855,6.099,856,4.302,857,4.302,858,4.302,859,4.302,860,4.302,861,4.302,862,4.302,863,4.302,864,4.302,865,4.302,866,4.302,867,4.302,868,4.302,869,4.302,870,4.302,871,4.302,872,4.302,873,7.085,874,4.302,875,4.302,876,4.302,877,4.302,878,4.302,879,4.302,880,4.302,881,4.302,882,4.302,883,4.302,884,4.302,885,4.302,886,4.302,887,4.302,888,4.302,889,4.302,890,4.302,891,4.302,892,4.302,893,4.302,894,4.302,895,4.302,896,4.302,897,4.302,898,4.302,899,4.302,900,4.302,901,4.302,902,4.302,903,4.302,904,4.302,905,4.302,906,4.302,907,4.302,908,3.771,909,4.302,956,4.764,957,4.764,958,4.764,959,6.099,960,4.764,961,4.764,962,4.764,963,4.302,964,4.764,965,4.764,966,4.764,967,4.764,968,4.764,969,4.764,970,4.764,971,4.764,972,3.998,973,6.753,974,4.764,975,4.764,976,4.764,977,4.764,978,4.764,979,4.764,980,4.764,981,4.764,982,4.764,983,4.26,984,4.764,985,3.771,986,4.764,987,4.764,988,4.764,989,4.764,990,4.764,991,4.302,992,4.764,993,3.998,994,4.764,995,4.764,996,2.103,997,4.764,998,4.302,999,4.764,1000,4.764,1001,4.764]],["title/basic/env_config.html#开发工具",[1002,5.714]],["body/basic/env_config.html#开发工具",[142,5.854,910,7.879,911,7.879,912,7.879,913,7.879,1003,8.725,1004,8.725]],["title/basic/flow.html",[1,0.184]],["body/basic/flow.html",[1,0.368,2,0.672,11,5.177,14,2.3,15,5.468,16,2.914,18,5.924,19,5.652,20,3.265,25,4.384,31,0.648,32,0.704,33,0.8,34,0.894,35,0.957,36,0.975,37,1.083,38,1.193,39,1.04,40,0.599,41,0.629,42,0.697,43,0.78,53,1.476,56,0.758,61,1.344,62,2.489,63,0.704,69,1.698,74,0.825,79,1.866,96,1.706,104,2.605,109,1.572,111,0.832,112,1.306,116,1.122,128,1.963,136,4.164,146,3.598,467,3.042,749,2.201,832,2.3,1005,4.037,1006,3.646,1007,5.409,1008,4.037,1009,5.409,1010,3.646,1011,4.741,1012,4.741,1013,2.914,1014,2.624,1015,3.646,1016,3.646,1017,6.253,1018,3.646,1019,3.646,1020,5.409,1021,2.113,1022,3.412,1023,3.196,1024,2.413,1025,2.413,1026,2.624,1027,3.196,1028,3.196,1029,3.196,1030,2.914,1031,3.196,1032,3.196,1033,3.196,1034,3.196,1035,2.914,1036,3.196]],["title/basic/flow.html#控制语句",[1037,5.714]],["body/basic/flow.html#控制语句",[]],["title/basic/flow.html#if",[]],["body/basic/flow.html#if",[1,0.351,31,0.625,32,0.679,33,0.754,34,0.754,35,0.799,1038,9.783,1039,8.459]],["title/basic/flow.html#switch",[18,3.416]],["body/basic/flow.html#switch",[1,0.347,15,5.737,18,6.464,20,4.002,31,0.469,32,0.51,33,0.566,34,0.655,35,0.693,36,0.782,37,0.869,38,0.932,39,1.069,1006,6.631,1007,8.12,1009,8.12,1010,6.631,1040,7.342,1041,7.342,1042,6.631,1043,7.342,1044,7.342,1045,7.342,1046,7.342,1047,7.342,1048,7.342,1049,7.342,1050,7.342,1051,7.342,1052,7.342,1053,7.342,1054,7.342,1055,7.342,1056,7.342,1057,7.342,1058,7.342,1059,7.342,1060,7.342,1061,7.342,1062,7.342,1063,7.342,1064,7.342]],["title/basic/flow.html#select",[11,3.506]],["body/basic/flow.html#select",[1,0.351,11,6.337,15,5.671,18,4.647,20,4.237,31,0.497,32,0.54,33,0.599,34,0.693,35,0.734,36,0.828,37,0.92,38,0.987,1011,7.368,1012,7.368,1065,7.773,1066,7.773,1067,7.773,1068,7.773,1069,7.773,1070,7.773,1071,7.02,1072,7.02,1073,7.773,1074,7.02,1075,7.773,1076,7.773,1077,7.02]],["title/basic/flow.html#for",[]],["body/basic/flow.html#for",[1,0.363,2,0.784,14,2.686,16,3.404,18,2.819,19,6.176,25,4.501,31,0.638,32,0.693,33,0.789,34,0.874,35,0.956,36,0.957,37,1.005,38,1.185,39,0.977,40,0.7,41,0.734,42,0.814,43,0.911,53,1.724,56,0.886,61,1.57,62,2.719,63,0.822,69,1.901,74,0.963,79,2.089,96,1.992,104,2.916,109,1.836,111,0.972,112,1.462,116,1.31,128,2.293,136,4.55,146,3.931,161,1.028,223,1.412,247,3.553,321,3.957,467,3.553,716,3.064,749,2.57,832,2.686,1013,3.404,1014,3.064,1015,4.258,1016,4.258,1017,6.726,1018,4.258,1019,4.258,1020,6.055,1021,2.468,1022,3.819,1023,3.733,1025,2.819,1027,3.733,1028,3.733,1029,3.733,1030,3.404,1031,3.733,1032,3.733,1033,3.733,1034,3.733,1035,3.404,1036,3.733,1078,6.055,1079,4.715,1080,4.258,1081,4.715,1082,4.715,1083,4.715,1084,4.715,1085,4.715,1086,4.715,1087,3.404,1088,4.715,1089,4.715,1090,4.715,1091,4.715,1092,4.715,1093,4.715,1094,4.715,1095,4.258,1096,3.553,1097,4.715,1098,4.715,1099,4.715,1100,4.715,1101,4.715,1102,4.715,1103,4.715,1104,4.715,1105,4.715,1106,4.715,1107,4.715,1108,4.715,1109,4.715,1110,4.258,1111,4.715,1112,4.715,1113,4.715,1114,4.715,1115,4.715,1116,4.715,1117,4.715,1118,6.705,1119,4.715,1120,4.258,1121,4.715,1122,4.715,1123,4.715,1124,4.715,1125,4.715,1126,4.715,1127,4.715,1128,4.715,1129,4.715,1130,4.715,1131,4.715,1132,4.258,1133,4.715,1134,3.957,1135,3.957,1136,4.258,1137,4.258,1138,4.258,1139,4.715,1140,4.715,1141,4.715,1142,4.715,1143,4.715]],["title/basic/oop.html",[1,0.184]],["body/basic/oop.html",[1,0.368,2,1.434,4,1.664,7,1.069,8,1.073,9,1.858,13,2.442,23,2.234,27,0.837,31,0.625,32,0.693,33,0.686,34,0.768,35,0.814,36,0.833,37,0.855,38,0.918,39,1.053,40,1.073,41,1,42,1.109,43,1.24,54,0.982,56,1.943,62,1.83,63,0.591,65,1.347,69,1.821,72,5.217,74,1.476,79,1.057,82,1.271,84,3.45,100,2.357,108,4.524,111,1.324,112,1.4,113,1.51,129,1.742,134,1.196,488,2.632,564,0.943,578,1.497,583,1.182,749,3.939,1144,6.187,1145,2.685,1146,3.064,1147,3.064,1148,3.064,1149,3.064,1150,3.064,1151,3.064,1152,4.172,1153,3.064,1154,3.064,1155,5.798,1156,3.064,1157,3.064,1158,6.068,1159,3.064,1160,5.798,1161,2.685,1162,2.449,1163,3.064,1164,3.064,1165,3.064,1166,3.064,1167,3.392,1168,4.405,1169,2.449,1170,5.217,1171,2.449,1172,3.064,1173,1.454,1174,4.74,1175,2.685,1176,5.798,1177,4.74,1178,4.74,1179,5.249,1180,4.74,1181,3.064,1182,4.74,1183,3.064,1184,3.064,1185,3.064,1186,3.064,1187,1.978,1188,2.204,1189,4.74,1190,3.064,1191,3.064,1192,3.064,1193,3.064,1194,3.064,1195,3.064,1196,3.064,1197,3.064,1198,4.696,1199,3.064,1200,3.064,1201,3.064,1202,3.064,1203,3.064,1204,3.064,1205,3.064,1206,7.464,1207,3.392,1208,4.74,1209,4.74,1210,4.74,1211,3.064,1212,4.74]],["title/basic/oop.html#面向对象",[1213,5.714]],["body/basic/oop.html#面向对象",[2,1.474,1214,8.864]],["title/basic/oop.html#方法",[1215,3.969]],["body/basic/oop.html#方法",[1,0.363,2,1.191,4,1.343,8,1.157,9,1.5,13,1.531,23,2.006,27,1.279,31,0.63,32,0.708,33,0.683,34,0.732,35,0.676,36,0.763,37,0.847,38,0.91,39,1.043,40,0.769,41,0.807,42,0.895,43,1.001,62,2.496,63,0.903,65,1.329,82,1.942,84,3.623,100,3.599,108,4.876,111,1.068,112,1.13,113,1.219,134,1.827,197,2.766,222,2.017,223,1.739,247,3.904,296,4.348,488,2.981,564,1.44,583,1.806,611,2.611,767,4.101,1144,7.358,1145,4.101,1146,4.679,1147,4.679,1148,4.679,1149,4.679,1150,4.679,1151,4.679,1152,5.334,1153,4.679,1154,4.679,1155,7.413,1156,4.679,1157,4.679,1158,5.754,1159,4.679,1160,7.413,1161,4.101,1162,3.74,1163,4.679,1164,4.679,1165,4.679,1166,4.679,1168,4.348,1169,3.74,1170,6.392,1171,3.74,1216,5.181,1217,4.679,1218,4.679,1219,4.679,1220,4.679,1221,4.348,1222,5.181,1223,5.181,1224,5.181,1225,5.181,1226,3.155,1227,4.679,1228,5.181,1229,5.181,1230,5.181,1231,5.181,1232,7.162,1233,5.181,1234,5.181,1235,5.181,1236,5.181,1237,5.181,1238,5.181,1239,5.181,1240,5.181,1241,5.181,1242,5.181,1243,5.181,1244,5.181,1245,5.181,1246,5.181,1247,5.181,1248,5.181,1249,5.181,1250,5.181,1251,5.181,1252,4.679,1253,5.181,1254,5.181,1255,5.181,1256,5.181,1257,5.181,1258,5.181]],["title/basic/oop.html#嵌入结构体扩展类型",[1259,5.714]],["body/basic/oop.html#嵌入结构体扩展类型",[1,0.36,2,1.357,4,2.115,7,1.983,13,2.412,23,2.213,31,0.579,32,0.629,33,0.485,34,0.728,35,0.855,36,0.671,37,0.745,38,0.799,39,0.917,40,1.212,41,0.98,42,1.087,43,1.216,65,1.615,72,6.915,74,1.957,79,1.962,84,2.779,111,1.298,112,1.373,113,1.481,223,1.638,488,2.12,749,5.222,1158,6.608,1168,5.283,1172,5.685,1173,2.698,1174,7.37,1175,4.983,1176,8.177,1177,7.37,1178,7.37,1180,7.37,1181,5.685,1182,7.37,1183,5.685,1184,5.685,1260,8.161,1261,6.295,1262,6.295,1263,6.295,1264,6.295,1265,6.295,1266,6.295,1267,6.295,1268,6.295,1269,6.295,1270,6.295,1271,6.295,1272,6.295,1273,6.295,1274,6.295,1275,6.295,1276,6.295,1277,6.295,1278,6.295,1279,6.295,1280,6.295,1281,6.295,1282,6.295,1283,6.295,1284,6.295,1285,6.295]],["title/basic/oop.html#封装",[1286,5.714]],["body/basic/oop.html#封装",[1,0.331,13,2.881,23,2.055,31,0.537,32,0.584,33,0.648,628,3.502,1185,7.593,1186,7.593,1187,4.903,1287,8.408,1288,8.408,1289,8.408,1290,8.408,1291,8.408,1292,8.408]],["title/basic/oop.html#String-方法",[56,0.789,1215,2.92]],["body/basic/oop.html#String-方法",[1,0.355,2,0.993,8,0.981,9,2.282,13,1.764,23,1.927,31,0.504,32,0.547,33,0.608,34,0.703,35,0.744,36,0.84,37,0.706,38,0.758,39,0.87,40,0.887,41,0.93,42,1.031,43,1.153,54,1.728,56,2.075,69,2.502,84,2.636,108,3.901,111,1.231,112,1.302,113,1.405,129,3.065,161,1.302,216,5.392,223,1.426,253,2.559,292,4.726,346,4.006,578,2.636,991,5.392,1189,7.119,1190,5.392,1191,5.392,1192,5.392,1193,5.392,1194,5.392,1195,5.392,1196,5.392,1197,5.392,1198,6.099,1199,5.392,1200,5.392,1201,5.392,1202,5.392,1203,5.392,1204,5.392,1205,5.392,1206,9.052,1208,7.119,1209,7.119,1210,7.119,1211,5.392,1212,7.119,1215,4.148,1226,2.295,1293,5.971,1294,5.971,1295,5.971,1296,5.971,1297,5.971,1298,5.971,1299,5.971,1300,5.971,1301,5.971,1302,5.971,1303,5.971,1304,5.971,1305,5.971,1306,5.971,1307,5.971,1308,5.971,1309,5.971,1310,5.971,1311,5.971,1312,5.971,1313,5.971,1314,5.971,1315,3.88,1316,5.971,1317,5.971,1318,5.971,1319,4.148,1320,4.726,1321,5.971,1322,5.971,1323,5.971]],["title/basic/constant.html",[1,0.184]],["body/basic/constant.html",[1,0.367,2,0.851,5,6.38,31,0.692,32,0.706,33,0.772,34,0.727,35,0.77,36,0.938,37,1.042,38,1.118,39,1.034,40,1.054,41,1.105,42,1.408,43,1.371,46,2.627,54,1.48,56,1.531,60,3.474,62,3.069,65,1.312,74,1.89,76,4.541,82,2.66,84,2.258,96,3.444,107,1.722,109,1.991,111,1.463,112,1.548,113,1.203,114,1.421,120,1.665,438,2.365,744,4.048,1024,3.057,1324,5.124,1325,4.048,1326,4.048,1327,4.048,1328,4.619,1329,4.619,1330,4.619,1331,2.16,1332,4.619,1333,3.226,1334,7.962,1335,7.362,1336,2.677,1337,3.431,1338,2.677,1339,3.323,1340,2.848]],["title/basic/constant.html#常量",[1341,5.714]],["body/basic/constant.html#常量",[1,0.361,5,6.487,31,0.667,32,0.713,33,0.644,34,0.745,35,0.789,36,0.891,37,0.989,38,1.061,39,0.951,40,0.97,41,1.017,42,1.128,43,1.261,46,3.093,54,1.891,56,1.569,60,3.635,62,3.212,74,1.334,82,2.448,84,2.883,96,3.53,107,2.199,109,2.543,111,1.347,112,1.424,222,2.543,223,1.182,438,3.021,611,3.292,628,3.481,744,5.17,1324,6.032,1325,5.17,1326,5.17,1327,5.17,1328,5.899,1329,5.899,1330,5.899,1331,2.759,1332,5.899,1333,4.121,1342,6.532,1343,6.532,1344,6.532,1345,4.922,1346,6.532,1347,5.899,1348,6.532,1349,5.899,1350,6.532,1351,6.532,1352,6.532,1353,6.532,1354,6.532,1355,5.899]],["title/basic/constant.html#iota",[1334,4.306]],["body/basic/constant.html#iota",[1,0.361,2,1.081,5,5.642,31,0.692,32,0.638,33,0.791,34,0.58,35,0.614,36,0.888,37,0.986,38,1.058,39,0.947,40,0.965,41,1.012,42,1.439,43,1.256,60,2.565,62,2.266,65,1.668,74,1.98,76,4.64,82,2.436,96,2.746,111,1.34,112,1.418,113,1.529,114,1.806,120,2.116,222,2.531,223,1.508,253,2.786,1024,3.886,1334,8.203,1335,8.304,1336,3.403,1337,4.362,1338,3.403,1339,4.225,1340,3.621,1356,6.501,1357,6.501,1358,6.501,1359,6.501,1360,6.501,1361,6.501,1362,6.501,1363,6.501,1364,6.501,1365,6.501,1366,6.501,1367,6.501]],["title/basic/map.html",[24,2.643]],["body/basic/map.html",[1,0.369,2,1.399,4,1.997,12,1.536,24,5.129,25,2.829,26,1.949,31,0.634,32,0.643,33,0.686,34,0.589,35,0.623,36,0.492,37,0.546,38,0.586,39,0.672,40,0.685,41,1.028,42,0.797,46,1.708,58,3.081,63,1.151,73,2.91,74,0.942,104,2.871,105,4.255,107,1.553,124,2.283,565,2.844,588,3.684,1014,6.196,1171,3.33,1368,4.167,1369,6.101,1370,4.167,1371,3.652,1372,3.652,1373,3.652,1374,3.652,1375,6.101,1376,4.429,1377,4.167,1378,4.167,1379,3.652,1380,3.476,1381,3.652,1382,4.167,1383,3.476,1384,6.961,1385,5.961,1386,4.167,1387,2.91,1388,4.167,1389,3.205,1390,2.691,1391,5.225,1392,5.961]],["title/basic/map.html#map",[24,2.643]],["body/basic/map.html#map",[1,0.358,2,1.089,4,1.985,12,1.518,24,5.117,25,2.806,26,1.927,31,0.607,32,0.641,33,0.683,34,0.584,35,0.618,36,0.486,37,0.54,38,0.579,39,0.664,40,0.677,41,1.019,42,0.788,46,1.688,58,3.061,63,1.141,73,2.877,74,0.931,104,2.847,105,4.236,107,1.536,124,2.257,161,1.428,171,2.18,202,3.078,223,1.719,303,2.298,304,2.964,565,2.836,628,1.9,644,2.18,721,4.933,767,6.062,959,4.119,996,2.013,1014,6.175,1171,3.292,1226,2.516,1368,4.119,1369,6.062,1370,4.119,1371,3.61,1372,3.61,1373,3.61,1374,3.61,1375,6.062,1376,4.392,1377,4.119,1378,4.119,1379,3.61,1380,3.437,1381,3.61,1382,4.119,1383,3.437,1384,6.916,1385,5.912,1386,4.119,1387,2.877,1388,4.119,1389,3.168,1390,2.66,1391,5.182,1392,5.912,1393,4.561,1394,4.561,1395,4.561,1396,4.561,1397,4.561,1398,4.561,1399,4.561,1400,4.119,1401,4.561,1402,4.561,1403,4.561,1404,7.658,1405,4.561,1406,4.561,1407,4.561,1408,4.561,1409,4.561,1410,4.561,1411,4.561,1412,4.561,1413,4.561,1414,4.561,1415,4.561,1416,4.561,1417,4.561,1418,4.561,1419,4.561,1420,3.292,1421,4.561,1422,4.561,1423,4.561,1424,4.561,1425,4.561,1426,4.561,1427,4.119,1428,4.561,1429,4.561,1430,2.66,1431,4.561,1432,4.561,1433,4.561,1434,4.561,1435,4.561,1436,4.561,1437,6.547,1438,4.119,1439,4.561,1440,4.561,1441,4.561,1442,4.561,1443,4.561,1444,4.561,1445,4.561,1446,4.561,1447,4.561,1448,4.561,1449,4.561,1450,4.561,1451,4.561,1452,4.561,1453,4.561,1454,4.561,1455,4.561,1456,4.561,1457,4.561,1458,4.561,1459,4.561,1460,4.561,1461,4.561,1462,3.828,1463,4.561,1464,4.561,1465,4.561,1466,4.561,1467,4.561,1468,4.561,1469,4.561,1470,4.561,1471,4.561,1472,4.561,1473,4.561,1474,4.561,1475,4.561,1476,4.561,1477,4.561,1478,4.561,1479,4.561,1480,4.561,1481,4.561,1482,4.561,1483,4.561,1484,4.561]],["title/basic/json.html",[1,0.184]],["body/basic/json.html",[1,0.367,2,1.308,3,2.027,4,1.542,13,1.759,23,0.978,31,0.537,32,0.584,33,0.606,34,0.701,35,0.743,36,0.634,37,0.704,38,0.756,39,0.867,40,0.884,41,0.927,42,1.028,43,1.149,54,2.056,56,1.714,63,1.037,65,1.527,69,1.687,95,3.964,107,2.004,109,3.063,110,2.479,111,1.227,112,1.298,113,1.4,114,1.654,115,1.723,116,1.654,117,1.895,118,1.981,119,1.981,120,1.937,121,2.124,122,2.203,129,3.055,138,2.889,465,1.519,565,2.035,568,2.921,600,6.042,838,1.644,851,3.168,1175,7.829,1188,2.601,1485,7.829,1486,3.168,1487,4.711,1488,3.39,1489,5.374,1490,3.615,1491,3.615,1492,3.615,1493,1.644,1494,6.416,1495,6.974,1496,5.951,1497,5.951,1498,8.465,1499,7.104,1500,5.374,1501,5.374,1502,5.374,1503,5.374,1504,5.374,1505,6.416,1506,6.416,1507,6.416,1508,5.374,1509,5.374,1510,5.374,1511,6.416,1512,5.374,1513,5.374,1514,5.374,1515,5.374,1516,5.374,1517,3.615,1518,6.416,1519,4.711,1520,5.128,1521,3.615,1522,3.615,1523,6.226,1524,6.655,1525,3.615,1526,3.615,1527,3.615,1528,3.615,1529,3.615,1530,3.615,1531,3.615,1532,3.615,1533,3.615,1534,4.003,1535,3.615,1536,3.615]],["title/basic/json.html#序列化",[1537,5.714]],["body/basic/json.html#序列化",[1,0.364,2,1.293,3,1.991,4,1.515,13,1.727,23,0.955,31,0.532,32,0.578,33,0.599,34,0.693,35,0.734,36,0.623,37,0.692,38,0.742,39,0.851,40,0.868,41,0.91,42,1.009,43,1.129,54,2.027,56,1.7,63,1.019,65,1.5,69,1.657,95,3.917,107,1.968,109,3.026,110,2.434,111,1.205,112,1.275,113,1.375,114,1.624,115,1.692,116,1.624,117,1.861,118,1.946,119,1.946,120,1.903,121,2.086,122,2.163,129,3.001,138,2.82,171,2.794,202,1.837,222,2.727,465,1.483,565,2.006,568,2.902,600,6.003,628,1.627,838,1.605,851,3.093,983,2.465,1175,7.787,1188,2.539,1226,1.502,1485,7.787,1486,3.093,1487,4.627,1488,3.329,1489,5.278,1490,3.528,1491,3.528,1492,3.528,1493,1.605,1494,6.324,1495,6.912,1498,8.405,1499,7.019,1500,5.278,1501,5.278,1502,5.278,1503,5.278,1504,5.278,1505,6.324,1506,6.324,1507,6.324,1508,5.278,1509,5.278,1510,5.278,1511,6.324,1512,5.278,1513,5.278,1514,5.278,1515,5.278,1516,5.278,1517,3.528,1518,6.324,1519,4.627,1520,5.055,1521,3.528,1522,3.528,1523,6.153,1524,6.587,1525,3.528,1526,3.528,1527,3.528,1528,3.528,1529,3.528,1530,3.528,1531,3.528,1532,3.528,1533,3.528,1535,3.528,1536,3.528,1538,3.907,1539,3.907,1540,3.907,1541,3.907,1542,2.82,1543,3.907,1544,2.944,1545,3.907,1546,3.907,1547,5.845,1548,5.845,1549,3.907,1550,3.907,1551,2.465,1552,3.907,1553,3.907,1554,3.907,1555,3.907,1556,3.907,1557,3.907,1558,3.907,1559,3.907,1560,3.907,1561,3.907,1562,3.907,1563,3.907,1564,3.907,1565,3.907,1566,3.907,1567,3.907,1568,3.907,1569,3.907,1570,3.279,1571,3.907,1572,2.539,1573,3.093,1574,3.907,1575,3.907,1576,3.907,1577,3.907,1578,3.907,1579,3.907,1580,3.907,1581,3.907,1582,3.528,1583,3.907,1584,3.907,1585,3.907,1586,3.907,1587,3.907,1588,3.907]],["title/basic/pointer.html",[1,0.184]],["body/basic/pointer.html",[0,4.372,1,0.367,3,1.006,4,1.521,6,0.961,7,0.93,8,1.018,13,2.416,21,1.645,23,2.075,24,3.782,26,3.292,27,1.162,31,0.673,32,0.647,33,0.516,34,0.523,35,0.554,36,0.502,37,0.557,38,0.598,39,0.686,40,0.699,41,0.733,42,0.813,43,0.909,44,0.951,54,1.362,56,0.884,62,1.641,63,1.48,65,0.758,69,2.849,74,1.982,79,2.645,80,3.726,92,1.165,97,2.681,100,3.27,104,3.389,111,0.97,112,1.026,113,1.107,114,0.82,115,0.855,116,0.82,117,0.94,118,0.983,119,0.983,120,0.961,121,1.054,122,1.093,128,2.854,379,2.888,440,2.745,452,5.626,465,1.121,488,3.383,490,2.537,565,1.918,578,4.327,607,1.682,742,4.224,763,6.17,838,1.213,1025,1.765,1152,1.919,1158,1.919,1161,3.726,1162,3.398,1170,2.131,1173,1.265,1390,1.722,1391,2.337,1493,1.213,1589,2.667,1590,2.337,1591,1.981,1592,1.863,1593,6.606,1594,2.131,1595,2.667,1596,2.667,1597,2.953,1598,3.726,1599,2.667,1600,2.667,1601,2.667,1602,2.667,1603,1.366,1604,1.411,1605,1.411,1606,1.461,1607,1.461,1608,1.461,1609,1.461,1610,1.411,1611,1.545,1612,1.545,1613,1.545,1614,1.682,1615,1.682,1616,1.765,1617,1.981,1618,1.981,1619,1.863,1620,1.981,1621,1.981,1622,1.981,1623,1.981,1624,2.051,1625,1.919,1626,1.812,1627,2.051,1628,2.051,1629,2.051,1630,1.919,1631,2.051,1632,2.051,1633,2.051,1634,1.682,1635,2.051,1636,2.131,1637,2.131,1638,2.131,1639,2.131,1640,2.131,1641,2.131,1642,2.131,1643,8.101,1644,4.251,1645,4.251,1646,8.419,1647,4.251,1648,2.953,1649,4.251,1650,2.667,1651,2.953,1652,2.667,1653,2.667,1654,4.251,1655,2.667,1656,4.341,1657,2.667,1658,3.726,1659,2.667,1660,4.251,1661,2.667,1662,2.953,1663,7.794,1664,6.047,1665,2.667,1666,6.047,1667,2.667,1668,2.667,1669,2.667,1670,4.707,1671,2.667,1672,2.479,1673,5.301,1674,4.251,1675,2.953]],["title/basic/pointer.html#指针",[1676,4.796]],["body/basic/pointer.html#指针",[1,0.347,23,1.785,31,0.62,32,0.702,33,0.563,34,0.651,35,0.69,63,1.562,79,3.334,80,7.095,222,3.49,223,1.322,488,3.602,565,2.897,1158,4.746,1462,6.13,1589,6.596,1590,5.782,1591,4.9,1592,4.608,1677,7.304,1678,7.304,1679,7.304,1680,7.304,1681,7.304,1682,7.304,1683,7.304,1684,7.304,1685,6.596,1686,7.304,1687,7.304,1688,7.304,1689,6.596,1690,7.304,1691,7.304,1692,7.304,1693,7.304,1694,7.304,1695,7.304]],["title/basic/pointer.html#指向指针的指针",[1696,5.714]],["body/basic/pointer.html#指向指针的指针",[1,0.361,4,2.51,31,0.465,32,0.506,33,0.562,34,0.65,35,0.688,36,0.776,37,0.862,38,0.925,39,1.061,40,1.082,41,1.134,42,1.258,43,1.407,63,1.688,69,2.746,111,1.502,112,1.589,113,1.714,128,4.71,763,8.356,1420,5.258,1593,9.364,1594,5.258,1595,6.579,1596,6.579,1676,6.114,1689,6.579,1697,8.948,1698,7.285,1699,6.579,1700,7.285,1701,7.285]],["title/basic/pointer.html#为什么需要指针",[1702,5.714]],["body/basic/pointer.html#为什么需要指针",[0,2.102,1,0.361,3,1.198,6,1.145,7,1.108,8,1.087,13,2.58,21,1.959,23,2.134,24,4.038,26,3.542,27,1.332,31,0.676,32,0.606,33,0.416,34,0.314,35,0.332,36,0.375,37,0.416,38,0.447,39,0.512,40,0.522,41,0.548,42,0.607,43,0.679,44,1.132,54,1.562,56,1.014,62,1.226,63,1.145,65,0.902,69,2.875,74,2.054,79,1.096,92,1.387,97,3.074,100,3.749,104,3.647,111,0.725,112,0.767,113,0.827,114,0.977,115,1.018,116,0.977,117,1.12,118,1.171,119,1.171,120,1.145,121,1.255,122,1.302,161,0.767,202,1.653,222,3.508,223,0.977,346,2.359,379,3.311,440,3.147,452,6.053,465,1.335,488,3.277,490,2.73,578,4.476,607,2.003,628,2.248,742,4.647,838,1.444,1025,2.102,1152,2.285,1161,4.272,1162,3.896,1170,2.538,1173,1.507,1390,2.051,1391,2.784,1493,1.444,1598,4.272,1599,3.176,1600,3.176,1601,3.176,1602,3.176,1603,1.627,1604,1.681,1605,1.681,1606,1.74,1607,1.74,1608,1.74,1609,1.74,1610,1.681,1611,1.841,1612,1.841,1613,1.841,1614,2.003,1615,2.003,1616,2.102,1617,2.359,1618,2.359,1619,2.218,1620,2.359,1621,2.359,1622,2.359,1623,2.359,1624,2.443,1625,2.285,1626,2.158,1627,2.443,1628,2.443,1629,2.443,1630,2.285,1631,2.443,1632,2.443,1633,2.443,1634,2.003,1635,2.443,1636,2.538,1637,2.538,1638,2.538,1639,2.538,1640,2.538,1641,2.538,1642,2.538,1643,8.516,1644,4.874,1645,4.874,1646,8.79,1647,4.874,1649,4.874,1650,3.176,1652,3.176,1653,3.176,1654,4.874,1655,3.176,1656,4.67,1657,3.176,1658,4.272,1659,3.176,1660,4.874,1661,3.176,1664,6.652,1665,3.176,1666,6.652,1667,3.176,1668,3.176,1669,3.176,1671,3.176,1672,2.774,1673,5.931,1674,4.874,1703,3.517,1704,3.517,1705,3.517,1706,3.517,1707,3.517,1708,3.517,1709,3.517,1710,3.517,1711,3.517,1712,3.517,1713,3.517,1714,3.517,1715,3.517,1716,3.517,1717,3.517,1718,3.517,1719,3.517,1720,2.784,1721,3.517,1722,3.517,1723,3.517,1724,3.517,1725,3.517,1726,3.517,1727,3.517,1728,3.517,1729,3.517,1730,3.517,1731,3.517,1732,3.517,1733,3.517,1734,3.517,1735,3.517,1736,3.517,1737,3.517,1738,3.517,1739,3.517,1740,3.517,1741,3.517,1742,3.517,1743,3.517,1744,3.517,1745,3.517,1746,3.517,1747,3.517,1748,3.517,1749,8.386,1750,5.397,1751,3.517,1752,3.517,1753,3.517,1754,3.517,1755,3.517,1756,3.517,1757,3.517,1758,3.517,1759,3.517,1760,3.517,1761,3.517,1762,3.517]],["title/basic/pointer.html#哪些值是不可寻址的",[1763,5.714]],["body/basic/pointer.html#哪些值是不可寻址的",[1,0.274,161,1.862,1764,8.537,1765,8.537,1766,8.537,1767,8.537,1768,8.537,1769,8.537,1770,8.537,1771,8.537,1772,8.537,1773,8.537,1774,8.537,1775,8.537]],["title/basic/operator.html",[1,0.184]],["body/basic/operator.html",[1,0.37,2,0.952,4,1.986,31,0.552,32,0.532,33,0.666,35,0.724,69,1.623,73,4.836,74,1.566,79,2.693,145,6.412,455,4.093,1173,3.704,1592,6.381,1776,5.17,1777,4.532,1778,5.17,1779,6.238,1780,5.17,1781,5.17,1782,5.17,1783,5.17,1784,5.17]],["title/basic/operator.html#运算符",[1785,5.714]],["body/basic/operator.html#运算符",[]],["title/basic/operator.html#优先级",[1786,5.714]],["body/basic/operator.html#优先级",[1,0.361,222,4.378,455,4.307,1592,6.002,1787,8.067,1788,8.067,1789,8.067]],["title/basic/operator.html#算术运算符",[1790,5.714]],["body/basic/operator.html#算术运算符",[1,0.354,2,1.319,31,0.507,32,0.551,33,0.726,35,0.889,74,1.619,161,2.054,171,4.502,223,1.435,253,3.398,701,7.16,1720,6.276,1776,7.16,1777,6.276,1778,7.16,1791,7.929,1792,7.929,1793,7.929,1794,7.929,1795,7.929,1796,9.418,1797,7.929,1798,7.929,1799,7.929,1800,7.929]],["title/basic/operator.html#关系运算符",[1801,5.714]],["body/basic/operator.html#关系运算符",[1,0.351,161,1.856,222,4.21,223,1.54,1802,8.511,1803,8.511]],["title/basic/operator.html#逻辑运算符",[1804,5.714]],["body/basic/operator.html#逻辑运算符",[1,0.32,222,3.877,455,4.658,1805,8.725,1806,8.725]],["title/basic/operator.html#位运算符",[1807,5.714]],["body/basic/operator.html#位运算符",[1,0.346,4,2.361,31,0.582,32,0.521,33,0.578,69,2.127,73,5.747,74,1.532,79,3.057,145,7.088,222,4.071,983,4.732,1173,4.205,1345,5.652,1592,6.437,1779,7.082,1780,6.774,1781,6.774,1782,6.774,1783,6.774,1784,6.774,1808,7.501,1809,7.501,1810,7.501,1811,9.11,1812,7.501,1813,7.501,1814,7.501,1815,6.774,1816,7.501,1817,7.501,1818,7.501,1819,7.501]],["title/basic/operator.html#赋值运算符",[1820,5.714]],["body/basic/operator.html#赋值运算符",[1,0.343,1821,7.254,1822,8.643,1823,8.643,1824,8.643,1825,8.643,1826,8.643]],["title/basic/operator.html#其他运算符",[1827,5.714]],["body/basic/operator.html#其他运算符",[1,0.283,1592,5.556,1828,8.808,1829,8.808]],["title/basic/slice.html",[26,2.414]],["body/basic/slice.html",[1,0.369,2,1.147,4,0.987,25,1.633,26,4.131,31,0.64,32,0.696,33,0.729,34,0.859,35,0.872,36,0.877,37,0.974,38,0.975,39,0.836,40,0.852,41,0.893,42,0.991,43,1.108,46,3.498,54,2.674,56,1.296,58,3.588,63,1.338,65,1.472,69,1.627,74,1.887,111,1.183,112,1.251,113,1.349,114,1.594,115,1.66,116,1.059,124,1.886,134,2.433,446,1.92,565,1.092,591,2.751,1017,3.016,1331,2.914,1333,4.842,1777,4.541,1830,5.736,1831,3.441,1832,6.517,1833,5.18,1834,5.18,1835,3.441,1836,3.441,1837,3.441,1838,4.141,1839,5.616,1840,3.345,1841,5.35,1842,3.441,1843,4.928,1844,5.18,1845,5.18,1846,3.441,1847,5.18,1848,5.18,1849,5.18,1850,5.18,1851,5.18,1852,3.441,1853,3.441,1854,3.441,1855,3.441,1856,5.18,1857,3.441,1858,3.441,1859,3.441,1860,3.441,1861,3.441,1862,3.016]],["title/basic/slice.html#slice",[26,2.414]],["body/basic/slice.html#slice",[1,0.359,4,1.673,26,4.086,31,0.618,32,0.576,33,0.639,34,0.576,35,0.61,36,0.688,37,0.764,38,0.82,39,0.94,40,0.959,41,1.005,42,1.115,43,1.247,46,3.07,54,2.963,58,3.316,63,1.446,65,1.657,74,1.319,111,1.331,112,1.408,113,1.519,114,1.794,115,1.869,202,3.035,223,1.501,304,4.195,446,3.253,565,1.849,611,3.253,628,2.689,767,5.11,1831,5.83,1832,7.919,1833,7.491,1834,7.491,1835,5.83,1836,5.83,1837,5.83,1838,5.987,1863,6.456,1864,6.456,1865,6.456,1866,6.456,1867,6.456,1868,6.456,1869,6.456,1870,6.456,1871,6.456,1872,6.456,1873,6.456,1874,6.456,1875,6.456,1876,6.456,1877,6.456,1878,6.456,1879,6.456,1880,5.83,1881,3.765,1882,6.456,1883,4.865,1884,6.456,1885,8.294,1886,6.456,1887,6.456,1888,6.456,1889,6.456,1890,6.456,1891,6.456,1892,6.456,1893,6.456]],["title/basic/slice.html#len-和-cap",[46,1.23,161,0.725,1333,2.097]],["body/basic/slice.html#len-和-cap",[46,3.26,1333,5.556,1894,8.808,1895,8.808]],["title/basic/slice.html#append-和-copy",[161,0.725,1839,1.939,1840,1.939]],["body/basic/slice.html#append-和-copy",[1,0.357,26,3.23,31,0.589,32,0.531,33,0.71,34,0.822,35,0.722,36,0.815,37,0.905,46,3.411,56,1.731,58,3.684,74,1.561,202,3.594,1331,3.893,1839,6.227,1840,4.458,1841,6.83,1842,6.904,1896,7.645,1897,7.645,1898,6.416,1899,7.645,1900,7.645,1901,7.645]],["title/basic/slice.html#切片操作",[1902,5.714]],["body/basic/slice.html#切片操作",[1,0.365,25,2.356,26,2.323,31,0.64,32,0.707,33,0.732,34,0.873,35,0.924,36,0.902,37,1.002,38,1.075,39,0.801,40,0.816,41,0.856,42,0.95,43,1.062,46,3.134,54,1.591,56,1.033,58,2.982,63,1.3,65,1.411,69,2.115,74,1.939,111,1.134,112,1.199,113,1.293,114,1.528,115,1.591,116,1.528,124,2.721,134,2.986,202,2.585,223,0.995,591,3.969,1017,4.353,1226,2.113,1252,7.646,1331,2.323,1333,4.706,1839,3.207,1843,5.575,1844,6.737,1845,6.737,1846,4.966,1847,6.737,1848,6.737,1849,6.737,1850,6.737,1851,6.737,1852,4.966,1853,4.966,1854,4.966,1855,4.966,1856,6.737,1857,4.966,1858,4.966,1859,4.966,1860,4.966,1861,4.966,1903,5.499,1904,5.499,1905,8.467,1906,8.467,1907,5.499,1908,5.499,1909,5.499,1910,7.46,1911,5.499,1912,5.499,1913,4.615,1914,5.499,1915,5.499,1916,5.499,1917,5.499,1918,5.499,1919,5.499]],["title/basic/slice.html#怎样估算切片容量的增长",[1920,5.714]],["body/basic/slice.html#怎样估算切片容量的增长",[2,1.354,32,0.565,223,1.731,1777,7.571,1839,5.577,1862,6.442,1921,6.829,1922,8.137,1923,8.137,1924,8.137,1925,8.137,1926,8.137,1927,8.137,1928,8.137,1929,8.137,1930,8.137,1931,8.137,1932,8.137,1933,8.137,1934,8.137,1935,8.137,1936,8.137,1937,8.137,1938,8.137,1939,8.137,1940,8.137,1941,8.137]],["title/basic/slice.html#长度和容量",[1942,5.714]],["body/basic/slice.html#长度和容量",[26,4.382,32,0.595,58,3.423,1943,8.564,1944,8.564,1945,7.734,1946,8.564,1947,8.564,1948,8.564,1949,8.564,1950,8.564]],["title/basic/struct.html",[1,0.184]],["body/basic/struct.html",[1,0.366,2,1.18,3,1.359,4,1.539,8,1.116,9,2.273,12,3.078,13,2.799,23,2.381,27,1.261,31,0.649,32,0.665,33,0.703,34,0.768,35,0.895,36,0.837,37,0.888,38,1.247,39,1.094,40,1.115,41,1.169,42,1.225,43,1.37,46,2.779,54,1.719,56,1.115,63,1.779,65,1.524,69,1.684,74,1.213,79,1.85,92,1.574,95,2.011,104,1.048,107,2.388,110,1.662,111,1.224,112,1.295,113,1.397,114,1.65,115,1.719,116,2.333,117,1.626,118,1.7,119,1.7,120,1.299,121,1.424,122,1.477,123,1.908,128,1.172,129,2.622,455,1.287,465,1.515,488,1.344,564,1.109,583,1.391,596,1.52,600,2.518,742,5.657,749,2.175,838,1.639,1144,6.647,1145,5.209,1158,5.597,1162,1.74,1169,2.881,1173,3.039,1327,3.159,1338,4.395,1371,1.908,1372,1.908,1373,1.908,1374,1.908,1493,1.639,1590,4.043,1603,1.846,1604,1.908,1605,1.908,1606,1.975,1607,1.975,1608,1.975,1609,1.975,1610,1.908,1611,2.089,1612,2.089,1613,1.261,1672,1.018,1832,6.647,1951,2.177,1952,4.613,1953,4.613,1954,3.604,1955,2.41,1956,2.177,1957,2.177,1958,2.177,1959,2.177,1960,7.093,1961,3.604,1962,3.604,1963,3.604,1964,4.613,1965,3.604,1966,3.604,1967,2.177,1968,3.604,1969,3.604,1970,2.177,1971,2.177,1972,3.159,1973,2.177,1974,2.177,1975,2.177,1976,2.177,1977,2.177,1978,2.177,1979,2.177,1980,3.159,1981,1.74,1982,2.177,1983,2.177,1984,2.177,1985,2.177,1986,2.177,1987,2.177,1988,2.177,1989,2.177,1990,7.093,1991,5.363,1992,3.574,1993,2.177,1994,2.177,1995,3.604,1996,3.604,1997,2.177,1998,2.177,1999,2.177,2000,2.177,2001,2.177,2002,2.881,2003,2.41,2004,2.41,2005,2.41,2006,1.908,2007,2.177,2008,2.177,2009,1.908,2010,2.881,2011,2.881,2012,4.276,2013,6.404,2014,6.404,2015,3.053,2016,2.41,2017,6.061,2018,2.41,2019,1.908,2020,3.604,2021,3.604,2022,3.604,2023,3.604,2024,3.604,2025,2.177]],["title/basic/struct.html#结构体",[2026,5.714]],["body/basic/struct.html#结构体",[1,0.361,2,1.201,4,1.87,8,0.652,13,2.851,23,2.358,27,1.293,31,0.661,32,0.648,33,0.686,34,0.793,35,0.78,36,0.769,37,0.854,38,0.917,39,1.051,40,1.072,41,1.124,42,0.905,43,1.012,54,2.39,56,1.671,63,1.551,65,1.344,69,2.523,104,2.279,111,1.08,112,1.143,113,1.233,114,1.456,115,1.517,116,1.456,117,1.668,118,1.744,119,1.744,128,2.548,129,4.239,161,1.143,226,4.732,247,3.948,596,3.305,600,4.553,611,2.64,996,2.313,1110,4.732,1371,4.148,1372,4.148,1373,4.148,1374,4.148,1430,3.056,1672,2.213,1951,4.732,1952,7.457,1953,7.457,1954,6.518,1956,4.732,1957,4.732,1958,4.732,1959,4.732,1960,9.094,1961,6.518,1962,6.518,1963,6.518,1964,7.457,1965,6.518,1966,6.518,1967,4.732,1968,6.518,1969,6.518,1970,4.732,1971,4.732,1972,5.714,1973,4.732,1974,4.732,1975,4.732,1976,4.732,1977,4.732,1978,4.732,1979,4.732,1980,5.714,1981,3.782,1982,4.732,2027,5.24,2028,5.24,2029,5.24,2030,5.24,2031,5.24,2032,5.24,2033,5.24,2034,5.24,2035,5.24,2036,4.732,2037,5.24,2038,5.24,2039,5.24,2040,5.24,2041,5.24,2042,5.24,2043,5.24,2044,5.24,2045,5.24,2046,5.24,2047,5.24,2048,5.24,2049,5.24,2050,5.24]],["title/basic/struct.html#结构体字面值",[2051,5.714]],["body/basic/struct.html#结构体字面值",[1,0.346,13,2.485,23,2.055,31,0.623,32,0.677,33,0.648,63,1.466,79,2.62,488,2.831,1158,6.335,1173,3.603,2052,8.408]],["title/basic/struct.html#结构体比较",[2053,5.714]],["body/basic/struct.html#结构体比较",[1,0.361,13,2.291,23,1.895,31,0.636,32,0.691,33,0.598,34,0.691,35,0.732,36,0.826,63,1.351,79,2.415,110,3.87,455,4.139,488,2.61,749,5.065,996,3.422,1158,6.467,1162,5.595,1173,3.322,1983,7.001,1984,7.001,1985,7.001,1986,7.001,2054,7.752,2055,7.752]],["title/basic/struct.html#结构体嵌入-匿名成员",[2056,4.203,2057,4.203]],["body/basic/struct.html#结构体嵌入-匿名成员",[1,0.364,2,0.985,3,1.619,4,1.232,8,1.164,9,2.469,12,3.202,13,2.52,23,2.286,27,1.174,31,0.598,32,0.592,33,0.657,34,0.699,35,0.897,36,0.784,37,0.871,38,1.279,39,1.072,40,1.093,41,1.146,42,1.271,43,1.422,46,3.042,63,1.788,65,1.519,74,1.378,79,1.482,92,1.876,95,2.396,107,2.639,111,1.22,112,1.291,113,1.392,114,1.645,115,1.713,116,2.442,117,1.514,118,1.583,119,1.583,120,1.548,121,1.697,122,1.76,123,2.368,161,0.652,223,1.418,465,1.805,564,1.321,583,1.657,742,5.99,838,1.953,1144,7.129,1145,5.827,1158,5.093,1169,3.433,1173,2.891,1226,1.15,1327,3.764,1338,4.714,1493,1.953,1582,2.701,1590,4.686,1603,2.199,1604,2.273,1605,2.273,1606,2.353,1607,2.353,1608,2.353,1609,2.353,1610,2.273,1611,2.489,1612,2.489,1613,1.565,1832,7.129,1987,2.701,1988,2.701,1989,2.701,1990,7.703,1991,6.091,1992,3.95,1993,2.701,1994,2.701,1995,4.295,1996,4.295,1997,2.701,1998,2.701,1999,2.701,2000,2.701,2001,2.701,2002,3.433,2006,2.368,2007,2.701,2008,2.701,2009,2.368,2010,3.433,2011,3.433,2012,4.783,2013,7.078,2014,7.078,2015,3.538,2017,6.157,2019,2.368,2021,4.295,2022,4.295,2023,4.295,2024,4.295,2025,2.701,2058,2.991,2059,2.991,2060,2.991,2061,2.991,2062,2.991,2063,2.991,2064,2.701,2065,2.991,2066,2.991,2067,2.991,2068,2.701,2069,2.991,2070,4.755,2071,2.991,2072,2.991,2073,2.991,2074,2.991,2075,2.991,2076,2.991,2077,2.991,2078,2.991,2079,2.991,2080,2.991,2081,2.991,2082,2.991,2083,2.991,2084,2.991,2085,2.991,2086,2.991,2087,4.755,2088,4.295,2089,2.991,2090,2.991,2091,2.991,2092,2.991,2093,2.254,2094,2.991,2095,2.991,2096,2.51,2097,2.991,2098,2.991,2099,2.991,2100,2.991,2101,2.991,2102,2.991,2103,2.991,2104,2.991,2105,2.991,2106,2.991,2107,2.991,2108,2.991,2109,2.991,2110,2.991]],["title/basic/package.html",[1,0.184]],["body/basic/package.html",[1,0.369,2,1.636,4,1.956,6,2.692,7,3.099,8,1.029,9,1.286,27,2.601,28,4.311,29,4.842,31,0.629,32,0.655,33,0.727,34,0.737,35,0.713,36,0.685,37,0.76,38,0.564,44,2.944,45,2.326,53,2.759,60,2.977,62,3.058,63,0.775,76,2.475,82,2.828,126,2.888,134,1.567,438,3.491,471,3.125,488,2.163,749,3.503,803,2.982,832,5.604,833,2.657,908,3.518,1331,2.714,1340,2.475,1591,2.982,1672,1.877,2111,4.013,2112,4.013,2113,4.013,2114,4.013,2115,4.013,2116,5.803,2117,5.803,2118,5.803,2119,4.013,2120,4.013,2121,4.013,2122,4.013,2123,4.013,2124,3.208,2125,3.518,2126,4.013,2127,4.013,2128,4.013,2129,4.013,2130,3.518,2131,4.013,2132,4.013]],["title/basic/package.html#包",[2133,3.969]],["body/basic/package.html#包",[1,0.262,2,1.745,28,5.476,29,6.15,126,5.304,197,4.358,223,1.477,1340,4.546,2111,7.37,2112,7.37,2134,8.161,2135,8.161,2136,8.161,2137,8.161,2138,8.161,2139,8.161,2140,8.161,2141,8.161,2142,8.161,2143,8.161,2144,8.161,2145,8.161,2146,8.161,2147,8.161,2148,8.161,2149,8.161]],["title/basic/package.html#import",[7,1.8]],["body/basic/package.html#import",[1,0.338,6,2.68,7,3.215,31,0.526,32,0.572,33,0.635,34,0.734,35,0.778,36,0.877,37,0.974,38,1.046,44,3.286,45,4.31,253,3.529,2150,8.234,2151,8.234,2152,8.234,2153,8.234,2154,8.234]],["title/basic/package.html#main",[27,1.41]],["body/basic/package.html#main",[1,0.347,6,2.502,7,2.421,8,1.234,27,2.668,28,5.158,29,5.793,31,0.591,32,0.642,33,0.713,34,0.685,35,0.726,36,0.819,37,0.91,44,2.475,134,2.711,197,4.105,223,1.391,438,3.556,1331,3.906,1591,5.158,2113,6.943,2155,7.688,2156,7.688,2157,7.688,2158,7.688,2159,7.688,2160,7.688,2161,7.688,2162,7.688,2163,7.688,2164,7.688]],["title/basic/package.html#点操作",[2165,5.714]],["body/basic/package.html#点操作",[1,0.341,7,3.205,31,0.579,32,0.629,33,0.699,34,0.663,44,2.395,53,3.314,222,2.897,223,1.346,438,4.193,803,4.992,832,4.238,1672,3.143,1913,6.245,2114,6.72,2115,6.72,2116,8.187,2117,8.187,2118,8.187,2119,6.72,2120,6.72,2121,6.72,2122,6.72,2123,6.72,2166,7.441,2167,7.441,2168,7.441,2169,7.441,2170,6.245,2171,7.441,2172,7.441,2173,7.441,2174,7.441,2175,7.441,2176,7.441,2177,7.441,2178,7.441,2179,7.441,2180,7.441,2181,7.441,2182,7.441,2183,7.441,2184,7.441,2185,7.441,2186,7.441]],["title/basic/package.html#包声明",[2187,5.714]],["body/basic/package.html#包声明",[1,0.254,2,1.564,27,1.951,53,2.891,223,1.431,471,4.572,833,4.726,908,6.258,996,4.15,1226,3.039,2124,5.707,2125,6.258,2126,7.14,2127,7.14,2128,7.14,2129,7.14,2130,6.258,2131,7.14,2132,7.14,2170,6.635,2188,7.906,2189,7.906,2190,7.906,2191,7.906,2192,7.906,2193,7.906,2194,7.906,2195,7.906,2196,6.258,2197,7.906,2198,6.258,2199,7.906,2200,7.906,2201,7.906,2202,7.906,2203,7.906,2204,7.906]],["title/basic/package.html#包命名",[2205,5.714]],["body/basic/package.html#包命名",[2206,8.892]],["title/basic/package.html#初始化包",[2207,5.714]],["body/basic/package.html#初始化包",[1,0.349,2,1.11,4,2.412,6,2.758,8,0.831,9,1.931,27,2.589,31,0.626,32,0.588,33,0.653,34,0.595,35,0.63,44,2.148,60,3.672,62,3.413,63,1.163,82,3.488,202,3.982,488,2.852,644,3.19,749,4.618,832,6.048,1430,5.428,2093,6.383,2196,5.282,2208,6.673,2209,6.673,2210,6.673,2211,5.6,2212,6.673,2213,6.673,2214,6.673,2215,6.673,2216,6.673,2217,6.673,2218,6.673,2219,6.673,2220,6.673,2221,6.673,2222,6.673,2223,6.673,2224,6.673,2225,6.673,2226,6.673,2227,6.673,2228,6.673,2229,6.673,2230,6.673,2231,6.673,2232,6.673,2233,6.673,2234,6.673,2235,6.673,2236,6.673,2237,6.673,2238,6.673,2239,6.673,2240,6.673,2241,5.282,2242,6.673,2243,5.6]],["title/basic/scope.html",[1,0.184]],["body/basic/scope.html",[1,0.366,2,1.354,7,2.563,46,3.012,63,1.418,109,3.168,2244,7.349]],["title/basic/scope.html#作用域",[2245,5.714]],["body/basic/scope.html#作用域",[2,1.358,7,2.571,46,3.021,63,1.423,109,3.178,161,1.78,171,3.901,223,1.477,2244,7.37,2246,8.161,2247,8.161,2248,8.161,2249,8.161,2250,8.161,2251,8.161,2252,8.161,2253,8.161,2254,8.161,2255,8.161,2256,8.161,2257,8.161,2258,8.161,2259,8.161,2260,8.161,2261,8.161,2262,8.161,2263,8.161,2264,8.161,2265,8.161]],["title/basic/interface.html",[1,0.184]],["body/basic/interface.html",[1,0.366,2,0.795,3,2.025,4,1.914,6,1.935,7,1.506,8,1.184,9,2.137,12,3.357,13,2.323,23,2.406,25,2.048,27,1.823,31,0.588,32,0.639,33,0.696,34,0.735,35,0.807,36,0.878,37,0.975,38,0.938,39,1.076,40,1.096,41,1.15,42,1.275,43,1.426,44,1.539,53,1.748,54,1.959,56,1.476,59,2.706,61,1.591,62,2.36,63,1.605,65,1.895,69,1.355,74,0.615,92,1.188,96,1.272,111,1.522,112,1.61,113,1.737,114,2.052,115,2.137,116,1.881,117,1.893,118,1.979,119,1.979,120,1.935,121,2.122,122,2.2,134,1.686,438,1.392,465,1.814,488,1.014,490,1.556,564,2.677,565,0.862,568,1.458,575,3.602,578,2.988,608,4.291,838,1.963,1021,4.723,1026,1.956,1152,1.956,1198,1.956,1331,1.272,1336,2.502,1493,1.963,1594,4.291,1603,2.211,1604,1.439,1605,1.439,1606,1.49,1607,1.49,1608,1.49,1609,1.49,1610,1.439,1611,1.576,1612,1.576,1613,1.576,1614,1.715,1615,1.715,1616,1.799,1672,2.019,1839,1.756,1972,2.383,2266,5.369,2267,2.173,2268,4.317,2269,6.669,2270,4.658,2271,6.114,2272,2.719,2273,6.669,2274,4.317,2275,2.079,2276,3.784,2277,3.602,2278,1.546,2279,2.719,2280,2.502,2281,2.02,2282,3.784,2283,3.01,2284,4.317,2285,2.719,2286,4.317,2287,4.317,2288,5.369,2289,4.317,2290,6.669,2291,1.956,2292,2.719,2293,2.719,2294,4.317,2295,4.317,2296,2.719,2297,5.369,2298,6.114,2299,6.114,2300,4.317,2301,4.317,2302,6.669,2303,2.719,2304,2.719,2305,2.719,2306,2.719,2307,4.317,2308,6.114,2309,2.719,2310,2.719,2311,2.383,2312,4.317,2313,2.719,2314,4.317,2315,3.01,2316,2.719]],["title/basic/interface.html#接口",[2317,4.125]],["body/basic/interface.html#接口",[1,0.365,2,0.751,3,1.93,4,1.846,6,1.844,7,1.421,8,1.163,9,2.062,12,3.313,13,2.25,23,2.37,25,1.934,27,1.758,31,0.564,32,0.613,33,0.68,34,0.714,35,0.786,36,0.853,37,0.947,38,0.905,39,1.038,40,1.058,41,1.109,42,1.23,43,1.376,44,1.453,53,1.65,54,1.88,56,1.43,59,2.579,61,1.502,62,2.264,63,1.573,65,1.828,69,1.279,74,0.572,92,1.105,96,1.183,111,1.468,112,1.553,113,1.676,114,1.979,115,2.062,116,1.805,117,1.804,118,1.886,119,1.886,120,1.844,121,2.022,122,2.097,134,1.591,161,0.611,222,1.091,223,1.025,240,2.53,247,2.111,438,1.296,465,1.712,488,0.943,490,1.469,564,2.632,565,0.802,568,1.376,575,3.4,578,2.868,608,4.09,838,1.853,1021,4.619,1135,2.351,1152,1.82,1198,1.82,1217,5.117,1218,6.433,1220,2.53,1315,2.932,1331,1.183,1336,1.466,1400,2.53,1438,2.53,1493,1.853,1594,4.09,1603,2.087,1604,1.339,1605,1.339,1606,1.386,1607,1.386,1608,1.386,1609,1.386,1610,1.339,1611,1.466,1612,1.466,1613,1.466,1614,1.596,1615,1.596,1616,1.674,1672,1.906,1839,1.634,1972,2.217,2093,2.111,2266,5.117,2267,2.022,2268,4.075,2269,6.433,2270,4.494,2271,5.867,2272,2.53,2273,6.433,2274,4.075,2275,1.962,2276,3.572,2277,3.4,2278,1.438,2279,2.53,2280,2.362,2281,1.879,2282,3.572,2284,4.075,2285,2.53,2286,4.075,2287,4.075,2288,5.117,2289,4.075,2290,6.433,2292,2.53,2293,2.53,2294,4.075,2295,4.075,2296,2.53,2297,5.117,2298,5.867,2299,5.867,2300,4.075,2301,4.075,2302,6.433,2303,2.53,2304,2.53,2305,2.53,2306,2.53,2307,4.075,2308,5.867,2309,2.53,2310,2.53,2311,2.217,2312,4.075,2313,2.53,2314,4.075,2316,2.53,2317,2.022,2318,2.801,2319,2.801,2320,2.801,2321,2.801,2322,2.801,2323,2.801,2324,2.801,2325,2.801,2326,2.801,2327,2.801,2328,2.801,2329,2.801,2330,4.512,2331,2.801,2332,2.801,2333,2.801,2334,2.801,2335,2.801,2336,2.801,2337,2.801,2338,2.801,2339,2.801,2340,2.801,2341,2.801,2342,2.801,2343,2.801,2344,2.801,2345,2.351,2346,2.801,2347,2.801,2348,2.801,2349,2.801,2350,2.801,2351,2.801,2352,2.801,2353,2.801,2354,2.53,2355,2.801,2356,2.801,2357,2.53,2358,2.801,2359,2.801,2360,2.801,2361,2.801,2362,2.53,2363,2.53,2364,2.801,2365,2.801,2366,2.801,2367,2.53,2368,2.801,2369,2.801,2370,2.801,2371,2.801,2372,2.801,2373,2.801,2374,2.801,2375,4.512,2376,2.801,2377,2.801,2378,2.801,2379,2.801,2380,2.801,2381,2.801]],["title/basic/var.html",[1,0.184]],["body/basic/var.html",[1,0.368,2,0.782,4,2.484,8,0.833,21,2.617,24,3.924,26,2.825,27,1.651,31,0.654,32,0.68,33,0.718,34,0.756,35,0.801,36,0.904,37,0.921,38,0.849,39,0.974,40,0.698,41,0.732,54,1.36,56,1.256,59,2.139,60,1.854,63,1.624,68,2.741,74,1.366,76,4.337,79,3.354,82,2.507,84,2.074,105,2.246,107,1.582,109,2.604,110,1.957,488,1.582,564,1.306,565,1.346,568,1.433,578,2.952,1173,4.108,1324,4.828,1325,3.72,1326,3.72,1338,2.46,1339,3.054,1376,3.153,1981,3.392,2267,3.392,2382,4.244,2383,3.392,2384,8.096,2385,4.646,2386,4.244,2387,4.244,2388,4.244,2389,8.096,2390,7.032,2391,3.153,2392,4.244,2393,5.294,2394,4.244,2395,4.244]],["title/basic/var.html#变量",[1699,5.16]],["body/basic/var.html#变量",[1,0.261,4,2.478,21,4.532,24,3.764,26,3.438,31,0.52,74,1.953,110,3.389,171,3.89,197,4.345,223,1.472,565,2.331,611,4.82,1345,7.207,2396,8.137,2397,6.829,2398,8.137,2399,8.137,2400,8.137,2401,8.137,2402,8.137,2403,8.137,2404,7.349,2405,8.137,2406,8.137,2407,8.137]],["title/basic/var.html#声明一组变量",[2408,5.714]],["body/basic/var.html#声明一组变量",[1,0.356,4,2.642,31,0.581,32,0.519,33,0.577,34,0.667,35,0.706,36,0.797,37,0.885,38,0.95,39,1.09,40,1.111,41,1.165,54,2.165,56,1.708,60,2.951,63,1.852,68,4.363,82,2.803,84,3.302,107,2.519,109,2.913,611,4.583,1325,5.922,1326,5.922,1338,3.915,1339,4.861,1345,7.384,1347,6.756,1349,6.756,2382,6.756,2383,5.4,2397,8.224,2409,7.481]],["title/basic/var.html#简短声明",[2410,5.714]],["body/basic/var.html#简短声明",[1,0.36,4,1.803,8,1.083,27,2.146,31,0.635,32,0.659,33,0.731,34,0.775,35,0.821,36,0.927,37,0.823,59,3.167,76,5.284,79,3.437,777,6.283,1173,2.981,1324,6.277,1345,5.242,1981,5.022,2267,5.022,2384,9.24,2385,6.041,2386,6.283,2387,6.283,2397,5.838,2411,6.957,2412,6.957,2413,6.957,2414,6.957,2415,6.283,2416,6.957,2417,6.957,2418,6.957,2419,6.957,2420,6.957,2421,6.957,2422,6.957,2423,6.957]],["title/basic/var.html#赋值",[2424,5.714]],["body/basic/var.html#赋值",[1,0.363,24,4.319,31,0.627,32,0.682,33,0.656,34,0.599,35,0.635,36,0.716,37,0.795,38,0.854,39,0.979,79,3.224,82,2.519,105,3.213,109,2.617,223,1.216,488,2.263,564,1.868,568,2.05,578,3.757,611,3.387,996,2.967,1173,4.34,1376,4.51,2388,6.07,2389,9.146,2390,7.686,2391,4.51,2392,6.07,2393,6.737,2394,6.07,2395,6.07,2425,6.721,2426,6.721,2427,6.721,2428,6.721,2429,6.721,2430,6.721,2431,6.07,2432,6.721,2433,6.721,2434,6.721,2435,6.721,2436,6.721,2437,6.721,2438,6.721,2439,5.32,2440,6.721,2441,6.721,2442,6.721,2443,6.721]],["title/standards/log.html",[2444,3.713]],["body/standards/log.html",[1,0.366,4,1.371,6,2.701,7,2.614,8,1.166,27,2.388,31,0.618,32,0.62,33,0.64,34,0.74,35,0.784,36,0.884,37,0.982,38,0.923,39,1.058,40,1.079,41,1.131,42,1.255,43,1.022,45,3.803,56,1.364,59,3.307,63,0.922,111,1.09,112,1.153,113,1.244,438,4.331,490,1.722,580,3.661,588,3.967,591,5.244,745,5.636,1331,3.956,2383,6.448,2444,6.654,2445,4.777,2446,4.777,2447,4.777,2448,7.658,2449,2.665,2450,5.99,2451,3.674,2452,4.777,2453,6.561,2454,7.494,2455,4.777,2456,4.777,2457,4.777,2458,4.777,2459,4.777,2460,3.986,2461,4.777,2462,6.097,2463,4.777,2464,6.097,2465,4.777,2466,4.777,2467,4.777,2468,4.777,2469,5.244,2470,4.777,2471,3.674,2472,3.549,2473,4.777,2474,5.244,2475,6.561,2476,4.777]],["title/standards/log.html#log",[2444,3.713]],["body/standards/log.html#log",[1,0.344,6,2.672,7,2.586,8,1.022,27,2.373,31,0.525,32,0.57,33,0.633,34,0.732,35,0.775,36,0.875,37,0.971,438,4.446,1331,4.061,2444,6.247,2445,7.414,2446,7.414,2447,7.414,2477,8.21]],["title/standards/log.html#Logger",[2448,4.523]],["body/standards/log.html#Logger",[1,0.355,6,2.126,7,2.057,8,1.04,27,2.063,31,0.589,32,0.454,33,0.503,34,0.582,35,0.617,36,0.696,37,0.773,38,0.83,39,0.951,40,0.97,41,1.017,42,1.128,45,3.419,56,1.227,59,3.804,63,1.139,161,1.424,202,3.071,222,2.543,438,3.865,580,3.292,591,6.032,1331,3.53,2383,7.012,2444,5.431,2448,7.689,2449,3.292,2450,6.652,2451,4.538,2452,5.899,2453,7.547,2454,8.322,2455,5.899,2456,5.899,2457,5.899,2458,5.899,2459,5.899,2460,4.922,2461,5.899,2462,5.482,2463,5.899,2464,5.482,2465,5.899,2466,5.899,2467,5.899,2468,5.899,2478,4.538,2479,6.532,2480,6.532,2481,5.899,2482,6.532,2483,6.532,2484,6.532,2485,6.532,2486,6.532,2487,6.532,2488,6.532,2489,6.532,2490,6.532,2491,6.532,2492,6.532,2493,6.532,2494,6.532,2495,6.532,2496,6.532,2497,6.532,2498,6.532,2499,6.532,2500,6.532,2501,6.532,2502,6.532,2503,6.532,2504,6.532,2505,6.532]],["title/standards/log.html#分类",[2506,5.714]],["body/standards/log.html#分类",[161,2.107,223,1.499,588,4.619,745,6.455,1315,5.383,2444,5.383,2469,5.979,2470,7.48,2471,5.754,2472,5.557,2507,8.283,2508,8.283,2509,8.283,2510,8.283,2511,8.283,2512,8.283,2513,8.283,2514,8.283,2515,8.283,2516,8.283]],["title/standards/log.html#Level",[2473,5.16]],["body/standards/log.html#Level",[1,0.359,4,1.981,6,2.489,7,2.408,8,1.147,27,2.274,31,0.489,32,0.531,33,0.589,34,0.682,35,0.722,36,0.815,37,0.905,38,0.971,39,1.114,40,1.135,41,1.19,42,1.32,43,1.477,45,4.002,56,1.436,111,1.576,112,1.667,113,1.798,438,3.536,1331,3.23,2444,5.988,2448,6.052,2462,6.416,2464,6.416,2474,6.652,2475,8.322,2476,6.904,2517,7.645]],["title/theme/theme-usage.html",[1,0.184]],["body/theme/theme-usage.html",[1,0.365,23,2.423,27,1.704,31,0.644,32,0.633,33,0.667,34,0.772,35,0.817,36,0.922,37,0.944,38,0.877,39,1.006,40,1.025,41,1.075,42,1.192,43,0.949,54,1.998,111,1.013,112,1.072,124,2.433,373,5.761,488,1.655,571,5.807,577,3.298,600,3.101,799,4.512,822,3.548,825,5.465,1841,4.487,1981,3.548,2124,3.548,2282,7.218,2518,7.935,2519,7.652,2520,4.439,2521,4.771,2522,4.439,2523,4.439,2524,4.439,2525,4.439,2526,5.355,2527,6.235,2528,7.207,2529,5.625,2530,5.795,2531,6.235,2532,4.439,2533,4.439,2534,6.235,2535,3.298,2536,3.891,2537,4.439,2538,4.439,2539,4.439,2540,4.439,2541,4.439,2542,6.235,2543,4.439,2544,4.439,2545,6.235,2546,4.439,2547,4.439,2548,4.439,2549,4.439,2550,4.439,2551,4.439,2552,6.235,2553,4.439,2554,7.207,2555,7.207,2556,4.439,2557,6.698,2558,4.439,2559,7.207,2560,3.891,2561,6.825,2562,4.439,2563,7.817,2564,6.235,2565,7.817,2566,6.235,2567,4.439,2568,6.235,2569,4.439,2570,4.439,2571,5.795,2572,4.439,2573,4.439]],["title/theme/theme-usage.html#使用文档主题",[2574,5.714]],["body/theme/theme-usage.html#使用文档主题",[571,5.891,2518,7.369,2519,7.369,2575,8.78,2576,8.78]],["title/theme/theme-usage.html#Quick-Start",[2520,3.796,2521,2.513]],["body/theme/theme-usage.html#Quick-Start",[1,0.353,23,1.578,31,0.639,32,0.576,33,0.639,34,0.74,35,0.783,36,0.884,37,0.764,38,0.82,39,0.94,40,0.959,41,1.005,42,1.115,54,2.401,197,3.447,223,1.168,373,4.66,488,2.174,571,6.149,628,2.689,822,4.66,825,6.566,1815,5.83,1841,5.39,2124,4.66,2518,8.396,2519,8.117,2521,4.958,2522,5.83,2523,5.83,2524,5.83,2525,5.83,2526,6.149,2527,7.491,2528,8.276,2529,4.195,2530,5.418,2531,7.491,2532,5.83,2533,5.83,2534,7.491,2535,4.332,2536,5.11,2537,5.83,2538,5.83,2539,5.83,2540,5.83,2541,5.83,2542,7.491,2543,5.83,2544,5.83,2545,7.491,2546,5.83,2547,5.83,2548,5.83,2549,5.83,2550,5.83,2551,5.83,2577,6.456,2578,6.456,2579,6.456,2580,7.691,2581,6.456,2582,7.491,2583,6.456,2584,6.456,2585,6.456,2586,8.294,2587,6.456,2588,6.456]],["title/theme/theme-usage.html#Index",[124,2.828]],["body/theme/theme-usage.html#Index",[2529,5.687,2552,9.009,2589,7.904,2590,8.752,2591,8.752]],["title/theme/theme-usage.html#添加文档",[2592,5.714]],["body/theme/theme-usage.html#添加文档",[1,0.268,31,0.532,32,0.579,33,0.642,34,0.743,35,0.787,36,0.888,37,0.986,223,1.508,600,5.257,2529,5.415,2553,7.525,2554,9.263,2555,9.263,2556,7.525,2589,7.525,2593,8.333,2594,8.333]],["title/theme/theme-usage.html#Sidebar",[2557,4.796]],["body/theme/theme-usage.html#Sidebar",[1,0.318,23,2.582,27,2.133,31,0.552,32,0.478,33,0.531,34,0.614,35,0.65,36,0.734,37,0.815,38,0.875,39,1.003,40,1.023,41,1.073,42,1.189,43,1.33,111,1.42,112,1.502,161,1.502,223,1.246,373,6.238,577,4.621,799,5.049,1981,4.972,2282,8.076,2529,4.476,2530,5.781,2557,7.253,2558,6.22,2559,8.529,2560,5.452,2561,7.515,2562,6.22,2563,8.944,2564,7.805,2565,8.944,2566,7.805,2567,6.22,2568,7.805,2569,6.22,2570,6.22,2595,8.642,2596,5.781,2597,6.888,2598,6.888,2599,6.888,2600,6.888,2601,6.888,2602,6.888,2603,6.888,2604,6.888,2605,6.888,2606,6.888,2607,6.888]],["title/theme/theme-usage.html#Favicon",[2571,4.796]],["body/theme/theme-usage.html#Favicon",[31,0.561,32,0.61,2571,7.369,2572,7.929,2573,7.929]],["title/commands/build.html",[]],["body/commands/build.html",[1,0.365,2,1.833,3,1.063,6,3.028,7,1.55,8,0.389,9,0.904,12,1.039,23,0.763,27,1.214,31,0.51,32,0.554,33,0.579,34,0.616,35,0.652,36,0.736,37,0.817,38,0.877,39,0.887,40,1.026,41,0.948,42,0.539,43,0.603,44,2.224,48,3.689,54,0.904,56,0.586,59,1.421,61,1.039,62,2.122,63,0.544,65,0.801,79,1.533,92,1.232,96,1.319,97,3.468,110,1.3,111,0.644,112,0.681,113,0.734,114,0.867,115,0.904,116,0.867,117,0.994,118,1.039,119,1.039,120,1.016,121,1.114,122,1.155,126,5.79,142,2.095,143,4.819,151,3.735,374,2.352,376,4.085,465,1.185,471,3.882,476,3.551,488,1.051,490,2.599,500,2.471,564,1.367,570,1.778,571,5.357,577,2.095,578,1.378,583,1.715,607,1.778,745,3.103,799,1.545,802,3.417,803,4.085,804,3.894,822,2.253,833,5.452,834,2.471,838,1.282,839,2.471,1026,3.197,1169,4.987,1188,2.029,1336,1.634,1340,1.739,1369,2.471,1485,4.819,1486,2.471,1493,1.282,1524,2.471,1603,1.444,1604,1.492,1605,1.492,1606,1.545,1607,1.545,1608,1.545,1609,1.545,1610,1.492,1611,1.634,1612,1.634,1613,1.634,1634,1.778,1658,2.471,1672,1.319,1843,1.778,1992,3.068,2130,2.471,2267,3.551,2270,1.969,2291,2.029,2449,1.573,2450,2.253,2521,1.866,2529,3.956,2536,4.819,2560,2.471,2608,4.394,2609,2.471,2610,5.469,2611,5.498,2612,3.956,2613,2.169,2614,3.616,2615,2.471,2616,2.819,2617,3.894,2618,6.239,2619,4.443,2620,4.443,2621,2.471,2622,2.471,2623,2.471,2624,2.819,2625,2.819,2626,8.046,2627,3.894,2628,2.819,2629,2.819,2630,5.498,2631,4.443,2632,2.819,2633,5.498,2634,2.819,2635,2.819,2636,2.471,2637,2.819,2638,2.819,2639,2.819,2640,2.819,2641,2.819,2642,4.443,2643,4.443,2644,5.469,2645,2.819,2646,2.819,2647,2.819,2648,1.778,2649,4.587,2650,2.62,2651,2.819,2652,6.088,2653,7.516,2654,3.122,2655,2.819,2656,2.819,2657,3.122,2658,2.819,2659,3.122,2660,2.819,2661,3.122,2662,2.819,2663,2.819,2664,4.443,2665,2.471,2666,2.819,2667,3.122,2668,3.122,2669,2.819,2670,2.819,2671,3.122,2672,3.122,2673,2.819,2674,2.819,2675,3.122,2676,3.122,2677,2.819,2678,3.122,2679,2.819,2680,4.919,2681,2.819,2682,2.819,2683,3.122,2684,2.819,2685,2.819,2686,2.819,2687,3.122,2688,2.819,2689,3.122,2690,3.122,2691,3.122,2692,2.819,2693,3.122,2694,2.819,2695,3.894,2696,2.819,2697,2.627,2698,2.471,2699,2.819,2700,2.819,2701,1.778,2702,2.819,2703,2.819,2704,6.788,2705,2.253,2706,2.819,2707,6.788,2708,4.443,2709,3.103,2710,2.352,2711,2.169,2712,2.352,2713,2.819]],["title/commands/build.html#命令",[2714,5.16]],["body/commands/build.html#命令",[]],["title/commands/build.html#工具",[2715,5.714]],["body/commands/build.html#工具",[1,0.324,2,1.822,3,1.066,6,3.03,7,1.552,8,0.389,9,0.906,12,1.042,23,0.765,27,1.216,31,0.511,32,0.555,33,0.58,34,0.617,35,0.653,36,0.737,37,0.818,38,0.878,39,0.888,40,0.905,41,0.949,42,0.54,43,0.604,44,2.227,48,3.693,54,0.906,56,0.588,59,1.424,61,1.042,62,1.718,63,0.545,65,0.803,79,1.536,92,1.234,96,1.322,97,3.473,110,1.303,111,0.645,112,0.682,113,0.736,114,0.869,115,0.906,116,0.869,117,0.996,118,1.042,119,1.042,120,1.019,121,1.117,122,1.158,126,5.794,142,2.099,143,4.826,151,3.741,201,2.826,202,2.866,222,1.218,223,1.103,304,2.033,374,2.358,376,4.091,465,1.187,471,3.886,476,3.557,488,1.053,490,2.252,500,2.477,564,1.369,570,1.782,571,5.362,577,2.099,578,1.381,583,1.718,607,1.782,745,3.109,799,1.548,802,3.423,803,4.091,804,3.901,822,2.259,833,5.33,834,2.477,838,1.285,839,2.477,1026,3.202,1169,4.993,1188,2.033,1319,4.235,1336,1.638,1340,1.743,1369,2.477,1485,3.901,1486,2.477,1493,1.285,1524,2.477,1542,2.259,1603,1.447,1604,1.496,1605,1.496,1606,1.548,1607,1.548,1608,1.548,1609,1.548,1610,1.496,1611,1.638,1612,1.638,1613,1.638,1658,2.477,1672,1.322,1843,1.782,1992,3.072,2130,2.477,2196,3.901,2267,3.557,2270,1.974,2291,2.033,2449,1.577,2450,2.259,2521,1.87,2529,3.962,2536,4.826,2560,2.477,2608,4.401,2609,2.477,2610,5.475,2611,5.506,2612,3.962,2613,2.174,2614,3.62,2615,2.477,2616,2.826,2617,3.901,2618,6.247,2619,4.451,2620,4.451,2621,2.477,2622,2.477,2623,2.477,2624,2.826,2625,2.826,2626,8.052,2627,3.901,2628,2.826,2629,2.826,2630,5.506,2631,4.451,2632,2.826,2633,5.506,2634,2.826,2635,2.826,2636,2.477,2637,2.826,2638,2.826,2639,2.826,2640,2.826,2641,2.826,2642,4.451,2643,4.451,2644,5.475,2645,2.826,2646,2.826,2647,2.826,2649,2.358,2650,2.626,2651,2.826,2655,2.826,2656,2.826,2658,2.826,2660,2.826,2662,2.826,2663,2.826,2664,4.451,2665,2.477,2666,2.826,2669,2.826,2670,2.826,2673,2.826,2674,2.826,2677,2.826,2679,2.826,2681,2.826,2682,2.826,2684,2.826,2685,2.826,2686,2.826,2688,2.826,2692,2.826,2694,2.826,2695,3.901,2696,2.826,2697,2.631,2698,2.477,2699,2.826,2700,2.826,2701,1.782,2702,2.826,2703,2.826,2704,5.506,2705,2.259,2706,2.826,2707,6.795,2708,4.451,2709,3.109,2710,2.358,2711,2.174,2712,2.358,2713,2.826,2714,4.451,2716,3.129,2717,3.129,2718,3.129,2719,3.129,2720,3.129,2721,3.129,2722,3.129,2723,3.129,2724,3.129,2725,3.129,2726,3.129,2727,3.129,2728,3.129,2729,3.129,2730,3.129,2731,3.129,2732,3.129,2733,3.129,2734,3.129,2735,3.129,2736,3.129,2737,3.129,2738,3.129,2739,3.129,2740,3.129,2741,3.129,2742,3.129,2743,3.129,2744,3.129,2745,3.129,2746,3.129,2747,3.129,2748,6.097,2749,7.524,2750,3.129,2751,3.129,2752,3.129,2753,3.129,2754,3.129,2755,3.129,2756,3.129,2757,3.129,2758,3.129,2759,3.129,2760,3.129,2761,3.129,2762,2.477,2763,3.129,2764,3.129,2765,3.129,2766,3.129,2767,3.129,2768,3.129,2769,3.129,2770,3.129,2771,3.129,2772,3.129,2773,3.129,2774,4.928,2775,3.129,2776,6.097,2777,3.129,2778,3.129,2779,3.129,2780,3.129,2781,3.129,2782,3.129,2783,3.129,2784,3.129,2785,3.129,2786,3.129,2787,3.129,2788,3.129,2789,3.129,2790,3.129,2791,3.129,2792,3.129,2793,3.129,2794,3.129,2795,3.129,2796,3.129,2797,3.129,2798,3.129,2799,3.129,2800,3.129,2801,3.129,2802,3.129,2803,3.129,2804,3.129,2805,3.129,2806,3.129,2807,3.129,2808,3.129,2809,3.129,2810,3.129,2811,3.129,2812,3.129,2813,3.129,2814,3.129,2815,3.129,2816,3.129,2817,3.129,2818,3.129,2819,3.129,2820,3.129,2821,3.129,2822,3.129,2823,3.129,2824,3.129,2825,3.129,2826,3.129,2827,3.129,2828,3.129,2829,3.129,2830,3.129,2831,3.129,2832,3.129,2833,3.129,2834,3.129,2835,3.129,2836,3.129,2837,3.129,2838,3.129,2839,3.129,2840,3.129,2841,3.129,2842,3.129,2843,3.129,2844,3.129,2845,3.129,2846,3.129]],["title/concurrent/channel.html",[22,2.991]],["body/concurrent/channel.html",[1,0.369,2,1.064,4,0.707,8,0.693,11,6.076,14,4.284,15,5.141,20,3.033,21,5.082,22,5.652,25,3.011,27,0.673,31,0.622,32,0.662,33,0.757,34,0.76,35,0.845,36,0.908,37,1.008,38,1.006,39,1.095,40,1.043,41,0.866,42,0.763,43,0.853,44,1.422,46,2.367,53,0.997,58,3.647,60,1.076,62,1.539,63,1.64,65,0.7,74,1.136,76,1.519,79,2.654,105,2.111,107,0.918,109,1.062,111,0.562,112,0.595,113,0.641,134,2.908,564,0.758,565,1.832,578,2.456,590,3.998,1011,5.063,1012,3.495,1026,3.616,1173,1.169,1331,1.152,1333,3.51,1338,3.348,1488,1.553,1591,1.83,1838,1.968,2278,4.233,2469,1.968,2472,2.963,2847,2.727,2848,3.988,2849,3.988,2850,2.463,2851,7.838,2852,3.495,2853,5.025,2854,2.159,2855,2.159,2856,2.159,2857,2.159,2858,2.463,2859,2.463,2860,2.463,2861,2.463,2862,2.055,2863,1.63,2864,2.159,2865,1.83,2866,5.776,2867,2.463,2868,3.988]],["title/concurrent/channel.html#channel",[22,2.991]],["body/concurrent/channel.html#channel",[1,0.362,2,0.909,4,0.688,8,0.68,11,6.045,14,4.232,15,5.114,20,2.979,21,5.044,22,5.629,25,2.971,27,0.656,31,0.619,32,0.658,33,0.753,34,0.753,35,0.839,36,0.9,37,0.999,38,0.995,39,1.082,40,1.029,41,0.851,42,0.747,43,0.835,44,1.392,46,2.331,53,0.971,58,3.621,60,1.048,62,1.507,63,1.63,65,0.682,74,1.116,76,1.48,79,2.544,105,2.066,107,0.894,109,1.034,111,0.548,112,0.579,113,0.625,134,2.879,161,0.943,202,2.569,222,1.683,223,1.639,265,1.48,303,1.339,313,2.002,341,2.23,564,0.738,565,1.804,578,2.413,590,3.936,611,1.339,628,1.106,644,1.27,1011,4.985,1012,3.422,1026,3.552,1071,2.399,1072,2.399,1074,2.399,1077,2.399,1173,1.138,1226,1.662,1319,1.845,1331,1.122,1333,3.448,1338,3.296,1488,1.513,1591,1.782,1838,1.918,1883,2.002,1945,2.399,2068,2.399,2278,4.191,2367,2.399,2469,1.918,2472,2.9,2478,1.845,2848,3.904,2849,3.904,2850,2.399,2851,7.799,2852,3.422,2853,4.936,2854,2.103,2855,2.103,2856,2.103,2857,2.103,2858,2.399,2859,2.399,2860,2.399,2861,2.399,2862,2.002,2863,1.588,2864,2.103,2865,1.782,2866,5.688,2867,2.399,2868,3.904,2869,2.657,2870,2.657,2871,2.657,2872,2.657,2873,2.657,2874,2.657,2875,2.657,2876,2.657,2877,2.657,2878,2.657,2879,2.657,2880,2.657,2881,2.657,2882,2.399,2883,2.657,2884,2.657,2885,2.657,2886,2.657,2887,2.657,2888,2.657,2889,2.657,2890,2.657,2891,2.657,2892,2.657,2893,2.657,2894,2.657,2895,2.657,2896,2.657,2897,2.657,2898,2.657,2899,2.657,2900,2.657,2901,2.657,2902,2.657,2903,2.657,2904,2.657,2905,2.657,2906,2.657,2907,2.657,2908,2.657,2909,2.657,2910,2.657,2911,2.657,2912,2.657,2913,2.657,2914,2.657,2915,2.657,2916,2.657,2917,2.657,2918,2.657,2919,2.657,2920,2.657,2921,2.657,2922,2.657,2923,4.323,2924,2.657,2925,2.657,2926,4.323,2927,4.323,2928,2.657,2929,2.657,2930,4.323,2931,2.657,2932,2.657,2933,2.657,2934,2.657,2935,2.657,2936,2.657,2937,2.657,2938,2.657,2939,2.657,2940,2.657,2941,2.657,2942,2.657,2943,2.657,2944,2.657,2945,2.657,2946,2.657,2947,2.657,2948,2.657,2949,2.657,2950,2.657,2951,2.657,2952,2.657,2953,2.657,2954,2.657,2955,2.657,2956,2.657,2957,2.657,2958,2.657,2959,4.323,2960,2.657,2961,2.657,2962,2.657,2963,2.657,2964,2.657,2965,2.657,2966,2.657,2967,2.657,2968,2.657,2969,2.657,2970,2.657,2971,2.657,2972,2.657,2973,2.657,2974,2.657,2975,2.657,2976,2.657,2977,2.657,2978,2.657,2979,2.23,2980,2.657,2981,2.657,2982,2.657,2983,2.657,2984,2.657,2985,2.657,2986,2.657,2987,2.657,2988,2.657,2989,2.657,2990,2.657,2991,2.657,2992,2.657,2993,2.657,2994,2.657,2995,2.657,2996,2.399,2997,2.657,2998,2.657,2999,2.657,3000,2.657,3001,2.657,3002,2.399,3003,2.657,3004,2.657,3005,2.657,3006,2.23,3007,2.657,3008,2.657,3009,2.657,3010,2.657,3011,2.657,3012,2.657,3013,2.657,3014,2.657,3015,2.657,3016,2.657,3017,2.657,3018,2.657,3019,2.657,3020,2.657,3021,2.657,3022,2.657,3023,2.657,3024,2.657,3025,2.657,3026,2.657,3027,2.657,3028,2.657,3029,2.657,3030,2.657,3031,2.657,3032,2.657,3033,2.657,3034,2.657,3035,2.657,3036,2.657,3037,2.657,3038,2.657,3039,2.657,3040,2.657,3041,2.657,3042,2.657,3043,2.657,3044,2.657,3045,2.657,3046,2.657,3047,2.657]],["title/basic/function.html",[1,0.184]],["body/basic/function.html",[1,0.368,2,1.371,3,0.929,4,1.442,6,1.437,7,0.859,8,1.283,9,2.789,10,4.418,22,1.427,23,0.667,24,2.042,25,1.169,26,1.152,27,1.734,31,0.601,32,0.621,33,0.75,34,0.814,35,0.779,36,0.844,37,0.89,38,1.006,39,1.153,40,1.176,41,0.996,42,1.213,43,1.235,44,0.878,53,1.614,54,1.61,56,1.6,58,1.09,60,1.076,61,0.908,62,0.95,63,1.797,64,1.968,65,1.133,69,1.992,74,1.306,79,2.789,82,1.022,84,1.949,92,1.076,100,1.894,101,5.224,104,1.186,105,1.304,111,1.319,112,1.395,113,1.505,114,1.227,115,1.278,116,1.227,117,0.868,118,0.908,119,0.908,120,0.888,121,0.973,122,1.009,128,1.326,446,1.374,465,1.035,466,1.772,564,1.777,565,1.832,568,1.951,606,2.159,607,1.553,608,1.968,742,3.51,838,1.12,1014,1.772,1173,3.011,1390,1.59,1493,1.12,1603,1.261,1604,1.304,1605,1.304,1606,1.35,1607,1.35,1608,1.35,1609,1.35,1610,1.304,1611,1.427,1612,1.427,1613,1.427,1614,1.553,1615,1.553,1840,2.575,2015,1.63,2393,2.159,2471,1.894,2521,1.63,2650,2.289,2863,1.63,3048,1.772,3049,5.025,3050,5.025,3051,6.212,3052,2.463,3053,2.463,3054,2.463,3055,2.463,3056,5.063,3057,4.404,3058,5.025,3059,2.463,3060,2.463,3061,2.463,3062,2.463,3063,2.463,3064,3.187,3065,3.988,3066,2.463,3067,2.463,3068,2.463,3069,2.463,3070,1.772,3071,1.894,3072,2.159,3073,2.463,3074,2.159,3075,2.463,3076,1.968,3077,2.055,3078,2.159,3079,2.159,3080,2.159,3081,3.988,3082,4.404,3083,2.463,3084,2.463,3085,2.463,3086,1.83,3087,2.463,3088,2.463,3089,1.83,3090,3.988,3091,1.72,3092,3.495,3093,2.463,3094,3.495,3095,2.463,3096,2.463,3097,2.463,3098,2.463,3099,2.463,3100,2.463,3101,2.727,3102,6.345,3103,3.169,3104,5.025,3105,2.463,3106,5.776,3107,1.968,3108,2.463]],["title/basic/function.html#函数",[644,2.731]],["body/basic/function.html#函数",[]],["title/basic/function.html#声明函数",[230,5.16]],["body/basic/function.html#声明函数",[1,0.362,4,1.733,8,1.259,9,2.456,31,0.542,32,0.589,33,0.654,34,0.596,35,0.632,36,0.713,37,0.791,38,0.849,39,0.974,40,0.993,41,1.042,42,1.155,43,1.292,56,1.593,63,1.852,65,1.716,79,2.644,111,1.379,112,1.459,113,1.573,114,1.859,115,1.936,116,1.859,446,3.371,564,1.859,568,2.04,1173,3.636,1219,6.041,2015,3.998,3048,4.347,3049,8.415,3050,8.415,3051,7.384,3052,6.041,3053,6.041,3054,6.041,3055,6.041,3109,6.689,3110,6.689,3111,6.689,3112,6.689,3113,6.689,3114,6.689,3115,6.041,3116,6.041,3117,5.614,3118,5.614,3119,6.689,3120,6.689,3121,6.041,3122,6.689,3123,6.689]],["title/basic/function.html#参数",[3124,5.16]],["body/basic/function.html#参数",[2,1.599,22,4.297,24,3.797,26,3.468,171,4.873,223,1.485,607,4.676,1840,4.788,3125,8.21,3126,8.21,3127,8.21,3128,8.21,3129,8.21,3130,8.21,3131,8.21,3132,8.21,3133,8.21,3134,8.21,3135,8.21,3136,8.21,3137,8.21,3138,8.21,3139,8.21,3140,8.21]],["title/basic/function.html#可变参数",[3141,5.714]],["body/basic/function.html#可变参数",[1,0.364,8,0.86,9,1.999,25,2.959,31,0.604,32,0.657,33,0.787,34,0.843,35,0.652,36,0.736,37,0.817,38,0.877,39,1.006,40,1.404,41,1.075,42,1.192,43,1.334,53,2.525,63,1.648,64,4.984,69,1.958,74,1.768,104,3.003,111,1.423,112,1.506,113,1.624,222,2.688,1319,4.797,2471,4.797,3056,7.847,3057,7.485,3058,8.539,3059,6.236,3060,6.236,3142,6.905,3143,6.905,3144,6.905,3145,6.905,3146,6.905,3147,6.905,3148,6.905,3149,6.905]],["title/basic/function.html#函数作为值",[3150,5.714]],["body/basic/function.html#函数作为值",[1,0.36,2,1.323,8,1.174,9,2.301,27,1.962,31,0.508,32,0.552,33,0.727,34,0.709,35,0.751,36,0.847,37,0.941,38,1.01,39,1.374,79,2.478,84,4.164,3061,7.181,3062,7.181,3063,7.181,3151,7.951,3152,7.951,3153,7.951]],["title/basic/function.html#函数作为参数",[3154,5.714]],["body/basic/function.html#函数作为参数",[1,0.356,8,1.134,9,2.637,23,1.833,31,0.582,32,0.521,33,0.578,34,0.669,35,0.708,36,0.799,63,1.875,74,1.532,79,2.839,100,5.211,101,7.263,564,2.084,565,2.61,608,5.414,1173,4.205,3064,6.576,3065,8.227,3066,6.774,3155,7.501,3156,7.501,3157,6.774,3158,7.501,3159,7.501,3160,7.501,3161,7.501]],["title/basic/function.html#闭包",[3162,5.16]],["body/basic/function.html#闭包",[1,0.357,2,1.334,8,1.299,9,2.745,31,0.606,32,0.557,33,0.618,34,0.715,35,0.757,36,0.855,37,0.949,38,1.019,39,1.168,63,1.653,74,1.638,3067,7.243,3162,7.243,3163,8.02,3164,8.02,3165,8.02]],["title/basic/function.html#错误",[263,4.796]],["body/basic/function.html#错误",[2,1.639,105,4.093,161,1.867,564,2.379,3068,7.734,3069,7.734,3166,8.564,3167,8.564,3168,8.564,3169,8.564,3170,8.564,3171,7.187]],["title/basic/function.html#关键字-defer",[10,1.828,3172,4.203]],["body/basic/function.html#关键字-defer",[1,0.364,3,1.592,4,1.727,6,1.522,8,1.257,9,2.771,10,4.725,24,2.163,31,0.426,32,0.463,33,0.514,34,0.755,35,0.629,36,0.498,37,0.553,38,0.846,39,0.681,40,0.989,41,0.728,42,1.151,43,0.903,53,1.709,54,2.248,56,1.59,58,1.869,61,1.556,63,1.621,65,1.2,69,1.326,79,2.788,82,1.752,92,1.844,101,3.248,111,0.964,112,1.02,113,1.1,114,1.299,115,1.353,116,1.299,117,1.489,118,1.556,119,1.556,120,1.522,121,1.669,122,1.731,128,2.274,223,0.846,253,2.856,465,1.774,466,3.038,564,1.299,565,1.909,568,2.368,606,3.701,638,3.248,838,1.921,1014,3.038,1390,2.727,1493,1.921,1603,2.163,1604,2.235,1605,2.235,1606,2.314,1607,2.314,1608,2.314,1609,2.314,1610,2.235,1611,2.447,1612,2.447,1613,2.447,1614,2.663,1615,2.663,2393,3.701,2521,2.795,2762,3.701,2863,2.795,3051,6.378,3070,3.038,3071,3.248,3072,3.701,3073,4.223,3074,3.701,3075,4.223,3076,3.375,3077,3.523,3078,3.701,3079,3.701,3080,3.701,3081,6.019,3082,6.147,3083,4.223,3084,4.223,3085,4.223,3086,3.137,3087,4.223,3088,4.223,3089,3.137,3090,6.019,3091,2.95,3092,5.275,3093,4.223,3094,5.275,3095,4.223,3096,4.223,3097,4.223,3098,4.223,3099,4.223,3100,4.223,3121,4.223,3173,4.676,3174,4.676,3175,4.676,3176,4.676,3177,4.223,3178,4.676,3179,4.676,3180,4.676,3181,4.676,3182,3.701,3183,4.676,3184,4.676,3185,4.676,3186,4.676,3187,4.676,3188,4.676,3189,3.924,3190,4.676,3191,4.676,3192,4.676,3193,4.676,3194,4.676,3195,4.676,3196,4.676,3197,4.676,3198,4.676,3199,4.676,3200,4.676,3201,4.676,3202,4.676,3203,4.676,3204,4.676,3205,4.676,3206,4.676,3207,4.676,3208,4.676]],["title/basic/function.html#传入函数的那些参数值后来怎么样了",[3209,5.714]],["body/basic/function.html#传入函数的那些参数值后来怎么样了",[1,0.359,6,2.204,7,2.133,8,1.064,9,1.96,27,2.429,31,0.546,32,0.47,33,0.759,34,0.604,35,0.639,36,0.722,37,0.801,38,0.86,39,0.986,40,1.005,41,1.054,42,1.169,43,1.308,44,2.18,56,1.76,60,2.671,62,2.36,69,2.657,79,2.11,111,1.396,112,1.476,113,1.593,222,2.636,223,1.547,253,2.901,313,5.102,742,5.911,3102,9.166,3103,5.337,3104,8.462,3105,6.114,3106,8.889,3107,4.887,3108,6.114,3210,6.77,3211,6.77,3212,6.77,3213,6.77,3214,6.77,3215,6.77,3216,6.77,3217,6.77,3218,6.77,3219,6.77,3220,6.77,3221,6.77,3222,6.77,3223,6.77,3224,6.77]],["title/standards/time.html",[2701,3.255]],["body/standards/time.html",[1,0.367,2,0.705,3,0.637,4,0.484,6,0.608,7,0.589,8,0.949,9,1.645,11,1.147,12,1.072,13,1.253,15,2.974,18,1.117,21,2.362,22,2.974,23,1.037,24,0.864,25,0.801,27,0.795,31,0.652,32,0.616,33,0.652,34,0.721,35,0.743,36,0.749,37,0.869,38,0.933,39,1.023,40,1.091,41,1.144,42,1.213,43,1.419,44,0.602,53,1.843,54,0.932,56,0.796,57,3.989,58,1.287,59,0.851,62,2.658,63,0.561,65,1.088,67,1.48,69,0.913,74,1.029,75,2.367,82,2.327,96,2.968,97,1.065,105,1.539,108,3.636,109,0.728,110,0.778,111,1.28,112,1.354,113,0.998,114,0.894,115,0.932,116,0.519,117,2.34,118,0.622,119,0.622,120,1.048,121,0.667,122,0.692,124,0.925,129,0.96,134,2.004,151,1.975,379,1.147,439,1.924,447,2.031,455,0.998,465,0.709,474,2.236,487,1.09,495,1.408,564,0.519,565,1.215,566,1.215,568,1.537,583,1.122,590,1.742,607,1.065,1014,1.215,1173,1.38,1390,1.877,1495,3.989,1630,2.092,1656,1.041,1672,2.4,1779,3.638,1843,1.065,2270,1.179,2278,0.96,2460,6.24,2521,1.924,2627,2.548,2701,5.771,2862,3.797,2863,3.976,2864,1.48,3064,1.349,3086,2.845,3089,2.16,3091,4.196,3225,3.195,3226,3.559,3227,1.688,3228,2.702,3229,1.869,3230,4.282,3231,5.304,3232,6.167,3233,2.907,3234,1.688,3235,5.132,3236,1.688,3237,1.688,3238,2.907,3239,1.688,3240,1.688,3241,2.907,3242,1.688,3243,1.869,3244,1.869,3245,1.688,3246,1.869,3247,1.254,3248,2.907,3249,1.688,3250,1.688,3251,1.869,3252,1.869,3253,5.132,3254,1.688,3255,3.061,3256,1.688,3257,1.688,3258,5.608,3259,1.688,3260,1.688,3261,1.349,3262,1.688,3263,1.688,3264,2.907,3265,1.688,3266,1.688,3267,1.688,3268,1.688,3269,1.688,3270,1.688,3271,1.48,3272,1.688,3273,4.551,3274,1.869,3275,3.829,3276,1.688,3277,3.237,3278,1.688,3279,1.688,3280,1.688,3281,1.688,3282,1.688,3283,3.829,3284,4.551,3285,1.688,3286,6.888,3287,5.562,3288,6.888,3289,6.007,3290,2.907,3291,2.702,3292,1.688,3293,1.688,3294,5.608,3295,1.688,3296,2.907,3297,1.688,3298,3.829,3299,1.688,3300,2.907,3301,1.48,3302,1.688,3303,3.829,3304,1.688,3305,1.688,3306,3.989,3307,1.688,3308,1.688,3309,2.907,3310,2.907,3311,2.907,3312,2.907,3313,1.688,3314,2.907,3315,1.688,3316,1.688,3317,2.907,3318,2.907,3319,1.688,3320,1.688,3321,1.688,3322,1.688,3323,2.907,3324,2.907,3325,1.688,3326,6.345,3327,1.688,3328,2.907,3329,1.688,3330,1.688,3331,5.608,3332,6.345,3333,2.907,3334,2.907,3335,2.907,3336,1.688,3337,1.688,3338,1.688,3339,3.829,3340,3.829,3341,1.688,3342,1.688,3343,1.688,3344,1.688,3345,1.688,3346,1.688,3347,1.688,3348,1.688,3349,1.688,3350,1.688,3351,1.688,3352,1.688,3353,1.688,3354,2.907,3355,1.298,3356,2.907,3357,1.688,3358,1.688,3359,1.48,3360,7.723,3361,4.498,3362,1.688,3363,4.23,3364,4.551,3365,2.907,3366,1.688,3367,1.688,3368,1.688,3369,1.688,3370,1.688,3371,4.23,3372,1.688,3373,1.688,3374,1.688,3375,1.688,3376,2.907,3377,1.48,3378,1.688,3379,1.688,3380,1.688,3381,2.907,3382,1.688,3383,2.907,3384,1.688,3385,1.688,3386,1.688,3387,1.688,3388,1.688,3389,1.688,3390,2.907,3391,2.907,3392,1.688,3393,1.688,3394,1.688,3395,2.548,3396,1.688,3397,2.548,3398,1.688,3399,1.688,3400,2.907,3401,1.688,3402,1.688,3403,1.688,3404,1.688]],["title/standards/time.html#time",[2701,3.255]],["body/standards/time.html#time",[75,3.399,96,3.448,171,4.58,223,1.734,2701,4.649,2862,6.15,3091,5.149,3225,6.15,3226,6.85,3227,7.37,3228,6.85,3230,6.15,3231,5.891,3405,8.161,3406,8.161,3407,8.161,3408,8.161,3409,8.161,3410,8.161,3411,8.161,3412,8.161,3413,8.161,3414,8.161,3415,8.161,3416,8.161,3417,8.161,3418,8.161]],["title/standards/time.html#时区",[3419,5.714]],["body/standards/time.html#时区",[1,0.358,2,1.052,8,0.787,9,2.369,15,4.284,18,3.78,31,0.523,32,0.439,33,0.487,34,0.564,35,0.597,36,0.674,37,0.748,38,0.803,39,0.921,40,0.939,41,0.985,42,1.092,43,1.221,56,1.188,105,3.912,111,1.304,112,1.379,265,4.559,303,4.124,455,3.377,564,1.757,565,2.345,568,2.927,644,3.023,932,5.711,996,2.791,1087,4.565,1672,4.054,1779,6.927,2460,6.838,2701,4.662,3231,6.927,3232,8.342,3233,7.391,3234,5.711,3235,8.976,3236,5.711,3237,5.711,3238,7.391,3239,5.711,3240,5.711,3241,7.391,3242,5.711,3420,6.324,3421,6.324,3422,6.324,3423,5.006,3424,6.324,3425,6.324,3426,6.324,3427,6.324,3428,6.324,3429,6.324,3430,6.324,3431,6.324,3432,6.324,3433,6.324,3434,6.324,3435,6.324,3436,6.324,3437,6.324,3438,6.324,3439,6.324,3440,6.324,3441,6.324,3442,6.324,3443,6.324,3444,6.324,3445,6.324]],["title/standards/time.html#Time",[2701,3.255]],["body/standards/time.html#Time",[1,0.359,2,0.48,3,0.984,4,0.748,6,0.94,7,0.91,8,0.72,9,1.339,13,0.854,15,1.512,23,0.706,24,1.336,25,1.238,27,1.141,31,0.669,32,0.603,33,0.595,34,0.688,35,0.729,36,0.616,37,0.782,38,0.84,39,0.842,40,0.859,41,1.03,42,0.999,43,1.397,44,0.93,53,2.418,54,1.339,56,0.869,65,1.187,67,2.286,69,1.311,74,0.945,75,1.926,96,1.954,97,1.645,108,4.011,111,0.953,112,1.009,113,1.088,114,0.803,115,0.836,116,0.803,117,2.766,118,0.962,119,0.962,120,1.506,121,1.031,122,1.069,129,1.483,151,2.838,161,1.683,223,1.047,303,1.456,304,1.877,439,1.727,465,1.096,474,2.006,487,1.684,565,0.827,566,1.877,996,1.275,1173,1.982,1215,2.006,1226,1.11,1320,2.286,1390,2.697,1495,5.234,1572,1.877,1630,3.005,1672,1.22,1843,1.645,1883,2.176,2093,2.176,2357,2.608,2460,6.108,2478,3.213,2521,1.727,2627,3.661,2701,5.868,3002,2.608,3064,2.085,3091,4.564,3225,3.485,3226,3.881,3230,2.176,3231,4.175,3232,4.854,3245,2.608,3248,4.177,3249,2.608,3250,2.608,3253,6.533,3254,2.608,3255,4.175,3256,2.608,3257,2.608,3258,6.97,3259,2.608,3260,2.608,3261,2.085,3262,2.608,3263,2.608,3264,4.177,3265,2.608,3266,2.608,3267,2.608,3268,2.608,3269,2.608,3270,2.608,3271,2.286,3272,2.608,3273,5.972,3275,5.223,3276,4.177,3277,4.121,3278,2.608,3279,2.608,3280,2.608,3281,2.608,3282,2.608,3283,5.223,3284,5.972,3285,2.608,3286,7.845,3287,6.667,3288,8.047,3289,7.32,3290,4.177,3291,3.881,3292,2.608,3293,2.608,3294,6.97,3295,2.608,3296,4.177,3297,2.608,3298,5.223,3299,2.608,3300,4.177,3301,2.286,3302,2.608,3303,5.223,3304,2.608,3305,2.608,3306,5.234,3307,2.608,3308,2.608,3309,4.177,3310,4.177,3311,4.177,3312,4.177,3313,2.608,3314,4.177,3315,2.608,3316,2.608,3317,4.177,3318,4.177,3319,2.608,3320,2.608,3321,2.608,3322,2.608,3323,4.177,3324,4.177,3325,2.608,3326,7.606,3327,2.608,3328,4.177,3329,2.608,3330,2.608,3331,6.97,3332,7.606,3333,4.177,3334,4.177,3335,4.177,3336,2.608,3337,2.608,3338,2.608,3339,5.223,3340,5.223,3341,2.608,3342,2.608,3343,2.608,3344,2.608,3345,2.608,3346,2.608,3347,2.608,3348,2.608,3349,2.608,3350,2.608,3351,2.608,3352,2.608,3353,2.608,3354,4.177,3355,2.006,3356,4.177,3357,2.608,3358,2.608,3359,2.286,3446,2.888,3447,4.625,3448,2.888,3449,2.888,3450,2.888,3451,2.888,3452,2.888,3453,2.888,3454,2.888,3455,2.888,3456,2.888,3457,2.888,3458,2.888,3459,2.888,3460,2.888,3461,2.888,3462,2.888,3463,2.888,3464,2.888,3465,2.888,3466,2.888,3467,2.888,3468,2.888,3469,2.888,3470,2.888,3471,2.888,3472,2.888,3473,2.888,3474,2.888,3475,2.888,3476,2.888,3477,2.888,3478,2.888,3479,2.888,3480,2.888,3481,2.888,3482,2.888,3483,2.888,3484,2.888,3485,2.286,3486,2.888,3487,2.888,3488,2.608,3489,2.888,3490,2.888,3491,2.888,3492,4.625,3493,4.625,3494,2.888,3495,2.888,3496,2.888,3497,4.625,3498,2.888,3499,2.888,3500,2.888,3501,2.888,3502,2.888,3503,2.888,3504,2.888,3505,2.888,3506,2.888,3507,2.888,3508,2.888,3509,2.888,3510,2.888,3511,2.888,3512,2.888,3513,2.888,3514,2.888,3515,2.888,3516,2.888,3517,2.888,3518,2.888,3519,2.888,3520,2.888,3521,2.888,3522,2.888,3523,2.888,3524,2.888,3525,2.888,3526,2.888,3527,2.888,3528,2.888,3529,2.888,3530,2.888,3531,2.888,3532,2.608,3533,2.888,3534,2.888,3535,2.888,3536,2.888,3537,2.888,3538,1.542,3539,2.888,3540,2.888,3541,2.888,3542,2.888]],["title/standards/time.html#定时器",[3543,5.714]],["body/standards/time.html#定时器",[1,0.362,2,0.686,8,1.108,9,1.193,11,2.529,12,2.024,13,1.797,15,3.183,21,4.025,22,3.783,23,1.487,31,0.604,32,0.64,33,0.71,34,0.759,35,0.753,36,0.85,37,0.944,38,1.013,39,1.162,40,1.263,41,1.242,42,1.378,43,1.396,57,6.316,58,2.431,59,1.876,62,3.421,63,1.06,65,1.058,74,0.842,75,2.533,82,3.337,96,2.569,108,3.01,110,1.717,111,1.49,112,1.576,113,0.969,114,1.145,115,1.193,124,2.04,134,3.001,161,1.326,223,1.308,253,2.606,379,2.529,439,2.464,447,3.836,474,2.863,495,3.105,583,2.12,590,2.498,607,2.348,716,2.678,996,1.819,1080,3.722,1656,2.295,2270,2.6,2278,2.116,2478,2.863,2521,2.464,2701,5.072,2862,5.446,2863,5.506,2864,3.262,3086,4.849,3089,4.08,3091,2.6,3230,4.582,3360,8.885,3361,3.262,3362,3.722,3363,6.065,3364,7.206,3365,5.492,3366,3.722,3367,3.722,3368,3.722,3369,3.722,3370,3.722,3371,6.065,3372,3.722,3373,3.722,3374,3.722,3375,3.722,3376,5.492,3377,3.262,3378,3.722,3379,3.722,3380,3.722,3381,5.492,3382,3.722,3383,5.492,3384,3.722,3385,3.722,3386,3.722,3387,3.722,3388,3.722,3389,3.722,3390,5.492,3391,5.492,3392,3.722,3393,3.722,3394,3.722,3395,4.814,3396,3.722,3397,4.814,3398,3.722,3399,3.722,3400,5.492,3401,3.722,3402,3.722,3488,3.722,3544,4.121,3545,4.121,3546,4.121,3547,4.121,3548,4.121,3549,4.121,3550,4.121,3551,4.121,3552,4.121,3553,4.121,3554,4.121,3555,3.722,3556,3.722,3557,4.121,3558,4.121,3559,4.121,3560,4.121,3561,4.121,3562,4.121,3563,4.121,3564,4.121,3565,4.121,3566,3.459,3567,3.105,3568,4.121,3569,4.121,3570,3.459,3571,4.121,3572,4.121,3573,4.121,3574,4.121,3575,4.121,3576,3.722,3577,4.121,3578,4.121,3579,4.121,3580,4.121,3581,4.121]],["title/standards/time.html#Ticker",[3361,4.523]],["body/standards/time.html#Ticker",[96,4.068,161,1.796,222,3.206,1572,6.258,3228,6.91,3230,6.204,3360,6.91,3361,8.08,3363,6.91,3371,6.91,3403,7.436,3404,7.436,3582,8.234,3583,8.234,3584,8.234,3585,8.234,3586,8.234,3587,8.234,3588,8.234,3589,8.234,3590,8.234,3591,8.234]],["title/basic/basic_data.html",[1,0.184]],["body/basic/basic_data.html",[1,0.369,2,1.178,3,0.723,4,1.208,12,0.707,26,1.516,31,0.611,32,0.63,33,0.618,34,0.691,35,0.732,36,0.709,37,0.787,38,1.096,39,0.523,40,0.533,41,0.559,42,0.805,43,0.693,46,2.462,53,0.776,54,0.615,56,1.725,58,0.849,59,0.966,61,2.975,63,0.956,65,0.545,68,2.719,69,2.448,72,1.533,73,2.264,74,1.358,75,0.884,79,0.662,84,2.058,92,2.937,95,1.07,96,0.897,109,2.134,110,1.495,111,0.74,112,0.783,113,1.097,114,0.59,115,0.615,116,0.59,117,0.676,118,0.707,119,0.707,120,0.691,121,0.758,122,0.786,128,2.98,134,1.644,136,4.13,145,1.475,146,3.351,438,2.834,440,1.238,446,1.07,447,1.339,465,0.806,487,2.719,490,2.423,586,0.998,588,1.015,749,1.956,838,0.872,1021,4.318,1022,4.034,1023,1.681,1024,2.145,1025,2.145,1026,1.38,1027,2.841,1028,1.681,1029,1.681,1030,2.591,1031,1.681,1032,1.681,1033,1.681,1034,1.681,1035,1.533,1036,1.681,1187,1.238,1188,1.38,1198,1.38,1324,1.533,1331,2.589,1333,2.941,1340,1.999,1389,1.475,1488,4.918,1493,0.872,1519,1.681,1603,0.982,1610,1.716,1634,4.699,1838,3.957,2270,1.339,2275,1.561,2648,1.209,2697,1.916,3103,1.209,3592,3.241,3593,1.6,3594,1.917,3595,1.38,3596,1.917,3597,1.917,3598,1.38,3599,1.681,3600,1.533,3601,1.917,3602,1.917,3603,1.917,3604,1.917,3605,1.917,3606,1.917,3607,3.589,3608,3.241,3609,1.917,3610,1.917,3611,1.917,3612,1.917,3613,1.917,3614,1.917,3615,1.917,3616,1.917,3617,3.241,3618,1.917,3619,1.917,3620,4.339,3621,1.917,3622,1.917,3623,1.917,3624,1.917,3625,1.475,3626,5.997,3627,1.917,3628,4.21,3629,1.917,3630,5.534,3631,3.241,3632,1.917,3633,1.917,3634,1.917,3635,1.917,3636,1.917,3637,1.917,3638,1.917,3639,3.241,3640,3.241,3641,1.917,3642,1.917,3643,1.917,3644,1.917,3645,2.123,3646,2.123,3647,3.241,3648,1.917,3649,1.917,3650,1.917,3651,1.533,3652,1.917,3653,1.917,3654,1.917,3655,1.917,3656,1.917,3657,1.917,3658,4.951,3659,1.917,3660,2.123,3661,1.917,3662,1.917,3663,3.241,3664,2.841,3665,2.591,3666,1.917,3667,7.942,3668,1.6,3669,1.533,3670,1.681,3671,1.38,3672,4.21,3673,4.257,3674,6.723,3675,4.801,3676,1.917,3677,1.917,3678,3.241,3679,3.241,3680,4.21,3681,3.241,3682,1.917,3683,1.917,3684,3.241,3685,1.917,3686,1.917,3687,1.475,3688,1.917,3689,3.365,3690,1.917,3691,1.917,3692,2.123,3693,2.591,3694,3.241,3695,3.241,3696,1.681,3697,3.241,3698,1.917,3699,1.917,3700,1.917]],["title/basic/basic_data.html#基础据类型",[3701,5.714]],["body/basic/basic_data.html#基础据类型",[]],["title/basic/basic_data.html#数值类型",[3702,5.714]],["body/basic/basic_data.html#数值类型",[1,0.307,38,1.032,61,2.082,63,1.416,68,5.263,72,4.513,73,5.126,74,1.952,75,2.604,84,3.984,92,3.907,113,1.911,145,4.344,146,3.151,161,1.364,222,3.163,223,1.47,447,3.945,487,4.738,996,3.586,1021,3.273,1187,3.646,1389,4.344,1634,5.641,1883,7.895,2648,3.562,3592,7.337,3593,4.712,3594,5.647,3595,4.063,3596,5.647,3597,5.647,3598,4.063,3599,4.95,3600,4.513,3601,5.647,3602,5.647,3603,5.647,3604,5.647,3605,5.647,3606,5.647,3608,7.337,3609,5.647,3610,5.647,3611,5.647,3612,5.647,3613,5.647,3614,5.647,3615,5.647,3616,5.647,3703,6.253,3704,9.904,3705,10.684,3706,9.904,3707,6.253,3708,6.253,3709,6.253,3710,8.125,3711,8.125,3712,6.431,3713,8.125,3714,6.253,3715,8.125,3716,8.125,3717,6.253,3718,6.253,3719,6.253,3720,6.253,3721,8.125,3722,6.253,3723,6.253,3724,6.253,3725,6.253,3726,6.253]],["title/basic/basic_data.html#布尔类型",[3727,5.714]],["body/basic/basic_data.html#布尔类型",[109,3.418,110,3.657,161,1.915,223,1.589,3728,8.78]],["title/basic/basic_data.html#字符串",[2404,5.16]],["body/basic/basic_data.html#字符串",[1,0.358,2,0.848,3,0.819,4,1.321,12,0.8,26,1.682,31,0.622,32,0.611,33,0.647,34,0.726,35,0.769,36,0.755,37,0.777,38,1.065,39,0.58,40,0.591,41,0.62,42,0.88,43,0.769,46,2.622,53,0.879,54,0.696,56,1.778,58,0.961,59,1.094,61,3.032,63,0.694,65,0.617,69,2.541,74,0.491,79,0.749,92,1.571,95,1.211,96,1.016,109,1.985,110,1.001,111,0.821,112,0.868,113,0.565,114,0.668,115,0.696,116,0.668,117,0.765,118,0.8,119,0.8,120,0.783,121,0.858,122,0.89,128,3.195,134,1.798,136,4.374,146,3.311,161,1.112,171,1.904,202,1.872,223,1.473,253,1.707,292,1.903,303,1.211,304,4.27,370,2.171,438,3.039,440,1.402,446,1.211,465,0.912,487,1.402,490,2.554,586,1.13,611,1.211,638,1.67,641,1.811,736,2.588,749,2.171,769,2.171,838,0.987,938,2.171,963,2.171,996,1.061,1021,4.391,1022,4.272,1023,1.903,1024,1.437,1025,2.381,1027,3.152,1028,1.903,1029,1.903,1030,2.875,1031,1.903,1032,1.903,1033,1.903,1034,1.903,1035,1.735,1036,1.903,1132,2.171,1134,2.018,1135,2.018,1136,2.171,1137,2.171,1138,2.171,1188,1.562,1198,1.562,1221,2.018,1226,1.96,1324,1.735,1331,2.776,1333,3.216,1340,2.218,1420,1.735,1430,2.322,1488,5.104,1493,0.987,1519,1.903,1603,1.112,1610,1.904,1634,2.904,1720,1.903,1821,2.018,1838,4.28,2170,2.018,2270,1.517,2275,1.732,2697,2.126,3103,1.369,3189,2.018,3617,3.596,3618,2.171,3619,2.171,3620,4.693,3621,2.171,3622,2.171,3623,2.171,3624,2.171,3625,1.67,3626,6.2,3627,2.171,3628,4.604,3629,2.171,3630,5.934,3631,3.596,3632,2.171,3633,2.171,3634,2.171,3635,2.171,3636,2.171,3637,2.171,3638,2.171,3639,3.596,3640,3.596,3641,2.171,3642,2.171,3643,2.171,3644,2.171,3647,3.596,3648,2.171,3649,2.171,3650,2.171,3651,1.735,3652,2.171,3653,2.171,3654,2.171,3655,2.171,3656,2.171,3657,2.171,3658,5.354,3659,2.171,3661,2.171,3662,2.171,3663,3.596,3664,3.152,3665,2.875,3666,2.171,3667,8.226,3668,1.811,3669,1.735,3670,1.903,3671,1.562,3672,4.604,3673,4.565,3674,7.086,3675,5.112,3676,2.171,3677,2.171,3678,3.596,3679,3.596,3680,4.604,3681,3.596,3682,2.171,3683,2.171,3684,3.596,3685,2.171,3686,2.171,3687,1.67,3688,2.171,3689,3.68,3690,2.171,3691,2.171,3693,2.875,3694,3.596,3695,3.596,3696,1.903,3697,3.596,3698,2.171,3699,2.171,3700,2.171,3729,2.404,3730,2.404,3731,2.404,3732,2.404,3733,2.404,3734,2.404,3735,2.404,3736,2.404,3737,2.404,3738,2.404,3739,2.404,3740,2.404,3741,2.404,3742,2.404,3743,2.404,3744,2.404,3745,2.404,3746,2.404,3747,2.404,3748,2.404,3749,2.404,3750,2.404,3751,2.404,3752,2.404,3753,2.404,3754,2.404,3755,2.404,3756,2.404,3757,2.404,3758,2.404,3759,2.404,3760,2.404,3761,2.404,3762,2.404,3763,2.404,3764,2.404,3765,2.404,3766,2.404,3767,2.404,3768,2.171,3769,2.404,3770,2.404,3771,2.404,3772,3.982,3773,2.404,3774,2.404,3775,2.404,3776,2.404,3777,2.171,3778,2.404,3779,2.404,3780,3.982,3781,2.171,3782,2.404,3783,2.404,3784,2.404,3785,2.404,3786,2.171,3787,3.982,3788,2.404,3789,2.404,3790,2.404,3791,2.404,3792,2.404,3793,2.404,3794,2.404,3795,2.404,3796,2.404,3797,2.404,3798,2.404,3799,2.404,3800,2.404,3801,1.67,3802,2.404,3803,2.404,3804,2.404,3805,2.404,3806,2.404,3807,2.404,3808,2.404,3809,2.404,3810,2.404,3811,2.404,3812,2.404,3813,2.404,3814,2.404,3815,2.404,3816,2.404,3817,2.404,3818,2.404,3819,2.404,3820,2.404,3821,2.404,3822,2.404,3823,2.404,3824,2.404,3825,2.404,3826,2.018,3827,2.404,3828,2.404,3829,2.404,3830,2.404,3831,2.404,3832,2.404,3833,2.404,3834,2.404,3835,2.404,3836,2.404,3837,2.404,3838,2.404,3839,2.404,3840,2.404,3841,2.404,3842,2.404,3843,2.404,3844,2.404,3845,2.404,3846,2.404,3847,2.404,3848,2.404,3849,2.404,3850,2.404,3851,2.171,3852,2.404,3853,2.171,3854,2.404,3855,2.404,3856,2.404,3857,2.404,3858,2.404,3859,2.404,3860,2.404,3861,2.404,3862,2.404,3863,2.404,3864,2.404,3865,2.404,3866,2.404,3867,2.404,3868,2.404,3869,2.404,3870,2.404,3871,2.404,3872,2.404,3873,2.404,3874,2.404,3875,2.171,3876,1.735,3877,2.404,3878,2.404,3879,2.404,3880,2.404,3881,2.404,3882,2.404,3883,2.404,3884,2.404,3885,2.404,3886,2.404,3887,2.404,3888,2.404,3889,2.404,3890,2.404,3891,2.404,3892,2.404,3893,2.404,3894,2.404,3895,2.404,3896,2.404,3897,2.404,3898,2.404,3899,2.404,3900,2.404,3901,2.404,3902,2.404,3903,2.404,3904,2.404,3905,2.404,3906,2.404,3907,2.404,3908,2.404,3909,2.404,3910,2.404,3911,2.404,3912,2.404,3913,2.404,3914,2.404,3915,2.404,3916,2.404,3917,2.404,3918,2.404,3919,2.404,3920,2.404,3921,1.735,3922,2.404,3923,2.404,3924,2.404,3925,2.404,3926,2.404,3927,2.404,3928,2.404,3929,2.404,3930,2.404,3931,2.404,3932,2.404,3933,2.404,3934,2.404,3935,2.404,3936,2.404,3937,2.404,3938,2.404,3939,2.404,3940,2.404,3941,2.404,3942,2.404,3943,2.404,3944,1.811,3945,2.404,3946,2.404,3947,2.404,3948,2.404,3949,2.404,3950,2.404,3951,2.404,3952,2.404,3953,2.404,3954,2.404,3955,2.404,3956,2.404,3957,2.404,3958,2.404,3959,2.404,3960,2.404,3961,2.404,3962,2.404,3963,2.404,3964,2.404,3965,2.404,3966,2.404,3967,2.404]],["title/basic/test.html",[1,0.184]],["body/basic/test.html",[1,0.369,2,1.819,3,0.911,4,0.693,8,0.787,13,0.79,25,1.146,27,1.073,31,0.569,32,0.587,33,0.605,34,0.49,35,0.519,36,0.585,37,0.65,38,0.803,39,0.39,40,0.397,41,0.416,42,0.462,43,0.517,48,3.376,53,0.978,56,0.502,60,1.055,62,1.515,63,0.758,65,0.686,74,1.291,105,2.078,107,0.9,108,3.129,109,3.386,110,2.287,111,0.551,112,0.583,113,0.629,114,0.743,115,0.774,116,0.743,117,0.852,118,0.89,119,0.89,120,0.871,142,1.794,376,2.916,439,1.599,471,5.135,488,2.342,495,3.275,566,1.738,578,2.424,590,2.597,795,1.56,805,3.275,833,1.599,1026,1.738,1188,3.568,1487,2.117,1488,1.523,1520,1.93,2449,1.348,2529,1.738,2608,6.107,2609,2.117,2612,1.738,2617,2.117,2648,5.257,3078,2.117,3082,2.117,3665,1.93,3968,3.925,3969,3.275,3970,2.415,3971,5.838,3972,5.9,3973,2.415,3974,2.415,3975,4.765,3976,2.415,3977,2.415,3978,3.441,3979,2.415,3980,2.415,3981,2.415,3982,2.117,3983,2.117,3984,2.415,3985,2.415,3986,2.415,3987,2.117,3988,2.117,3989,2.117,3990,2.117,3991,2.415,3992,2.415,3993,2.415,3994,2.415,3995,2.415,3996,2.415,3997,2.415,3998,2.415,3999,2.415,4000,2.415,4001,2.415,4002,2.415,4003,4.959,4004,2.415,4005,2.415,4006,2.415,4007,2.415,4008,2.415,4009,2.415,4010,2.117,4011,2.415,4012,5.838,4013,2.415,4014,3.925,4015,1.794,4016,2.415,4017,2.415,4018,2.415,4019,2.415,4020,2.415,4021,2.415,4022,2.415,4023,2.415,4024,3.648,4025,5.307,4026,2.415,4027,2.415,4028,2.415,4029,2.415,4030,5.307,4031,2.415,4032,2.415,4033,2.415,4034,2.674,4035,3.925,4036,2.415,4037,2.415,4038,2.415,4039,2.415,4040,4.959,4041,2.415,4042,2.415,4043,2.415,4044,2.415,4045,4.959,4046,2.415,4047,2.415,4048,2.415,4049,2.415,4050,2.015,4051,3.648,4052,2.415,4053,3.925,4054,2.117,4055,2.415,4056,2.415,4057,5.71,4058,2.415,4059,2.415,4060,2.674,4061,2.415,4062,2.415,4063,2.415,4064,2.674,4065,3.441,4066,2.117,4067,3.925,4068,2.415,4069,2.415,4070,2.415,4071,2.415,4072,4.564,4073,6.731,4074,2.415]],["title/basic/test.html#测试",[4075,5.714]],["body/basic/test.html#测试",[2,1.818,27,1.779,48,3.849,62,3.099,223,1.744,253,3.09,471,5.282,578,3.925,795,4.204,805,5.432,833,4.309,996,3.925,1026,4.685,1520,5.204,3124,6.511,3968,8.03,3969,5.432,3970,6.511,3971,6.05,3972,7.632,3973,6.511,3974,6.511,4076,7.209,4077,7.209,4078,7.209,4079,7.209,4080,7.209,4081,7.209,4082,7.209,4083,7.209,4084,7.209,4085,7.209,4086,7.209,4087,7.209,4088,7.209,4089,7.209,4090,7.209,4091,7.209,4092,7.209,4093,7.209,4094,7.209,4095,7.209,4096,5.008,4097,7.209,4098,7.209,4099,7.209,4100,7.209,4101,7.209,4102,7.209]],["title/basic/test.html#测试函数",[4103,5.714]],["body/basic/test.html#测试函数",[1,0.366,2,0.95,3,1.946,4,1.48,8,0.953,13,1.688,25,2.448,31,0.489,32,0.532,33,0.59,34,0.509,35,0.54,36,0.609,37,0.676,38,0.726,39,0.832,40,0.848,41,0.89,42,0.987,43,1.103,53,2.089,56,1.073,65,1.466,107,1.924,108,4.272,109,4.094,110,3.596,111,1.178,112,1.246,113,1.344,114,1.587,115,1.654,116,1.587,117,1.819,118,1.902,119,1.902,120,1.86,161,1.246,471,4.813,566,3.713,578,2.522,628,2.38,996,2.522,3665,4.124,3975,6.505,3976,5.16,3977,5.16,3978,6.06,3979,5.16,3980,5.16,3981,5.16,3982,4.522,3983,4.522,3984,5.16,3985,5.16,3986,5.16,3987,4.522,3988,4.522,3989,4.522,3990,4.522,3991,5.16,3992,5.16,3993,5.16,3994,5.16,3995,5.16,3996,5.16,3997,5.16,3998,5.16,3999,5.16,4000,5.16,4001,5.16,4002,5.16,4003,7.797,4004,5.16,4005,5.16,4006,5.16,4007,5.16,4008,5.16,4009,5.16,4104,5.16,4105,5.16,4106,5.713,4107,5.713,4108,5.713,4109,5.713,4110,5.713,4111,5.713,4112,5.713,4113,5.713]],["title/basic/test.html#覆盖率",[4114,5.714]],["body/basic/test.html#覆盖率",[1,0.316,2,1.772,31,0.483,32,0.525,33,0.583,34,0.674,35,0.714,36,0.806,37,0.895,142,5.074,223,1.368,471,4.788,628,3.15,2529,4.914,2608,7.386,2609,5.986,2762,5.986,3971,8.263,4010,5.986,4011,6.829,4012,6.347,4013,6.829,4014,8.267,4015,5.074,4016,6.829,4017,6.829,4018,6.829,4019,6.829,4020,6.829,4021,6.829,4022,6.829,4023,6.829,4115,7.562,4116,9.155,4117,7.562,4118,7.562,4119,6.829,4120,7.562,4121,7.562,4122,7.562]],["title/basic/test.html#基准测试",[4123,5.714]],["body/basic/test.html#基准测试",[1,0.345,2,1.734,8,0.924,31,0.578,32,0.628,33,0.698,60,2.927,303,3.74,471,4.944,590,3.048,628,3.091,2608,6.533,2648,5.155,3876,5.357,3972,5.874,3975,5.592,4024,6.228,4025,8.195,4026,6.702,4027,6.702,4028,6.702,4029,6.702,4030,7.596,4104,6.702,4105,6.702,4124,7.421,4125,7.421,4126,7.421,4127,7.421,4128,7.421,4129,7.421,4130,7.421,4131,7.421,4132,7.421,4133,7.421,4134,7.421,4135,7.421,4136,7.421,4137,7.421,4138,7.421,4139,7.421,4140,7.421]],["title/basic/test.html#示例函数",[4141,5.714]],["body/basic/test.html#示例函数",[1,0.339,2,1.607,8,1.031,31,0.529,32,0.575,33,0.638,471,4.028,4024,6.952,4031,7.48,4032,7.48,4033,7.48,4142,6.557,4143,8.283,4144,8.283,4145,8.283,4146,8.283,4147,8.283,4148,8.283,4149,8.283,4150,8.283]],["title/basic/test.html#go-test-命令执行的主要测试流程",[2,0.553,471,1.616,4151,3.324]],["body/basic/test.html#go-test-命令执行的主要测试流程",[2,1.622,223,1.764,471,5.006,638,5.841,4152,8.408,4153,8.408,4154,8.408,4155,8.408,4156,8.408,4157,8.408,4158,8.408,4159,8.408,4160,8.408,4161,8.408,4162,8.408]],["title/basic/test.html#功能测试的测试结果",[4163,5.714]],["body/basic/test.html#功能测试的测试结果",[1,0.258,2,1.814,31,0.512,32,0.557,105,3.834,376,6.362,471,4.611,2612,5.212,2617,6.349,2762,6.349,4035,8.563,4036,7.243,4037,7.243,4038,7.243,4039,7.243,4164,8.02,4165,8.02,4166,8.02,4167,8.02,4168,8.02,4169,8.02,4170,8.02,4171,8.02,4172,8.02,4173,8.02,4174,8.02]],["title/basic/test.html#性能测试的测试结果",[4175,5.714]],["body/basic/test.html#性能测试的测试结果",[1,0.304,2,1.65,31,0.442,32,0.481,33,0.534,34,0.617,35,0.654,36,0.738,37,0.819,38,1.101,48,5.054,105,3.309,223,1.252,471,4.603,488,3.341,590,3.561,644,3.309,805,5.216,2648,5.652,3969,5.216,3972,6.863,4040,8.549,4041,6.251,4042,6.251,4043,6.251,4044,6.251,4045,8.549,4046,6.251,4047,6.251,4048,6.251,4049,6.251,4050,5.216,4176,6.922,4177,6.922,4178,6.922,4179,6.922,4180,6.922,4181,6.922,4182,6.922,4183,6.922,4184,6.922,4185,6.922,4186,6.922,4187,6.922,4188,6.922,4189,6.922,4190,6.922,4191,6.922,4192,6.922,4193,6.922,4194,6.922,4195,6.922,4196,6.922,4197,6.922,4198,6.922,4199,6.922,4200,6.922,4201,6.922,4202,6.922,4203,6.922,4204,6.922,4205,6.922,4206,6.922,4207,6.922,4208,6.922,4209,6.922,4210,6.922,4211,6.922]],["title/basic/test.html#parallel-标记",[4051,3.528,4212,4.203]],["body/basic/test.html#parallel-标记",[2,1.382,471,4.04,488,2.797,1542,5.997,4051,6.972,4052,7.503,4053,8.742,4213,8.308,4214,8.308,4215,8.308,4216,8.308,4217,8.308,4218,8.308,4219,8.308,4220,8.308,4221,8.308,4222,7.503,4223,8.308,4224,8.308,4225,8.308,4226,8.308,4227,8.308]],["title/basic/test.html#性能测试函数中的计时器",[4228,5.714]],["body/basic/test.html#性能测试函数中的计时器",[161,1.885,171,4.132,4025,7.254,4054,6.842,4055,7.806,4056,7.806,4229,8.643,4230,8.643,4231,8.643,4232,8.643]],["title/basic/test.html#性能分析",[4233,5.714]],["body/basic/test.html#性能分析",[2,1.778,27,1.419,31,0.491,63,1.34,74,1.57,161,1.676,223,1.567,248,4.825,253,2.464,439,3.436,590,2.361,736,3.736,1087,6.251,1188,3.736,1226,2.21,1319,3.993,1430,4.483,1487,4.551,1488,3.274,2093,4.332,2241,7.319,2449,2.897,2608,6.251,2648,5.266,3078,4.551,3082,4.551,3116,5.192,3157,5.192,3826,4.825,4012,4.825,4030,6.451,4057,8.349,4058,5.192,4059,5.192,4061,5.192,4062,5.192,4063,5.192,4065,6.085,4067,6.942,4068,5.192,4069,5.192,4070,5.192,4071,5.192,4072,6.674,4073,8.955,4074,5.192,4234,5.749,4235,5.749,4236,5.749,4237,5.749,4238,5.749,4239,5.749,4240,5.749,4241,5.749,4242,5.749,4243,5.749,4244,5.749,4245,5.749,4246,5.749,4247,5.749,4248,5.192,4249,5.749,4250,5.749,4251,5.749,4252,5.749,4253,5.749,4254,5.749,4255,5.749,4256,5.749,4257,5.749,4258,5.749,4259,5.749,4260,5.749,4261,5.749,4262,5.749,4263,5.749,4264,5.749,4265,5.749,4266,5.749,4267,5.749,4268,5.749,4269,5.749,4270,5.749,4271,5.749,4272,5.749,4273,5.749,4274,5.749,4275,5.749,4276,5.749,4277,5.749,4278,5.749,4279,5.749,4280,5.749,4281,5.749,4282,5.749,4283,5.749,4284,5.749,4285,5.749,4286,5.749,4287,5.749,4288,5.749,4289,5.749,4290,5.749,4291,5.749,4292,5.749,4293,5.749,4294,5.749,4295,4.825,4296,5.749,4297,5.749,4298,5.749,4299,5.749,4300,5.749,4301,5.749,4302,5.749,4303,5.749,4304,5.749,4305,5.749,4306,5.749,4307,5.749,4308,5.749,4309,5.749,4310,5.749,4311,5.749,4312,5.749,4313,5.749,4314,5.749,4315,5.749,4316,5.749,4317,5.749]],["title/standards/data/big.html",[4318,4.523]],["body/standards/data/big.html",[1,0.367,2,1.504,3,1.854,6,1.772,7,1.715,8,0.678,27,1.829,31,0.578,32,0.378,33,0.42,34,0.485,35,0.514,36,0.58,37,0.644,38,0.691,39,0.793,40,0.808,41,0.848,42,0.94,43,1.052,44,1.753,63,1.292,65,1.397,68,3.175,69,2.101,75,3.509,84,3.271,96,3.13,111,1.122,112,1.616,113,1.281,114,1.513,115,2.145,116,1.513,117,1.734,118,1.813,119,1.813,120,1.772,121,1.943,122,2.015,465,2.066,490,2.412,580,3.734,830,4.31,838,2.236,1170,6.081,1187,3.175,1493,2.236,1626,3.341,1656,3.032,2009,5.866,3064,5.349,3103,4.221,3247,3.653,4318,7.904,4319,4.972,4320,6.692,4321,4.917,4322,4.917,4323,4.917,4324,4.917,4325,4.917,4326,4.917,4327,4.917,4328,6.692,4329,6.692,4330,4.917,4331,6.692,4332,7.608,4333,6.692,4334,4.917,4335,4.917,4336,4.917,4337,4.917,4338,4.917,4339,8.166,4340,4.917,4341,4.917,4342,6.692,4343,4.917,4344,4.917,4345,6.692,4346,4.917,4347,4.917,4348,4.917,4349,6.692,4350,4.917,4351,4.917]],["title/standards/data/big.html#big",[4318,4.523]],["body/standards/data/big.html#big",[1,0.359,2,1.503,3,1.851,6,1.769,7,1.712,8,0.676,27,1.826,31,0.577,32,0.377,33,0.419,34,0.485,35,0.513,36,0.579,37,0.643,38,0.69,39,0.791,40,0.807,41,0.846,42,0.938,43,1.049,44,1.749,63,1.29,65,1.394,68,3.169,69,2.098,75,3.505,84,3.267,96,3.126,111,1.12,112,1.614,113,1.278,114,1.51,115,2.142,116,1.51,117,1.73,118,1.809,119,1.809,120,1.769,121,1.939,122,2.011,161,1.614,197,3.951,303,2.738,465,2.062,490,2.409,580,3.729,611,2.738,830,4.302,838,2.232,996,2.399,1170,6.075,1187,3.169,1430,3.169,1493,2.232,1570,4.561,1626,3.334,1656,3.027,2009,5.858,3064,5.342,3103,4.215,3247,3.646,3538,2.901,4142,4.302,4318,7.721,4319,4.965,4320,6.683,4321,4.907,4322,4.907,4323,4.907,4324,4.907,4325,4.907,4326,4.907,4327,4.907,4328,6.683,4329,6.683,4330,4.907,4331,6.683,4332,7.6,4333,6.683,4334,4.907,4335,4.907,4336,4.907,4337,4.907,4338,4.907,4339,8.16,4340,4.907,4341,4.907,4342,6.683,4343,4.907,4344,4.907,4345,6.683,4346,4.907,4347,4.907,4348,4.907,4349,6.683,4350,4.907,4351,4.907,4352,5.434,4353,5.434,4354,5.434,4355,5.434,4356,5.434,4357,5.434,4358,5.434,4359,5.434,4360,5.434,4361,5.434,4362,5.434,4363,5.434,4364,5.434,4365,5.434,4366,5.434,4367,5.434,4368,5.434,4369,5.434,4370,5.434,4371,5.434,4372,5.434,4373,5.434,4374,5.434,4375,5.434,4376,5.434,4377,5.434,4378,5.434,4379,5.434,4380,5.434,4381,5.434,4382,5.434]],["title/standards/database/sql.html",[2711,3.969]],["body/standards/database/sql.html",[1,0.368,2,1.255,8,0.8,10,2.794,31,0.528,32,0.635,33,0.637,34,0.673,35,0.713,36,0.685,37,0.526,38,0.564,39,0.647,40,1.303,41,0.692,42,0.767,53,2.759,63,1.12,74,1.312,116,1.235,134,2.266,565,1.841,568,2.676,588,2.124,590,3.1,596,2.803,747,3.208,832,4.299,2278,3.299,2610,3.518,2615,6.546,2710,4.842,2711,5.745,2712,4.842,2863,4.512,3051,3.349,3086,5.064,3089,4.311,4015,2.982,4383,5.974,4384,4.013,4385,7.674,4386,7.238,4387,6.94,4388,4.013,4389,4.013,4390,4.013,4391,4.444,4392,5.393,4393,4.013,4394,5.803,4395,5.803,4396,5.803,4397,9.021,4398,4.013,4399,7.923,4400,6.816,4401,5.803,4402,4.013,4403,4.013,4404,5.803,4405,5.803,4406,4.013,4407,4.013,4408,5.803,4409,5.803,4410,7.468,4411,4.013,4412,6.816,4413,4.013,4414,4.013,4415,4.013,4416,4.013,4417,3.208,4418,4.013,4419,4.013,4420,4.444,4421,4.444,4422,5.803,4423,4.013,4424,4.013,4425,4.013,4426,4.013]],["title/standards/database/sql.html#sql",[2711,3.969]],["body/standards/database/sql.html#sql",[2,1.424,223,1.55,2710,6.453,2711,5.949,2712,6.453,4383,6.779,4384,7.734,4385,7.187,4427,8.564,4428,8.564,4429,8.564,4430,7.734,4431,8.564]],["title/standards/database/sql.html#类型",[611,2.879]],["body/standards/database/sql.html#类型",[161,1.817,171,3.983,198,6.015,596,5.257,747,6.015,4383,6.596,4386,6.596,4387,8.139,4388,7.525,4389,7.525,4390,7.525,4392,6.993,4432,8.333,4433,8.333,4434,8.333,4435,8.333,4436,8.333,4437,8.333,4438,8.333,4439,6.596,4440,8.333]],["title/standards/database/sql.html#sql-DB-的使用",[1898,3.528,4386,3.327]],["body/standards/database/sql.html#sql-DB-的使用",[1,0.357,2,1.11,8,0.831,10,2.902,31,0.541,32,0.622,33,0.653,34,0.693,35,0.734,36,0.711,37,0.554,38,0.595,39,0.682,40,1.329,41,0.729,42,0.809,53,2.842,63,1.163,74,0.957,116,1.301,134,2.353,223,1.207,253,2.007,303,2.36,565,1.911,568,2.731,588,2.239,590,3.193,638,3.254,832,4.427,996,2.945,1226,2.565,1355,4.23,1420,3.381,2278,3.426,2478,3.254,2610,3.707,2615,6.705,2710,3.529,2711,4.635,2712,3.529,2863,4.646,3051,3.529,3086,5.215,3089,4.477,3556,4.23,4015,3.142,4383,3.707,4385,7.514,4386,6.705,4387,5.6,4392,3.931,4393,4.23,4394,6.026,4395,6.026,4396,6.026,4397,9.126,4398,4.23,4399,8.086,4400,7.019,4401,6.026,4402,4.23,4403,4.23,4404,4.23,4405,6.026,4406,4.23,4407,4.23,4408,6.026,4409,6.026,4410,7.65,4411,4.23,4412,7.019,4413,4.23,4414,4.23,4415,4.23,4416,4.23,4417,3.381,4418,4.23,4419,4.23,4422,4.23,4423,4.23,4424,4.23,4425,4.23,4426,4.23,4441,4.684,4442,4.684,4443,4.684,4444,4.684,4445,4.684,4446,4.684,4447,4.684,4448,4.684,4449,4.684,4450,4.684,4451,4.684,4452,4.684,4453,4.684,4454,4.684,4455,4.684,4456,4.684,4457,4.684,4458,4.684,4459,4.684,4460,4.684,4461,4.684,4462,4.684,4463,4.684,4464,4.684,4465,4.684,4466,4.684,4467,4.684,4468,4.684,4469,4.684,4470,4.684,4471,4.684,4472,4.684,4473,4.684,4474,4.23,4475,4.684,4476,4.684,4477,4.684,4478,4.684,4479,4.684,4480,4.684,4481,4.684,4482,4.684,4483,4.684,4484,4.684,4485,4.684,4486,4.684,4487,4.684,4488,4.684,4489,4.684,4490,4.684,4491,4.684,4492,4.684,4493,7.773,4494,4.684,4495,4.684,4496,6.672,4497,4.684,4498,4.684,4499,4.684,4500,4.684,4501,4.684,4502,4.684,4503,4.684,4504,4.684,4505,4.684,4506,4.684,4507,4.684,4508,4.684,4509,4.684,4510,4.684,4511,4.684,4512,4.684,4513,4.684,4514,4.684,4515,4.684,4516,4.684,4517,4.684,4518,4.684,4519,4.684,4520,4.684]],["title/standards/io/fmt.html",[1,0.135,44,1.353]],["body/standards/io/fmt.html",[0,2.478,1,0.368,2,1.206,3,0.86,8,1.214,12,3.218,13,0.746,23,0.617,27,0.623,31,0.431,32,0.468,33,0.52,34,0.602,35,0.685,36,0.719,37,0.798,38,0.921,39,0.983,40,1.23,41,1.051,42,1.165,43,1.303,44,1.335,54,1.527,56,1.733,60,1.635,61,1.756,63,1.631,65,0.648,69,2.844,70,1.998,74,1.077,79,1.292,82,3.344,96,1.751,108,1.249,109,2.824,110,1.727,111,1.088,112,0.55,113,0.594,114,0.701,115,0.731,116,0.701,117,0.804,118,1.38,119,0.84,120,0.822,121,0.901,122,0.934,128,1.227,129,1.296,139,1.902,146,3.078,151,4.45,438,1.917,465,0.958,488,0.85,490,3.045,564,2.599,568,2.853,578,1.114,583,1.839,745,3.853,760,2.992,838,1.037,1022,3.005,1331,2.58,1336,3.796,1493,1.037,1619,1.592,1672,1.751,1862,1.998,1992,2.658,2291,3.969,2449,3.4,2451,1.753,2471,3.665,2472,2.781,2695,3.282,3103,2.361,3693,2.992,3696,4.835,4417,4.409,4521,1.438,4522,2.279,4523,3.744,4524,3.744,4525,3.744,4526,3.744,4527,3.282,4528,2.279,4529,3.744,4530,3.531,4531,3.744,4532,3.744,4533,3.744,4534,3.744,4535,3.744,4536,3.744,4537,3.744,4538,2.118,4539,2.279,4540,2.524,4541,4.764,4542,2.524,4543,2.524,4544,2.279,4545,2.279,4546,3.744,4547,2.279,4548,2.279,4549,2.279,4550,2.279,4551,4.764,4552,3.744,4553,2.279,4554,2.279,4555,2.279,4556,3.744,4557,2.524,4558,5.516,4559,2.279,4560,2.279,4561,2.524,4562,2.279,4563,2.279,4564,3.744,4565,1.998,4566,2.118,4567,2.279,4568,2.279,4569,3.744,4570,4.764,4571,4.764,4572,2.279,4573,2.279,4574,2.279,4575,2.279,4576,2.279,4577,3.744,4578,2.279,4579,2.279,4580,2.279,4581,2.279,4582,2.279,4583,2.279,4584,2.279,4585,2.279,4586,3.479,4587,2.279,4588,2.279,4589,2.279,4590,2.524,4591,2.279,4592,2.279,4593,2.524,4594,4.146,4595,2.279,4596,4.146,4597,2.524,4598,2.524,4599,2.524,4600,2.279,4601,2.524,4602,1.998,4603,2.524,4604,2.992,4605,4.764,4606,2.524,4607,2.279,4608,3.744,4609,2.279,4610,1.902,4611,2.279,4612,2.279,4613,2.524,4614,3.744,4615,3.744,4616,2.279,4617,2.279,4618,2.279,4619,2.279,4620,3.744,4621,2.279,4622,2.279,4623,2.279,4624,2.279,4625,6.093,4626,2.279,4627,3.744,4628,3.744,4629,3.744,4630,2.279,4631,2.279,4632,2.279,4633,2.279,4634,2.279,4635,2.279]],["title/standards/io/fmt.html#fmt-包",[44,1.353,2133,2.92]],["body/standards/io/fmt.html#fmt-包",[44,2.783,161,1.885,223,1.564,745,5.453,4417,6.239,4521,4.923,4522,7.806,4636,8.643,4637,8.643,4638,7.806]],["title/standards/io/fmt.html#Print",[745,3.605]],["body/standards/io/fmt.html#Print",[1,0.363,8,1.31,12,3.502,31,0.507,32,0.551,33,0.612,34,0.708,35,0.75,36,0.846,37,0.939,38,1.008,39,1.156,40,1.179,41,1.236,42,1.371,43,1.166,56,1.888,63,1.752,111,1.244,151,5.444,490,3.273,564,2.793,568,3.066,745,5.008,1992,4.471,2449,4.935,2451,4.193,2471,5.515,2472,5.327,2695,6.285,4523,7.17,4524,7.17,4525,7.17,4526,7.17,4527,6.285,4639,6.036,4640,6.036,4641,6.036,4642,7.17,4643,5.451,4644,5.451,4645,5.451,4646,6.036,4647,6.036,4648,6.036,4649,6.036]],["title/standards/io/fmt.html#Scan",[4417,4.125]],["body/standards/io/fmt.html#Scan",[1,0.363,8,1.297,12,3.468,31,0.491,32,0.534,33,0.593,34,0.685,35,0.726,36,0.819,37,0.91,38,0.976,39,1.12,40,1.141,41,1.197,42,1.327,43,1.11,56,1.862,63,1.816,111,1.185,151,5.314,490,3.392,564,2.895,568,3.178,583,3.018,1022,4.933,4417,5.549,4528,5.192,4529,6.942,4530,5.044,4531,6.942,4532,6.942,4533,6.942,4534,6.942,4535,6.942,4536,6.942,4537,6.942,4638,5.192,4642,6.942,4643,5.192,4644,5.192,4645,5.192,4650,5.749,4651,5.749,4652,5.749,4653,5.749,4654,5.749,4655,5.749,4656,5.749,4657,5.749]],["title/standards/io/fmt.html#占位符",[4658,5.16]],["body/standards/io/fmt.html#占位符",[0,3.283,1,0.362,2,1.408,3,1.226,8,0.448,13,1.063,23,0.88,27,0.888,31,0.23,32,0.25,33,0.277,34,0.321,35,0.519,36,0.383,37,0.426,38,0.698,39,0.524,40,1.192,41,0.56,42,0.621,43,1.287,56,0.676,61,2.218,65,0.923,69,2.999,70,2.849,79,1.712,82,3.556,109,3.295,110,1.499,111,0.742,112,0.785,113,0.847,114,1,115,1.042,116,1,117,1.146,118,1.828,119,1.198,120,1.171,121,1.284,122,1.332,128,1.75,129,1.848,139,2.712,146,3.357,438,2.54,465,1.366,760,3.965,838,1.478,996,3.735,1226,1.383,1331,3.149,1336,3.902,1493,1.478,1619,2.27,1672,2.32,1676,3.02,1862,2.849,2291,4.844,2471,2.5,3103,3.129,3189,5.591,3538,1.921,3693,3.965,3696,5.901,3712,6.968,4539,3.25,4541,6.016,4544,3.25,4545,3.25,4546,4.96,4547,3.25,4548,3.25,4549,3.25,4550,3.25,4551,6.016,4552,4.96,4553,3.25,4554,3.25,4555,3.25,4556,4.96,4558,6.732,4559,3.25,4560,3.25,4562,3.25,4563,3.25,4564,4.96,4565,2.849,4566,3.02,4567,3.25,4568,3.25,4569,4.96,4570,6.016,4571,6.016,4572,3.25,4573,3.25,4574,3.25,4575,3.25,4576,3.25,4577,4.96,4578,3.25,4579,3.25,4580,3.25,4581,3.25,4582,3.25,4583,3.25,4584,3.25,4585,3.25,4586,4.61,4587,3.25,4588,3.25,4589,3.25,4591,3.25,4592,3.25,4595,3.25,4600,3.25,4602,2.849,4604,3.965,4605,6.016,4607,3.25,4608,4.96,4609,3.25,4610,2.712,4611,3.25,4612,3.25,4614,4.96,4615,4.96,4616,3.25,4617,3.25,4618,3.25,4619,3.25,4620,4.96,4621,3.25,4622,3.25,4623,3.25,4624,3.25,4625,7.25,4626,3.25,4627,4.96,4628,4.96,4629,4.96,4630,3.25,4631,3.25,4632,3.25,4633,3.25,4634,3.25,4635,3.25,4658,7.949,4659,3.599,4660,8.802,4661,8.802,4662,3.599,4663,3.599,4664,3.599,4665,3.599,4666,3.599,4667,3.599,4668,5.493,4669,3.599,4670,3.599,4671,3.599,4672,3.599,4673,3.599,4674,3.599,4675,3.599,4676,5.493,4677,5.493,4678,3.599,4679,3.599,4680,5.493,4681,5.493,4682,3.599,4683,5.493,4684,3.599,4685,3.599,4686,3.599,4687,3.599,4688,3.599,4689,3.599,4690,3.599,4691,5.493,4692,3.599,4693,5.493,4694,5.493,4695,3.599,4696,3.599,4697,3.599,4698,3.599,4699,3.599,4700,3.599,4701,3.599,4702,3.599,4703,3.599,4704,3.599,4705,3.599,4706,3.599,4707,3.599,4708,3.599,4709,3.599,4710,3.599,4711,3.599,4712,5.493,4713,3.599,4714,3.599,4715,3.599,4716,3.599,4717,3.599,4718,3.599,4719,3.599,4720,3.599,4721,3.599,4722,3.599,4723,3.599,4724,3.599,4725,3.599,4726,5.493,4727,3.599,4728,3.599,4729,3.599,4730,3.599,4731,3.599,4732,3.599,4733,3.599,4734,3.599,4735,5.493,4736,3.599,4737,5.493,4738,3.599,4739,5.493,4740,3.599,4741,3.599,4742,5.493,4743,3.599]],["title/standards/io/ioutil.html",[3070,3.713]],["body/standards/io/ioutil.html",[1,0.368,2,1.374,8,1.137,9,1.282,10,1.926,25,1.898,27,1.093,30,3.198,31,0.638,32,0.523,33,0.581,34,0.672,35,0.418,36,0.472,37,0.524,38,0.563,39,0.645,40,0.658,41,0.69,42,0.765,43,0.856,53,1.62,56,1.415,61,2.508,63,0.772,65,1.137,69,1.818,74,1.539,95,3.231,105,3.064,108,3.173,111,0.913,112,0.966,113,1.042,114,1.231,115,1.282,116,1.231,117,1.411,118,1.475,119,1.475,120,1.442,455,2.365,564,2.093,565,2.51,568,2.873,580,2.232,583,1.544,799,2.192,806,3.718,833,2.648,2278,2.274,2474,3.198,2623,5.075,2709,2.795,3070,4.896,3071,6.087,3072,6.536,3074,3.507,3626,2.972,3673,3.077,4530,4.93,4744,5.38,4745,6.222,4746,3.507,4747,5.234,4748,2.972,4749,4.001,4750,5.79,4751,4.001,4752,4.001,4753,6.323,4754,4.504,4755,4.831,4756,3.198,4757,3.338,4758,4.001,4759,4.001,4760,6.804,4761,4.831,4762,4.001,4763,3.198,4764,4.001,4765,8.249,4766,5.79,4767,4.001,4768,4.001,4769,6.93,4770,5.677,4771,3.507,4772,3.507,4773,5.38,4774,5.38,4775,3.198,4776,5.79,4777,4.001,4778,4.001,4779,5.79,4780,4.001,4781,4.001,4782,4.001]],["title/standards/io/ioutil.html#ioutil",[3070,3.713]],["body/standards/io/ioutil.html#ioutil",[580,4.438,3070,5.723,4783,8.808,4784,8.808]],["title/standards/io/ioutil.html#NopCloser-函数",[644,2.009,4744,3.528]],["body/standards/io/ioutil.html#NopCloser-函数",[1,0.336,31,0.481,32,0.522,33,0.58,34,0.671,105,4.362,223,1.361,455,4.016,565,2.614,1226,3.507,2241,5.954,2278,3.861,2709,4.745,3673,5.225,4530,5.346,4744,6.312,4745,7.696,4746,5.954,4747,6.824,4748,5.046,4749,6.792,4750,8.24,4751,6.792,4752,6.792,4785,7.521,4786,7.521,4787,7.521,4788,7.521,4789,7.521,4790,6.792,4791,7.521,4792,7.521,4793,7.521,4794,7.521,4795,7.521,4796,7.521,4797,7.521,4798,7.521,4799,7.521,4800,7.521,4801,7.521,4802,7.521]],["title/standards/io/ioutil.html#ReadAll-函数",[644,2.009,4753,3.528]],["body/standards/io/ioutil.html#ReadAll-函数",[1,0.338,8,1.022,31,0.525,61,2.733,223,1.485,564,2.281,565,2.352,568,2.932,583,2.861,983,5.179,3485,6.499,4530,5.336,4753,8.068,4754,4.907,4803,8.21,4804,8.21,4805,7.414,4806,8.21,4807,8.21,4808,8.21]],["title/standards/io/ioutil.html#ReadDir-函数",[644,2.009,4755,3.167]],["body/standards/io/ioutil.html#ReadDir-函数",[1,0.365,2,1.089,8,1.042,9,1.895,25,2.806,27,1.616,30,4.726,31,0.589,32,0.455,33,0.505,34,0.584,35,0.618,36,0.698,37,0.775,38,0.831,39,0.954,40,0.972,41,1.02,42,1.131,43,1.264,53,2.394,56,1.23,63,1.141,65,1.68,69,2.373,74,1.884,108,4.142,111,1.35,112,1.428,113,1.54,114,1.819,115,1.895,116,1.819,117,2.085,118,2.18,119,2.18,120,2.131,198,4.726,253,3.587,565,1.876,568,2.553,799,3.24,2474,4.726,3070,4.255,4755,4.933,4756,4.726,4757,4.933,4758,5.913,4759,5.913,4760,8.331,4761,6.306,4762,5.913,4763,4.726,4764,5.913,4765,9.28,4766,7.558,4767,5.913,4768,5.913,4809,6.547,4810,6.547,4811,6.547]],["title/standards/io/ioutil.html#ReadFile-和-WriteFile-函数",[161,0.6,644,1.314,3071,1.91,4769,2.307]],["body/standards/io/ioutil.html#ReadFile-和-WriteFile-函数",[1,0.342,8,1.138,31,0.584,56,1.717,61,3.043,95,4.606,223,1.365,564,2.539,565,2.16,568,2.3,628,3.141,673,4.508,1430,4.398,1881,4.398,2979,6.329,3071,7.101,3072,8.092,3626,5.06,4754,5.463,4769,8.253,4770,7.41,4771,5.97,4772,5.97,4812,7.542,4813,7.542,4814,7.542,4815,7.542,4816,7.542,4817,7.542,4818,7.542,4819,7.542,4820,7.542,4821,7.542,4822,7.542,4823,7.542]],["title/standards/io/ioutil.html#TempDir-和-TempFile-函数",[161,0.6,644,1.314,4773,2.307,4774,2.307]],["body/standards/io/ioutil.html#TempDir-和-TempFile-函数",[1,0.352,2,1.523,8,0.941,10,3.289,31,0.629,32,0.525,33,0.583,34,0.674,568,2.792,806,6.347,833,4.52,1913,6.347,2623,7.247,3074,5.986,4773,6.347,4774,6.347,4775,5.459,4776,8.267,4777,6.829,4778,6.829,4779,8.267,4780,6.829,4781,6.829,4782,6.829,4824,7.562,4825,7.562,4826,7.562,4827,7.562,4828,7.562,4829,7.562,4830,7.562,4831,7.562,4832,7.562,4833,7.562,4834,7.562,4835,7.562,4836,7.562,4837,7.562,4838,7.562,4839,6.829,4840,7.562]],["title/standards/text/strconv.html",[4841,4.125]],["body/standards/text/strconv.html",[1,0.368,2,1.027,8,1.215,9,1.448,12,1.062,13,0.943,23,0.78,31,0.624,32,0.623,33,0.691,34,0.8,35,0.796,36,0.809,37,0.592,38,0.964,39,0.465,40,1.128,41,0.497,44,1.611,54,2.332,56,1.853,60,1.974,61,1.062,63,1.719,74,1.721,75,3.163,82,3.02,84,2.725,92,2.758,96,2.114,104,1.387,107,1.685,108,2.476,109,2.722,110,2.912,113,0.75,487,1.86,490,2.276,564,2.55,568,2.736,607,1.817,1022,4.326,1024,4.817,1187,2.918,1198,4.012,1336,3.975,1389,4.289,1520,4.456,1634,4.326,2311,3.961,3091,3.156,3598,3.251,3599,3.961,3600,2.303,3982,2.525,4054,3.961,4527,3.961,4565,4.887,4586,2.677,4841,5.482,4842,6.373,4843,6.313,4844,7.608,4845,2.881,4846,4.519,4847,4.199,4848,6.762,4849,5.181,4850,5.867,4851,2.216,4852,2.881,4853,2.881,4854,3.961,4855,5.004,4856,2.881,4857,5.575,4858,6.06,4859,7.703,4860,2.881,4861,2.881,4862,3.19,4863,2.881,4864,2.881,4865,2.881,4866,2.881,4867,2.881,4868,2.881,4869,2.881,4870,5.575,4871,2.881,4872,4.519,4873,2.881,4874,3.19,4875,3.19,4876,2.881,4877,5.575,4878,4.519,4879,5.004,4880,4.519,4881,3.19,4882,3.19,4883,2.881,4884,2.881]],["title/standards/text/strconv.html#strconv",[4841,4.125]],["body/standards/text/strconv.html#strconv",[4841,6.398,4885,8.864]],["title/standards/text/strconv.html#转换错误处理",[4886,5.714]],["body/standards/text/strconv.html#转换错误处理",[1,0.354,8,1.153,9,2.437,13,1.953,23,1.616,31,0.538,32,0.585,33,0.649,34,0.751,35,0.795,36,0.897,37,0.782,56,1.832,63,1.152,161,1.441,564,2.711,568,2.016,607,3.765,1022,5.557,1389,4.591,1520,6.689,3712,5.232,3876,4.771,3982,5.232,4841,6.078,4842,8.188,4843,8.811,4844,9.454,4845,5.969,4846,7.604,4847,5.547,4848,5.547,4849,5.547,4850,5.547,4851,4.591,4852,5.969,4853,5.969,4854,6.665,4856,5.969,4887,6.609,4888,6.609,4889,6.609,4890,6.609,4891,6.609,4892,6.609,4893,6.609,4894,7.604,4895,6.609,4896,6.609,4897,6.609,4898,6.609,4899,6.609,4900,6.609,4901,6.609,4902,6.609,4903,6.609,4904,6.609,4905,6.609,4906,8.42]],["title/standards/text/strconv.html#字符串转为整型",[4907,5.714]],["body/standards/text/strconv.html#字符串转为整型",[1,0.354,2,0.939,8,1.142,31,0.548,32,0.392,33,0.435,34,0.677,35,0.533,38,1.165,40,1.274,54,2.656,56,1.723,63,1.809,74,1.153,75,3.822,92,2.226,113,1.328,161,2.001,171,4.387,223,1.374,248,4.736,253,2.419,303,2.844,487,3.291,490,2.987,564,2.55,568,3.008,716,3.667,1187,3.291,1389,5.274,1634,4.325,1720,4.467,2481,5.097,3598,3.667,3600,4.074,3712,6.01,4842,4.736,4848,8.037,4849,6.372,4857,7.748,4858,6.852,4859,8.458,4860,5.097,4861,5.097,4863,5.097,4864,5.097,4865,5.097,4866,5.097,4867,5.097,4908,5.644,4909,5.644,4910,5.644,4911,5.644,4912,5.644,4913,5.644,4914,5.644,4915,5.097,4916,5.644,4917,5.644,4918,5.644,4919,5.644,4920,5.644,4921,5.644,4922,5.644,4923,5.644,4924,5.644,4925,5.644,4926,5.644,4927,7.592,4928,5.644,4929,4.736,4930,5.644,4931,5.644,4932,5.644,4933,5.644,4934,5.644,4935,5.644,4936,5.644,4937,5.644,4938,5.644,4939,5.644,4940,3.786,4941,5.644,4942,5.644,4943,5.644,4944,5.644,4945,5.644,4946,5.644,4947,5.644,4948,4.736,4949,5.644,4950,5.644,4951,5.644,4952,5.644]],["title/standards/text/strconv.html#整型转为字符串",[4953,5.714]],["body/standards/text/strconv.html#整型转为字符串",[1,0.361,2,1.123,8,1.165,12,2.248,31,0.598,32,0.593,33,0.658,34,0.835,35,0.806,36,0.72,37,0.799,38,0.858,39,0.984,40,1.267,41,1.052,44,2.174,56,1.758,63,1.632,74,1.743,75,2.813,96,3.606,223,1.222,1187,3.939,1198,5.547,2311,6.757,3091,5.385,3599,5.346,4054,6.757,4527,6.757,4841,4.875,4858,5.93,4868,6.099,4869,6.099,4870,8.453,4871,6.099,4872,7.709,4873,6.099,4954,6.754,4955,6.754,4956,6.754,4957,6.754,4958,6.754,4959,6.754,4960,6.754,4961,6.754,4962,6.754,4963,8.536,4964,6.754,4965,6.754,4966,6.754,4967,6.754,4968,6.754,4969,6.754]],["title/standards/text/strconv.html#字符串和布尔值之间的转换",[4970,5.714]],["body/standards/text/strconv.html#字符串和布尔值之间的转换",[1,0.348,2,1.286,8,1.155,31,0.593,32,0.537,33,0.596,34,0.689,35,0.73,36,0.824,56,1.742,60,3.049,74,1.579,82,3.477,104,3.362,107,3.123,108,4.591,109,4.013,110,4.293,564,2.148,568,2.358,996,3.412,1022,4.403,4847,6.488,4876,6.981,4971,7.73,4972,6.981,4973,7.73,4974,7.73,4975,7.73,4976,7.73]],["title/standards/text/strconv.html#字符串和浮点数之间的转换",[4977,5.714]],["body/standards/text/strconv.html#字符串和浮点数之间的转换",[1,0.363,8,1.031,31,0.585,32,0.636,33,0.706,34,0.574,35,0.608,36,0.686,44,2.074,54,2.397,56,1.555,60,2.541,61,2.144,63,1.444,82,3.431,84,3.656,92,3.267,161,1.996,223,1.165,564,1.79,568,1.964,1024,4.951,1134,6.951,1198,4.186,1336,4.335,1634,4.718,2363,5.817,2979,5.406,3485,5.099,4096,4.474,4565,7.246,4850,7.683,4859,7.683,4877,8.267,4878,7.479,4880,7.479,4883,5.817,4884,5.817,4948,5.406,4978,6.441,4979,6.441,4980,6.441,4981,6.441,4982,6.441,4983,6.441,4984,6.441,4985,8.282,4986,6.441,4987,8.282,4988,6.441,4989,6.441,4990,6.441,4991,6.441,4992,6.441,4993,6.441,4994,6.441,4995,6.441,4996,6.441,4997,6.441]],["title/basic/reflect.html",[1,0.184]],["body/basic/reflect.html",[1,0.366,2,0.79,4,2.029,8,1.061,12,2.243,13,1.403,23,2.083,26,2.006,27,1.663,31,0.614,32,0.668,33,0.781,34,0.802,35,0.85,36,0.959,37,1.065,38,1.143,39,1.431,40,1.163,41,0.739,42,0.82,43,0.917,56,1.265,60,1.873,62,1.655,63,1.805,69,1.346,74,1.599,79,2.913,104,2.065,108,4.218,109,2.623,110,1.977,116,1.872,578,4.127,602,3.758,1173,2.887,1376,3.185,1493,1.95,1672,2.006,2002,3.427,2006,3.758,2856,3.758,3056,3.758,3103,2.704,3306,3.758,3975,5.076,3978,5.333,3983,7.777,4998,6.422,4999,5.333,5000,4.287,5001,6.084,5002,4.287,5003,4.287,5004,4.748,5005,6.084,5006,6.084,5007,6.084,5008,4.287,5009,4.287,5010,4.287,5011,4.287,5012,4.287,5013,7.153,5014,6.084,5015,4.287,5016,4.287,5017,4.287,5018,4.287,5019,7.072,5020,4.287,5021,4.287,5022,7.072,5023,6.084,5024,6.084,5025,6.084]],["title/basic/reflect.html#反射",[5026,5.714]],["body/basic/reflect.html#反射",[5027,8.864,5028,8.864]],["title/basic/reflect.html#reflect-TypeOf",[4998,4.306]],["body/basic/reflect.html#reflect-TypeOf",[1,0.361,4,2.393,8,1.043,12,2.185,23,2.379,27,2.069,31,0.536,32,0.582,33,0.712,34,0.747,35,0.792,36,0.893,37,0.992,38,1.065,39,1.221,40,1.245,60,2.589,62,2.287,63,1.792,79,3.133,108,4.148,109,3.264,110,2.733,116,2.329,161,1.431,611,3.307,708,5.927,1173,3.592,1493,2.696,3306,5.195,4142,5.195,4998,6.959,4999,6.635,5000,5.927,5001,7.57,5002,5.927,5003,5.927,5005,7.57,5006,7.57,5007,7.57,5008,5.927,5009,5.927,5010,5.927,5011,5.927,5012,5.927,5029,6.563,5030,5.927,5031,6.563,5032,6.563,5033,6.563,5034,6.563,5035,6.563]],["title/basic/reflect.html#reflect-ValueOf",[5013,4.796]],["body/basic/reflect.html#reflect-ValueOf",[1,0.365,2,0.948,8,0.952,12,1.898,13,1.685,26,2.408,31,0.614,32,0.667,33,0.779,34,0.769,35,0.814,36,0.919,37,1.02,38,1.095,39,1.441,40,0.847,41,0.888,42,0.985,43,1.101,56,1.436,63,1.724,69,1.617,74,1.761,79,1.777,104,2.479,108,3.783,161,1.243,222,2.22,253,2.443,578,4.367,602,4.513,611,2.873,1376,3.825,1672,2.408,2002,4.115,2006,4.513,2856,4.513,3056,4.513,3103,3.248,3975,5.76,3978,6.051,3983,8.129,4142,4.513,4839,5.149,5013,7.238,5014,6.904,5015,5.149,5016,5.149,5017,5.149,5018,5.149,5019,7.789,5020,5.149,5021,5.149,5022,7.789,5023,6.904,5024,6.904,5025,6.904,5030,5.149,5036,5.701,5037,5.701,5038,5.701,5039,5.701,5040,5.701,5041,5.701,5042,5.701,5043,5.701,5044,5.701]],["title/standards/text/unicode.html",[146,2.879]],["body/standards/text/unicode.html",[1,0.366,2,0.716,4,1.116,8,1.352,13,1.273,15,2.254,23,1.053,27,1.063,31,0.624,32,0.602,33,0.668,34,0.727,35,0.769,36,0.79,37,0.877,38,0.942,39,1.187,40,0.932,41,0.978,42,1.085,43,1.213,54,1.246,56,1.18,61,3.011,63,1.577,74,0.88,107,3.551,109,3.173,110,2.616,111,0.888,116,1.197,146,4.706,446,2.17,488,1.45,490,1.402,583,2.84,600,2.717,1021,5.735,2125,3.409,3593,5.586,3600,3.108,5045,3.889,5046,6.838,5047,6.222,5048,6.695,5049,5.672,5050,5.672,5051,3.889,5052,3.889,5053,3.889,5054,3.889,5055,3.889,5056,3.889,5057,3.889,5058,3.889,5059,3.889,5060,3.889,5061,3.889,5062,3.889,5063,3.889,5064,3.889,5065,3.889,5066,5.672,5067,3.889,5068,3.889,5069,3.889,5070,3.889,5071,3.889,5072,3.889,5073,3.889,5074,3.889,5075,3.889,5076,3.889,5077,3.889,5078,3.889,5079,3.889,5080,3.889,5081,5.672,5082,4.306,5083,5.672,5084,4.306,5085,3.889,5086,3.889,5087,3.889,5088,3.889,5089,3.889,5090,3.889,5091,3.889,5092,3.889,5093,3.889,5094,3.889,5095,3.889,5096,3.889,5097,3.889,5098,3.889,5099,3.889,5100,3.889,5101,3.889]],["title/standards/text/unicode.html#unicode",[146,2.879]],["body/standards/text/unicode.html#unicode",[1,0.269,2,1.39,61,2.782,146,5.175,161,2.118,1021,5.084,2125,6.616,3593,6.298,5045,7.548,5102,7.548,5103,8.358,5104,8.358,5105,8.358,5106,8.358,5107,8.358,5108,8.358,5109,8.358]],["title/standards/text/unicode.html#unicode-包",[146,2.118,2133,2.92]],["body/standards/text/unicode.html#unicode-包",[1,0.363,4,1.313,8,1.329,13,1.498,15,2.652,23,1.239,27,1.251,31,0.626,32,0.609,33,0.676,34,0.782,35,0.828,36,0.865,37,0.96,38,1.03,39,1.278,40,1.047,41,1.098,42,1.218,43,1.362,63,0.883,74,1.035,107,3.575,109,3.415,110,2.938,111,1.045,116,1.408,146,3.554,583,1.766,600,3.197,1021,5.642,4602,5.583,5048,7.327,5049,6.37,5050,6.37,5051,4.577,5052,4.577,5053,4.577,5054,4.577,5055,4.577,5056,4.577,5057,4.577,5058,4.577,5059,4.577,5060,4.577,5061,4.577,5062,4.577,5063,4.577,5064,4.577,5065,4.577,5066,6.37,5067,4.577,5068,4.577,5069,4.577,5070,4.577,5071,4.577,5072,4.577,5073,4.577,5074,4.577,5075,4.577,5076,4.577,5077,4.577,5078,4.577,5079,4.577,5080,4.577,5081,6.37,5083,6.37,5085,4.577,5086,4.577,5087,4.577,5088,4.577,5089,4.577,5090,4.577,5110,5.068,5111,5.068,5112,5.068,5113,5.068,5114,5.068,5115,5.068,5116,5.068,5117,5.068,5118,5.068,5119,5.068,5120,5.068,5121,5.068,5122,7.053,5123,5.068,5124,5.068,5125,5.068,5126,5.068,5127,5.068,5128,5.068,5129,5.068,5130,5.068,5131,5.068,5132,5.068,5133,5.068,5134,5.068,5135,5.068]],["title/standards/text/unicode.html#utf8-包",[2133,2.92,5046,3.528]],["body/standards/text/unicode.html#utf8-包",[1,0.327,8,1.349,31,0.474,32,0.515,33,0.572,54,2.148,56,1.7,61,3.47,63,1.817,107,3.288,295,6.702,446,3.74,488,2.499,490,2.416,583,3.404,1021,5.618,1883,5.592,5046,7.596,5091,6.702,5092,6.702,5093,6.702,5094,6.702,5095,6.702,5096,6.702,5097,6.702,5098,6.702,5136,7.421,5137,7.421,5138,7.421,5139,7.421,5140,7.421,5141,7.421,5142,7.421]],["title/standards/text/unicode.html#2-5-3-utf16-包",[2133,2.309,5047,2.79,5099,3.002]],["body/standards/text/unicode.html#2-5-3-utf16-包",[8,1.222,161,1.856,1021,5.415,1881,4.963,3593,7.397,3600,6.144,5047,7.143,5100,7.686,5101,7.686,5143,8.511,5144,8.511]],["title/standards/data/container.html",[5145,3.713]],["body/standards/data/container.html",[1,0.367,3,1.092,6,1.375,7,1.331,8,1.293,9,1.921,12,3.214,13,1.485,23,1.861,24,0.86,25,0.797,27,1.529,31,0.599,32,0.586,33,0.663,34,0.701,35,0.742,36,0.861,37,0.829,38,0.931,39,1.068,40,0.985,41,0.964,42,1.07,43,1.196,44,1.36,46,3.365,54,2.203,56,0.944,58,0.744,59,2.287,63,1.66,64,2.314,65,1.289,69,1.424,74,1.157,79,2.285,82,1.202,92,0.734,104,3.189,107,1.423,111,1.277,112,1.236,113,1.182,114,1.174,115,1.223,116,1.174,117,1.345,118,1.067,119,1.067,120,1.044,121,0.664,122,0.689,124,3.469,125,6.229,126,6.417,134,0.656,379,4.072,465,0.706,488,1.08,490,2.691,578,2.218,583,3.046,607,1.06,746,2.314,832,1.826,838,0.764,1025,1.112,1035,1.343,1336,4.113,1337,5.863,1338,3.473,1339,2.084,1340,4.788,1493,0.764,1603,0.86,1604,0.889,1605,0.889,1606,0.921,1607,0.921,1608,0.921,1609,0.921,1610,0.889,1611,0.974,1612,0.974,1613,0.974,1614,1.06,1615,1.06,1616,1.112,1617,1.248,1618,1.248,1619,1.174,1620,1.248,1621,1.248,1622,1.248,1623,1.248,1624,1.292,1625,1.209,1626,1.141,1627,1.292,1628,1.292,1629,1.292,1630,1.209,1631,1.292,1632,1.292,1633,1.292,1634,1.06,1635,1.292,1636,1.343,1637,1.343,1638,1.343,1639,1.343,1640,1.343,1641,1.343,1642,1.343,1656,1.786,1839,1.87,2010,1.343,2011,1.343,2012,2.084,2015,1.917,2526,1.248,2561,1.343,2613,2.935,2621,1.473,2622,1.473,2852,3.345,2857,4.903,3103,2.407,3247,1.248,3255,2.314,3287,3.977,3291,1.561,3687,4.61,5145,2.746,5146,4.755,5147,2.896,5148,2.896,5149,2.896,5150,2.896,5151,4.755,5152,2.538,5153,1.473,5154,5.594,5155,2.896,5156,2.896,5157,2.896,5158,2.896,5159,1.68,5160,1.68,5161,1.68,5162,1.68,5163,2.896,5164,1.68,5165,1.68,5166,1.68,5167,3.206,5168,1.68,5169,2.896,5170,4.537,5171,2.896,5172,1.68,5173,1.68,5174,1.68,5175,8.301,5176,1.68,5177,1.68,5178,1.68,5179,1.68,5180,1.68,5181,1.68,5182,1.473,5183,2.151,5184,2.896,5185,1.68,5186,5.993,5187,3.816,5188,3.816,5189,4.903,5190,2.896,5191,1.68,5192,1.473,5193,1.473,5194,1.343,5195,1.68,5196,1.68,5197,1.68,5198,1.68,5199,1.68,5200,1.68,5201,1.68,5202,1.68,5203,1.68,5204,8.008,5205,5.117,5206,6.331,5207,7.623,5208,1.68,5209,1.68,5210,3.816,5211,2.896,5212,1.68,5213,1.68,5214,4.537,5215,1.68,5216,3.816,5217,2.896,5218,1.68,5219,2.896,5220,1.68,5221,1.68,5222,1.68,5223,1.68,5224,1.68,5225,1.68,5226,1.86,5227,1.86,5228,1.86]],["title/standards/data/container.html#container",[5145,3.713]],["body/standards/data/container.html#container",[5145,5.76,5229,8.864]],["title/standards/data/container.html#链表",[5230,5.714]],["body/standards/data/container.html#链表",[1,0.362,6,1.346,7,1.302,8,1.305,12,2.66,13,1.801,23,1.953,27,1.504,31,0.57,32,0.64,33,0.616,34,0.712,35,0.755,36,0.852,37,0.945,38,1.015,39,1.164,40,1.075,41,0.949,42,1.053,43,1.177,44,1.331,46,2.957,59,3.296,63,1.062,65,1.061,69,2.053,104,3.148,111,1.256,112,0.901,113,0.972,114,1.148,115,1.196,116,1.148,117,1.316,125,6.857,126,7.064,161,1.742,222,1.609,346,2.773,578,2.69,746,4.399,832,2.355,1336,5.214,1340,5.765,1656,2.302,2526,2.773,2613,2.871,3103,4.124,3171,3.469,3255,4.399,3538,2.207,3687,5.029,3921,4.399,5145,2.686,5146,6.076,5147,5.504,5148,5.504,5149,5.504,5150,5.504,5151,6.706,5152,4.824,5153,3.272,5154,8.05,5155,5.504,5156,5.504,5157,5.504,5158,5.504,5159,3.733,5160,3.733,5161,3.733,5162,3.733,5163,5.504,5164,3.733,5165,3.733,5166,3.733,5168,3.733,5169,5.504,5170,7.216,5171,5.504,5172,3.733,5173,3.733,5174,3.733,5231,4.134,5232,4.134,5233,4.134,5234,4.134,5235,4.134,5236,4.134,5237,4.134,5238,4.134,5239,4.134,5240,4.134,5241,4.134,5242,4.134,5243,4.134,5244,4.134,5245,4.134,5246,4.134,5247,4.134,5248,4.134,5249,4.134,5250,6.095,5251,4.134,5252,4.134,5253,4.134,5254,4.134,5255,4.134,5256,4.134,5257,4.134,5258,4.134,5259,4.134,5260,4.134]],["title/standards/data/container.html#环",[5261,5.714]],["body/standards/data/container.html#环",[1,0.364,3,1.642,6,1.57,7,1.519,8,1.28,12,2.629,13,1.425,23,1.665,27,1.681,31,0.548,32,0.548,33,0.698,34,0.704,35,0.643,36,0.842,37,0.806,38,0.865,39,0.992,40,1.011,41,1.061,42,1.176,43,1.315,44,1.552,46,2.923,54,2.943,59,2.195,63,1.578,64,4.917,65,1.237,74,0.985,79,2.122,82,2.553,104,2.097,111,1.404,112,1.485,113,1.134,114,1.34,115,1.396,116,1.34,117,1.535,118,1.605,119,1.605,120,1.57,125,3.042,126,4.426,134,1.7,161,1.872,223,0.872,265,3.794,304,3.133,488,2.293,490,3.144,583,3.716,607,2.746,993,4.047,1095,4.354,1656,2.685,2439,3.817,2561,3.48,3538,2.574,3687,5.962,5146,5.716,5151,4.047,5175,9.785,5176,4.354,5177,4.354,5178,4.354,5179,4.354,5180,4.354,5181,4.354,5182,3.817,5262,4.822,5263,4.822,5264,4.822,5265,4.822,5266,4.822,5267,4.822,5268,4.822,5269,4.822,5270,4.822,5271,4.822,5272,4.822,5273,4.047,5274,4.822,5275,4.822,5276,4.822,5277,4.822,5278,6.811,5279,4.822,5280,4.822,5281,4.822,5282,4.822,5283,4.822,5284,4.822,5285,4.822,5286,4.822,5287,4.822,5288,4.822,5289,4.822,5290,4.822]],["title/standards/data/container.html#堆",[5291,5.714]],["body/standards/data/container.html#堆",[1,0.365,3,1.038,6,0.992,7,0.96,8,1.239,9,2.396,12,3.364,13,0.9,23,1.666,24,1.409,25,1.306,27,1.191,31,0.601,32,0.473,33,0.609,34,0.608,35,0.701,36,0.792,37,0.571,38,0.761,39,0.873,40,0.716,41,0.751,42,0.833,43,0.932,44,0.981,46,3.479,56,1.28,58,1.218,63,1.735,65,1.238,69,0.864,74,1.392,79,2.579,92,1.202,104,3.23,107,2.017,111,0.995,112,1.052,113,1.135,114,0.846,115,0.882,116,0.846,117,0.97,118,1.014,119,1.014,120,0.992,121,1.087,122,1.128,124,4.249,125,3.044,223,0.551,379,4.848,465,1.156,490,2.572,578,2.13,673,1.821,832,1.735,838,1.251,1025,1.821,1035,2.199,1226,1.171,1337,6.62,1338,4.333,1339,3.136,1493,1.251,1603,1.409,1604,1.456,1605,1.456,1606,1.508,1607,1.508,1608,1.508,1609,1.508,1610,1.456,1611,1.595,1612,1.595,1613,1.595,1614,1.735,1615,1.735,1616,1.821,1617,2.044,1618,2.044,1619,1.922,1620,2.044,1621,2.044,1622,2.044,1623,2.044,1624,2.116,1625,1.98,1626,1.869,1627,2.116,1628,2.116,1629,2.116,1630,1.98,1631,2.116,1632,2.116,1633,2.116,1634,1.735,1635,2.116,1636,2.199,1637,2.199,1638,2.199,1639,2.199,1640,2.199,1641,2.199,1642,2.199,1839,2.814,1881,1.777,2010,2.199,2011,2.199,2012,3.136,2015,2.885,2345,2.557,2613,3.352,2621,2.412,2622,2.412,2852,4.743,2857,6.254,2882,2.751,3247,2.044,3287,5.395,3538,1.627,5102,2.751,5183,3.238,5184,4.358,5185,2.751,5186,7.476,5187,5.411,5188,5.411,5189,6.254,5190,4.358,5191,2.751,5192,2.412,5193,2.412,5194,2.199,5195,2.751,5196,2.751,5197,2.751,5198,2.751,5199,2.751,5200,2.751,5201,2.751,5202,2.751,5203,2.751,5204,8.989,5205,6.708,5206,7.753,5207,8.724,5208,2.751,5209,2.751,5210,5.411,5211,4.358,5212,2.751,5213,2.751,5214,6.155,5215,2.751,5216,5.411,5217,4.358,5218,2.751,5219,4.358,5220,2.751,5221,2.751,5222,2.751,5223,2.751,5224,2.751,5225,2.751,5292,3.047,5293,3.047,5294,3.047,5295,3.047,5296,3.047,5297,3.047,5298,3.047,5299,3.047,5300,3.047,5301,3.047,5302,3.047,5303,3.047,5304,3.047,5305,3.047,5306,3.047,5307,3.047,5308,3.047,5309,3.047,5310,3.047,5311,3.047,5312,3.047,5313,3.047,5314,3.047,5315,3.047,5316,3.047,5317,3.047,5318,3.047,5319,3.047,5320,3.047,5321,3.047,5322,3.047,5323,3.047,5324,3.047,5325,3.047,5326,3.047,5327,3.047,5328,3.047,5329,3.047,5330,3.047,5331,3.047,5332,3.047,5333,3.047,5334,3.047,5335,3.047,5336,3.047,5337,3.047]],["title/standards/io/bufio.html",[5338,4.523]],["body/standards/io/bufio.html",[1,0.368,3,0.754,4,1.459,8,1.21,9,1.076,13,1.421,14,2.118,23,1.175,25,1.594,26,1.571,31,0.593,32,0.581,33,0.628,34,0.726,35,0.642,36,0.724,37,0.569,38,0.611,39,0.542,40,0.552,41,0.579,42,0.642,43,0.718,46,2.084,53,1.36,54,1.076,56,1.179,58,1.922,59,1.008,60,3.662,61,3.337,62,1.296,63,1.618,65,0.568,69,1.054,74,0.76,75,1.549,92,0.874,97,1.261,107,0.746,109,0.862,110,0.922,111,0.767,112,0.483,113,0.521,114,0.615,115,0.641,116,0.615,117,0.705,118,0.737,119,0.737,120,0.721,121,0.79,122,0.82,134,0.781,146,2.423,438,1.024,446,2.838,465,0.84,472,1.753,488,1.252,490,3.188,564,2.771,565,1.798,568,3.024,580,3.425,581,1.359,583,2.369,586,1.748,590,0.91,604,1.753,742,1.397,838,0.91,1021,2.516,1331,0.935,1336,3.286,1488,4.491,1493,0.91,1603,1.024,1604,1.059,1605,1.059,1606,1.096,1607,1.096,1608,1.096,1609,1.096,1610,1.059,1839,1.291,1840,4.213,1992,2.838,2275,4.312,2280,4.66,2281,3.778,2449,4.105,2697,1.986,3669,3.47,3670,2.944,3671,3.124,3689,1.598,4066,2.944,4072,1.598,4521,1.261,4530,3.781,5338,4.458,5339,2,5340,4.531,5341,3.358,5342,3.121,5343,3.358,5344,5.086,5345,5.477,5346,3.358,5347,3.358,5348,2.684,5349,2.214,5350,6.138,5351,8.384,5352,6.524,5353,8.04,5354,2,5355,2,5356,3.358,5357,3.358,5358,2,5359,2,5360,5.473,5361,5.086,5362,2,5363,2,5364,2,5365,6.847,5366,6.138,5367,2,5368,2,5369,4.341,5370,3.358,5371,2,5372,3.358,5373,3.358,5374,3.358,5375,2,5376,4.341,5377,2.214,5378,2.214,5379,2,5380,2,5381,2,5382,6.138,5383,2,5384,6.063,5385,5.086,5386,3.358,5387,3.358,5388,1.753,5389,6.138,5390,2,5391,1.669,5392,2,5393,1.753,5394,2,5395,2]],["title/standards/io/bufio.html#bufio",[5338,4.523]],["body/standards/io/bufio.html#bufio",[161,1.903,1573,6.906,2449,4.397,4530,4.567,5338,6.906,5396,8.725,5397,8.725]],["title/standards/io/bufio.html#bufio包中的数据类型",[5398,5.714]],["body/standards/io/bufio.html#bufio包中的数据类型",[161,1.891,223,1.569,1087,7.162,2275,3.771,2280,4.538,2281,5.817,5339,7.83,5399,8.67]],["title/standards/io/bufio.html#bufio-Reader",[5340,4.125]],["body/standards/io/bufio.html#bufio-Reader",[1,0.361,3,0.955,4,1.684,8,1.179,9,1.307,13,0.829,14,2.572,23,0.685,25,1.935,26,1.908,31,0.587,32,0.556,33,0.587,34,0.679,35,0.614,36,0.693,37,0.534,38,0.574,39,0.408,40,0.416,41,0.437,42,0.484,43,0.542,46,2.099,53,1.651,56,1.221,58,2.267,59,1.276,60,3.627,61,3.397,62,0.977,63,1.573,65,0.719,69,1.281,74,0.922,75,1.168,92,1.106,97,1.597,107,0.944,109,1.092,110,1.168,111,0.578,112,0.611,113,0.66,114,0.779,115,0.812,116,0.779,117,0.893,118,0.933,119,0.933,120,0.913,121,1.001,122,1.038,134,0.989,146,1.413,161,0.611,197,2.411,202,1.318,223,1.507,265,1.562,303,2.857,438,1.297,446,2.276,465,1.064,472,2.22,488,0.944,490,3.041,564,2.744,565,2.042,568,3.036,580,1.413,581,1.72,583,1.976,586,2.123,590,1.152,604,2.22,628,3.582,742,1.769,838,1.152,1021,1.468,1215,4.516,1226,1.736,1315,1.822,1331,1.184,1336,3.73,1488,4.746,1493,1.152,1572,2.935,1603,1.297,1604,1.34,1605,1.34,1606,1.388,1607,1.388,1608,1.388,1609,1.388,1610,1.34,1839,1.635,1840,4.671,1880,2.532,1992,2.857,2275,4.388,2449,1.413,3171,2.353,3689,2.024,3921,2.024,4066,2.22,4072,2.024,4521,1.597,4530,3.73,4894,2.532,5340,4.692,5341,4.078,5342,2.353,5343,4.078,5344,5.871,5345,5.564,5346,4.078,5347,4.078,5348,3.26,5350,6.878,5351,8.757,5352,6.436,5353,8.556,5354,2.532,5355,2.532,5356,4.078,5357,4.078,5358,2.532,5359,2.532,5360,6.014,5361,5.871,5362,2.532,5363,2.532,5364,2.532,5365,7.524,5366,6.878,5367,2.532,5368,2.532,5369,5.12,5370,2.532,5371,2.532,5372,4.078,5373,4.078,5374,4.078,5375,2.532,5376,5.12,5379,2.532,5380,2.532,5381,2.532,5382,6.878,5383,2.532,5400,2.532,5401,2.532,5402,2.532,5403,2.532,5404,2.532,5405,2.532,5406,2.532,5407,2.804,5408,2.804,5409,2.804,5410,2.804,5411,2.804,5412,2.804,5413,2.804,5414,2.804,5415,2.804,5416,2.804,5417,2.804,5418,2.532,5419,2.804,5420,2.804,5421,2.804,5422,2.804,5423,2.804,5424,2.804,5425,2.804,5426,2.804,5427,2.804,5428,2.804,5429,2.804,5430,2.804,5431,2.804,5432,2.804,5433,2.804,5434,5.67,5435,2.804,5436,2.804,5437,2.804,5438,4.093,5439,2.804,5440,2.804,5441,2.804,5442,2.804,5443,2.804,5444,2.804,5445,2.804,5446,2.804,5447,2.804,5448,2.804,5449,2.804,5450,2.804,5451,2.113,5452,2.804,5453,2.804,5454,2.804,5455,2.804,5456,2.804,5457,2.804,5458,2.804,5459,2.804,5460,2.804,5461,2.804,5462,2.804,5463,2.804,5464,2.804,5465,2.804,5466,2.804,5467,4.516,5468,2.804,5469,2.804,5470,2.804,5471,2.532,5472,2.804,5473,2.804,5474,2.804,5475,2.804,5476,2.804,5477,2.804,5478,2.804,5479,2.804,5480,2.804,5481,2.804,5482,2.804,5483,2.804,5484,2.804,5485,2.804,5486,2.804,5487,2.804,5488,2.804,5489,2.804,5490,2.804,5491,2.804,5492,2.804,5493,2.804,5494,2.532,5495,2.804,5496,2.804,5497,2.804,5498,2.804,5499,2.804,5500,2.804,5501,2.804,5502,2.804,5503,2.804,5504,2.804,5505,2.532,5506,2.804,5507,2.353,5508,2.804,5509,2.804]],["title/standards/io/bufio.html#bufio-Writer",[5384,4.796]],["body/standards/io/bufio.html#bufio-Writer",[1,0.356,8,1.217,13,1.489,23,1.232,31,0.517,32,0.562,33,0.624,34,0.721,35,0.664,36,0.749,37,0.596,38,0.64,39,0.734,40,0.748,41,0.785,42,0.87,43,0.973,46,1.865,54,2.034,56,0.947,60,3.63,61,2.913,62,1.757,63,1.661,75,2.099,111,1.039,146,3.541,223,1.271,253,2.16,446,3.541,488,1.697,490,2.996,564,2.771,568,2.807,580,4.41,583,2.449,628,3.645,996,2.225,1021,3.678,1215,3.501,1315,4.566,1488,2.871,1544,3.798,2280,5.428,2317,5.839,2449,5.027,2697,3.752,3669,5.839,3670,5.562,3671,5.257,3921,3.638,4066,3.99,4530,2.638,5342,4.23,5345,4.881,5384,7.999,5385,7.903,5386,6.346,5387,6.346,5388,3.99,5389,8.607,5390,4.552,5391,3.798,5392,4.552,5393,3.99,5400,4.552,5401,4.552,5402,4.552,5403,4.552,5404,4.552,5405,4.552,5406,4.552,5418,4.552,5510,5.04,5511,5.04,5512,5.04,5513,5.04,5514,5.04,5515,5.04,5516,4.23,5517,5.04,5518,5.04,5519,5.04,5520,5.04,5521,5.04,5522,5.04,5523,7.026,5524,5.04,5525,5.04,5526,5.04,5527,5.04,5528,5.04,5529,5.839,5530,5.04,5531,5.04,5532,5.04,5533,5.04,5534,5.04,5535,5.04,5536,5.04,5537,5.04,5538,5.04,5539,5.04,5540,5.04,5541,5.04,5542,5.04,5543,5.04,5544,5.04,5545,5.04,5546,5.04,5547,5.04,5548,5.04,5549,5.04]],["title/standards/io/bufio.html#ReadWriter",[2281,3.834]],["body/standards/io/bufio.html#ReadWriter",[1,0.329,8,1.034,13,2.455,23,2.031,31,0.619,32,0.577,33,0.64,34,0.741,583,2.896,1992,4.186,2211,6.972,2275,4.21,2280,5.067,2281,6.495,5394,7.503,5395,7.503,5550,8.308]],["title/standards/os/filepath.html",[5551,4.125]],["body/standards/os/filepath.html",[1,0.369,8,1.181,23,0.653,25,1.861,31,0.639,32,0.483,33,0.487,34,0.563,35,0.597,36,0.673,37,0.649,38,0.552,39,0.389,40,0.397,41,0.416,42,0.461,43,0.516,45,1.398,56,1.946,62,2.736,74,0.887,107,1.462,153,3.438,564,2.273,565,1.992,568,1.927,795,4.344,799,5.063,802,1.856,1656,1.488,1672,2.318,2474,3.135,2526,4.665,2612,4.107,2614,3.899,2865,2.914,3277,4.472,3625,4.39,3651,3.961,3665,3.961,4521,1.522,4756,3.135,4757,7.229,4858,4.83,5551,5.377,5552,3.922,5553,2.413,5554,6.279,5555,2.413,5556,4.762,5557,2.413,5558,3.922,5559,2.413,5560,5.897,5561,5.304,5562,4.955,5563,2.413,5564,3.922,5565,2.413,5566,3.438,5567,5.707,5568,5.707,5569,3.922,5570,2.413,5571,3.922,5572,2.413,5573,2.413,5574,2.672,5575,4.955,5576,2.672,5577,2.413,5578,2.413,5579,4.955,5580,3.922,5581,2.413,5582,2.115,5583,5.707,5584,3.438,5585,2.413,5586,2.413,5587,3.922,5588,2.413,5589,2.413,5590,7.09,5591,6.476,5592,2.413,5593,3.922,5594,4.343,5595,3.922,5596,6.279,5597,2.413,5598,2.413,5599,2.413,5600,2.413,5601,2.413,5602,8.034,5603,7.09,5604,6.279,5605,2.672,5606,2.413,5607,2.413,5608,2.413,5609,2.413]],["title/standards/os/filepath.html#filepath",[5551,4.125]],["body/standards/os/filepath.html#filepath",[1,0.307,161,1.775,223,1.472,303,4.101,795,5.577,799,4.733,3277,5.448,5551,7.332,5552,8.637,5553,7.349,5610,8.137,5611,8.137,5612,8.137,5613,8.137,5614,8.137,5615,8.137,5616,8.137,5617,8.137,5618,8.137,5619,8.137,5620,8.137,5621,8.137,5622,8.137]],["title/standards/os/filepath.html#解析路径名字符串",[5623,5.714]],["body/standards/os/filepath.html#解析路径名字符串",[1,0.351,8,1.155,31,0.593,32,0.46,56,1.936,74,1.353,161,1.839,222,3.283,223,1.679,799,4.833,983,4.179,1320,5.244,1572,4.305,3277,4.803,4757,7.892,4858,7.005,4940,6.552,5451,4.992,5554,9.106,5555,5.983,5556,4.992,5557,5.983,5558,7.616,5559,5.983,5560,6.675,5561,5.56,5562,8.377,5624,6.625,5625,6.625,5626,6.625,5627,6.625,5628,6.625,5629,6.625,5630,6.625,5631,6.625,5632,6.625,5633,6.625,5634,6.625,5635,6.625,5636,6.625,5637,6.625,5638,6.625,5639,6.625,5640,6.625,5641,6.625,5642,6.625,5643,6.625,5644,6.625,5645,6.625,5646,6.625,5647,6.625,5648,6.625,5649,5.983,5650,6.625,5651,5.983,5652,6.625,5653,6.625,5654,6.625,5655,6.625]],["title/standards/os/filepath.html#相对路径和绝对路径",[5656,5.714]],["body/standards/os/filepath.html#相对路径和绝对路径",[1,0.356,8,1.173,31,0.632,32,0.476,33,0.528,34,0.611,35,0.647,36,0.73,56,1.913,107,2.308,161,1.495,223,1.24,564,2.394,565,2.468,795,3.997,799,4.893,1656,3.817,2614,3.587,3277,3.904,3665,6.802,5560,6.82,5563,6.19,5564,7.781,5565,6.19,5566,6.82,5567,8.928,5568,8.928,5569,7.781,5570,6.19,5571,7.781,5572,6.19,5651,6.19,5657,6.854,5658,6.854,5659,6.854,5660,6.854,5661,6.854,5662,6.854,5663,6.854,5664,6.854,5665,6.854,5666,6.854,5667,6.854,5668,6.854,5669,6.854,5670,6.854,5671,6.854,5672,6.854,5673,5.752,5674,6.854,5675,6.854,5676,6.854,5677,6.854]],["title/standards/os/filepath.html#路径的切分和拼接",[5678,5.714]],["body/standards/os/filepath.html#路径的切分和拼接",[1,0.358,8,1.127,31,0.612,32,0.437,33,0.485,34,0.561,35,0.594,36,0.671,37,0.745,38,0.799,45,3.295,56,1.971,161,1.373,222,2.451,223,1.733,799,5.123,802,4.373,996,2.779,1096,4.744,1320,4.983,2612,4.091,2614,5.014,3625,6.655,3651,6.536,3875,5.685,4757,7.906,4940,5.475,5556,6.823,5560,6.46,5561,7.599,5573,5.685,5575,8.177,5577,5.685,5578,5.685,5579,8.177,5679,6.295,5680,6.295,5681,6.295,5682,6.295,5683,6.295,5684,6.295,5685,7.37,5686,6.295,5687,6.295,5688,6.295,5689,6.295,5690,6.295,5691,6.295,5692,6.295,5693,6.295,5694,6.295,5695,6.295,5696,6.295,5697,6.295,5698,6.295,5699,6.295,5700,6.295,5701,6.295,5702,6.295,5703,6.295,5704,6.295,5705,6.295,5706,6.295]],["title/standards/os/filepath.html#规整化路径",[5707,5.714]],["body/standards/os/filepath.html#规整化路径",[1,0.356,8,0.976,31,0.501,56,1.757,62,2.732,223,1.418,795,4.572,799,4.63,996,3.46,1226,3.596,2612,6.079,3277,4.465,4096,5.446,5451,5.907,5708,7.839,5709,7.839,5710,7.839,5711,7.839,5712,7.839,5713,7.839,5714,7.839,5715,7.839,5716,7.839,5717,7.839,5718,7.839,5719,7.839,5720,7.08,5721,7.839,5722,7.839,5723,7.839]],["title/standards/os/filepath.html#符号链接指向的路径名",[5724,5.714]],["body/standards/os/filepath.html#符号链接指向的路径名",[1,0.353,8,0.954,31,0.59,32,0.532,33,0.591,34,0.684,35,0.724,36,0.817,37,0.907,56,1.734,161,1.672,265,4.27,564,2.13,565,2.644,799,4.568,5580,8.336,5581,6.923,5582,6.069,5583,9.283,5584,7.307,5585,6.923,5586,6.923,5587,8.336,5588,6.923,5589,6.923,5725,7.666,5726,7.666,5727,7.666,5728,7.666,5729,7.666,5730,7.666,5731,7.666,5732,7.666]],["title/standards/os/filepath.html#文件路径匹配",[5733,5.714]],["body/standards/os/filepath.html#文件路径匹配",[1,0.357,8,0.977,25,3.364,31,0.622,32,0.412,33,0.457,34,0.529,35,0.56,36,0.632,37,0.702,38,0.753,39,0.864,40,0.881,41,0.924,42,1.025,43,1.146,56,1.652,62,3.487,74,1.212,107,1.997,153,6.214,198,4.282,313,4.47,564,2.181,568,2.394,795,3.46,1672,3.716,2865,3.98,4521,3.379,4602,8.503,4940,3.98,5590,9.216,5591,8.201,5592,5.358,5593,7.089,5595,5.358,5596,8.794,5597,5.358,5598,5.358,5599,5.358,5600,5.358,5601,5.358,5720,5.358,5734,5.933,5735,5.933,5736,5.933,5737,7.85,5738,7.089,5739,5.933,5740,7.85,5741,5.933,5742,5.933,5743,5.933,5744,5.933,5745,5.933,5746,9.362,5747,7.85,5748,5.933,5749,7.85,5750,5.933,5751,5.933,5752,5.933,5753,5.933,5754,5.933,5755,5.933,5756,5.933,5757,5.933,5758,5.933,5759,5.933,5760,5.933,5761,5.933,5762,5.933,5763,5.933,5764,5.933,5765,5.933,5766,5.933,5767,5.933,5768,5.933,5769,5.933,5770,5.933,5771,5.933]],["title/standards/os/filepath.html#遍历目录",[5772,5.714]],["body/standards/os/filepath.html#遍历目录",[1,0.326,8,1.063,23,1.651,31,0.545,56,1.603,223,1.222,253,2.894,265,3.762,296,5.668,564,2.601,568,2.604,799,4.867,1226,3.281,1430,3.939,2474,6.162,2526,6.805,2580,5.668,3944,5.089,4756,6.162,4940,4.531,5551,4.875,5602,9.832,5603,9.5,5604,9.159,5606,6.099,5773,6.754,5774,6.754,5775,6.754,5776,6.754,5777,6.754,5778,6.754,5779,6.754,5780,6.754,5781,6.754,5782,6.754,5783,6.754,5784,6.754,5785,6.754,5786,6.754,5787,6.754,5788,6.754,5789,5.668,5790,6.754,5791,6.754,5792,6.754,5793,6.754,5794,6.754,5795,6.754,5796,6.754,5797,6.754,5798,6.754,5799,6.754,5800,6.754,5801,6.754,5802,6.754,5803,6.754,5804,6.754,5805,6.754,5806,6.754,5807,6.754]],["title/standards/os/filepath.html#Windows-起作用的函数",[795,2.451,5808,4.203]],["body/standards/os/filepath.html#Windows-起作用的函数",[161,1.885,171,4.132,3277,4.923,5551,6.239,5607,7.806,5608,7.806,5609,7.806,5809,8.643,5810,8.643,5811,8.643]],["title/standards/text/strings.html",[56,1.073]],["body/standards/text/strings.html",[1,0.367,2,0.599,4,1.839,6,2.17,7,2.1,8,1.13,9,1.591,26,1.976,27,2.09,31,0.67,32,0.659,33,0.653,34,0.737,35,0.759,36,0.756,37,0.84,38,0.986,39,1.034,40,1.054,41,1.038,42,0.949,43,0.903,44,2.146,46,1.334,54,2.851,55,7.01,56,2.033,59,2.13,60,1.421,61,1.199,62,1.256,63,1.162,65,1.2,66,3.25,69,2.793,74,1.45,79,0.665,107,1.575,109,0.83,111,1.133,112,1.02,113,1.1,114,1.001,115,0.617,116,0.593,117,0.679,124,1.056,128,3.242,129,2.402,134,0.752,136,1.244,146,1.816,490,2.756,565,0.611,586,1.003,746,2.601,747,2.601,749,1.163,760,1.54,1021,1.116,1022,5.172,1173,0.914,1331,1.522,1337,1.431,1339,1.386,1592,1.346,1779,1.54,1843,3.132,2002,4.435,2275,1.567,2383,3.969,2665,2.852,2865,5.005,3094,2.852,3107,2.601,3625,3.25,3651,4.435,3664,1.688,3693,5.123,3987,2.852,3988,2.852,3989,2.852,3990,2.852,5145,1.386,5152,5.905,5189,3.703,5348,1.54,5360,1.54,5556,3.525,5812,3.926,5813,1.926,5814,1.926,5815,1.926,5816,1.926,5817,2.852,5818,3.254,5819,3.703,5820,1.926,5821,3.254,5822,1.926,5823,1.926,5824,1.926,5825,1.926,5826,2.133,5827,4.965,5828,4.225,5829,4.965,5830,1.926,5831,4.225,5832,1.926,5833,3.254,5834,3.254,5835,3.254,5836,2.133,5837,1.926,5838,2.133,5839,1.926,5840,1.926,5841,1.926,5842,2.133,5843,1.926,5844,1.926,5845,3.254,5846,6.737,5847,1.926,5848,4.965,5849,3.254,5850,1.926,5851,1.926,5852,1.926,5853,1.926,5854,1.926,5855,1.926,5856,1.926,5857,1.926,5858,1.926,5859,1.926,5860,3.254,5861,4.965,5862,4.965,5863,4.225,5864,4.225,5865,1.926,5866,3.254,5867,1.926,5868,3.254,5869,4.225,5870,1.926,5871,1.926,5872,1.926,5873,1.926,5874,3.254,5875,1.926,5876,1.926,5877,1.926,5878,1.926,5879,1.926,5880,1.926,5881,1.926,5882,2.133,5883,1.926,5884,4.864,5885,4.352,5886,4.965,5887,4.965,5888,4.225,5889,4.225,5890,4.965,5891,1.926,5892,1.926,5893,1.926,5894,1.926,5895,1.926,5896,1.926,5897,4.225,5898,1.926,5899,1.926,5900,1.926,5901,1.926,5902,1.926,5903,1.926,5904,2.133,5905,1.926]],["title/standards/text/strings.html#strings",[56,1.073]],["body/standards/text/strings.html#strings",[56,1.831,1042,7.593,1087,6.069,5812,7.057,5906,8.408,5907,8.408,5908,8.408,5909,8.408,5910,8.408,5911,8.408,5912,8.408,5913,8.408,5914,8.408,5915,8.408,5916,8.408,5917,8.408,5918,8.408,5919,8.408]],["title/standards/text/strings.html#前缀和后缀",[5920,5.714]],["body/standards/text/strings.html#前缀和后缀",[1,0.354,4,1.84,6,2.311,7,2.236,8,0.884,27,2.174,31,0.64,32,0.493,33,0.547,34,0.633,35,0.67,36,0.757,37,0.84,38,0.902,39,1.034,40,1.054,41,1.105,42,1.226,44,2.285,54,2.898,56,2.018,69,2.497,107,2.965,109,2.764,760,5.124,1022,5.016,1551,4.478,2383,7.226,2665,6.971,3538,3.79,5813,6.411,5814,6.411,5815,6.411,5816,6.411,5817,6.971,5818,7.953,5819,7.579,5820,6.411,5921,7.953,5922,8.807,5923,7.099,5924,7.099]],["title/standards/text/strings.html#判断是否包含字符串",[5925,5.714]],["body/standards/text/strings.html#判断是否包含字符串",[1,0.276,31,0.549,54,2.486,56,1.613,107,2.892,628,3.578,3768,7.758,5145,5.582,5821,8.913,5822,7.758,5921,7.758]],["title/standards/text/strings.html#获取某个子字串在字符串中的位置（索引）",[5926,5.714]],["body/standards/text/strings.html#获取某个子字串在字符串中的位置（索引）",[1,0.356,4,1.567,6,1.969,7,1.905,8,0.753,27,1.962,31,0.655,32,0.552,33,0.613,34,0.709,35,0.571,36,0.645,37,0.716,38,1.01,39,0.881,40,0.898,41,0.942,42,1.045,43,1.168,44,1.947,54,2.73,56,1.772,63,1.386,65,1.552,69,2.95,74,1.235,111,1.639,112,1.319,113,1.423,114,1.681,115,1.751,116,1.681,117,1.926,124,2.993,128,4.587,628,3.311,746,5.739,747,5.739,1022,5.995,1551,3.816,2865,6.98,3538,3.23,5152,8.236,5823,5.463,5824,5.463,5825,5.463,5827,8.519,5828,8.021,5829,8.519,5830,5.463,5831,8.021,5927,7.951,5928,7.18,5929,6.049,5930,7.951,5931,7.951,5932,6.049,5933,6.049,5934,6.049,5935,6.049,5936,6.049]],["title/standards/text/strings.html#计算字符串出现次数",[5937,5.714]],["body/standards/text/strings.html#计算字符串出现次数",[1,0.355,2,1.438,4,2.24,6,2.242,7,2.17,8,0.857,27,2.133,31,0.603,32,0.656,33,0.531,34,0.614,35,0.816,36,0.734,37,0.815,38,0.875,39,1.003,40,1.023,41,1.073,42,1.189,43,1.33,44,2.217,54,2.734,56,1.774,63,1.201,65,1.767,66,4.785,69,2.808,111,1.42,112,1.502,113,1.62,128,4.203,1022,5.641,1331,3.651,1337,4.621,1551,4.345,1843,5.641,3094,6.841,3538,3.678,5832,6.22,5833,7.805,5834,7.805,5835,7.805,5837,6.22,5839,6.22,5840,6.22,5841,7.805,5928,6.22,5938,6.888,5939,6.888,5940,6.888,5941,6.888]],["title/standards/text/strings.html#字符串替换",[5942,5.714]],["body/standards/text/strings.html#字符串替换",[1,0.357,6,2.299,7,2.225,8,0.879,27,2.167,31,0.657,32,0.663,33,0.544,34,0.63,35,0.667,36,0.753,37,0.836,38,0.897,39,1.029,40,1.049,41,1.1,44,2.274,56,1.649,59,4.349,490,3.11,628,2.942,1022,4.023,1339,4.59,1551,4.455,3538,3.771,5189,7.562,5843,6.378,5844,6.378,5845,7.928,5846,9.695,5847,6.378,5848,9.025,5849,7.928,5943,7.063,5944,7.063,5945,7.063,5946,7.063,5947,7.063,5948,7.063,5949,7.063,5950,7.063,5951,7.063]],["title/standards/text/strings.html#重复字符串",[5952,5.714]],["body/standards/text/strings.html#重复字符串",[1,0.353,6,2.53,7,2.449,8,0.968,27,2.297,31,0.637,32,0.646,33,0.599,34,0.693,35,0.734,36,0.828,37,0.92,38,0.987,39,1.132,40,1.154,44,2.503,54,2.25,56,1.748,63,1.355,66,6.466,134,2.742,1551,4.904,3538,4.151,5850,7.02,5851,7.02,5852,7.02,5853,7.02,5854,7.02,5855,7.02,5953,7.773,5954,7.773,5955,7.773]],["title/standards/text/strings.html#大小写转换",[3781,5.16]],["body/standards/text/strings.html#大小写转换",[1,0.35,4,2.434,6,2.215,7,2.143,8,0.847,27,2.117,31,0.63,32,0.595,33,0.661,34,0.607,35,0.642,36,0.725,37,0.805,38,0.864,39,0.991,40,1.01,41,1.059,42,1.175,43,1.314,44,2.19,56,2.057,65,1.746,69,2.663,111,1.403,112,1.484,113,1.6,114,1.89,129,4.822,146,4.322,1551,4.292,3107,6.19,3538,3.633,5856,6.144,5857,6.144,5858,6.144,5859,6.144,5860,7.745,5861,8.905,5862,8.905,5863,8.481,5864,8.481,5865,6.144,5866,7.745,5867,6.144,5868,7.745,5956,8.576,5957,6.803,5958,6.803]],["title/standards/text/strings.html#修改字符串",[5959,5.714]],["body/standards/text/strings.html#修改字符串",[1,0.358,8,1.248,31,0.613,32,0.613,33,0.681,34,0.788,35,0.834,36,0.76,37,0.844,38,0.906,39,1.039,40,1.059,41,1.111,54,3.04,56,2.061,1551,4.501,3538,3.81,3664,5.648,5812,7.415,5869,8.667,5870,6.444,5871,6.444,5872,6.444,5873,6.444,5874,7.979,5875,6.444,5876,6.444,5877,6.444,5960,7.135,5961,7.135,5962,7.135,5963,7.135,5964,7.135,5965,7.135,5966,7.135,5967,7.135]],["title/standards/text/strings.html#JOIN",[3625,3.969]],["body/standards/text/strings.html#JOIN",[1,0.352,8,1.019,26,3.458,31,0.651,55,6.168,56,1.972,1551,5.164,1592,5.164,3538,4.371,3625,6.667,5878,7.392,5879,7.392,5880,7.392,5881,7.392,5968,8.185,5969,8.185]],["title/standards/text/strings.html#分割字符串",[3777,5.16]],["body/standards/text/strings.html#分割字符串",[1,0.365,8,1.115,9,2.452,26,2.819,31,0.637,32,0.622,33,0.514,34,0.595,35,0.442,38,0.595,46,2.47,54,2.694,55,8.04,56,1.939,60,2.632,62,2.326,63,1.163,69,2.776,74,1.901,79,1.459,136,2.731,161,2.03,223,1.406,265,2.609,490,3.243,565,1.342,716,5.051,749,2.553,972,3.931,1173,2.007,1779,3.381,2002,6.463,3538,2.501,3651,6.463,3693,6.913,3987,5.282,3988,5.282,3989,5.282,3990,5.282,4096,3.254,5556,5.857,5883,4.23,5884,7.088,5885,6.705,5886,7.65,5887,7.019,5888,7.019,5889,7.019,5890,7.65,5891,4.23,5892,4.23,5893,4.23,5894,4.23,5895,4.23,5896,4.23,5897,7.019,5898,4.23,5899,4.23,5900,4.23,5901,4.23,5902,4.23,5903,4.23,5970,4.684,5971,4.684,5972,4.684,5973,4.684,5974,4.684,5975,4.684,5976,4.684,5977,4.684,5978,4.684,5979,4.684,5980,4.684,5981,4.684,5982,4.684,5983,6.672,5984,4.684,5985,4.684,5986,4.684,5987,4.684,5988,4.684,5989,4.684,5990,4.684,5991,4.684,5992,4.684,5993,4.684,5994,4.684]],["title/standards/text/strings.html#从字符串中读取内容",[5995,5.714]],["body/standards/text/strings.html#从字符串中读取内容",[61,3.245,161,1.834,197,4.489,586,3.953,644,4.019,673,5.026,2275,4.239,5348,6.069,5360,6.069,5905,7.593,5996,8.408,5997,8.408,5998,8.408,5999,8.408,6000,8.408,6001,8.408,6002,8.408]],["title/standards/data/math.html",[4319,3.834]],["body/standards/data/math.html",[1,0.366,3,1.143,8,1.389,31,0.595,32,0.646,33,0.662,34,0.765,35,0.602,36,0.555,37,0.616,38,0.661,39,0.758,40,1.067,41,0.81,42,0.899,43,1.005,63,1.623,65,0.861,68,4.799,74,1.063,79,3.039,82,2.693,84,5.009,104,1.459,107,2.147,111,0.692,112,0.732,113,0.789,114,0.932,115,0.971,116,0.932,117,1.068,118,1.117,119,1.117,120,1.092,121,1.198,490,1.694,583,1.814,749,1.829,1173,4.228,1187,4.19,3595,4.144,4319,3.492,6003,3.03,6004,3.03,6005,3.03,6006,3.03,6007,4.7,6008,4.7,6009,3.03,6010,3.03,6011,3.03,6012,3.03,6013,3.03,6014,3.03,6015,3.03,6016,3.03,6017,3.03,6018,3.03,6019,3.03,6020,3.03,6021,3.03,6022,3.03,6023,3.03,6024,3.03,6025,5.758,6026,3.03,6027,3.03,6028,3.03,6029,3.03,6030,4.7,6031,3.03,6032,3.03,6033,3.03,6034,3.03,6035,3.922,6036,3.03,6037,3.03,6038,3.03,6039,3.03,6040,3.03,6041,3.03,6042,3.03,6043,3.03,6044,3.03,6045,3.03,6046,3.03,6047,3.03,6048,3.03,6049,4.7,6050,3.03,6051,5.758,6052,3.03,6053,3.03,6054,3.03,6055,3.03,6056,3.03,6057,3.03,6058,3.03,6059,3.03,6060,3.03,6061,3.03,6062,3.03,6063,3.03,6064,3.03,6065,3.03,6066,3.03,6067,3.03,6068,3.03,6069,3.03,6070,3.03,6071,3.03,6072,3.03]],["title/standards/data/math.html#math",[4319,3.834]],["body/standards/data/math.html#math",[4319,5.947,6073,8.864]],["title/standards/data/math.html#三角函数",[6074,5.714]],["body/standards/data/math.html#三角函数",[1,0.229,8,1.381,31,0.612,32,0.666,33,0.739,34,0.855,79,2.218,84,5.007,161,1.552,6003,6.427,6004,6.427,6005,6.427,6006,6.427,6007,7.966,6008,7.966,6009,6.427,6010,6.427,6011,6.427,6012,6.427,6013,6.427,6014,6.427,6015,6.427,6016,6.427,6017,6.427,6018,6.427,6075,7.117,6076,7.117,6077,7.117,6078,7.117]],["title/standards/data/math.html#幂次函数",[6079,5.714]],["body/standards/data/math.html#幂次函数",[1,0.354,8,1.366,31,0.542,32,0.647,33,0.516,34,0.596,35,0.632,36,0.713,37,0.791,38,0.849,39,0.974,40,1.383,41,1.042,42,1.155,43,1.292,63,1.479,79,2.644,84,4.967,1078,7.662,1173,2.867,6019,6.041,6020,6.041,6021,6.041,6022,6.041,6023,6.041,6024,6.041,6025,8.415,6026,6.041,6027,6.041,6028,6.041,6029,6.041,6030,7.662,6031,6.041,6032,6.041,6080,6.689,6081,6.689,6082,6.689,6083,6.689,6084,6.689,6085,8.484,6086,6.689,6087,6.689,6088,6.689,6089,6.689]],["title/standards/data/math.html#特殊函数",[6090,5.714]],["body/standards/data/math.html#特殊函数",[1,0.342,8,1.323,31,0.51,32,0.554,33,0.615,34,0.711,35,0.753,63,1.647,84,4.759,107,3.182,749,4.347,6033,7.201,6034,7.201,6035,6.009,6036,7.201,6037,7.201,6038,7.201,6091,7.974,6092,7.974,6093,7.974,6094,7.974,6095,7.974]],["title/standards/data/math.html#类型转化函数",[6096,5.714]],["body/standards/data/math.html#类型转化函数",[1,0.334,8,1.293,31,0.505,32,0.549,33,0.609,34,0.705,68,6.056,84,4.584,161,2.265,1187,6.056,3595,6.521,6039,7.14,6040,7.14,6041,7.14,6042,7.14,6043,7.14,6097,10.385]],["title/standards/data/math.html#其他函数",[6098,5.714]],["body/standards/data/math.html#其他函数",[1,0.354,3,1.689,8,1.373,31,0.512,32,0.482,33,0.382,34,0.442,35,0.468,36,0.528,37,0.587,38,0.63,39,0.722,40,0.736,41,0.772,42,0.856,43,0.958,63,1.653,65,1.273,68,4.052,74,1.419,79,3.187,82,2.604,84,4.986,104,2.157,107,1.67,111,1.022,112,1.081,113,1.167,114,1.378,115,1.435,116,1.378,117,1.579,118,1.651,119,1.651,120,1.614,121,1.77,490,2.262,583,2.422,1096,3.737,1173,4.431,1226,1.906,1420,3.58,2198,3.926,5685,6.274,6035,3.737,6044,4.479,6045,4.479,6046,4.479,6047,4.479,6048,4.479,6049,6.274,6050,4.479,6051,7.242,6052,4.479,6053,4.479,6054,4.479,6055,4.479,6056,4.479,6057,4.479,6058,4.479,6059,4.479,6060,4.479,6061,4.479,6062,4.479,6063,4.479,6064,4.479,6065,4.479,6066,4.479,6067,4.479,6068,4.479,6069,4.479,6070,4.479,6071,4.479,6072,4.479,6099,4.959,6100,4.959,6101,4.959,6102,4.959,6103,6.947,6104,4.959,6105,4.959,6106,4.959,6107,4.959,6108,4.959,6109,4.959,6110,4.959,6111,8.019,6112,8.019,6113,8.019,6114,4.959,6115,4.959,6116,4.959,6117,4.959,6118,4.959,6119,4.959,6120,4.959,6121,4.959,6122,6.947,6123,6.947,6124,6.947,6125,6.947,6126,4.959,6127,4.959]],["title/concurrent/goroutine.html",[590,2.347]],["body/concurrent/goroutine.html",[1,0.369,2,1.799,4,0.548,6,0.689,7,0.666,8,1.026,10,0.92,14,1.205,22,3.89,27,1.638,31,0.452,32,0.38,33,0.471,34,0.415,35,0.516,36,0.381,37,0.423,38,0.454,39,0.521,40,1.149,41,0.557,42,0.365,43,0.408,44,0.681,60,0.834,63,0.624,65,0.543,66,5.163,74,1.117,78,1.91,82,0.793,111,0.436,112,0.461,113,0.498,114,0.588,115,0.612,116,0.588,134,0.746,372,1.594,380,4.329,438,0.978,439,4.627,446,1.066,467,1.594,488,3.349,490,1.165,590,4.517,1024,6.351,1380,6.208,1390,5.768,1598,1.674,2270,2.257,2648,5.396,2649,1.594,2701,1.205,3089,3.669,3395,1.674,3397,5.883,3595,3.973,4050,3.503,4521,3.115,4854,5.254,5388,1.674,6128,1.527,6129,1.91,6130,4.199,6131,3.578,6132,3.578,6133,3.578,6134,3.578,6135,1.674,6136,2.832,6137,1.594,6138,1.419,6139,1.91,6140,1.91,6141,1.91,6142,1.91,6143,1.674,6144,1.91,6145,1.91,6146,3.003,6147,1.91,6148,2.115,6149,1.91,6150,1.91,6151,1.91,6152,2.115,6153,4.938,6154,1.91,6155,2.115,6156,4.938,6157,5.522,6158,1.91,6159,1.91,6160,1.91,6161,3.231,6162,2.582,6163,3.231,6164,3.231]],["title/concurrent/goroutine.html#goroutine",[590,2.347]],["body/concurrent/goroutine.html#goroutine",[]],["title/concurrent/goroutine.html#并发和并行",[6165,5.714]],["body/concurrent/goroutine.html#并发和并行",[60,3.11,223,1.426,304,5.123,2648,6.125,6128,5.691,6166,9.386,6167,7.884,6168,7.884,6169,7.884,6170,7.884,6171,7.884,6172,9.386,6173,7.884,6174,7.884,6175,7.884,6176,7.884,6177,7.884,6178,7.884,6179,7.884,6180,7.884,6181,7.884,6182,7.884,6183,7.884,6184,7.884,6185,7.884,6186,7.884,6187,7.884,6188,7.884,6189,9.386,6190,7.884,6191,7.884,6192,7.884,6193,7.884]],["title/concurrent/goroutine.html#goroutine-1",[590,2.347]],["body/concurrent/goroutine.html#goroutine-1",[1,0.356,2,1.804,4,0.859,6,1.079,7,1.044,8,1.176,10,1.442,14,1.889,22,3.312,27,2.021,31,0.546,32,0.439,33,0.55,34,0.564,35,0.598,36,0.55,37,0.61,38,0.655,39,0.751,40,1.348,41,0.803,42,0.573,43,0.64,44,1.067,63,0.899,65,0.851,66,6.139,74,1.458,82,1.242,111,0.683,112,0.723,113,0.78,114,0.921,115,0.96,116,0.921,134,1.169,161,0.723,198,2.393,202,2.424,222,1.291,223,1.482,253,1.421,439,1.982,488,1.116,490,1.679,590,4.541,611,1.671,644,3.025,661,4.657,716,2.154,736,2.154,1024,5.547,1226,2.972,1380,2.498,1390,3.007,2064,2.994,2133,2.303,2439,2.624,2648,1.889,2701,1.889,3397,6.996,3566,2.782,3567,2.498,3595,5.025,4050,2.498,4439,2.624,4854,6.482,5789,2.782,6129,2.994,6130,5.715,6135,2.624,6136,2.624,6137,2.498,6138,2.224,6139,2.994,6140,2.994,6141,2.994,6142,2.994,6143,2.624,6144,2.994,6145,2.994,6146,2.782,6147,2.994,6194,3.315,6195,3.315,6196,3.315,6197,3.315,6198,3.315,6199,3.315,6200,3.315,6201,3.315,6202,3.315,6203,3.315,6204,3.315,6205,3.315,6206,3.315,6207,3.315,6208,3.315,6209,3.315,6210,3.315,6211,3.315,6212,3.315,6213,3.315,6214,3.315,6215,3.315,6216,3.315,6217,3.315,6218,3.315,6219,3.315,6220,3.315,6221,3.315,6222,3.315,6223,3.315,6224,3.315,6225,3.315,6226,3.315,6227,3.315,6228,3.315,6229,2.782,6230,2.994,6231,2.994,6232,2.994,6233,2.994,6234,2.994,6235,3.315,6236,2.994,6237,2.994,6238,2.994,6239,2.994,6240,2.994,6241,2.994,6242,2.994,6243,2.994,6244,2.994,6245,2.994,6246,2.994,6247,2.994,6248,3.315,6249,2.994,6250,3.315,6251,3.315,6252,3.315,6253,3.315,6254,3.315,6255,3.315,6256,3.315,6257,3.315,6258,3.315,6259,3.315,6260,3.315,6261,3.315,6262,3.315,6263,3.315,6264,3.315,6265,3.315,6266,3.315,6267,3.315,6268,3.315,6269,3.315,6270,3.315,6271,3.315,6272,3.315,6273,3.315,6274,3.315,6275,3.315,6276,3.315,6277,3.315,6278,3.315,6279,3.315,6280,3.315,6281,3.315,6282,3.315,6283,3.315,6284,3.315,6285,3.315,6286,3.315,6287,3.315,6288,3.315,6289,3.315,6290,3.315,6291,3.315,6292,3.315,6293,3.315,6294,3.315,6295,3.315,6296,3.315,6297,3.315,6298,3.315,6299,3.315,6300,3.315,6301,3.315,6302,2.624,6303,3.315,6304,3.315,6305,3.315,6306,3.315,6307,3.315,6308,3.315,6309,3.315,6310,3.315,6311,3.315,6312,3.315,6313,3.315,6314,3.315,6315,3.315,6316,3.315,6317,3.315,6318,3.315,6319,3.315,6320,3.315,6321,2.994,6322,3.315,6323,3.315,6324,3.315,6325,3.315,6326,3.315,6327,3.315,6328,3.315,6329,3.315,6330,3.315,6331,3.315,6332,3.315,6333,3.315,6334,3.315,6335,3.315,6336,3.315,6337,3.315,6338,3.315,6339,2.624,6340,3.315,6341,3.315,6342,3.315,6343,3.315,6344,3.315,6345,3.315,6346,3.315,6347,3.315,6348,3.315,6349,5.157,6350,3.315,6351,3.315,6352,3.315,6353,3.315,6354,3.315,6355,5.157,6356,3.315,6357,3.315,6358,3.315,6359,3.315,6360,3.315,6361,3.315,6362,3.315,6363,3.315,6364,3.315,6365,3.315,6366,3.315,6367,3.315,6368,3.315,6369,3.315,6370,3.315,6371,3.315,6372,3.315,6373,3.315,6374,3.315,6375,3.315,6376,3.315,6377,3.315,6378,3.315,6379,3.315,6380,3.315,6381,3.315,6382,3.315,6383,3.315,6384,3.315,6385,3.315,6386,3.315,6387,3.315,6388,3.315,6389,3.315,6390,3.315,6391,3.315,6392,3.315,6393,3.315,6394,3.315,6395,3.315,6396,3.315,6397,3.315,6398,3.315,6399,3.315,6400,3.315,6401,3.315]],["title/concurrent/goroutine.html#Goroutine-调度器",[590,1.726,6229,3.528]],["body/concurrent/goroutine.html#Goroutine-调度器",[1,0.117,2,1.698,22,4.229,32,0.253,33,0.281,35,0.345,161,1.638,202,1.716,222,1.421,223,1.462,253,1.564,265,3.093,303,1.84,304,3.609,346,2.449,372,2.751,380,5.945,438,1.688,439,4.83,446,1.84,488,3.379,590,4.382,736,2.372,996,2.451,1024,6.415,1226,3.4,1380,6.412,1390,6.099,1427,3.297,1598,2.89,1881,2.129,2270,3.503,2439,2.89,2648,5.425,3089,4.509,3395,2.89,3801,2.536,4050,4.184,4439,2.89,4521,4.278,5388,2.89,6146,3.064,6149,3.297,6150,3.297,6151,3.297,6153,6.782,6154,3.297,6156,6.069,6157,6.069,6158,3.297,6159,3.297,6160,3.297,6161,5.015,6162,4.008,6163,5.015,6164,5.015,6229,4.66,6230,3.297,6231,3.297,6232,3.297,6233,3.297,6234,3.297,6236,3.297,6237,3.297,6238,3.297,6239,3.297,6240,3.297,6241,3.297,6242,3.297,6243,3.297,6244,3.297,6245,3.297,6246,3.297,6247,3.297,6249,3.297,6402,3.651,6403,3.651,6404,3.651,6405,3.651,6406,3.651,6407,3.651,6408,3.651,6409,3.651,6410,3.651,6411,3.651,6412,3.651,6413,3.651,6414,3.651,6415,3.651,6416,3.651,6417,3.651,6418,3.651,6419,3.651,6420,3.651,6421,3.651,6422,3.651,6423,3.651,6424,3.651,6425,3.651,6426,3.651,6427,3.651,6428,3.651,6429,3.651,6430,3.651,6431,3.651,6432,3.651,6433,3.651,6434,3.651,6435,3.651,6436,3.651,6437,3.651,6438,3.651,6439,3.651,6440,3.651,6441,3.651,6442,3.651,6443,3.651,6444,3.651,6445,3.651,6446,3.651,6447,3.651,6448,3.651,6449,5.553,6450,3.651,6451,3.651,6452,3.651,6453,3.651,6454,3.651,6455,3.651,6456,3.651,6457,3.651,6458,3.651,6459,3.651,6460,3.651,6461,3.651,6462,3.651,6463,3.651,6464,3.651,6465,3.651,6466,3.651,6467,3.651,6468,3.651,6469,3.651,6470,3.651,6471,3.651,6472,3.651,6473,3.651,6474,3.651,6475,3.651,6476,3.651,6477,3.651,6478,3.651,6479,3.651,6480,3.651,6481,3.651,6482,3.651,6483,3.651,6484,3.651,6485,3.651,6486,3.651,6487,3.651,6488,3.651,6489,3.651,6490,3.651,6491,3.651,6492,3.651,6493,3.651,6494,3.651,6495,3.651,6496,3.651,6497,3.651,6498,3.651,6499,3.651,6500,3.651,6501,3.651,6502,3.651,6503,3.651,6504,3.651,6505,3.651,6506,3.651,6507,3.651,6508,3.651,6509,3.651,6510,3.651,6511,3.651,6512,3.651,6513,3.651,6514,3.651,6515,3.651,6516,3.651,6517,3.651,6518,3.651,6519,3.651,6520,3.651,6521,3.651,6522,3.651,6523,3.651,6524,3.651,6525,3.651,6526,3.651,6527,3.651,6528,3.651,6529,3.651,6530,3.651,6531,3.651,6532,3.651,6533,3.651,6534,3.651,6535,3.651,6536,3.651,6537,3.651,6538,3.651,6539,3.651,6540,3.651,6541,3.651,6542,3.651,6543,3.651,6544,3.651,6545,3.651,6546,3.651,6547,3.651,6548,3.651,6549,3.297,6550,3.651,6551,3.651,6552,3.651,6553,3.651,6554,3.651,6555,3.651,6556,3.651,6557,3.651,6558,3.651,6559,3.651,6560,3.651,6561,3.651,6562,3.651,6563,3.651,6564,3.651,6565,3.651,6566,3.651,6567,3.651,6568,3.651,6569,3.651,6570,3.651,6571,3.651,6572,3.651,6573,5.553,6574,3.651,6575,3.651,6576,3.651,6577,3.651,6578,3.651,6579,3.651,6580,3.651,6581,3.651,6582,3.651,6583,3.651,6584,3.651,6585,3.651,6586,3.651,6587,3.651,6588,3.651,6589,3.651,6590,3.651,6591,3.651,6592,3.651,6593,3.651,6594,3.651,6595,3.651,6596,3.651,6597,3.651,6598,3.651,6599,3.651,6600,3.651,6601,3.651,6602,3.651,6603,3.651,6604,3.651,6605,3.651,6606,3.651,6607,3.651,6608,3.297,6609,3.651,6610,3.651,6611,3.651,6612,3.651,6613,3.651,6614,3.651,6615,3.651,6616,3.651,6617,3.651]],["title/standards/io/io.html",[580,2.879]],["body/standards/io/io.html",[0,1.647,1,0.368,2,1.029,3,0.372,4,0.714,5,1.224,6,0.355,7,0.344,8,0.94,9,1.523,10,1.936,12,2.218,13,1.443,23,1.847,26,0.842,27,0.68,31,0.627,32,0.661,33,0.705,34,0.738,35,0.751,36,0.82,37,0.788,38,0.873,39,0.711,40,0.725,41,0.76,42,0.684,43,0.385,44,0.351,45,1.044,48,0.583,53,1.785,54,0.985,56,0.744,58,1.951,59,0.497,60,0.787,61,2.817,62,0.38,63,1.198,65,0.28,69,1.384,74,1.442,75,3.015,82,0.747,92,0.43,95,2.46,97,0.621,101,0.758,111,0.411,112,0.742,113,0.257,114,0.303,115,0.316,116,0.554,117,0.347,118,0.363,119,0.363,120,0.355,121,0.389,122,0.404,128,1.34,129,1.024,134,1.57,136,1.163,139,0.822,438,2.434,447,1.738,465,0.414,473,2.181,474,1.385,488,2.243,490,3.221,564,2.351,565,2.398,566,0.709,568,3.087,580,2.652,581,1.69,583,2.633,586,3.738,588,2.128,590,0.448,803,3.275,838,0.448,1021,0.571,1331,2.062,1488,2.781,1493,0.819,1603,0.505,1604,0.522,1605,0.522,1839,0.636,1840,3.069,1992,2.46,2275,4.201,2276,0.864,2277,2.076,2278,2.702,2280,4.382,2281,1.338,2391,1.338,2449,3.648,2451,1.385,2472,0.732,2614,3.237,2697,2.81,2698,2.181,2851,0.864,2863,1.192,3048,0.709,3070,0.709,3071,0.758,3086,1.338,3107,1.44,3261,1.988,3277,0.621,3355,1.914,3598,1.296,3626,2.987,3669,0.788,3671,2.212,3673,1.385,3675,0.788,3689,3.214,4072,0.788,4521,1.136,4530,4.278,4538,0.916,4610,2.076,4754,4.753,4763,1.44,4775,1.44,4851,1.385,4858,1.385,5345,3.892,5348,0.788,5360,3.214,5391,3.355,5393,1.579,5566,3.524,5817,0.864,6618,5.981,6619,0.985,6620,0.985,6621,0.985,6622,0.985,6623,0.985,6624,2.753,6625,0.985,6626,0.985,6627,0.985,6628,0.985,6629,0.985,6630,0.985,6631,0.985,6632,0.985,6633,0.864,6634,2.181,6635,0.985,6636,0.864,6637,1.503,6638,0.985,6639,0.864,6640,0.864,6641,0.985,6642,0.864,6643,0.985,6644,1.674,6645,1.674,6646,0.985,6647,0.985,6648,0.985,6649,0.985,6650,0.985,6651,0.985,6652,1.091,6653,3.137,6654,3.864,6655,4.166,6656,3.864,6657,3.864,6658,2.312,6659,0.985,6660,4.848,6661,2.753,6662,0.985,6663,0.985,6664,0.985,6665,0.985,6666,3.137,6667,1.503,6668,2.312,6669,2.987,6670,0.985,6671,0.985,6672,0.985,6673,0.985,6674,0.985,6675,0.985,6676,3.965,6677,3.137,6678,0.985,6679,0.985,6680,0.985,6681,0.985,6682,0.985,6683,0.985,6684,0.985,6685,0.985,6686,2.312,6687,0.985,6688,2.181,6689,0.864,6690,4.659,6691,0.985,6692,0.985,6693,1.801,6694,0.985,6695,0.985,6696,0.985,6697,0.985,6698,1.801,6699,0.985,6700,0.985,6701,0.985,6702,0.864,6703,0.864,6704,0.864,6705,1.579,6706,0.985,6707,0.985,6708,3.579,6709,0.985,6710,3.074,6711,1.801,6712,0.864,6713,0.985,6714,0.985,6715,1.801,6716,1.801,6717,1.091,6718,1.801,6719,2.488,6720,1.801,6721,2.488,6722,0.985,6723,0.985,6724,1.091,6725,0.985,6726,0.985,6727,2.488,6728,1.801,6729,0.864,6730,0.985,6731,0.985,6732,0.985,6733,3.074,6734,0.985,6735,1.091,6736,0.985,6737,0.985,6738,1.091,6739,1.801,6740,2.488,6741,2.488,6742,0.985,6743,1.801,6744,0.985,6745,0.985,6746,0.985,6747,0.985,6748,0.985,6749,0.985,6750,2.312,6751,0.985,6752,2.856,6753,4.02,6754,0.985,6755,0.985,6756,1.801,6757,0.985,6758,0.985,6759,0.985,6760,0.985,6761,4.417,6762,3.736,6763,4.02,6764,1.801,6765,0.985,6766,1.801,6767,0.985,6768,3.736,6769,3.326,6770,0.985,6771,0.985,6772,0.985,6773,0.985,6774,1.801,6775,0.985,6776,0.985,6777,0.985,6778,2.312,6779,0.985,6780,0.985]],["title/standards/io/io.html#io",[580,2.879]],["body/standards/io/io.html#io",[161,1.891,223,1.569,580,5,2275,3.771,2280,4.538,6781,8.67,6782,8.67,6783,8.67]],["title/standards/io/io.html#Reader",[2275,2.485]],["body/standards/io/io.html#Reader",[1,0.361,4,1.378,8,0.662,9,2.111,12,1.771,23,1.3,31,0.532,32,0.578,33,0.642,34,0.65,35,0.689,36,0.777,37,0.863,38,0.926,39,0.775,41,0.828,42,0.919,56,0.999,58,2.127,61,2.771,63,1.271,74,1.916,95,4.194,197,2.84,223,1.32,303,2.681,488,2.802,490,3.409,564,2.488,565,2.565,566,3.457,568,3.082,581,3.264,586,4.665,716,3.457,736,3.457,1430,3.102,1544,4.008,1881,3.102,2275,4.08,2276,4.211,2614,3.817,3355,3.695,3944,4.008,4096,3.695,4521,3.03,4530,4.356,4754,5.609,4851,5.067,5391,6.272,5438,3.84,5673,4.465,6618,7.671,6619,4.804,6620,4.804,6621,4.804,6622,4.804,6623,4.804,6624,3.695,6625,4.804,6626,4.804,6627,4.804,6784,3.695,6785,4.804,6786,4.804,6787,5.32,6788,5.32,6789,5.32,6790,4.804,6791,5.32,6792,5.32,6793,5.32,6794,5.32,6795,5.32,6796,5.32,6797,5.32,6798,5.32,6799,5.32,6800,3.84,6801,5.32,6802,4.211,6803,4.804,6804,4.804,6805,4.804,6806,5.32,6807,5.32,6808,5.32,6809,5.32,6810,5.32,6811,5.32,6812,5.32,6813,5.32,6814,5.32,6815,5.32,6816,5.32,6817,5.32,6818,5.32,6819,5.32,6820,5.32,6821,5.32,6822,5.32,6823,5.32,6824,5.32,6825,5.32,6826,5.32]],["title/standards/io/io.html#Writer",[2280,2.991]],["body/standards/io/io.html#Writer",[1,0.355,8,0.914,9,2.125,12,2.993,23,1.795,31,0.575,32,0.624,33,0.693,61,2.444,63,1.567,74,1.5,134,2.589,488,3.027,490,3.383,564,2.498,565,2.103,568,2.742,1881,4.282,2198,5.812,2280,4.706,2472,4.926,2697,4.801,3944,5.533,5438,5.3,6618,7.694,6628,6.631,6629,6.631,6630,6.631,6784,5.101,6800,5.3,6827,7.342,6828,7.342,6829,6.631,6830,7.342,6831,7.342,6832,6.631,6833,5.812,6834,7.342,6835,7.342,6836,7.342]],["title/standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型",[2449,1.181,4530,1.227,5529,1.692,6837,2.344,6838,2.344]],["body/standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型",[1,0.339,4,1.665,31,0.411,32,0.446,33,0.495,34,0.573,35,0.607,161,2.321,171,3.953,223,1.163,447,5.769,580,3.238,628,2.677,996,3.65,2096,5.393,2275,2.795,2280,3.363,2449,5.446,3626,4.312,3673,4.464,4430,5.803,4530,5.74,5529,7.381,6624,6.352,6631,5.803,6632,5.803,6633,5.087,6634,7.238,6635,5.803,6636,5.087,6637,4.842,6638,5.803,6639,5.087,6640,5.087,6641,5.803,6642,5.087,6643,5.803,6644,5.393,6645,5.393,6646,5.803,6647,5.803,6648,5.803,6649,5.803,6650,5.803,6651,5.803,6653,5.087,6654,5.087,6655,5.087,6656,5.087,6784,4.464,6839,6.426,6840,6.426,6841,5.803,6842,6.426,6843,6.426,6844,6.426,6845,6.426,6846,6.426,6847,8.258,6848,9.021,6849,6.426,6850,6.426,6851,8.27]],["title/standards/io/io.html#ReaderAt-和-WriterAt",[161,0.725,6657,2.631,6658,2.79]],["body/standards/io/io.html#ReaderAt-和-WriterAt",[0,4.725,1,0.362,10,2.1,12,2.27,23,1.667,31,0.549,32,0.629,33,0.662,34,0.608,35,0.644,36,0.915,37,0.807,38,0.613,39,0.704,40,0.717,41,0.752,53,2.493,54,1.398,58,1.931,61,2.859,63,1.189,69,1.37,74,1.393,75,2.84,112,1.487,128,2.349,197,2.579,223,0.874,438,4.19,473,6.258,488,3.165,490,3.408,564,1.895,565,2.693,568,3.193,586,2.271,588,3.779,628,2.84,673,2.887,716,3.139,1331,3.628,2275,2.1,2317,4.923,2614,2.528,3944,5.139,4096,3.355,4754,2.887,5438,5.706,5673,4.054,6618,7.943,6657,5.398,6658,5.723,6659,4.362,6660,7.561,6661,3.355,6662,4.362,6663,4.362,6664,4.362,6665,4.362,6666,7.171,6667,3.639,6668,5.723,6669,3.241,6670,4.362,6671,4.362,6672,4.362,6673,4.362,6674,4.362,6675,4.362,6786,4.362,6790,4.362,6800,4.923,6802,6.258,6803,4.362,6804,4.362,6805,4.362,6829,4.362,6832,4.362,6833,3.823,6852,4.83,6853,4.83,6854,4.83,6855,4.83,6856,4.83,6857,4.83,6858,4.83,6859,4.83,6860,4.83,6861,4.83,6862,4.83,6863,4.83,6864,6.82,6865,4.83,6866,6.82,6867,4.83,6868,4.83,6869,4.83,6870,4.362,6871,4.83,6872,4.83,6873,4.83,6874,4.83,6875,4.83,6876,4.83,6877,4.83,6878,4.83,6879,4.83,6880,4.83,6881,4.83,6882,4.83,6883,4.83,6884,4.83]],["title/standards/io/io.html#ReaderFrom-和-WriterTo",[161,0.725,6676,2.505,6677,2.631]],["body/standards/io/io.html#ReaderFrom-和-WriterTo",[1,0.354,10,2.756,12,2.729,23,2.004,31,0.614,32,0.667,33,0.7,34,0.565,35,0.599,36,0.675,37,0.75,38,0.805,61,2.11,75,3.414,223,1.483,265,4.565,438,2.932,490,3.127,564,2.277,565,1.816,568,3.107,581,3.889,583,2.209,588,3.03,628,3.414,673,3.789,1331,2.677,1840,4.78,1992,3.194,2275,3.565,2280,4.29,2391,4.253,2614,3.317,3070,4.119,3071,4.403,3626,4.253,4072,4.575,4222,5.724,4754,4.9,5391,6.845,6339,5.017,6668,5.319,6669,4.253,6676,7.237,6677,7.191,6678,5.724,6679,5.724,6680,5.724,6681,5.724,6682,5.724,6683,5.724,6684,5.724,6685,5.724,6885,6.338,6886,6.338,6887,6.338,6888,6.338,6889,6.338,6890,6.338,6891,6.338,6892,8.197,6893,8.197,6894,5.319,6895,6.338,6896,6.338,6897,6.338,6898,6.338,6899,6.338,6900,6.338,6901,6.338,6902,6.338,6903,6.338,6904,6.338,6905,6.338,6906,6.338,6907,6.338]],["title/standards/io/io.html#Seeker",[6686,4.796]],["body/standards/io/io.html#Seeker",[1,0.36,5,4.844,12,1.992,23,1.463,31,0.641,32,0.71,33,0.724,34,0.788,35,0.745,36,0.841,38,0.76,45,3.132,53,2.886,63,1.637,69,1.697,74,1.804,75,3.288,97,3.408,136,3.489,223,1.083,438,2.768,474,5.484,564,1.663,568,1.825,580,3.015,583,2.751,586,2.813,628,2.492,996,2.641,1331,2.528,2275,2.602,2614,4.132,2697,3.195,3107,5.698,3261,6.377,3355,5.484,4610,4.509,5566,7.939,6661,4.157,6686,6.625,6687,5.404,6688,6.993,6689,4.737,6690,7.914,6691,5.404,6692,5.404,6693,7.129,6694,5.404,6695,5.404,6696,5.404,6697,5.404,6698,7.129,6699,5.404,6700,5.404,6701,5.404,6702,4.737,6703,4.737,6908,5.984,6909,5.984,6910,5.984,6911,5.984,6912,5.984,6913,5.984,6914,5.984,6915,5.984,6916,5.984,6917,5.984,6918,5.984,6919,5.984,6920,5.984,6921,5.984,6922,5.984,6923,5.984,6924,5.984,6925,5.984,6926,5.984]],["title/standards/io/io.html#Closer",[2277,4.306]],["body/standards/io/io.html#Closer",[1,0.358,8,0.873,9,2.529,10,4.14,12,2.333,23,1.713,31,0.608,32,0.661,33,0.734,34,0.779,35,0.825,36,0.747,82,3.274,223,1.581,303,3.532,564,2.428,565,2.727,568,2.665,1544,5.282,1881,4.088,2277,6.584,2278,5.265,2391,4.703,2614,4.983,6624,4.869,6669,6.387,6704,5.548,6705,6.916,6706,6.33,6707,6.33,6927,7.009,6928,7.009,6929,5.548,6930,7.009,6931,7.009,6932,7.009,6933,7.009,6934,7.009,6935,7.009,6936,7.009,6937,7.009,6938,7.009,6939,7.009]],["title/standards/io/io.html#其他接口",[6940,5.714]],["body/standards/io/io.html#其他接口",[1,0.359,4,1.335,12,2.941,23,2.159,31,0.613,32,0.666,33,0.715,34,0.827,35,0.674,36,0.76,37,0.844,38,0.906,39,0.75,40,0.765,41,0.802,42,0.89,53,1.884,59,2.345,61,3.088,62,1.796,69,1.461,101,3.579,134,2.516,136,3.005,161,2.146,564,2.274,565,2.044,568,3.001,586,2.422,641,3.882,936,4.324,1021,2.697,1226,1.98,1488,5.284,2275,3.103,2280,3.734,2281,4.787,2362,6.443,2478,3.579,2851,4.078,3626,5.927,3669,3.719,3673,3.579,3689,6.927,4566,5.988,4610,3.882,5348,3.719,5360,6.927,5393,5.648,5529,5.15,6644,4.324,6645,4.324,6708,8.377,6709,4.653,6710,7.978,6711,6.443,6712,4.078,6713,4.653,6714,4.653,6715,6.443,6716,6.443,6718,6.443,6719,7.391,6720,6.443,6721,7.391,6722,4.653,6723,4.653,6725,4.653,6784,4.956,6800,3.719,6847,4.653,6848,4.653,6941,5.152,6942,5.152,6943,5.152,6944,5.152,6945,5.152,6946,5.152,6947,5.152,6948,5.152,6949,5.152,6950,5.152,6951,5.152,6952,5.152,6953,5.152,6954,5.152,6955,5.152,6956,5.152,6957,5.152,6958,5.152,6959,5.152,6960,5.152,6961,5.152,6962,5.152,6963,5.152,6964,5.152,6965,5.152,6966,7.135,6967,5.152,6968,5.152,6969,5.152,6970,5.152,6971,5.152,6972,5.152,6973,5.152,6974,5.152]],["title/standards/io/io.html#SectionReader-类型",[611,2.118,6655,3.327]],["body/standards/io/io.html#SectionReader-类型",[1,0.351,8,0.857,13,2.554,23,1.684,31,0.552,32,0.478,33,0.531,34,0.614,35,0.65,36,0.734,75,4.249,161,1.885,490,3.074,583,3.556,586,3.238,673,4.117,1226,2.647,1572,4.476,2096,5.781,3117,5.781,4754,4.117,4858,6.004,4929,5.781,6655,8.076,6657,7.84,6660,7.117,6690,6.512,6726,6.22,6727,8.529,6728,7.805,6729,5.452,6975,6.22,6976,6.888,6977,6.888,6978,6.888,6979,6.888,6980,6.888,6981,6.888,6982,6.888,6983,6.888,6984,6.888,6985,6.888,6986,6.888,6987,6.888,6988,6.888,6989,6.888,6990,6.888,6991,6.888,6992,6.888,6993,6.888,6994,6.888,6995,6.888,6996,6.888,6997,6.888,6998,6.888]],["title/standards/io/io.html#LimitedReader-类型",[611,2.118,6653,3.327]],["body/standards/io/io.html#LimitedReader-类型",[1,0.359,8,0.835,9,1.941,13,1.981,23,1.639,31,0.596,32,0.648,33,0.655,34,0.758,35,0.633,36,0.715,37,0.793,38,1.079,54,1.941,58,2.68,61,2.829,69,1.901,74,1.369,75,3.539,253,2.873,490,3.419,580,3.379,583,3.251,586,3.995,628,2.793,673,4.008,1315,4.357,2275,4.401,3048,4.357,3538,3.58,3675,4.84,4775,6.134,5494,6.055,5817,5.308,6608,6.055,6653,7.384,6730,6.055,6731,6.055,6732,6.055,6733,8.857,6734,6.055,6736,6.055,6737,6.055,6999,6.705,7000,6.705,7001,6.705,7002,6.705,7003,6.705,7004,6.705,7005,6.705,7006,6.705,7007,6.705,7008,6.705,7009,6.705,7010,6.705,7011,6.705,7012,6.705]],["title/standards/io/io.html#PipeReader-和-PipeWriter-类型",[161,0.6,611,1.385,6654,2.176,6656,2.176]],["body/standards/io/io.html#PipeReader-和-PipeWriter-类型",[1,0.361,2,1.172,3,1.723,8,1.091,9,2.039,13,2.082,23,1.722,27,1.248,31,0.56,32,0.563,33,0.676,34,0.451,35,0.665,36,0.539,37,0.599,38,0.642,39,0.737,40,0.751,41,0.788,42,0.874,43,0.977,58,2.022,61,2.345,65,1.298,69,1.997,74,1.033,92,1.995,95,2.549,111,1.043,112,1.103,113,1.19,114,1.405,115,1.464,116,1.405,117,1.611,118,1.684,119,1.684,120,1.647,121,1.805,122,1.872,128,3.425,129,2.597,134,2.484,161,1.767,223,1.467,465,1.92,488,2.372,490,2.638,564,2.435,565,2.018,568,3.093,586,3.81,590,2.078,838,2.078,1120,4.568,1221,4.245,1430,4.108,1493,2.893,1603,2.34,1604,2.418,1605,2.418,2275,2.2,2278,4.161,2280,2.648,2449,3.55,2697,4.327,2863,4.211,3086,4.726,3538,2.701,3598,3.287,4521,2.881,4530,3.687,4754,4.211,4763,5.085,5345,3.514,5438,5.085,6654,7.294,6656,7.294,6739,6.362,6740,7.319,6741,7.319,6742,4.568,6743,6.362,6744,4.568,6745,4.568,6746,4.568,6747,4.568,6748,4.568,6749,4.568,6750,4.245,6751,4.568,6784,4.893,7013,5.058,7014,5.058,7015,7.044,7016,5.058,7017,5.058,7018,7.044,7019,5.058,7020,5.058,7021,5.058,7022,5.058,7023,4.004,7024,5.058,7025,5.058,7026,5.058,7027,5.058,7028,5.058,7029,5.058,7030,5.058,7031,5.058,7032,5.058,7033,5.058,7034,5.058,7035,5.058,7036,5.058,7037,5.058,7038,5.058,7039,4.568,7040,5.058,7041,5.058,7042,5.058,7043,5.058,7044,5.058,7045,5.058,7046,5.058,7047,5.058,7048,5.058]],["title/standards/io/io.html#Copy-和-CopyN-函数",[161,0.6,644,1.314,1840,1.603,6752,2.307]],["body/standards/io/io.html#Copy-和-CopyN-函数",[1,0.354,2,0.966,6,1.891,7,1.83,8,1.084,27,1.91,31,0.618,32,0.403,33,0.448,34,0.518,35,0.549,36,0.619,37,0.687,38,0.983,39,0.846,40,0.862,41,0.905,42,1.003,44,1.87,45,3.04,48,3.101,53,2.83,75,3.626,134,2.049,223,1.401,438,2.687,490,2.834,564,2.419,565,2.217,568,2.949,580,2.927,586,2.731,628,3.224,644,3.7,673,3.472,803,6.811,1226,2.233,1331,2.454,1840,5.639,1881,4.514,2275,3.366,2280,4.051,2698,6.891,3786,5.246,4538,4.875,4754,5.78,4940,3.897,5529,6.284,6637,4.377,6661,5.377,6676,5.832,6677,4.598,6752,7.306,6753,8.981,6754,5.246,6755,5.246,6756,6.99,6757,5.246,6758,5.246,6759,5.246,6760,5.246,6802,6.127,7023,6.127,7049,4.875,7050,7.74,7051,5.809,7052,5.809,7053,5.809,7054,5.809,7055,5.809,7056,5.809,7057,5.809,7058,5.809,7059,5.809,7060,5.809,7061,5.809,7062,5.809,7063,5.809,7064,5.809,7065,5.809,7066,5.809,7067,7.74,7068,5.809,7069,5.809,7070,5.809,7071,5.809,7072,5.809,7073,5.246,7074,5.809,7075,5.809,7076,5.809]],["title/standards/io/io.html#ReadAtLeast-和-ReadFull-函数",[161,0.6,644,1.314,6761,2.307,6762,2.307]],["body/standards/io/io.html#ReadAtLeast-和-ReadFull-函数",[1,0.348,8,1.043,31,0.536,61,2.79,63,1.61,223,1.671,490,3.168,564,2.329,565,2.401,568,2.968,583,3.392,628,3.491,644,4.007,1881,4.888,2275,3.645,4754,5.817,4929,5.508,5345,7.143,5505,5.927,6761,8.772,6762,8.438,6763,9.286,6764,7.57,6765,5.927,6766,7.57,6785,5.927,6802,5.195,6870,5.927,7049,7.035,7073,5.927,7077,6.563,7078,6.563,7079,6.563,7080,6.563,7081,8.382,7082,6.563,7083,6.563,7084,9.235,7085,6.563,7086,6.563,7087,8.382,7088,6.563,7089,6.563,7090,6.563,7091,6.563,7092,6.563,7093,6.563,7094,6.563,7095,6.563,7096,6.563]],["title/standards/io/io.html#WriteString-函数",[644,2.009,3671,2.731]],["body/standards/io/io.html#WriteString-函数",[1,0.308,8,1.016,31,0.521,54,2.773,56,1.799,63,1.423,223,1.477,490,2.657,564,2.268,568,2.489,1881,4.759,1992,5.125,2280,4.272,3671,6.609,5529,5.891,6767,7.37,7049,6.85,7097,8.161,7098,8.161,7099,8.161,7100,8.161,7101,8.161]],["title/standards/io/io.html#MultiReader-和-MultiWriter-函数",[161,0.6,644,1.314,6768,2.307,6769,2.307]],["body/standards/io/io.html#MultiReader-和-MultiWriter-函数",[1,0.361,8,0.882,10,2.22,13,2.095,23,1.733,26,2.995,31,0.562,32,0.611,33,0.628,34,0.726,35,0.769,36,0.868,37,0.964,38,0.9,39,1.033,40,1.209,41,1.104,42,0.882,43,0.986,56,1.331,58,2.834,61,3.078,69,1.448,74,1.043,95,4.104,111,1.052,112,1.113,129,2.621,161,1.776,223,0.924,490,2.308,565,2.031,568,3.052,580,2.572,581,3.132,586,3.829,588,3.389,628,2.953,736,3.317,996,3.595,1226,2.725,1488,4.038,1572,3.317,1839,2.977,1898,5.95,2275,4.71,2280,5.385,2449,3.572,2451,3.546,2614,3.71,2697,2.726,3277,2.908,3598,3.317,4530,4.263,4754,3.052,4790,4.61,5345,3.546,5451,3.847,6661,3.546,6667,3.847,6669,3.425,6676,3.847,6750,5.95,6768,7.759,6769,7.385,6770,4.61,6771,4.61,6772,4.61,6773,4.61,6774,6.402,6775,4.61,6776,4.61,6777,4.61,6784,3.546,6841,4.61,7023,5.612,7102,5.105,7103,5.105,7104,5.105,7105,5.105,7106,5.105,7107,5.105,7108,5.105,7109,5.105,7110,5.105,7111,5.105,7112,5.105,7113,5.105,7114,5.105,7115,5.105,7116,5.105,7117,5.105,7118,5.105,7119,5.105,7120,5.105,7121,5.105,7122,5.105,7123,5.105,7124,5.105,7125,5.105,7126,5.105,7127,5.105]],["title/standards/io/io.html#TeeReader-函数",[644,2.009,6778,3.528]],["body/standards/io/io.html#TeeReader-函数",[1,0.344,8,0.962,31,0.593,32,0.537,58,3.09,61,2.573,116,2.148,223,1.399,583,3.464,586,3.634,1992,5.009,2275,4.585,2280,4.855,2451,5.37,2697,4.128,3117,6.488,6778,7.786,6779,6.981,6780,6.981,7023,7.343,7128,7.73,7129,7.73,7130,7.73,7131,7.73,7132,7.73,7133,7.73,7134,7.73,7135,7.73,7136,7.73,7137,7.73,7138,7.73]],["title/standards/os/os.html",[45,2.991]],["body/standards/os/os.html",[1,0.369,2,1.325,3,0.504,5,1.609,8,1.152,9,1.568,10,1.141,12,0.873,13,0.437,23,0.361,27,0.365,31,0.62,32,0.564,33,0.626,34,0.637,35,0.65,36,0.702,37,0.74,38,0.688,39,0.854,40,0.871,41,0.666,42,0.739,43,0.683,45,3.069,46,1.583,54,0.428,56,1.661,58,0.591,60,2.82,61,1.424,62,1.491,63,1.465,65,0.673,74,1.277,75,2.256,79,0.461,82,2.768,92,0.583,96,1.108,105,0.707,107,0.883,108,2.423,111,0.729,112,0.771,113,0.617,114,0.729,115,0.759,116,0.411,117,0.471,118,0.492,119,0.492,120,0.481,121,0.528,122,0.547,145,2.455,154,1.893,440,0.862,446,2.73,465,0.561,488,0.498,490,2.327,564,2.607,565,2.176,568,2.698,581,2.169,583,1.232,586,3.097,596,3.943,795,0.862,799,2.423,1024,0.884,1334,1.114,1336,1.85,1340,2.383,1592,2.23,1656,0.823,1672,3.695,2278,2.781,2291,0.961,2391,1.76,2450,2.551,2526,0.992,2561,3.088,2613,3.401,2614,4.842,2636,3.875,2697,3.517,3225,2.663,3261,1.893,3277,3.34,3301,2.798,3377,2.798,3598,0.961,3671,0.961,4015,3.285,4065,1.17,4521,2.437,4604,1.067,4755,1.976,4756,1.067,4761,4.419,4770,4.419,4771,1.17,4772,2.076,4775,1.067,5182,3.875,5582,1.17,5584,2.798,6624,1.822,6633,1.17,6634,1.17,6636,1.17,6637,1.114,6639,1.17,6640,1.17,6642,1.17,6660,3.689,6666,1.17,6667,1.114,6669,1.76,6688,2.076,6689,1.17,6690,4.419,6702,1.17,6703,2.798,6704,1.17,6705,1.17,7139,1.479,7140,2.369,7141,2.201,7142,2.201,7143,1.335,7144,1.335,7145,1.335,7146,1.335,7147,4.893,7148,5.45,7149,3.863,7150,3.875,7151,1.335,7152,2.369,7153,1.335,7154,2.369,7155,1.335,7156,1.335,7157,1.335,7158,2.369,7159,1.335,7160,1.335,7161,1.335,7162,1.335,7163,1.335,7164,1.335,7165,1.335,7166,1.335,7167,1.335,7168,3.192,7169,1.335,7170,1.335,7171,1.335,7172,2.369,7173,3.192,7174,2.369,7175,2.623,7176,2.369,7177,1.335,7178,1.335,7179,1.335,7180,1.335,7181,1.335,7182,1.335,7183,1.335,7184,1.335,7185,2.201,7186,1.335,7187,1.335,7188,2.369,7189,1.335,7190,3.863,7191,1.335,7192,1.335,7193,1.335,7194,2.369,7195,1.335,7196,1.335,7197,1.335,7198,1.335,7199,1.335,7200,4.421,7201,1.335,7202,1.335,7203,1.335,7204,2.369,7205,1.479,7206,1.335,7207,1.335,7208,1.335,7209,1.335,7210,1.335,7211,5.949,7212,4.921,7213,3.192,7214,2.369,7215,1.335,7216,1.335,7217,3.192,7218,1.335,7219,2.369,7220,1.335,7221,1.335,7222,1.335,7223,1.335,7224,1.335,7225,1.335,7226,1.335,7227,1.335,7228,1.335,7229,1.335,7230,1.335,7231,1.335,7232,1.335,7233,1.335,7234,1.335,7235,1.335,7236,1.335,7237,1.335,7238,3.192,7239,1.335,7240,1.335,7241,1.335,7242,1.335,7243,1.335,7244,1.335,7245,1.335,7246,1.335,7247,1.335,7248,2.369,7249,1.335,7250,1.335,7251,2.369,7252,1.335,7253,1.479,7254,1.479,7255,3.192,7256,2.369,7257,1.335,7258,3.192,7259,3.192,7260,1.335,7261,1.335,7262,1.335,7263,1.335,7264,5.529,7265,1.479,7266,1.335,7267,1.335,7268,1.335,7269,2.369,7270,2.369,7271,1.335,7272,1.335,7273,1.335,7274,2.369,7275,2.369,7276,2.076,7277,1.335,7278,1.335,7279,2.369,7280,1.335,7281,1.335,7282,2.369,7283,2.369,7284,3.875,7285,1.335,7286,1.335,7287,2.369,7288,1.335,7289,2.369,7290,2.369,7291,4.421,7292,4.421,7293,2.369,7294,3.192,7295,1.335,7296,1.335,7297,2.369,7298,1.335,7299,1.335,7300,5.644,7301,1.335,7302,1.335,7303,3.863,7304,1.335,7305,1.335,7306,1.335,7307,2.369,7308,1.335,7309,3.863,7310,1.335,7311,1.335,7312,5.296,7313,1.335,7314,1.335,7315,1.335,7316,1.335]],["title/standards/os/os.html#os",[45,2.991]],["body/standards/os/os.html#os",[1,0.351,31,0.517,32,0.562,33,0.624,34,0.721,45,4.989,565,2.318,568,2.907,586,3.803,2391,5.428,2614,4.989,4015,5.428,7140,8.608,7141,6.79,7142,6.79,7143,7.306,7144,7.306,7317,8.09,7318,8.09,7319,8.09,7320,8.09,7321,8.09]],["title/standards/os/os.html#文件-I-O",[4521,2.394,6929,3.327]],["body/standards/os/os.html#文件-I-O",[1,0.36,2,0.486,5,2.862,8,1.052,9,1.686,10,1.269,31,0.611,32,0.505,33,0.652,34,0.648,35,0.687,36,0.709,37,0.689,38,0.592,39,0.848,40,0.988,41,0.454,42,0.504,43,0.564,45,3.048,54,0.845,56,1.249,60,2.869,61,1.939,62,1.017,63,1.645,65,0.749,74,1.359,75,2.426,82,2.906,92,1.151,96,1.97,108,2.308,111,0.602,112,0.636,113,0.687,114,0.811,115,0.845,161,1.691,171,3.18,222,1.136,223,1.403,253,1.999,440,1.702,488,0.983,490,2.165,564,2.484,565,1.336,568,2.579,581,2.862,586,3.975,596,2.942,716,1.897,736,1.897,795,1.702,972,2.45,996,3.21,1024,1.745,1087,2.107,1096,2.199,1226,1.122,1315,1.897,1319,2.028,1334,2.199,1340,2.597,1430,1.702,1573,2.31,1592,2.942,1672,2.81,2278,3.981,2291,1.897,2391,1.958,2450,4.204,2526,1.958,2580,2.45,2614,4.778,2697,4.654,3261,3.366,3277,3.318,3377,4.61,3423,2.31,3570,2.45,3671,1.897,3801,3.24,4015,3.908,4096,2.028,4521,2.656,4770,4.389,4771,2.31,4772,3.692,5273,2.45,5438,2.107,5507,2.45,6624,2.028,6633,2.31,6634,2.31,6636,2.31,6637,2.199,6639,2.31,6640,2.31,6642,2.31,6660,5.48,6666,2.31,6669,1.958,6688,3.692,6689,2.31,6690,6.133,6702,2.31,6703,4.61,6704,2.31,6800,2.107,6833,3.692,6894,3.914,6929,2.31,7145,2.636,7146,2.636,7147,7.003,7148,5.757,7149,6.007,7150,2.31,7151,2.636,7152,4.212,7153,2.636,7154,4.212,7155,2.636,7156,2.636,7157,2.636,7158,4.212,7159,2.636,7160,2.636,7161,2.636,7162,2.636,7163,2.636,7164,2.636,7165,2.636,7166,2.636,7167,2.636,7168,5.26,7169,2.636,7170,2.636,7171,2.636,7172,4.212,7173,5.26,7174,4.212,7176,4.212,7177,2.636,7178,2.636,7179,2.636,7180,2.636,7181,2.636,7182,2.636,7183,2.636,7184,2.636,7185,2.45,7186,2.636,7187,2.636,7188,4.212,7189,2.636,7190,6.007,7191,2.636,7192,2.636,7193,2.636,7194,4.212,7195,2.636,7196,2.636,7197,2.636,7198,2.636,7199,2.636,7200,6.568,7201,2.636,7202,2.636,7203,2.636,7204,4.212,7322,2.919,7323,2.919,7324,2.919,7325,2.919,7326,2.919,7327,2.919,7328,2.919,7329,2.919,7330,2.919,7331,2.919,7332,2.919,7333,2.919,7334,2.919,7335,2.919,7336,2.919,7337,2.919,7338,2.919,7339,2.919,7340,2.919,7341,2.919,7342,2.919,7343,2.919,7344,2.919,7345,4.664,7346,2.919,7347,2.919,7348,2.919,7349,2.919,7350,2.919,7351,2.919,7352,2.919,7353,2.919,7354,2.919,7355,2.919,7356,2.919,7357,2.919,7358,2.919,7359,2.919,7360,2.919,7361,2.919,7362,2.919,7363,2.919,7364,2.636,7365,2.919,7366,2.919,7367,2.919,7368,2.919,7369,2.919,7370,2.919,7371,2.636,7372,2.919,7373,2.919,7374,2.919,7375,2.919,7376,2.919,7377,2.919,7378,2.919,7379,2.919,7380,2.919,7381,2.919,7382,2.919,7383,2.919,7384,2.919,7385,2.919,7386,2.919,7387,2.919,7388,2.919,7389,2.636,7390,2.919,7391,2.919,7392,2.919,7393,2.919,7394,2.919,7395,2.919,7396,2.919,7397,2.919,7398,2.919,7399,2.636,7400,2.919,7401,2.919,7402,2.919,7403,2.919,7404,2.919,7405,2.919,7406,2.919,7407,2.919,7408,2.919,7409,2.919,7410,2.31,7411,2.919,7412,2.919,7413,2.919,7414,2.919,7415,2.919,7416,2.919,7417,2.919,7418,2.919,7419,2.919,7420,2.919,7421,2.919,7422,2.919,7423,2.919,7424,2.919,7425,2.919,7426,2.919,7427,2.919,7428,2.919,7429,2.919,7430,2.919,7431,2.919,7432,2.919,7433,2.919,7434,2.919,7435,2.919,7436,2.919,7437,2.919,7438,2.919,7439,2.919,7440,2.919,7441,2.919,7442,2.919,7443,2.919,7444,2.919,7445,2.919,7446,2.919,7447,2.919,7448,2.919,7449,2.919,7450,2.919,7451,2.919,7452,2.919,7453,2.919,7454,2.919,7455,2.919,7456,2.919,7457,2.919,7458,2.919,7459,2.919,7460,2.919,7461,2.919,7462,2.919,7463,2.919,7464,2.919,7465,2.919,7466,2.919,7467,2.919,7468,2.919,7469,2.919,7470,2.919,7471,4.664,7472,2.919,7473,2.919,7474,2.919,7475,2.919,7476,2.919,7477,2.919]],["title/standards/os/os.html#截断文件",[7478,5.714]],["body/standards/os/os.html#截断文件",[1,0.321,8,1.163,31,0.499,32,0.543,56,1.468,75,3.89,79,2.436,82,2.93,161,2.037,223,1.414,446,5.329,564,2.595,1672,3.302,2614,4.092,3301,7.906,7206,7.06,7207,7.06,7208,7.06,7209,7.06,7210,7.06,7479,7.817,7480,7.817,7481,7.817,7482,7.817,7483,7.817,7484,7.817,7485,7.817,7486,7.817,7487,7.817,7488,7.817,7489,7.817,7490,7.817]],["title/standards/os/os.html#文件属性",[7491,5.714]],["body/standards/os/os.html#文件属性",[1,0.359,2,0.895,3,1.193,8,1.085,9,1.014,10,1.524,12,1.791,13,1.035,23,0.856,27,0.865,31,0.557,32,0.551,33,0.645,34,0.655,35,0.694,36,0.783,37,0.87,38,0.832,39,0.954,40,0.799,41,0.838,42,0.929,43,1.039,45,1.834,56,1.381,62,1.221,63,1.142,65,0.899,75,1.459,82,1.313,105,1.675,107,1.812,108,1.734,111,1.109,112,1.173,113,0.824,114,0.973,115,1.014,116,0.973,117,1.116,118,1.166,119,1.166,120,1.14,121,1.25,122,1.297,145,4.551,154,3.884,161,1.901,171,3.132,222,1.364,223,1.185,446,1.765,465,1.33,564,2.423,565,1.877,568,2.815,583,2.284,596,5.282,983,2.21,996,2.375,1226,1.347,1340,2.997,1656,1.951,1672,3.537,1821,2.94,2036,3.164,2198,2.773,2431,3.164,2582,3.164,2614,4.83,2636,6.279,3225,4.937,3277,3.732,3801,2.434,4065,2.773,4604,2.529,4756,2.529,4761,5.977,4775,2.529,4948,2.94,5516,2.94,6624,2.434,6667,2.64,6669,2.351,6705,2.773,6929,2.773,7141,2.94,7142,2.94,7148,5.819,7150,2.773,7185,2.94,7211,8.334,7212,6.17,7213,5.917,7214,4.86,7215,3.164,7216,3.164,7217,5.917,7218,3.164,7219,4.86,7220,3.164,7221,3.164,7222,3.164,7223,3.164,7224,3.164,7225,3.164,7226,3.164,7227,3.164,7228,3.164,7229,3.164,7230,3.164,7231,3.164,7232,3.164,7233,3.164,7234,3.164,7235,3.164,7236,3.164,7237,3.164,7238,5.917,7239,3.164,7240,3.164,7241,3.164,7242,3.164,7243,3.164,7244,3.164,7245,3.164,7246,3.164,7247,3.164,7248,4.86,7249,3.164,7250,3.164,7251,4.86,7252,3.164,7255,5.917,7256,4.86,7257,3.164,7258,5.917,7259,5.917,7260,3.164,7261,3.164,7262,3.164,7263,3.164,7264,7.552,7266,3.164,7267,3.164,7268,3.164,7269,4.86,7270,4.86,7271,3.164,7272,3.164,7273,3.164,7274,4.86,7275,4.86,7276,4.26,7277,3.164,7278,3.164,7279,4.86,7280,3.164,7281,3.164,7282,4.86,7283,4.86,7284,6.279,7285,3.164,7286,3.164,7371,3.164,7389,3.164,7492,3.503,7493,3.503,7494,3.503,7495,3.503,7496,3.503,7497,3.503,7498,3.503,7499,3.503,7500,3.503,7501,3.503,7502,3.503,7503,3.503,7504,3.503,7505,3.503,7506,3.503,7507,3.503,7508,3.503,7509,3.503,7510,3.503,7511,3.503,7512,3.503,7513,3.503,7514,3.503,7515,3.503,7516,3.503,7517,3.503,7518,3.503,7519,3.503,7520,3.503,7521,3.503,7522,3.503,7523,3.503,7524,3.503,7525,3.503,7526,3.503,7527,3.503,7528,3.503,7529,3.503,7530,3.503,7531,3.503,7532,3.503,7533,3.503,7534,3.503,7535,3.503,7536,3.503,7537,3.503,7538,3.503,7539,3.503,7540,3.503,7541,3.503,7542,3.503,7543,3.503,7544,3.503,7545,3.503,7546,3.503,7547,3.503,7548,3.503,7549,3.503,7550,3.503,7551,3.503,7552,3.503,7553,3.503,7554,3.503,7555,3.503,7556,3.503,7557,3.503,7558,3.503,7559,3.503,7560,3.503,7561,3.503,7562,3.503,7563,3.503,7564,3.503,7565,3.503,7566,3.503,7567,3.503,7568,3.503,7569,3.503,7570,3.503,7571,3.503,7572,3.503,7573,3.503,7574,3.503,7575,3.503,7576,3.503,7577,3.503,7578,3.503,7579,3.503,7580,3.503,7581,3.503]],["title/standards/os/os.html#目录与链接",[7582,5.714]],["body/standards/os/os.html#目录与链接",[1,0.354,2,0.978,8,1.209,9,1.702,31,0.62,32,0.408,33,0.304,34,0.351,35,0.372,36,0.42,37,0.466,38,0.5,39,0.574,40,0.585,41,0.614,42,0.68,46,2.889,56,1.895,58,1.575,60,3.456,61,1.312,62,2.05,63,1.025,74,0.805,82,2.925,161,0.859,198,2.844,222,2.29,223,1.273,253,1.689,265,3.276,490,2.955,564,2.698,565,2.392,568,2.147,581,2.418,628,1.641,799,4.133,983,2.486,993,4.937,1319,4.889,1336,3.684,1420,4.246,1542,2.844,1572,5.072,1672,4.102,2561,5.634,2613,5.801,2614,3.079,3277,2.244,3567,2.969,3598,2.56,3801,2.737,4015,2.644,4755,4.432,4761,4.432,4770,5.881,5182,6.611,5451,2.969,5507,3.307,5582,3.119,5584,5.571,7148,3.119,7150,5.571,7212,5.907,7264,3.307,7287,5.312,7288,3.558,7289,5.312,7290,5.312,7291,7.542,7292,7.542,7293,5.312,7294,6.356,7295,3.558,7296,3.558,7297,5.312,7298,3.558,7299,3.558,7300,8.426,7301,3.558,7302,3.558,7303,7.049,7304,3.558,7305,3.558,7306,3.558,7307,5.312,7308,3.558,7309,7.049,7310,3.558,7311,3.558,7312,8.197,7313,3.558,7314,3.558,7315,3.558,7316,3.558,7399,3.558,7583,3.94,7584,3.94,7585,3.94,7586,3.94,7587,3.94,7588,3.94,7589,3.94,7590,3.94,7591,3.94,7592,3.94,7593,3.94,7594,3.94,7595,3.94,7596,3.94,7597,3.94,7598,5.882,7599,5.882,7600,3.94,7601,7.038,7602,3.94,7603,3.94,7604,3.94,7605,3.94,7606,3.94,7607,3.94,7608,3.94,7609,7.038,7610,3.94,7611,3.94,7612,3.94,7613,3.94,7614,3.94,7615,3.94,7616,3.94,7617,3.94,7618,3.94,7619,3.94,7620,3.94,7621,3.94,7622,3.94,7623,3.94,7624,3.94,7625,3.94,7626,3.94,7627,3.94,7628,3.94,7629,3.94,7630,3.94,7631,3.94,7632,3.94,7633,3.94,7634,3.94,7635,3.94,7636,3.94,7637,3.94,7638,3.94,7639,3.94,7640,3.94,7641,3.94,7642,3.94,7643,3.94,7644,3.94,7645,3.94,7646,3.94,7647,3.94,7648,3.94,7649,3.94,7650,3.94,7651,3.558,7652,3.94,7653,3.94,7654,3.94,7655,3.94,7656,3.94,7657,3.94,7658,3.94,7659,3.94,7660,3.94,7661,3.94,7662,3.94,7663,3.94,7664,3.94,7665,3.94,7666,3.94,7667,3.94,7668,3.94,7669,3.94,7670,3.94,7671,3.94,7672,3.94,7673,3.94,7674,3.94,7675,3.94,7676,3.94,7677,3.94,7678,3.94,7679,3.94,7680,3.94,7681,3.94,7682,3.94,7683,3.94,7684,3.94,7685,3.94,7686,3.94,7687,3.94]],["title/concurrent/sync_lock.html",[1,0.184]],["body/concurrent/sync_lock.html",[0,0.775,1,0.369,2,1.464,4,1.964,7,0.408,8,1.033,9,1.124,10,1.947,12,1.491,13,1.605,14,0.738,21,1.77,22,1.663,24,1.796,31,0.618,32,0.598,33,0.648,34,0.729,35,0.732,36,0.808,37,0.897,38,0.782,39,0.791,40,0.914,41,0.697,42,0.938,43,0.865,44,0.751,46,0.48,48,0.692,56,0.438,58,1.27,59,1.061,60,1.531,61,1.058,63,1.216,65,0.598,69,1.101,73,0.818,74,1.511,75,0.54,79,1.395,96,1.64,104,0.564,111,0.923,112,0.847,113,0.548,114,0.36,115,0.375,134,1.579,440,2.611,447,0.818,451,1.026,452,0.935,466,0.842,471,1.134,487,3.768,564,0.36,565,0.91,578,1.403,586,1.825,588,3.088,590,4.244,597,0.976,751,6,832,1.328,833,0.775,1030,0.935,1171,0.935,1173,2.327,1187,0.756,1338,1.663,1339,0.842,1381,1.026,1383,5.838,1523,1.845,1672,0.547,1840,0.756,1843,2.551,2015,0.775,2124,1.683,2275,0.564,2469,0.935,2648,1.328,2649,0.976,2854,1.026,2855,1.026,3048,3.242,3057,3.949,3076,1.683,3077,3.759,3079,1.845,3080,1.845,3247,3.347,3255,0.935,3271,1.026,3355,1.62,3359,3.073,3595,2.065,3668,2.394,4851,4.278,4998,0.976,4999,1.026,6035,3.759,6128,6.467,6135,1.026,6136,1.026,6137,2.394,6138,3.903,6143,3.073,6162,5.99,7688,4.383,7689,4.044,7690,1.17,7691,1.17,7692,2.105,7693,2.105,7694,2.105,7695,4.187,7696,2.667,7697,1.957,7698,1.17,7699,1.17,7700,1.17,7701,2.105,7702,1.17,7703,1.17,7704,3.506,7705,2.87,7706,3.506,7707,2.87,7708,1.17,7709,1.957,7710,1.296,7711,5.253,7712,2.87,7713,1.17,7714,3.506,7715,1.17,7716,1.17,7717,1.17,7718,2.105,7719,1.17,7720,1.17,7721,2.105,7722,1.17,7723,4.044,7724,1.17,7725,1.17,7726,1.17,7727,2.105,7728,1.296,7729,1.296,7730,1.296,7731,1.17,7732,3.073,7733,1.296,7734,1.17,7735,1.17,7736,2.515,7737,2.105,7738,1.17,7739,2.87,7740,3.506,7741,4.044,7742,1.17,7743,2.105,7744,1.17,7745,1.17,7746,2.105,7747,1.296,7748,4.187,7749,4.558,7750,5.329,7751,2.667,7752,2.667,7753,2.105,7754,1.957,7755,2.667,7756,2.667,7757,3.545,7758,3.506,7759,1.17,7760,2.105,7761,1.17,7762,1.17,7763,1.17,7764,1.17,7765,1.17,7766,3.232,7767,2.87,7768,1.17,7769,1.17,7770,4.505,7771,1.17,7772,2.87,7773,4.044,7774,1.17,7775,1.17,7776,2.105,7777,2.105,7778,1.17,7779,1.17,7780,2.87,7781,1.026,7782,2.87,7783,2.105,7784,2.105,7785,2.87,7786,3.506,7787,1.17,7788,5.168,7789,1.026,7790,2.87,7791,1.17,7792,1.17,7793,1.17,7794,6.208,7795,1.17,7796,1.17,7797,1.17,7798,2.105,7799,1.17,7800,1.17]],["title/concurrent/sync_lock.html#同步和锁",[7801,5.714]],["body/concurrent/sync_lock.html#同步和锁",[]],["title/concurrent/sync_lock.html#共享变量",[7802,5.714]],["body/concurrent/sync_lock.html#共享变量",[1,0.274,590,4.255,985,6.758,3182,6.758,7803,8.537,7804,8.537,7805,8.537,7806,8.537,7807,8.537,7808,8.537,7809,8.537,7810,8.537]],["title/concurrent/sync_lock.html#同步锁",[7811,5.714]],["body/concurrent/sync_lock.html#同步锁",[1,0.36,2,1.389,4,2.164,7,1.241,8,1.13,9,2.037,10,3.061,13,2.08,21,2.195,22,3.079,31,0.63,32,0.58,33,0.644,34,0.745,35,0.789,36,0.89,37,0.988,38,0.991,39,1.025,40,0.873,41,0.916,42,1.016,43,1.136,58,1.575,60,3.079,63,1.663,65,1.509,79,2.602,111,1.213,112,1.283,113,1.384,114,1.095,115,1.14,161,0.859,202,3.309,223,1.585,564,1.095,588,2.812,590,4.299,597,2.969,641,2.969,751,8.127,983,2.486,1030,2.844,1171,2.844,1173,3.89,1226,2.261,1383,6.84,1523,4.656,2243,3.307,2275,1.714,2469,2.844,2854,3.119,2855,3.119,2996,3.558,3076,4.246,3077,6.293,3079,4.656,3080,4.656,3182,3.119,3359,6.178,3921,4.246,6137,4.432,6302,3.119,7688,6.293,7689,7.542,7690,3.558,7691,3.558,7692,5.312,7693,5.312,7694,5.312,7695,7.009,7696,4.937,7697,3.307,7698,3.558,7699,3.558,7700,3.558,7701,5.312,7702,3.558,7703,3.558,7704,7.049,7705,6.356,7706,7.049,7707,6.356,7708,3.558,7812,3.94,7813,3.94,7814,3.94,7815,3.94,7816,3.94,7817,3.94,7818,3.94,7819,3.94,7820,3.94,7821,3.94,7822,3.94,7823,3.94,7824,3.94,7825,3.94,7826,3.94,7827,3.94,7828,3.558,7829,3.94,7830,3.94,7831,3.94,7832,3.94,7833,3.94,7834,3.94,7835,3.94,7836,3.94,7837,3.94,7838,3.94,7839,3.94,7840,3.94,7841,3.94,7842,3.94,7843,3.94,7844,3.94,7845,3.94,7846,3.94,7847,3.94,7848,3.94,7849,3.94,7850,3.94,7851,3.94,7852,3.94,7853,3.94,7854,3.94,7855,3.94,7856,3.94,7857,3.94,7858,3.94,7859,3.94,7860,3.94,7861,3.94,7862,3.94,7863,3.94,7864,3.94,7865,3.94,7866,3.94,7867,3.94,7868,3.94,7869,3.94,7870,3.94,7871,3.94,7872,3.94,7873,3.94,7874,3.94,7875,3.94,7876,3.94,7877,3.94,7878,3.94,7879,3.94,7880,3.94,7881,3.94,7882,3.94,7883,3.94,7884,3.94,7885,3.94,7886,3.94,7887,3.94,7888,3.94,7889,3.94]],["title/concurrent/sync_lock.html#条件变量-sync-Cond",[7709,3.528,7890,3.796]],["body/concurrent/sync_lock.html#条件变量-sync-Cond",[1,0.332,4,1.796,31,0.605,32,0.556,33,0.617,34,0.714,35,0.654,36,0.739,37,0.82,73,3.117,74,1.415,161,1.511,222,2.698,223,1.653,588,3.313,590,4.476,721,3.724,726,4.463,736,3.211,1226,2.664,1315,3.211,1383,7.601,3876,3.567,3921,6.262,6162,7.585,7688,6.031,7695,4.147,7696,4.147,7697,4.147,7709,4.147,7711,8.964,7712,7.228,7713,4.463,7714,7.835,7715,4.463,7716,4.463,7717,4.463,7718,6.259,7719,4.463,7720,4.463,7721,6.259,7722,4.463,7723,8.251,7724,4.463,7725,4.463,7726,4.463,7727,6.259,7891,4.942,7892,4.942,7893,4.942,7894,4.942,7895,4.942,7896,4.942,7897,4.942,7898,4.942,7899,4.942,7900,4.942,7901,4.942,7902,4.942,7903,4.942,7904,4.942,7905,4.942,7906,7.228,7907,4.942,7908,4.942,7909,4.942,7910,4.942,7911,4.942,7912,4.942,7913,4.942,7914,4.942,7915,4.942,7916,4.942,7917,4.942,7918,4.942,7919,4.942,7920,4.942,7921,4.942,7922,4.147,7923,4.942,7924,4.942,7925,4.942,7926,4.942,7927,4.942,7928,4.942,7929,4.942,7930,4.942,7931,4.942,7932,4.942,7933,4.942,7934,4.942,7935,4.942,7936,4.942,7937,4.942,7938,4.942,7939,4.942,7940,4.942,7941,4.942,7942,4.942,7943,4.942,7944,4.942,7945,4.942,7946,4.942,7947,4.942,7948,4.942,7949,4.942,7950,4.942,7951,4.942,7952,4.942,7953,4.942,7954,4.942,7955,4.942,7956,4.942,7957,4.942,7958,4.942,7959,4.942,7960,4.942,7961,4.942,7962,4.942,7963,4.942,7964,4.942,7965,4.942,7966,4.942,7967,4.942,7968,4.942,7969,4.942,7970,4.942,7971,4.942,7972,4.942,7973,4.942,7974,4.942,7975,4.942,7976,4.942,7977,4.942,7978,4.942,7979,8.676,7980,4.942,7981,4.942,7982,4.942,7983,4.942,7984,4.942,7985,4.942,7986,4.942,7987,4.942,7988,4.942,7989,4.942,7990,4.942,7991,4.942]],["title/concurrent/sync_lock.html#原子操作",[7992,5.16]],["body/concurrent/sync_lock.html#原子操作",[2,1.275,75,3.193,104,3.334,171,4.914,447,4.836,451,6.069,452,5.534,487,5.776,985,6.069,1187,4.471,2241,6.069,2648,4.367,3567,5.777,3595,4.982,3668,6.955,6143,8.137,7731,6.923,7993,7.666,7994,7.666,7995,7.666,7996,7.666,7997,7.666,7998,7.666,7999,7.666,8000,7.666,8001,7.666,8002,7.666,8003,7.666,8004,7.666,8005,7.666,8006,7.666,8007,7.666,8008,7.666,8009,7.666,8010,7.666,8011,7.666,8012,7.666,8013,7.666,8014,7.666,8015,7.666,8016,7.666,8017,7.666]],["title/concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同",[8018,5.714]],["body/concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同",[1,0.351,14,4.261,31,0.478,32,0.519,33,0.577,34,0.667,35,0.706,36,0.797,37,0.885,40,1.111,74,1.528,134,2.638,223,1.646,253,3.206,346,5.019,590,3.073,1226,2.875,1843,4.261,3255,5.4,3271,5.922,5273,6.278,6135,5.922,6136,5.922,6302,5.922,7732,8.07,7734,6.756,7735,6.756,8019,7.481,8020,7.481,8021,7.481,8022,7.481,8023,7.481,8024,7.481,8025,7.481,8026,7.481,8027,7.481,8028,7.481,8029,7.481,8030,7.481,8031,7.481,8032,7.481,8033,7.481,8034,7.481,8035,7.481,8036,7.481,8037,7.481,8038,7.481,8039,7.481]],["title/concurrent/sync_lock.html#sync-atomic-Value",[7736,4.523]],["body/concurrent/sync_lock.html#sync-atomic-Value",[1,0.36,4,1.78,8,0.855,31,0.632,32,0.687,33,0.727,34,0.841,35,0.815,36,0.732,37,0.813,46,2.543,58,2.747,63,1.644,161,1.498,223,1.243,565,1.968,578,4.164,1840,4.007,1921,5.766,7737,7.793,7738,6.205,7739,8.52,7740,8.936,7741,9.206,7742,6.205,7743,7.793,7744,6.205,7745,6.205,8040,6.871,8041,6.871,8042,6.871,8043,6.871,8044,6.871,8045,6.871,8046,6.871,8047,6.871,8048,6.871,8049,6.871,8050,6.871,8051,6.871,8052,6.871,8053,6.871,8054,6.871,8055,6.871,8056,6.871,8057,6.871,8058,6.871,8059,6.871]],["title/concurrent/sync_lock.html#sync-WaitGroup",[6138,3.834]],["body/concurrent/sync_lock.html#sync-WaitGroup",[1,0.361,2,1.572,4,1.787,8,1.134,10,2.134,13,2.356,21,3.841,31,0.582,32,0.656,33,0.667,34,0.771,35,0.753,36,0.85,37,0.943,38,1.013,39,1.004,40,1.284,41,0.764,42,0.847,43,0.948,58,1.961,69,1.955,74,1.861,96,2.913,111,1.012,134,2.432,161,1.07,171,2.345,223,1.649,346,3.292,466,3.189,471,2.386,487,5.044,588,2.345,590,4.238,628,2.044,721,3.697,1843,3.928,3048,6.141,3247,5.803,3570,4.118,4851,6.008,6035,7.12,6137,3.697,6138,5.803,6162,6.577,6321,4.431,6339,3.884,7746,6.227,7748,7.259,7749,7.647,7750,5.459,7751,4.118,7752,5.787,7753,6.227,7754,4.118,7755,5.787,7756,5.787,8060,4.907,8061,6.896,8062,4.907,8063,4.907,8064,4.907,8065,4.907,8066,4.907,8067,4.907,8068,4.907,8069,4.907,8070,4.907,8071,4.907,8072,4.907,8073,4.431,8074,4.907,8075,4.907,8076,4.907,8077,4.907,8078,4.907,8079,4.907,8080,4.907,8081,4.907,8082,4.907,8083,4.907,8084,4.907,8085,4.907,8086,4.907,8087,4.907,8088,4.907,8089,4.907,8090,4.907,8091,4.907,8092,4.907,8093,4.907,8094,4.907,8095,4.907,8096,4.907,8097,4.907,8098,4.907,8099,4.907,8100,4.907,8101,4.907,8102,4.907,8103,4.431,8104,4.907,8105,4.907,8106,4.907,8107,4.907,8108,4.907,8109,4.907,8110,4.907,8111,4.907,8112,4.907]],["title/concurrent/sync_lock.html#sync-Once",[7757,4.523]],["body/concurrent/sync_lock.html#sync-Once",[1,0.331,4,2.182,8,1.048,9,1.913,10,2.874,24,3.057,31,0.592,32,0.459,33,0.509,34,0.589,35,0.624,36,0.704,37,0.782,56,1.581,74,1.892,197,3.529,223,1.524,508,5.547,590,2.715,638,4.591,1226,2.54,1381,5.232,1462,5.547,1672,2.792,2124,6.078,3077,4.98,3118,5.547,3595,5.472,3801,4.591,3876,4.771,6138,4.435,6302,5.232,7750,7.976,7757,7.335,7758,8.811,7759,5.969,7760,7.604,7761,5.969,7762,5.969,7763,5.969,7764,5.969,7765,5.969,8073,5.969,8103,5.969,8113,6.609,8114,6.609,8115,6.609,8116,6.609,8117,6.609,8118,6.609,8119,6.609,8120,6.609,8121,6.609,8122,6.609,8123,6.609,8124,6.609,8125,6.609,8126,6.609,8127,6.609,8128,6.609,8129,6.609,8130,6.609,8131,6.609,8132,6.609,8133,6.609,8134,6.609,8135,6.609,8136,6.609,8137,6.609,8138,6.609,8139,6.609,8140,6.609,8141,6.609,8142,6.609,8143,6.609,8144,6.609,8145,6.609,8146,6.609,8147,6.609,8148,6.609,8149,6.609,8150,6.609,8151,6.609,8152,6.609]],["title/concurrent/sync_lock.html#context-Context-类型",[611,2.118,7766,3.034]],["body/concurrent/sync_lock.html#context-Context-类型",[1,0.355,2,1.007,4,1.866,8,0.897,13,1.211,31,0.508,32,0.42,33,0.555,34,0.54,35,0.572,36,0.645,37,0.716,38,0.769,39,0.882,40,0.899,41,0.943,42,1.374,43,1.169,69,1.717,74,0.837,96,2.558,111,1.248,112,1.32,134,2.135,161,0.893,171,2.894,202,2.846,223,1.708,253,2.595,487,4.2,590,3.876,611,2.065,641,3.087,721,3.087,791,3.7,1096,3.087,1226,2.768,1338,3.77,1843,3.449,1921,3.438,2211,3.438,2354,3.7,3057,7.034,3118,3.438,3177,3.7,3247,4.062,3355,4.206,3853,3.7,4851,5.897,5789,3.438,6128,7.82,6138,2.749,6162,4.371,6339,3.243,7748,5.082,7749,5.082,7750,6.298,7751,5.082,7752,3.438,7754,3.438,7755,3.438,7756,3.438,7766,5.199,7767,6.504,7768,3.7,7769,3.7,7770,8.025,7771,3.7,7772,6.504,7773,7.666,7774,3.7,7775,3.7,7776,5.468,7777,5.468,7778,3.7,7779,3.7,7780,6.504,7781,3.243,7782,6.504,7783,5.468,7784,5.468,7785,6.504,7786,7.185,7787,3.7,7906,3.7,8153,4.097,8154,4.097,8155,4.097,8156,4.097,8157,4.097,8158,4.097,8159,4.097,8160,4.097,8161,4.097,8162,4.097,8163,4.097,8164,4.097,8165,4.097,8166,4.097,8167,4.097,8168,4.097,8169,4.097,8170,4.097,8171,4.097,8172,4.097,8173,4.097,8174,4.097,8175,4.097,8176,4.097,8177,4.097,8178,6.055,8179,4.097,8180,4.097,8181,4.097,8182,4.097,8183,4.097,8184,4.097,8185,4.097,8186,4.097,8187,4.097,8188,4.097,8189,4.097,8190,4.097,8191,4.097,8192,4.097,8193,4.097,8194,4.097,8195,4.097,8196,4.097,8197,4.097,8198,4.097,8199,4.097,8200,4.097,8201,4.097,8202,4.097,8203,4.097,8204,4.097,8205,4.097,8206,4.097,8207,4.097,8208,4.097,8209,4.097,8210,4.097,8211,4.097,8212,4.097,8213,4.097,8214,4.097,8215,4.097,8216,4.097,8217,4.097,8218,4.097,8219,4.097,8220,4.097,8221,4.097,8222,4.097,8223,4.097,8224,4.097,8225,4.097,8226,4.097,8227,4.097,8228,4.097,8229,4.097,8230,4.097,8231,4.097,8232,4.097,8233,4.097,8234,4.097,8235,4.097,8236,4.097,8237,4.097,8238,4.097,8239,4.097,8240,4.097,8241,4.097,8242,4.097,8243,4.097,8244,4.097,8245,4.097,8246,4.097,8247,4.097,8248,4.097,8249,4.097,8250,4.097,8251,4.097,8252,4.097,8253,4.097,8254,4.097,8255,4.097,8256,4.097,8257,4.097,8258,4.097,8259,4.097,8260,4.097,8261,4.097,8262,4.097,8263,4.097,8264,4.097,8265,4.097,8266,4.097,8267,4.097,8268,4.097,8269,4.097,8270,4.097,8271,4.097,8272,4.097,8273,4.097,8274,4.097,8275,4.097]],["title/concurrent/sync_lock.html#临时对象池-sync-Pool",[7788,3.528,8276,4.203]],["body/concurrent/sync_lock.html#临时对象池-sync-Pool",[1,0.296,2,1.535,8,1.042,12,3.071,31,0.418,32,0.455,33,0.505,44,2.694,59,3.81,61,3.071,161,1.428,223,1.89,424,5.913,440,5.67,832,4.767,2196,5.183,3182,5.183,3876,4.726,6138,4.393,7736,5.183,7757,5.183,7766,4.726,7788,8.877,7789,5.183,7790,8.331,7791,5.913,7792,5.913,7793,5.913,7828,5.913,7890,5.913,7992,5.913,8277,6.547,8278,6.547,8279,6.547,8280,6.547,8281,6.547,8282,6.547,8283,6.547,8284,6.547,8285,6.547,8286,6.547,8287,6.547,8288,6.547,8289,6.547,8290,6.547,8291,6.547,8292,6.547,8293,6.547,8294,6.547,8295,6.547,8296,6.547,8297,6.547,8298,6.547,8299,6.547,8300,6.547,8301,6.547,8302,6.547,8303,6.547,8304,6.547,8305,6.547,8306,6.547,8307,6.547,8308,6.547,8309,6.547,8310,6.547,8311,6.547,8312,6.547,8313,6.547,8314,6.547,8315,6.547,8316,6.547,8317,6.547,8318,6.547,8319,6.547,8320,6.547,8321,6.547,8322,6.547,8323,6.547,8324,6.547,8325,6.547,8326,6.547,8327,6.547,8328,6.547]],["title/concurrent/sync_lock.html#sync-Map",[7794,4.796]],["body/concurrent/sync_lock.html#sync-Map",[2,1.589,12,2.705,24,4.174,202,2.939,223,1.933,565,2.328,586,4.492,588,2.989,590,2.568,638,4.344,998,5.647,1226,2.403,1542,4.513,2648,3.562,3567,4.712,3668,4.712,4998,4.712,4999,4.95,7736,4.95,7794,9.132,7795,5.647,7796,5.647,7797,5.647,7798,7.337,8329,6.253,8330,6.253,8331,6.253,8332,6.253,8333,6.253,8334,6.253,8335,6.253,8336,6.253,8337,6.253,8338,6.253,8339,6.253,8340,6.253,8341,6.253,8342,6.253,8343,6.253,8344,6.253,8345,6.253,8346,6.253,8347,6.253,8348,6.253,8349,6.253,8350,6.253,8351,6.253,8352,6.253,8353,6.253,8354,6.253,8355,6.253,8356,6.253,8357,6.253,8358,6.253,8359,6.253,8360,6.253,8361,6.253,8362,6.253,8363,6.253,8364,6.253,8365,6.253,8366,6.253,8367,6.253,8368,6.253,8369,6.253,8370,6.253,8371,6.253,8372,6.253,8373,6.253,8374,6.253,8375,6.253,8376,5.647,8377,6.253,8378,6.253,8379,6.253,8380,6.253,8381,6.253,8382,6.253,8383,6.253,8384,6.253,8385,6.253,8386,6.253,8387,6.253,8388,6.253,8389,6.253,8390,6.253,8391,6.253,8392,6.253,8393,6.253,8394,6.253,8395,6.253,8396,6.253,8397,6.253,8398,6.253,8399,6.253,8400,6.253,8401,6.253,8402,6.253,8403,6.253,8404,6.253,8405,6.253]],["title/concurrent/sync_lock.html#竞争检查器",[8406,5.714]],["body/concurrent/sync_lock.html#竞争检查器",[2,1.75,22,4.31,48,4.396,197,4.396,222,3.75,253,3.529,471,4.004,590,3.382,833,4.922,2649,6.204,6549,7.436,7799,7.436,7800,7.436,8407,8.234,8408,8.234,8409,8.234,8410,8.234,8411,8.234,8412,8.234,8413,8.234,8414,8.234,8415,8.234]],["title/standards/net/http.html",[570,3.255]],["body/standards/net/http.html",[1,0.367,2,0.589,3,1.568,4,0.384,6,1.394,7,1.349,8,1.216,9,1.952,10,1.539,11,0.485,12,0.263,13,1.265,15,0.414,16,0.571,20,0.807,21,0.44,23,1.264,24,0.965,27,1.665,31,0.549,32,0.553,33,0.608,34,0.678,35,0.708,36,0.762,37,0.846,38,0.892,39,1.003,40,1.043,41,1.05,42,1.138,43,1.273,44,1,53,2.519,54,0.76,56,1.653,60,0.584,61,0.263,62,1.492,63,0.685,65,1.557,74,0.802,75,0.869,82,0.296,92,1.225,95,0.746,104,1.142,105,1.691,107,1.191,111,1.359,112,1.402,113,1.471,114,1.631,115,1.636,116,1.571,117,1.727,118,1.722,119,1.631,120,1.499,121,1.643,122,1.585,124,0.391,134,0.926,136,0.461,138,1.069,151,0.485,154,0.571,373,0.571,376,0.531,455,0.79,465,1.491,476,0.571,488,0.498,498,0.626,564,2.083,565,2.233,567,3.692,568,2.404,570,4.858,573,1.172,577,2.084,578,1.159,583,3.213,588,0.708,595,0.626,799,2.904,838,1.276,1013,3.914,1014,2.553,1025,1.248,1152,2.019,1331,1.109,1336,1.374,1337,3.793,1340,0.825,1379,0.626,1390,0.461,1493,1.276,1594,0.571,1603,1.437,1604,1.485,1605,1.485,1606,1.537,1607,1.537,1608,1.537,1609,1.537,1610,1.485,1611,1.374,1612,1.374,1613,1.374,1614,1.496,1615,1.496,1616,1.57,1617,1.762,1618,1.401,1619,1.317,1620,1.401,1621,1.401,1622,1.401,1623,1.401,1624,1.028,1625,0.962,1626,0.908,1627,1.028,1628,1.028,1629,1.028,1630,0.962,1631,1.028,1632,1.028,1633,1.028,1634,0.843,1635,1.028,1636,0.571,1637,0.571,1638,0.571,1639,0.571,1640,0.571,1641,0.571,1642,0.571,1672,0.625,1841,4.648,1980,2.459,1992,3.399,2275,0.344,2278,1.072,2291,0.962,2385,1.028,2444,0.514,2449,1.052,2521,0.885,2535,4.881,2612,0.514,2644,1.172,2697,1.402,2701,1.189,2705,3.091,2709,3.091,2863,0.473,2865,1.401,3048,1.706,3076,0.571,3091,0.499,3092,1.172,3231,1.069,3675,0.571,3687,1.028,3969,0.596,4010,0.626,4530,0.775,4604,0.571,4745,1.573,4746,0.626,4747,4.686,4748,6.297,4763,3.324,5145,0.514,5153,1.172,5192,0.626,5193,0.626,5194,0.571,5340,1.069,5591,5.339,5819,1.652,5884,0.626,5885,0.626,6128,0.571,6661,0.549,6729,1.172,7276,0.626,7284,1.172,7688,0.596,7732,0.626,7766,0.571,7781,0.626,7789,2.078,8416,0.791,8417,0.791,8418,0.791,8419,0.791,8420,5.896,8421,3.897,8422,3.47,8423,2.969,8424,2.969,8425,3.733,8426,2.204,8427,1.885,8428,1.242,8429,1.752,8430,1.752,8431,4.475,8432,1.752,8433,1.242,8434,1.242,8435,1.242,8436,1.242,8437,1.242,8438,0.714,8439,2.204,8440,1.752,8441,4.112,8442,3.39,8443,2.204,8444,0.714,8445,1.885,8446,1.752,8447,0.714,8448,0.714,8449,1.752,8450,0.714,8451,5.487,8452,0.714,8453,3.227,8454,5.339,8455,2.204,8456,1.337,8457,0.714,8458,0.791,8459,0.714,8460,0.714,8461,0.714,8462,0.714,8463,0.714,8464,0.714,8465,1.337,8466,3.195,8467,3.195,8468,0.714,8469,0.714,8470,0.714,8471,0.714,8472,0.714,8473,0.714,8474,0.714,8475,0.714,8476,0.714,8477,0.714,8478,0.714,8479,0.714,8480,0.714,8481,0.714,8482,2.204,8483,2.204,8484,1.242,8485,3.195,8486,0.714,8487,0.714,8488,0.714,8489,0.714,8490,0.791,8491,0.791,8492,0.791,8493,0.791,8494,0.791,8495,0.714,8496,0.791,8497,1.885,8498,1.337,8499,0.714,8500,0.714,8501,1.337,8502,0.714,8503,0.714,8504,0.714,8505,4.745,8506,0.714,8507,2.204,8508,1.885,8509,0.714,8510,0.714,8511,0.714,8512,1.337,8513,0.791,8514,0.714,8515,1.337,8516,0.714,8517,0.791,8518,0.714,8519,0.714,8520,0.714,8521,0.714,8522,3.195,8523,2.607,8524,1.242,8525,0.714,8526,0.714,8527,0.714,8528,0.714,8529,0.714,8530,0.714,8531,0.714,8532,0.714,8533,0.714,8534,0.714,8535,0.714,8536,0.714,8537,0.714,8538,0.714,8539,0.714,8540,0.714,8541,2.969,8542,1.752,8543,1.752,8544,0.714,8545,0.714,8546,1.337,8547,0.714,8548,0.714,8549,0.791,8550,0.714,8551,0.714,8552,0.714,8553,0.791,8554,0.791,8555,0.714,8556,0.714,8557,1.337,8558,1.337,8559,1.337,8560,0.714,8561,0.714,8562,1.337,8563,0.714,8564,0.714,8565,1.337,8566,0.714,8567,0.714,8568,0.714,8569,0.791,8570,1.337,8571,7.811,8572,1.337,8573,1.337,8574,1.337,8575,2.805,8576,3.195,8577,3.195,8578,4.158,8579,1.337,8580,0.714,8581,0.714,8582,1.752,8583,0.714,8584,0.714,8585,6.105,8586,1.242,8587,5.782,8588,3.195,8589,3.297,8590,3.867,8591,0.714,8592,0.791,8593,0.626,8594,4.645,8595,4.112,8596,0.714,8597,0.714,8598,1.337,8599,1.752,8600,1.337,8601,0.714,8602,0.714,8603,0.714,8604,0.714,8605,0.714,8606,3.879,8607,0.714,8608,0.714,8609,1.752,8610,1.337,8611,0.714,8612,1.48,8613,2.805,8614,0.714,8615,0.714,8616,0.714,8617,0.714,8618,0.714,8619,0.714,8620,0.714,8621,3.547,8622,0.714,8623,0.714,8624,0.714,8625,0.714,8626,0.714,8627,0.714,8628,0.714,8629,1.337,8630,0.714,8631,0.714,8632,0.714,8633,0.714,8634,0.714,8635,1.885,8636,0.714,8637,0.791,8638,0.714,8639,0.714,8640,0.714,8641,0.714,8642,0.714,8643,0.714,8644,1.337,8645,0.714,8646,0.714,8647,0.714,8648,0.714,8649,0.714,8650,1.242,8651,0.714,8652,0.714,8653,1.337,8654,1.337,8655,1.242,8656,3.297,8657,1.337,8658,1.337,8659,0.714,8660,0.714,8661,1.885,8662,1.337,8663,1.885,8664,1.337,8665,0.714,8666,0.714,8667,0.714,8668,0.714,8669,0.714,8670,0.714,8671,1.337,8672,0.714,8673,0.714,8674,0.626,8675,0.714,8676,0.714,8677,0.714,8678,0.714,8679,0.714,8680,0.714,8681,0.714,8682,0.714,8683,0.714,8684,0.714,8685,0.714,8686,0.714,8687,0.714,8688,0.714,8689,0.714,8690,0.714,8691,2.805,8692,1.337,8693,1.337,8694,1.752,8695,1.337,8696,1.337,8697,1.337,8698,1.337,8699,0.714,8700,0.714,8701,0.791,8702,0.714,8703,0.791,8704,0.714,8705,0.714,8706,0.714,8707,0.714,8708,2.371,8709,0.714,8710,0.714,8711,0.714,8712,0.714,8713,0.714,8714,0.714,8715,1.337,8716,0.714,8717,0.714,8718,1.242,8719,0.714,8720,0.714,8721,0.714,8722,0.714]],["title/standards/net/http.html#http",[570,3.255]],["body/standards/net/http.html#http",[1,0.362,6,2.172,7,2.102,8,1.055,27,2.091,31,0.541,32,0.588,33,0.653,34,0.755,35,0.8,36,0.711,37,0.79,38,0.847,39,0.972,40,0.991,41,1.039,42,1.152,43,1.289,44,2.148,53,3.403,111,1.376,112,1.455,565,1.912,567,7.013,568,2.839,570,5.302,583,2.326,628,2.779,1013,4.817,1331,2.819,1992,3.363,2345,5.6,2535,4.477,2705,4.817,2709,5.344,5884,5.282,5885,5.282,8420,7.11,8421,5.028,8422,5.028,8423,5.6,8424,5.6,8425,4.817,8426,5.6,8427,8.406,8428,5.6,8429,5.6,8430,5.6,8723,6.673,8724,6.673,8725,6.673,8726,6.673,8727,6.673,8728,6.026,8729,6.673,8730,6.673,8731,6.673,8732,6.673,8733,6.673,8734,6.673,8735,6.673,8736,6.673]],["title/standards/net/http.html#Request",[4748,3.834]],["body/standards/net/http.html#Request",[1,0.361,3,1.579,8,1.237,13,1.37,20,1.579,21,1.614,23,0.708,24,2.144,31,0.423,32,0.322,33,0.357,34,0.413,35,0.438,36,0.494,37,0.549,38,0.589,39,0.675,40,0.861,41,0.722,42,0.801,43,0.895,56,1.834,60,1.829,62,1.01,63,1.01,65,1.19,74,0.592,75,1.931,92,1.143,95,1.46,104,2.521,107,1.561,111,0.956,112,1.011,113,1.091,114,1.288,115,1.342,116,1.288,117,1.476,118,1.543,119,1.543,120,1.509,121,1.655,122,1.716,138,2.091,161,1.264,197,1.547,202,1.362,222,2.257,223,1.311,253,1.242,265,1.614,465,1.1,564,2.531,565,0.83,568,0.884,570,4.623,583,3.514,673,1.732,838,1.19,983,2.925,996,2.558,1013,5.579,1014,5.274,1025,1.732,1152,3.766,1226,1.114,1493,1.19,1572,1.883,1603,1.34,1604,1.385,1605,1.385,1606,1.434,1607,1.434,1608,1.434,1609,1.434,1610,1.385,1611,1.516,1612,1.516,1613,1.516,1614,1.65,1615,1.65,1616,1.732,1617,1.944,1618,1.944,1619,1.828,1620,1.944,1621,1.944,1622,1.944,1623,1.944,1624,2.013,1625,1.883,1626,1.778,1627,2.013,1628,2.013,1629,2.013,1630,1.883,1631,2.013,1632,2.013,1633,2.013,1634,1.65,1635,2.013,1636,2.091,1637,2.091,1638,2.091,1639,2.091,1640,2.091,1641,2.091,1642,2.091,1672,1.959,1841,6.028,1992,2.921,2275,1.26,2278,1.488,2449,2.336,2596,2.432,2697,3.095,3006,2.432,4119,2.617,4439,2.294,4530,1.516,4604,2.091,4745,3.494,4746,2.294,4747,5.369,4748,7.051,4940,3.889,5192,2.294,5193,2.294,5194,2.091,5340,2.091,6729,3.67,6833,2.294,7039,2.617,7781,2.294,7789,5.244,7922,2.432,8431,6.424,8432,2.432,8433,2.432,8434,2.432,8435,2.432,8436,2.432,8437,2.432,8438,2.617,8439,3.891,8440,3.891,8441,5.56,8442,5.736,8443,3.891,8444,2.617,8445,5.234,8446,2.432,8447,2.617,8448,2.617,8449,3.891,8450,2.617,8451,3.347,8452,2.617,8453,2.183,8454,7.343,8455,4.864,8456,4.187,8457,2.617,8459,2.617,8460,2.617,8461,2.617,8462,2.617,8463,2.617,8464,2.617,8465,4.187,8466,6.98,8467,6.98,8468,2.617,8469,2.617,8470,2.617,8471,2.617,8472,2.617,8473,2.617,8474,2.617,8475,2.617,8476,2.617,8477,2.617,8478,2.617,8479,2.617,8480,2.617,8481,2.617,8482,3.891,8483,3.891,8484,2.432,8485,6.98,8486,2.617,8487,2.617,8488,2.617,8489,2.617,8495,2.617,8497,5.234,8498,4.187,8737,2.897,8738,2.897,8739,2.897,8740,2.897,8741,2.897,8742,2.897,8743,2.897,8744,2.897,8745,2.617,8746,2.897,8747,2.897,8748,2.897,8749,2.897,8750,2.897,8751,2.897,8752,2.897,8753,2.897,8754,2.897,8755,2.897,8756,2.897,8757,2.897,8758,2.897,8759,2.897,8760,2.897,8761,2.897,8762,2.897,8763,2.897,8764,2.897,8765,2.897,8766,2.897,8767,2.897,8768,2.897,8769,2.897,8770,2.897,8771,2.897,8772,2.897,8773,2.897,8774,2.897,8775,2.897,8776,2.897,8777,2.897,8778,2.897,8779,2.897,8780,2.897,8781,2.897,8782,2.897,8783,2.897,8784,2.897,8785,2.897,8786,2.897,8787,2.617,8788,2.897,8789,2.897,8790,2.897,8791,2.897,8792,2.897,8793,2.897,8794,2.897,8795,2.897,8796,2.897,8797,2.897,8798,2.897,8799,2.897,8800,4.636,8801,2.897,8802,2.897,8803,2.897,8804,2.897,8805,2.897,8806,2.897,8807,2.897,8808,2.432,8809,2.897,8810,2.897,8811,2.897,8812,2.617,8813,2.617,8814,2.897,8815,2.897,8816,2.897,8817,2.897,8818,2.897,8819,2.897,8820,2.617,8821,2.897,8822,2.897,8823,2.897,8824,2.897,8825,2.897,8826,2.897,8827,2.897,8828,2.897,8829,2.897,8830,2.897,8831,2.897,8832,2.897,8833,2.897,8834,2.897,8835,2.897,8836,2.897,8837,2.897,8838,2.897,8839,2.897,8840,2.897,8841,2.897,8842,2.897,8843,2.897,8844,2.897,8845,2.897,8846,2.897,8847,2.897,8848,2.897,8849,2.897]],["title/standards/net/http.html#Response",[8451,4.125]],["body/standards/net/http.html#Response",[1,0.358,8,1.179,13,1.615,23,1.336,31,0.475,32,0.516,33,0.573,34,0.662,35,0.702,36,0.792,37,0.879,38,0.944,39,1.082,40,1.103,41,1.157,42,1.283,43,1.435,56,1.585,63,1.579,65,1.403,75,2.277,107,2.502,111,1.532,112,1.62,113,1.748,114,1.519,154,3.946,223,0.989,564,2.345,565,1.566,570,5.159,583,3.405,595,4.327,673,3.267,983,3.448,985,4.327,1226,2.101,1841,3.552,1881,3.188,1992,3.744,2278,2.806,2385,3.797,2449,2.754,2697,2.919,3231,5.363,3826,4.587,3851,4.936,4745,4.119,4747,3.797,4748,5.663,4940,3.667,5340,3.946,7922,4.587,8431,7.498,8433,4.587,8434,4.587,8435,4.587,8436,4.587,8437,4.587,8439,4.587,8440,4.587,8446,6.236,8449,4.587,8451,7.527,8453,4.119,8454,7.498,8482,6.236,8483,6.236,8484,4.587,8499,4.936,8500,4.936,8501,6.71,8502,4.936,8503,4.936,8504,4.936,8728,4.936,8745,4.936,8787,4.936,8812,4.936,8813,4.936,8850,5.466,8851,5.466,8852,7.43,8853,5.466,8854,5.466,8855,5.466,8856,5.466,8857,5.466,8858,5.466,8859,5.466,8860,5.466,8861,5.466,8862,5.466,8863,5.466,8864,5.466,8865,4.936,8866,5.466,8867,5.466,8868,5.466,8869,5.466,8870,5.466,8871,5.466,8872,5.466,8873,5.466,8874,5.466,8875,5.466,8876,5.466,8877,5.466,8878,5.466]],["title/standards/net/http.html#client",[8505,4.796]],["body/standards/net/http.html#client",[1,0.364,3,1.729,6,1.653,7,1.599,8,1.056,9,2.217,10,3.332,27,1.743,31,0.561,32,0.564,33,0.626,34,0.724,35,0.767,36,0.865,37,0.961,38,0.973,39,1.029,40,1.048,41,1.1,42,1.079,43,1.207,44,1.046,53,1.188,56,1.694,62,2.67,65,1.303,92,1.282,95,1.638,104,1.413,111,1.288,112,1.107,113,1.194,114,1.411,115,1.469,116,1.411,117,1.617,118,1.69,119,1.69,120,1.653,121,1.812,122,1.879,134,2.491,136,1.895,138,2.346,202,2.937,222,2.432,376,2.18,465,1.927,538,2.727,564,2.129,565,2.643,567,6.393,568,3.195,570,3.559,573,4.019,583,1.769,628,2.941,838,1.335,996,1.434,1013,5.53,1025,1.942,1226,1.951,1493,1.335,1573,2.572,1603,1.503,1604,1.553,1605,1.553,1606,1.608,1607,1.608,1608,1.608,1609,1.608,1610,1.553,1611,1.701,1612,1.701,1613,1.701,1614,1.851,1615,1.851,1616,1.942,1617,2.18,1618,2.18,1619,2.05,1620,2.18,1621,2.18,1622,2.18,1623,2.18,1841,4.978,2385,2.257,2535,2.18,2596,2.727,2709,3.203,3048,2.112,4295,2.727,4530,1.701,4747,6.267,4748,5.448,4763,6.512,6661,2.257,8426,5.243,8428,2.727,8429,4.261,8430,4.261,8431,2.572,8432,4.261,8442,4.019,8443,4.261,8451,6.336,8453,2.449,8454,4.019,8455,2.727,8505,8.017,8506,2.935,8507,4.261,8508,5.642,8509,2.935,8510,2.935,8511,2.935,8512,4.585,8514,2.935,8515,4.585,8516,2.935,8518,2.935,8519,2.935,8520,2.935,8521,2.935,8522,7.333,8523,5.927,8524,2.727,8525,2.935,8526,2.935,8527,2.935,8528,2.935,8529,2.935,8530,2.935,8531,2.935,8532,2.935,8533,2.935,8534,2.935,8535,2.935,8536,2.935,8537,2.935,8538,2.935,8539,2.935,8540,2.935,8541,2.727,8542,2.727,8543,2.727,8544,2.935,8545,2.935,8546,4.585,8547,2.935,8548,2.935,8550,2.935,8551,2.935,8552,2.935,8555,2.935,8556,2.935,8557,4.585,8558,4.585,8559,2.935,8560,2.935,8561,2.935,8562,4.585,8563,2.935,8564,2.935,8565,4.585,8566,2.935,8567,2.935,8568,2.935,8808,4.261,8865,2.935,8879,3.25,8880,3.25,8881,3.25,8882,3.25,8883,2.935,8884,3.25,8885,3.25,8886,3.25,8887,3.25,8888,3.25,8889,3.25,8890,3.25,8891,3.25,8892,3.25,8893,3.25,8894,3.25,8895,3.25,8896,3.25,8897,3.25,8898,3.25,8899,3.25,8900,3.25,8901,3.25,8902,3.25,8903,3.25,8904,3.25,8905,3.25,8906,3.25,8907,3.25,8908,3.25,8909,3.25,8910,3.25,8911,3.25,8912,3.25,8913,3.25,8914,3.25,8915,3.25,8916,3.25,8917,3.25]],["title/standards/net/http.html#HTTP-Server",[570,2.394,2535,2.82]],["body/standards/net/http.html#HTTP-Server",[1,0.363,2,0.611,3,1.252,4,0.71,6,1.197,7,1.158,8,1.201,9,2.181,10,0.676,11,0.953,12,0.517,13,1.31,15,0.813,16,1.121,20,0.847,23,1.474,24,0.719,27,1.583,31,0.553,32,0.563,33,0.612,34,0.651,35,0.665,36,0.684,37,0.759,38,0.815,39,0.934,40,0.952,41,0.999,42,1.108,43,1.239,44,1.184,53,2.756,54,0.45,56,1.49,62,0.955,65,1.646,74,1.14,82,0.582,92,1.081,105,2.669,107,0.923,111,1.322,112,1.399,113,1.509,114,1.675,115,1.745,116,1.675,117,1.778,118,1.684,119,1.476,120,1.197,121,1.312,122,1.361,161,1.217,202,0.73,222,1.431,223,1.275,265,1.526,303,1.852,346,1.839,373,1.121,455,1.463,465,1.395,476,1.121,508,2.3,538,1.304,557,1.403,564,1.551,565,2.159,568,0.474,570,4.161,578,1.623,583,2.929,588,1.31,628,0.647,673,1.638,799,3.926,838,1.126,1025,0.929,1152,1.781,1215,1.079,1226,2.146,1227,1.403,1315,1.01,1331,1.158,1336,2.32,1337,5.057,1340,1.526,1379,1.23,1390,0.906,1430,1.598,1493,1.126,1542,1.121,1544,2.065,1570,1.304,1603,1.267,1604,1.31,1605,1.31,1606,1.356,1607,1.356,1608,1.356,1609,1.356,1610,1.31,1611,1.434,1612,1.434,1613,1.434,1614,1.561,1615,1.561,1616,1.638,1617,1.839,1618,1.042,1619,0.98,1620,1.042,1621,1.042,1622,1.042,1623,1.042,1624,1.079,1625,1.01,1626,0.953,1627,1.079,1628,1.079,1629,1.079,1630,1.01,1631,1.079,1632,1.079,1633,1.079,1634,0.885,1635,1.079,1685,1.403,1841,2.881,1881,1.598,1980,4.004,1992,3.401,2278,0.798,2291,1.781,2415,1.403,2478,1.079,2535,5.806,2612,1.01,2644,2.169,2705,4.03,2709,2.797,2863,0.929,2865,2.466,3006,1.304,3048,2.389,3076,1.121,3576,1.403,3969,1.171,4010,1.23,4474,1.403,4748,5.806,4915,1.403,4972,1.403,5145,1.01,5153,2.169,5471,2.475,5591,6.85,5738,1.403,6128,1.121,6800,1.121,6894,1.304,6975,3.32,7284,2.169,7410,1.23,7688,1.171,7732,1.23,7766,1.121,8420,7.262,8421,3.811,8422,3.34,8423,4.245,8424,4.245,8425,4.03,8441,4.245,8442,1.23,8451,3.2,8453,3.34,8523,1.304,8541,4.245,8542,2.3,8543,2.3,8570,2.475,8571,8.35,8572,2.475,8573,2.475,8574,2.475,8575,4.568,8576,5.042,8577,5.042,8578,6.095,8579,2.475,8580,1.403,8581,1.403,8582,2.3,8583,1.403,8584,1.403,8585,7.442,8586,1.304,8587,6.658,8588,5.042,8589,4.685,8590,5.793,8591,1.403,8593,1.23,8594,5.343,8595,5.664,8596,1.403,8597,1.403,8598,2.475,8599,1.304,8600,2.475,8601,1.403,8602,1.403,8603,1.403,8604,1.403,8605,1.403,8606,4.419,8607,1.403,8608,1.403,8609,2.3,8610,2.475,8611,1.403,8613,4.568,8614,1.403,8615,1.403,8616,1.403,8617,1.403,8618,1.403,8619,1.403,8620,1.403,8621,5.445,8622,1.403,8623,1.403,8624,1.403,8625,1.403,8626,1.403,8627,1.403,8628,1.403,8629,2.475,8630,1.403,8631,1.403,8632,1.403,8633,1.403,8634,1.403,8635,3.32,8636,1.403,8638,1.403,8639,1.403,8640,1.403,8641,1.403,8642,1.403,8643,1.403,8644,2.475,8645,1.403,8646,1.403,8647,1.403,8648,1.403,8649,1.403,8650,1.304,8651,1.403,8652,1.403,8653,2.475,8654,2.475,8655,1.304,8656,4.245,8657,2.475,8658,2.475,8659,1.403,8660,1.403,8661,3.32,8662,2.475,8663,3.32,8664,2.475,8665,1.403,8666,1.403,8667,1.403,8668,1.403,8669,1.403,8670,1.403,8671,2.475,8672,1.403,8673,1.403,8674,1.23,8675,1.403,8676,1.403,8677,1.403,8678,1.403,8679,1.403,8680,1.403,8681,1.403,8682,1.403,8683,1.403,8684,1.403,8685,1.403,8686,1.403,8687,1.403,8688,1.403,8689,1.403,8690,1.403,8691,4.003,8692,2.475,8693,2.475,8694,2.3,8695,2.475,8696,2.475,8808,1.304,8883,1.403,8918,1.554,8919,1.554,8920,1.554,8921,1.554,8922,1.554,8923,1.554,8924,1.554,8925,2.74,8926,1.554,8927,2.74,8928,1.554,8929,1.554,8930,1.554,8931,1.554,8932,1.554,8933,1.554,8934,1.554,8935,1.554,8936,1.554,8937,1.554,8938,1.554,8939,1.554,8940,1.554,8941,1.554,8942,1.554,8943,1.554,8944,1.554,8945,1.554,8946,1.554,8947,1.554,8948,1.554,8949,1.554,8950,1.554,8951,1.554,8952,1.554,8953,1.554,8954,1.554,8955,1.554,8956,1.554,8957,1.554,8958,1.554,8959,1.554,8960,1.554,8961,1.554,8962,1.554,8963,1.554,8964,1.554,8965,1.554,8966,1.554,8967,1.554,8968,1.554,8969,1.554,8970,1.554,8971,1.554,8972,1.554,8973,1.554,8974,1.554,8975,1.554,8976,1.554,8977,1.554,8978,1.554,8979,1.554,8980,1.554,8981,1.554,8982,1.554,8983,1.554,8984,1.554,8985,1.554,8986,1.554,8987,1.554,8988,1.554,8989,1.554,8990,1.554,8991,1.554,8992,1.554,8993,1.554,8994,1.554,8995,1.554,8996,1.554,8997,1.554,8998,1.554,8999,1.554,9000,1.554,9001,1.554,9002,1.554,9003,1.554,9004,1.554,9005,2.74,9006,2.74,9007,2.74,9008,1.554,9009,1.554,9010,1.554,9011,1.554,9012,1.554,9013,1.554,9014,1.554,9015,1.554,9016,1.554,9017,1.554,9018,1.554,9019,1.554,9020,1.554,9021,1.554,9022,1.554,9023,1.554,9024,1.554,9025,1.554,9026,1.554,9027,1.554,9028,1.554,9029,1.554,9030,1.554,9031,1.554,9032,1.554,9033,1.554,9034,1.554,9035,1.554,9036,1.554,9037,1.554,9038,1.554,9039,1.554,9040,1.554,9041,1.554,9042,1.554,9043,1.554,9044,1.554,9045,1.554,9046,1.554,9047,1.554,9048,1.554,9049,1.554,9050,1.554,9051,1.554,9052,1.554,9053,1.554,9054,1.554,9055,1.554,9056,1.554,9057,1.554,9058,1.554,9059,1.554,9060,1.554,9061,1.554,9062,1.554,9063,1.554,9064,1.554,9065,1.554,9066,1.554,9067,1.554,9068,1.554,9069,1.554]],["title/standards/net/http.html#自定义处理器",[9070,5.714]],["body/standards/net/http.html#自定义处理器",[1,0.356,3,2.101,6,2.008,7,1.943,8,1.003,13,1.823,23,1.508,27,1.988,31,0.394,32,0.428,33,0.476,34,0.55,35,0.583,36,0.657,37,0.73,38,0.784,39,0.899,40,0.916,41,0.961,42,1.065,43,1.192,53,3.279,56,1.159,61,2.054,65,1.583,111,1.272,112,1.345,113,1.451,114,1.714,115,1.786,116,1.714,117,1.965,118,2.054,119,2.054,120,2.008,121,2.202,151,3.786,222,2.402,570,4.588,583,2.15,628,2.57,1594,4.453,1992,3.109,2444,4.009,2535,4.139,2701,5.108,2709,3.892,3566,5.178,4805,5.572,5516,5.178,5819,7.098,7276,4.884,8376,5.572,8421,4.649,8422,4.649,8425,5.814,8571,7.806,8582,5.178,8585,6.76,8586,5.178,8587,8.277,8594,7.525,8595,5.178,8606,6.376,8609,5.178,8694,5.178,8697,7.274,8698,7.274,8699,5.572,8700,5.572,8702,5.572,9071,6.17,9072,6.17,9073,6.17,9074,6.17,9075,6.17,9076,6.17,9077,6.17,9078,6.17,9079,6.17,9080,6.17,9081,6.17,9082,6.17,9083,6.17,9084,6.17,9085,6.17,9086,6.17,9087,6.17,9088,6.17,9089,6.17,9090,6.17,9091,6.17,9092,6.17,9093,6.17,9094,6.17,9095,6.17]],["title/standards/net/http.html#中间件-Middleware",[8704,3.796,9096,4.203]],["body/standards/net/http.html#中间件-Middleware",[1,0.359,2,1.259,3,1.914,8,1.226,9,2.192,23,1.374,27,1.387,31,0.359,32,0.39,33,0.433,34,0.501,35,0.531,36,0.599,37,0.665,38,0.714,39,0.819,40,0.835,41,0.875,42,0.971,43,1.086,54,2.478,65,1.442,92,2.217,111,1.159,112,1.226,113,1.322,114,1.562,115,1.627,116,1.562,117,1.79,118,1.871,119,1.871,120,1.83,121,2.006,122,2.08,124,2.782,297,5.076,465,2.133,488,2.549,498,4.449,565,1.61,570,4.877,577,6.416,578,2.481,583,3.434,838,2.309,1226,2.16,1493,2.309,1603,2.6,1604,2.687,1605,2.687,1606,2.782,1607,2.782,1608,2.782,1609,2.782,1610,2.687,1992,4.315,2243,4.717,2521,4.526,3091,3.546,3092,5.994,3675,4.057,3687,5.26,4747,5.26,8421,6.903,8422,6.452,8425,4.057,8507,6.355,8524,4.717,8571,8.103,8589,4.717,8594,4.449,8599,6.355,8606,4.449,8650,4.717,8655,4.717,8656,6.355,8705,5.076,8706,5.076,8707,5.076,8708,8.274,8709,5.076,8710,5.076,8711,5.076,8712,5.076,8713,5.076,8714,5.076,8715,6.838,8716,5.076,8717,5.076,8718,4.717,8719,5.076,8720,5.076,9097,5.621,9098,5.621,9099,5.621,9100,5.621,9101,5.621,9102,5.621,9103,5.621,9104,5.621,9105,5.621,9106,5.621,9107,5.621,9108,5.621,9109,5.621,9110,5.621,9111,5.621,9112,5.621,9113,5.621,9114,5.621]],["title/standards/net/http.html#静态站点",[9115,5.714]],["body/standards/net/http.html#静态站点",[1,0.358,6,2.611,7,2.526,8,0.998,27,2.34,31,0.512,32,0.557,33,0.618,34,0.715,35,0.757,36,0.855,37,0.949,38,1.019,39,1.168,40,1.191,53,2.932,565,2.298,2705,5.789,2709,5.059,8425,5.789,8718,6.731,8721,7.243,8722,7.243,9116,8.02]],["title/standards/data/sort.html",[1387,3.605]],["body/standards/data/sort.html",[1,0.367,3,0.588,4,0.448,6,0.562,7,0.544,8,1.293,9,2.639,12,2.889,13,1.755,20,0.942,23,1.734,26,2.697,27,0.742,31,0.632,32,0.669,33,0.738,34,0.821,35,0.831,36,0.95,37,0.974,38,0.969,39,0.93,40,0.882,41,0.994,42,0.935,43,1.045,44,0.556,46,3.163,54,2.548,56,1.476,63,1.848,65,0.772,69,1.535,74,0.975,76,2.224,79,2.778,82,1.127,84,3.468,92,0.681,95,2.407,96,2.017,107,3.069,109,1.555,110,1.252,111,1.116,112,0.871,113,0.707,114,0.48,115,0.5,116,0.48,117,1.723,118,0.575,119,0.575,120,1.3,121,0.617,122,0.639,124,3.348,131,4.702,134,1.909,455,2.55,465,0.656,488,3.069,490,1.555,583,0.602,588,1.909,743,1.367,838,0.71,1173,0.74,1338,4.772,1375,3.78,1376,2.017,1387,6.145,1493,0.71,1591,1.159,1603,0.799,1604,0.826,1605,0.826,1606,0.855,1607,0.855,1608,0.855,1609,0.855,1610,0.826,1611,0.904,1612,0.904,1613,0.904,1614,0.984,1615,0.984,1616,1.033,1625,1.954,1626,1.845,1656,1.675,1672,1.687,1843,1.713,2010,1.247,2011,1.247,2012,5.64,2015,3.551,2017,5.671,2019,1.367,2020,1.56,2385,2.089,3103,0.984,3620,2.38,4319,1.159,5183,4.759,5194,2.171,6712,1.367,8593,3.161,8674,3.161,9117,2.524,9118,1.56,9119,1.56,9120,5.953,9121,1.56,9122,2.524,9123,2.524,9124,3.351,9125,2.716,9126,4.888,9127,3.606,9128,3.606,9129,3.606,9130,3.606,9131,3.606,9132,3.606,9133,3.606,9134,3.606,9135,1.56,9136,1.56,9137,1.56,9138,1.56,9139,1.56,9140,1.56,9141,1.56,9142,5.751,9143,3.606,9144,4.008,9145,1.56,9146,1.56,9147,1.56,9148,1.56,9149,2.716,9150,1.56,9151,1.56,9152,7.095,9153,6.406,9154,6.406,9155,1.56,9156,3.606,9157,4.313,9158,1.56,9159,2.716,9160,1.56,9161,1.56,9162,1.56,9163,1.56,9164,6.11,9165,1.56,9166,1.56,9167,1.56,9168,1.56,9169,1.56,9170,3.606,9171,1.56,9172,5.766,9173,1.56,9174,1.56,9175,1.56,9176,4.313,9177,1.727,9178,1.56,9179,2.716,9180,2.716,9181,2.716,9182,2.716,9183,1.56,9184,1.56,9185,1.56,9186,2.716,9187,1.56,9188,2.716,9189,1.56,9190,1.56,9191,1.56]],["title/standards/data/sort.html#sort",[1387,3.605]],["body/standards/data/sort.html#sort",[1,0.344,12,2.998,23,1.8,31,0.47,32,0.511,33,0.567,34,0.656,35,0.695,36,0.785,37,0.871,38,0.935,46,3.334,56,1.383,63,1.767,84,3.25,107,2.479,110,3.066,124,4.457,161,1.964,171,3.519,265,4.1,1338,5.307,1387,6.396,1430,5.252,2010,5.314,2011,5.314,2015,4.401,2133,5.114,5183,6.043,9192,7.362,9193,7.362,9194,7.362,9195,7.362,9196,7.362,9197,7.362,9198,7.362,9199,7.362,9200,7.362,9201,7.362,9202,7.362,9203,7.362,9204,6.648,9205,6.648,9206,7.362,9207,7.362]],["title/standards/data/sort.html#数据集合排序",[9208,5.714]],["body/standards/data/sort.html#数据集合排序",[1,0.363,3,1.677,6,1.603,7,1.551,8,1.178,9,2.507,12,2.301,13,1.455,20,2.684,23,1.69,27,1.706,31,0.604,32,0.555,33,0.616,34,0.712,35,0.754,36,0.851,37,0.818,38,0.878,39,1.007,40,0.731,41,0.767,42,0.85,43,0.951,44,1.585,46,2.957,54,2.507,56,0.925,63,1.51,65,1.264,74,1.006,92,1.942,95,3.484,107,2.327,109,2.692,110,2.051,111,1.015,112,1.074,113,1.158,114,1.368,115,1.425,116,1.368,117,1.568,118,1.639,119,1.639,120,1.603,121,1.757,122,1.823,134,2.817,161,1.074,179,6.243,202,2.315,465,1.869,490,2.25,838,2.023,1338,3.618,1387,6.358,1493,2.023,1551,3.106,1603,2.277,1604,2.354,1605,2.354,1606,2.437,1607,2.437,1608,2.437,1609,2.437,1610,2.354,1611,2.577,1612,2.577,1613,2.577,1614,2.805,1615,2.805,1672,2.08,2012,4.492,2015,2.943,2317,3.554,5183,4.638,7410,3.898,9117,4.133,9118,4.447,9119,4.447,9120,8.323,9121,4.447,9122,4.133,9123,4.133,9124,5.802,9125,6.243,9126,8.24,9127,7.214,9128,7.214,9129,7.214,9130,7.214,9131,7.214,9132,7.214,9133,7.214,9134,7.214,9135,4.447,9136,4.447,9137,4.447,9138,4.447,9139,4.447,9209,4.924,9210,4.924,9211,4.924,9212,4.924,9213,4.924,9214,4.924,9215,4.924,9216,4.924,9217,4.924,9218,4.924,9219,4.924,9220,4.924,9221,4.924,9222,4.924,9223,4.924,9224,4.924,9225,4.924]],["title/standards/data/sort.html#Reverse",[2017,4.125]],["body/standards/data/sort.html#Reverse",[1,0.354,8,1.216,9,2.685,12,3.487,13,1.958,23,1.619,31,0.624,32,0.644,33,0.65,34,0.752,35,0.626,36,0.706,37,0.784,38,0.841,39,0.965,40,0.984,41,1.032,42,1.144,43,1.28,54,1.918,63,1.47,95,4.249,107,2.839,111,1.366,583,2.309,1338,4.414,1387,4.179,2012,6.806,2017,7.787,2019,5.244,2088,5.983,2317,4.782,3423,5.244,4248,5.983,5183,4.445,5649,5.983,7651,5.983,9120,5.56,9122,5.56,9123,5.56,9140,5.983,9141,5.983,9226,6.625,9227,6.625,9228,6.625,9229,6.625,9230,6.625,9231,6.625,9232,6.625,9233,6.625,9234,6.625,9235,6.625,9236,6.625,9237,6.625,9238,6.625,9239,6.625,9240,6.625,9241,6.625]],["title/standards/data/sort.html#Search",[9142,4.306]],["body/standards/data/sort.html#Search",[1,0.365,4,1.581,8,1.223,9,2.314,31,0.57,32,0.555,33,0.688,34,0.713,35,0.755,36,0.951,37,0.946,38,1.133,39,0.889,40,0.906,41,1.245,46,2.96,54,3.079,56,1.146,63,1.758,69,2.529,74,1.633,76,3.398,79,3.062,82,2.287,96,2.578,107,3.003,134,2.152,253,2.615,455,4.27,490,1.986,743,4.83,1591,4.094,1616,3.647,1843,4.555,6712,4.83,7364,5.511,9124,5.121,9142,6.025,9143,8.055,9144,6.711,9145,5.511,9146,5.511,9147,5.511,9148,5.511,9149,7.221,9150,5.511,9151,5.511,9242,6.102,9243,6.102,9244,6.102,9245,6.102,9246,6.102,9247,6.102,9248,6.102]],["title/standards/data/sort.html#已经支持的内部数据类型排序",[9249,5.714]],["body/standards/data/sort.html#已经支持的内部数据类型排序",[1,0.365,8,1.301,9,2.699,23,1.637,31,0.641,32,0.689,33,0.745,34,0.812,35,0.859,36,0.941,37,0.793,38,0.461,46,3.143,54,1.939,56,1.595,63,1.875,74,0.742,79,2.905,84,4.198,107,2.522,161,1.206,171,3.202,223,0.657,313,2.736,455,1.939,488,3.48,644,2.644,936,3.048,1338,4.445,1387,6,2012,4.867,2015,4.004,2017,2.621,3115,3.28,3423,2.875,3485,2.875,3532,3.28,3555,3.28,3620,4.378,3801,3.842,4295,3.048,4319,2.436,5183,2.436,6784,2.523,7410,2.875,9117,3.048,9142,6.399,9152,8.855,9153,8.421,9154,8.421,9155,3.28,9156,6.05,9157,6.764,9158,3.28,9159,4.995,9160,3.28,9161,3.28,9162,3.28,9163,3.28,9164,8.219,9165,3.28,9166,3.28,9167,3.28,9168,3.28,9169,3.28,9170,6.05,9171,3.28,9172,7.974,9173,3.28,9204,3.28,9205,3.28,9250,3.631,9251,3.631,9252,3.631,9253,3.631,9254,5.531,9255,5.531,9256,3.631,9257,3.631,9258,5.531,9259,3.631,9260,3.631,9261,3.631,9262,6.699,9263,3.631,9264,3.631,9265,3.631,9266,3.631,9267,3.631,9268,3.631,9269,3.631,9270,3.631,9271,3.631,9272,3.631,9273,5.531,9274,3.631,9275,3.631,9276,3.631,9277,3.631,9278,3.631,9279,3.631,9280,3.631,9281,3.631,9282,3.631,9283,3.631,9284,3.631]],["title/standards/data/sort.html#interface-排序与查找",[12,1.399,9285,4.203]],["body/standards/data/sort.html#interface-排序与查找",[1,0.365,8,1.277,9,2.088,12,2.829,13,2.354,23,1.483,26,3.887,31,0.509,32,0.618,33,0.709,34,0.793,35,0.681,36,0.769,37,1.006,38,0.916,39,1.051,40,1.071,41,1.123,42,1.246,43,1.393,46,2.67,56,1.355,63,1.826,65,1.054,69,1.721,76,3.38,79,2.648,82,1.54,84,1.814,96,3.048,107,3.247,111,1.487,112,1.323,113,0.967,117,2.537,120,1.975,124,4.402,131,7.041,134,1.449,223,1.098,455,2.194,488,2.429,490,1.338,588,3.449,1338,4.816,1375,6.307,1376,4.071,1387,5.362,1625,3.943,1626,3.723,1656,3.38,1672,2.563,2012,5.177,2015,2.456,2385,4.215,3103,2.341,5183,4.841,5194,4.38,8593,5.711,8674,5.711,8820,3.711,9142,4.572,9144,5.093,9174,3.711,9175,3.711,9176,7.195,9178,3.711,9179,5.48,9180,5.48,9181,5.48,9182,5.48,9183,3.711,9184,3.711,9185,3.711,9186,5.48,9187,3.711,9188,5.48,9189,3.711,9190,3.711,9191,3.711,9286,4.109,9287,4.109,9288,4.109,9289,4.109,9290,4.109,9291,4.109,9292,4.109,9293,4.109,9294,4.109,9295,4.109,9296,4.109,9297,4.109,9298,4.109,9299,4.109,9300,4.109,9301,4.109,9302,4.109,9303,4.109,9304,4.109,9305,4.109,9306,4.109,9307,4.109,9308,4.109,9309,4.109,9310,4.109,9311,4.109,9312,4.109,9313,4.109,9314,4.109,9315,4.109,9316,4.109,9317,4.109]]],"invertedIndex":[["",{"_index":1,"title":{"index.html":{},"advance/mm.html":{},"advance/gc.html":{},"basic/error.html":{},"basic/array.html":{},"basic/env_config.html":{},"basic/flow.html":{},"basic/oop.html":{},"basic/constant.html":{},"basic/json.html":{},"basic/pointer.html":{},"basic/operator.html":{},"basic/struct.html":{},"basic/package.html":{},"basic/scope.html":{},"basic/interface.html":{},"basic/var.html":{},"theme/theme-usage.html":{},"basic/function.html":{},"basic/basic_data.html":{},"basic/test.html":{},"standards/io/fmt.html":{},"basic/reflect.html":{},"concurrent/sync_lock.html":{}},"body":{"index.html":{},"index.html#注释":{},"index.html#行分隔符":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/mm.html":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/array.html#数组传入函数":{},"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/pointer.html#哪些值是不可寻址的":{},"basic/operator.html":{},"basic/operator.html#优先级":{},"basic/operator.html#算术运算符":{},"basic/operator.html#关系运算符":{},"basic/operator.html#逻辑运算符":{},"basic/operator.html#位运算符":{},"basic/operator.html#赋值运算符":{},"basic/operator.html#其他运算符":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#包":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#包声明":{},"basic/package.html#初始化包":{},"basic/scope.html":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode":{},"standards/text/unicode.html#unicode-包":{},"standards/text/unicode.html#utf8-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/bufio.html#ReadWriter":{},"standards/os/filepath.html":{},"standards/os/filepath.html#filepath":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#规整化路径":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#文件路径匹配":{},"standards/os/filepath.html#遍历目录":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#判断是否包含字符串":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#JOIN":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#三角函数":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#特殊函数":{},"standards/data/math.html#类型转化函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#WriteString-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#共享变量":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["0",{"_index":74,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/operator.html#位运算符":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#变量":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#性能分析":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["0&#x3001;8&#x3001;16&#x3001;32",{"_index":4924,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["0&#x3002",{"_index":3570,"title":{},"body":{"standards/time.html#定时器":{},"standards/os/os.html#文件-I-O":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["0&#x4e14;transferencoding&#x5b57;&#x6bb5;&#x672a;&#x663e;&#x5f0f;&#x8bbe;&#x7f6e;&#x4e3a",{"_index":8832,"title":{},"body":{"standards/net/http.html#Request":{}}}],["0&#xff08;%#o&#xff09;&#xff0c;&#x4e3a;&#x5341;&#x516d;&#x8fdb;&#x5236;&#x6dfb;&#x52a0;&#x524d;&#x5bfc",{"_index":4710,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["0&#xff09;&#x3002",{"_index":6797,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["0&#xff0c;&#x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x4f7f;&#x7528;&#x4e0b;&#x6807;&#x8d4b;&#x503c;&#xff08",{"_index":1915,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["0&#xff0c;&#x4f1a;&#x5f15;&#x53d1;&#x4e00;&#x4e2a",{"_index":8100,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["0&#xff0c;&#x5219;&#x4f1a;&#x6839;&#x636e;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x524d;&#x7f00;&#x6765;&#x786e;&#x5b9a",{"_index":4916,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["0&#xff0c;&#x8868;&#x793a;&#x6700;&#x5927;&#x6253;&#x5f00;&#x6570;&#x6ca1;&#x6709;&#x9650;&#x5236;&#x3002",{"_index":4513,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["0&#xff0c;&#x90fd;&#x610f;&#x5473;&#x7740;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x7684;&#x975e;&#x6b63",{"_index":669,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["0.20180831062425",{"_index":893,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["0000",{"_index":3340,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["00000110",{"_index":1781,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{}}}],["00100000",{"_index":1784,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{}}}],["00100010",{"_index":1780,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{}}}],["00:00:00",{"_index":3257,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["00:00:00.000000000",{"_index":3249,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["01",{"_index":3287,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{},"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["0100",{"_index":3334,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["01000",{"_index":7268,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["02",{"_index":3288,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["02000",{"_index":7267,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["02d.%02d.%4d\\n",{"_index":3336,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["03",{"_index":5226,"title":{},"body":{"standards/data/container.html":{}}}],["03:&#x5f20;&#x4e09",{"_index":5334,"title":{},"body":{"standards/data/container.html#堆":{}}}],["04000",{"_index":7265,"title":{},"body":{"standards/os/os.html":{}}}],["04000)&#x3001",{"_index":7563,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["05",{"_index":5227,"title":{},"body":{"standards/data/container.html":{}}}],["05:&#x4e8c;&#x6bdb",{"_index":5335,"title":{},"body":{"standards/data/container.html#堆":{}}}],["06",{"_index":3291,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{},"standards/data/container.html":{}}}],["0666",{"_index":4772,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["06:&#x674e;&#x56db",{"_index":5336,"title":{},"body":{"standards/data/container.html#堆":{}}}],["0777",{"_index":7183,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["0852",{"_index":3348,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["08:52",{"_index":3351,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["08:52:14",{"_index":3339,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["08:56:34",{"_index":3350,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["08b\\n",{"_index":1782,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{}}}],["09",{"_index":5228,"title":{},"body":{"standards/data/container.html":{}}}],["09:&#x72d7;&#x86cb",{"_index":5337,"title":{},"body":{"standards/data/container.html#堆":{}}}],["09:14:00",{"_index":3292,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["09:52:14",{"_index":3333,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["0x",{"_index":4586,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strconv.html":{}}}],["0x&#xff08;%#x&#xff09;&#x6216",{"_index":4711,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["0x&#xff08;%#x&#xff09;&#xff0c;&#x4e3a",{"_index":4713,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["0x&#xff1b;&#x5982;&#x679c;&#x53ef;&#x80fd;&#x7684;&#x8bdd;&#xff0c;%q&#xff08;%#q&#xff09;&#x4f1a;&#x6253;&#x5370;&#x539f;&#x59cb",{"_index":4715,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["0x00",{"_index":156,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["0x005f",{"_index":5057,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["0x12",{"_index":4553,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["0x123",{"_index":4635,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["0x203f",{"_index":5058,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["0x2040",{"_index":5060,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["0x2054",{"_index":5061,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["0x2081be150",{"_index":5170,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["0x2081be180",{"_index":5172,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["0x2081be1b0",{"_index":5168,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["0x3d",{"_index":594,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{}}}],["0x4e2d",{"_index":4551,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["0x4f57f0",{"_index":4589,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["0x7f",{"_index":157,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["0xfe33",{"_index":5062,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["0xfe34",{"_index":5063,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["0xfe4d",{"_index":5064,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["0xfe4f",{"_index":5065,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["0xff3f",{"_index":5066,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["0x（%#x",{"_index":4594,"title":{},"body":{"standards/io/fmt.html":{}}}],["0x；如果可能的话，%q（%#q",{"_index":4598,"title":{},"body":{"standards/io/fmt.html":{}}}],["0、8、16、32",{"_index":4862,"title":{},"body":{"standards/text/strconv.html":{}}}],["0且transferencod",{"_index":8491,"title":{},"body":{"standards/net/http.html":{}}}],["0（%#o",{"_index":4593,"title":{},"body":{"standards/io/fmt.html":{}}}],["0，那么，go",{"_index":4064,"title":{},"body":{"basic/test.html":{}}}],["1",{"_index":31,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/array.html#数组传入函数":{},"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/operator.html#位运算符":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"theme/theme-usage.html#Favicon":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#性能分析":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/text/unicode.html#utf8-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/bufio.html#ReadWriter":{},"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#规整化路径":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#文件路径匹配":{},"standards/os/filepath.html#遍历目录":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#判断是否包含字符串":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#JOIN":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#三角函数":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#特殊函数":{},"standards/data/math.html#类型转化函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#WriteString-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["1#2#3#4#a",{"_index":3654,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["1&#x3002",{"_index":1462,"title":{},"body":{"basic/map.html#map":{},"basic/pointer.html#指针":{},"concurrent/sync_lock.html#sync-Once":{}}}],["1&#x3002;&#x4e00;&#x65e6",{"_index":8130,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["1&#x3002;&#x5f53",{"_index":4301,"title":{},"body":{"basic/test.html#性能分析":{}}}],["1&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x8981;&#x770b;&#x770b;&#x4fe1;&#x7bb1;&#x91cc;&#x662f;&#x4e0d;&#x662f;&#x8fd8;&#x5b58;&#x6709;&#x60c5;&#x62a5;&#x3002;&#x5982;&#x679c;&#x8fd8;&#x6709;&#x60c5;&#x62a5;&#xff0c;&#x90a3;&#x4e48;&#x6211;&#x5c31;&#x56de;&#x5bb6;&#x53bb;&#x7b49;&#x901a;&#x77e5;&#x3002",{"_index":7924,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["1&#xff0c;&#x5176;&#x4ed6;1",{"_index":3776,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["1&#xff0c;&#x56e0;&#x6b64;&#x8fd9",{"_index":1460,"title":{},"body":{"basic/map.html#map":{}}}],["1&#xff0c;&#x56e0;&#x6b64;&#xff0c;&#x5982;&#x679c;&#x53c2;&#x6570;&#x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x9700;&#x8981;&#x5f88;&#x957f;&#x65f6;&#x95f4;&#x6216;&#x8005;&#x6839;&#x672c;&#x5c31;&#x4e0d;&#x4f1a;&#x7ed3;&#x675f",{"_index":8145,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["1&#xff0c;&#x90a3;&#x4e3a;&#x4ec0;&#x4e48;&#x8fd8;&#x8981;&#x4f7f;&#x7528;&#x9700;&#x8981;&#x56db;&#x4e2a;&#x5b57;&#x8282;&#x7684",{"_index":8134,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["1+2+3",{"_index":5180,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#环":{}}}],["1,2,3",{"_index":1830,"title":{},"body":{"basic/slice.html":{}}}],["1,2,3.&#x5176",{"_index":1877,"title":{},"body":{"basic/slice.html#slice":{}}}],["1.020000e+01%",{"_index":4572,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["1.020000e+01%f",{"_index":4573,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["1.1",{"_index":8488,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["1.11",{"_index":807,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["1.12",{"_index":818,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["1.192",{"_index":4049,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["1.223e+03",{"_index":4881,"title":{},"body":{"standards/text/strconv.html":{}}}],["1.22e+03",{"_index":4882,"title":{},"body":{"standards/text/strconv.html":{}}}],["1.234455e+01",{"_index":4624,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["1.234500e+01",{"_index":4622,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["1.25",{"_index":1777,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/slice.html":{},"basic/slice.html#怎样估算切片容量的增长":{}}}],["1.8e308",{"_index":3612,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["1.9",{"_index":7796,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["1.html",{"_index":2569,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["10",{"_index":40,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"standards/log.html":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/data/math.html":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#interface-排序与查找":{}}}],["10.00",{"_index":1148,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["10.2",{"_index":4571,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["10.2%g",{"_index":4579,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["10.2+2i",{"_index":4581,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["10.20",{"_index":4578,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["10.20+2i",{"_index":4580,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["10.200000%g",{"_index":4576,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["100",{"_index":76,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/var.html":{},"basic/var.html#简短声明":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#interface-排序与查找":{}}}],["100&#x4e2a",{"_index":2137,"title":{},"body":{"basic/package.html#包":{}}}],["100,&#x4e0d;&#x6307;&#x5b9a;&#x7c7b;&#x578b;&#x548c;&#x521d;&#x59cb;&#x503c;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x548c;&#x4e0a;&#x4e00;&#x884c;&#x975e;&#x7a7a;&#x5e38;&#x91cf;&#x53f3;&#x503c;&#x76f8;&#x540c",{"_index":1365,"title":{},"body":{"basic/constant.html#iota":{}}}],["100.\\n",{"_index":9148,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["1000",{"_index":7202,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["1000.0",{"_index":752,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["10000",{"_index":2311,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{}}}],["10000000000",{"_index":4609,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["1001",{"_index":7203,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["101%c",{"_index":4549,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["1024",{"_index":1862,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#怎样估算切片容量的增长":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["10:31",{"_index":3327,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["11",{"_index":41,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"standards/log.html":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/data/math.html":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#interface-排序与查找":{}}}],["1111",{"_index":4343,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["11111111",{"_index":4611,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["11f53e031339",{"_index":900,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["12",{"_index":42,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/log.html":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#大小写转换":{},"standards/data/math.html":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#interface-排序与查找":{}}}],["12%q",{"_index":4555,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["12.34",{"_index":4618,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["12.34455",{"_index":4623,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["12.345",{"_index":4621,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["12.3456",{"_index":4625,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["12.345600",{"_index":4626,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["1223",{"_index":4614,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["1223.13252",{"_index":4880,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["123",{"_index":3638,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["123.456",{"_index":4574,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["123123123",{"_index":3662,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["1233",{"_index":4617,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["1234.456e+78",{"_index":4569,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["1234.5678",{"_index":4883,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["12345",{"_index":8520,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["123456p",{"_index":4567,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["127",{"_index":3599,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{}}}],["127&#x3002",{"_index":4947,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["128",{"_index":3598,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["12:34:07",{"_index":2467,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["13",{"_index":43,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/log.html":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#大小写转换":{},"standards/data/math.html":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#interface-排序与查找":{}}}],["13:56:36",{"_index":2447,"title":{},"body":{"standards/log.html":{},"standards/log.html#log":{}}}],["14",{"_index":111,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/log.html":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#大小写转换":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#interface-排序与查找":{}}}],["15",{"_index":112,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/log.html":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#大小写转换":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["15:00:00",{"_index":3303,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["15:04",{"_index":3324,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["15:04:05",{"_index":3289,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["15:34:39",{"_index":3308,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["15:54:23",{"_index":3302,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["15:59:06",{"_index":7283,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["16",{"_index":113,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"index.html#编码":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/log.html":{},"standards/log.html#Level":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#大小写转换":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["17",{"_index":65,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#大小写转换":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["18",{"_index":114,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#大小写转换":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["18%o",{"_index":4554,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["18446744073709551615",{"_index":3597,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["19",{"_index":115,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["1942",{"_index":1500,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["1956",{"_index":4332,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["1967",{"_index":1508,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["1968",{"_index":1512,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["1970",{"_index":3278,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["1e9",{"_index":3342,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["1mb",{"_index":371,"title":{},"body":{"advance/mm.html":{}}}],["1mb&#xff09;&#xff0c;&#x4ee5;&#x51cf;&#x5c11;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x3002",{"_index":384,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["1，其他1",{"_index":3646,"title":{},"body":{"basic/basic_data.html":{}}}],["2",{"_index":32,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"advance/gc.html#监控":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/array.html#数组传入函数":{},"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/operator.html#位运算符":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/slice.html#怎样估算切片容量的增长":{},"basic/slice.html#长度和容量":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"theme/theme-usage.html#Favicon":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/text/unicode.html#utf8-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/bufio.html#ReadWriter":{},"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#三角函数":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#特殊函数":{},"standards/data/math.html#类型转化函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["2&#x3002;&#x8fd9;&#x65f6;&#xff0c;&#x88ab;&#x8f93;&#x51fa;&#x7684;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x4e5f;&#x4f1a;&#x662f;&#x666e;&#x901a;&#x7684;&#x6587;&#x672c;&#xff0c;&#x5e76;&#x4e14;&#x901a;&#x5e38;&#x4f1a;&#x5305;&#x542b;&#x66f4;&#x591a;&#x7684;&#x7ec6;&#x8282;&#x3002;&#x81f3;&#x4e8e;&#x8fd9;&#x4e9b;&#x7ec6;&#x8282;&#x90fd;&#x5305;&#x542b;&#x4e86;&#x54ea;&#x4e9b",{"_index":4315,"title":{},"body":{"basic/test.html#性能分析":{}}}],["2&#xff1a",{"_index":4517,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["2.0",{"_index":753,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["2.3",{"_index":1325,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{},"basic/var.html":{},"basic/var.html#声明一组变量":{}}}],["2.5.3",{"_index":5099,"title":{"standards/text/unicode.html#2-5-3-utf16-包":{}},"body":{"standards/text/unicode.html":{}}}],["2/5",{"_index":4322,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["20",{"_index":116,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#TeeReader-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["200",{"_index":2385,"title":{},"body":{"basic/var.html":{},"basic/var.html#简短声明":{},"standards/net/http.html":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["20000",{"_index":2313,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["2006",{"_index":3286,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["20060102",{"_index":3352,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["2011",{"_index":3326,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["20111221",{"_index":3353,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["20141017200713",{"_index":857,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["2016",{"_index":3290,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["2016/06/18",{"_index":7282,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["20160331131008",{"_index":896,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20160718134125",{"_index":906,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["2017",{"_index":7795,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["20170109093832",{"_index":846,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20170307163044",{"_index":870,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20170601230230",{"_index":852,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20170829155851",{"_index":861,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20180103152354",{"_index":878,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20180427134550",{"_index":884,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20180607165131",{"_index":864,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20180814085852",{"_index":849,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20181207100336",{"_index":890,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["2019/09/12",{"_index":2446,"title":{},"body":{"standards/log.html":{},"standards/log.html#log":{}}}],["20190116161447",{"_index":899,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20us~10m",{"_index":6159,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["21",{"_index":117,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["21.07.2011",{"_index":3319,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["21.12.2011",{"_index":3337,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["2147483647",{"_index":3604,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["2147483648",{"_index":3603,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["22",{"_index":118,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["2222",{"_index":4344,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["22d885f9ecc7",{"_index":847,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["23",{"_index":119,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["2314",{"_index":4047,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["234",{"_index":9186,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["24",{"_index":120,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["25",{"_index":3,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["255",{"_index":72,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["26",{"_index":121,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["2616",{"_index":8495,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["27",{"_index":122,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["273.15",{"_index":87,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["28",{"_index":465,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["29",{"_index":838,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["2d:%",{"_index":5224,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["2k)&#xff0c;goroutin",{"_index":6431,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["2k)，goroutin",{"_index":6152,"title":{},"body":{"concurrent/goroutine.html":{}}}],["2~36",{"_index":4861,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{}}}],["2个字符串大小，相等0",{"_index":3645,"title":{},"body":{"basic/basic_data.html":{}}}],["3",{"_index":33,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/array.html#数组传入函数":{},"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/operator.html#位运算符":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#性能测试的测试结果":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/text/unicode.html#utf8-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/bufio.html#ReadWriter":{},"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#三角函数":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#特殊函数":{},"standards/data/math.html#类型转化函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["3&#xff0c;&#x76f4;&#x5230;&#x7070;&#x8272;&#x5bf9;&#x8c61;&#x961f;&#x5217;&#x4e3a;&#x7a7a;&#x3002",{"_index":519,"title":{},"body":{"advance/gc.html#三色标记和写屏障":{}}}],["3&#xff0c;&#x800c;&#x662f",{"_index":1141,"title":{},"body":{"basic/flow.html#for":{}}}],["3.14",{"_index":1156,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["3.1416",{"_index":4323,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["3.4",{"_index":754,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["3.4e38",{"_index":3610,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["3.549761m",{"_index":4874,"title":{},"body":{"standards/text/strconv.html":{}}}],["3.549761ms&#xff0c;&#x800c",{"_index":4964,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["3.9.0",{"_index":2537,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["30",{"_index":1493,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["300",{"_index":2386,"title":{},"body":{"basic/var.html":{},"basic/var.html#简短声明":{}}}],["3000",{"_index":1594,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["31",{"_index":1603,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["32",{"_index":92,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"index.html#编码":{},"basic/array.html":{},"basic/array.html#数组传入函数":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["32&#x3002;&#x56e0;&#x4e3a;&#x6211;&#x4eec;&#x5e76;&#x6ca1;&#x6709;&#x518d;&#x5411;&#x8be5;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x5199;&#x5165;&#x4efb;&#x4f55;&#x5185;&#x5bb9;&#xff0c;&#x6240;&#x4ee5;&#x5b83;&#x7684;&#x5bb9;&#x91cf;&#x4f1a;&#x4fdd;&#x6301;&#x4e0d;&#x53d8;&#xff0c;&#x4ecd;&#x662f",{"_index":3886,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["32767",{"_index":3602,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["32768",{"_index":3601,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["32k",{"_index":445,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["33",{"_index":1604,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["34",{"_index":1605,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["35",{"_index":1606,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["36",{"_index":1607,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["36b14963da70",{"_index":862,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["37",{"_index":1608,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["37/112",{"_index":4351,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["38",{"_index":1609,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["39",{"_index":1610,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["39;arg",{"_index":2652,"title":{},"body":{"commands/build.html":{}}}],["39;flag",{"_index":2667,"title":{},"body":{"commands/build.html":{}}}],["39;tag",{"_index":2671,"title":{},"body":{"commands/build.html":{}}}],["3]int",{"_index":761,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["4",{"_index":34,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#性能测试的测试结果":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/bufio.html#ReadWriter":{},"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#三角函数":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#特殊函数":{},"standards/data/math.html#类型转化函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["4&#x3002;&#x5bf9",{"_index":1097,"title":{},"body":{"basic/flow.html#for":{}}}],["4(&#x4e0d;&#x5305;&#x542b",{"_index":1907,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["4.00026461",{"_index":3399,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["40",{"_index":1611,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["404",{"_index":8592,"title":{},"body":{"standards/net/http.html":{}}}],["4096",{"_index":5342,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{}}}],["41",{"_index":1612,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["42",{"_index":1613,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["4294967295",{"_index":3596,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["43",{"_index":1614,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["43492122561469640008497075573153004",{"_index":4350,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["44",{"_index":1615,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["45",{"_index":1616,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["46",{"_index":1617,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["47",{"_index":1025,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["48",{"_index":1618,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["49",{"_index":1619,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["4c7",{"_index":4615,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["4m",{"_index":485,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["4~5kb",{"_index":6129,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["5",{"_index":35,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#性能测试的测试结果":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#特殊函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["5.0/4.0",{"_index":1776,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#算术运算符":{}}}],["5.1.2",{"_index":8496,"title":{},"body":{"standards/net/http.html":{}}}],["5.1.2&#xff0c",{"_index":8844,"title":{},"body":{"standards/net/http.html#Request":{}}}],["5.4",{"_index":8458,"title":{},"body":{"standards/net/http.html":{}}}],["5.4&#x7684;&#x89c4;&#x5219",{"_index":8754,"title":{},"body":{"standards/net/http.html#Request":{}}}],["5/4",{"_index":1778,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#算术运算符":{}}}],["50",{"_index":1620,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["50.0",{"_index":756,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["500",{"_index":6136,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["500000",{"_index":4046,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["51",{"_index":1621,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["512",{"_index":4065,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["52",{"_index":1622,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["53",{"_index":1623,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["54",{"_index":1624,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["55",{"_index":1625,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["56",{"_index":1626,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["568ao",{"_index":2682,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["57",{"_index":1627,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["57fdcb988a5c",{"_index":871,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["58",{"_index":1628,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["59",{"_index":1629,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["597d",{"_index":3699,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["5a0f697c9ed9",{"_index":853,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["5c",{"_index":2654,"title":{},"body":{"commands/build.html":{}}}],["5f57d2222ad7",{"_index":907,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["5g",{"_index":2661,"title":{},"body":{"commands/build.html":{}}}],["5l",{"_index":2668,"title":{},"body":{"commands/build.html":{}}}],["6",{"_index":36,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#性能测试的测试结果":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/data/math.html":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["60",{"_index":1630,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["61",{"_index":1631,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["6162637a7863",{"_index":4631,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["6173647a7863",{"_index":4633,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["62",{"_index":1632,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["6265",{"_index":8457,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["63",{"_index":1633,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["64",{"_index":1634,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"commands/build.html":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["64&#x3002",{"_index":3887,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["64&#xff0c;&#x4f46;&#x662f;&#x793a;&#x4f8b;&#x4e8c;&#xff0c;&#x4ec",{"_index":3883,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["64&#xff0c;&#x90a3;&#x4e48;&#x8be5;&#x503c;&#x5c31;&#x4f1a;&#x57fa;&#x4e8e;&#x4e00;&#x4e2a;&#x9884;&#x5148;&#x5b9a;&#x4e49;&#x597d;&#x7684;&#x3001;&#x957f;&#x5ea6;&#x4e3a",{"_index":3890,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["6495407",{"_index":1970,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["65",{"_index":1635,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["65535",{"_index":3594,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["66",{"_index":1636,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["67",{"_index":1637,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["676f6c616e67",{"_index":4585,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["676f6c616e67%x",{"_index":4584,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["68",{"_index":1638,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["69",{"_index":1639,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["6946802425218990p",{"_index":4619,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["6c",{"_index":2655,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["6d33b5a963d9",{"_index":891,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["6f",{"_index":1027,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["6g",{"_index":2662,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["6l",{"_index":2669,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["7",{"_index":37,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#性能测试的测试结果":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#整型转为字符串":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/data/math.html":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["7&#x3002",{"_index":1099,"title":{},"body":{"basic/flow.html#for":{}}}],["7.0",{"_index":755,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["70",{"_index":1640,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["71",{"_index":1641,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["72",{"_index":1642,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["7231",{"_index":3698,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["73",{"_index":5192,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["74",{"_index":5193,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["75",{"_index":5194,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["754",{"_index":3608,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["76",{"_index":5195,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["76626ae9c91c",{"_index":858,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["77",{"_index":5196,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["78",{"_index":5197,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["78%e",{"_index":4568,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["79",{"_index":5198,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["8",{"_index":38,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#自定义类型":{},"index.html#类型断言":{},"index.html#编码":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#import":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#赋值":{},"standards/log.html":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#性能测试的测试结果":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["8&#x3002",{"_index":4192,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["80",{"_index":1035,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["8000",{"_index":8720,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["8005",{"_index":3700,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["8080",{"_index":2705,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#静态站点":{}}}],["8082",{"_index":2539,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["81",{"_index":5199,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["8160",{"_index":5059,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["82",{"_index":5200,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["83",{"_index":5201,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["84",{"_index":5202,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["848.208u",{"_index":4875,"title":{},"body":{"standards/text/strconv.html":{}}}],["848.208us&#xff0c;&#x76f8;&#x5de",{"_index":4965,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["85",{"_index":1036,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["88",{"_index":1029,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["8;q=0.7",{"_index":8530,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["8c",{"_index":2656,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["8g",{"_index":2663,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["8l",{"_index":2670,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["9",{"_index":39,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#赋值":{},"standards/log.html":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/data/math.html":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#interface-排序与查找":{}}}],["90",{"_index":9134,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["91",{"_index":9130,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["9223372036854775807",{"_index":3606,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["9223372036854775808",{"_index":3605,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["95",{"_index":9128,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["96",{"_index":9132,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["972f9cd951fc",{"_index":865,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["999999999",{"_index":3263,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["_",{"_index":53,"title":{},"body":{"index.html":{},"index.html#空标识符":{},"index.html#命名":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/package.html":{},"basic/package.html#点操作":{},"basic/package.html#包声明":{},"basic/interface.html":{},"basic/interface.html#接口":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#静态站点":{}}}],["_config.yaml",{"_index":2532,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["_config.yml",{"_index":2540,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["_data",{"_index":2530,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{}}}],["_gcoff",{"_index":468,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["_obj",{"_index":2674,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["_pc",{"_index":5055,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["_test",{"_index":2130,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["_test.go",{"_index":3968,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{}}}],["_testmain.go",{"_index":2677,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["_type",{"_index":449,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["a&#x53ef;&#x4ee5;&#x5b58;&#x50a8;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x6570;&#x503c",{"_index":2339,"title":{},"body":{"basic/interface.html#接口":{}}}],["a&#x7684;&#x503c;&#x4e3a",{"_index":1116,"title":{},"body":{"basic/flow.html#for":{}}}],["a&#xff0c;&#x7136;&#x540e;&#x53c8;&#x8fc5;&#x901f;&#x5f97;&#x5207;&#x6362;&#x5230;&#x7a0b;&#x5e8f",{"_index":6169,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["a,b,c",{"_index":5901,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["a/b/c",{"_index":2647,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["a1",{"_index":7700,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["a2",{"_index":7702,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["a5",{"_index":1032,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["a[%d][%d",{"_index":762,"title":{},"body":{"basic/array.html":{},"basic/array.html#二维数组":{}}}],["a[2",{"_index":748,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["a[b",{"_index":2690,"title":{},"body":{"commands/build.html":{}}}],["a[b:]&#x201d;&#x7684;&#x91cd;&#x5199;&#x89c4;&#x5219;&#xff0c;&#x65b9;&#x4fbf;&#x6211;&#x4eec;&#x505a;&#x6279;&#x91cf;&#x66ff;&#x6362",{"_index":2795,"title":{},"body":{"commands/build.html#工具":{}}}],["a[b:len(a",{"_index":2689,"title":{},"body":{"commands/build.html":{}}}],["a[i",{"_index":9188,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["a[index",{"_index":9190,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["a[j",{"_index":9189,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["aa",{"_index":3984,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["ab",{"_index":3665,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{}}}],["abc",{"_index":1324,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{},"basic/var.html":{},"basic/var.html#简短声明":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["abczxc",{"_index":4630,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["abdca",{"_index":3658,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["abs(x",{"_index":6044,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["absolutezeroc",{"_index":86,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["ac",{"_index":1197,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.class",{"_index":1202,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.genu",{"_index":1204,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.kingdom",{"_index":1200,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.order,ac.famili",{"_index":1203,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.phylum",{"_index":1201,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.speci",{"_index":1205,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["accept",{"_index":8523,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["access",{"_index":7141,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件属性":{}}}],["accord",{"_index":2696,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["accumul",{"_index":5364,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["acmfli",{"_index":9131,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["acos(x",{"_index":6011,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["acosh(x",{"_index":6013,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["acquir",{"_index":7694,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["actor",{"_index":1498,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["add",{"_index":3247,"title":{},"body":{"standards/time.html":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["addcooki",{"_index":8455,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{}}}],["addit",{"_index":2632,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["addnum",{"_index":7780,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["addnum(&amp;num",{"_index":7748,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["addr",{"_index":8578,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["address",{"_index":1978,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["add）、比较并交换（compar",{"_index":7728,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["afterfunc",{"_index":3365,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["ag",{"_index":1375,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["again",{"_index":4411,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["age=0",{"_index":8540,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["age=xx",{"_index":5880,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#JOIN":{}}}],["agent",{"_index":8463,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["alan",{"_index":9127,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["alic",{"_index":9181,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["aliv",{"_index":8543,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["alloc",{"_index":472,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["altern",{"_index":2119,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["amd64",{"_index":4044,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["america/new_york",{"_index":3243,"title":{},"body":{"standards/time.html":{}}}],["american",{"_index":140,"title":{},"body":{"index.html":{}}}],["amount",{"_index":3359,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["amp",{"_index":1592,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/operator.html":{},"basic/operator.html#优先级":{},"basic/operator.html#位运算符":{},"basic/operator.html#其他运算符":{},"standards/text/strings.html":{},"standards/text/strings.html#JOIN":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["amp;",{"_index":9150,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["amp;&amp",{"_index":455,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/operator.html":{},"basic/operator.html#优先级":{},"basic/operator.html#逻辑运算符":{},"basic/struct.html":{},"basic/struct.html#结构体比较":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["amp;0",{"_index":1662,"title":{},"body":{"basic/pointer.html":{}}}],["amp;1",{"_index":1663,"title":{},"body":{"basic/pointer.html":{}}}],["amp;2",{"_index":1670,"title":{},"body":{"basic/pointer.html":{}}}],["amp;a",{"_index":1595,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{}}}],["amp;ch",{"_index":6713,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["amp;defaultservemux",{"_index":8603,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["amp;dilbert",{"_index":1973,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["amp;errorstringtext",{"_index":2283,"title":{},"body":{"basic/interface.html":{}}}],["amp;errorstring{text",{"_index":2348,"title":{},"body":{"basic/interface.html#接口":{}}}],["amp;http.client",{"_index":8514,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["amp;http.cookienam",{"_index":8517,"title":{},"body":{"standards/net/http.html":{}}}],["amp;http.cookie{nam",{"_index":8900,"title":{},"body":{"standards/net/http.html#client":{}}}],["amp;intheap",{"_index":5191,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["amp;io.limitedreaderr",{"_index":6735,"title":{},"body":{"standards/io/io.html":{}}}],["amp;io.limitedreader{r",{"_index":7006,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["amp;item",{"_index":5219,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["amp;limitedreaderr",{"_index":6738,"title":{},"body":{"standards/io/io.html":{}}}],["amp;limitedreader{r",{"_index":7012,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["amp;list.elementnext:(*list.el",{"_index":5167,"title":{},"body":{"standards/data/container.html":{}}}],["amp;list.element{next:(*list.el",{"_index":5250,"title":{},"body":{"standards/data/container.html#链表":{}}}],["amp;mypoint",{"_index":1653,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["amp;mysqldriv",{"_index":4407,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["amp;numerrorfn",{"_index":4855,"title":{},"body":{"standards/text/strconv.html":{}}}],["amp;numerror{fn",{"_index":4906,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["amp;patherror",{"_index":7302,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["amp;point",{"_index":1165,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["amp;ptr",{"_index":1596,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{}}}],["amp;p去调用scalebi",{"_index":1167,"title":{},"body":{"basic/oop.html":{}}}],["amp;ranget",{"_index":5056,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["amp;reversedata",{"_index":2020,"title":{},"body":{"basic/struct.html":{},"standards/data/sort.html":{}}}],["amp;reverse{data",{"_index":2088,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{},"standards/data/sort.html#Reverse":{}}}],["amp;serveraddr",{"_index":8612,"title":{},"body":{"standards/net/http.html":{}}}],["amp;server{addr",{"_index":9007,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["amp;sit",{"_index":4588,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["amp;tim",{"_index":3379,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["amp;timehandlerformat",{"_index":8701,"title":{},"body":{"standards/net/http.html":{}}}],["amp;timehandler{format",{"_index":9076,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["amp;titl",{"_index":1531,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["amp;x",{"_index":80,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/pointer.html":{},"basic/pointer.html#指针":{}}}],["amp;{0",{"_index":1748,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["amp;{1",{"_index":1749,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["amp;{2",{"_index":1750,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["anderson",{"_index":2293,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["anim",{"_index":1209,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["animalcategori",{"_index":1189,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["animalcategoryspeci",{"_index":1207,"title":{},"body":{"basic/oop.html":{}}}],["animalcategory{speci",{"_index":1305,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["annot",{"_index":4019,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["anonym",{"_index":2016,"title":{},"body":{"basic/struct.html":{}}}],["answer",{"_index":9149,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["api",{"_index":1188,"title":{},"body":{"basic/oop.html":{},"basic/json.html":{},"basic/json.html#序列化":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#性能分析":{}}}],["api&#x3002;&#x60f3;&#x8ba9;&#x7a0b;&#x5e8f;&#x5f00;&#x59cb;&#x5bf9",{"_index":4258,"title":{},"body":{"basic/test.html#性能分析":{}}}],["api&#xff0c;&#x548c;&#x975e;&#x5e38;&#x597d;&#x7528;&#x7684;&#x6807;&#x51c6;&#x5de5;&#x5177;&#x3002;&#x8fd9;&#x4e9b",{"_index":4235,"title":{},"body":{"basic/test.html#性能分析":{}}}],["apo",{"_index":4602,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/unicode.html#unicode-包":{},"standards/os/filepath.html#文件路径匹配":{}}}],["apos;&#x4e2d;&apo",{"_index":4712,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["apos;&#x4e2d;&apos;%x",{"_index":4684,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["apos;&#x597d;&apo",{"_index":1137,"title":{},"body":{"basic/flow.html#for":{},"basic/basic_data.html#字符串":{}}}],["apos;&#x7231;&apo",{"_index":1136,"title":{},"body":{"basic/flow.html#for":{},"basic/basic_data.html#字符串":{}}}],["apos;&#x8005;&apo",{"_index":1138,"title":{},"body":{"basic/flow.html#for":{},"basic/basic_data.html#字符串":{}}}],["apos;&#xff09",{"_index":5749,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["apos;*&apo",{"_index":5737,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["apos;1&apo",{"_index":5134,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["apos;?&apo",{"_index":5740,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["apos;[&apo",{"_index":5742,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["apos;\\\\&apo",{"_index":5748,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["apos;\\n&apo",{"_index":5434,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["apos;\\u0015&apo",{"_index":5132,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["apos;\\ufe35&apo",{"_index":5133,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["apos;\\x16&apo",{"_index":4734,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["apos;]&apo",{"_index":5744,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["apos;^&apo",{"_index":5743,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["apos;a&apo",{"_index":2362,"title":{},"body":{"basic/interface.html#接口":{},"standards/io/io.html#其他接口":{}}}],["apos;arg",{"_index":2748,"title":{},"body":{"commands/build.html#工具":{}}}],["apos;b&apo",{"_index":4566,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/io.html#其他接口":{}}}],["apos;e&apo",{"_index":2363,"title":{},"body":{"basic/interface.html#接口":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["apos;flag",{"_index":2758,"title":{},"body":{"commands/build.html#工具":{}}}],["apos;g&apo",{"_index":1134,"title":{},"body":{"basic/flow.html#for":{},"basic/basic_data.html#字符串":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["apos;go",{"_index":4116,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["apos;i&apo",{"_index":2364,"title":{},"body":{"basic/interface.html#接口":{}}}],["apos;o&apo",{"_index":1135,"title":{},"body":{"basic/flow.html#for":{},"basic/interface.html#接口":{},"basic/basic_data.html#字符串":{}}}],["apos;tag",{"_index":2760,"title":{},"body":{"commands/build.html#工具":{}}}],["apos;u&apo",{"_index":2365,"title":{},"body":{"basic/interface.html#接口":{}}}],["apos;x&apos;&#xff09;&#x3002;&apo",{"_index":4719,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["apos;x&apos;）。&apo",{"_index":4601,"title":{},"body":{"standards/io/fmt.html":{}}}],["apos;y&apo",{"_index":9248,"title":{},"body":{"standards/data/sort.html#Search":{}}}],["apos;中&apo",{"_index":4596,"title":{},"body":{"standards/io/fmt.html":{}}}],["apos;中&apos;%x",{"_index":4557,"title":{},"body":{"standards/io/fmt.html":{}}}],["append",{"_index":1839,"title":{"basic/slice.html#append-和-copy":{}},"body":{"basic/slice.html":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/slice.html#怎样估算切片容量的增长":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["appli",{"_index":8659,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["application/x",{"_index":8557,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["application/xhtml+xml",{"_index":8525,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["application/xml;q=0.9",{"_index":8526,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["area",{"_index":1149,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["arg",{"_index":57,"title":{},"body":{"index.html":{},"index.html#空标识符":{},"standards/time.html":{},"standards/time.html#定时器":{}}}],["arg1",{"_index":50,"title":{},"body":{"index.html":{},"index.html#os-Args":{}}}],["arg2",{"_index":51,"title":{},"body":{"index.html":{},"index.html#os-Args":{}}}],["arg3",{"_index":52,"title":{},"body":{"index.html":{},"index.html#os-Args":{}}}],["args1.go",{"_index":49,"title":{},"body":{"index.html":{},"index.html#os-Args":{}}}],["argument",{"_index":1658,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["arr",{"_index":1832,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["arr[:endindex",{"_index":1837,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{}}}],["arr[i",{"_index":2013,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["arr[j",{"_index":2014,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["arr[startindex",{"_index":1836,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{}}}],["arr[startindex:endindex",{"_index":1835,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{}}}],["array",{"_index":742,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["array1",{"_index":3102,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["array2",{"_index":3104,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["ascii",{"_index":139,"title":{},"body":{"index.html":{},"index.html#编码":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/io.html":{}}}],["asdzxc",{"_index":4632,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["asin(x",{"_index":6004,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["asinh(x",{"_index":6006,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["asleep",{"_index":2854,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["assign",{"_index":98,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["atan(x",{"_index":6015,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["atan2(i",{"_index":6016,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["atanh(x",{"_index":6018,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["atim",{"_index":7249,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["atoi",{"_index":4857,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{}}}],["atoi32(p",{"_index":491,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["atomic.addint32",{"_index":7731,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["atomic.adduint32(&amp;count",{"_index":6140,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["atomic.compareandswapint32(&amp;num2",{"_index":7734,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["atomic.loadint32(&amp;num",{"_index":7775,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["atomic.loaduint32",{"_index":7765,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["atomic.loaduint32(&amp;count",{"_index":6139,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["atomic.valu",{"_index":7739,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["author",{"_index":1961,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["auto",{"_index":811,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["avail",{"_index":5388,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["avoid",{"_index":2120,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["awesom",{"_index":2565,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["b",{"_index":60,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"basic/test.html":{},"basic/test.html#基准测试":{},"standards/io/fmt.html":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#并发和并行":{},"standards/io/io.html":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["b.buf",{"_index":3684,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["b.buf)+ne",{"_index":3686,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["b.buf[:length+ne",{"_index":3685,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["b.readbytes(delim",{"_index":5375,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["b.readslice(delim",{"_index":5367,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["b.work",{"_index":4778,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["b1",{"_index":1030,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["b1.writestr",{"_index":3631,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["b2",{"_index":7703,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["b3d780601022",{"_index":897,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["b869fe1415e4",{"_index":850,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["b\\n",{"_index":4608,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["ba",{"_index":5852,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#重复字符串":{}}}],["back",{"_index":5156,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["badmap2",{"_index":1388,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["bailout",{"_index":601,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["balanc",{"_index":751,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["balance2",{"_index":758,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["banana",{"_index":5855,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#重复字符串":{}}}],["bar",{"_index":5885,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{},"standards/net/http.html":{},"standards/net/http.html#http":{}}}],["bar,baz",{"_index":5900,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["base",{"_index":4858,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/io/io.html":{},"standards/io/io.html#SectionReader-类型":{}}}],["basenam",{"_index":5555,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{}}}],["basepath",{"_index":5567,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{}}}],["basicpay",{"_index":2301,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["baz",{"_index":5886,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["bd",{"_index":1033,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["bd.begin",{"_index":4393,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["befor",{"_index":5153,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["before&#x3001;aft",{"_index":3451,"title":{},"body":{"standards/time.html#Time":{}}}],["before、aft",{"_index":3244,"title":{},"body":{"standards/time.html":{}}}],["behav",{"_index":3375,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["bench",{"_index":3972,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#基准测试":{},"basic/test.html#性能测试的测试结果":{}}}],["benchmark",{"_index":4024,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{}}}],["benchmarkgetprim",{"_index":4045,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["benchmarknam",{"_index":4026,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{}}}],["bergman",{"_index":1504,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["bernardo",{"_index":5903,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["between",{"_index":2634,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["big",{"_index":4318,"title":{"standards/data/big.html":{},"standards/data/big.html#big":{}},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["big.int",{"_index":4320,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["big.newint",{"_index":4331,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["big.newint(math.maxint64",{"_index":4330,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["big.newint(n",{"_index":4324,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["big.newrat",{"_index":4339,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["big.newrat(math.maxint64",{"_index":4337,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["big.newrat(n",{"_index":4325,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["big.rat",{"_index":4321,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["bigint",{"_index":4328,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["bigslowoper",{"_index":3081,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["bin",{"_index":804,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#工作区":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["binari",{"_index":7690,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["bisset",{"_index":1516,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["bit",{"_index":145,"title":{},"body":{"index.html":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["bitsiz",{"_index":4859,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["bitsize==0",{"_index":4864,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{}}}],["blkcnt_t",{"_index":7236,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["blksize_t",{"_index":7234,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["block",{"_index":495,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"standards/time.html":{},"standards/time.html#定时器":{},"basic/test.html":{}}}],["blockprofile=block.out",{"_index":4028,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{}}}],["blog",{"_index":2543,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["blue",{"_index":1178,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["bob",{"_index":1376,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"basic/var.html":{},"basic/var.html#赋值":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["bodi",{"_index":4747,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#中间件-Middleware":{}}}],["body&#x5982;&#x679c;&#x5b58;&#x5728;body&#xff0c",{"_index":8830,"title":{},"body":{"standards/net/http.html#Request":{}}}],["body.(io.readclos",{"_index":4751,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{}}}],["body.clos",{"_index":8551,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["body如果存在bodi",{"_index":8490,"title":{},"body":{"standards/net/http.html":{}}}],["bogart",{"_index":1502,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["boilingc",{"_index":89,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["book",{"_index":1960,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book1",{"_index":1964,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book1.author",{"_index":1966,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book1.book_id",{"_index":1969,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book1.subject",{"_index":1968,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book1.titl",{"_index":1965,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book_id",{"_index":1963,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["bool",{"_index":107,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/text/unicode.html#utf8-包":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#判断是否包含字符串":{},"standards/data/math.html":{},"standards/data/math.html#特殊函数":{},"standards/data/math.html#其他函数":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["boolean",{"_index":1599,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["box6",{"_index":7740,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["box6.store(replica",{"_index":7744,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["box6.store(v6",{"_index":7742,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["branch",{"_index":2549,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["break",{"_index":14,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/flow.html":{},"basic/flow.html#for":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["break，cas",{"_index":1008,"title":{},"body":{"basic/flow.html":{}}}],["broadcast",{"_index":7727,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["broken",{"_index":4420,"title":{},"body":{"standards/database/sql.html":{}}}],["browser",{"_index":4017,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["buf",{"_index":5345,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["buf&#x5185;&#x5bb9",{"_index":7029,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["buf[n",{"_index":5374,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["buffer",{"_index":1488,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#性能分析":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["buffer.grow",{"_index":3627,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer.readbyt",{"_index":6716,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["buffer.unreadbyt",{"_index":6721,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["buffer.writebyte(ch",{"_index":6714,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["buffer.writestr",{"_index":3628,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1",{"_index":3674,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1.byt",{"_index":3690,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1.cap",{"_index":3680,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1.len",{"_index":3679,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1.read(p1",{"_index":3682,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1.writestring(cont",{"_index":3677,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["bufio",{"_index":5338,"title":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio":{}},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio":{}}}],["bufio&#x5305;&#x4e2d;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":5398,"title":{"standards/io/bufio.html#bufio包中的数据类型":{}},"body":{}}],["bufio&#x5305;&#x4e2d;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x4e3b;&#x8981;&#x6709;&#xff1a",{"_index":5399,"title":{},"body":{"standards/io/bufio.html#bufio包中的数据类型":{}}}],["bufio.errbufferful",{"_index":5362,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["bufio.newreader(os.stdin",{"_index":582,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["bufio.newreader(strings.newread",{"_index":5354,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["bufio.newreadwrit",{"_index":5394,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#ReadWriter":{}}}],["bufio.newwriter(os.stdout",{"_index":6679,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["bufio.read",{"_index":5340,"title":{"standards/io/bufio.html#bufio-Reader":{}},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["bufio.reader/writ",{"_index":6644,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#其他接口":{}}}],["bufio.writ",{"_index":5384,"title":{"standards/io/bufio.html#bufio-Writer":{}},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{}}}],["bug",{"_index":2619,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["build",{"_index":833,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/package.html":{},"basic/package.html#包声明":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["build&#x4ea7;&#x751f",{"_index":2777,"title":{},"body":{"commands/build.html#工具":{}}}],["build.out",{"_index":2681,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["builder",{"_index":3667,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buildmod",{"_index":2635,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["bullitt",{"_index":1511,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["burger",{"_index":5831,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["bye",{"_index":6757,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["byte",{"_index":61,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/array.html":{},"basic/array.html#数组传入函数":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode":{},"standards/text/unicode.html#utf8-包":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/text/strings.html":{},"standards/text/strings.html#从字符串中读取内容":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["byte&#xff09;&#x7684;&#x5bf9;&#x8c61;&#x65f6;&#x8fdb;&#x884c;&#x68c0;&#x6d4b;&#x6b64;&#x65f6;&#x662f;&#x5426;&#x6ee1;&#x8db3;&#x5783;&#x573e;&#x56de;&#x6536;&#x6761;&#x4ef6;&#xff0c;&#x5982;&#x679c;&#x6ee1;&#x8db3;&#x5219;&#x8fdb;&#x884c;&#x5783;&#x573e;&#x56de;&#x6536",{"_index":530,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["byteread",{"_index":6708,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["bytes(hex",{"_index":3697,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["bytes.buff",{"_index":3626,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#其他接口":{}}}],["bytes.newbuff",{"_index":6720,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["bytes.newbufferstr",{"_index":6771,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["bytes.newbufferstring(cont",{"_index":3688,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["bytes.newread",{"_index":6684,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["bytes.read",{"_index":6645,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#其他接口":{}}}],["bytes.trimright(lin",{"_index":5380,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["bytescann",{"_index":6719,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["bytescanner&#x3001;runeread",{"_index":6952,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["bytescanner、runeread",{"_index":6717,"title":{},"body":{"standards/io/io.html":{}}}],["bytewrit",{"_index":5393,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["c",{"_index":62,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#定时器":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#规整化路径":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["c&#x4ea7;&#x751f",{"_index":2778,"title":{},"body":{"commands/build.html#工具":{}}}],["c&#xff08;c",{"_index":5747,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["c.basicpay",{"_index":2306,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["c.radiu",{"_index":1155,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["c.readrequest(ctx",{"_index":8634,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["c.serve(ctx",{"_index":8629,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["c.setstate(c.rwc",{"_index":8627,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["c1",{"_index":1146,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["c1.getarea",{"_index":1151,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["c1.radiu",{"_index":1147,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["c:\\go",{"_index":797,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{}}}],["c:\\go\\bin",{"_index":798,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{}}}],["c:\\program",{"_index":5563,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{}}}],["c\\n",{"_index":4610,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/io.html":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#其他接口":{}}}],["ca",{"_index":7732,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["cach",{"_index":376,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#tcmalloc":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#功能测试的测试结果":{},"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["cache&#xff0c;&#x7528;&#x4e8e;&#x7ed9;&#x6ca1;&#x6709;&#x9501;&#x7684",{"_index":417,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["calcul",{"_index":3064,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为参数":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["calculatesalari",{"_index":2298,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["call",{"_index":2270,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["callback",{"_index":3390,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["caller",{"_index":496,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["canal",{"_index":3989,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["cancel",{"_index":7781,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["cancelfunc",{"_index":7773,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["candid",{"_index":2868,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["canon",{"_index":8676,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["canonic",{"_index":8654,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["cap",{"_index":1333,"title":{"basic/slice.html#len-和-cap":{}},"body":{"basic/constant.html":{},"basic/constant.html#常量":{},"basic/slice.html":{},"basic/slice.html#len-和-cap":{},"basic/slice.html#切片操作":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["cap=%d",{"_index":1850,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["cap=7",{"_index":1859,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["cap=9",{"_index":1854,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["cap=len=3",{"_index":1831,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{}}}],["capac",{"_index":1838,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["carri",{"_index":605,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["cas&#xff09;&#x3001;&#x52a0;&#x8f7d;&#xff08;load&#xff09;&#x3001",{"_index":7998,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["casablanca",{"_index":1499,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["case",{"_index":15,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["cas）、加载（load",{"_index":7729,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["cat",{"_index":1208,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["categori",{"_index":1206,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["cbrt(x",{"_index":6019,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["ccflag",{"_index":2651,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["cd",{"_index":828,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["cdf",{"_index":829,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["ceil(x",{"_index":6045,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["celsiu",{"_index":83,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["celsius((f",{"_index":94,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["cemp1",{"_index":2314,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["center",{"_index":1989,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["central",{"_index":377,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#tcmalloc":{}}}],["certfil",{"_index":8579,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["ch",{"_index":2851,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["ch1",{"_index":2859,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["ch2",{"_index":2860,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["ch3",{"_index":2861,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["chan",{"_index":21,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/var.html":{},"basic/var.html#变量":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/time.html":{},"standards/time.html#定时器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["chang",{"_index":7279,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["channel",{"_index":22,"title":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#make-和-new":{},"index.html#类型转换":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#参数":{},"standards/time.html":{},"standards/time.html#定时器":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["channel&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":3577,"title":{},"body":{"standards/time.html#定时器":{}}}],["channel)&#xff0c;&#x9664;&#x975",{"_index":3550,"title":{},"body":{"standards/time.html#定时器":{}}}],["charact",{"_index":153,"title":{},"body":{"index.html":{},"index.html#编码":{},"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["charset",{"_index":8528,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["check",{"_index":475,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["children",{"_index":2568,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["chmod",{"_index":7269,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["chown",{"_index":7255,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["chri",{"_index":5019,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["chtime",{"_index":7248,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["chunk",{"_index":8494,"title":{},"body":{"standards/net/http.html":{}}}],["chunked&#x201d",{"_index":8836,"title":{},"body":{"standards/net/http.html#Request":{}}}],["circl",{"_index":1144,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["circle(c1",{"_index":1150,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["class",{"_index":1192,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["claus",{"_index":1012,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#select":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["clean",{"_index":2612,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#功能测试的测试结果":{},"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#规整化路径":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["cleanpath(r.url.path",{"_index":8669,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["client",{"_index":8505,"title":{"standards/net/http.html#client":{}},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["client&#xff0c;http",{"_index":8731,"title":{},"body":{"standards/net/http.html#http":{}}}],["client.do(request",{"_index":8544,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["client.get",{"_index":8510,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["client，http",{"_index":8418,"title":{},"body":{"standards/net/http.html":{}}}],["clone",{"_index":822,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["close",{"_index":2278,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/time.html":{},"standards/time.html#定时器":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/io.html":{},"standards/io/io.html#Closer":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#HTTP-Server":{}}}],["closer",{"_index":2277,"title":{"standards/io/io.html#Closer":{}},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"standards/io/io.html":{},"standards/io/io.html#Closer":{}}}],["closewitherror",{"_index":6741,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["cmd",{"_index":801,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{}}}],["cn",{"_index":8537,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["co",{"_index":6008,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["code",{"_index":142,"title":{},"body":{"index.html":{},"index.html#编码":{},"basic/env_config.html":{},"basic/env_config.html#开发工具":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["collect",{"_index":494,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["color",{"_index":1175,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/json.html":{},"basic/json.html#序列化":{}}}],["color.rgba",{"_index":1176,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["coloredpoint",{"_index":1174,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["coloredpointpoint",{"_index":1179,"title":{},"body":{"basic/oop.html":{}}}],["coloredpoint{point",{"_index":1260,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["comma",{"_index":123,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["command",{"_index":2610,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["commit",{"_index":4395,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["commun",{"_index":1011,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#select":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["compar",{"_index":7797,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["compil",{"_index":1169,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["complet",{"_index":498,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["complex",{"_index":3615,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["complex128",{"_index":3614,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["complex64",{"_index":3613,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["compress/gzip.reader/writ",{"_index":6646,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["concurr",{"_index":7762,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["condit",{"_index":467,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/flow.html":{},"basic/flow.html#for":{},"concurrent/goroutine.html":{}}}],["condition&#xff09;&#xff0c;&#x7834;&#x574f;&#x4e86;&#x7a0b;&#x5e8f;&#x7684;&#x5e76",{"_index":6374,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["conflict",{"_index":2121,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["conn",{"_index":8630,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["conn&#x63a5;&#x53e3;&#x5b9a;&#x4e49;&#x4e86;read/writ",{"_index":6849,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["connect",{"_index":8541,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["connection)&#xff0c;database/sql",{"_index":4502,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["connection)，database/sql",{"_index":4421,"title":{},"body":{"standards/database/sql.html":{}}}],["connectionst",{"_index":8450,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["conn接口定义了read/writ",{"_index":6652,"title":{},"body":{"standards/io/io.html":{}}}],["const",{"_index":5,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#声明":{},"index.html#自定义类型":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"standards/io/io.html":{},"standards/io/io.html#Seeker":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["constraint",{"_index":2673,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["contain",{"_index":5145,"title":{"standards/data/container.html":{},"standards/data/container.html#container":{}},"body":{"standards/data/container.html":{},"standards/data/container.html#container":{},"standards/data/container.html#链表":{},"standards/text/strings.html":{},"standards/text/strings.html#判断是否包含字符串":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["container/heap",{"_index":5203,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["container/list",{"_index":5161,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["container/r",{"_index":5176,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#环":{}}}],["content",{"_index":3675,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/io.html":{},"standards/io/io.html#LimitedReader-类型":{},"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["contentlength",{"_index":8439,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["contentlength&#x5b57;&#x6bb5",{"_index":8831,"title":{},"body":{"standards/net/http.html#Request":{}}}],["contenttyp",{"_index":8512,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["context",{"_index":6128,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#并发和并行":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["context.background",{"_index":7777,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["context.cancelfunc",{"_index":7779,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["context.context",{"_index":7766,"title":{"concurrent/sync_lock.html#context-Context-类型":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["context.context]\\n",{"_index":7771,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["context.withcancel",{"_index":7778,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["context.withcancel(context.background",{"_index":7774,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["context.withvalu",{"_index":7787,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["continu",{"_index":16,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/flow.html":{},"basic/flow.html#for":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["contract",{"_index":2299,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["contrib/ss",{"_index":844,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["control",{"_index":8539,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["convers",{"_index":4846,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{}}}],["cooki",{"_index":8454,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{}}}],["cool",{"_index":1505,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["coordinatewithchan",{"_index":7746,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["coordinatewithcontext",{"_index":7770,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["coordinatewithwaitgroup",{"_index":7751,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["copi",{"_index":1840,"title":{"basic/slice.html#append-和-copy":{},"standards/io/io.html#Copy-和-CopyN-函数":{}},"body":{"basic/slice.html":{},"basic/slice.html#append-和-copy":{},"basic/function.html":{},"basic/function.html#参数":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["copy&#xff0c;&#xff08;&#x4e0d;&#x7ba1;&#x662f;&#x6307;&#x9488;&#xff0c;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x8fd8;&#x662f;&#x5176;&#x4ed6;&#x7c7b;&#x578b;&#xff0c",{"_index":3128,"title":{},"body":{"basic/function.html#参数":{}}}],["copyn",{"_index":6752,"title":{"standards/io/io.html#Copy-和-CopyN-函数":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["copysign(x",{"_index":6063,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["coroutin",{"_index":6151,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["correspond",{"_index":3270,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["cos(x",{"_index":6010,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["cosh(x",{"_index":6012,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["count",{"_index":66,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#重复字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["count[x",{"_index":2389,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["cover",{"_index":3971,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#覆盖率":{}}}],["cover&apo",{"_index":4117,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["coverag",{"_index":4011,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["covermode=count",{"_index":4023,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["coverprofil",{"_index":4021,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["coverprofile=c.out",{"_index":4014,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["cpu",{"_index":2648,"title":{},"body":{"commands/build.html":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/test.html":{},"basic/test.html#基准测试":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#性能分析":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#并发和并行":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-Map":{}}}],["cpu&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x79f0;&#x4e3a",{"_index":4197,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["cpufil",{"_index":2693,"title":{},"body":{"commands/build.html":{}}}],["cpuprofil",{"_index":2692,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["cpuprofile=cpu.out",{"_index":4027,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{}}}],["creat",{"_index":3377,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["crypto/cipher.streamreader/streamwrit",{"_index":6647,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["crypto/rand",{"_index":2117,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["crypto/tls.conn",{"_index":6648,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["csp",{"_index":2850,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["ctof",{"_index":90,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["curhier",{"_index":4760,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{}}}],["current",{"_index":474,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["cut",{"_index":5874,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#修改字符串":{}}}],["cutjjjcut",{"_index":5873,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#修改字符串":{}}}],["cutset",{"_index":5869,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#修改字符串":{}}}],["cxt",{"_index":7772,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["cxt.done",{"_index":7776,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["c、c",{"_index":6148,"title":{},"body":{"concurrent/goroutine.html":{}}}],["c（c",{"_index":5594,"title":{},"body":{"standards/os/filepath.html":{}}}],["d",{"_index":96,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#time":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"standards/time.html#Ticker":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#interface-排序与查找":{}}}],["d%u",{"_index":4560,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["d%x",{"_index":4559,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["d&#xff09",{"_index":3411,"title":{},"body":{"standards/time.html#time":{}}}],["d&#xff09;&#xff1b",{"_index":4721,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["d.\\n",{"_index":9151,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["d:/html/static",{"_index":8722,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#静态站点":{}}}],["d\\n",{"_index":128,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["darwin",{"_index":4042,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["data",{"_index":95,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{}}}],["data,buf[:n",{"_index":6773,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["data.len",{"_index":9118,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["data.less(i",{"_index":9119,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["data/learngo",{"_index":5571,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{}}}],["database/sql",{"_index":4383,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql":{},"standards/database/sql.html#类型":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["day",{"_index":3269,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["db",{"_index":4397,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["db.begin",{"_index":4418,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["db.close",{"_index":4401,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["db.exec",{"_index":4413,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["db.ping",{"_index":4412,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["db.queri",{"_index":4414,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["db.queryrow",{"_index":4416,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["db.setmaxidleconns(3",{"_index":4426,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["db.setmaxidleconns(n",{"_index":4424,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["db.setmaxopenconns(n",{"_index":4423,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["ddl、dml",{"_index":4391,"title":{},"body":{"standards/database/sql.html":{}}}],["deadloc",{"_index":7708,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["deadlock",{"_index":2855,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["debug",{"_index":4073,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["dec",{"_index":3332,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["decod",{"_index":2126,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["decode(",{"_index":5100,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#2-5-3-utf16-包":{}}}],["decoderune(p",{"_index":5097,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{}}}],["deded",{"_index":4629,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["def",{"_index":3632,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["default",{"_index":20,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#命名":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["default:\\n\\t",{"_index":9135,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["defaultclient.get(url",{"_index":8555,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["defaultheapminimum",{"_index":484,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["defaultservemux",{"_index":8595,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{}}}],["defaultservemux.handlefunc",{"_index":8597,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["defaultservemux.handlefunc(pattern",{"_index":8596,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["defaultservemux.servehttp(rw",{"_index":8647,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["defautservemux",{"_index":8614,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["defer",{"_index":10,"title":{"basic/function.html#关键字-defer":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Closer":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"standards/net/http.html":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["definit",{"_index":1953,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["deflat",{"_index":8533,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["deleg",{"_index":8636,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["delet",{"_index":1384,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["delim",{"_index":5352,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["deliv",{"_index":3362,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["delta",{"_index":3356,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["dep",{"_index":812,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["depend",{"_index":2611,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["deploy",{"_index":2545,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["deposit",{"_index":7693,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["deprec",{"_index":6698,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["dessert",{"_index":4004,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["detartr",{"_index":3986,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["determin",{"_index":3265,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["dev/stderr",{"_index":6642,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["dev/stdin",{"_index":6636,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["dev/stdout",{"_index":6639,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["dev_t",{"_index":7219,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["dictionari",{"_index":1392,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["diff",{"_index":2691,"title":{},"body":{"commands/build.html":{}}}],["differ",{"_index":132,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["digit",{"_index":5085,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["dim(x",{"_index":6054,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["dir",{"_index":4757,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#路径的切分和拼接":{}}}],["dir(.ex",{"_index":2684,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["dir+fil",{"_index":5573,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{}}}],["dir.test(.ex",{"_index":2685,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["dir/a",{"_index":5605,"title":{},"body":{"standards/os/filepath.html":{}}}],["directori",{"_index":7144,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#os":{}}}],["dirnam",{"_index":5554,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{}}}],["dirti",{"_index":7798,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["display",{"_index":4018,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["distanc",{"_index":1182,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["doc",{"_index":571,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"theme/theme-usage.html":{},"theme/theme-usage.html#使用文档主题":{},"theme/theme-usage.html#Quick-Start":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["doc.go",{"_index":2700,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["doctyp",{"_index":8709,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["document",{"_index":2560,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["don&#x2019;t",{"_index":2869,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["done",{"_index":7750,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["don’t",{"_index":2847,"title":{},"body":{"concurrent/channel.html":{}}}],["doubl",{"_index":3094,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{}}}],["double(%d",{"_index":3095,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["double(4",{"_index":3097,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["double(x",{"_index":3099,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["download",{"_index":834,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["driver/mysql",{"_index":2712,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/database/sql.html":{},"standards/database/sql.html#sql":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["dsn",{"_index":4404,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["dsn&#xff08;&#x6570;&#x636e;&#x6e90;&#x540d;&#x79f0;&#xff09;&#xff0c;&#x8fd9;&#x4e2a;&#x662f;&#x548c;&#x5177;&#x4f53;&#x9a71;&#x52a8;&#x76f8;&#x5173;&#x7684;&#xff0c",{"_index":4478,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["dst",{"_index":6753,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["dst.readfrom(src",{"_index":6754,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["durat",{"_index":3230,"title":{},"body":{"standards/time.html":{},"standards/time.html#time":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"standards/time.html#Ticker":{}}}],["dwell",{"_index":3992,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["dy",{"_index":3644,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["e",{"_index":1336,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#iota":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/os/os.html":{},"standards/os/os.html#目录与链接":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["e.(net.error",{"_index":8619,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["e.g",{"_index":3330,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["e.text",{"_index":2285,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["e253f1f20942",{"_index":894,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["e5",{"_index":1031,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["e7",{"_index":1028,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["e8",{"_index":1034,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["e\\n",{"_index":4620,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["each",{"_index":3372,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["echo",{"_index":6758,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["ef82de70bb3f",{"_index":885,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["elaps",{"_index":3256,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["elasp",{"_index":3391,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["elba",{"_index":3997,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["elem",{"_index":5577,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{}}}],["element",{"_index":125,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{}}}],["element.(person",{"_index":130,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["empid",{"_index":2300,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["employe",{"_index":1972,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/interface.html":{},"basic/interface.html#接口":{}}}],["employeeofthemonth",{"_index":1971,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["employeeofthemonth.posit",{"_index":1974,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["encod",{"_index":138,"title":{},"body":{"index.html":{},"basic/json.html":{},"basic/json.html#序列化":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{}}}],["encode(",{"_index":5101,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#2-5-3-utf16-包":{}}}],["encoderune(p",{"_index":5098,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{}}}],["encoding&#x201d;&#x3002",{"_index":326,"title":{},"body":{"index.html#编码":{}}}],["encoding/asn1",{"_index":1491,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["encoding/csv.reader/writ",{"_index":6649,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["encoding/json",{"_index":1489,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["encoding/xml",{"_index":1490,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["encount",{"_index":2699,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["end",{"_index":3355,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Seeker":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["end.sub(start",{"_index":3357,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["endindex",{"_index":1834,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{}}}],["enoent",{"_index":7299,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["enter",{"_index":606,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["entir",{"_index":499,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["env",{"_index":2617,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["environ",{"_index":2618,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["eof",{"_index":4754,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["epol",{"_index":6158,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["epoll/kqueue/iocompletionport",{"_index":6149,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["equal",{"_index":3245,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["equival",{"_index":1590,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["er",{"_index":3995,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["erf(x",{"_index":6061,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["erfc(x",{"_index":6062,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["err",{"_index":568,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#赋值":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{},"standards/os/filepath.html#遍历目录":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#WriteString-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["err:eof",{"_index":6620,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Reader":{}}}],["errbufferful",{"_index":5370,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["errbufferfull&#x3002",{"_index":5508,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["errclosedpip",{"_index":6742,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["errinvalid",{"_index":6706,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Closer":{}}}],["errnocooki",{"_index":8459,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["errnoloc",{"_index":8504,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Response":{}}}],["error",{"_index":564,"title":{"basic/error.html#error-类型":{}},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#赋值":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#函数作为参数":{},"basic/function.html#错误":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#文件路径匹配":{},"standards/os/filepath.html#遍历目录":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#WriteString-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["errors.new",{"_index":608,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/function.html":{},"basic/function.html#函数作为参数":{}}}],["errors.new(eof",{"_index":6627,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Reader":{}}}],["errorstr",{"_index":2284,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["errpermiss",{"_index":7262,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["errrang",{"_index":4842,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{}}}],["errserverclos",{"_index":8617,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["errshortbuff",{"_index":6765,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["errsyntax",{"_index":4843,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{}}}],["errunexpectedeof",{"_index":6764,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["es6",{"_index":3059,"title":{},"body":{"basic/function.html":{},"basic/function.html#可变参数":{}}}],["et",{"_index":3998,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["etc/localtim",{"_index":3233,"title":{},"body":{"standards/time.html":{},"standards/time.html#时区":{}}}],["evalsymlink",{"_index":5581,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#符号链接指向的路径名":{}}}],["evil",{"_index":3991,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["exampl",{"_index":5817,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/io/io.html":{},"standards/io/io.html#LimitedReader-类型":{}}}],["exampleispalindrom",{"_index":4032,"title":{},"body":{"basic/test.html":{},"basic/test.html#示例函数":{}}}],["examplenam",{"_index":4031,"title":{},"body":{"basic/test.html":{},"basic/test.html#示例函数":{}}}],["except",{"_index":8677,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["exec",{"_index":4409,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["exit",{"_index":466,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["exp",{"_index":6051,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["exp(x",{"_index":6030,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["exp2(x",{"_index":6031,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["expect",{"_index":602,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["expens",{"_index":2308,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["expir",{"_index":3398,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["expm1(x",{"_index":6032,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["export",{"_index":816,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["express",{"_index":759,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["ext",{"_index":5562,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{}}}],["extra",{"_index":3083,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["f",{"_index":82,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#赋值":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#定时器":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Closer":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#interface-排序与查找":{}}}],["f&#xff0c;&#x4ee5;&#x5f97;&#x5230",{"_index":6104,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["f&#xff0c;&#x5f97;&#x5230",{"_index":6106,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["f(now",{"_index":3373,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["f(w",{"_index":8611,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["f.close",{"_index":3074,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["f.file",{"_index":6707,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Closer":{}}}],["f1",{"_index":4780,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["f58768cc1a7a",{"_index":879,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["f\\n",{"_index":70,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["factor",{"_index":1160,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["fahrenheit",{"_index":85,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["fahrenheit(c",{"_index":91,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["fail",{"_index":1520,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"basic/test.html":{},"basic/test.html#测试":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{}}}],["failed:%v",{"_index":587,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["fallthrough",{"_index":17,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{}}}],["fals",{"_index":110,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体比较":{},"basic/var.html":{},"basic/var.html#变量":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#布尔类型":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{}}}],["false&#x3002",{"_index":4674,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["famili",{"_index":1194,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["fatal",{"_index":2469,"title":{},"body":{"standards/log.html":{},"standards/log.html#分类":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["fatal&#xff0c;&#x5728;&#x6267;&#x884c;&#x5b8c",{"_index":2509,"title":{},"body":{"standards/log.html#分类":{}}}],["favicon",{"_index":2571,"title":{"theme/theme-usage.html#Favicon":{}},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Favicon":{}}}],["fchmod",{"_index":7273,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["fchown",{"_index":7257,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["fd",{"_index":7146,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["fdatasync",{"_index":7196,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["femal",{"_index":1328,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{}}}],["fi",{"_index":7315,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["field",{"_index":2002,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["fifo",{"_index":7175,"title":{},"body":{"standards/os/os.html":{}}}],["fifo、socket",{"_index":7205,"title":{},"body":{"standards/os/os.html":{}}}],["file",{"_index":2614,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{}}}],["file&#xff09;&#x6240;&#x6307;&#x4ee3;&#x6587;&#x4ef6;&#x7684;&#x76f8;&#x5173;&#x4fe1;&#x606f;&#x3002",{"_index":7502,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["file.chmod(filemod",{"_index":7277,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["file.clos",{"_index":6669,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Closer":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{}}}],["file.fd",{"_index":7145,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["file.go",{"_index":7140,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#os":{}}}],["file.seek",{"_index":7200,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["file.stat",{"_index":7213,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["file.sync",{"_index":7194,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["file.trunc",{"_index":7210,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#截断文件":{}}}],["file.writeat",{"_index":6671,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["file.writeat([]byte(golang",{"_index":6674,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["file.writestr",{"_index":6670,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["file.writestring(hello",{"_index":6673,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["fileinfo",{"_index":4761,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{}}}],["fileinfo.mod",{"_index":7281,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["fileinfo.si",{"_index":7245,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["filemod",{"_index":7148,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{}}}],["filenam",{"_index":3072,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["filepath",{"_index":5551,"title":{"standards/os/filepath.html":{},"standards/os/filepath.html#filepath":{}},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#filepath":{},"standards/os/filepath.html#遍历目录":{},"standards/os/filepath.html#Windows-起作用的函数":{}}}],["filepath.errbadpattern",{"_index":5598,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["filepath.evalsymlink",{"_index":5580,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#符号链接指向的路径名":{}}}],["filepath.glob",{"_index":5600,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["filepath.split",{"_index":5575,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{}}}],["filepath.splitlist",{"_index":5578,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{}}}],["filetyp",{"_index":2637,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["filo",{"_index":3101,"title":{},"body":{"basic/function.html":{}}}],["final",{"_index":5368,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["find",{"_index":820,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["findvowel",{"_index":2287,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["finish",{"_index":585,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["first",{"_index":746,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["fix",{"_index":2621,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["fixcount(syscall.readlink(nam",{"_index":7301,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["flag",{"_index":2450,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["float",{"_index":1600,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["float32",{"_index":68,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/data/math.html":{},"standards/data/math.html#类型转化函数":{},"standards/data/math.html#其他函数":{}}}],["float32bits(f",{"_index":6039,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#类型转化函数":{}}}],["float32frombits(b",{"_index":6041,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#类型转化函数":{}}}],["float64",{"_index":84,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/function.html":{},"basic/function.html#函数作为值":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/data/math.html":{},"standards/data/math.html#三角函数":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#特殊函数":{},"standards/data/math.html#类型转化函数":{},"standards/data/math.html#其他函数":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["float64&#x3002",{"_index":4981,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["float64bits(f",{"_index":6042,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#类型转化函数":{}}}],["float64frombits(b",{"_index":6043,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#类型转化函数":{}}}],["float64saresort",{"_index":9168,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["float64slic",{"_index":9164,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["floor(x",{"_index":6046,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["flush",{"_index":5389,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{}}}],["fmt",{"_index":44,"title":{"standards/io/fmt.html":{},"standards/io/fmt.html#fmt-包":{}},"body":{"index.html":{},"index.html#os-Args":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#fmt-包":{},"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["fmt.errorf",{"_index":575,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/interface.html":{},"basic/interface.html#接口":{}}}],["fmt.errorf&#x51fd;&#x6570;&#x4f7f;&#x7528;fmt.sprintf&#x683c;&#x5f0f;&#x5316;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x5e76;&#x8fd4;&#x56d",{"_index":620,"title":{},"body":{"basic/error.html#error-类型":{}}}],["fmt.errorf函数使用fmt.sprintf",{"_index":574,"title":{},"body":{"basic/error.html":{}}}],["fmt.fprintf",{"_index":2694,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["fmt.fprintf(w",{"_index":8423,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#HTTP-Server":{}}}],["fmt.fprintln",{"_index":6629,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Writer":{}}}],["fmt.fprintln(w",{"_index":8713,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["fmt.print",{"_index":7701,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["fmt.print(b1.str",{"_index":3633,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.print(buffer.str",{"_index":3629,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.printf",{"_index":69,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#String-方法":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/slice.html":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/function.html":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#分割字符串":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#interface-排序与查找":{}}}],["fmt.printf(%02d.%02d.%4d\\n",{"_index":3316,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["fmt.printf(vowel",{"_index":2295,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["fmt.println",{"_index":134,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/slice.html":{},"basic/slice.html#切片操作":{},"basic/package.html":{},"basic/package.html#main":{},"basic/interface.html":{},"basic/interface.html#接口":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/time.html":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#重复字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Writer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#client":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#interface-排序与查找":{}}}],["fmt.println(",{"_index":3620,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["fmt.println(&amp;x",{"_index":2384,"title":{},"body":{"basic/var.html":{},"basic/var.html#简短声明":{}}}],["fmt.println(*p",{"_index":1589,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指针":{}}}],["fmt.println(a",{"_index":744,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"basic/constant.html":{},"basic/constant.html#常量":{}}}],["fmt.println(arr.less",{"_index":2023,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["fmt.println(d",{"_index":99,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["fmt.println(err",{"_index":4763,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["fmt.println(field",{"_index":5020,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["fmt.println(field.str",{"_index":5021,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["fmt.println(filepath.evalsymlink",{"_index":5586,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#符号链接指向的路径名":{}}}],["fmt.println(filepath.rel",{"_index":5569,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{}}}],["fmt.println(getsquareroot",{"_index":3063,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为值":{}}}],["fmt.println(goodby",{"_index":3621,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(hello",{"_index":2114,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["fmt.println(i",{"_index":6130,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["fmt.println(info.nam",{"_index":4766,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{}}}],["fmt.println(mapname[key",{"_index":1386,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["fmt.println(n",{"_index":6672,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["fmt.println(newstr",{"_index":5876,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#修改字符串":{}}}],["fmt.println(numbers1",{"_index":1019,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{}}}],["fmt.println(os.args[i",{"_index":47,"title":{},"body":{"index.html":{},"index.html#os-Args":{}}}],["fmt.println(os.readlink",{"_index":5588,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#符号链接指向的路径名":{}}}],["fmt.println(p",{"_index":1986,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体比较":{}}}],["fmt.println(p.distance(q.point",{"_index":1180,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["fmt.println(p.x",{"_index":1983,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体比较":{}}}],["fmt.println(r",{"_index":750,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["fmt.println(rarr.less",{"_index":2024,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["fmt.println(response.statuscod",{"_index":8547,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["fmt.println(sort.searchints(",{"_index":9163,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["fmt.println(strings.compare(str",{"_index":3649,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.contains(str",{"_index":3635,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.hasprefix(str",{"_index":3641,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.hassuffix(str",{"_index":3643,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.index(str",{"_index":3639,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.join",{"_index":5878,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#JOIN":{}}}],["fmt.println(strings.join(strsplit",{"_index":3653,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.replac",{"_index":5845,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#字符串替换":{}}}],["fmt.println(strings.replace(sourcestr",{"_index":3666,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.tolow",{"_index":3659,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.toupp",{"_index":3657,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strsplit",{"_index":3652,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(stud",{"_index":9141,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Reverse":{}}}],["fmt.println(sum",{"_index":3058,"title":{},"body":{"basic/function.html":{},"basic/function.html#可变参数":{}}}],["fmt.println(sum(valu",{"_index":3060,"title":{},"body":{"basic/function.html":{},"basic/function.html#可变参数":{}}}],["fmt.println(t",{"_index":3306,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["fmt.println(t.format",{"_index":3323,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["fmt.println(t.format(time.ans",{"_index":3349,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["fmt.println(t.format(time.rfc822",{"_index":3347,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["fmt.println(t.nam",{"_index":5002,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["fmt.println(t.round",{"_index":3311,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["fmt.println(t.str",{"_index":5000,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["fmt.println(t.trunc",{"_index":3309,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["fmt.println(t2",{"_index":3315,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["fmt.println(ta",{"_index":5010,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["fmt.println(ta.kind",{"_index":5011,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["fmt.println(time.now",{"_index":3341,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["fmt.println(time.now().sub(starttim",{"_index":4872,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{}}}],["fmt.println(time.now().sub(t).hour",{"_index":3293,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["fmt.println(time.unix(stat.atimespec.unix",{"_index":7247,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["fmt.println(titl",{"_index":1533,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["fmt.println(tripl",{"_index":3100,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["fmt.println(unicode.iscontrol(singl",{"_index":5083,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["fmt.println(unicode.isdigit(digit",{"_index":5086,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["fmt.println(unicode.isdigit(lett",{"_index":5089,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["fmt.println(unicode.isnumber(digit",{"_index":5087,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["fmt.println(unicode.isnumber(lett",{"_index":5090,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["fmt.println(v",{"_index":2856,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["fmt.println(v.str",{"_index":5015,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["fmt.println(val",{"_index":5018,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["fmt.println(week_from_now",{"_index":3346,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["fmt.println(x",{"_index":1591,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/package.html":{},"basic/package.html#main":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["fmt.scanf",{"_index":6712,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["fmt.sprintf",{"_index":1198,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["fmt=&#39;b&#39",{"_index":4879,"title":{},"body":{"standards/text/strconv.html":{}}}],["fmt=&apos;b&apo",{"_index":4985,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["fn",{"_index":4854,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["foo",{"_index":5884,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{},"standards/net/http.html":{},"standards/net/http.html#http":{}}}],["foo,bar,baz",{"_index":5897,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["foo.txt",{"_index":2392,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["forcegc",{"_index":461,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["forcetrigg",{"_index":458,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["fork",{"_index":7167,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["form",{"_index":8442,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["format",{"_index":151,"title":{},"body":{"index.html":{},"index.html#编码":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["format&#x3001;hour",{"_index":3463,"title":{},"body":{"standards/time.html#Time":{}}}],["format(layout",{"_index":3320,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["formatbool",{"_index":4876,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{}}}],["formatfloat",{"_index":4877,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["formatint",{"_index":4869,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{}}}],["formatint(i",{"_index":4871,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{}}}],["formatuint",{"_index":4868,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{}}}],["format、hour",{"_index":3251,"title":{},"body":{"standards/time.html":{}}}],["formfil",{"_index":8465,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["formvalu",{"_index":8471,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["found",{"_index":8593,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["four",{"_index":1326,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{},"basic/var.html":{},"basic/var.html#声明一组变量":{}}}],["fprint",{"_index":4523,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{}}}],["fprintf",{"_index":2695,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{}}}],["fprintln",{"_index":4525,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{}}}],["fprintln(os.stdout",{"_index":6630,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Writer":{}}}],["frac",{"_index":6049,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["frag",{"_index":5366,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["fragment",{"_index":5369,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["free",{"_index":463,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["freezingc",{"_index":88,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["frexp(f",{"_index":6050,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["fromslash",{"_index":5608,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#Windows-起作用的函数":{}}}],["front",{"_index":5155,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["fscan",{"_index":4529,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{}}}],["fscanf",{"_index":4536,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{}}}],["fscanln",{"_index":4533,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{}}}],["fstat",{"_index":7214,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["fsync",{"_index":7195,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["ftoc",{"_index":93,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["ftruncat",{"_index":7207,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#截断文件":{}}}],["full",{"_index":5365,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["full[i",{"_index":5373,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["func",{"_index":8,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#os-Args":{},"index.html#命名":{},"index.html#声明":{},"index.html#类型转换":{},"index.html#自定义类型":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组传入函数":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#main":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#简短声明":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/text/unicode.html#utf8-包":{},"standards/text/unicode.html#2-5-3-utf16-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/bufio.html#ReadWriter":{},"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#规整化路径":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#文件路径匹配":{},"standards/os/filepath.html#遍历目录":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#JOIN":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#三角函数":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#特殊函数":{},"standards/data/math.html#类型转化函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#Closer":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#WriteString-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["func(http.handl",{"_index":8707,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["func(http.responsewriter&#xff0c;*http.request",{"_index":9091,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["func(http.responsewriter，*http.request",{"_index":8703,"title":{},"body":{"standards/net/http.html":{}}}],["func(point",{"_index":1660,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["func(responsewrit",{"_index":8608,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["func(valu",{"_index":1654,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["func(w",{"_index":8705,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["function",{"_index":607,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#参数":{},"standards/time.html":{},"standards/time.html#定时器":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/data/container.html":{},"standards/data/container.html#环":{}}}],["g",{"_index":1024,"title":{},"body":{"basic/flow.html":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["g&#x2019;",{"_index":5941,"title":{},"body":{"standards/text/strings.html#计算字符串出现次数":{}}}],["g&#x3002",{"_index":6480,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["g&#x3002;&#x5df2;&#x5b58;&#x5728",{"_index":6273,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["g&#xff08;&#x4e5f;&#x5c31;&#x662f",{"_index":6270,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["g&#xff08;goroutin",{"_index":6233,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["g&#xff0c;&#x4e14;&#x80fd;&#x591f;&#x4f7f;&#x8fd9;&#x4e9b",{"_index":6240,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["g&#xff0c;&#x5207;&#x6362;&#x5230",{"_index":6488,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["g&#xff1b;&#x5982;&#x679c;&#x6b64;&#x65f6;&#x6ca1;&#x6709",{"_index":6579,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["g&#xff1b;&#x5982;&#x679c;&#x6ca1;&#x6709",{"_index":6601,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["g&apos;",{"_index":5940,"title":{},"body":{"standards/text/strings.html#计算字符串出现次数":{}}}],["g'",{"_index":5838,"title":{},"body":{"standards/text/strings.html":{}}}],["g\\n",{"_index":4627,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["gamma(x",{"_index":6065,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["garbag",{"_index":493,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["gbk",{"_index":8529,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["gc",{"_index":440,"title":{"advance/gc.html#何时触发-GC":{}},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"advance/gc.html#何时触发-GC":{},"advance/gc.html#监控":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["gccgo",{"_index":2659,"title":{},"body":{"commands/build.html":{}}}],["gccgoflag",{"_index":2658,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["gccgo还是gc",{"_index":2657,"title":{},"body":{"commands/build.html":{}}}],["gcflag",{"_index":2660,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["gcinit",{"_index":480,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["gcpercent",{"_index":441,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["gcphase",{"_index":477,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["gcshouldstart",{"_index":454,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["gcstart",{"_index":456,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["gcstart(gcbackgroundmod",{"_index":457,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["gcstart(gcforceblockmod",{"_index":501,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["ge",{"_index":8554,"title":{},"body":{"standards/net/http.html":{}}}],["ge&#x8bf7;&#x6c42",{"_index":8910,"title":{},"body":{"standards/net/http.html#client":{}}}],["gener",{"_index":476,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["gensplit",{"_index":5891,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["gensplit(",{"_index":5890,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["genu",{"_index":1195,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["georg",{"_index":5862,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["getarea",{"_index":1154,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["getbodi",{"_index":8438,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["getfilemod",{"_index":7280,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["getfilemode(fil",{"_index":7275,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["getsequ",{"_index":3067,"title":{},"body":{"basic/function.html":{},"basic/function.html#闭包":{}}}],["getsquareroot",{"_index":3061,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为值":{}}}],["gg",{"_index":5840,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{}}}],["gggggggggg",{"_index":5835,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{}}}],["gh",{"_index":2550,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["gid",{"_index":7259,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["gid_t",{"_index":7229,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["git",{"_index":825,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["git@github.com:shipengqi/kubernet",{"_index":2547,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["git@github.com:zalando",{"_index":2522,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["github.com/fsnotify/fsnotifi",{"_index":841,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/gin",{"_index":843,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/go",{"_index":2710,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/database/sql.html":{},"standards/database/sql.html#sql":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["github.com/golang/lint/golint",{"_index":2642,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["github.com/golang/protobuf",{"_index":851,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/json.html":{},"basic/json.html#序列化":{}}}],["github.com/hashicorp/hcl",{"_index":854,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/inconshreveable/mousetrap",{"_index":856,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/json",{"_index":859,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/lexkong/log",{"_index":863,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/magiconair/properti",{"_index":866,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/mattn/go",{"_index":868,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/mitchellh/mapstructur",{"_index":872,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/pelletier/go",{"_index":874,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/satori/go.uuid",{"_index":877,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/afero",{"_index":880,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/cast",{"_index":881,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/cobra",{"_index":883,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/jwalterweatherman",{"_index":886,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/pflag",{"_index":887,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/vip",{"_index":889,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/ugorji/go",{"_index":892,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/willf/pad",{"_index":895,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["give",{"_index":3254,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["given",{"_index":4010,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["glide.lock",{"_index":836,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["glob",{"_index":5596,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["globaloptionshandl",{"_index":8642,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["go",{"_index":2,"title":{"basic/env_config.html":{},"basic/env_config.html#Go-环境配置":{},"basic/env_config.html#Go-Module":{},"basic/test.html#go-test-命令执行的主要测试流程":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#数据类型":{},"index.html#package":{},"index.html#行分隔符":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#类型断言":{},"index.html#编码":{},"advance/mm.html":{},"advance/mm.html#tcmalloc":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/array.html":{},"basic/env_config.html":{},"basic/env_config.html#安装":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#面向对象":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/slice.html":{},"basic/slice.html#怎样估算切片容量的增长":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#包":{},"basic/package.html#包声明":{},"basic/package.html#初始化包":{},"basic/scope.html":{},"basic/scope.html#作用域":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#参数":{},"basic/function.html#函数作为值":{},"basic/function.html#闭包":{},"basic/function.html#错误":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#go-test-命令执行的主要测试流程":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#parallel-标记":{},"basic/test.html#性能分析":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode":{},"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"concurrent/sync_lock.html#sync-Map":{},"concurrent/sync_lock.html#竞争检查器":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{}}}],["go&#x8bed;&#x8a00",{"_index":7076,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["go&#x8bed;&#x8a00;&#x4e2d;&#x6587;&#x7f51",{"_index":7023,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{}}}],["go&#x91c7;&#x7528;&#x4e86",{"_index":6423,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["go.mod",{"_index":837,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["go1.2.1",{"_index":4422,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["go111modul",{"_index":810,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["go111module=on",{"_index":817,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["go11modul",{"_index":815,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["goarch",{"_index":4043,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["gocach",{"_index":4036,"title":{},"body":{"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["gocacheverify=1",{"_index":4039,"title":{},"body":{"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["godebug",{"_index":4038,"title":{},"body":{"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["godoc",{"_index":2704,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["godoc&#x670d;&#x52a1",{"_index":2813,"title":{},"body":{"commands/build.html#工具":{}}}],["goexit",{"_index":6146,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["gofmt",{"_index":2623,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["gogc",{"_index":483,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["gogetenv",{"_index":489,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["goland",{"_index":912,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#开发工具":{}}}],["golang",{"_index":0,"title":{"index.html":{},"index.html#Golang-介绍":{}},"body":{"index.html":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"concurrent/sync_lock.html":{}}}],["golang.org/x/si",{"_index":898,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["golang.org/x/text",{"_index":901,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["golint",{"_index":2643,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["gone",{"_index":7735,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["gonic/gin",{"_index":848,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["goo",{"_index":4041,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["goodby",{"_index":3623,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["gopath",{"_index":802,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{}}}],["gopath/bin",{"_index":2646,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["gopath/pkg",{"_index":2645,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["gopath/pkg/dep",{"_index":813,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["gopath/pkg/mod",{"_index":809,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["gopath/src/cdf",{"_index":823,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["gopher",{"_index":9180,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["gopkg.in/go",{"_index":903,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["gopkg.in/yaml.v2",{"_index":908,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/package.html":{},"basic/package.html#包声明":{}}}],["gopkg.lock",{"_index":835,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["gopl.io/ch3",{"_index":2713,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["goproxy=https://goproxy.io",{"_index":819,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["goptah/src/packages/test",{"_index":2129,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["goroot",{"_index":800,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{},"basic/env_config.html#工作区":{}}}],["goroutin",{"_index":590,"title":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/time.html":{},"standards/time.html#定时器":{},"basic/test.html":{},"basic/test.html#基准测试":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#性能分析":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#共享变量":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#sync-Map":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["goroutine&#x3002",{"_index":6440,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["goroutine&#xff09;&#xff0c;&#x6682;&#x505c;&#x65f6;&#x957f;&#x4e3a",{"_index":3413,"title":{},"body":{"standards/time.html#time":{}}}],["goroutine&#xff0c",{"_index":2977,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["goroutine&#xff0c;&#x5b83;&#x4e0e;&#x6211;&#x4eec;&#x542f;&#x7528;&#x7684;&#x5176;&#x4ed6",{"_index":6222,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["gosch",{"_index":6144,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["gotest文件，由makefil",{"_index":2678,"title":{},"body":{"commands/build.html":{}}}],["goto",{"_index":19,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/flow.html":{},"basic/flow.html#for":{}}}],["go语言数据结构，我们可以选择性地解码json",{"_index":1534,"title":{},"body":{"basic/json.html":{}}}],["group",{"_index":7266,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["grow",{"_index":3672,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["guard",{"_index":7692,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["guessinggam",{"_index":9146,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["gzip",{"_index":8532,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["gzip.newreader&#x5bf9;&#x538b;&#x7f29;&#x7684;&#x8fd4;&#x56de;&#x4fe1;&#x606f;&#x89e3;&#x538b;&#xff08;&#x8003;&#x8651;&#x7f51;&#x7edc;&#x4f20;&#x8f93;&#x91cf;&#xff0c;http",{"_index":8905,"title":{},"body":{"standards/net/http.html#client":{}}}],["gzip.newreader(response.bodi",{"_index":8550,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["gzip.newreader对压缩的返回信息解压（考虑网络传输量，http",{"_index":8549,"title":{},"body":{"standards/net/http.html":{}}}],["g’",{"_index":5842,"title":{},"body":{"standards/text/strings.html":{}}}],["g’、’o",{"_index":3692,"title":{},"body":{"basic/basic_data.html":{}}}],["g（goroutin",{"_index":6132,"title":{},"body":{"concurrent/goroutine.html":{}}}],["h",{"_index":1337,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#iota":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["h&apos;",{"_index":5841,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{}}}],["h'",{"_index":5836,"title":{},"body":{"standards/text/strings.html":{}}}],["h.servehttp(w",{"_index":8653,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["h:i:",{"_index":3296,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["h[i",{"_index":5187,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["h[j",{"_index":5188,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["ha",{"_index":1335,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#iota":{}}}],["hahaha",{"_index":3648,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["hand",{"_index":1506,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["handl",{"_index":8588,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["handlefunc",{"_index":8589,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{}}}],["handler",{"_index":8571,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{}}}],["handler(r",{"_index":8688,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["handler.servehttp(rw",{"_index":8645,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["handlerfunc",{"_index":8606,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{}}}],["handlerfunc(handl",{"_index":8605,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["handlerfunc(myhandl",{"_index":8610,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["hash",{"_index":1369,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["hasprefix",{"_index":5813,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{}}}],["hassuffix",{"_index":5815,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{}}}],["head",{"_index":8507,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{},"standards/net/http.html#中间件-Middleware":{}}}],["header",{"_index":8431,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{}}}],["headermap",{"_index":8487,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["headers&#xff0c;cooki",{"_index":8890,"title":{},"body":{"standards/net/http.html#client":{}}}],["headers，cooki",{"_index":8513,"title":{},"body":{"standards/net/http.html":{}}}],["heap",{"_index":379,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#tcmalloc":{},"advance/mm.html#释放":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/time.html":{},"standards/time.html#定时器":{},"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["heap.fix(pq",{"_index":5218,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["heap.init(&amp;pq",{"_index":5220,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["heap.interfac",{"_index":5185,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["heap.pop(&amp;pq).(*item",{"_index":5223,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["heap.push(&amp;pq",{"_index":5221,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["heap_liv",{"_index":464,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["heapminimum",{"_index":482,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["height",{"_index":3055,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["hello",{"_index":1331,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{},"basic/slice.html":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/package.html":{},"basic/package.html#main":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#HTTP-Server":{}}}],["help",{"_index":2630,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["here",{"_index":2009,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["hexo",{"_index":2518,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#使用文档主题":{},"theme/theme-usage.html#Quick-Start":{}}}],["hey",{"_index":5861,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["hi",{"_index":2865,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["hi]&#x5185;&#x7684;&#x5b57;&#x7b26",{"_index":5751,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["hikerel",{"_index":9129,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["hold",{"_index":5371,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["home/polari",{"_index":5558,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{}}}],["home/polaris/&#xff0c;fil",{"_index":5691,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["home/polaris/learngo",{"_index":5560,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{}}}],["home/polaris/learngo.go",{"_index":5557,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{}}}],["home/polaris/learngo/&#xff0c;fil",{"_index":5692,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["home/polaris/learngo/src/logic/topic.go",{"_index":5570,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{}}}],["home/polaris/learngo/，fil",{"_index":5576,"title":{},"body":{"standards/os/filepath.html":{}}}],["home/polaris/，fil",{"_index":5574,"title":{},"body":{"standards/os/filepath.html":{}}}],["host",{"_index":8441,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["hostnam",{"_index":8602,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["hour",{"_index":3267,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["html",{"_index":577,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["html.node",{"_index":599,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["html.parse(resp.bodi",{"_index":572,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["html=c.out",{"_index":4020,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["http",{"_index":570,"title":{"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#HTTP-Server":{}},"body":{"basic/error.html":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{}}}],["http&#x65b9;&#x6cd5",{"_index":8742,"title":{},"body":{"standards/net/http.html#Request":{}}}],["http.client",{"_index":8508,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["http.cooki",{"_index":8516,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["http.fileserver(http.dir",{"_index":8721,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#静态站点":{}}}],["http.get",{"_index":8426,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{}}}],["http.get(http://example.com",{"_index":8506,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["http.get(url",{"_index":569,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["http.handl",{"_index":8718,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{}}}],["http.handlefunc",{"_index":8424,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#HTTP-Server":{}}}],["http.handler",{"_index":8708,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["http.handlerfunc",{"_index":8599,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{}}}],["http.listenandserv",{"_index":8425,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{}}}],["http.listenandserve(:8080",{"_index":8646,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["http.newrequest",{"_index":8432,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{}}}],["http.newservemux",{"_index":8694,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{}}}],["http.post",{"_index":8428,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{}}}],["http.postform",{"_index":8429,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{}}}],["http.reqeust",{"_index":8706,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["http.request",{"_index":8422,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{}}}],["http.respons",{"_index":8572,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["http.responsewrit",{"_index":8421,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{}}}],["http.server",{"_index":8691,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["http/1.0",{"_index":8435,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["http://example.com",{"_index":8427,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#http":{}}}],["http://localhost&#xff1a;8080/login.do",{"_index":8917,"title":{},"body":{"standards/net/http.html#client":{}}}],["http://localhost:8000/pkg",{"_index":2706,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["http://localhost:8080/login.do",{"_index":8560,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["http://localhost:8082",{"_index":2551,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["http://localhost：8080/login.do",{"_index":8569,"title":{},"body":{"standards/net/http.html":{}}}],["http://www.baidu.com",{"_index":8515,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["http://www.google.com",{"_index":8511,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["http://www.shipengqi.top/kubernet",{"_index":2544,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["http://yoursite.com/blog",{"_index":2542,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["https://github.com/xxx/cdf",{"_index":826,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["hugo",{"_index":5833,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{}}}],["humphrey",{"_index":1501,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["hypot(p",{"_index":6038,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#特殊函数":{}}}],["i&apos;m",{"_index":5936,"title":{},"body":{"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["i'm",{"_index":5826,"title":{},"body":{"standards/text/strings.html":{}}}],["i+j",{"_index":7769,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["i/o",{"_index":4521,"title":{"standards/os/os.html#文件-I-O":{}},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#fmt-包":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["i/o&#x3002;&#x5982;&#x679c;&#x51fa;&#x9519;&#xff0c;&#x9519;&#x8bef;&#x5e95;&#x5c42;&#x7c7b;&#x578b;&#x662f",{"_index":7342,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["iana",{"_index":3242,"title":{},"body":{"standards/time.html":{},"standards/time.html#时区":{}}}],["icon",{"_index":7760,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["icons[nam",{"_index":7764,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["id",{"_index":596,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/env_config.html":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"standards/database/sql.html":{},"standards/database/sql.html#类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{}}}],["id&#xff08;gid&#xff09;&#xff0c;&#x7c4d;&#x6b64;&#x53ef;&#x4ee5;&#x5224;&#x5b9a;&#x6587;&#x4ef6;&#x7684;&#x5c5e;&#x4e3b;&#x548c;&#x5c5e;&#x7ec4;&#x3002;&#x7cfb;&#x7edf;&#x8c03;&#x7528",{"_index":7544,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["id&#xff08;uid&#xff09;&#x548c;&#x7ec4",{"_index":7543,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["ide&#xff1a",{"_index":1004,"title":{},"body":{"basic/env_config.html#开发工具":{}}}],["identity\"]，writ",{"_index":8492,"title":{},"body":{"standards/net/http.html":{}}}],["identity]&#xff0c;writ",{"_index":8833,"title":{},"body":{"standards/net/http.html#Request":{}}}],["idiom",{"_index":1377,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["idl",{"_index":6164,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["id（gid",{"_index":7254,"title":{},"body":{"standards/os/os.html":{}}}],["id（uid",{"_index":7253,"title":{},"body":{"standards/os/os.html":{}}}],["ieee",{"_index":3607,"title":{},"body":{"basic/basic_data.html":{}}}],["if&#x2026;els",{"_index":1039,"title":{},"body":{"basic/flow.html#if":{}}}],["if…els",{"_index":1005,"title":{},"body":{"basic/flow.html":{}}}],["ignor",{"_index":473,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["illeg",{"_index":137,"title":{},"body":{"index.html":{}}}],["ilogb(x",{"_index":6029,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["im",{"_index":4329,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["im).div(ip",{"_index":4336,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["imag",{"_index":2124,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["image.decod",{"_index":2127,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["image.imag",{"_index":7761,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["image.rectangl",{"_index":3053,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["image/color",{"_index":1172,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["image/png",{"_index":2122,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["images/favicon.ico",{"_index":2573,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Favicon":{}}}],["implement",{"_index":8674,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["import",{"_index":7,"title":{"basic/package.html#import":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#os-Args":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/scope.html":{},"basic/scope.html#作用域":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["importpath",{"_index":2638,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["in).add(ip",{"_index":4335,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["in.readrun",{"_index":584,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["incubator/hexo",{"_index":2523,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["index",{"_index":124,"title":{"theme/theme-usage.html#Index":{}},"body":{"index.html":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#切片操作":{},"theme/theme-usage.html":{},"standards/time.html":{},"standards/time.html#定时器":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#interface-排序与查找":{}}}],["index.html",{"_index":2562,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["index.md",{"_index":2552,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Index":{}}}],["index:%.2d\\n",{"_index":5225,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["indirect",{"_index":1674,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["inf(sign",{"_index":6033,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#特殊函数":{}}}],["info",{"_index":2474,"title":{},"body":{"standards/log.html":{},"standards/log.html#Level":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/os/filepath.html":{},"standards/os/filepath.html#遍历目录":{}}}],["info.isdir",{"_index":4764,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{}}}],["info.name(),curhi",{"_index":4768,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{}}}],["infof",{"_index":2475,"title":{},"body":{"standards/log.html":{},"standards/log.html#Level":{}}}],["inform",{"_index":143,"title":{},"body":{"index.html":{},"index.html#编码":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["ingrid",{"_index":1503,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["inherit",{"_index":1184,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["init",{"_index":832,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/package.html":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#堆":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["ino_t",{"_index":7221,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["input",{"_index":3982,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{}}}],["insert",{"_index":4389,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#类型":{}}}],["insertaft",{"_index":5158,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["insertbefor",{"_index":5157,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["instal",{"_index":2626,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["installsuffix",{"_index":2664,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["instanc",{"_index":5829,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["int",{"_index":63,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/scope.html":{},"basic/scope.html#作用域":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"standards/log.html":{},"standards/log.html#Logger":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#性能分析":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/text/unicode.html#utf8-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#特殊函数":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#WriteString-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["int(&amp;x",{"_index":81,"title":{},"body":{"index.html":{}}}],["int/uint",{"_index":4863,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{}}}],["int16",{"_index":3600,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/unicode.html":{},"standards/text/unicode.html#2-5-3-utf16-包":{}}}],["int32",{"_index":487,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["int64",{"_index":75,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"standards/time.html":{},"standards/time.html#time":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["int64(d",{"_index":3385,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["int8",{"_index":1389,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{}}}],["intchan",{"_index":2866,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["integ",{"_index":743,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["interchang",{"_index":144,"title":{},"body":{"index.html":{}}}],["interchange&#x201d;&#x7684;&#x7f29;&#x5199;&#xff0c;&#x4e2d;&#x6587;&#x8bd1;&#x4e3a;&#x7f8e;&#x56fd;&#x4fe1;&#x606f;&#x4ea4;&#x6362;&#x6807;&#x51c6;&#x4ee3;&#x7801;&#x3002",{"_index":328,"title":{},"body":{"index.html#编码":{}}}],["interfac",{"_index":12,"title":{"standards/data/sort.html#interface-排序与查找":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/map.html":{},"basic/map.html#map":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"concurrent/sync_lock.html#sync-Map":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#interface-排序与查找":{}}}],["intern",{"_index":2707,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["interpret",{"_index":3272,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["intheap",{"_index":5186,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["intset",{"_index":1185,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#封装":{}}}],["intslic",{"_index":9152,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["invalid",{"_index":100,"title":{},"body":{"index.html":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#函数作为参数":{}}}],["io",{"_index":580,"title":{"standards/io/io.html":{},"standards/io/io.html#io":{}},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"standards/log.html":{},"standards/log.html#Logger":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ioutil":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html":{},"standards/io/io.html#io":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["io&#x3002",{"_index":2485,"title":{},"body":{"standards/log.html#Logger":{}}}],["io&#x3002;&#x63d0;&#x4f9b;&#x4e86;&#x6570;&#x636e;&#x7f13;&#x51b2;&#x529f;&#x80fd;&#xff0c;&#x80fd;&#x591f;&#x4e00;&#x5b9a;&#x7a0b;&#x5ea6;&#x51cf;&#x5c11;&#x5927;&#x5757;&#x6570;&#x636e;&#x8bfb;&#x5199;&#x5e26;&#x6765;&#x7684;&#x5f00;&#x9500;&#x3002;&#x5c01;&#x88c5;&#x4e86",{"_index":5397,"title":{},"body":{"standards/io/bufio.html#bufio":{}}}],["io.byteread",{"_index":6710,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["io.bytewrit",{"_index":6711,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["io.clos",{"_index":6739,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["io.copy(os.stdout",{"_index":6756,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["io.copyn(os.stdout",{"_index":6760,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["io.eof",{"_index":581,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#目录与链接":{}}}],["io.multireader(read",{"_index":6772,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["io.multiwriter(writ",{"_index":6775,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["io.pip",{"_index":6743,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["io.piperead",{"_index":6749,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["io.pipewrit",{"_index":6746,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["io.read",{"_index":4530,"title":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{}}}],["io.readclos",{"_index":4745,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["io.reader/io.writ",{"_index":6632,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["io.readerfrom",{"_index":5390,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{}}}],["io.seekcurr",{"_index":6700,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["io.seekend",{"_index":6693,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["io.seekstart",{"_index":6699,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["io.teereader(strings.newread",{"_index":6779,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#TeeReader-函数":{}}}],["io.writ",{"_index":2449,"title":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}},"body":{"standards/log.html":{},"standards/log.html#Logger":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#性能分析":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["io/ioutil",{"_index":8563,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["iota",{"_index":1334,"title":{"basic/constant.html#iota":{}},"body":{"basic/constant.html":{},"basic/constant.html#iota":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["ioutil",{"_index":3070,"title":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ioutil":{}},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ioutil":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["ioutil.nopclos",{"_index":4749,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{}}}],["ioutil.nopcloser(bodi",{"_index":4752,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{}}}],["ioutil.readall(bodi",{"_index":8552,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["ioutil.readall(resp.bodi",{"_index":8562,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["ioutil.readall(response.bodi",{"_index":8556,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["ioutil.readdir",{"_index":7316,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["ioutil.readdir(path",{"_index":4762,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{}}}],["ioutil.readfil",{"_index":6682,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["ioutil.tempdir",{"_index":4779,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["ioutil.tempfil",{"_index":4781,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["ip",{"_index":4333,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["ip.mul(im",{"_index":4334,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["iphon",{"_index":2273,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["ipsum",{"_index":2555,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#添加文档":{}}}],["isab",{"_index":5564,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{}}}],["isatti",{"_index":869,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["iscontrol(r",{"_index":5067,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["isdigit(r",{"_index":5068,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["isdir",{"_index":7185,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{}}}],["isgraphic(r",{"_index":5069,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["isinf(f",{"_index":6034,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#特殊函数":{}}}],["isletter(r",{"_index":5070,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["islower(r",{"_index":5071,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["ismark(r",{"_index":5072,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["isnan",{"_index":9170,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["isnan(f",{"_index":6037,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#特殊函数":{}}}],["isnan(p[i",{"_index":9165,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["isnan(p[j",{"_index":9166,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["isnumber(r",{"_index":5073,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["isoneof(rang",{"_index":5074,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["ispalindrom",{"_index":4033,"title":{},"body":{"basic/test.html":{},"basic/test.html#示例函数":{}}}],["ispalindrome(%q",{"_index":4008,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["ispalindrome(test.input",{"_index":4006,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["ispermiss",{"_index":7261,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["isprefix",{"_index":5376,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["isprint(r",{"_index":5075,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["ispunct(r",{"_index":5076,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["isregular",{"_index":7186,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["isremberpwd",{"_index":8568,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["issort",{"_index":9117,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["isspace(r",{"_index":5077,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["issymbol(r",{"_index":5078,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["istitle(r",{"_index":5079,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["isupper(r",{"_index":5080,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["iszero",{"_index":3250,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["item",{"_index":5204,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["item.index",{"_index":5214,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["item.prior",{"_index":5217,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["item.valu",{"_index":5216,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["iterator/go",{"_index":860,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["itoa",{"_index":4870,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{}}}],["ivress",{"_index":4001,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["j",{"_index":1338,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#iota":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["j0(x",{"_index":6055,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["j1(x",{"_index":6056,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["jacquelin",{"_index":1515,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["jan",{"_index":3298,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["januari",{"_index":3248,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["jason",{"_index":1673,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["java&#xff0c;python&#xff0c;javascript",{"_index":1704,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["javascript",{"_index":1153,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["java，python，javascript",{"_index":1597,"title":{},"body":{"basic/pointer.html":{}}}],["jj",{"_index":2303,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["jjj",{"_index":5877,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#修改字符串":{}}}],["jn(n",{"_index":6057,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["join",{"_index":3625,"title":{"standards/text/strings.html#JOIN":{}},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/text/strings.html":{},"standards/text/strings.html#JOIN":{}}}],["js",{"_index":78,"title":{},"body":{"index.html":{},"concurrent/goroutine.html":{}}}],["js&#x3002",{"_index":6347,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["json",{"_index":1485,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["json.decod",{"_index":1535,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.encod",{"_index":1536,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.marsh",{"_index":1492,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.marshal(movi",{"_index":1517,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.marshalind",{"_index":1521,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.marshalindent(movi",{"_index":1522,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.unmarsh",{"_index":1529,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.unmarshal(data",{"_index":1530,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json:\"color,omitempti",{"_index":1497,"title":{},"body":{"basic/json.html":{}}}],["json:\"releas",{"_index":1496,"title":{},"body":{"basic/json.html":{}}}],["json:color,omitempti",{"_index":1548,"title":{},"body":{"basic/json.html#序列化":{}}}],["json:releas",{"_index":1547,"title":{},"body":{"basic/json.html#序列化":{}}}],["jul",{"_index":3325,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["k",{"_index":1339,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#iota":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/text/strings.html":{},"standards/text/strings.html#字符串替换":{},"concurrent/sync_lock.html":{}}}],["k&#xff09;&#x7684;&#x53ef;&#x80fd;&#x6027;&#x3002",{"_index":7871,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["kayak",{"_index":3985,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["kb",{"_index":4066,"title":{},"body":{"basic/test.html":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{}}}],["kb&#xff0c;&#x4e5f;&#x5c31;&#x662f",{"_index":4269,"title":{},"body":{"basic/test.html#性能分析":{}}}],["keep",{"_index":8542,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["key",{"_index":1014,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/map.html":{},"basic/map.html#map":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["key&#x3002",{"_index":3474,"title":{},"body":{"standards/time.html#Time":{}}}],["key/valu",{"_index":1368,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["key1",{"_index":1371,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["key2",{"_index":1373,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["key:valu",{"_index":1525,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["keyfil",{"_index":8581,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["keyn",{"_index":1958,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["kind",{"_index":5004,"title":{},"body":{"basic/reflect.html":{}}}],["kind&#xff0c;&#x524d;&#x8005;&#x8868;&#x793a;&#x771f;&#x5b9e;&#x7c7b;&#x578b;&#xff08;&#x9759;&#x6001;&#x7c7b;&#x578b;&#xff09;&#xff0c;&#x540e;&#x8005;&#x8868;&#x793a;&#x5e95;&#x5c42;&#x7c7b;&#x578b",{"_index":5033,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["kingdom",{"_index":1190,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["known",{"_index":8675,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["kubernet",{"_index":2527,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["ky",{"_index":5847,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#字符串替换":{}}}],["l",{"_index":1340,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#包":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["l.accept",{"_index":8615,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["label",{"_index":2564,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["languag",{"_index":8535,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["last",{"_index":747,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"standards/database/sql.html":{},"standards/database/sql.html#类型":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["lastbyt",{"_index":5346,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["lastindex",{"_index":5824,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["lastrunes",{"_index":5347,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["latinoffset",{"_index":5053,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["lchown",{"_index":7256,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["ldata",{"_index":2459,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["ldate",{"_index":2453,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["ldexp(frac",{"_index":6068,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["ldflag",{"_index":2666,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["leao",{"_index":9133,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["learn",{"_index":2528,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["learn.git",{"_index":2548,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["learngo",{"_index":5561,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#路径的切分和拼接":{}}}],["learngo.go",{"_index":5559,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{}}}],["learngo.txt",{"_index":5583,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#符号链接指向的路径名":{}}}],["learngo.txt.2",{"_index":5585,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#符号链接指向的路径名":{}}}],["left",{"_index":1981,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/var.html":{},"basic/var.html#简短声明":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["len",{"_index":46,"title":{"basic/slice.html#len-和-cap":{}},"body":{"index.html":{},"index.html#os-Args":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#len-和-cap":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/scope.html":{},"basic/scope.html#作用域":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{},"standards/os/os.html":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["len(",{"_index":1846,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["len(b",{"_index":7190,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["len(buf",{"_index":6766,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["len(p",{"_index":6618,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["len=%d",{"_index":1849,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["len=2",{"_index":1853,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["len=3",{"_index":1858,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["length",{"_index":3678,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["less",{"_index":2012,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["less(i",{"_index":2010,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{}}}],["less(i&#xff0c;j",{"_index":9300,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["less(i，j",{"_index":9177,"title":{},"body":{"standards/data/sort.html":{}}}],["letter",{"_index":5088,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["level",{"_index":2473,"title":{"standards/log.html#Level":{}},"body":{"standards/log.html":{}}}],["lewd",{"_index":3993,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["lgamma",{"_index":6067,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["lgamma(x",{"_index":6066,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["libevent/libev",{"_index":6150,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["librari",{"_index":29,"title":{},"body":{"index.html":{},"index.html#package":{},"basic/package.html":{},"basic/package.html#包":{},"basic/package.html#main":{}}}],["limit",{"_index":6728,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#SectionReader-类型":{}}}],["limitedread",{"_index":6653,"title":{"standards/io/io.html#LimitedReader-类型":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#LimitedReader-类型":{}}}],["limitread",{"_index":6733,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#LimitedReader-类型":{}}}],["limitreader.n",{"_index":6736,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#LimitedReader-类型":{}}}],["limitreader.read(tmp",{"_index":6737,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#LimitedReader-类型":{}}}],["line",{"_index":5353,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["line:%s\\n",{"_index":5357,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["line:hello",{"_index":5358,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["line:world",{"_index":5359,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["link",{"_index":2561,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["linkerror",{"_index":7293,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["linux",{"_index":806,"title":{},"body":{"basic/env_config.html":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["linux&#x3001;macos&#x3001;window",{"_index":7318,"title":{},"body":{"standards/os/os.html#os":{}}}],["linux、macos、window",{"_index":7139,"title":{},"body":{"standards/os/os.html":{}}}],["list",{"_index":126,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/package.html":{},"basic/package.html#包":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{}}}],["list&#39",{"_index":2653,"title":{},"body":{"commands/build.html":{}}}],["list&#x7684;&#x56db;&#x79cd;&#x65b9;&#x6cd5",{"_index":5241,"title":{},"body":{"standards/data/container.html#链表":{}}}],["list&apo",{"_index":2749,"title":{},"body":{"commands/build.html#工具":{}}}],["list.front",{"_index":5165,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["list.front().next",{"_index":5166,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["list.len",{"_index":5164,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["list.new",{"_index":5162,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["list.pushback",{"_index":5163,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["list:(*list.list",{"_index":5171,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["list[%d",{"_index":127,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["listal",{"_index":4759,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{}}}],["listall(dir",{"_index":4758,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{}}}],["listall(path",{"_index":4767,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{}}}],["listen",{"_index":8582,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{}}}],["listenandserv",{"_index":8577,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["listenandservetl",{"_index":8580,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["liteid",{"_index":910,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#开发工具":{}}}],["live",{"_index":3994,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["llo",{"_index":6663,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["llongfil",{"_index":2456,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["lo",{"_index":5595,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["load",{"_index":7738,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["loadiconsonc",{"_index":7759,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["loadiconsonce.do(loadicon",{"_index":7763,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["loadloc",{"_index":3241,"title":{},"body":{"standards/time.html":{},"standards/time.html#时区":{}}}],["loadlocation(tz",{"_index":3240,"title":{},"body":{"standards/time.html":{},"standards/time.html#时区":{}}}],["loadzonefil",{"_index":3237,"title":{},"body":{"standards/time.html":{},"standards/time.html#时区":{}}}],["loc",{"_index":3264,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["local",{"_index":3232,"title":{},"body":{"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{}}}],["localloc",{"_index":3238,"title":{},"body":{"standards/time.html":{},"standards/time.html#时区":{}}}],["localloc.nam",{"_index":3239,"title":{},"body":{"standards/time.html":{},"standards/time.html#时区":{}}}],["local、utc",{"_index":3252,"title":{},"body":{"standards/time.html":{}}}],["locat",{"_index":3231,"title":{},"body":{"standards/time.html":{},"standards/time.html#time":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/net/http.html":{},"standards/net/http.html#Response":{}}}],["lock",{"_index":1383,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["lock.lock",{"_index":7719,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["lock.rlock",{"_index":7718,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["lock.runlock",{"_index":7725,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["lock.unlock",{"_index":7721,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["log",{"_index":2444,"title":{"standards/log.html":{},"standards/log.html#log":{}},"body":{"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#分类":{},"standards/log.html#Level":{},"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["log(1",{"_index":6027,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["log(x",{"_index":6023,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["log.fat",{"_index":7274,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["log.fatal(err",{"_index":7142,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件属性":{}}}],["log.fatalf",{"_index":1518,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["log.go:11",{"_index":2468,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["log.lshortfil",{"_index":2464,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{},"standards/log.html#Level":{}}}],["log.lstdflag",{"_index":2463,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["log.new(os.stdout",{"_index":2462,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{},"standards/log.html#Level":{}}}],["log.print",{"_index":2445,"title":{},"body":{"standards/log.html":{},"standards/log.html#log":{}}}],["log.printf",{"_index":3092,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["log.println",{"_index":7276,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["log10(x",{"_index":6024,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["log1p(x",{"_index":6026,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["log2(x",{"_index":6025,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["log]22019/09/12",{"_index":2466,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["logb(x",{"_index":6028,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["logger",{"_index":2448,"title":{"standards/log.html#Logger":{}},"body":{"standards/log.html":{},"standards/log.html#Logger":{},"standards/log.html#Level":{}}}],["logger.print",{"_index":2465,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["logger.print(info",{"_index":2476,"title":{},"body":{"standards/log.html":{},"standards/log.html#Level":{}}}],["logginghandl",{"_index":8716,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["logginghandler(http.handlerfunc(index",{"_index":8719,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["logo",{"_index":2559,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["longcalcul",{"_index":3354,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["look",{"_index":5363,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["lookup",{"_index":3078,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/test.html":{},"basic/test.html#性能分析":{}}}],["loop",{"_index":1020,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{}}}],["lorem",{"_index":2554,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#添加文档":{}}}],["lot",{"_index":3085,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["lower",{"_index":5863,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["lowercas",{"_index":5866,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["ls",{"_index":7270,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["lseek",{"_index":7204,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["lshortfil",{"_index":2457,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["lstat",{"_index":7212,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{}}}],["lstdflag",{"_index":2461,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["ltime",{"_index":2454,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["luke",{"_index":1507,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["lutc",{"_index":2458,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["m",{"_index":1390,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["m&#x3001;g&#x3001;p&#x3002",{"_index":6232,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m&#x3002",{"_index":6605,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m&#xff08;machin",{"_index":6249,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m&#xff0c;&#x4f46;&#x4ecd;&#x7136;&#x6709;&#x5176;&#x4ed6",{"_index":6602,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m&#xff0c;&#x5219",{"_index":6599,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m&#xff0c;&#x5982;&#x6b64;&#x53cd;&#x590d;&#x3002;m",{"_index":6493,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m[\"titl",{"_index":1675,"title":{},"body":{"basic/pointer.html":{}}}],["m[key",{"_index":2393,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{},"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["m[titl",{"_index":1762,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["mailbox",{"_index":7711,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["main",{"_index":27,"title":{"basic/package.html#main":{}},"body":{"index.html":{},"index.html#三种文件":{},"index.html#package":{},"index.html#os-Args":{},"index.html#声明":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#main":{},"basic/package.html#包声明":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#简短声明":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#函数作为值":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#性能分析":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["main.go",{"_index":6759,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["main.main",{"_index":592,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{}}}],["main.us",{"_index":4607,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["main.usernam",{"_index":4606,"title":{},"body":{"standards/io/fmt.html":{}}}],["main.user{nam",{"_index":4728,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["main.websit",{"_index":4547,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["main.website{name:studygolang}%t",{"_index":4545,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["mainfile(.ex",{"_index":2686,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["mainfile.go",{"_index":2687,"title":{},"body":{"commands/build.html":{}}}],["mainfile.go&#x4ea7;&#x751f",{"_index":2779,"title":{},"body":{"commands/build.html#工具":{}}}],["major",{"_index":8482,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["make",{"_index":58,"title":{"index.html#make-和-new":{}},"body":{"index.html":{},"index.html#make-和-new":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/slice.html#长度和容量":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{},"standards/os/os.html":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["make(map[string]str",{"_index":1671,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["male",{"_index":1329,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{}}}],["malloc",{"_index":462,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["mallocgc",{"_index":443,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["man",{"_index":3987,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["manag",{"_index":839,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["mannag",{"_index":824,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["manyg",{"_index":5834,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{}}}],["map",{"_index":24,"title":{"basic/map.html":{},"basic/map.html#map":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#make-和-new":{},"basic/map.html":{},"basic/map.html#map":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/var.html#赋值":{},"basic/function.html":{},"basic/function.html#参数":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#sync-Map":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["map[string]muxentri",{"_index":8607,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["map[string]str",{"_index":1391,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["mapnam",{"_index":1385,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["marc",{"_index":5827,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["mark",{"_index":5154,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["markdown",{"_index":2553,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#添加文档":{}}}],["marshal",{"_index":1519,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["match",{"_index":5590,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["math",{"_index":4319,"title":{"standards/data/math.html":{},"standards/data/math.html#math":{}},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/data/math.html":{},"standards/data/math.html#math":{},"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["math.isnan",{"_index":9171,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["math.maxfloat32",{"_index":3609,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["math.maxfloat64",{"_index":3611,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["math.maxint64",{"_index":4340,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["math.sqrt(x",{"_index":3062,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为值":{}}}],["math/big",{"_index":4327,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["math/cmplx",{"_index":3616,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["math/rand",{"_index":2116,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["max",{"_index":3048,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{},"standards/io/io.html":{},"standards/io/io.html#LimitedReader-类型":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"standards/net/http.html":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["max(x",{"_index":6052,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["maxbytesread",{"_index":8476,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["maxidleconn",{"_index":4425,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["maxmemeri",{"_index":8478,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["maxmemori",{"_index":8480,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["maxsmalls",{"_index":444,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["mb",{"_index":8477,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["mcqueen",{"_index":1514,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["mean",{"_index":67,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"standards/time.html":{},"standards/time.html#Time":{}}}],["member",{"_index":1952,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["memori",{"_index":2849,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["memprofile=mem.out",{"_index":4029,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{}}}],["memstats.enablegc",{"_index":478,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["memstats.gc_trigg",{"_index":460,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["memstats.heap_l",{"_index":459,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["met",{"_index":470,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["method",{"_index":1152,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["method(point",{"_index":1666,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["method(valu",{"_index":1664,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["method：printmethodpointer）的接收者（receiver：*mypoint",{"_index":1651,"title":{},"body":{"basic/pointer.html":{}}}],["mian",{"_index":2113,"title":{},"body":{"basic/package.html":{},"basic/package.html#main":{}}}],["microsecond",{"_index":2455,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["middlewar",{"_index":8704,"title":{"standards/net/http.html#中间件-Middleware":{}},"body":{"standards/net/http.html":{}}}],["middlewarehandl",{"_index":8714,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["mime",{"_index":8472,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["mime/multipart.part",{"_index":6650,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["min",{"_index":6763,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["min(x",{"_index":6053,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["minor",{"_index":8483,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["minut",{"_index":3266,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["mismatch",{"_index":102,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["mistak",{"_index":2629,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["mkdir",{"_index":7303,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["mobil",{"_index":8566,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["mobile=xxxxxxxxxx&amp;isremberpwd=1",{"_index":8561,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["mod",{"_index":814,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["mod(x",{"_index":6047,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["mode",{"_index":2636,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["mode().isdir",{"_index":7216,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["mode_t",{"_index":7223,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["modeappend",{"_index":7169,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modechardevic",{"_index":7179,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modedevic",{"_index":7173,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modedir",{"_index":7168,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modeexclus",{"_index":7170,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modenamedpip",{"_index":7174,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modeperm",{"_index":7182,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modesetgid",{"_index":7178,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modesetuid",{"_index":7177,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modesocket",{"_index":7176,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modesticki",{"_index":7180,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modesymlink",{"_index":7172,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modetemporari",{"_index":7171,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modetyp",{"_index":7181,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["modf(f",{"_index":6048,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["modifi",{"_index":3106,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["modifyarray",{"_index":3108,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["modifyarray(array1",{"_index":3105,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["modtim",{"_index":7215,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["modul",{"_index":28,"title":{"basic/env_config.html#Go-Module":{}},"body":{"index.html":{},"index.html#package":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/package.html":{},"basic/package.html#包":{},"basic/package.html#main":{}}}],["module&#x3002;&#x8fd9;&#x662f;&#x5b98;&#x65b9;&#x63d0;&#x5021;&#x7684;&#x65b0;&#x7684;&#x5305;&#x7ba1;&#x7406;&#xff0c;&#x4e43;&#x81f3;&#x9879;&#x76ee;&#x7ba1;&#x7406;&#x673a;&#x5236;&#xff0c;&#x53ef;&#x4ee5;&#x4e0d;&#x518d;&#x9700;&#x8981",{"_index":957,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["mon",{"_index":3297,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["month",{"_index":3268,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["moo",{"_index":5848,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#字符串替换":{}}}],["more",{"_index":2631,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["move",{"_index":5151,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{}}}],["moveaft",{"_index":5148,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["movebefor",{"_index":5147,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["movetoback",{"_index":5150,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["movetofront",{"_index":5149,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["movi",{"_index":1494,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["mrand",{"_index":2118,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["ms",{"_index":2289,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["msg",{"_index":3090,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["msg,time.since(start",{"_index":3093,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["msi",{"_index":796,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{}}}],["mst",{"_index":3299,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["mt.println",{"_index":757,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["mtime",{"_index":7250,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["mu",{"_index":3076,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mu.lock",{"_index":3079,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["mu.rlock",{"_index":7698,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["mu.runlock",{"_index":7699,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["mu.unlock",{"_index":3080,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["mul",{"_index":4326,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["multipart",{"_index":8445,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["multipart.fil",{"_index":8468,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["multipart.filehead",{"_index":8469,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["multipart.read",{"_index":8475,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["multipartform",{"_index":8444,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["multipartread",{"_index":8474,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["multipl",{"_index":603,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["multiplex",{"_index":8598,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["multiread",{"_index":6768,"title":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["multiwrit",{"_index":6769,"title":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["mutex",{"_index":1171,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/map.html":{},"basic/map.html#map":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["mutilread",{"_index":6770,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["mux",{"_index":8587,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{}}}],["mux&#xff0c;&#x5c31;&#x9700;&#x8981;&#x5b9e;&#x73b0",{"_index":9031,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["mux.handl",{"_index":8609,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{}}}],["mux.handle(pattern",{"_index":8604,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mux.handlefunc",{"_index":8695,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mux.handler(host",{"_index":8671,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mux.handler(r",{"_index":8652,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mux.handler(r.host",{"_index":8665,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mux.host",{"_index":8684,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mux.match(host",{"_index":8685,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mux.match(path",{"_index":8686,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mux.mu.rlock",{"_index":8678,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mux.mu.runlock",{"_index":8679,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mux.redirecttopathslash(host",{"_index":8670,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["mux.redirecttopathslash(r.url.host",{"_index":8660,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["muxentri",{"_index":8600,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["myhandl",{"_index":8420,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#HTTP-Server":{}}}],["mypoint",{"_index":1643,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["mysql",{"_index":4385,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["mystr",{"_index":2288,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["m、g、p",{"_index":6131,"title":{},"body":{"concurrent/goroutine.html":{}}}],["m（machin",{"_index":6134,"title":{},"body":{"concurrent/goroutine.html":{}}}],["m，如此反复。m",{"_index":6155,"title":{},"body":{"concurrent/goroutine.html":{}}}],["n",{"_index":490,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/log.html":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/text/strings.html":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#WriteString-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#目录与链接":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#interface-排序与查找":{}}}],["n&#x3002;&#x5982;&#x679c",{"_index":5504,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["n&#x547d;&#x4ee4;&#x6765;&#x9a8c;&#x8bc1",{"_index":2757,"title":{},"body":{"commands/build.html#工具":{}}}],["n&#x7684;&#x7ed3;&#x679c;&#x7c7b;&#x4f3c;&#xff0c;&#x53ea;&#x662f;&#x8fd9;&#x4e2a;&#x4f1a;&#x6267;&#x884c",{"_index":2747,"title":{},"body":{"commands/build.html#工具":{}}}],["n&#xff0c;&#x8fd9;&#x65f6;&#x8fd4;&#x56de;&#x7684",{"_index":5502,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["n,buf",{"_index":6751,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["n0",{"_index":7313,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["n:0",{"_index":6619,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Reader":{}}}],["n=0",{"_index":7314,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["na",{"_index":5854,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#重复字符串":{}}}],["name",{"_index":1672,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/package.html":{},"basic/package.html#点操作":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["name.findvowel",{"_index":2296,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["name=xxx",{"_index":5879,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#JOIN":{}}}],["name=xxx&amp;age=xx",{"_index":5881,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#JOIN":{}}}],["nan",{"_index":6036,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#特殊函数":{}}}],["nanosec",{"_index":3343,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["nanosecond",{"_index":3260,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["natur",{"_index":2853,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["navig",{"_index":2570,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["navigation.yaml",{"_index":2558,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["ne",{"_index":8618,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["ne.temporari",{"_index":8620,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["necessari",{"_index":2008,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["needzero",{"_index":450,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["neg",{"_index":3259,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["net.listen",{"_index":8583,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["net/conn",{"_index":6651,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["net/http",{"_index":2709,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#静态站点":{}}}],["net/http/internal/chunk",{"_index":2708,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["net/http/pprof",{"_index":4058,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["net/url",{"_index":8564,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["netpol",{"_index":6160,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["network",{"_index":6161,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["new",{"_index":59,"title":{"index.html#make-和-new":{}},"body":{"index.html":{},"index.html#make-和-new":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#简短声明":{},"standards/log.html":{},"standards/log.html#Logger":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#字符串替换":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["newch",{"_index":6715,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["newfil",{"_index":6634,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["newman",{"_index":1510,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["newmap[key",{"_index":1016,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{}}}],["newnam",{"_index":7292,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["newpath",{"_index":7297,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["newread",{"_index":5341,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["newreaders",{"_index":5343,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["newreadwrit",{"_index":5395,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#ReadWriter":{}}}],["newrequest",{"_index":4746,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["newsectionread",{"_index":6727,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#SectionReader-类型":{}}}],["newservemux",{"_index":8586,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{}}}],["newstr",{"_index":3664,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/text/strings.html":{},"standards/text/strings.html#修改字符串":{}}}],["newticker(d",{"_index":3403,"title":{},"body":{"standards/time.html":{},"standards/time.html#Ticker":{}}}],["newtim",{"_index":3364,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["newwrit",{"_index":5386,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{}}}],["newwriters",{"_index":5387,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{}}}],["next",{"_index":3687,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["next.servehttp(w",{"_index":8715,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["next_gc",{"_index":442,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"advance/gc.html#监控":{}}}],["nextafter(x",{"_index":6069,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["nextafter32(x",{"_index":6070,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["nil",{"_index":565,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#变量":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#函数作为参数":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-Map":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/net/http.html#静态站点":{}}}],["nil&#xff08;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x5339;&#x914d;&#x7684;&#x6587;&#x4ef6;&#xff09;&#x3002",{"_index":5761,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["nil&#xff09",{"_index":7512,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["nil&#xff0c;&#x5c06;&#x5047;&#x8bbe;&#x8bf7",{"_index":8863,"title":{},"body":{"standards/net/http.html#Response":{}}}],["nil&#xff1b",{"_index":7659,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["nlen(b",{"_index":7191,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["nlink_t",{"_index":7225,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["nn",{"_index":5392,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{}}}],["node",{"_index":7287,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["node_modules/hexo",{"_index":2541,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["nokia",{"_index":2272,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["nokiaphon",{"_index":2271,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["non",{"_index":566,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{}}}],["nopclos",{"_index":4744,"title":{"standards/io/ioutil.html#NopCloser-函数":{}},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{}}}],["not&#xff09",{"_index":1809,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["note",{"_index":2006,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["notfoundhandl",{"_index":8687,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["now",{"_index":3273,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["ns/op",{"_index":4048,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["nsec",{"_index":3258,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["num",{"_index":4851,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["num1",{"_index":3049,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["num2",{"_index":3050,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["number",{"_index":1843,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["number2",{"_index":1848,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["number2),number2",{"_index":1852,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["number3",{"_index":1856,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["number3),number3",{"_index":1857,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["numbers1",{"_index":1017,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["numbers1[i",{"_index":1018,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{}}}],["numbers[1:4",{"_index":1844,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["numbers[4",{"_index":1847,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["numbers[:3",{"_index":1845,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["numbers[one]=11",{"_index":1378,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["numerror",{"_index":4844,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{}}}],["nworld",{"_index":5355,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["o",{"_index":1026,"title":{},"body":{"basic/flow.html":{},"basic/interface.html":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/test.html":{},"basic/test.html#测试":{}}}],["o&apos;higgin",{"_index":5994,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["o'higgin",{"_index":5904,"title":{},"body":{"standards/text/strings.html":{}}}],["o\\n",{"_index":4612,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["o_append",{"_index":7156,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["o_creat",{"_index":7158,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["o_excl",{"_index":7160,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["o_rdonli",{"_index":7149,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["o_rdwr",{"_index":7154,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["o_rdwr|o_create|o_trunc",{"_index":7189,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["o_sync",{"_index":7162,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["o_trunc",{"_index":7164,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["o_wronli",{"_index":7152,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["object",{"_index":374,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#内存块":{},"advance/mm.html#tcmalloc":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["object&#x6587;&#x4ef6;&#xff0c;&#x7531;makefiles&#x9057;&#x7559",{"_index":2775,"title":{},"body":{"commands/build.html#工具":{}}}],["object文件，由makefil",{"_index":2683,"title":{},"body":{"commands/build.html":{}}}],["object目录，由makefil",{"_index":2675,"title":{},"body":{"commands/build.html":{}}}],["off_t",{"_index":7232,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["offset",{"_index":3261,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{},"standards/io/io.html":{},"standards/io/io.html#Seeker":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["offset=15",{"_index":6675,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["oink",{"_index":5846,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#字符串替换":{}}}],["oinki",{"_index":5849,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#字符串替换":{}}}],["ok",{"_index":105,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/map.html":{},"basic/map.html#map":{},"basic/var.html":{},"basic/var.html#赋值":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#错误":{},"standards/time.html":{},"standards/time.html#时区":{},"basic/test.html":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["old",{"_index":5189,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/text/strings.html":{},"standards/text/strings.html#字符串替换":{}}}],["old[n",{"_index":5190,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["oldmap",{"_index":1015,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{}}}],["oldnam",{"_index":7291,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["oldpath",{"_index":7296,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["oldstr",{"_index":3663,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["omitempti",{"_index":1528,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["on",{"_index":1379,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["onc",{"_index":7758,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["op",{"_index":3065,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为参数":{}}}],["op(x",{"_index":3066,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为参数":{}}}],["open",{"_index":4015,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#目录与链接":{}}}],["openfil",{"_index":7147,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["openfile(nam",{"_index":7188,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["oper",{"_index":101,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"basic/function.html":{},"basic/function.html#函数作为参数":{},"basic/function.html#关键字-defer":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["option",{"_index":2644,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["order",{"_index":1193,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["orig",{"_index":5860,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["origin",{"_index":3107,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{},"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["os",{"_index":45,"title":{"standards/os/os.html":{},"standards/os/os.html#os":{}},"body":{"index.html":{},"index.html#os-Args":{},"basic/package.html":{},"basic/package.html#import":{},"standards/log.html":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/io/io.html":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{}}}],["os.arg",{"_index":30,"title":{"index.html#os-Args":{}},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{}}}],["os.chmod",{"_index":7271,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["os.creat",{"_index":6667,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["os.errexist",{"_index":7305,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["os.exit(1",{"_index":2470,"title":{},"body":{"standards/log.html":{},"standards/log.html#分类":{}}}],["os.fil",{"_index":6624,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#Closer":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{}}}],["os.file.chmod",{"_index":7272,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["os.file.clos",{"_index":7198,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["os.file.trunc",{"_index":7209,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#截断文件":{}}}],["os.fileinfo",{"_index":4756,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/os/filepath.html":{},"standards/os/filepath.html#遍历目录":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["os.filemod",{"_index":4771,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["os.getwd",{"_index":5565,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{}}}],["os.ispermiss",{"_index":7260,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["os.link",{"_index":7288,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["os.mkdir",{"_index":7304,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["os.mkdiral",{"_index":7307,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["os.modesticki",{"_index":7278,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["os.o_sync",{"_index":7193,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["os.open",{"_index":2391,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{},"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Closer":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{}}}],["os.open(filenam",{"_index":3073,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["os.openfil",{"_index":7306,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["os.patherror",{"_index":7187,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["os.pathsepar",{"_index":5553,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#filepath":{}}}],["os.readlink",{"_index":5582,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["os.remov",{"_index":7289,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["os.remove(f.nam",{"_index":4782,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["os.removeal",{"_index":7308,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["os.renam",{"_index":7295,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["os.seek_set",{"_index":7201,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["os.stat",{"_index":7243,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["os.stderr",{"_index":2452,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{}}}],["os.stdin",{"_index":4538,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["os.stdin/stdout",{"_index":6631,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["os.stdout",{"_index":2451,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{}}}],["os.symlink",{"_index":7298,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["os.tempdir",{"_index":4776,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["os.trunc",{"_index":7208,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#截断文件":{}}}],["ouput",{"_index":5589,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#符号链接指向的路径名":{}}}],["out",{"_index":591,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/slice.html":{},"basic/slice.html#切片操作":{},"standards/log.html":{},"standards/log.html#Logger":{}}}],["output",{"_index":1656,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/time.html":{},"standards/time.html#定时器":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["over",{"_index":8683,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["overrid",{"_index":2018,"title":{},"body":{"basic/struct.html":{}}}],["p",{"_index":488,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#赋值":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#parallel-标记":{},"standards/io/fmt.html":{},"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["p&#xff08;%#p&#xff09;&#x53bb;&#x6389;&#x524d;&#x5bfc",{"_index":4714,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["p&#xff08;processor",{"_index":6236,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p&#xff0c;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x53ef;&#x7528;&#x7684",{"_index":6611,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p&#xff0c;&#x5e76;&#x8fdb;&#x5165",{"_index":6583,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p&#xff0c;&#x90a3;&#x4e48",{"_index":6612,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p&#xff1b",{"_index":6570,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p(&#x5b9e;&#x8d28;&#x662f;&#x88ab",{"_index":6595,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p.basicpay",{"_index":2304,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["p.i",{"_index":1162,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体比较":{}}}],["p.jj",{"_index":2305,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["p.printmethodpoint",{"_index":1667,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["p.printmethodvalu",{"_index":1665,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["p.scalebi",{"_index":1168,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["p.x",{"_index":1161,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["p1",{"_index":3681,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["p[:n",{"_index":6622,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Reader":{}}}],["p[i",{"_index":9153,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["p[j",{"_index":9154,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["p\\n",{"_index":4634,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["packag",{"_index":6,"title":{"index.html#package":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#package":{},"index.html#os-Args":{},"index.html#声明":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#静态站点":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["package.json",{"_index":2531,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["packages/test",{"_index":2244,"title":{},"body":{"basic/scope.html":{},"basic/scope.html#作用域":{}}}],["page",{"_index":373,"title":{},"body":{"advance/mm.html":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["painc",{"_index":589,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{}}}],["palindrom",{"_index":4003,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["panama",{"_index":3990,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["panic",{"_index":588,"title":{"basic/error.html#Panic-异常":{}},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/map.html":{},"standards/log.html":{},"standards/log.html#分类":{},"basic/basic_data.html":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Map":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["panic&#x3002",{"_index":721,"title":{},"body":{"basic/error.html#Recover-捕获异常":{},"basic/map.html#map":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["panic&#x3002;&#x5728;&#x6267;&#x884c;&#x5b8c",{"_index":2511,"title":{},"body":{"standards/log.html#分类":{}}}],["panic&#x3002;&#x8fd9;&#x91cc;&#x6240;&#x8bf4;&#x7684;&#x590d;&#x5236;&#x65b9;&#x5f0f;&#xff0c;&#x5305;&#x62ec;&#x4f46;&#x4e0d;&#x9650;&#x4e8e;&#x5728;&#x51fd;&#x6570;&#x95f4;&#x4f20;&#x9012;&#x503c;&#x3001;&#x901a;&#x8fc7;&#x901a;&#x9053;&#x4f20;&#x9012;&#x503c;&#x3001;&#x628a;&#x503c;&#x8d4b;&#x4e88;&#x53d8;&#x91cf;&#x7b49;&#x7b49;&#x3002",{"_index":3842,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["panic&#xff08;&#x5373;&#x8fd0;&#x884c;&#x65f6;&#x6050;&#x614c;&#xff09;&#x3002",{"_index":1450,"title":{},"body":{"basic/map.html#map":{}}}],["panic&#xff0c;&#x90a3;&#x4e48;&#x8be5;&#x51fd;&#x6570;&#x5c31;&#x4e0d;&#x4f1a;&#x505a;&#x4efb;&#x4f55;&#x4e8b;&#x60c5;&#xff0c;&#x5e76;&#x4e14;&#x53ea;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":731,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["panic&#xff1a",{"_index":7883,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["panick",{"_index":479,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["parallel",{"_index":4051,"title":{"basic/test.html#parallel-标记":{}},"body":{"basic/test.html":{},"basic/test.html#parallel-标记":{}}}],["parent",{"_index":7786,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["parenthes",{"_index":3084,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["pars",{"_index":576,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["parsebool",{"_index":4847,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{}}}],["parsefloat",{"_index":4850,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["parseform",{"_index":8467,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["parseint",{"_index":4848,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{}}}],["parseint(",{"_index":4860,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{}}}],["parseint/parseuint",{"_index":4867,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{}}}],["parsemultipartform",{"_index":8466,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["parseuint",{"_index":4849,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{}}}],["pass",{"_index":3969,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#性能测试的测试结果":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["passpoint",{"_index":1602,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["passvalu",{"_index":1601,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["password",{"_index":8462,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["path",{"_index":799,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{},"basic/env_config.html#Go-Module":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/os/filepath.html":{},"standards/os/filepath.html#filepath":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#规整化路径":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#遍历目录":{},"standards/os/os.html":{},"standards/os/os.html#目录与链接":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["path/filepath",{"_index":5552,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#filepath":{}}}],["patherror",{"_index":7150,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{}}}],["pattern",{"_index":5591,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["paul",{"_index":1509,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["peek",{"_index":5382,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["pemp1",{"_index":2310,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["pemp2",{"_index":2312,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["peopl",{"_index":9179,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["people[i].ag",{"_index":9184,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["people[j].ag",{"_index":9185,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["period",{"_index":3371,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{},"standards/time.html#Ticker":{}}}],["perm",{"_index":4770,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#目录与链接":{}}}],["perman",{"_index":2302,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["person",{"_index":131,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["person.nam",{"_index":2388,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["phase",{"_index":469,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["phone",{"_index":2269,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["phone.cal",{"_index":2274,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["phylum",{"_index":1191,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["pi",{"_index":2382,"title":{},"body":{"basic/var.html":{},"basic/var.html#声明一组变量":{}}}],["pick",{"_index":9147,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["piec",{"_index":5372,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["ping",{"_index":4405,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["pipe",{"_index":6740,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["piperead",{"_index":6654,"title":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["piperead(piperead",{"_index":6745,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["pipewrit",{"_index":6656,"title":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["pipewrite(pipewrit",{"_index":6744,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["pkg",{"_index":805,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#性能测试的测试结果":{}}}],["pkg.test",{"_index":3974,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{}}}],["plan",{"_index":3988,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["player",{"_index":1977,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["playground",{"_index":4034,"title":{},"body":{"basic/test.html":{}}}],["playground&#xff0c;&#x53ef;&#x4ee5;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x5728;&#x7ebf;&#x7f16;&#x8f91;&#x548c;&#x8fd0;&#x884c;&#x6bcf;&#x4e2a;&#x793a;&#x4f8b;&#x51fd;&#x6570;&#x3002",{"_index":4150,"title":{},"body":{"basic/test.html#示例函数":{}}}],["playground/validator.v8",{"_index":904,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["pleas",{"_index":4408,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["po",{"_index":9143,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["point",{"_index":1158,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/struct.html":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["point).scalebi",{"_index":1163,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["point.scalebi",{"_index":1164,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["pointer",{"_index":452,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["pointx",{"_index":2005,"title":{},"body":{"basic/struct.html":{}}}],["point{x",{"_index":2080,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["pool",{"_index":7790,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["poolcleanup",{"_index":7793,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["pop",{"_index":2857,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["port",{"_index":8666,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["posit",{"_index":5152,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["posix",{"_index":7310,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["post",{"_index":1013,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{}}}],["postform",{"_index":8443,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{}}}],["postformvalu",{"_index":8481,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["postparam",{"_index":8565,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["pow(x",{"_index":6020,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["pow10(",{"_index":6021,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["powershel",{"_index":3973,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{}}}],["pp",{"_index":1646,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["pp).x&#xff0c;golang",{"_index":1744,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["pp).x，golang",{"_index":1648,"title":{},"body":{"basic/pointer.html":{}}}],["pp.i",{"_index":1649,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["pp.printmethodpoint",{"_index":1669,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["pp.printmethodvalu",{"_index":1668,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["pp.x",{"_index":1647,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["pprof",{"_index":4030,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{},"basic/test.html#性能分析":{}}}],["pptr",{"_index":1593,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{}}}],["pq",{"_index":5207,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["pq.update(item",{"_index":5222,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["pq[i",{"_index":5210,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["pq[i].index",{"_index":5212,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["pq[i].prior",{"_index":5208,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["pq[j",{"_index":5211,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["pq[j].index",{"_index":5213,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["pq[j].prioriti",{"_index":5209,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["pread",{"_index":7192,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["prec",{"_index":4878,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["preced",{"_index":8682,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["prefix",{"_index":2383,"title":{},"body":{"basic/var.html":{},"basic/var.html#声明一组变量":{},"standards/log.html":{},"standards/log.html#Logger":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{}}}],["prev",{"_index":5146,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{}}}],["prev:(*list.el",{"_index":5169,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["previou",{"_index":6722,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["print",{"_index":745,"title":{"standards/io/fmt.html#Print":{}},"body":{"basic/array.html":{},"basic/array.html#数组":{},"standards/log.html":{},"standards/log.html#分类":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/io/fmt.html":{},"standards/io/fmt.html#fmt-包":{},"standards/io/fmt.html#Print":{}}}],["print&#xff0c;&#x8f93;&#x51fa;&#x65e5;&#x5fd7;&#x3002",{"_index":2508,"title":{},"body":{"standards/log.html#分类":{}}}],["print.go",{"_index":4522,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#fmt-包":{}}}],["printf",{"_index":2471,"title":{},"body":{"standards/log.html":{},"standards/log.html#分类":{},"basic/function.html":{},"basic/function.html#可变参数":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#占位符":{}}}],["printf(#v",{"_index":4544,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%",{"_index":4570,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%#u",{"_index":4595,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%+q",{"_index":4591,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%b",{"_index":4548,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%c",{"_index":4550,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%d",{"_index":4552,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%f",{"_index":4575,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%g",{"_index":4577,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%p",{"_index":4587,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%q",{"_index":4556,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%t",{"_index":4546,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%u",{"_index":4563,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%v",{"_index":4539,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printf(%x",{"_index":4558,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["printfuncpoint",{"_index":1645,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printfuncpointer(p",{"_index":1659,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printfuncpointer(pp",{"_index":1661,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printfuncvalu",{"_index":1644,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printfuncvalue(p",{"_index":1655,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printfuncvalue(pp",{"_index":1657,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["println",{"_index":2472,"title":{},"body":{"standards/log.html":{},"standards/log.html#分类":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/io.html":{},"standards/io/io.html#Writer":{}}}],["println(hello",{"_index":2115,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["printmethodpoint",{"_index":1652,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printmethodvalu",{"_index":1650,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["prioriti",{"_index":5205,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["priorityqueu",{"_index":5206,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["proactiv",{"_index":1975,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["process",{"_index":2625,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["processlist",{"_index":4410,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["produc",{"_index":4013,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["profil",{"_index":4012,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{},"basic/test.html#性能分析":{}}}],["profile&#xff09",{"_index":4245,"title":{},"body":{"basic/test.html#性能分析":{}}}],["profile&#xff09;&#x3001;&#x5185;&#x5b58;&#x6982;&#x8981;&#x6587;&#x4ef6;&#xff08;mem",{"_index":4242,"title":{},"body":{"basic/test.html#性能分析":{}}}],["profile&#xff09;&#x548c;&#x963b;&#x585e;&#x6982",{"_index":4243,"title":{},"body":{"basic/test.html#性能分析":{}}}],["profile）、内存概要文件（mem",{"_index":4060,"title":{},"body":{"basic/test.html":{}}}],["program",{"_index":500,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["project",{"_index":2563,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["project.html",{"_index":2567,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["projects/mi",{"_index":2566,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["proto",{"_index":8434,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["protoatleast",{"_index":8484,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["protocol",{"_index":1487,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"basic/test.html":{},"basic/test.html#性能分析":{}}}],["protomajor",{"_index":8436,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["protominor",{"_index":8437,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["ptr",{"_index":763,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组传入函数":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{}}}],["push",{"_index":2852,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["push(x",{"_index":5184,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["pushback",{"_index":5160,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["pushbacklist",{"_index":5173,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["pushfront",{"_index":5159,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["pushfrontlist",{"_index":5174,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#链表":{}}}],["put",{"_index":7789,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["puzzlers/article20/q2",{"_index":4035,"title":{},"body":{"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["puzzlers/article20/q3",{"_index":4040,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["p（%#p",{"_index":4597,"title":{},"body":{"standards/io/fmt.html":{}}}],["p（processor",{"_index":6133,"title":{},"body":{"concurrent/goroutine.html":{}}}],["q",{"_index":749,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/struct.html":{},"basic/struct.html#结构体比较":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#特殊函数":{}}}],["q.i",{"_index":1985,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体比较":{}}}],["q.point",{"_index":1183,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["q.scalebi",{"_index":1181,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["q.x",{"_index":1984,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体比较":{}}}],["q=0.3",{"_index":8531,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["q=0.8",{"_index":8527,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["q\\n",{"_index":3693,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["queri",{"_index":4419,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["quick",{"_index":2520,"title":{"theme/theme-usage.html#Quick-Start":{}},"body":{"theme/theme-usage.html":{}}}],["q（%+q",{"_index":4590,"title":{},"body":{"standards/io/fmt.html":{}}}],["r",{"_index":583,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#定时器":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/text/unicode.html#utf8-包":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/bufio.html#ReadWriter":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#TeeReader-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#Reverse":{}}}],["r&#x2026",{"_index":629,"title":{},"body":{"basic/error.html#error-类型":{}}}],["r.array.less(j",{"_index":2025,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["r.interface.less(j",{"_index":2019,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"standards/data/sort.html":{},"standards/data/sort.html#Reverse":{}}}],["r.method",{"_index":8655,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{}}}],["r.protoatleast",{"_index":8649,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["r.read",{"_index":6731,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#LimitedReader-类型":{}}}],["r.requesturi",{"_index":8648,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["r.scalebi",{"_index":1166,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["r.url",{"_index":8661,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["r.url.path",{"_index":8656,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{}}}],["r16",{"_index":5049,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["r32",{"_index":5051,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["r\\n",{"_index":5381,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["race",{"_index":2649,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"concurrent/goroutine.html":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["race&#x7684;&#x65f6;&#x5019;&#x9ed8;&#x8ba4;&#x5df2;&#x7ecf;&#x662f",{"_index":2755,"title":{},"body":{"commands/build.html#工具":{}}}],["race,&#x5927;&#x5bb6;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":2756,"title":{},"body":{"commands/build.html#工具":{}}}],["radiu",{"_index":1145,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["rang",{"_index":25,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#空标识符":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#切片操作":{},"basic/interface.html":{},"basic/interface.html#接口":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#可变参数":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["range16",{"_index":5050,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["range32",{"_index":5052,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["rangeerror",{"_index":4856,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{}}}],["ranget",{"_index":5048,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["rarr",{"_index":2021,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["rat",{"_index":4349,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["rate",{"_index":4070,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["rc",{"_index":4750,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{}}}],["rd",{"_index":5344,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["re",{"_index":8509,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["read",{"_index":586,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#从字符串中读取内容":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{},"standards/os/os.html":{},"standards/os/os.html#os":{},"standards/os/os.html#文件-I-O":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["read(p",{"_index":2276,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{}}}],["read)\\n",{"_index":3683,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["read/readat",{"_index":6726,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#SectionReader-类型":{}}}],["readal",{"_index":4753,"title":{"standards/io/ioutil.html#ReadAll-函数":{}},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadAll-函数":{}}}],["readall(f",{"_index":3075,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["readat",{"_index":6660,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#SectionReader-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["readat(p",{"_index":6659,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["readatleast",{"_index":6761,"title":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["readbyt",{"_index":5360,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#从字符串中读取内容":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["readbytes(&#39;\\n&#39",{"_index":5377,"title":{},"body":{"standards/io/bufio.html":{}}}],["readbytes(&apos;\\n&apo",{"_index":5474,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["readcloser&#x3001;readseeker&#x3001;readwritecloser&#x3001;readwriteseeker&#x3001;readwriter&#x3001;writeclos",{"_index":6971,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["readcloser、readseeker、readwritecloser、readwriteseeker、readwriter、writeclos",{"_index":6724,"title":{},"body":{"standards/io/io.html":{}}}],["readdir",{"_index":4755,"title":{"standards/io/ioutil.html#ReadDir-函数":{}},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["readdirnam",{"_index":7312,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["reader",{"_index":2275,"title":{"standards/io/io.html#Reader":{}},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio包中的数据类型":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#ReadWriter":{},"standards/text/strings.html":{},"standards/text/strings.html#从字符串中读取内容":{},"standards/io/io.html":{},"standards/io/io.html#io":{},"standards/io/io.html#Reader":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["reader&#xff0c;&#x6700;&#x7ec8;&#x7684;&#x8bfb;&#x53d6;&#x64cd;&#x4f5c;&#x901a;&#x8fc7",{"_index":6999,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["reader.read",{"_index":6780,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#TeeReader-函数":{}}}],["reader.read(buf",{"_index":6750,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["reader.read(p",{"_index":6621,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Reader":{}}}],["reader.readat(p",{"_index":6662,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["reader.readbyt",{"_index":5379,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["reader.readrun",{"_index":6694,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["reader.readslic",{"_index":5356,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["reader.seek",{"_index":6692,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["reader.writeto(os.stdout",{"_index":6685,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["readerat",{"_index":6657,"title":{"standards/io/io.html#ReaderAt-和-WriterAt":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#SectionReader-类型":{}}}],["readerat/writeat",{"_index":6691,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["readerfrom",{"_index":6676,"title":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["readfil",{"_index":3071,"title":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["readfrom",{"_index":5391,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["readfrom(fil",{"_index":6625,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Reader":{}}}],["readfrom(os.stdin",{"_index":6623,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Reader":{}}}],["readfrom(r",{"_index":6678,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["readfrom(strings.newread",{"_index":6626,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Reader":{}}}],["readful",{"_index":6762,"title":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["readgogc",{"_index":486,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["readlin",{"_index":5350,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["readlink",{"_index":7300,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["readrequest",{"_index":8452,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["readrespons",{"_index":8501,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Response":{}}}],["readrun",{"_index":5348,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#从字符串中读取内容":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["readslic",{"_index":5351,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["readslice&#x3001;readbytes&#x3001;readstr",{"_index":5426,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["readslice&#x65b9;&#x6cd5",{"_index":5429,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["readslice、readbytes、readstr",{"_index":5349,"title":{},"body":{"standards/io/bufio.html":{}}}],["readstr",{"_index":5361,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["readstring(&#39;\\n&#39",{"_index":5378,"title":{},"body":{"standards/io/bufio.html":{}}}],["readstring(&apos;\\n&apo",{"_index":5475,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["readtimeout",{"_index":8692,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["readwrit",{"_index":2281,"title":{"standards/io/bufio.html#ReadWriter":{}},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio包中的数据类型":{},"standards/io/bufio.html#ReadWriter":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["readwriteclos",{"_index":2279,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["reason",{"_index":4852,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{}}}],["receiv",{"_index":1170,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["record",{"_index":4845,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{}}}],["recov",{"_index":597,"title":{"basic/error.html#Recover-捕获异常":{}},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["rect",{"_index":3052,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["recvcond",{"_index":7714,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["recvcond.sign",{"_index":7722,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["recvcond.wait",{"_index":7724,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["red",{"_index":1177,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["redirect",{"_index":8658,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["redirecthandler(u.str",{"_index":8662,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["redirecthandler(url.str",{"_index":8673,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["refer",{"_index":8485,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["referr",{"_index":8486,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["reflect",{"_index":9178,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["reflect.deepequ",{"_index":5022,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["reflect.deepequal(got",{"_index":5025,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["reflect.typ",{"_index":4999,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["reflect.typeof",{"_index":4998,"title":{"basic/reflect.html#reflect-TypeOf":{}},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["reflect.typeof(a",{"_index":5001,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["reflect.typeof(b",{"_index":5008,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["reflect.typeof(c",{"_index":5009,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["reflect.valu",{"_index":5014,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["reflect.valueof",{"_index":5013,"title":{"basic/reflect.html#reflect-ValueOf":{}},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["reflect.valueof(x",{"_index":5016,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["reformat",{"_index":2624,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["regist",{"_index":8657,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["rel",{"_index":5566,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["releas",{"_index":1523,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["remain",{"_index":6732,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#LimitedReader-类型":{}}}],["remainder(x",{"_index":6071,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["remoteaddr",{"_index":8447,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["remov",{"_index":2613,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#堆":{},"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["removeal",{"_index":7309,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["renam",{"_index":7294,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["repeat",{"_index":5850,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#重复字符串":{}}}],["replac",{"_index":5843,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#字符串替换":{}}}],["replica",{"_index":7743,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["repo",{"_index":2546,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["report",{"_index":2620,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["req",{"_index":8453,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["req.method",{"_index":8641,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["req.requesturi",{"_index":8640,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["request",{"_index":4748,"title":{"standards/net/http.html#Request":{}},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["request&#xff0c;http",{"_index":8727,"title":{},"body":{"standards/net/http.html#http":{}}}],["request.addcookie(cooki",{"_index":8521,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["request.header.set",{"_index":8522,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["requestform",{"_index":8470,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["requesturi",{"_index":8448,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["request，http",{"_index":8416,"title":{},"body":{"standards/net/http.html":{}}}],["requir",{"_index":840,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["reset",{"_index":3394,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["resettim",{"_index":4056,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试函数中的计时器":{}}}],["resp",{"_index":567,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{}}}],["resp.bodi",{"_index":8502,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Response":{}}}],["resp.body.clos",{"_index":573,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["resp.trail",{"_index":8503,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Response":{}}}],["respons",{"_index":8451,"title":{"standards/net/http.html#Response":{}},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["response&#x4fe1;&#x606f",{"_index":8909,"title":{},"body":{"standards/net/http.html#client":{}}}],["response&#xff0c;http",{"_index":8729,"title":{},"body":{"standards/net/http.html#http":{}}}],["response.bodi",{"_index":8545,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["response.body.clos",{"_index":8546,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["response.statuscod",{"_index":8548,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["responsewrit",{"_index":8590,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["response，http",{"_index":8417,"title":{},"body":{"standards/net/http.html":{}}}],["resservir",{"_index":4000,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["rest",{"_index":4002,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["result",{"_index":3051,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["ret",{"_index":6689,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["retri",{"_index":8624,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["return",{"_index":9,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#自定义类型":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#String-方法":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#Closer":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-Once":{},"standards/net/http.html":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["revers",{"_index":2017,"title":{"standards/data/sort.html#Reverse":{}},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"standards/data/sort.html":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["reverse(arr",{"_index":2022,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["rf",{"_index":831,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["rfc",{"_index":8456,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["right",{"_index":1982,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["ring",{"_index":5175,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#环":{}}}],["ring.do",{"_index":5181,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#环":{}}}],["ring.new",{"_index":5177,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#环":{}}}],["ring.next",{"_index":5179,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#环":{}}}],["ring.valu",{"_index":5178,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#环":{}}}],["rlock",{"_index":7696,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["rlocker",{"_index":7717,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["rm",{"_index":830,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["rmdir",{"_index":7290,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["rn",{"_index":4338,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["rn).add(rq",{"_index":4347,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["ro",{"_index":4341,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["ro).mul(rq",{"_index":4348,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["rollback",{"_index":4396,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["root",{"_index":2526,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/os/filepath.html":{},"standards/os/filepath.html#遍历目录":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["root:@tcp(localhost:3306)/test?charset=utf8",{"_index":4400,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["root:@tcp23(localhost233:3306)/test?charset=utf8",{"_index":4403,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["round",{"_index":3300,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["routin",{"_index":1382,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["row",{"_index":4415,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["rp",{"_index":4342,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["rq",{"_index":4345,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["rq.mul(rm",{"_index":4346,"title":{},"body":{"standards/data/big.html":{},"standards/data/big.html#big":{}}}],["rst",{"_index":3335,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["rul",{"_index":8591,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["run",{"_index":48,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#性能测试的测试结果":{},"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["run=coverag",{"_index":4022,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["run=french|can",{"_index":3970,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{}}}],["rune",{"_index":1021,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode":{},"standards/text/unicode.html#unicode-包":{},"standards/text/unicode.html#utf8-包":{},"standards/text/unicode.html#2-5-3-utf16-包":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/text/strings.html":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["rune&#x3002",{"_index":6002,"title":{},"body":{"standards/text/strings.html#从字符串中读取内容":{}}}],["runecount(p",{"_index":5095,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{}}}],["runecountinstring(",{"_index":5096,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{}}}],["runelen(r",{"_index":5094,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{}}}],["runeread",{"_index":6723,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["runes(char",{"_index":3694,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["runes(hex",{"_index":3695,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["runescann",{"_index":6718,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["runlock",{"_index":7697,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["runnabl",{"_index":6157,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["runnable&#xff0c",{"_index":6614,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["runnable&#xff0c;&#x653e;&#x5165;&#x5230;&#x67d0",{"_index":6588,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["runq",{"_index":6154,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["runtim",{"_index":439,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/test.html":{},"basic/test.html#性能分析":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["runtime.gc",{"_index":492,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["runtime.goexit",{"_index":6147,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["runtime.gomaxproc",{"_index":4050,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["runtime.gomaxprocs(0",{"_index":4052,"title":{},"body":{"basic/test.html":{},"basic/test.html#parallel-标记":{}}}],["runtime.gosch",{"_index":6145,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["runtime.memprofiler",{"_index":4063,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime.readmemstat",{"_index":4068,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime/pprof",{"_index":4057,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime/pprof.lookup",{"_index":4074,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime/pprof.profil",{"_index":4071,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime/time.go",{"_index":3402,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["runtime/trac",{"_index":4059,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime_registerpoolcleanup(poolcleanup",{"_index":7792,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["runtimenano",{"_index":3384,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["runtimetim",{"_index":3363,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{},"standards/time.html#Ticker":{}}}],["rw",{"_index":7284,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["rwxrwxrwx",{"_index":7184,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["s",{"_index":54,"title":{},"body":{"index.html":{},"index.html#空标识符":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/oop.html":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#判断是否包含字符串":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#分割字符串":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#WriteString-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["s%s%s%s%s%s%",{"_index":1199,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["s&#xff0c;&#x8fd4;&#x56de;&#x5b50;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x6570;&#x7ec4;&#xff08;slice&#xff09",{"_index":5971,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["s,%s\\n",{"_index":3655,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["s,&#x662f;&#x6570;&#x7ec4",{"_index":1879,"title":{},"body":{"basic/slice.html#slice":{}}}],["s[0",{"_index":1861,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["s[5",{"_index":3622,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["s[i",{"_index":9124,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Search":{}}}],["s[i].scor",{"_index":9122,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{}}}],["s[j",{"_index":9125,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["s[j].score",{"_index":9123,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{}}}],["s[po",{"_index":9145,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["s\\n",{"_index":129,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#String-方法":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["safe",{"_index":1381,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["salari",{"_index":1979,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["salarycalcul",{"_index":2297,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["salarycalculatorpemp1",{"_index":2315,"title":{},"body":{"basic/interface.html":{}}}],["salarycalculator{pemp1",{"_index":2376,"title":{},"body":{"basic/interface.html#接口":{}}}],["sam",{"_index":2292,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["sapn",{"_index":378,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#tcmalloc":{}}}],["saw",{"_index":3996,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["scale",{"_index":2390,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["scale&#xff0c;&#x4f46;&#x662f;&#x7701;&#x53bb;&#x4e86;&#x5bf9;&#x53d8;&#x91cf;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x91cd;&#x590d;&#x8ba1;&#x7b97",{"_index":2432,"title":{},"body":{"basic/var.html#赋值":{}}}],["scalebi",{"_index":1159,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["scan",{"_index":4417,"title":{"standards/io/fmt.html#Scan":{}},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html":{},"standards/io/fmt.html#fmt-包":{},"standards/io/fmt.html#Scan":{}}}],["scan.go",{"_index":4528,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{}}}],["scanf",{"_index":4535,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{}}}],["scanln",{"_index":4532,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{}}}],["scanner",{"_index":5339,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio包中的数据类型":{}}}],["schedul",{"_index":6153,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["score",{"_index":9121,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["script",{"_index":2538,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["sdch",{"_index":8534,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["se",{"_index":3999,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["search",{"_index":9142,"title":{"standards/data/sort.html#Search":{}},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["searchfloat64",{"_index":9169,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["searchfloat64s(p",{"_index":9167,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["searchint",{"_index":9157,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["searchints(p",{"_index":9158,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["searchstrings(p",{"_index":9173,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["sec",{"_index":3253,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["second",{"_index":3255,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["section",{"_index":6729,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#SectionReader-类型":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["sectionread",{"_index":6655,"title":{"standards/io/io.html#SectionReader-类型":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#SectionReader-类型":{}}}],["seed",{"_index":2525,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["seed.git",{"_index":2524,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["seek",{"_index":6690,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#SectionReader-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["seek(offset",{"_index":6687,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["seek_cur",{"_index":6702,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["seek_end",{"_index":6703,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["seek_set",{"_index":6701,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["seekcurr",{"_index":6696,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["seekend",{"_index":6697,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["seeker",{"_index":6686,"title":{"standards/io/io.html#Seeker":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["seekstart",{"_index":6695,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["select",{"_index":11,"title":{"basic/flow.html#select":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/flow.html":{},"basic/flow.html#select":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/time.html":{},"standards/time.html#定时器":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["self",{"_index":1157,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["sema",{"_index":7689,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["semaphor",{"_index":7691,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["semi",{"_index":4005,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["send",{"_index":3378,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["sendcond",{"_index":7712,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sendcond.sign",{"_index":7726,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sendcond.wait",{"_index":7720,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sendtim",{"_index":3381,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["sep",{"_index":55,"title":{},"body":{"index.html":{},"index.html#空标识符":{},"standards/text/strings.html":{},"standards/text/strings.html#JOIN":{},"standards/text/strings.html#分割字符串":{}}}],["seq",{"_index":3376,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["serv",{"_index":8575,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["serve(ctx",{"_index":8631,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["servehttp",{"_index":8594,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{}}}],["servehttp(responsewrit",{"_index":8573,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["servehttp(rw",{"_index":8643,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["servehttp(w",{"_index":8644,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["servemux",{"_index":8585,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{}}}],["servemux(multiplex",{"_index":8689,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["server",{"_index":2535,"title":{"standards/net/http.html#HTTP-Server":{}},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{}}}],["server&#x8fd4;&#x56de;&#x7684;http",{"_index":8908,"title":{},"body":{"standards/net/http.html#client":{}}}],["server&#xff0c;http",{"_index":8733,"title":{},"body":{"standards/net/http.html#http":{}}}],["server&apos;",{"_index":9024,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["server'",{"_index":8637,"title":{},"body":{"standards/net/http.html":{}}}],["server.go",{"_index":8570,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["server.handl",{"_index":8696,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["server.listenandserv",{"_index":8613,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["serverhandl",{"_index":8635,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["serverhandler{c.server}.servehttp(w",{"_index":8632,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["server{addr",{"_index":8690,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["server返回的http",{"_index":8553,"title":{},"body":{"standards/net/http.html":{}}}],["server，http",{"_index":8419,"title":{},"body":{"standards/net/http.html":{}}}],["set",{"_index":154,"title":{},"body":{"index.html":{},"index.html#编码":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Response":{}}}],["set&#x3002;&#x6240;&#x4ee5;&#xff0c;utf",{"_index":349,"title":{},"body":{"index.html#编码":{}}}],["setbasicauth",{"_index":8460,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["setblockprofiler",{"_index":4069,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["setgcpercent(readgogc",{"_index":481,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["setkeepalivesen",{"_index":8584,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["setmaxidleconn",{"_index":4398,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["set。所以，utf",{"_index":155,"title":{},"body":{"index.html":{}}}],["sh",{"_index":8638,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["sh.srv.handler",{"_index":8639,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["share",{"_index":2848,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["shell",{"_index":5592,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["shouldhelpgc",{"_index":453,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["show",{"_index":2615,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["side",{"_index":2387,"title":{},"body":{"basic/var.html":{},"basic/var.html#简短声明":{}}}],["sidebar",{"_index":2557,"title":{"theme/theme-usage.html#Sidebar":{}},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["sign",{"_index":6035,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#特殊函数":{},"standards/data/math.html#其他函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["signal",{"_index":7723,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["signbit(x",{"_index":6064,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["simpl",{"_index":3676,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["simul",{"_index":3087,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["sin",{"_index":6007,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["sin(x",{"_index":6003,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["sincos(x",{"_index":6009,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["singl",{"_index":5081,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["sinh(x",{"_index":6005,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["site",{"_index":4541,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["site)&#xff0c;printf(%+v",{"_index":4664,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["site)，printf(%+v",{"_index":4540,"title":{},"body":{"standards/io/fmt.html":{}}}],["size",{"_index":446,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/os/os.html":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{}}}],["size]&#x7c7b;&#x578b",{"_index":768,"title":{},"body":{"basic/array.html#数组":{}}}],["skipdir",{"_index":5606,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#遍历目录":{}}}],["sleep",{"_index":3089,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#定时器":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["sleep&#x3002",{"_index":6617,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["sleep.go",{"_index":3366,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["slice",{"_index":26,"title":{"basic/slice.html":{},"basic/slice.html#slice":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#make-和-new":{},"basic/map.html":{},"basic/map.html#map":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/slice.html#长度和容量":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/function.html":{},"basic/function.html#参数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#JOIN":{},"standards/text/strings.html#分割字符串":{},"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["slice=%v\\n",{"_index":1851,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["slice=[0",{"_index":1855,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["slice=[2",{"_index":1860,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#切片操作":{}}}],["sliceissort",{"_index":9175,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["slicest",{"_index":9174,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["slow",{"_index":3088,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["socket",{"_index":6704,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Closer":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["soletitl",{"_index":598,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["someth",{"_index":609,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["sort",{"_index":1387,"title":{"standards/data/sort.html":{},"standards/data/sort.html#sort":{}},"body":{"basic/map.html":{},"basic/map.html#map":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["sort(intslice(a",{"_index":9160,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["sort(p",{"_index":9156,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["sort.int",{"_index":9159,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["sort.interfac",{"_index":5183,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["sort.ints(",{"_index":9161,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["sort.issorted(stud",{"_index":9138,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["sort.search",{"_index":9144,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#interface-排序与查找":{}}}],["sort.slic",{"_index":9176,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["sort.slice(a",{"_index":9187,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["sort.slice(peopl",{"_index":9183,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["sort.sort",{"_index":9155,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["sort.sort(sort.reverse(sort.intslice(",{"_index":9162,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["sort.sort(sort.reverse(stud",{"_index":9140,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#Reverse":{}}}],["sort.sort(stud",{"_index":9136,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["sorted:\\n\\t",{"_index":9139,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["sorted?\\n\\t",{"_index":9137,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["sourc",{"_index":2529,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Index":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["source/usag",{"_index":2556,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#添加文档":{}}}],["sourcestr",{"_index":3661,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["sourcestr中，把oldstr的前n个替换成newstr，返回一个新字符串，如果n0",{"_index":3660,"title":{},"body":{"basic/basic_data.html":{}}}],["span",{"_index":372,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#内存块":{},"advance/mm.html#回收":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["span&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x4ee5;&#x9875;&#x6570;&#x4e3a;&#x5355;&#x4f4d;&#x5c06",{"_index":402,"title":{},"body":{"advance/mm.html#内存块":{}}}],["span&#xff0c;&#x6b64;&#x65f6",{"_index":406,"title":{},"body":{"advance/mm.html#内存块":{}}}],["span&#xff0c;&#x9700;&#x8981;&#x7684;&#x65f6;&#x5019;&#x5411;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7533;&#x8bf7;&#x65b0;&#x7684;&#x5185;&#x5b58;&#x3002",{"_index":423,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["speci",{"_index":1196,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["specif",{"_index":8680,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["specifi",{"_index":2627,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#Time":{}}}],["spinlock",{"_index":7733,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["split",{"_index":5556,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["split(",{"_index":5893,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["split(abc",{"_index":5892,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["splitaft",{"_index":5887,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["splitafter&#x3001",{"_index":5976,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["splitafter(",{"_index":5895,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["splitaftern",{"_index":5889,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["splitaftern(",{"_index":5896,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["splitlist",{"_index":5579,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{}}}],["splitn",{"_index":5888,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["splitn(",{"_index":5894,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["spoke",{"_index":1991,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["sprint",{"_index":4524,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{}}}],["sprintf",{"_index":4527,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{}}}],["sprintln",{"_index":4526,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{}}}],["sql",{"_index":2711,"title":{"standards/database/sql.html":{},"standards/database/sql.html#sql":{}},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/database/sql.html":{},"standards/database/sql.html#sql":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["sql.db",{"_index":4386,"title":{"standards/database/sql.html#sql-DB-的使用":{}},"body":{"standards/database/sql.html":{},"standards/database/sql.html#类型":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["sql.open",{"_index":4399,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["sql.open(mysql",{"_index":4402,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["sql.regist",{"_index":4406,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["sql.result",{"_index":4388,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#类型":{}}}],["sql.row",{"_index":4387,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#类型":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["sql.stmt",{"_index":4390,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#类型":{}}}],["sql.tx",{"_index":4392,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#类型":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["sql/sql",{"_index":4384,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql":{}}}],["sqrt(x",{"_index":6022,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#幂次函数":{}}}],["src",{"_index":803,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/package.html":{},"basic/package.html#点操作":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["src.writeto(dst",{"_index":6755,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["src/cmd/go/build.go",{"_index":4777,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["src/logic/topic.go",{"_index":5572,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{}}}],["src/pkg/sync/pool.go",{"_index":7791,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["srv",{"_index":8576,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["srv.addr",{"_index":8574,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["srv.getdonechan",{"_index":8616,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["srv.logf",{"_index":8623,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["srv.newconn(rw",{"_index":8626,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["sscan",{"_index":4531,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{}}}],["sscanf",{"_index":4537,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{}}}],["sscanln",{"_index":4534,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{}}}],["st_atim",{"_index":7239,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_block",{"_index":7237,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_blsize",{"_index":7235,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_ctime",{"_index":7241,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_dev",{"_index":7220,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_gid",{"_index":7230,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_ino",{"_index":7222,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_mode",{"_index":7224,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_mtime",{"_index":7240,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_nlink",{"_index":7226,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_rdev",{"_index":7231,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_size",{"_index":7233,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["st_uid",{"_index":7228,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["stack",{"_index":1598,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["standard",{"_index":141,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["start",{"_index":2521,"title":{"theme/theme-usage.html#Quick-Start":{}},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["startcpuprofil",{"_index":4061,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["startindex",{"_index":1833,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{}}}],["starttim",{"_index":4054,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试函数中的计时器":{},"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{}}}],["starttimer(&amp;t.r",{"_index":3382,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["stat",{"_index":7211,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["statbuf",{"_index":7218,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["statenew",{"_index":8628,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["statu",{"_index":595,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{},"standards/net/http.html":{},"standards/net/http.html#Response":{}}}],["statuscod",{"_index":8499,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Response":{}}}],["statusmovedperman",{"_index":8663,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["std",{"_index":2111,"title":{},"body":{"basic/package.html":{},"basic/package.html#包":{}}}],["stderr",{"_index":6640,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["stdin",{"_index":6633,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["stdin/stdout/stderr",{"_index":6643,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["stdout",{"_index":6637,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["steve",{"_index":1513,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["sticki",{"_index":7264,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{}}}],["stop",{"_index":3395,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["stopcpuprofil",{"_index":4062,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["stoptim",{"_index":4055,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试函数中的计时器":{}}}],["store",{"_index":7737,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["store(v6",{"_index":7745,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["store）和交换（swap",{"_index":7730,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["str",{"_index":1022,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Scan":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{}}}],["str2",{"_index":3647,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strconv",{"_index":4841,"title":{"standards/text/strconv.html":{},"standards/text/strconv.html#strconv":{}},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#strconv":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#整型转为字符串":{}}}],["strconv.formatbool",{"_index":3069,"title":{},"body":{"basic/function.html":{},"basic/function.html#错误":{}}}],["strconv.formatfloat",{"_index":4565,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["strconv.ints",{"_index":4865,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{}}}],["strconv.itoa",{"_index":8519,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["strconv.itoa(i",{"_index":4873,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{}}}],["strconv.parsefloat(",{"_index":4884,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["strconv.parseint",{"_index":4866,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{}}}],["stream",{"_index":8473,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["stride",{"_index":7767,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["string",{"_index":56,"title":{"basic/oop.html#String-方法":{},"standards/text/strings.html":{},"standards/text/strings.html#strings":{}},"body":{"index.html":{},"index.html#空标识符":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#String-方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"standards/log.html":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#规整化路径":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#文件路径匹配":{},"standards/os/filepath.html#遍历目录":{},"standards/text/strings.html":{},"standards/text/strings.html#strings":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#判断是否包含字符串":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#JOIN":{},"standards/text/strings.html#分割字符串":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#WriteString-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["string2",{"_index":3618,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["string[i",{"_index":3619,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["string[index",{"_index":3617,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strings.build",{"_index":3630,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strings.contain",{"_index":3068,"title":{},"body":{"basic/function.html":{},"basic/function.html#错误":{}}}],["strings.contains(",{"_index":5822,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#判断是否包含字符串":{}}}],["strings.contains(str",{"_index":3637,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strings.count(",{"_index":5832,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{}}}],["strings.count(manyg",{"_index":5839,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{}}}],["strings.count(str",{"_index":5837,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#计算字符串出现次数":{}}}],["strings.field",{"_index":5883,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["strings.hasprefix(",{"_index":5814,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{}}}],["strings.hasprefix(str",{"_index":5820,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{}}}],["strings.hassuffix(",{"_index":5816,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{}}}],["strings.index(",{"_index":5823,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["strings.index(str",{"_index":5828,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["strings.join",{"_index":3624,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strings.lastindex(",{"_index":5825,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["strings.lastindex(str",{"_index":5830,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["strings.newread",{"_index":6661,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["strings.newreader(cont",{"_index":6734,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#LimitedReader-类型":{}}}],["strings.newreader(str",{"_index":5905,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#从字符串中读取内容":{}}}],["strings.read",{"_index":3673,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#其他接口":{}}}],["strings.repeat",{"_index":5853,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#重复字符串":{}}}],["strings.repeat(",{"_index":5851,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#重复字符串":{}}}],["strings.replace(str",{"_index":5844,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#字符串替换":{}}}],["strings.split",{"_index":3651,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/os/filepath.html":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["strings.splitaft",{"_index":5898,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["strings.splitn",{"_index":5899,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["strings.tolower(",{"_index":5857,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["strings.tolower(orig",{"_index":5865,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["strings.toupper(",{"_index":5859,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["strings.toupper(orig",{"_index":5867,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["strings.trim",{"_index":3656,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strings.trim(",{"_index":5875,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#修改字符串":{}}}],["stringslic",{"_index":9172,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["strip",{"_index":8667,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["striphostport(r.host",{"_index":8668,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["strsize",{"_index":1330,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{}}}],["strsplit",{"_index":3650,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["struct",{"_index":13,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/bufio.html#ReadWriter":{},"standards/io/io.html":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#interface-排序与查找":{}}}],["struct]\\n",{"_index":7747,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["struct_nam",{"_index":2266,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["struct_name_vari",{"_index":2268,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["struct_variable_typ",{"_index":1951,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["structure_variable_typ",{"_index":1957,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["structure_variable_typevalue1",{"_index":1955,"title":{},"body":{"basic/struct.html":{}}}],["structure_variable_type{value1",{"_index":2032,"title":{},"body":{"basic/struct.html#结构体":{}}}],["struct{}]\\n",{"_index":8067,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["student",{"_index":9126,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["studygolang.tx",{"_index":7286,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["studygolang.txt",{"_index":6705,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Closer":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["studygolang}&#xff0c;{name:studygolang",{"_index":4665,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["studygolang}，{name:studygolang",{"_index":4542,"title":{},"body":{"standards/io/fmt.html":{}}}],["stuscor",{"_index":9120,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{}}}],["stw(stop",{"_index":437,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["su",{"_index":7311,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["sub",{"_index":3246,"title":{},"body":{"standards/time.html":{}}}],["subject",{"_index":1962,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["sublim",{"_index":911,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#开发工具":{}}}],["substr",{"_index":5821,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#判断是否包含字符串":{}}}],["such",{"_index":7143,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#os":{}}}],["suffix",{"_index":2665,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{}}}],["sum",{"_index":64,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/function.html":{},"basic/function.html#可变参数":{},"standards/data/container.html":{},"standards/data/container.html#环":{}}}],["sumal",{"_index":5024,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["swap",{"_index":2015,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/function.html":{},"basic/function.html#声明函数":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"concurrent/sync_lock.html":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["swap&#xff0c;&#x7b80;&#x79f0",{"_index":7997,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["swap(i",{"_index":2011,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"standards/data/container.html":{},"standards/data/container.html#堆":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{}}}],["swig",{"_index":2688,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["switch",{"_index":18,"title":{"basic/flow.html#switch":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"standards/time.html":{},"standards/time.html#时区":{}}}],["sy",{"_index":7217,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["symbol",{"_index":2616,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["symlink",{"_index":5584,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["symlink/learngo.txt.2",{"_index":5587,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#符号链接指向的路径名":{}}}],["sync",{"_index":6137,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["sync.cond",{"_index":7709,"title":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sync.map",{"_index":7794,"title":{"concurrent/sync_lock.html#sync-Map":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["sync.mutex",{"_index":3077,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-Once":{}}}],["sync.mutex).lock",{"_index":7799,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["sync.newcond",{"_index":7716,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sync.newcond(&amp;lock",{"_index":7713,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sync.newcond(lock.rlock",{"_index":7715,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sync.onc",{"_index":7757,"title":{"concurrent/sync_lock.html#sync-Once":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["sync.pool",{"_index":7788,"title":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["sync.rwmutex",{"_index":7688,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["sync.waitgroup",{"_index":6138,"title":{"concurrent/sync_lock.html#sync-WaitGroup":{}},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["sync.waitgroup).wait",{"_index":7800,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["sync.waitgroup]\\n",{"_index":7754,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["sync/atom",{"_index":6143,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["sync/atomic.valu",{"_index":7736,"title":{"concurrent/sync_lock.html#sync-atomic-Value":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"concurrent/sync_lock.html#sync-Map":{}}}],["syntax",{"_index":2639,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["syntaxerror",{"_index":4853,"title":{},"body":{"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{}}}],["sys.(*syscall.stat_t",{"_index":7246,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["syscal",{"_index":6156,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["syscal.stat_t",{"_index":7242,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["syscall&#x3001;&#x6ca1;&#x6709;&#x8fdb;&#x884c",{"_index":6520,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["syscall.access",{"_index":7263,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["syscall.fdatasync",{"_index":7197,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["syscall.getenv",{"_index":3236,"title":{},"body":{"standards/time.html":{},"standards/time.html#时区":{}}}],["syscall.o_append",{"_index":7157,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["syscall.o_cloexec",{"_index":7166,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["syscall.o_creat",{"_index":7159,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["syscall.o_excl",{"_index":7161,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["syscall.o_rdonli",{"_index":7151,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["syscall.o_rdwr",{"_index":7155,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["syscall.o_sync",{"_index":7163,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["syscall.o_trunc",{"_index":7165,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["syscall.o_wronli",{"_index":7153,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["syscall.stderr",{"_index":6641,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["syscall.stdin",{"_index":6635,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["syscall.stdout",{"_index":6638,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["sysmon",{"_index":380,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#释放":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["sysmon&#xff0c;sysmon",{"_index":559,"title":{},"body":{"advance/gc.html#监控":{}}}],["sysmon，sysmon",{"_index":502,"title":{},"body":{"advance/gc.html":{}}}],["system",{"_index":6163,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["s，返回子字符串的数组（slice",{"_index":5882,"title":{},"body":{"standards/text/strings.html":{}}}],["t",{"_index":108,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#String-方法":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/io/fmt.html":{},"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{}}}],["t&#xff08;&#x65e0;&#x6267;&#x884c;&#x6743;&#x9650;&#x65f6;&#xff09;&#x3002",{"_index":7575,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["t&#xff08;&#x6709;&#x6267;&#x884c;&#x6743;&#x9650;&#x65f6;&#xff09",{"_index":7574,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["t.add(time.duration(week",{"_index":3345,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["t.day",{"_index":3226,"title":{},"body":{"standards/time.html":{},"standards/time.html#time":{},"standards/time.html#Time":{}}}],["t.error",{"_index":3977,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["t.errorf",{"_index":3978,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["t.fatal",{"_index":3979,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["t.fatalf",{"_index":3980,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["t.format",{"_index":3314,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["t.kind",{"_index":5003,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["t.minut",{"_index":3227,"title":{},"body":{"standards/time.html":{},"standards/time.html#time":{}}}],["t.month",{"_index":3317,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["t.parallel",{"_index":4053,"title":{},"body":{"basic/test.html":{},"basic/test.html#parallel-标记":{}}}],["t.string",{"_index":1211,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["t.year",{"_index":3318,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["t/f",{"_index":5818,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{}}}],["t2",{"_index":3313,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["t\\n",{"_index":760,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{}}}],["ta",{"_index":5005,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["tabl",{"_index":1370,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["table.go",{"_index":5054,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["tag",{"_index":1524,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["tag，详细的tag",{"_index":2672,"title":{},"body":{"commands/build.html":{}}}],["take",{"_index":8681,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["tan(x",{"_index":6014,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["tang",{"_index":4605,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["tanh(x",{"_index":6017,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#三角函数":{}}}],["targpath",{"_index":5568,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#相对路径和绝对路径":{}}}],["tb",{"_index":5006,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["tc",{"_index":5007,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["tc.kind",{"_index":5012,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["tcmalloc",{"_index":375,"title":{"advance/mm.html#tcmalloc":{}},"body":{"advance/mm.html":{},"advance/mm.html#tcmalloc":{}}}],["tcpconn",{"_index":8489,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["team",{"_index":1976,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["tee",{"_index":6777,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["teeread",{"_index":6778,"title":{"standards/io/io.html#TeeReader-函数":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#TeeReader-函数":{}}}],["temp",{"_index":8479,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["tempdelay",{"_index":8621,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["tempdir",{"_index":4773,"title":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["tempfil",{"_index":4774,"title":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["term",{"_index":5593,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["test",{"_index":471,"title":{"basic/test.html#go-test-命令执行的主要测试流程":{}},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/array.html":{},"basic/array.html#数组传入函数":{},"basic/package.html":{},"basic/package.html#包声明":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#go-test-命令执行的主要测试流程":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#parallel-标记":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["test&apo",{"_index":4118,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["test.input",{"_index":4009,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["test.log",{"_index":7244,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["test.out",{"_index":2679,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["test.want",{"_index":4007,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["testcach",{"_index":4037,"title":{},"body":{"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["testdata",{"_index":5599,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["testdata/*.input",{"_index":5601,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["testflag",{"_index":2640,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["testfunc",{"_index":2641,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["testing.b",{"_index":4025,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{},"basic/test.html#性能测试函数中的计时器":{}}}],["testing.t",{"_index":3975,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#基准测试":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["testispalindrom",{"_index":3981,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["testnam",{"_index":3976,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["testsumal",{"_index":5023,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["test目录，由makefil",{"_index":2676,"title":{},"body":{"commands/build.html":{}}}],["test记录，由makefil",{"_index":2680,"title":{},"body":{"commands/build.html":{}}}],["text",{"_index":2282,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["text/html",{"_index":8524,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{},"standards/net/http.html#中间件-Middleware":{}}}],["th",{"_index":5819,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["theme",{"_index":2519,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#使用文档主题":{},"theme/theme-usage.html#Quick-Start":{}}}],["theme_config",{"_index":2572,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Favicon":{}}}],["thread",{"_index":1380,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["thread&#xff0c;&#x56e0;&#x4e3a;&#x9664;&#x4e86;&#x6bcf;&#x4e2a",{"_index":6417,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["thread&#xff0c;&#x5b83;&#x5e76;&#x4e0d;&#x77e5;&#x9053;&#x4ec0;&#x4e48;&#x662f",{"_index":6439,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["thread&#xff0c;&#x5c31;&#x8981;&#x5728;&#x5c11;&#x91cf",{"_index":6412,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["ticker",{"_index":3361,"title":{"standards/time.html#Ticker":{}},"body":{"standards/time.html":{},"standards/time.html#定时器":{},"standards/time.html#Ticker":{}}}],["ticker.stop",{"_index":3404,"title":{},"body":{"standards/time.html":{},"standards/time.html#Ticker":{}}}],["time",{"_index":2701,"title":{"standards/time.html":{},"standards/time.html#time":{},"standards/time.html#Time":{}},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#time":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["time&#x3002;&#x4fee;&#x6539;&#x5730;&#x70b9",{"_index":3467,"title":{},"body":{"standards/time.html#Time":{}}}],["time.aft",{"_index":2862,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/time.html":{},"standards/time.html#time":{},"standards/time.html#定时器":{}}}],["time.afterfunc",{"_index":3389,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["time.afterfunc(time.second",{"_index":2867,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["time.ans",{"_index":3321,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.dur",{"_index":3329,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.duration.second",{"_index":2703,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["time.go",{"_index":3367,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["time.hour",{"_index":3310,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.iszero",{"_index":3279,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.loc",{"_index":3294,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.millisecond",{"_index":8622,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["time.minut",{"_index":3312,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.now",{"_index":3091,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#time":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"standards/text/strconv.html":{},"standards/text/strconv.html#整型转为字符串":{},"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["time.now().format(2006",{"_index":3305,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.now().format(th.format",{"_index":8699,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["time.now().sub(start",{"_index":3392,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["time.now().utc",{"_index":3338,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.pars",{"_index":3283,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.parseinloc",{"_index":3284,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.parseinlocation(2006",{"_index":3304,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.reset",{"_index":3388,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["time.rfc1123",{"_index":8702,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["time.rfc822",{"_index":3322,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.second",{"_index":2863,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#定时器":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["time.sinc",{"_index":2702,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["time.since(start",{"_index":8717,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["time.sleep",{"_index":3086,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#定时器":{},"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["time.sleep&#xff08;dur",{"_index":3410,"title":{},"body":{"standards/time.html#time":{}}}],["time.sleep(1",{"_index":3386,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["time.sleep(3*time.second",{"_index":3393,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["time.sleep(tempdelay",{"_index":8625,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["time.sleep(time.millisecond",{"_index":6135,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["time.sleep(time.nanosecond",{"_index":6141,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["time.sleep（dur",{"_index":3229,"title":{},"body":{"standards/time.html":{}}}],["time.stop",{"_index":3387,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["time.tick",{"_index":3228,"title":{},"body":{"standards/time.html":{},"standards/time.html#time":{},"standards/time.html#Ticker":{}}}],["time.tim",{"_index":3225,"title":{},"body":{"standards/time.html":{},"standards/time.html#time":{},"standards/time.html#Time":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["time.time.format",{"_index":3285,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.time.unix",{"_index":3281,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.time.unixnano",{"_index":3282,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.unix(sec",{"_index":3280,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time.utc",{"_index":3295,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["time_t",{"_index":7238,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["timehandl",{"_index":8697,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["timeout",{"_index":2864,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/time.html":{},"standards/time.html#定时器":{}}}],["timer",{"_index":3360,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{},"standards/time.html#Ticker":{}}}],["timer.c",{"_index":3383,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["timer.reset",{"_index":3396,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["timer.reset(0",{"_index":3401,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["timer.stop",{"_index":3400,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["timesec",{"_index":3274,"title":{},"body":{"standards/time.html":{}}}],["time{sec",{"_index":3276,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["titl",{"_index":600,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"theme/theme-usage.html":{},"theme/theme-usage.html#添加文档":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{}}}],["titlehello",{"_index":8710,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["tl",{"_index":8449,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["tls.connectionst",{"_index":8500,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Response":{}}}],["tm",{"_index":8698,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["tmp",{"_index":4775,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"standards/io/io.html":{},"standards/io/io.html#LimitedReader-类型":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["tmp.txt",{"_index":6774,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["tmp/studygolang.txt",{"_index":7199,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["tmphier",{"_index":4765,"title":{},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadDir-函数":{}}}],["tolow",{"_index":5856,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["toml",{"_index":875,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["took",{"_index":3358,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["tool",{"_index":2608,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#性能分析":{}}}],["topic",{"_index":2633,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["toslash",{"_index":5609,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#Windows-起作用的函数":{}}}],["total",{"_index":3057,"title":{},"body":{"basic/function.html":{},"basic/function.html#可变参数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["total_count",{"_index":1527,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["totalcount",{"_index":1526,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["totalexpens",{"_index":2307,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["totalexpense(employe",{"_index":2316,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["toupper",{"_index":5858,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["trace",{"_index":3082,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/test.html":{},"basic/test.html#性能分析":{}}}],["trail",{"_index":2007,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["trailer",{"_index":8446,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["transfer",{"_index":8493,"title":{},"body":{"standards/net/http.html":{}}}],["transferencod",{"_index":8440,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["transform",{"_index":150,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["tree",{"_index":1980,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["trigger",{"_index":3397,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["trigger(i",{"_index":6142,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["trim",{"_index":5812,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#strings":{},"standards/text/strings.html#修改字符串":{}}}],["trimleft",{"_index":5870,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#修改字符串":{}}}],["trimright",{"_index":5871,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#修改字符串":{}}}],["trimspac",{"_index":5872,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#修改字符串":{}}}],["tripl",{"_index":3098,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["trucat",{"_index":7206,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#截断文件":{}}}],["true",{"_index":109,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/scope.html":{},"basic/scope.html#作用域":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#赋值":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"standards/time.html":{},"basic/basic_data.html":{},"basic/basic_data.html#布尔类型":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/data/sort.html":{},"standards/data/sort.html#数据集合排序":{}}}],["true&#xff0c;&#x5426;&#x5219",{"_index":9200,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["true&#xff1b;&#x89e6;&#x53d1;&#x4e86;&#x6216",{"_index":3573,"title":{},"body":{"standards/time.html#定时器":{}}}],["true/fals",{"_index":77,"title":{},"body":{"index.html":{},"index.html#类型转换":{}}}],["trunat",{"_index":3307,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["trunc(x",{"_index":6072,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["truncat",{"_index":3301,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{},"standards/os/os.html":{},"standards/os/os.html#截断文件":{}}}],["trw",{"_index":7285,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["tt",{"_index":1210,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["tt.string",{"_index":1212,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["tx",{"_index":4394,"title":{},"body":{"standards/database/sql.html":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["typ",{"_index":448,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["type",{"_index":23,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#声明":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/interface.html":{},"basic/interface.html#接口":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{},"basic/function.html#函数作为参数":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/strconv.html":{},"standards/text/strconv.html#转换错误处理":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/bufio.html#ReadWriter":{},"standards/os/filepath.html":{},"standards/os/filepath.html#遍历目录":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{},"standards/data/sort.html":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["type&#xff09;&#x3002",{"_index":289,"title":{},"body":{"index.html#未命名类型":{}}}],["type\\n",{"_index":133,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["tz",{"_index":3235,"title":{},"body":{"standards/time.html":{},"standards/time.html#时区":{}}}],["u",{"_index":2291,"title":{},"body":{"basic/interface.html":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["u+%04x",{"_index":4562,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["u+0061",{"_index":148,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["u+0078",{"_index":4600,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["u+4e2d",{"_index":4564,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["u+”作为前缀。比如，英文字母字符“a",{"_index":147,"title":{},"body":{"index.html":{}}}],["u.path",{"_index":8664,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["u0015",{"_index":5082,"title":{},"body":{"standards/text/unicode.html":{}}}],["u4e2d\\u6587",{"_index":4592,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["u\\n",{"_index":4616,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["uc",{"_index":149,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["ufe35",{"_index":5084,"title":{},"body":{"standards/text/unicode.html":{}}}],["uid",{"_index":7258,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["uid_t",{"_index":7227,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["uint",{"_index":3592,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["uint16",{"_index":3593,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode":{},"standards/text/unicode.html#2-5-3-utf16-包":{}}}],["uint32",{"_index":3595,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/data/math.html":{},"standards/data/math.html#类型转化函数":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-Once":{}}}],["uint64",{"_index":1187,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#封装":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/data/math.html":{},"standards/data/math.html#类型转化函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["uint8",{"_index":73,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/map.html":{},"basic/map.html#map":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["uint8(255",{"_index":71,"title":{},"body":{"index.html":{},"index.html#类型转换":{}}}],["uintptr",{"_index":447,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"standards/time.html":{},"standards/time.html#定时器":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"standards/io/io.html":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["underli",{"_index":6730,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#LimitedReader-类型":{}}}],["unexpect",{"_index":604,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["unicod",{"_index":146,"title":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode":{},"standards/text/unicode.html#unicode-包":{}},"body":{"index.html":{},"index.html#编码":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode":{},"standards/text/unicode.html#unicode-包":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["unicode&#x683c;&#x5f0f;&#xff1a;u+1234&#xff0c;&#x7b49;&#x540c;&#x4e8",{"_index":4687,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["unicode/utf16",{"_index":2125,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode":{}}}],["unicode/utf8",{"_index":5045,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#unicode":{}}}],["unicode格式：u+1234",{"_index":4561,"title":{},"body":{"standards/io/fmt.html":{}}}],["unit32",{"_index":6040,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#类型转化函数":{}}}],["univers",{"_index":152,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["unix",{"_index":3277,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{},"standards/os/filepath.html":{},"standards/os/filepath.html#filepath":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#规整化路径":{},"standards/os/filepath.html#Windows-起作用的函数":{},"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{}}}],["unixtointern",{"_index":3275,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["unknown",{"_index":1327,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["unlink",{"_index":5182,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/os/os.html":{},"standards/os/os.html#目录与链接":{}}}],["unlock",{"_index":7695,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["unmarsh",{"_index":1532,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["unnam",{"_index":103,"title":{},"body":{"index.html":{}}}],["unread",{"_index":3691,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["unreadbyt",{"_index":3689,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["unreadrun",{"_index":5383,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{}}}],["unsaf",{"_index":451,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["unsafe.point",{"_index":3668,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-Map":{}}}],["unsafe.sizeof",{"_index":1332,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{}}}],["until",{"_index":497,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#何时触发-GC":{}}}],["unus",{"_index":2123,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["up",{"_index":3369,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["updat",{"_index":2622,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["upper",{"_index":5864,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["uppercas",{"_index":5868,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#大小写转换":{}}}],["uri",{"_index":8498,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["url",{"_index":1841,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#append-和-copy":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["url,err",{"_index":579,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["url.path",{"_index":8672,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["url.url",{"_index":8433,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["url.valu",{"_index":8430,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{}}}],["urlencod",{"_index":8559,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["urlencoded&#xff1a;&#x4e3a",{"_index":8913,"title":{},"body":{"standards/net/http.html#client":{}}}],["urls2",{"_index":1842,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#append-和-copy":{}}}],["us",{"_index":97,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/time.html":{},"standards/time.html#Time":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#Seeker":{}}}],["usag",{"_index":2609,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["uselesschan",{"_index":2858,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["user",{"_index":4604,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/os/os.html":{},"standards/os/os.html#文件属性":{},"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["userag",{"_index":8464,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["userid",{"_index":8518,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["usernam",{"_index":8461,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["users/haolin/geektime/golang_puzzlers/src/puzzlers/article19/q0/demo47.go:5",{"_index":593,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{}}}],["usr/*/bin/",{"_index":5597,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#文件路径匹配":{}}}],["usr/share/zoneinfo",{"_index":3234,"title":{},"body":{"standards/time.html":{},"standards/time.html#时区":{}}}],["utc",{"_index":2460,"title":{},"body":{"standards/log.html":{},"standards/log.html#Logger":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/time.html#Time":{}}}],["utc&#xff1b",{"_index":3440,"title":{},"body":{"standards/time.html#时区":{}}}],["utf",{"_index":136,"title":{},"body":{"index.html":{},"index.html#编码":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{},"standards/io/io.html":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#其他接口":{},"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["utf16",{"_index":5047,"title":{"standards/text/unicode.html#2-5-3-utf16-包":{}},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#2-5-3-utf16-包":{}}}],["utf16.decod",{"_index":2128,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["utf8",{"_index":5046,"title":{"standards/text/unicode.html#utf8-包":{}},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{}}}],["utim",{"_index":7251,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["utimenstat",{"_index":7252,"title":{},"body":{"standards/os/os.html":{},"standards/os/os.html#文件属性":{}}}],["u（%#u",{"_index":4599,"title":{},"body":{"standards/io/fmt.html":{}}}],["v",{"_index":578,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"basic/oop.html":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#赋值":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#测试函数":{},"standards/io/fmt.html":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#堆":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{}}}],["v,index:%d\\n",{"_index":9191,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["v.calculatesalari",{"_index":2309,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["v.findvowel",{"_index":2294,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["v0.0.0",{"_index":845,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v0.3.0",{"_index":902,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.0.0",{"_index":855,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.0.3",{"_index":888,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.1.2",{"_index":873,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.2.0",{"_index":876,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.3.0",{"_index":882,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.4.7",{"_index":842,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.8.0",{"_index":867,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v2",{"_index":2131,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["v2.2.2",{"_index":909,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v6",{"_index":7741,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["v8.0.0",{"_index":905,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v\\n",{"_index":3103,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/data/big.html":{},"standards/data/big.html#big":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["val",{"_index":3056,"title":{},"body":{"basic/function.html":{},"basic/function.html#可变参数":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["val.field",{"_index":5017,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["val1",{"_index":1007,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#switch":{}}}],["val2",{"_index":1009,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#switch":{}}}],["val3,val4",{"_index":1010,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#switch":{}}}],["valid",{"_index":5091,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{}}}],["validrun",{"_index":5092,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{}}}],["validstr",{"_index":5093,"title":{},"body":{"standards/text/unicode.html":{},"standards/text/unicode.html#utf8-包":{}}}],["valu",{"_index":104,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/map.html":{},"basic/map.html#map":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/function.html":{},"basic/function.html#可变参数":{},"standards/text/strconv.html":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"standards/data/container.html":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/data/math.html":{},"standards/data/math.html#其他函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{}}}],["value1",{"_index":1372,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["value2",{"_index":1374,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["value2...valuen",{"_index":1956,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["valuen",{"_index":1959,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["var",{"_index":4,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#空标识符":{},"index.html#声明":{},"index.html#类型转换":{},"index.html#自定义类型":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/map.html":{},"basic/map.html#map":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"standards/log.html":{},"standards/log.html#Level":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"standards/text/unicode.html":{},"standards/text/unicode.html#unicode-包":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#大小写转换":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html":{},"standards/io/io.html#Reader":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#其他接口":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{}}}],["var1",{"_index":1006,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#switch":{}}}],["variabl",{"_index":2267,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#简短声明":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["variable_nam",{"_index":1954,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["vender",{"_index":827,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["vendor",{"_index":808,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["vendor&#xff0c;&#x7136;&#x540e;&#x57fa;&#x4e8",{"_index":975,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["vera",{"_index":9182,"title":{},"body":{"standards/data/sort.html":{},"standards/data/sort.html#interface-排序与查找":{}}}],["version",{"_index":2536,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["vet",{"_index":2628,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["volumenam",{"_index":5607,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#Windows-起作用的函数":{}}}],["vowel",{"_index":2290,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["vowelsfind",{"_index":2286,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["vs",{"_index":913,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#开发工具":{}}}],["v）会添加字段名%#v",{"_index":4543,"title":{},"body":{"standards/io/fmt.html":{}}}],["w",{"_index":1992,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"commands/build.html":{},"commands/build.html#工具":{},"standards/io/fmt.html":{},"standards/io/fmt.html#Print":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#ReadWriter":{},"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#WriteString-函数":{},"standards/io/io.html#TeeReader-函数":{},"standards/net/http.html":{},"standards/net/http.html#http":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{},"standards/net/http.html#中间件-Middleware":{}}}],["w.circle.center.i",{"_index":1994,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.circle.center.x",{"_index":1993,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.circle.point.i",{"_index":2000,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.circle.point.x",{"_index":1998,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.circle.radiu",{"_index":1995,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.header().set",{"_index":8650,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{}}}],["w.i",{"_index":1999,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.radiu",{"_index":2001,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.req",{"_index":8633,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["w.spoke",{"_index":1996,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.write",{"_index":8700,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#自定义处理器":{}}}],["w.write([]byte(",{"_index":6767,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#WriteString-函数":{}}}],["w.writeheader(statusbadrequest",{"_index":8651,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["w.x",{"_index":1997,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["wa",{"_index":3642,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["wait",{"_index":6162,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["waitgroup",{"_index":7749,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["wait）、单发通知（signal）和广播通知（broadcast",{"_index":7710,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["wake",{"_index":3368,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["walk",{"_index":5602,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#遍历目录":{}}}],["walkfn",{"_index":5603,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#遍历目录":{}}}],["walkfunc",{"_index":5604,"title":{},"body":{"standards/os/filepath.html":{},"standards/os/filepath.html#遍历目录":{}}}],["wang",{"_index":3636,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["wangdi",{"_index":3634,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["want",{"_index":3983,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["wc",{"_index":2112,"title":{},"body":{"basic/package.html":{},"basic/package.html#包":{}}}],["web",{"_index":4016,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["wed",{"_index":3331,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["week",{"_index":3328,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["week_from_now",{"_index":3344,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["welcom",{"_index":8712,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["well",{"_index":3374,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["wg",{"_index":7752,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["wg.add",{"_index":7753,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["wg.add(strid",{"_index":7768,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["wg.done",{"_index":7755,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["wg.wait",{"_index":7756,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["wheel",{"_index":1990,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["wheelcirclepoint",{"_index":2004,"title":{},"body":{"basic/struct.html":{}}}],["wheelx",{"_index":2003,"title":{},"body":{"basic/struct.html":{}}}],["wheel{circle{point",{"_index":2079,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["wheel{x",{"_index":2077,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["when(d",{"_index":3380,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["when+period",{"_index":3370,"title":{},"body":{"standards/time.html":{},"standards/time.html#定时器":{}}}],["whenc",{"_index":6688,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Seeker":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["whether",{"_index":8601,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["width",{"_index":3054,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["window",{"_index":795,"title":{"standards/os/filepath.html#Windows-起作用的函数":{}},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{},"basic/env_config.html#工作区":{},"basic/test.html":{},"basic/test.html#测试":{},"standards/os/filepath.html":{},"standards/os/filepath.html#filepath":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#规整化路径":{},"standards/os/filepath.html#文件路径匹配":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["withcancel",{"_index":7782,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["withdeadlin",{"_index":7783,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["within",{"_index":3262,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{}}}],["withtimeout",{"_index":7784,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["withvalu",{"_index":7785,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["wo",{"_index":6664,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["word",{"_index":1186,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#封装":{}}}],["work",{"_index":2650,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/function.html":{}}}],["work&#x2026",{"_index":3185,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["world",{"_index":438,"title":{},"body":{"advance/gc.html":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/package.html":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/interface.html":{},"basic/interface.html#接口":{},"standards/log.html":{},"standards/log.html#log":{},"standards/log.html#Logger":{},"standards/log.html#Level":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["world%q",{"_index":4582,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["world%x",{"_index":4583,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["world&#xff09;&#xff0c",{"_index":507,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["world/titl",{"_index":8711,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#中间件-Middleware":{}}}],["wqdew",{"_index":4628,"title":{},"body":{"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["wr",{"_index":5385,"title":{},"body":{"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{}}}],["write",{"_index":2697,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html":{},"standards/io/io.html#Writer":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{},"standards/net/http.html":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["write(p",{"_index":6628,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#Writer":{}}}],["writeat",{"_index":6666,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["writeat(p",{"_index":6665,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["writeat.txt",{"_index":6668,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["writebyt",{"_index":3669,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["writebyte(c",{"_index":6709,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["writefil",{"_index":4769,"title":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}},"body":{"standards/io/ioutil.html":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["writeheapprofil",{"_index":4067,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["writeproxi",{"_index":8497,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#Request":{}}}],["writer",{"_index":2280,"title":{"standards/io/io.html#Writer":{}},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio包中的数据类型":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/bufio.html#ReadWriter":{},"standards/io/io.html":{},"standards/io/io.html#io":{},"standards/io/io.html#Writer":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#WriteString-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{}}}],["writer.closewitherror(errors.new",{"_index":6748,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["writer.flush",{"_index":6681,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["writer.readfrom(fil",{"_index":6680,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["writer.writ",{"_index":6776,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["writer.write(data",{"_index":6747,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["writerat",{"_index":6658,"title":{"standards/io/io.html#ReaderAt-和-WriterAt":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["writerto",{"_index":6677,"title":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["writerun",{"_index":3670,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{}}}],["writeseek",{"_index":6725,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#其他接口":{}}}],["writestr",{"_index":3671,"title":{"standards/io/io.html#WriteString-函数":{}},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html":{},"standards/io/io.html#WriteString-函数":{},"standards/os/os.html":{},"standards/os/os.html#文件-I-O":{}}}],["writetimeout",{"_index":8693,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#HTTP-Server":{}}}],["writeto",{"_index":4072,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{},"standards/io/bufio.html":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["writeto(w",{"_index":6683,"title":{},"body":{"standards/io/io.html":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["written",{"_index":2698,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"standards/io/io.html":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["wrong",{"_index":610,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["www",{"_index":8558,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["www.runoob.com",{"_index":1967,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["x",{"_index":79,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#何时触发-GC":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#为什么需要指针":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/struct.html":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/data/container.html":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#三角函数":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#其他函数":{},"standards/os/os.html":{},"standards/os/os.html#截断文件":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"standards/data/sort.html":{},"standards/data/sort.html#Search":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["x&#xff09;&#x6253;&#x5370;&#x5b57;&#x7b26;&#x4e32;&#x6216;&#x5207;&#x7247;&#x65f6;&#xff0c;&#x5728;&#x5b57;&#x8282;&#x4e4b;&#x95f4;&#x7528;&#x7a7a;&#x683c;&#x9694;&#x5f00;0",{"_index":4723,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x&amp;^i",{"_index":1783,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{}}}],["x+2",{"_index":2395,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["x,result",{"_index":3096,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["x.(*item",{"_index":5215,"title":{},"body":{"standards/data/container.html":{},"standards/data/container.html#堆":{}}}],["x.(t",{"_index":106,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["x.(type",{"_index":135,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["x.d.e.f",{"_index":1988,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x.f",{"_index":1987,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x16",{"_index":4613,"title":{},"body":{"standards/io/fmt.html":{}}}],["x2013;&#x4e0a;&#x4e0b;&#x6587;&#xff09;&#xff0c;&#x76f4;&#x63a5;&#x5207;&#x6362;&#x4e0b;&#x4e00;&#x4e2a;&#x7a0b;&#x5e8f;&#xff0c;&#x5c31;&#x4f1a;&#x4e22;&#x5931;&#x4e0a;&#x4e00;&#x4e2a",{"_index":6181,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x2018;&#x8005;&#x2019;&#x4ee3;&#x8868;&#x7684;&#x5c31;&#x90fd;&#x662f;&#x4e00;&#x4e2a",{"_index":3949,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x2018;e&#x2019",{"_index":4987,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x2018;f&#x2019;&#xff0c;&#x6709;&#x6548;&#x6570;&#x5b57;&#x7528;&#x4e8e;&#x5c0f;&#x6570;&#x70b9;&#x4e4b;&#x540e;&#x7684;&#x4f4d;&#x6570;&#xff1b",{"_index":4988,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x2018;g&#x2019",{"_index":4989,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x2018;g&#x2019;&#xff0c;&#x5219;&#x662f;&#x6240;&#x6709;&#x7684;&#x6709;&#x6548;&#x6570;&#x5b57;&#x3002;&#x4f8b;&#x5982;&#xff1a",{"_index":4990,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x201c",{"_index":354,"title":{},"body":{"index.html#编码":{}}}],["x201c;&#x201d",{"_index":3438,"title":{},"body":{"standards/time.html#时区":{}}}],["x201c;&#x201d;&#xff0c",{"_index":5705,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x201c;&#x201d;&#xff0c;&#x4f1a;&#x8fd4;&#x56d",{"_index":5638,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x201c;&#x53d1;&#x9001;&#x8005;&#x201d",{"_index":2903,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x201c;&#x53ef;&#x64a4;&#x9500;&#x7684;&#x201d;&#x5728",{"_index":8239,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x201c;&#x5b57;&#x5178;&#x5bf9;&#x4e8e;&#x952e;&#x7684;&#x7ea6;&#x675f;&#x201d;&#x7c7b;&#x4f3c;&#xff0c;&#x8fd9;&#x91cc",{"_index":8270,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x201c;&#x5c0f;&#x7761;&#x201d;&#x4e00;&#x4f1a;&#x513f;&#x3002",{"_index":6331,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x201c;&#x7761;&#x7720;&#x201d;&#x4e00;&#x4e2a;&#x7eb3;&#x79d2;&#x518d;&#x8fdb;&#x5165;&#x4e0b;&#x4e00;&#x4e2a;&#x8fed;&#x4ee3;&#x3002",{"_index":6367,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x201c;&#x7761;&#x7720;&#x201d;&#x591a;&#x957f;&#x65f6;&#x95f4;&#x624d;&#x662f;&#x5408;&#x9002;&#x7684;&#x5462;&#xff1f;&#x5982;&#x679c;&#x201c;&#x7761;&#x7720;&#x201d;&#x592a;&#x77ed;&#xff0c;&#x5219;&#x5f88;&#x53ef;&#x80fd;&#x4e0d;&#x8db3;&#x4ee5;&#x8ba9;&#x5176;&#x4ed6;&#x7684",{"_index":6335,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x201c;&#x7aa5;&#x89c6;&#x201d",{"_index":5489,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x201c;&#x7c7b;&#x578b;&#x201d;&#x53ef;&#x4ee5;&#x7701;&#x7565;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x7c7b;&#x578b;&#xff0c;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8868;&#x8fbe;&#x5f0f;&#x63a8;&#x5bfc;&#x51fa;&#x7c7b;&#x578b;&#x3002",{"_index":1346,"title":{},"body":{"basic/constant.html#常量":{}}}],["x201c;&#x7ed9;&#x5b9a;&#x7684;&#x5143;&#x7d20;&#x201d;&#x90fd;&#x662f",{"_index":5244,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x201c;&#x96f6;&#x503c;&#x201d;&#xff0c;&#x6240;&#x6307;&#x5e76;&#x975e;&#x662f;&#x7a7a;&#x503c;&#xff0c;&#x800c;&#x662f;&#x4e00;&#x79cd;&#x201c;&#x53d8;&#x91cf;&#x672a;&#x586b;&#x5145;&#x524d;&#x201d;&#x7684;&#x9ed8;&#x8ba4;&#x503c;&#xff0c;&#x901a;&#x5e38;&#x4e3a",{"_index":2400,"title":{},"body":{"basic/var.html#变量":{}}}],["x201c;0&#x201d",{"_index":4920,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x201c;0x&#x201d",{"_index":4918,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x201c;128&#x201d",{"_index":4893,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x201c;a&#x201d;&#xff0c;&#x5c06;&#x4f1a;&#x4f7f;&#x7528",{"_index":5791,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x201c;america/new_york&#x201d;&#x3002",{"_index":3445,"title":{},"body":{"standards/time.html#时区":{}}}],["x201c;block&#x201d;&#xff0c;&#x4ece;&#x800c;&#x5f97;&#x5230;&#x4e00",{"_index":4293,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x201c;dir&#x201d;&#xff0c;&#x8be5;&#x76ee;&#x5f55;&#x4e0b;&#x6709;&#x6587;&#x4ef6",{"_index":5790,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x201c;dir/a&#x201d",{"_index":5792,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x201c;f&#x201d",{"_index":4643,"title":{},"body":{"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{}}}],["x201c;go",{"_index":3957,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x201c;hello&#x201d",{"_index":9049,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x201c;local&#x201d;&#xff0c;&#x8fd4;&#x56d",{"_index":3441,"title":{},"body":{"standards/time.html#时区":{}}}],["x201c;s&#x201d",{"_index":4645,"title":{},"body":{"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{}}}],["x201c;utc&#x201d;&#xff0c;&#x8fd4;&#x56d",{"_index":3439,"title":{},"body":{"standards/time.html#时区":{}}}],["x201d",{"_index":8957,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x201d;&#x53f3;&#x8fb9;&#x7684;&#x6574;&#x6570;&#x7684;&#x542b;&#x4e49;&#x662f;&#xff0c;&#x4ee5;&#x591a;&#x5c11;&#x4e2a;&#x6bd4;&#x7279;&#x4f4d;&#x4f5c;&#x4e3a;&#x4e00;&#x4e2a;&#x7f16;&#x7801;&#x5355;&#x5143",{"_index":355,"title":{},"body":{"index.html#编码":{}}}],["x201d;404",{"_index":8956,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x201d;transfer",{"_index":8835,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x2026",{"_index":1042,"title":{},"body":{"basic/flow.html#switch":{},"standards/text/strings.html#strings":{}}}],["x2026;&#xff09;&#xff0c;&#x5f88;&#x5feb;&#x5c31;&#x4f1a;&#x5bfc",{"_index":1322,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x2026;`&#xff0c;&#x4f7f;&#x7528;&#x53cd;&#x5f15;&#x53f7;&#x4ee3;&#x66ff;&#x53cc;&#x5f15;&#x53f7;&#x3002;&#x5728;&#x539f;&#x751f;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x9762;&#x503c;&#x4e2d;&#xff0c;&#x6ca1;&#x6709;&#x8f6c;&#x4e49;&#x64cd;&#x4f5c;&#xff1b;&#x5168;&#x90e8;&#x7684;&#x5185;&#x5bb9;&#x90fd;&#x662f;&#x5b57;&#x9762;&#x7684;&#x610f;&#x601d;&#xff0c",{"_index":3735,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x2167",{"_index":5135,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x3001",{"_index":171,"title":{},"body":{"index.html#Golang-介绍":{},"index.html#make-和-new":{},"index.html#编码":{},"basic/map.html#map":{},"basic/json.html#序列化":{},"basic/operator.html#算术运算符":{},"basic/scope.html#作用域":{},"basic/var.html#变量":{},"basic/function.html#参数":{},"standards/time.html#time":{},"basic/basic_data.html#字符串":{},"basic/test.html#性能测试函数中的计时器":{},"standards/database/sql.html#类型":{},"standards/text/strconv.html#字符串转为整型":{},"standards/os/filepath.html#Windows-起作用的函数":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x3001;&#x5bf9;&#x63a5;&#x7cfb;&#x7edf;&#x7ea7;&#x7ebf;&#x7a0b;&#x7684",{"_index":6228,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3001;&#x5f52;&#x6863;&#xff08;&#x538b;&#x7f29;&#x5305;&#xff09;&#x3001;&#x6570;&#x636e;&#x5e93;&#x8fde;&#x63a5;&#x3001",{"_index":6930,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x3001;&#x6307;&#x9488;&#x3001",{"_index":2406,"title":{},"body":{"basic/var.html#变量":{}}}],["x3002",{"_index":223,"title":{},"body":{"index.html#命名":{},"index.html#声明":{},"index.html#make-和-new":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/mm.html#回收":{},"advance/gc.html#何时触发-GC":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/array.html#数组":{},"basic/env_config.html#安装":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"basic/flow.html#for":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/map.html#map":{},"basic/pointer.html#指针":{},"basic/pointer.html#为什么需要指针":{},"basic/operator.html#算术运算符":{},"basic/operator.html#关系运算符":{},"basic/slice.html#slice":{},"basic/slice.html#切片操作":{},"basic/slice.html#怎样估算切片容量的增长":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html#包":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#包声明":{},"basic/scope.html#作用域":{},"basic/interface.html#接口":{},"basic/var.html#变量":{},"basic/var.html#赋值":{},"standards/log.html#分类":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"commands/build.html#工具":{},"concurrent/channel.html#channel":{},"basic/function.html#参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html#time":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#布尔类型":{},"basic/basic_data.html#字符串":{},"basic/test.html#测试":{},"basic/test.html#覆盖率":{},"basic/test.html#go-test-命令执行的主要测试流程":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#性能分析":{},"standards/database/sql.html#sql":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html#fmt-包":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#整型转为字符串":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/io/bufio.html#bufio包中的数据类型":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html#filepath":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#规整化路径":{},"standards/os/filepath.html#遍历目录":{},"standards/text/strings.html#分割字符串":{},"concurrent/goroutine.html#并发和并行":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html#io":{},"standards/io/io.html#Reader":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#Closer":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#WriteString-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"concurrent/sync_lock.html#sync-Map":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html#已经支持的内部数据类型排序":{},"standards/data/sort.html#interface-排序与查找":{}}}],["x3002;&#x4e00;&#x4e2a;&#x89e3;&#x51b3;&#x65b9;&#x6848;&#x662f;&#xff1a",{"_index":8166,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x3002;&#x4e00;&#x7aef;&#x7684;&#x8bfb;&#x53d6;&#x5339;&#x914d;&#x53e6;&#x4e00;&#x7aef;&#x7684;&#x5199;&#x5165;&#xff0c;&#x76f4;&#x63a5;&#x5728;&#x8fd9;&#x4e24;&#x7aef;&#x4e4b;&#x95f4;&#x590d;&#x5236;&#x6570;&#x636e;&#xff1b;&#x5b83;&#x6ca1;&#x6709;&#x5185;&#x90e8;&#x7f13;&#x5b58;&#x3002;&#x5b83;&#x5bf9;&#x4e8e;&#x5e76;&#x884c;&#x8c03;&#x7528",{"_index":7033,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x3002;&#x4e00;&#x822c;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x4f60",{"_index":1925,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x3002;&#x4e0d;&#x518d;&#x4f7f;&#x7528;&#x7684;&#x5185;&#x5b58;&#xff0c;&#x653e;&#x5230;&#x5408;&#x9002;&#x7684;&#x4f4d;&#x7f6e;&#x7b49;&#x5f85;&#x518d;&#x6b21",{"_index":429,"title":{},"body":{"advance/mm.html#回收":{}}}],["x3002;&#x4e0d;&#x540c;&#x7cfb;&#x7edf;&#xff0c;&#x8def;&#x5f84;&#x8868;&#x793a;&#x65b9;&#x5f0f;&#x6709;&#x6240;&#x4e0d;&#x540c;&#xff0c;&#x6bd4;&#x5982",{"_index":5617,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x867d;&#x7136;&#x7b80;&#x5355;&#xff0c;&#x4f46;&#x8fd8;&#x662f;&#x6709;&#x4e00;&#x4e9b;&#x503c;&#x5f97;&#x6ce8;&#x610f;&#x7684;&#x5730;&#x65b9;&#x7684;&#x3002",{"_index":8042,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x9488;&#x5bf9",{"_index":8003,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x3002;&#x4e3a;&#x4e86;&#x8bbf;&#x95ee;&#x76f8;&#x540c",{"_index":8776,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x3002;&#x4e4b;&#x540e;&#xff0c;&#x5b83;&#x4f1a;&#x628a;&#x539f;&#x5bb9;&#x5668;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x5b57;&#x8282;&#x5168;&#x90e8;&#x62f7;&#x8d1d;&#x5230;&#x65b0;&#x5bb9;&#x5668;&#x4e2d;&#x3002",{"_index":3836,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x5b83;&#x65e2;&#x4e0d;&#x53ef;&#x4ee5;&#x88ab;&#x64a4;&#x9500;&#xff08",{"_index":8220,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x3002;&#x4ee5",{"_index":356,"title":{},"body":{"index.html#编码":{}}}],["x3002;&#x4f7f;&#x7528;&#x672c;&#x51fd;&#x6570;&#x4ee3;&#x66ff",{"_index":8783,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x3002;&#x5173;&#x952e;&#x95ee;&#x9898;&#x662f;&#xff0c;&#x539f;&#x6570;&#x7ec4;&#x4f1a;&#x56e0",{"_index":3215,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x3002;&#x5176;&#x4e2d;&#x7684",{"_index":344,"title":{},"body":{"index.html#编码":{},"basic/error.html#Panic-异常":{}}}],["x3002;&#x5176;&#x4e2d;&#xff0c",{"_index":4891,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x3002;&#x5185;&#x5b58;&#x5730;&#x5740;&#x662f;&#x5185;&#x5b58;&#x4e2d;&#x6bcf;&#x4e2a;&#x5b57;&#x8282;&#x5355;&#x5143;&#x7684;&#x552f;&#x4e00;&#x7f16;&#x53f7;&#xff0c;&#x800c;&#x6307;&#x9488;&#x662f;&#x4e00;&#x4e2a;&#x5b9e;&#x4f53;&#x3002;&#x6307;&#x9488;&#x4e5f;&#x4f1a;&#x5206;&#x914d;&#x5185;&#x5b58;&#x7a7a;&#x95f4;&#xff0c;&#x76f8;&#x5f53;&#x4e8e;&#x4e00;&#x4e2a",{"_index":1678,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x3002;&#x524d;&#x8005;&#x662f;&#xff08;&#x4fbf;&#x4e8e;&#x6211;&#x4eec;&#x4eba;&#x7c7b;&#x7406;&#x89e3;&#x7684;&#xff09;&#x5916;&#x90e8;&#x5c55;&#x73b0;&#xff0c;&#x540e;&#x8005;&#x662f;&#xff08;&#x4fbf;&#x4e8e;&#x8ba1;&#x7b97;&#x673a;&#x7cfb;&#x7edf;&#x7406;&#x89e3;&#x7684;&#xff09",{"_index":3954,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x524d;&#x8005;&#x7528;&#x4e8e;&#x5728;&#x5f53;&#x524d;&#x7684;&#x6c60;&#x4e2d;&#x5b58;&#x653e;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#xff0c;&#x5b83;&#x63a5;&#x53d7;&#x4e00;&#x4e2a",{"_index":8288,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x3002;&#x5305;&#x542b;&#x4e86;&#x6210;&#x5343;&#x4e0a;&#x4e07;&#x7684;&#x5f00;&#x6e90;&#x5305;&#x7684;&#x68c0;&#x7d22;&#x5de5;&#x5177;&#x3002",{"_index":2817,"title":{},"body":{"commands/build.html#工具":{}}}],["x3002;&#x5305;&#x7684;&#x540d;&#x5b57;&#x5305;&#x542b;&#x7248;&#x672c;&#x53f7;&#x540e;&#x7f00",{"_index":2203,"title":{},"body":{"basic/package.html#包声明":{}}}],["x3002;&#x533a;&#x5206;&#x5927;&#x5c0f;&#x5199;&#x3002",{"_index":220,"title":{},"body":{"index.html#命名":{}}}],["x3002;&#x5373;&#xff1a",{"_index":6963,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x3002;&#x539f;&#x56e0;&#x5728;&#x4e8e;&#xff0c;&#x5b83;&#x4eec;&#x90fd;&#x628a;&#x57fa;&#x4e8e;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5207;&#x7247;&#x76f4;&#x63a5;&#x8fd4",{"_index":3923,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x53ea;&#x8981;&#x5b9e;&#x73b0;&#x63a5;&#x53e3;&#x7684",{"_index":9074,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x3002;&#x540c;&#x6837;&#x7684;&#xff0c",{"_index":2932,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x3002;&#x5426;&#x5219;&#x5e94;&#x8be5;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":3170,"title":{},"body":{"basic/function.html#错误":{}}}],["x3002;&#x5426;&#x5219;&#xff0c;&#x53ea;&#x8981;&#x5728;&#x4efb;&#x4f55;&#x526f;&#x672c;&#x4e0a;&#x8c03;&#x7528;&#x4e0a;&#x8ff0;&#x65b9",{"_index":3840,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x56e0;&#x4e3a",{"_index":297,"title":{},"body":{"index.html#类型断言":{},"standards/net/http.html#中间件-Middleware":{}}}],["x3002;&#x56e0;&#x4e3a;&#x672c;&#x51fd;&#x6570;&#x5b9a;&#x4e49;&#x4e3a",{"_index":4817,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x3002;&#x56e0;&#x4e3a;&#x672c;&#x65f6;&#x95f4;&#x70b9;&#x4e00;&#x822c;&#x4e0d;&#x4f1a;&#x51fa;&#x73b0;&#x5728;&#x4f7f;&#x7528;&#x4e2d;&#xff0c",{"_index":3459,"title":{},"body":{"standards/time.html#Time":{}}}],["x3002;&#x56e0;&#x6b64;&#x5e38;&#x91cf;&#x8868;&#x8fbe;&#x5f0f;&#x4e2d;&#xff0c;&#x51fd;&#x6570;&#x5fc5;&#x987b;&#x662f;&#x5185;&#x7f6e;&#x51fd;&#x6570;&#x3002;&#x5982",{"_index":1353,"title":{},"body":{"basic/constant.html#常量":{}}}],["x3002;&#x56e0;&#x6b64;&#xff0c",{"_index":1061,"title":{},"body":{"basic/flow.html#switch":{}}}],["x3002;&#x5728",{"_index":341,"title":{},"body":{"index.html#编码":{},"basic/error.html#Panic-异常":{},"concurrent/channel.html#channel":{}}}],["x3002;&#x5728;&#x4ee3;&#x7801;&#x4e2d;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":6208,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3002;&#x5982;&#x679c;&#x4e00;&#x4e2a",{"_index":7081,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x3002;&#x5982;&#x679c;&#x4e00;&#x884c;&#x5927;&#x4e8e;&#x7f13;&#x5b58;&#xff0c",{"_index":5478,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x3002;&#x5982;&#x679c;&#x4f60;&#x5b9e;&#x5728;&#x62ff;&#x4e0d;&#x51c6;&#xff0c;&#x90a3;&#x4e48;&#x53ef;&#x4ee5;&#x5148;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":8350,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x3002;&#x5982;&#x679c;&#x4f60;&#x5c1d;&#x8bd5;&#x4f7f;&#x7528;&#x4e00;&#x4e2a",{"_index":1466,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x5982;&#x679c;&#x4f60;&#x60f3;&#x8981;&#x5b9e;&#x65f6;&#x7684;&#x4fe1;&#x606f;&#xff0c;&#x90a3;&#x4e48;&#x53ef;&#x4ee5;&#x8c03;&#x7528",{"_index":4281,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x3002;&#x5982;&#x679c;&#x8be5;&#x503c;&#x5b58;&#x5728;&#x7684;&#x8bdd;&#xff0c;&#x5219;&#x5bf9;&#x4e8",{"_index":8873,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x3002;&#x5982;&#x679c;&#x8be5;&#x5143;&#x7d20;&#x6ca1;&#x6709",{"_index":5654,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x3002;&#x5982;&#x6b64;&#x4e00;&#x6765;&#xff0c",{"_index":8056,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x3002;&#x5b83;&#x4eec;&#x6240;&#x5c5e;&#x7684",{"_index":2984,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x3002;&#x5b83;&#x5728;&#x6267;&#x884c;&#x5b8c",{"_index":8197,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x3002;&#x5b83;&#x5b9a;&#x4e49;&#x4e86;&#x4e0d;&#x540c;&#x81ea;&#x7136;&#x8bed;&#x8a00;&#x7684;&#x6587;&#x672c;&#x6570;&#x636e;&#x5728;&#x56fd;&#x9645;&#x95f4;&#x4ea4;&#x6362;&#x7684;&#x7edf;&#x4e00;&#x65b9;&#x5f0f;&#xff0c;&#x5e76;&#x4e3a;&#x5168;&#x7403;&#x5316;&#x8f6f;&#x4ef6;&#x521b;&#x5efa;&#x4e86;&#x4e00;&#x4e2a;&#x91cd;&#x8981;&#x7684;&#x57fa;&#x7840;&#x3002",{"_index":337,"title":{},"body":{"index.html#编码":{}}}],["x3002;&#x5b83;&#x5bf9;&#x5e94;&#x7684;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x662f",{"_index":7415,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x3002;&#x5b83;&#x8fd4;&#x56de;&#x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#x6570;&#x548c;&#x53ef;&#x80fd;&#x9047;&#x5230;&#x7684;&#x4efb;&#x4f55;&#x9519;&#x8bef;&#x3002",{"_index":7413,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x3002;&#x5b83;&#x8fd4;&#x56de;&#x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#x6570;&#x548c;&#x53ef;&#x80fd;&#x9047;&#x5230;&#x7684;&#x4efb;&#x4f55;&#x9519;&#x8bef;&#x3002;&#x6587;&#x4ef6;&#x7ec8;&#x6b62;&#x6807;&#x5fd7;&#x662f;&#x8bfb;&#x53d6",{"_index":7407,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x3002;&#x5b9e;&#x9645;&#x4e0a;&#xff0c;&#x5b83;&#x4eec;&#x90fd;&#x662f;&#x901a;&#x8fc7",{"_index":3811,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x5bf9;&#x4e8e;&#x8fd4;&#x56de;&#x503c;&#xff0c",{"_index":7092,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x3002;&#x5bf9;&#x4e8e;&#x8fd4;&#x56de;&#x503c;&#xff0c;&#x5f53;&#x4e14;&#x4ec5;&#x5f53",{"_index":7086,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x3002;&#x5e38;&#x91cf;&#x3001;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x5b57;&#x9762;&#x91cf;&#x3001;&#x5b57;&#x7b26;&#x4e32;&#x53d8;&#x91cf;&#x7684;&#x503c;&#x3001;&#x51fd;&#x6570;&#x4ee5;&#x53ca;&#x65b9;&#x6cd5;&#x7684;&#x5b57;&#x9762;&#x91cf;&#x90fd;&#x662f;&#x5982;&#x6b64;&#x3002",{"_index":1765,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x3002;&#x5e76;&#x4e14;&#x4e4b;&#x540e;&#x7684",{"_index":6806,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x3002;&#x5e76;&#x884c;&#x662f;&#x5e76;&#x53d1;&#x8bbe;&#x8ba1;&#x7684",{"_index":6177,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x3002;&#x5f53",{"_index":711,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x3002;&#x5f53;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x5bfc;&#x5165;&#x5305;&#xff0c",{"_index":2180,"title":{},"body":{"basic/package.html#点操作":{}}}],["x3002;&#x5f53;&#x6211;&#x4eec;&#x8bd5;&#x56fe;&#x5728;&#x4e00;&#x4e2a;&#x503c;&#x4e3a",{"_index":1474,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x5f53;&#x6307;&#x9488;&#x6307;&#x5411;&#x540c;&#x4e00;&#x4e2a;&#x53d8;&#x91cf;&#x6216;&#x8005",{"_index":1692,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x3002;&#x5f53;&#x7136;&#x4e86;&#xff0c;&#x8fd9;&#x91cc;&#x6240;&#x8bf4;&#x7684;&#x201c;&#x660e;&#x663e;&#x6ede;&#x540e;&#x201d;&#x662f;&#x5bf9;&#x4e8e;&#x8ba1;&#x7b97;&#x673a",{"_index":6287,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3002;&#x6211;&#x4eec;&#x4e00;&#x5b9a;&#x4e0d;&#x8981;&#x5fd8;&#x8bb0;&#x521d;&#x59cb;&#x5316;&#x901a;&#x9053",{"_index":2989,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x3002;&#x6211;&#x4eec;&#x53ef",{"_index":8077,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5728;&#x9700;&#x8981;&#x7b49;&#x5f85;&#x7684",{"_index":8084,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x628a;&#x5b83;&#x4eec;&#x7edf;&#x79f0",{"_index":3820,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x731c;&#x60f3;&#x5230;&#x8fd9;&#x4e24;&#x4e2a;&#x51fd;&#x6570;&#x5c31;&#x662f;&#x64cd;&#x4f5c;&#x591a;&#x4e2a",{"_index":7103,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8fd9;&#x4e48;&#x505a;&#xff1a",{"_index":3524,"title":{},"body":{"standards/time.html#Time":{}}}],["x3002;&#x6240;&#x4ee5;&#x5728;&#x5224;&#x65ad;&#x7c7b;&#x578b;&#x65f6;&#xff0c",{"_index":5034,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["x3002;&#x6240;&#x4ee5;&#xff0c;&#x56e0",{"_index":7989,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x3002;&#x6240;&#x4ee5;&#xff0c;&#x5b83;&#x5e76;&#x4e0d;&#x662f;&#x4f20;&#x7edf;&#x610f;&#x4e49;&#x4e0a;&#x7684;&#x5feb;&#x7167;&#xff0c;&#x5b83;&#x7684;&#x53ea;&#x8bfb;&#x7279;&#x6027;&#x53ea;&#x662f;&#x5bf9;&#x4e8e;&#x5176;&#x4e2d;&#x952",{"_index":8365,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x3002;&#x6240;&#x8c13;&#x7684;&#x5e95;&#x5c42;&#x8bfb;&#x53d6;&#x5668;&#x662f;&#x6307",{"_index":5410,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x3002;&#x628a;&#x5b83;&#x5f53;&#x6210;&#x53c2;&#x6570;&#x4f20;&#x7ed9",{"_index":9083,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x3002;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c",{"_index":365,"title":{},"body":{"index.html#编码":{}}}],["x3002;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x952e;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x5fc5;&#x987b;&#x8981;&#x652f;&#x6301;&#x5224;&#x7b49;&#x64cd;&#x4f5c;&#x3002;&#x7531;&#x4e8",{"_index":1447,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x663e;&#x800c;&#x6613;&#x89c1;&#xff0c",{"_index":1311,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x3002;&#x672c;&#x65b9;&#x6cd5;&#x4f1a;&#x8003;&#x8651;&#x8bf7;&#x6c42;&#x7684;&#x5982;&#x4e0b;&#x5b57;&#x6bb5;&#xff1a;host",{"_index":8829,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x3002;&#x6807;&#x8bb0;&#x6e05;&#x7406;&#x6700;&#x5178;&#x578b;&#x7684;&#x505a;&#x6cd5;&#x662f;&#x4e09;&#x2f8a;&#x6807;&#x8bb0;&#x3002;&#x8fdb;&#x884c;&#x5783;&#x573e;&#x56de;&#x6536;&#x65f6;&#x4f1a",{"_index":506,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x3002;&#x6b63;&#x56e0;&#x4e3a;&#x5982;&#x6b64;&#xff0c",{"_index":1053,"title":{},"body":{"basic/flow.html#switch":{}}}],["x3002;&#x6bd4;&#x5982",{"_index":3143,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x3002;&#x6bd4;&#x5982;&#xff0c;&#x5982;&#x679c;&#x4e00;&#x4e2a",{"_index":6507,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x3002;&#x6bd4;&#x5982;&#xff0c;&#x5bf9;&#x4e8e;&#x4e00;&#x4e2a;&#x82f1;&#x6587;&#x5b57;&#x7b26;&#xff0c",{"_index":367,"title":{},"body":{"index.html#编码":{}}}],["x3002;&#x6ce8;&#x610f;&#x5982;&#x679c;&#x5bfc;&#x5165;&#x4e86;&#x4e0d;&#x9700;&#x8981;&#x7684;&#x5305;&#xff0c;&#x6216;&#x8005;&#x7f3a;&#x5c11;&#x4e86;&#x5fc5;&#x8981;&#x7684;&#x5305;&#xff0c",{"_index":2151,"title":{},"body":{"basic/package.html#import":{}}}],["x3002;&#x6ce8;&#x610f;&#xff0c",{"_index":6960,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x3002;&#x6ce8;&#x610f;&#xff0c;&#x8fd9;&#x91cc;&#x8981;&#x6c42",{"_index":7648,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x3002;&#x7531;&#x4e8e",{"_index":7057,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x3002;&#x76f8;&#x53cd;&#xff0c;&#x7c7b;&#x578b",{"_index":2957,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x3002;&#x7b97;&#x672f;&#x64cd;&#x4f5c;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x5c5e;&#x4e8e;&#x4e34;&#x65f6;&#x7ed3;&#x679c;&#xff0c;&#x9488;&#x5bf9;&#x503c;&#x5b57;&#x9762;&#x91cf;&#x7684;&#x8868;&#x8fbe;&#x5f0f;&#x7ed3;&#x679c;&#x503c;&#x4e5f;&#x5c5e;&#x4e8e;&#x4e34;&#x65f6;&#x7ed3;&#x679c;&#x3002",{"_index":1769,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x3002;&#x800c",{"_index":8993,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x3002;&#x81f3;&#x6b64;&#x6574;&#x4e2a",{"_index":9050,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x3002;&#x867d;&#x7136;&#x8fd9;&#x91cc;&#x7684",{"_index":4467,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x3002;&#x88c1;&#x526a;&#x64cd;&#x4f5c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5207;&#x7247;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x800c;&#x62fc;&#x63a5;&#x64cd;&#x4f5c;&#x53ef;&#x4ee5;&#x7528;&#x64cd;&#x4f5c;&#x7b26",{"_index":3785,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x8981;&#x5728;&#x5916;&#x90e8;&#x5f15;&#x7528;&#x8be5;&#x51fd;&#x6570;&#xff0c;&#x5fc5;&#x987b;&#x663e;&#x5f0f;&#x4f7f;&#x7528",{"_index":2191,"title":{},"body":{"basic/package.html#包声明":{}}}],["x3002;&#x89e3;&#x6790;&#x7ed3;&#x679c;&#x4e2d;&#xff0c",{"_index":8794,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x3002;&#x8be5;&#x6807;&#x8bb0;&#x7684;&#x503c",{"_index":4178,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x3002;&#x8be5;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x5e76;&#x4e0d;&#x9002;&#x7528;&#x4e8e;&#x6240;&#x6709;&#x7c7b;&#x578b;&#xff0c;&#x4e0d;&#x5141;&#x8bb8;&#x5c06",{"_index":7475,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x3002;&#x8fd4;&#x56de;&#x4e5f;&#x662f;&#x4e00;&#x4e2a",{"_index":9106,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x3002;&#x8fd4;&#x56de;&#x7684;&#x7ed3;&#x679c;&#x662f;&#x6839;&#x636e;&#x6587;&#x4ef6;&#x540d;&#x5b57;&#x5178;&#x987a;&#x5e8f;&#x8fdb;&#x884c;&#x4e86;&#x6392;&#x5e8f;&#x7684;&#x3002",{"_index":5769,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x3002;&#x8fd9;&#x4e24;&#x79cd;&#x65b9;&#x6cd5;&#x90fd;&#x53ef;&#x4ee5;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x7a7a;&#x7684",{"_index":1481,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x8fd9;&#x4e2a",{"_index":7856,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x3002;&#x8fd9;&#x4e2a;&#x4e3b",{"_index":6253,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3002;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x4e5f;&#x7b97;&#x662f;&#x4e2d;&#x95f4;&#x4ef6;&#x3002",{"_index":9101,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x3002;&#x8fd9;&#x4e2a;&#x58f0;&#x660e;&#x8868;&#x793a;&#x8fd9;&#x4e2a;&#x6e90",{"_index":195,"title":{},"body":{"index.html#package":{}}}],["x3002;&#x8fd9;&#x4e2a;&#x662f;&#x6b7b;&#x9501;&#x7684;&#x9519;&#x8bef;&#xff0c;&#x56e0;&#x4e3a",{"_index":2914,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x3002;&#x8fd9;&#x4e9b;&#x65b9;&#x6cd5;&#x90fd;&#x662f;&#x7528;&#x4e8e;&#x64cd;&#x4f5c;&#x5f53;&#x524d;&#x7684;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570",{"_index":4230,"title":{},"body":{"basic/test.html#性能测试函数中的计时器":{}}}],["x3002;&#x8fd9;&#x548c",{"_index":7126,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x3002;&#x8fd9;&#x5c31;&#x662f;&#x6240;&#x8c13",{"_index":6295,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3002;&#x8fd9;&#x5c31;&#x76f8;&#x5f53;&#x4e8e;&#x6574;&#x4e2a;&#x7a0b;&#x5e8f;&#x90fd;&#x5df2;&#x7ecf;&#x505c;&#x6ede;&#x4e0d;&#x524d;&#x4e86;&#x3002",{"_index":7879,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x3002;&#x8fd9;&#x610f;&#x5473;&#x7740;&#x5b83;&#x62e5;&#x6709;&#x5bf9;&#x5e95;&#x5c42;&#x6570;&#x636e;&#x7ed3;&#x6784;&#x7684;&#x5f15;&#x7528;&#xff0c",{"_index":1396,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x8fd9;&#x662f;&#x56e0;&#x4e3a;&#x7ed3;&#x6784;&#x4f53;&#x7684;&#x6210;&#x5458",{"_index":1555,"title":{},"body":{"basic/json.html#序列化":{}}}],["x3002;&#x8fd9;&#x663e;&#x7136;&#x662f;&#x4e0d;&#x5408;&#x7406;&#x7684;&#xff0c;&#x4f46;&#x662f;&#x5374;&#x901a;&#x8fc7;&#x4e86;&#x6d4b;&#x8bd5;&#x3002;&#x6240;&#x4ee5;&#x4f7f;&#x7528",{"_index":5043,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x3002;&#x8fd9;&#x6837;&#x53ef;&#x4ee5;&#x786e;&#x5b9a;&#x8bed;&#x53e5;&#x548c;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x660e;&#x786e;&#x542b;&#x4e49;&#x3002",{"_index":242,"title":{},"body":{"index.html#类型转换":{}}}],["x3002;&#x8fd9;&#x786e;&#x4fdd;&#x6c38;&#x8fdc;&#x4e0d;&#x4f1a;&#x83b7;&#x5f97",{"_index":1483,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x8fd9;&#x79cd;&#x5728;&#x8bed;&#x8a00;&#x5c42;&#x9762;&#x81ea;&#x5e26;&#x8c03;&#x5ea6;&#x5668;&#x7684;&#xff0c;&#x6211;&#x4eec;&#x79f0",{"_index":6467,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x3002;&#x8fd9;&#x79cd;&#x65b9;&#x5f0f;&#x6bcf;&#x6b21;&#x8fd0;&#x7b97;&#x90fd;&#x4f1a;&#x4ea7;&#x751f;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5b57",{"_index":3747,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x8fd9;&#x91cc;&#x7684;&#x8ba1;&#x6570;&#x5468;&#x671f;&#x6307;&#x7684;&#x662f;&#x8fd9;&#x6837;&#x4e00;&#x4e2a;&#x8fc7;&#x7a0b;&#xff1a;&#x8be5;&#x503c;&#x4e2d;&#x7684;&#x8ba1;&#x6570;&#x5668;&#x503c;&#x7531",{"_index":8102,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x3002;&#x91cd;&#x542f;&#x547d;&#x4ee4;&#x7a97;&#x53e3;&#x751f;&#x6548;&#x3002",{"_index":927,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x3002;&#x91cd;&#x590d;&#x8c03;&#x7528;&#x672c;&#x65b9;&#x6cd5;&#x662f;&#x65e0;&#x610f;&#x4e49;&#x7684;&#x3002",{"_index":8800,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x3002;&#x9488;&#x5bf9;&#x8f93;&#x51fa;&#x6d41;&#x7684",{"_index":1587,"title":{},"body":{"basic/json.html#序列化":{}}}],["x3002;&#x9664;&#x4e86;&#x4ec",{"_index":6212,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3002;&#x9664;&#x975e;&#x6211;&#x4eec;&#x5728;&#x4e00;&#x4e9b;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x4e2d;&#x663e;&#x5f0f;&#x5730;&#x8c03;&#x7528",{"_index":4221,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x3002;&#x987e;&#x540d;&#x601d;&#x4e49;&#xff0c",{"_index":8227,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x3002;&#xff08;&#x5982;&#x679c;&#x62c9;&#x53d6;&#x5305;&#x5931;&#x8d25;&#xff0c;&#x4f1a;&#x62a5",{"_index":987,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x3002;go",{"_index":2064,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{},"concurrent/goroutine.html#goroutine-1":{}}}],["x3c0",{"_index":4366,"title":{},"body":{"standards/data/big.html#big":{}}}],["x4e00;&#x4e2a",{"_index":304,"title":{},"body":{"index.html#类型断言":{},"basic/map.html#map":{},"basic/slice.html#slice":{},"commands/build.html#工具":{},"standards/time.html#Time":{},"basic/basic_data.html#字符串":{},"standards/data/container.html#环":{},"concurrent/goroutine.html#并发和并行":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e00;&#x4e2a;&#x51fd;&#x6570;&#x628a",{"_index":2340,"title":{},"body":{"basic/interface.html#接口":{}}}],["x4e00;&#x4e2a;&#x5207;&#x7247;&#x5728;&#x672a;&#x521d;&#x59cb;&#x5316;&#x4e4b;&#x524d;&#x9ed8;&#x8ba4;&#x4e3a",{"_index":1871,"title":{},"body":{"basic/slice.html#slice":{}}}],["x4e00;&#x4e2a;&#x5207;&#x7247;&#x65e0;&#x6cd5;&#x5bb9;&#x7eb3;&#x66f4;&#x591a;&#x7684;&#x5143;&#x7d20;&#xff0c;go",{"_index":1922,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x4e00;&#x4e2a;&#x5207;&#x7247;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x6c38;&#x8fdc;&#x4e0d;&#x4f1a;&#x88ab;&#x66ff;&#x6362;&#x3002;&#x4e3a;&#x4ec0;&#x4e48;&#xff1f;&#x867d;&#x7136;&#x5728;&#x6269;&#x5bb9;&#x7684;&#x65f6;&#x5019",{"_index":1936,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x4e00;&#x4e2a;&#x539f;&#x751f;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x9762;&#x503c;&#x5f62;&#x5f0f;&#x662f",{"_index":3734,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e00;&#x4e2a;&#x53ef;&#x4ee5;&#x88ab;&#x7f16;&#x8bd1;&#x5668;&#x4fee;&#x6539;&#x7684;&#x5e38;&#x91cf",{"_index":1358,"title":{},"body":{"basic/constant.html#iota":{}}}],["x4e00;&#x4e2a;&#x547d;&#x540d;&#x4e3a",{"_index":2046,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x4e00;&#x4e2a;&#x5957;&#x8def;&#x3002",{"_index":1826,"title":{},"body":{"basic/operator.html#赋值运算符":{}}}],["x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#x7684;&#x53d8;&#x91cf;&#x6216;&#x8005;&#x65b9;&#x6cd5;&#x5982;&#x679c;&#x5bf9;&#x8c03;&#x7528;&#x65b9;&#x662f;&#x4e0d;&#x53ef;&#x89c1;&#x7684;&#x8bdd;&#xff0c;&#x4e00;&#x822c;&#x5c31;&#x88ab;&#x5b9a;&#x4e49;&#x4e3a;&#x201c;&#x5c01;&#x88c5;&#x201d;&#x3002;&#x901a;&#x8fc7;&#x9996;&#x5b57;&#x6bcd;&#x5927;&#x5c0f;&#x5199;&#x6765;&#x5b9a;&#x4e49;&#x662f;&#x5426;&#x4ece;&#x5305;&#x4e2d;&#x5bfc;&#x51fa;&#x3002",{"_index":1287,"title":{},"body":{"basic/oop.html#封装":{}}}],["x4e00;&#x4e2a;&#x65b0;&#x7684;&#x53d8;&#x91cf",{"_index":2419,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x4e00;&#x4e2a;&#x65b9;&#x6cd5",{"_index":2812,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e00;&#x4e2a;&#x6bd4;&#x8f83;&#x597d;&#x7684;&#x4f8b;&#x5b50;&#x662f",{"_index":8310,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e00;&#x4e2a;&#x6ce8;&#x518c;&#x6a21;&#x5f0f;&#x7684;&#x5217;&#x8868;&#x8fdb;&#x884c;&#x5339;&#x914d;&#xff0c;&#x7136;&#x540e;&#x8c03;&#x7528;&#x548c",{"_index":8941,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4e00;&#x4e2a;&#x7a0b;&#x5e8f;&#x53ef;&#x80fd;&#x5305;&#x542b;&#x591a;&#x4e2a;&#x540c;&#x540d;&#x7684;&#x58f0;&#x660e;&#xff0c;&#x53ea;&#x8981;&#x5b83;&#x4eec;&#x5728;&#x4e0d;&#x540c;&#x7684;&#x8bcd;&#x6cd5;&#x57df;&#x5c31;&#x53ef;&#x4ee5;&#x3002;&#x5185;&#x5c42;&#x7684;&#x8bcd;&#x6cd5;&#x57df;&#x4f1a;&#x5c4f;&#x853d;&#x5916;&#x90e8;&#x7684;&#x58f0;&#x660e;&#x3002",{"_index":2265,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x4e00;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x53ef;&#x80fd;&#x540c;&#x65f6;&#x5305;&#x542b;&#x5bfc;&#x51fa;&#x548c;&#x672a;&#x5bfc;&#x51fa;&#x7684;&#x6210;&#x5458",{"_index":2041,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x4e00;&#x4e2a;&#x8bfb;&#x5199;&#x9501;&#x4e2d;&#x5b9e;&#x9645;&#x4e0a;&#x5305;&#x542b;&#x4e86;&#x4e24;&#x4e2a;&#x9501;&#xff0c;&#x5373;&#xff1a;&#x8bfb;&#x9501;&#x548c;&#x5199;&#x9501;&#x3002",{"_index":7833,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e00;&#x4e2a;&#x9884;&#x5b9a;&#x4e49;&#x5bb9;&#x91cf;&#xff0c;&#x907f;&#x514d;&#x989d;&#x5916;&#x5206;&#x914d;&#x5185;&#x5b58;&#x3002",{"_index":4814,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x4e00;&#x4e2a;&#x9c9c;&#x660e;&#x7684;&#x7279;&#x70b9;&#xff0c;&#x5c31;&#x662f;&#xff1a;&#x5373;&#x4f7f;&#x5b83;&#x8bfb;&#x53d6;&#x4e86;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x7684;&#x6570;&#x636e;&#xff0c;&#x4e5f;&#x4e0d;&#x4f1a;&#x66f4;&#x6539;&#x5df2;&#x8bfb;&#x8ba1;&#x6570;&#x7684;&#x503c;&#x3002",{"_index":5491,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4e00;&#x4e2a;&#x9ed8;&#x8ba4;&#x7684;&#x5b50;&#x53e5;&#x5e94;&#x8be5;&#x603b;&#x662f;&#x53ef;&#x8fd0;&#x884c;&#x7684;&#x3002",{"_index":1076,"title":{},"body":{"basic/flow.html#select":{}}}],["x4e00;&#x4e9b",{"_index":7464,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e00;&#x4efd;&#x8fd4;&#x56de;&#x3002;&#x6b63;&#x56e0;&#x4e3a",{"_index":5442,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4e00;&#x65e6",{"_index":1921,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4e00;&#x65e6;&#x53d1;&#x751f;&#xff0c;&#x63a7;&#x5236;&#x6743;&#x5c31;&#x4f1a;&#x8baf;&#x901f;&#x5730;&#x6cbf;&#x7740;&#x8c03;&#x7528;&#x6808;&#x7684;&#x53cd;&#x65b9;&#x5411",{"_index":723,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x4e00;&#x65e6;&#x591a;&#x8d77;&#x6765;&#xff0c;cpu",{"_index":6186,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x4e00;&#x65e6;&#x5f53;&#x524d;&#x7684",{"_index":8248,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4e00;&#x65e6;&#x8c03;&#x7528;&#x4e86",{"_index":4444,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x4e00;&#x6761;&#x65e5;&#x5fd7;&#x7684;&#x7ed3;&#x6784;&#xff1a",{"_index":2488,"title":{},"body":{"standards/log.html#Logger":{}}}],["x4e00;&#x6837;&#x4fdd;&#x6301",{"_index":5264,"title":{},"body":{"standards/data/container.html#环":{}}}],["x4e00;&#x6837;&#x7684;&#x529f;&#x80fd;&#xff0c;&#x5e94;&#x8be5;&#x81ea;&#x5df1;&#x5904;&#x7406;&#xff0c;&#x6bd4;&#x5982;&#x5728;&#x8c03;&#x7528",{"_index":5646,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x4e00;&#x6837;&#xff0c",{"_index":5484,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4e00;&#x6837;&#xff0c;&#x4e5f;&#x662f;&#x4e00;&#x79cd;&#x5f15;&#x7528;&#x7c7b;&#x578b",{"_index":1422,"title":{},"body":{"basic/map.html#map":{}}}],["x4e00;&#x6837;&#xff0c;&#x5728",{"_index":5767,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x4e00;&#x6b21;&#x6027;&#x4ece;&#x67d0;&#x4e2a;&#x5730;&#x65b9;&#x8bfb;&#x6216;&#x5199;&#x5230;&#x67d0;&#x4e2a;&#x5730;&#x65b9;&#x53bb",{"_index":6886,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x4e00;&#x6b21;&#x6027;&#x8fd4;&#x56d",{"_index":6076,"title":{},"body":{"standards/data/math.html#三角函数":{}}}],["x4e00;&#x6b21;&#x8bfb;&#x53d6;&#x6240;&#x6709;&#x6570;&#x636e;&#x3002",{"_index":4807,"title":{},"body":{"standards/io/ioutil.html#ReadAll-函数":{}}}],["x4e00;&#x79cd",{"_index":9082,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x4e00;&#x79d2;&#x540e;&#x5173;&#x95ed;&#x901a;&#x9053;&#x3002",{"_index":3042,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e00;&#x822c;&#x60c5;&#x51b5;&#x4e0b",{"_index":6798,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4e00;&#x822c;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x80fd;&#x56e0;&#x4e3a;&#x67d0;&#x4e2a;&#x5904;&#x7406;&#x51fd;&#x6570;&#x5f15;&#x53d1;&#x7684",{"_index":697,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x4e00;&#x822c;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4f1a;&#x7528;&#x8fd9;&#x4e2a;&#x65b9;&#x6cd5;&#x6765;&#x8bb0;&#x5f55;&#x9700;&#x8981;&#x7b49;&#x5f85;&#x7684",{"_index":8080,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e00;&#x822c;&#x7528;&#x4e8e;&#x4e25;&#x91cd;&#x9519;&#x8bef;&#xff0c;&#x5982;&#x7a0b;&#x5e8f;&#x5185;&#x90e8;&#x7684;&#x903b;&#x8f91;&#x4e0d;&#x4e00;&#x81f4;&#x3002;&#x4f46;&#x662f;&#x5bf9;&#x4e8e;&#x5927;&#x90e8;&#x5206;&#x6f0f;&#x6d1e;&#xff0c;&#x6211;&#x4eec;&#x5e94;&#x8be5;&#x4f7f",{"_index":640,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e00;&#x822c;&#x7528;&#x539f;&#x751f;&#x5b57;&#x7b26;&#x4e32;&#x9762;&#x503c;&#x7684;&#x5f62;&#x5f0f;&#x4e66;&#x5199;&#x3002",{"_index":1562,"title":{},"body":{"basic/json.html#序列化":{}}}],["x4e00;&#x822c;&#x7684;&#x683c;&#x5f0f;&#x5316;&#x8bbe;&#x8ba1;&#x662f;&#x901a;&#x8fc7;&#x5bf9;&#x4e8e;&#x4e00;&#x4e2a;&#x6807;&#x51c6;&#x65f6;&#x95f4;&#x7684;&#x683c;&#x5f0f;&#x5316;&#x63cf;&#x8ff0;&#x6765;&#x5c55;&#x73b0;&#x7684;&#xff0c;&#x793a;&#x4f8b;&#xff1a",{"_index":3537,"title":{},"body":{"standards/time.html#Time":{}}}],["x4e00;&#x822c;&#x800c;&#x8a00;&#xff0c;&#x5f53",{"_index":633,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e00;&#x822c;&#x90fd;&#x4f1a;&#x5bf9;&#x54cd;&#x5e94;&#x538b;&#x7f29;&#x540e;&#x518d;&#x8fd4;&#x56de;&#xff09",{"_index":8906,"title":{},"body":{"standards/net/http.html#client":{}}}],["x4e00;&#x822c;&#x90fd;&#x662f;&#x5229;&#x7528;&#x8fd9;&#x4e2a;&#x547d;&#x4ee4;&#x6e05;&#x9664;&#x7f16;&#x8bd1;&#x6587;&#x4ef6;&#x3002",{"_index":2781,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e00;&#x822c;&#x90fd;&#x662f;&#x6700;&#x65e9;&#x7b49;&#x5f85;&#x7684;&#x90a3;&#x4e00;&#x4e2a;&#x3002",{"_index":7991,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e00;&#x8d77;&#x63a5;&#x53d7",{"_index":6311,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e00;&#x8d77;&#x8fdb;&#x5165",{"_index":6597,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e09;&#x4e2a;&#x7528;&#x5904",{"_index":4144,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x4e09;&#x79cd;&#x5185;&#x5efa;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x5207;&#x7247;&#x7684;&#x6392;&#x5e8f;&#x64cd;&#x4f5c;&#x3002",{"_index":9205,"title":{},"body":{"standards/data/sort.html#sort":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x4e09;&#x79cd;&#x6587;&#x4ef6",{"_index":186,"title":{"index.html#三种文件":{}},"body":{}}],["x4e09;&#x8272;&#x6807;&#x8bb0;&#x548c;&#x5199;&#x5c4f;&#x969c",{"_index":513,"title":{"advance/gc.html#三色标记和写屏障":{}},"body":{}}],["x4e09;&#x8272;&#x6807;&#x8bb0;&#x7b97;&#x6cd5;&#x539f;&#x7406;&#x5982;&#x4e0b;&#xff1a",{"_index":514,"title":{},"body":{"advance/gc.html#三色标记和写屏障":{}}}],["x4e09;&#x89d2;&#x51fd;&#x6570",{"_index":6074,"title":{"standards/data/math.html#三角函数":{}},"body":{}}],["x4e0a",{"_index":1758,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e0a;&#x3002",{"_index":3130,"title":{},"body":{"basic/function.html#参数":{}}}],["x4e0a;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x548c;&#x4e0b;&#x4e00;&#x4e2a;&#x5143;&#x7d20",{"_index":5236,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x4e0a;&#x4e07;&#x4e2a;&#x5e76;&#x53d1;&#x4efb;&#x52a1;&#x3002",{"_index":6202,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0a;&#x4e0b;&#x6587;&#x6839;&#x8282;&#x70b9;&#x4ec5;&#x4ec5;&#x662f;&#x4e00;&#x4e2a;&#x6700;&#x57fa;&#x672c;&#x7684;&#x652f;&#x70b9;&#xff0c;&#x5b83;&#x4e0d;&#x63d0;&#x4f9b;&#x4efb;&#x4f55;&#x989d;&#x5916;&#x7684;&#x529f;&#x80fd",{"_index":8219,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4e0a;&#x5230;&#x8fb",{"_index":7052,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x4e0a;&#x53bb;&#x8fd0;&#x884c;&#x3002;c&#x3001;c",{"_index":6408,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e0a;&#x6267;&#x884c;&#x53d1;&#x9001;&#x64cd;&#x4f5c",{"_index":2934,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e0a;&#x6267;&#x884c;&#x63a5;&#x6536;&#x64cd;&#x4f5c",{"_index":2931,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e0a;&#x6b63;&#x5728;&#x6267;&#x884c;&#x7684",{"_index":4247,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4e0a;&#x7684",{"_index":6607,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e0a;&#x80fd;&#x540c;&#x65f6;&#x6267;&#x884c;&#x591a;&#x9879;&#x4efb;&#x52a1;&#xff0c;&#x5728;&#x5f88;&#x77ed;&#x65f6;&#x95f4;&#x5185;&#xff0c;cpu",{"_index":6167,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x4e0a;&#x8bbe;&#x7f6e;&#x4e00;&#x4e2a;&#x62a2;&#x5360;&#x6807;&#x5fd7;&#x3002;&#x5982;&#x679c;&#x67d0;&#x4e2a",{"_index":6518,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e0a;&#x8ffd;&#x52a0;&#x5143;&#x7d20;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x9996;&#x5148;&#x4f1a;&#x653e;&#x5230;&#x8fd9;&#x5757;&#x7a7a;&#x95f2;&#x7684;&#x5185;&#x5b58;&#x4e2d;&#xff0c;&#x5982;&#x679c;&#x6dfb;&#x52a0;&#x7684;&#x53c2;&#x6570;&#x4e2a;&#x6570;&#x8d85;&#x8fc7;&#x4e86;&#x5bb9;&#x91cf;&#x503c;&#xff0c;&#x5185;&#x5b58;&#x7ba1;&#x7406;&#x5668;&#x4f1a;&#x91cd;&#x65b0;&#x5212",{"_index":1948,"title":{},"body":{"basic/slice.html#长度和容量":{}}}],["x4e0a;&#x9762;&#x4ee3;&#x7801;&#x4e2d;&#x7684",{"_index":779,"title":{},"body":{"basic/array.html#数组":{}}}],["x4e0a;&#x9762;&#x4ee3;&#x7801;&#x5b9e;&#x9645;&#x4e0a;&#x5c31;&#x662f",{"_index":9055,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801",{"_index":2367,"title":{},"body":{"basic/interface.html#接口":{},"concurrent/channel.html#channel":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4e2d",{"_index":2413,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4e2d;&#x8c03;&#x7528;&#x4e86;&#x4e00;&#x4e2a;&#x540d;&#x53eb",{"_index":6356,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4e2d;&#x90a3",{"_index":6298,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4e2d;&#xff0c",{"_index":2068,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{},"concurrent/channel.html#channel":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4f1a;&#x6253;&#x5370;&#x51fa;&#x4ec0;&#x4e48;&#x5185;&#x5bb9;&#xff1f",{"_index":6224,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c",{"_index":6842,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x5b9e;&#x73b0;&#x7684;&#x662f;&#x5347;&#x5e8f;&#x6392;&#x5e8f;&#xff0c;&#x5982;&#x679c;&#x8981;&#x5b9e;&#x73b0;&#x964d;&#x5e8f;&#x6392;&#x5e8f;&#x4fee;&#x6539",{"_index":9226,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x6253;&#x5370;&#x7684;&#x7ed3;&#x679c;&#x53ef;&#x80fd;&#x662f;&#xff1a",{"_index":7841,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff0c",{"_index":708,"title":{},"body":{"basic/error.html#Recover-捕获异常":{},"basic/reflect.html#reflect-TypeOf":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x4f1a;&#x4f7f;&#x8bbf;&#x95ee;&#x6bcf;&#x4e2a;&#x6210;&#x5458;&#x53d8;&#x5f97;&#x7e41;&#x7410;&#xff1a",{"_index":2061,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x521d;&#x59cb;&#x5316;&#x4e00;&#x4e2a;&#x53d8;&#x91cf",{"_index":1680,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x793a;&#x4f8b;&#x4e00;&#x8f93;&#x51fa",{"_index":3882,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#x6211;&#x4eec;&#x77e5;&#x9053",{"_index":3190,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x4e0a;&#x9762;&#x7684;&#x65b9;&#x6cd5;&#x547d;&#x540d",{"_index":8980,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4e0a;&#x9762;&#x7684;&#x8fd0;&#x7b97;&#x7b26;&#x5f97;&#x4f18;&#x5148;&#x7ea7;&#xff0c;&#x4ece;&#x4e0a;&#x5230;&#x4e0b;&#xff0c;&#x4ece;&#x5de6;&#x5230;&#x53f3;&#x3002;&#x4e5f;&#x5c31;&#x662f",{"_index":1787,"title":{},"body":{"basic/operator.html#优先级":{}}}],["x4e0a;&#x9762;&#x8fed;&#x4ee3;&#x3002;&#x5b83;&#x4f9d;&#x6b21;&#x4ec",{"_index":2909,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e0a;&#xff0c;&#x5f53;&#x7136;&#x4e5f;&#x4f1a;&#x4f53;&#x73b0;&#x5728;&#x8be5",{"_index":1756,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e0b;&#x4ee5;&#x67d0;&#x4e2a;&#x76d8;&#x7b26;&#x5f00;&#x59cb;&#xff0c;&#x6bd4;&#x5982",{"_index":5663,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x4e0b;&#x5b89;&#x88c5;&#xff0c;&#x5b98;&#x7f51",{"_index":916,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x4e0b;&#x5c31;&#x6ca1;&#x6709;&#x3002",{"_index":7335,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e0b;&#x7684",{"_index":4825,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x4e0b;&#x7684;&#x5143;&#x7d20;&#x521b;&#x5efa;&#x4e3a;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5207;&#x7247",{"_index":1884,"title":{},"body":{"basic/slice.html#slice":{}}}],["x4e0b;&#x7684;&#x5305;&#x5bfc;&#x5165;&#x3002",{"_index":2830,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e0b;&#x7684;&#x7f13;&#x5b58;&#x5305;&#x6765;&#x5bf9;&#x9879;&#x76ee;&#x8fdb;&#x884c;&#x6784;&#x5efa;&#x3002",{"_index":962,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x7684;&#x9879;&#x76ee;&#x4f7f;&#x7528",{"_index":971,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x7684;&#x9879;&#x76ee;&#xff0c;&#x4e0d;&#x4f7f;&#x7528",{"_index":969,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x8f6c;&#x4e49;&#x5b57;&#x7b26;&#x88ab;&#x7981;&#x7528;&#x3002",{"_index":5755,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x4e0b;&#x8f7d;&#x4e86",{"_index":2719,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e0b;&#x8f7d;&#x4f9d;&#x8d56",{"_index":994,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x8f7d;&#x5305",{"_index":2717,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e0b;&#x8f7d;&#x5b89;&#x88c5;&#x5305",{"_index":917,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x4e0b;&#x8fdb;&#x884c;&#x7f13;&#x5b58;&#xff0c;&#x518d;&#x5728;&#x9879;&#x76ee;&#x4e0b;&#x751f;&#x6210",{"_index":974,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x8fdb;&#x884c;&#x7f13;&#x5b58;&#xff0c;&#x76f4;&#x63a5;&#x57fa;&#x4e8e;&#x7f13;&#x5b58;&#x5305;&#x6765;&#x6784;&#x5efa;&#x9879;&#x76ee;&#xff0c;&#x6240;&#x4ee5;&#x53ef;&#x4ee5;&#x8131;&#x79bb",{"_index":978,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x9762;&#x4ee3;&#x7801;&#x901a;&#x8fc7;&#x6307;&#x5b9a;&#x76ee;&#x5f55;&#xff0c;&#x4f5c;&#x4e3a;&#x9759;&#x6001;&#x7ad9;&#x70b9;&#xff1a",{"_index":9116,"title":{},"body":{"standards/net/http.html#静态站点":{}}}],["x4e0b;&#x9762;&#x5176;&#x5b83;&#x7684;&#x5305;&#x4e5f;&#x9075;&#x5faa;&#x8fd9;&#x4e2a;&#x7ea6;&#x5b9a;&#x3002;&#x6210;&#x5458",{"_index":1566,"title":{},"body":{"basic/json.html#序列化":{}}}],["x4e0b;&#x9762;&#x662f;&#x4e00;&#x4e2a;&#x4f8b;&#x5b50;&#xff1a",{"_index":7916,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e0b;&#x9762;&#x7684;&#x4ee3;&#x7801",{"_index":4935,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x4e0b;&#x9762;&#x7c7b;&#x578b;&#x90fd;&#x5b9e;&#x73b0;&#x4e86;&#x8fd9;&#x4e24;&#x4e2a;&#x63a5;&#x53e3",{"_index":6942,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x4e0b;&#x9762;&#xff0c;&#x7136;&#x540e;&#x6267;&#x884c",{"_index":2726,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e0d;&#x4e00;&#x81f4;&#xff0c",{"_index":5643,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x4e0d;&#x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x5230;&#x6570;&#x636e;&#x5e93;&#x7684;&#x5177;&#x4f53;&#x8fde;&#x63a5;&#xff0c;&#x800c;&#x662f;&#x4e00;&#x4e2a;&#x80fd;&#x64cd;&#x4f5c;&#x7684;&#x6570;&#x636e;&#x5e93;&#x5bf9;&#x8c61",{"_index":4434,"title":{},"body":{"standards/database/sql.html#类型":{}}}],["x4e0d;&#x4f1a;&#x5173;&#x95",{"_index":3575,"title":{},"body":{"standards/time.html#定时器":{}}}],["x4e0d;&#x4f1a;&#x63a5;&#x53d7;&#xff0c;&#x8fd9;&#x4e9b;&#x65b9;&#x6cd5;&#x5c06;&#x4e0d;&#x4f1a;&#x5bf9;&#x94fe;&#x8868;&#x505a;&#x51fa;&#x4efb;&#x4f55;&#x6539;&#x52a8;&#x3002;&#x56e0;&#x4e3a;&#x6211;&#x4eec;&#x81ea;&#x5df1;&#x751f;&#x6210;&#x7684",{"_index":5246,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x4e0d;&#x4f1a;&#x6539;&#x53d8",{"_index":7418,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e0d;&#x4f1a;&#x6dfb;&#x52a0;&#x8d85;&#x8fc7;&#x4e00;&#x4e2a",{"_index":8755,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4e0d;&#x4f1a;&#x7ee7;&#x7eed;&#x53d1;&#x9001;&#x6570;&#x636e;&#x65f6;&#x8c03;&#x7528;&#x3002",{"_index":2900,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e0d;&#x4f1a;&#x88ab;&#x81ea;&#x52a8;&#x56de;&#x6536;&#x3002",{"_index":6401,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0d;&#x4f46;&#x53ef;&#x4ee5;&#x62fc;&#x63a5;&#x3001;&#x622a;&#x65ad;&#x5176;&#x4e2d",{"_index":3867,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e0d;&#x5141;&#x8bb8;&#x5728;&#x5916;&#x90e8;&#x5305;&#x4fee;&#x6539;&#x3002",{"_index":2044,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x4e0d;&#x5141;&#x8bb8;&#x6709;&#x65e0;&#x7528;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x7a7a;&#x6807;&#x8bc6;&#x7b26;&#x53ef;&#x4ee5;&#x4f5c;&#x4e3a;&#x5ffd;&#x7565;&#x5360;&#x4f4d;&#x7b26",{"_index":215,"title":{},"body":{"index.html#空标识符":{}}}],["x4e0d;&#x5305;&#x542b",{"_index":1910,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x4e0d;&#x5305;&#x542b;&#x5143;&#x7d20",{"_index":9246,"title":{},"body":{"standards/data/sort.html#Search":{}}}],["x4e0d;&#x5305;&#x542b;&#x5b57;&#x7b26",{"_index":5934,"title":{},"body":{"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["x4e0d;&#x5305;&#x542b;&#x5b57;&#x7b26;&#x4e32",{"_index":5932,"title":{},"body":{"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["x4e0d;&#x5305;&#x542b;&#x8def;&#x5f84;&#x7684;&#x6587;&#x4ef6;&#x540d",{"_index":2502,"title":{},"body":{"standards/log.html#Logger":{}}}],["x4e0d;&#x53bb;&#x5199;&#x53d8;&#x91cf;&#x3002;&#x8bfb;&#x53d6;&#x4e0d;&#x53ef;&#x80fd;&#x51fa;&#x73b0;&#x6570;&#x636e;&#x7ade;&#x4e89;&#x3002",{"_index":7806,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x4e0d;&#x53cb;&#x597d;&#xff0c;&#x53ef;&#x80fd;&#x6211;&#x4eec;&#x9700;&#x8981;&#x4e3a;&#x5927;&#x91cf;&#x7684",{"_index":9289,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x4e0d;&#x53ef;&#x4ee5;&#x3002",{"_index":8098,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e0d;&#x53ef;&#x53d8;&#x7684;&#x503c;&#x4e0d;&#x53ef;&#x5bfb;&#x5740",{"_index":1764,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x4e0d;&#x5408;&#x6cd5;&#x65f6;&#xff0c",{"_index":5768,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x4e0d;&#x540c;&#x4e8e;&#x4ee5;&#x5f80;&#x57fa;&#x4e8",{"_index":960,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0d;&#x5728;&#x540c;&#x4e00;&#x4e2a;&#x4f5c;&#x7528;&#x57df",{"_index":2416,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x4e0d;&#x5728;&#x540c;&#x4e00;&#x4e2a;&#x73af;&#x5f62;&#x94fe;&#x8868;&#x4e2d;&#xff0c;&#x5219;&#x5c06",{"_index":5279,"title":{},"body":{"standards/data/container.html#环":{}}}],["x4e0d;&#x592a;&#x4e00;&#x81f4;&#x3002;&#xff09",{"_index":5629,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x4e0d;&#x5b58;&#x5728;&#x6216;&#x627e;&#x4e0d;&#x5230;&#x65f6;&#xff0c",{"_index":6936,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x4e0d;&#x5b58;&#x5728;&#xff0c;&#x5219;&#x76f4;&#x63a5;&#x8fd4;&#x56d",{"_index":7658,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4e0d;&#x5b89;&#x5168;&#x7684;&#x503c;&#x4e0d;&#x53ef;&#x5bfb;&#x5740",{"_index":1773,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x4e0d;&#x5e94;&#x8be5;&#x4f5c;&#x4e3a",{"_index":3473,"title":{},"body":{"standards/time.html#Time":{}}}],["x4e0d;&#x5efa;&#x8bae;&#x4f7f;&#x7528;&#xff0c;&#x56e0;&#x4e3a;&#x5728",{"_index":9304,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x4e0d;&#x6307;&#x5b9a;&#x7c7b;&#x578b;&#x548c;&#x521d;&#x59cb;&#x503c;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x548c;&#x4e0a;&#x4e00;&#x884c;&#x975e;&#x7a7a;&#x5e38;&#x91cf;&#x53f3;&#x503c;&#x76f8;&#x540c",{"_index":1364,"title":{},"body":{"basic/constant.html#iota":{}}}],["x4e0d;&#x662f",{"_index":8823,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4e0d;&#x662f;&#x300c;&#x7c7b;&#x578b;&#x5b89;&#x5168;&#x300d;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x6709;&#x65f6;&#x5019;&#x4f1a;&#x53d1;&#x751f;&#x6bd4;&#x8f83;&#x602a;&#x5f02;&#x7684;&#x884c;&#x4e3a;&#x3002;&#x6bd4;&#x5982;&#xff1a",{"_index":5041,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x4e0d;&#x662f;&#x4e00;&#x4e2a;&#x89c4;&#x8303;&#x683c;&#x5f0f;&#xff0c;&#x5219",{"_index":8950,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4e0d;&#x662f;&#x4ee5;&#x754c;&#x5b9a;&#x7b26",{"_index":5458,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4e0d;&#x662f;&#x5bf9;&#x6bcf;&#x4e00;&#x79cd;&#x53c2;&#x6570;&#x51fd;&#x6570;&#x90fd;&#x53ea;&#x6267;&#x884c;&#x4e00;&#x6b21;&#xff0c;&#x800c;&#x662f;&#x53ea",{"_index":8119,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x4e0d;&#x662f;&#x5e03;&#x5c14;&#x503c",{"_index":264,"title":{},"body":{"index.html#类型转换":{}}}],["x4e0d;&#x662f;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#xff0c;&#x4f1a;&#x52a0;&#x5165;&#x5f53;&#x524d;&#x5de5;&#x4f5c;&#x76ee;&#x5f55;&#x4ee5;&#x4f7f;&#x4e4b;&#x6210;&#x4e3a;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#x3002;&#x56e0;&#x4e3a;&#x786c;&#x94fe;&#x63a5;&#x7684;&#x5b58;&#x5728;&#xff0c;&#x4e0d;&#x80fd;&#x4fdd;&#x8bc1;&#x8fd4",{"_index":5666,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x4e0d;&#x7b49;&#x5230;&#x4fe1",{"_index":2915,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e0d;&#x7ba1;&#x4f60;&#x7684",{"_index":1241,"title":{},"body":{"basic/oop.html#方法":{}}}],["x4e0d;&#x7ba1;&#x662f;&#x9690;&#x5f0f;&#x8fd8;&#x662f;&#x663e;&#x5f0f;&#x5730;&#x8d4b;&#x503c;&#xff0c;&#x5728;&#x8d4b;&#x503c;&#x8bed;&#x53e5;&#x5de6;&#x8fb9;&#x7684;&#x53d8;&#x91cf;&#x548c;&#x53f3;&#x8fb9;&#x6700;&#x7ec8;&#x7684;&#x6c42;&#x5230;&#x7684;&#x503c;&#x5fc5;&#x987b;&#x6709;&#x76f8;&#x540c;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x3002;&#x8fd9;&#x5c31;&#x662f",{"_index":2437,"title":{},"body":{"basic/var.html#赋值":{}}}],["x4e0d;&#x80fd;&#x540c;&#x65f6;&#x5305;&#x542b;&#x4e24;&#x4e2a;&#x7c7b;&#x578b;&#x76f8;&#x540c;&#x7684;&#x533f;&#x540d;&#x6210;&#x5458;&#xff0c;&#x8fd9;&#x4f1a;&#x5bfc;&#x81f4;&#x540d;&#x5b57;&#x51b2;&#x7a81",{"_index":2081,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x4e0d;&#x80fd;&#x548c",{"_index":942,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x4e0d;&#x80fd;&#x6ee5;&#x7528;&#xff0c;&#x53ef;&#x80fd;&#x4f1a;&#x5f15;&#x8d77;&#x8d44;&#x6e90;&#x6cc4;&#x6f0f;&#x6216;&#x8005;&#x5176;&#x4ed6;&#x95ee;&#x9898;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5c06",{"_index":702,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x4e0d;&#x80fd;&#x7528;&#x539f;&#x5b50;&#x503c;&#x5b58;&#x50a8",{"_index":8046,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x4e0d;&#x80fd;&#x9690;&#x5f0f;&#x8f6c;&#x6362;&#xff0c;&#x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x7528;&#x4e8e;&#x6bd4;&#x8f83;&#x8868;&#x8fbe;&#x5f0f",{"_index":283,"title":{},"body":{"index.html#自定义类型":{}}}],["x4e0d;&#x8981;&#x4f7f;&#x7528;&#x5171;&#x4eab;&#x6570;&#x636e;&#x6765;&#x901a;&#x4fe1;&#xff0c;&#x4f7f;&#x7528;&#x901a;&#x4fe1",{"_index":7809,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x4e0d;&#x8981;&#x5728",{"_index":991,"title":{},"body":{"basic/env_config.html#Go-Module":{},"basic/oop.html#String-方法":{}}}],["x4e0d;&#x8981;&#x5728;&#x591a;&#x4e2a;&#x51fd;&#x6570;&#x4e4b;&#x95f4;&#x76f4;&#x63a5;&#x4f20;&#x9012;&#x4e92;&#x65a5;&#x9501;&#x3002;&#x4e00;&#x65e6;&#xff0c;&#x4f60;&#x628a;&#x4e00;&#x4e2a;&#x4e92;&#x65a5;&#x9501;&#x540c;&#x65f6;&#x7528;&#x5728;&#x4e86;&#x591a;&#x4e2a;&#x5730;&#x65b9;&#xff0c;&#x5c31;&#x5fc5;&#x7136;&#x4f1a;&#x6709;&#x66f4;&#x591a;&#x7684",{"_index":7868,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e0d;&#x8981;&#x5bf9;&#x5c1a;&#x672a;&#x9501;&#x5b9a;&#x6216;&#x8005;&#x5df2;&#x89e3;&#x9501;&#x7684;&#x4e92;&#x65a5;&#x9501;&#x89e3;&#x9501;&#xff1b",{"_index":7864,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e0d;&#x8981;&#x5fd8;&#x8bb0;&#x89e3;&#x9501;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x5fc5;&#x8981;&#x65f6;&#x4f7f;&#x7528",{"_index":7862,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e0d;&#x8981;&#x628a;&#x589e;&#x52a0;&#x5176;&#x8ba1;&#x6570;&#x5668;&#x503c;&#x7684;&#x64cd;&#x4f5c;&#x548c;&#x8c03;&#x7528;&#x5176",{"_index":8108,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e0d;&#x8981;&#x91cd;&#x590d;&#x9501;&#x5b9a;&#x4e92;&#x65a5;&#x9501;&#xff1b",{"_index":7854,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e0d;&#x8fc7",{"_index":6919,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x4e0d;&#x8fc7;&#xff0c;&#x5373;&#x4f7f;&#x88ab;&#x5c4f;&#x853d;&#x4e86;&#xff0c;&#x6211;&#x4eec;&#x4ecd;&#x7136;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x94fe;&#x5f0f;&#x7684;&#x9009;&#x62e9;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x9009;&#x62e9;&#x5230;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x5b57;&#x6bb5;&#x6216;&#x65b9;&#x6cd5",{"_index":2109,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x4e0d;&#x8fc7;&#xff0c;&#x867d;&#x7136;&#x5df2;&#x4f7f;&#x7528;&#x7684",{"_index":3848,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e0d;&#x9700;&#x8981;&#x5728;&#x8bed;&#x53e5;&#x6216;&#x8005;&#x58f0;&#x660e;&#x7684;&#x672b;&#x5c3e;&#x6dfb;&#x52a0;&#x5206;&#x53f7;&#x3002;&#x9664;&#x975e;&#x4e00;&#x884c;&#x4ee3;&#x7801;&#x4e0a;&#x6709;&#x591a;&#x6761;&#x8bed;&#x53e5;&#x3002",{"_index":2164,"title":{},"body":{"basic/package.html#main":{}}}],["x4e0d;&#x9700;&#x8981;&#x663e;&#x793a;&#x7684;break&#xff0c;cas",{"_index":1040,"title":{},"body":{"basic/flow.html#switch":{}}}],["x4e0e",{"_index":3801,"title":{},"body":{"basic/basic_data.html#字符串":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html#sync-Once":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x4e0e;&#x4e00;&#x4e2a;&#x8fdb;&#x7a0b;&#x603b;&#x4f1a;&#x6709;&#x4e00;&#x4e2a;&#x4e3b;&#x7ebf;&#x7a0b;&#x7c7b;&#x4f3c;&#xff0c;&#x6bcf;&#x4e00;&#x4e2a;&#x72ec;&#x7acb;&#x7684",{"_index":6251,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0e;&#x5176;&#x7ed1;&#x5b9a;&#x7ee7;&#x7eed;&#x6267;&#x884c;&#x5176;&#x4ed6",{"_index":6600,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e0e;&#x53d8;&#x91cf;&#x540d;&#x51b2;&#x7a81;&#x3002",{"_index":2175,"title":{},"body":{"basic/package.html#点操作":{}}}],["x4e0e;&#x8be5;&#x7ed3;&#x6784;&#x5bf9;&#x5e94;&#x3002",{"_index":7530,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4e0e;&#xff08;&amp;&#xff09;&#x3002;&#x5982;&#x679c",{"_index":7639,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4e13;&#x5c5e;&#x7684;&#x8ba1;&#x65f6;&#x5668;&#x7684;&#x3002",{"_index":4231,"title":{},"body":{"basic/test.html#性能测试函数中的计时器":{}}}],["x4e13;&#x6ce8;&#x4e8e;&#x5bf9;&#x8c61;&#x5b9e;&#x4f8b;&#x6570;&#x636e;&#x8bfb;&#x5199;&#x3002",{"_index":5036,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x4e14;&#x6570;&#x636e;&#x88ab;&#x8bfb;&#x5b8c;&#x4e86",{"_index":6823,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4e16;&#x754c",{"_index":2161,"title":{},"body":{"basic/package.html#main":{}}}],["x4e24;&#x4e2a",{"_index":3115,"title":{},"body":{"basic/function.html#声明函数":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x4e24;&#x4e2a;&#x7528;&#x4e8e;&#x521d;&#x59cb;&#x5316",{"_index":5400,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{}}}],["x4e24;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x5c06;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2054,"title":{},"body":{"basic/struct.html#结构体比较":{}}}],["x4e24;&#x4e2a;&#x7ed3;&#x6784;&#xff0c;&#x53ea;&#x9700;&#x8981;&#x4fdd;&#x6301;&#x4e00;&#x4e2a;&#x7ed3;&#x6784;&#x5c31;&#x884c;&#x3002",{"_index":5265,"title":{},"body":{"standards/data/container.html#环":{}}}],["x4e24;&#x6b21;&#x5173;&#x95ed;&#x540c;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#xff1b",{"_index":7447,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e2a",{"_index":736,"title":{},"body":{"basic/error.html#Recover-捕获异常":{},"basic/basic_data.html#字符串":{},"basic/test.html#性能分析":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html#Reader":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html#文件-I-O":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e2a;&#x4f4d;&#x7f6e;&#xff0c",{"_index":5286,"title":{},"body":{"standards/data/container.html#环":{}}}],["x4e2a;&#x4f4d;&#xff08;&#x6743;&#x9650;&#x4f4d;&#xff09;&#x4e3a;&#x6807;&#x51c6",{"_index":7392,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e2a;&#x5143;&#x7d20",{"_index":1095,"title":{},"body":{"basic/flow.html#for":{},"standards/data/container.html#环":{}}}],["x4e2a;&#x5143;&#x7d20;&#xff0c;&#x5176;&#x4e2d;&#xff0c;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x4e0d;&#x4f1a;&#x5206;&#x5272",{"_index":5993,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x4e2a;&#x5173;&#x952e;&#x5b57;&#xff1a",{"_index":160,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x4e2a;&#x5305;&#x88c5;&#x4e86",{"_index":6299,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e2a;&#x5b57;&#x7b26;&#x4e32",{"_index":5946,"title":{},"body":{"standards/text/strings.html#字符串替换":{}}}],["x4e2a;&#x5b57;&#x8282",{"_index":7471,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e2a;&#x5b57;&#x8282;&#x3002",{"_index":4929,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x4e2a;&#x5b57;&#x8282;&#x3002;&#x66f4;&#x5177;&#x4f53;&#x5730;&#x8bb2;&#xff0c;&#x5b83;&#x4f1a;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x5207;&#x7247;&#x4f5c;&#x4e3a;&#x65b0;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff0c;&#x8be5;&#x5207;&#x7247;&#x7684;&#x5bb9;&#x91cf;&#x4f1a;&#x662f;&#x539f",{"_index":3834,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2a;&#x5b57;&#x8282;&#x4e14;&#x8fd4;&#x56d",{"_index":7408,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e2a;&#x5b57;&#x8282;&#x4e3a;&#x6b62;&#x3002;&#x5b83;&#x8fd4;&#x56de;&#x590d;&#x5236;&#x7684;&#x5b57;&#x8282;&#x6570;&#xff0c;&#x5982;&#x679c;&#x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#x8f83;&#x5c11;&#xff0c;&#x8fd8;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x9519;&#x8bef;&#x3002",{"_index":7079,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x4e2a;&#x5b57;&#x8282;&#x4e4b;&#x540e;&#xff0c",{"_index":7083,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x4e2a;&#x5b57;&#x8282;&#x4ec",{"_index":6827,"title":{},"body":{"standards/io/io.html#Writer":{}}}],["x4e2a;&#x5b57;&#x8282;&#x4ece;&#x8f93;&#x5165;&#x6e90;&#x7684;&#x7ed3;&#x5c3e;&#x5904;&#x7531",{"_index":6803,"title":{},"body":{"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x4e2a;&#x5b57;&#x8282;&#x4f4d;&#x7f6e;&#x5f00;&#x59cb;&#x7684",{"_index":3744,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2a;&#x5b57;&#x8282;&#x4f5c;&#x4e3a;&#x6682;&#x5b58;&#x7a7a;&#x95f4;&#x3002;&#x82e5;&#x53ef;&#x8bfb;&#x53d6;&#x7684;&#x6570;&#x636e;&#x4e0d;&#x5230",{"_index":6789,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4e2a;&#x5b57;&#x8282;&#x5199;&#x5165;&#x5230;&#x504f;&#x79fb;&#x91cf",{"_index":6871,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x4e2a;&#x5b57;&#x8282;&#x540e;&#x4ee5",{"_index":6989,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x4e2a;&#x5b57;&#x8282;&#x540e;&#x9047;&#x5230;&#x4e00;&#x4e2a;&#x9519;&#x8bef;&#x6216",{"_index":6793,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4e2a;&#x5b57;&#x8282;&#x6570;&#x636e;&#x5e76;&#x5199;&#x5165",{"_index":7412,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e2a;&#x5b57;&#x8282;&#x8bfb;&#x5230",{"_index":6854,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x4e2a;&#x5b57;&#x8282;&#x8bfb;&#x53d6;&#x5230",{"_index":6785,"title":{},"body":{"standards/io/io.html#Reader":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x4e2a;&#x5b57;&#x8282;&#xff0c;&#x5373;&#xff1a",{"_index":5404,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{}}}],["x4e2a;&#x5b57;&#x8282;&#xff0c;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x3002;&#x5982;&#xff1a",{"_index":3745,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2a;&#x5b57;&#x8282;&#xff1b;64",{"_index":4928,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x4e2a;&#x5b57;&#x8282;(&#x6216;&#x5230;&#x4e00;&#x4e2a",{"_index":7071,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x4e2a;&#x6210;&#x5458;&#x7684",{"_index":7671,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4e2a;&#x6210;&#x5458;&#x7684;&#x5207;&#x7247;&#x3002;&#x8fd9;&#x65f6;&#xff0c;&#x5982;&#x679c",{"_index":7675,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4e2a;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x7684;&#x662f",{"_index":7912,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e2a;&#x6bd4;&#x7279;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#xff0c",{"_index":358,"title":{},"body":{"index.html#编码":{}}}],["x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x4e2d;&#xff0c;&#x5f80;&#x5f80;&#x662f;&#x4e00;&#x4e2a;&#x5f88;&#x597d;&#x7684;&#x9009;&#x62e9",{"_index":8349,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4e2a;&#x91cd;&#x8981;&#x90e8;&#x5206;&#xff0c;&#x5206;&#x522b;&#x662f",{"_index":6231,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e2a;&#x9519;&#x8bef;&#x3002",{"_index":7054,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x4e2a;&#x9644;&#x52a0;&#x4f4d;&#xff0c;&#x5206;&#x522b;&#x662f",{"_index":7562,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4e2a;&#x975e;&#x8def;&#x5f84;&#x5206;&#x9694;&#x7b26;&#x7684;&#x5b57;&#x7b26",{"_index":5741,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x4e2d",{"_index":983,"title":{},"body":{"basic/env_config.html#Go-Module":{},"basic/json.html#序列化":{},"basic/operator.html#位运算符":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html#同步锁":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["x4e2d;%d",{"_index":4679,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x4e2d;&#x3002",{"_index":985,"title":{},"body":{"basic/env_config.html#Go-Module":{},"concurrent/sync_lock.html#共享变量":{},"concurrent/sync_lock.html#原子操作":{},"standards/net/http.html#Response":{}}}],["x4e2d;&#x3002;&#x5b83;&#x8fd4;&#x56de;&#x590d;&#x5236;&#x7684;&#x5b57;&#x8282;&#x6570;&#xff0c;&#x5982;&#x679c;&#x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#x8f83;&#x5c11;&#xff0c;&#x8fd8;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x9519;&#x8bef;&#x3002;&#x82e5;&#x6ca1;&#x6709;&#x8bfb",{"_index":7089,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x4e2d;&#x3002;&#x5b83;&#x8fd4;&#x56de;&#x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#x6570",{"_index":6786,"title":{},"body":{"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x4e2d;&#x3002;&#x6240;&#x6709;&#x7ecf;&#x7531;&#x5b83;&#x5904;&#x7406;&#x7684;&#x4ec",{"_index":7130,"title":{},"body":{"standards/io/io.html#TeeReader-函数":{}}}],["x4e2d;&#x4e0d;&#x80fd;&#x5bf9;&#x5207;&#x7247;&#x4f7f;&#x7528;&#x7b49;&#x53f7;&#x8fd0;&#x7b97;&#x7b26;&#x3002;&#x4f60;&#x53ef;&#x4ee5;&#x5199;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x8fed;&#x4ee3;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x6765;&#x68c0;&#x67e5;&#x5b83;&#x4eec;&#x7684;&#x503c;&#x3002;&#x4f46;&#x662f;&#x4e00;&#x79cd",{"_index":5038,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x4e2d;&#x4ece;&#x4e0b;&#x6807",{"_index":1882,"title":{},"body":{"basic/slice.html#slice":{}}}],["x4e2d;&#x4f20;&#x9012;&#x5b9a;&#x4e49;&#x597d;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x53ea;&#x8981;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x662f;&#x4e00;&#x4e2a",{"_index":9108,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x4e2d;&#x4f7f;&#x7528;&#x4e86",{"_index":9305,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x4e2d;&#x4f7f;&#x7528;&#x7684",{"_index":8812,"title":{},"body":{"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["x4e2d;&#x4fe1;&#x606f;&#x6309;&#x7167;&#x7ebf;&#x6027;&#x683c;&#x5f0f;&#x5199;&#x5165",{"_index":8878,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x4e2d;&#x5199;&#x5165;&#x5230;&#x57fa;&#x672c;&#x6570;&#x636e;&#x6d41;&#x4e2d;&#x3002;&#x5b83;&#x8fd4;&#x56de;&#x4ec",{"_index":6828,"title":{},"body":{"standards/io/io.html#Writer":{}}}],["x4e2d;&#x51fa;&#x73b0;&#x7684;&#x975e;&#x91cd;&#x53e0;&#x6b21;&#x6570;&#xff1a",{"_index":5939,"title":{},"body":{"standards/text/strings.html#计算字符串出现次数":{}}}],["x4e2d;&#x5219;&#x662f;&#x5f53;&#x524d;&#x6253;&#x5f00;&#x6587;&#x4ef6",{"_index":7501,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4e2d;&#x5229;&#x7528",{"_index":8871,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x4e2d;&#x53bb;&#x3002;&#x4f8b;&#x5b50;&#x4ee3;&#x7801;&#x5982;&#x4e0b;&#xff1a",{"_index":7136,"title":{},"body":{"standards/io/io.html#TeeReader-函数":{}}}],["x4e2d;&#x53d1;&#x9001;&#x5f53;&#x524d;&#x65f6;&#x95f4;&#x3002",{"_index":3560,"title":{},"body":{"standards/time.html#定时器":{}}}],["x4e2d;&#x53d1;&#x9001;&#xff0c;&#x8be5;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x5ba2;&#x6237;&#x7aef;&#x7684",{"_index":8769,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4e2d;&#x589e;&#x52a0;&#x5bf9;&#x5e94;&#x7684",{"_index":8983,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4e2d;&#x5982;&#x4f55;&#x8f93;&#x51fa;&#x76ee;&#x5f55;&#x4e0b;&#x7684;&#x6240;&#x6709;&#x6587;&#x4ef6;&#x5462;&#xff1f",{"_index":4809,"title":{},"body":{"standards/io/ioutil.html#ReadDir-函数":{}}}],["x4e2d;&#x5b57;&#x7b26;&#x4e32;&#x548c;&#x5e03;&#x5c14;&#x503c;&#x4e4b;&#x95f4;&#x7684;&#x8f6c;&#x6362;&#x6bd4;&#x8f83;&#x7b80;&#x5355;&#xff0c;&#x4e3b;&#x8981;&#x6709;&#x4e09;&#x4e2a;&#x51fd;&#x6570;&#xff1a",{"_index":4971,"title":{},"body":{"standards/text/strconv.html#字符串和布尔值之间的转换":{}}}],["x4e2d;&#x5b58;&#x50a8;&#x7684;&#x90a3;&#x4e2a;&#x503c;&#x3002;&#x8fd9;&#x76f8;&#x5f53;&#x4e8e;&#x7ed5;&#x8fc7;&#x4e86;&#x539f;&#x5b50;&#x503c;&#x800c;&#x8fdb;&#x884c;&#x4e86;&#x975e;&#x5e76;&#x53d1",{"_index":8051,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x4e2d;&#x5b9a;&#x4e49;&#x4e3a;&#x5e38;&#x91cf;&#xff08;&#x4ee5;&#x4e0b;&#x503c;&#x5e76;&#x975e;&#x6240;&#x6709;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x90fd;&#x53ef;&#x7528;&#xff09;&#xff1a",{"_index":7347,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e2d;&#x5bf9;&#x5e94;&#x7684",{"_index":1409,"title":{},"body":{"basic/map.html#map":{}}}],["x4e2d;&#x5bf9;&#x5e94;&#x7684;&#x51fd;&#x6570;&#x6216;&#x65b9;&#x6cd5;&#xff1a",{"_index":7547,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4e2d;&#x5c01;&#x88c5;&#x4e86;&#x4e00;&#x4e2a",{"_index":7650,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4e2d;&#x5c06",{"_index":6870,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x4e2d;&#x5f15;&#x5165;&#x7684;&#x5305",{"_index":2786,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e2d;&#x6267;&#x884c;&#x3002;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x8981",{"_index":8110,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e2d;&#x6267;&#x884c;&#xff0c;go",{"_index":6435,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e2d;&#x6307;&#x5b9a;&#x540d",{"_index":8761,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4e2d;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x65b9;&#x4fbf;&#x7684;&#x51fd;&#x6570;&#xff1a",{"_index":4810,"title":{},"body":{"standards/io/ioutil.html#ReadDir-函数":{}}}],["x4e2d;&#x6587",{"_index":4707,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x4e2d;&#x65ad;&#x7684",{"_index":1366,"title":{},"body":{"basic/constant.html#iota":{}}}],["x4e2d;&#x662f;&#x62fc;&#x9519;&#x7684",{"_index":8817,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4e2d;&#x6700;&#x5173;&#x952e;&#x7684;&#x63a5;&#x53e3;&#xff0c;&#x5982;&#x679c;&#x6211;&#x4eec;&#x4ed4;&#x7ec6;&#x770b;&#x8fd9;&#x4e2a;&#x6587;&#x4ef6;&#x7684;&#x6e90;&#x4ee3;&#x7801;&#xff0c;&#x5c06;&#x4f1a;&#x53d1;&#x73b0;&#x5f88;&#x591a;&#x7ed3;&#x6784;&#x4f53;&#x5b9e;&#x73b0;&#x4e86;&#x8fd9;&#x4e2a;&#x63a5;&#x53e3;&#x7684",{"_index":8963,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4e2d;&#x6700;&#x540e;&#x51fa;&#x73b0;&#x4f4d;&#x7f6e;&#x7684;&#x7d22;&#x5f15;&#xff08",{"_index":5933,"title":{},"body":{"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["x4e2d;&#x6700;&#x591a;&#x53ea;&#x6709",{"_index":5992,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x4e2d;&#x6709",{"_index":8814,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4e2d;&#x6709;&#x4e09;&#x4e2a;&#x51fd;&#x6570;&#xff1a",{"_index":5809,"title":{},"body":{"standards/os/filepath.html#Windows-起作用的函数":{}}}],["x4e2d;&#x6709;&#x5b57;&#x6bb5",{"_index":9067,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4e2d;&#x67d0;&#x4e00;&#x4e2a;&#x65f6;&#x533a;&#xff09;&#x53ef;&#x4ee5;&#x83b7;&#x53d6;&#x5230;&#x7cfb;&#x7edf;&#x672c;&#x5730;&#x65f6;&#x533a;&#x3002",{"_index":3433,"title":{},"body":{"standards/time.html#时区":{}}}],["x4e2d;&#x6b63;&#x5f0f;&#x52a0;&#x5165;&#x4e86;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#x5b57;&#x5178;&#x7c7b;&#x578b",{"_index":8335,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4e2d;&#x6bcf;&#x4e2a;&#x6587;&#x4ef6;&#x53ea;&#x5199;&#x4e00;&#x4e2a",{"_index":2231,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x4e2d;&#x6ca1;&#x6709;&#x6570;&#x636e;&#xff0c;&#x90a3;&#x4e48;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x96f6;&#x503c;&#x3002",{"_index":2897,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e2d;&#x6ca1;&#x6709;&#x679a;&#x4e3e;&#x7684;&#x5b9a;&#x4e49;&#xff0c;&#x4f46;&#x662f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":1356,"title":{},"body":{"basic/constant.html#iota":{}}}],["x4e2d;&#x6ca1;&#x6709;&#x8be5;&#x65b9;&#x6cd5;&#x7684;&#x63a5;&#x53e3;&#xff0c;&#x5b83;&#x7528;&#x4e8e;&#x5199;&#x5165;&#x5355;&#x4e2a",{"_index":5530,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x4e2d;&#x7684",{"_index":1572,"title":{},"body":{"basic/json.html#序列化":{},"standards/time.html#Time":{},"standards/time.html#Ticker":{},"standards/io/bufio.html#bufio-Reader":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html#目录与链接":{},"standards/net/http.html#Request":{}}}],["x4e2d;&#x7684;&#x4e00;&#x4e2a",{"_index":5125,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x4e2d;&#x7684;&#x4e3b;&#x9898;&#x53c2;&#x6570;&#x4f18;&#x5148;&#x7ea7",{"_index":8774,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4e2d;&#x7684;&#x4ee3;&#x7801;&#x4e5f;&#x5c31;&#x6267;&#x884c;&#x5b8c;&#x4e86;&#xff0c;go",{"_index":6306,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e2d;&#x7684;&#x4ee3;&#x7801;&#x53ea;&#x6267;&#x884c;&#x4e86;&#x4e00;&#x90e8;&#x5206;&#x7684;&#x65f6;&#x5019;&#x6682;&#x505c;&#xff0c;&#x4ee5;&#x671f;&#x6240;&#x6709;&#x7684",{"_index":6313,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e2d;&#x7684;&#x4ee3;&#x7801;&#x6267;&#x884c;&#x5b8c;&#x6bd5;&#xff0c;&#x5f53;&#x524d;&#x7684",{"_index":6323,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e2d;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x5bf9;&#x540c;&#x4e00;&#x4e2a;&#x5b57;&#x5178;&#x8fdb;&#x884c;&#x8bfb;&#x5199;&#x64cd",{"_index":8331,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4e2d;&#x7684;&#x4efb;&#x4f55;&#x4ee3;&#x7801;&#xff0c;&#x90fd;&#x4e0d;&#x518d;&#x4f1a;&#x88ab;&#x6267;&#x884c;&#x3002;&#x6ce8;&#x610f;&#xff0c;&#x7531;&#x4e8e;&#x901a;&#x9053;&#x7c7b;&#x578b;&#x662f;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#xff0c;&#x6240;&#x4ee5;&#x5b83;&#x7684;&#x96f6;&#x503c;&#x5c31;&#x662f",{"_index":2985,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e2d;&#x7684;&#x4f4d;&#x7f6e;&#x4e3a;&#xff1a",{"_index":9245,"title":{},"body":{"standards/data/sort.html#Search":{}}}],["x4e2d;&#x7684;&#x4f4d;&#x7f6e;&#xff0c;&#x76f8;&#x5bf9;&#x4e8e;&#x524d;&#x9762;&#x63d0;&#x5230;&#x7684",{"_index":9268,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x4e2d;&#x7684;&#x4f9d;&#x8d56;&#x9879;&#x5199;&#x5165;&#x5230",{"_index":999,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e2d;&#x7684;&#x504f;&#x79fb;&#x91cf",{"_index":6987,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x4e2d;&#x7684;&#x5143;&#x7d20;&#x4e2a;&#x6570;&#x4e0d;&#x80fd;&#x5927;&#x4e8",{"_index":774,"title":{},"body":{"basic/array.html#数组":{}}}],["x4e2d;&#x7684;&#x5143;&#x7d20;&#x4e2a;&#x6570;&#xff1a",{"_index":5988,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x4e2d;&#x7684;&#x5143;&#x7d20;&#xff0c",{"_index":1754,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e2d;&#x7684;&#x5185;&#x5bb9;&#x3002;&#x4ece;&#x8f93;&#x51fa;&#x7ed3;&#x679c",{"_index":7114,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x4e2d;&#x7684;&#x51fd;&#x6570;&#x4e5f;&#x53ef;&#x4ee5;&#x5f53;&#x6210;&#x53d8;&#x91cf;&#x4f20;&#x9012;&#x6216;&#x8005;&#x6216;&#x8005;&#x8fd4;&#x56de;&#xff0c;&#x56e0;&#x6b64;&#x4e5f;&#x53ef;&#x4ee5;&#x5728;&#x4e2d;&#x95f4;&#x4ef6;&#x51fd;&#x6570",{"_index":9107,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x4e2d;&#x7684;&#x524d",{"_index":5945,"title":{},"body":{"standards/text/strings.html#字符串替换":{}}}],["x4e2d;&#x7684;&#x53c2;&#x6570;&#x88ab;&#x5ffd;&#x7565;&#x3002",{"_index":8810,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4e2d;&#x7684;&#x53e6;&#x4e00;&#x4e2a;&#x539f;&#x751f;&#x5b57;&#x5178;&#x7531;&#x5b83;&#x7684",{"_index":8373,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4e2d;&#x7684;&#x54ea;&#x4e00;&#x884c;&#x4ee3;&#x7801;&#x5728;&#x6b64",{"_index":663,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e2d;&#x7684;&#x54ea;&#x4e9b;&#x65b9;&#x6cd5;&#x53ef;&#x80fd;&#x4f1a;&#x9020;&#x6210;&#x5185;&#x5bb9;&#x7684;&#x6cc4;&#x9732",{"_index":3918,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2d;&#x7684;&#x5f15;&#x7528",{"_index":5492,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4e2d;&#x7684;&#x6570;&#x5b57;&#x3002",{"_index":775,"title":{},"body":{"basic/array.html#数组":{}}}],["x4e2d;&#x7684;&#x6570;&#x636e;&#xff0c;&#x8003;&#x8651;&#x5230;&#x8bfb;&#x53d6;&#x6240;&#x6709;&#x6570;&#x636e;&#x7684;&#x9700;&#x6c42;&#x6bd4;&#x8f83;&#x591a;&#xff0c;go",{"_index":4804,"title":{},"body":{"standards/io/ioutil.html#ReadAll-函数":{}}}],["x4e2d;&#x7684;&#x6587;&#x6863;&#x6ce8;&#x91ca;&#x4e00;&#x822c;&#x662f;&#x5b8c;&#x6574;&#x7684;&#x53e5;&#x5b50;&#xff0c",{"_index":2802,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e2d;&#x7684;&#x672a;&#x8bfb;&#x5185;&#x5bb9;&#x62f7;&#x8d1d;&#x8fdb;&#x53bb;&#xff0c;&#x6700;&#x540e;&#x518d;&#x7528;&#x65b0;&#x7684;&#x5bb9;&#x5668;&#x66ff;&#x6362;&#x6389;&#x539f;&#x6709;&#x7684;&#x5bb9;&#x5668;&#x3002;&#x8fd9;&#x4e2a;&#x65b0;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x5c06;&#x4f1a;&#x7b49;&#x4e8e;&#x539f;&#x6709;&#x5bb9;&#x91cf;&#x7684;&#x4e8c;&#x500d;&#x518d;&#x52a0;&#x4e0a;&#x53e6;&#x9700;&#x5b57;&#x8282;&#x6570;&#x7684;&#x548c;&#x3002",{"_index":3914,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2d;&#x7684;&#x67e5;&#x8be2;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5e76;&#x5c06;&#x89e3;&#x6790;&#x7ed3;&#x679c;&#x66f4;&#x65b0;&#x5230",{"_index":8788,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4e2d;&#x7684;&#x7b2c;&#x4e8c;&#x4e2a;&#x53c2;&#x6570",{"_index":9026,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4e2d;&#x7684;&#x7d22;&#x5f15;&#xff08",{"_index":5929,"title":{},"body":{"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["x4e2d;&#x7684;&#x9519;&#x8bef;&#x5904;&#x7406;&#x3002",{"_index":4887,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x4e2d;&#x7b2c;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x7684;&#x5185;&#x5bb9;&#x2026;&#x2026;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c",{"_index":7117,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x4e2d;&#x7ed3;&#x6784;&#x4f53;&#x8f6c;&#x4e3a",{"_index":1545,"title":{},"body":{"basic/json.html#序列化":{}}}],["x4e2d;&#x88ab;&#x5199;&#x5165;&#x7684;&#x5b57;&#x8282;&#x6570",{"_index":6829,"title":{},"body":{"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x4e2d;&#x88ab;&#x5ef6;&#x8fdf;&#x7684;&#x51fd;&#x6570;&#xff08",{"_index":635,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e2d;&#x8bbe;&#x7f6e;&#x4e86",{"_index":7640,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4e2d;&#x8bfb;&#x5230;&#x7684;&#x6570;&#x636e;&#x5199;&#x5165",{"_index":7129,"title":{},"body":{"standards/io/io.html#TeeReader-函数":{}}}],["x4e2d;&#x8bfb;&#x53d6;&#x4e00;&#x90e8;&#x5206;&#x5185;&#x5bb9;&#xff0c;&#x5e76;&#x7528;&#x5b83;&#x4eec;&#x586b;&#x6ee1;&#x957f;&#x5ea6;&#x4e3a;7&#x7684;&#x5b57;&#x8282;&#x5207;&#x7247",{"_index":3884,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2d;&#x8bfb;&#x53d6;&#x5185;&#x5bb9;&#x3002",{"_index":6000,"title":{},"body":{"standards/text/strings.html#从字符串中读取内容":{}}}],["x4e2d;&#x8bfb;&#x53d6;&#x548c;&#x89e3;&#x6790;&#x4e00;&#x4e2a;&#x8bf7;&#x6c42",{"_index":8750,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4e2d;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#xff0c;&#x76f4;&#x5230",{"_index":6887,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x4e2d;&#x8bfb;&#x53d6;&#x6700;&#x591a",{"_index":7405,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e2d;&#x8c03;&#x7528;&#x5143;&#x7d20;&#x7684",{"_index":2381,"title":{},"body":{"basic/interface.html#接口":{}}}],["x4e2d;&#x8fd0;&#x884c;&#xff0c",{"_index":6206,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e2d;&#x8fdb;&#x884c;&#x8bfb;&#x548c;&#x5199;&#x3002",{"_index":7044,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x4e2d;&#x95f4;&#x4ef6",{"_index":9096,"title":{"standards/net/http.html#中间件-Middleware":{}},"body":{}}],["x4e2d;&#x95f4;&#x4ef6;&#x5f88;&#x7b80;&#x5355;&#xff0c;&#x53ea;&#x8981;&#x5b9e;&#x73b0;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x7b7e;&#x540d;&#x4e3a",{"_index":9102,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x4e2d;&#xff09;&#xff1a",{"_index":7069,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x4e2d;&#xff0c",{"_index":1720,"title":{},"body":{"basic/pointer.html#为什么需要指针":{},"basic/operator.html#算术运算符":{},"basic/basic_data.html#字符串":{},"standards/text/strconv.html#字符串转为整型":{}}}],["x4e2d;&#xff0c;&#x4e00;&#x884c;&#x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x8bed;&#x53e5;&#x7ed3;&#x675f;&#xff0c;&#x4e0d;&#x9700;&#x8981;&#x4ee5;&#x5206;&#x53f7",{"_index":205,"title":{},"body":{"index.html#行分隔符":{}}}],["x4e2d;&#xff0c;&#x4e4b;&#x540e;&#x901a;&#x8fc7",{"_index":6950,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x4e2d;&#xff0c;&#x4ee5",{"_index":5661,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x4e2d;&#xff0c;&#x5177;&#x4f53;&#x5230;&#x9ad8;&#x7ea7;&#x7c7b;&#x578b",{"_index":1730,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e2d;&#xff0c;&#x5bf9;&#x4e8e;&#x5927;&#x90e8;&#x5206;&#x51fd;&#x6570;&#x800c;&#x8a00;&#xff0c;&#x6c38;&#x8fdc;&#x65e0;&#x6cd5;&#x786e;&#x4fdd;&#x80fd;&#x5426;&#x6210;&#x529f;&#x8fd0;&#x884c;&#xff08;&#x6709;&#x4e00;&#x90e8;&#x5206;&#x51fd;&#x6570;&#x603b;&#x662f;&#x80fd;&#x6210;&#x529f;&#x7684;&#x8fd0;&#x884c;&#x3002;&#x6bd4;&#x5982",{"_index":3166,"title":{},"body":{"basic/function.html#错误":{}}}],["x4e2d;&#xff0c;&#x5e95;&#x5c42;&#x5b9e;&#x73b0;&#x4f1a;&#x8c03;&#x7528",{"_index":7539,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4e2d;&#xff0c;&#x5f53",{"_index":7100,"title":{},"body":{"standards/io/io.html#WriteString-函数":{}}}],["x4e2d;&#xff0c;&#x63d0;&#x4f9b;&#x4e86",{"_index":5773,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x4e2d;&#xff0c;&#x6587;&#x4ef6;&#x5c5e;&#x6027;&#x5177;&#x4f53;&#x4fe1;&#x606f;&#x901a;&#x8fc7",{"_index":7493,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4e2d;&#xff0c;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x5c01;&#x88c5;&#x5728",{"_index":7322,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e2d;&#xff0c;&#x76f4;&#x5230;&#x6ca1;&#x6709;&#x6570;&#x636e;&#x53ef;&#x5199;&#x6216;&#x53d1;&#x751f;&#x9519;&#x8bef;&#x3002;&#x5176;&#x8fd4;&#x56de;&#x503c",{"_index":6904,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x4e2d;&#xff0c;&#x76f4;&#x5230;&#x8bfb;&#x4e86;&#x6700;&#x5c11",{"_index":7078,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x4e2d;&#xff0c;&#x8bed;&#x53e5;&#x7684;&#x6267;&#x884c;&#x987a;&#x5e8f;&#x53ef;&#x4ee5;&#x4fdd;&#x8bc1;&#xff0c;&#x5728;&#x58f0;&#x660e;&#x7684;&#x4f8b;&#x5b50;&#xff0c;&#x53ef;&#x4ee5;&#x4fdd;&#x8bc1",{"_index":7845,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e2d;&#xff0c;&#x8def;&#x5f84;&#x7684;&#x5206;&#x9694;&#x7b26;&#x662f",{"_index":5620,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x4e2d;&#xff0c;&#x901a;&#x8fc7",{"_index":8085,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e2d;&#xff0c;&#x975e;&#x5e03;&#x5c14;&#x503c;&#x4e0d;&#x80fd;&#x5f53;&#x505a",{"_index":261,"title":{},"body":{"index.html#类型转换":{}}}],["x4e2d;&#xff1a",{"_index":7364,"title":{},"body":{"standards/os/os.html#文件-I-O":{},"standards/data/sort.html#Search":{}}}],["x4e32",{"_index":5935,"title":{},"body":{"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["x4e32;&#x586b;&#x5165;&#xff0c;&#x5728;&#x5df2;&#x6709;&#x4e00;&#x4e2a;&#x6570;&#x7ec4;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x8fd9;&#x79cd;&#x6548;&#x7387;&#x4f1a;&#x5f88;&#x9ad8;&#xff0c;&#x4f46;&#x662f;&#x672c;&#x6765;&#x6ca1;&#x6709;&#xff0c;&#x53bb;&#x6784;&#x9020;&#x8fd9;&#x4e2a;&#x6570;&#x636e;&#x7684;&#x4ee3;&#x4ef7;&#x4e5f;&#x4e0d;&#x5c0f;&#x3002",{"_index":3756,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e32;&#x884c;&#x5730;&#x6267;&#x884c;&#x6d4b;&#x8bd5;&#x6d41;&#x7a0b;&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;&#x6b65;&#x9aa4",{"_index":4159,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x4e34;&#x65f6;&#x5bf9;&#x8c61",{"_index":8283,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60",{"_index":8276,"title":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}},"body":{}}],["x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60;&#x4e2d;&#x5b58;&#x50a8;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#x503c;&#x90fd;&#x5e94;&#x8be5;&#x662f;&#x72ec;&#x7acb;&#x7684;&#x3001;&#x5e73;&#x7b49;&#x7684;&#x548c;&#x53ef;&#x91cd;&#x7528;&#x7684",{"_index":8304,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e34;&#x65f6;&#x6587;&#x4ef6;&#xff08;&#x975e;&#x5907;&#x4efd;&#x6587;&#x4ef6;&#xff09",{"_index":7369,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e34;&#x65f6;&#x7ed3;&#x679c;&#x7684;&#x503c;&#x90fd;&#x662f;&#x4e0d;&#x53ef;&#x5bfb;&#x5740;&#x7684",{"_index":1768,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x4e3a",{"_index":1430,"title":{},"body":{"basic/map.html#map":{},"basic/struct.html#结构体":{},"basic/package.html#初始化包":{},"basic/basic_data.html#字符串":{},"basic/test.html#性能分析":{},"standards/data/big.html#big":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/os/filepath.html#遍历目录":{},"standards/io/io.html#Reader":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html#文件-I-O":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html#sort":{}}}],["x4e3a;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x3002;&#x4ee5;&#x4e0b;&#x4f1a;&#x7b80;&#x79f0;&#x540e;&#x8005;&#x4e3a",{"_index":369,"title":{},"body":{"index.html#编码":{}}}],["x4e3a;&#x4e86;&#x4fdd;&#x9669;&#x8d77;&#x89c1;&#x3002;&#x5982;&#x679c;&#x4e00;&#x4e2a",{"_index":7977,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e3a;&#x4e86;&#x548c;&#x9ed8;&#x8ba4;&#x7684;&#x5b89;&#x88c5;&#x5305;&#x533a;&#x522b;&#x5f00;&#x6765;&#xff0c;&#x91c7;&#x7528;&#x8fd9;&#x4e2a;&#x524d;&#x7f00;&#x6765;&#x91cd;&#x65b0;&#x5b89;&#x88c5;&#x90a3;&#x4e9b;&#x4f9d;&#x8d56;&#x7684;&#x5305;&#xff0c",{"_index":2754,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e3a;&#x4e86;&#x65b9;&#x4fbf;&#x5bf9;&#x5e38;&#x7528;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x7684;&#x64cd;&#x4f5c;&#xff0c",{"_index":9203,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x4e3a;&#x4e86;&#x907f;&#x514d;&#x56e0;&#x4e3a;&#x53d1;&#x9001;&#x6216;&#x8005;&#x63a5;&#x6536;&#x5bfc;&#x81f4;&#x7684;&#x963b;&#x585e;&#xff0c;&#x5c24;&#x5176;&#x662f;&#x5f53",{"_index":3009,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e3a;&#x4e86;&#x907f;&#x514d;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#xff0c;&#x5bf9;&#x4e8e;&#x6709;&#x7f13;&#x5b58;&#x7684;&#x4fe1;&#x9053;&#xff0c;&#x663e;&#x5f0f;&#x5730;&#x5173;&#x95ed;&#x4fe1;&#x9053",{"_index":2921,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x4f1a;&#x6709",{"_index":7843,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x5148;&#x8981;&#x9501;&#x5b9a;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x57fa;&#x4e8e;&#x7684;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x624d;&#x80fd;&#x8c03;&#x7528;&#x5b83;&#x7684",{"_index":7931,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x53ea;&#x8bfb;&#x64cd;&#x4f5c;&#x4e5f;&#x9700;&#x8981;&#x52a0;&#x9501",{"_index":7840,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x662f",{"_index":3508,"title":{},"body":{"standards/time.html#Time":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684",{"_index":7951,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x8981;&#x7528",{"_index":7970,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x8fd9;&#x4e48;&#x8bbe;&#x8ba1;&#xff1f",{"_index":2094,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x9700;&#x8981;&#x6307;&#x9488",{"_index":1702,"title":{"basic/pointer.html#为什么需要指针":{}},"body":{}}],["x4e3a;&#x4ec0;&#x4e48;&#xff1f",{"_index":1444,"title":{},"body":{"basic/map.html#map":{}}}],["x4e3a;&#x4f8b;&#xff0c;&#x5b83;&#x4f1a;&#x4ee5",{"_index":357,"title":{},"body":{"index.html#编码":{}}}],["x4e3a;&#x4f8b;&#xff1a",{"_index":6834,"title":{},"body":{"standards/io/io.html#Writer":{}}}],["x4e3a;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x7684;&#x5207;&#x7247;&#x4ee3;&#x8868;&#x3002",{"_index":3946,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e3a;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x7684;&#x5207;&#x7247;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x5b57;&#x8282;&#x5207;&#x7247;&#xff09;&#x3002",{"_index":3808,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e3a;&#x5199;&#x5165;&#x7684;&#x5b57;&#x8282;&#x6570;&#x3002",{"_index":6905,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x4e3a;&#x51fd;&#x6570;&#x540d;&#x524d;&#x7f00;&#xff0c;&#x540e;&#x7f00;&#x540d;&#x5fc5;&#x987b;&#x4ee5;&#x5927;&#x5199;&#x5b57;&#x6bcd;&#x5f00;&#x5934;&#xff0c;&#x5e76;&#x4e14;&#x53c2;&#x6570;&#x5217;&#x8868;&#x4e2d;&#x53ea;&#x5e94;&#x6709;&#x4e00;&#x4e2a",{"_index":4106,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x4e3a;&#x51fd;&#x6570;&#x540d;&#x524d;&#x7f00;&#xff0c;&#x540e;&#x7f00;&#x540d;&#x5fc5;&#x987b;&#x4ee5;&#x5927;&#x5199;&#x5b57;&#x6bcd;&#x5f00;&#x5934;&#xff0c;&#x5e76;&#x4e14;&#x552f;&#x4e00;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x5fc5;&#x987b",{"_index":4124,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x4e3a;&#x51fd;&#x6570;&#x540d;&#x524d;&#x7f00;&#xff0c;&#x793a;&#x4f8b;&#x51fd;&#x6570;&#x6ca1;&#x6709;&#x51fd;&#x6570;&#x53c2;&#x6570;&#x548c;&#x8fd4;&#x56de;&#x503c;&#xff1a",{"_index":4143,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x4e3a;&#x5347;&#x5e8f;&#x6392;&#x5e8f;&#x72b6;&#x6001;&#x3002;&#x5e76;&#x4e14;&#x5224;&#x65ad;&#x6761;&#x4ef6;&#x5fc5;&#x987b;&#x4e3a",{"_index":9314,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x4e3a;&#x5355;&#x4f4d;&#x3002",{"_index":432,"title":{},"body":{"advance/mm.html#回收":{}}}],["x4e3a;&#x5355;&#x4f4d;&#xff0c;&#x7c7b;&#x578b;&#x4e3a",{"_index":3416,"title":{},"body":{"standards/time.html#time":{}}}],["x4e3a;&#x53ef;&#x9009;&#x53c2;&#x6570",{"_index":1892,"title":{},"body":{"basic/slice.html#slice":{}}}],["x4e3a;&#x540e;&#x7f00;&#x5305;&#x540d;&#x7684;&#x6d4b;&#x8bd5;&#x5916;&#x90e8;&#x6269;&#x5c55;&#x5305;&#x90fd;&#x7531",{"_index":2199,"title":{},"body":{"basic/package.html#包声明":{}}}],["x4e3a;&#x540e;&#x7f00;&#x540d;&#x7684;&#x6e90;&#x6587;&#x4ef6;&#x5728;&#x6267;&#x884c",{"_index":4077,"title":{},"body":{"basic/test.html#测试":{}}}],["x4e3a;&#x5b57;&#x7b26;&#x4e32",{"_index":5951,"title":{},"body":{"standards/text/strings.html#字符串替换":{}}}],["x4e3a;&#x5bf9;&#x8c61;&#x5206;&#x914d;&#x5185;&#x5b58;&#x4ee5;&#x540e;&#xff0c",{"_index":525,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x4e3a;&#x5bf9;&#x8c61;&#x5206;&#x914d;&#x5185;&#x5b58;&#x65f6;&#xff0c;&#x53ea;&#x9700;&#x4ece;&#x5927;&#x5c0f;&#x5408;&#x9002;&#x7684;&#x94fe;&#x8868;&#x63d0;&#x53d6;&#x4e00;&#x5c0f;&#x5757;&#x5373;&#x53ef;&#x3002",{"_index":386,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x4e3a;&#x5e95;&#x7684;&#x5bf9;&#x6570;&#x51fd;&#x6570",{"_index":6085,"title":{},"body":{"standards/data/math.html#幂次函数":{}}}],["x4e3a;&#x5e95;&#x7684;&#x6307;&#x6570;&#x51fd;&#x6570",{"_index":6089,"title":{},"body":{"standards/data/math.html#幂次函数":{}}}],["x4e3a;&#x6253;&#x5f00;&#x7684;&#x6587;&#x4ef6;&#x5bf9;&#x8c61;&#xff09;&#xff0c;&#x6ce8;&#x91ca;&#x8bf4;&#x660e;&#x4e86;&#x5c06;&#x6587;&#x4ef6;&#x504f;&#x79fb;&#x91cf;&#x79fb;&#x52a8;&#x5230;&#x7684;&#x5177;&#x4f53;&#x4f4d;&#x7f6e;&#xff1a",{"_index":7466,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e3a;&#x6b62;&#xff0c;&#x56e0;&#x6b64;&#x5b83;&#x4e0d;&#x4f1a;&#x5c06;&#x6765",{"_index":7060,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x4e3a;&#x76f8;&#x5bf9;&#x504f;&#x79fb;&#x91cf;&#xff0c;&#x800c",{"_index":7457,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e3a;&#x76f8;&#x5bf9;&#x5f53;&#x524d;&#x4f4d;&#x7f6e;&#xff0c;2",{"_index":7460,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e3a;&#x76f8;&#x5bf9;&#x6587;&#x4ef6;&#x5f00;&#x5934;&#xff0c;1",{"_index":7459,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e3a;&#x76f8;&#x5bf9;&#x6587;&#x4ef6;&#x7ed3;&#x5c3e;&#x3002;&#x5b83",{"_index":7461,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4e3a;&#x7a7a;&#x5219;&#x4f7f;&#x7528;&#x5185;&#x90e8;&#x7684",{"_index":9027,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4e3a;&#x7a7a;&#x5b57;&#x7b26;&#x4e32;&#x3002",{"_index":5688,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x4e3a;&#x7a7a;&#x5b57;&#x7b26;&#x4e32;&#xff0c",{"_index":5684,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x4e3a;&#x7a7a;&#xff0c;&#x76f8;&#x5f53;&#x4e8e;&#x5206;&#x6210;&#x4e00;&#x4e2a;&#x4e2a;&#x7684",{"_index":5980,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x4e3a;&#x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#x6570;&#x3002;&#x9664",{"_index":6889,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x4e3a;&#x96c6;&#x5408;&#x5185;&#x5143;&#x7d20;&#x7684;&#x603b;&#x6570",{"_index":9197,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x4e3a;&#x96f6;&#x503c;&#xff09;&#x3002;&#x679c;&#x7136;&#xff0c",{"_index":1579,"title":{},"body":{"basic/json.html#序列化":{}}}],["x4e3a;1&#x7684",{"_index":652,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e3b",{"_index":661,"title":{},"body":{"basic/error.html#Panic-异常":{},"concurrent/goroutine.html#goroutine-1":{}}}],["x4e3b;&#x52a8;&#x5783;&#x573e;&#x56de;&#x6536",{"_index":548,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x4e3b;&#x52a8;&#x5783;&#x573e;&#x56de;&#x6536;&#xff0c;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":549,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x4e3b;&#x673a;&#x540d",{"_index":8748,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4e3b;&#x7248;&#x672c;&#x53f7",{"_index":8854,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x4e3b;&#x8981;&#x5b58;&#x5728;&#x4e8e;&#xff1a",{"_index":4236,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4e3b;&#x8981;&#x5b8c;&#x6210;&#x5982;&#x4e0b;&#x5de5;&#x4f5c;&#xff1a",{"_index":6558,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e3b;&#x8981;&#x7528;&#x4e8e;&#x7f16;&#x8bd1;&#x4ee3;&#x7801;&#xff0c;&#x4f7f;&#x7528",{"_index":2729,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e3b;&#x8981;&#x7528;&#x6765;&#x5b58;&#x50a8;&#x5f53;&#x524d;&#x8c03;&#x7528;&#x6808;&#x7528;&#x5230;&#x7684;&#x7b80;&#x5355;&#x7c7b;&#x578b;&#x6570;&#x636e;&#xff1a",{"_index":1716,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e3e;&#x4f8b",{"_index":4661,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x4e4b;&#x4e0a;&#x7684;&#x3002;&#x5728;&#x7ed1;&#x5b9a;&#x6709;&#x6548;&#x7684",{"_index":6483,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e4b;&#x4e3a",{"_index":6468,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e4b;&#x524d;&#x4f1a;&#x89e3;&#x9501;&#x5b83;&#x57fa;&#x4e8e;&#x7684;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x8c03;&#x7528;&#x8be5",{"_index":7947,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e4b;&#x524d;&#x7684;&#x903b;&#x8f91",{"_index":9112,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x4e4b;&#x524d;&#x7684;&#x90a3;&#x4e2a",{"_index":6615,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e4b;&#x524d;&#x90fd;&#x4f1a;&#x8c03;&#x7528;&#xff0c;&#x56e0;&#x6b64",{"_index":8327,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e4b;&#x524d;&#xff0c;&#x5148;&#x5c06;&#x672b;&#x5c3e;&#x7684",{"_index":5647,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x4e4b;&#x524d;&#xff0c;&#x6ca1;&#x6cd5;&#x63a7;&#x5236;&#x8fde;&#x63a5;&#x6c60;&#xff0c;go1.2.1",{"_index":4509,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x4e4b;&#x540e;&#x4e0d;&#x4f1a;&#x4f7f;&#x7528;&#x4e86;&#xff0c;&#x5e94;&#x8be5;&#x8c03;&#x7528",{"_index":4458,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x4e4b;&#x540e;&#x4f1a;&#x5728;&#x6bcf;&#x6b21",{"_index":8326,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e4b;&#x540e;&#x5229;&#x7528;&#x8fd9;&#x4e2a;&#x901a;&#x9053;&#xff0c;&#x8ba9;&#x4e3b",{"_index":8062,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e4b;&#x540e;&#x6267;&#x884c;&#xff0c;&#x6240;&#x4ee5;&#x8fd9;&#x91cc;&#x7684",{"_index":3187,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x4e4b;&#x540e;&#x7684;&#x65b0;&#x5185;&#x5bb9;&#x8986;&#x76d6;&#x6389;&#x3002",{"_index":3911,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e4b;&#x540e;&#x7684;&#x8bed;&#x53e5;&#x624d;&#x4f1a;&#x7ee7;&#x7eed;&#x6267;&#x884c;&#x3002",{"_index":2936,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e4b;&#x540e;&#x7684;&#x8bed;&#x53e5;&#xff0c;&#x8fd9;&#x65f6;&#x5019;&#x5176;&#x5b83;&#x901a;&#x4fe1;&#x662f;&#x4e0d;&#x4f1a;&#x6267;&#x884c;&#x7684;&#x3002",{"_index":1070,"title":{},"body":{"basic/flow.html#select":{}}}],["x4e4b;&#x540e;&#x8c03;&#x7528",{"_index":2512,"title":{},"body":{"standards/log.html#分类":{}}}],["x4e4b;&#x540e;&#xff0c",{"_index":938,"title":{},"body":{"basic/env_config.html#工作区":{},"basic/basic_data.html#字符串":{}}}],["x4e4b;&#x540e;&#xff0c;&#x6267;&#x884c",{"_index":2510,"title":{},"body":{"standards/log.html#分类":{}}}],["x4e4b;&#x540e;&#xff0c;&#x63d0;&#x4f9b;&#x4e86;&#x4e24;&#x4e2a;&#x65b9;&#x6cd5;&#x6765;&#x63a7;&#x5236;&#x8fde;&#x63a5;&#x6c60;&#x3002",{"_index":4510,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x4e4b;&#x540e;&#xff0c;go",{"_index":6276,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e4b;&#x5916;&#xff0c;&#x5728;&#x8bfb;&#x53d6;&#x8fc7;&#x7a0b;&#x4e2d;&#x9047;&#x5230;&#x7684;&#x4efb;&#x4f55;&#x9519;&#x8bef;&#x4e5f",{"_index":6890,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x4e4b;&#x5916;&#xff0c;&#x8fd8;&#x6709",{"_index":2514,"title":{},"body":{"standards/log.html#分类":{}}}],["x4e4b;&#x7c7b;&#x7684;&#x5bf9;&#x8c61;&#xff0c;golang",{"_index":8312,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e4b;&#x7c7b;&#x7684;&#x73af;&#x5883;&#x53d8;&#x91cf;&#xff08;&#x8fd9;&#x4e9b;&#x8def;&#x5f84;&#x88ab;&#x7279;&#x5b9a;&#x4e8",{"_index":5701,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x4e4b;&#x95f4",{"_index":6216,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e4b;&#x95f4;&#x201c;&#x516c;&#x5e73;&#x201d;&#x7684;&#x7ade;&#x4e89",{"_index":6444,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e4b;&#x95f4;&#x7684;&#x5143;&#x7d20;&#xff0c",{"_index":5276,"title":{},"body":{"standards/data/container.html#环":{}}}],["x4e4b;&#x95f4;&#x7684;&#x8f6c;&#x6362;&#x3002;utf16",{"_index":5106,"title":{},"body":{"standards/text/unicode.html#unicode":{}}}],["x4e4b;&#x95f4;&#x7684;&#x901a;&#x4fe1;&#x673a;&#x5236;&#x3002",{"_index":2877,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e4b;&#x95f4;&#x7684;&#x901a;&#x4fe1;&#x867d;&#x7136;&#x6709;&#x591a;&#x79cd;&#x673a;&#x5236;&#x53ef;&#x9009;&#xff0c;&#x4f46;&#x7528;&#x8d77;&#x6765;&#x662f;&#x76f8;&#x5f53;&#x590d;&#x6742;&#xff1b",{"_index":6422,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e58;&#x4ee5",{"_index":6120,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x4e5f",{"_index":7039,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/net/http.html#Request":{}}}],["x4e5f;&#x4e00;&#x5b9a;&#x4e0d;&#x7b49;&#x4e8",{"_index":5460,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4e5f;&#x4e00;&#x6837;&#x3002;&#x5c06;&#x8fd9;&#x4e9b",{"_index":6436,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e5f;&#x4e0d;&#x80fd;&#x643a;&#x5e26;&#x4efb;&#x4f55;&#x6570;&#x636e;&#x3002",{"_index":8221,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4e5f;&#x4f1a;&#x662f;&#x8fd9;&#x6837;&#x3002",{"_index":737,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x4e5f;&#x4f1a;&#x89e3;&#x7ed1",{"_index":6594,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e5f;&#x53eb;&#x505a;&#x540c;&#x6b65",{"_index":2924,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x4e0d;&#x6267;&#x884c;&#x8fd9;&#x4e00;&#x6b65;&#xff0c",{"_index":995,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x521b;&#x5efa;&#x6587;&#x6863;&#x5b50;&#x76ee;&#x5f55;&#xff0c;&#x4f8b;&#x5982",{"_index":2594,"title":{},"body":{"theme/theme-usage.html#添加文档":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x5728;&#x542f;&#x52a8;&#x672c;&#x5730;&#x7684",{"_index":2818,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x7c7b;&#x4f3c;&#x7684;&#x529f;&#x80fd;&#x3002",{"_index":7687,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x7ffb;&#x8bd1;&#x4e3a",{"_index":350,"title":{},"body":{"index.html#编码":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x8d4b;&#x503c;&#x3002",{"_index":1690,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":6897,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x4e5f;&#x5404;&#x6709;&#x4e0d;&#x540c;&#x3002;&#x5b9e;&#x9645;&#x4e0a;&#xff0c;&#x53ea;&#x6709",{"_index":1731,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e5f;&#x56e0;&#x4e3a;&#x4e3a;&#x8fd9;&#x4e2a;&#x539f;&#x56e0;&#x5bf9;&#x591a",{"_index":5497,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4e5f;&#x5b9e;&#x73b0;&#x4e86",{"_index":4799,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x4e5f;&#x5c31;&#x662f;&#x6211;&#x4eec;&#x7f16;&#x5199;&#x7684;&#x6700;&#x5916;&#x5c42;&#x51fd;&#x6570;&#x90a3;&#x91cc;&#x3002",{"_index":677,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c",{"_index":6916,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x4e00;&#x65e6;&#x4ea7;&#x751f;&#x6b7b;&#x9501;&#xff0c;&#x7a0b;&#x5e8f;&#x5fc5;&#x7136;&#x5d29;&#x6e83",{"_index":7888,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x6211;&#x4eec;&#x901a;&#x8fc7",{"_index":7134,"title":{},"body":{"standards/io/io.html#TeeReader-函数":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x6700;&#x591a;&#x53ea;&#x80fd;&#x8fd4;&#x56d",{"_index":7004,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x8fd9;&#x65f6;&#x53ea;&#x662f;&#x6d45;&#x8868;&#x590d;&#x5236;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x6df1;&#x5c42;&#x590d;&#x5236",{"_index":3223,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;sectionread",{"_index":6991,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x4e5f;&#x662f",{"_index":8376,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{},"standards/net/http.html#自定义处理器":{}}}],["x4e5f;&#x662f;&#x4e00;&#x4e2a;&#x6570;&#x636e;&#x5bf9;&#x8c61;&#xff0c;&#x63cf;&#x8ff0",{"_index":8850,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x4e5f;&#x662f;&#x54cd;&#x5e94;&#xff0c;&#x53ea;&#x4e0d;&#x8fc7;&#x662f;&#x4e13;&#x95e8;&#x7528;&#x5728;&#x670d;&#x52a1;&#x7aef;&#xff0c;&#x548c",{"_index":8923,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4e5f;&#x6709;&#x53ef;&#x80fd;&#x662f",{"_index":6826,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4e5f;&#x6bd4;&#x8f83;&#x5bb9;&#x6613;&#x505a;&#x9488;&#x5bf9;&#x6027;&#x7684",{"_index":1718,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e5f;&#x7c7b;&#x4f3c;&#x3002",{"_index":2516,"title":{},"body":{"standards/log.html#分类":{}}}],["x4e5f;&#x90fd;&#x4e0d;&#x6765;&#x89e3;&#x9501;&#xff0c;&#x90a3;&#x4e48;&#x53c8;&#x7531;&#x8c01;&#x6765;&#x8fdb;&#x5165;&#x4e34;&#x754c;&#x533a;&#xff0c;&#x5e76;&#x6539;&#x53d8;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#x5462;&#xff1f;&#x53ea;&#x8981;&#x5171;&#x4eab;&#x8d44;&#x6e90",{"_index":7962,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e86",{"_index":6845,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["x4e86;&#x3002",{"_index":6449,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e86;&#x4e00;&#x4efd;&#xff0c;&#x4e0d;&#x518d;&#x662f;&#x6307;&#x5411",{"_index":5470,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4e86;&#x6240;&#x6709;&#x9700;&#x8981;&#x5b83;&#x6765;&#x6267;&#x884c;&#x7684",{"_index":6479,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e86;&#x67d0;&#x4e2a;&#x6b63;&#x6574;&#x6570;&#xff0c;&#x800c;&#x540e;&#x53c8;&#x7ecf;&#x8fc7;&#x4e00;&#x7cfb;&#x5217;&#x7684;&#x53d8;&#x5316;&#xff0c;&#x6700;&#x7ec8;&#x7531;&#x67d0;&#x4e2a;&#x6b63;&#x6574;&#x6570;&#x53c8;&#x53d8;&#x56de;&#x4e86",{"_index":8104,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e86;&#x68c0;&#x9a8c;&#x65f6;&#x95f4;&#x662f;&#x5426;&#x662f;&#x663e;&#x5f0f;&#x521d;&#x59cb;&#x5316;&#x7684;&#x4e00;&#x4e2a;&#x7b80;&#x5355;&#x9014;&#x5f84;&#x3002",{"_index":3461,"title":{},"body":{"standards/time.html#Time":{}}}],["x4e86;&#x89e3;&#x5185;&#x90e8;&#x539f;&#x7406;&#x540e;&#xff0c;&#x53ef;&#x4ee5;&#x5728;&#x5b66;&#x751f;&#x6210;&#x7ee9;&#x6392;&#x5e8f;&#x793a;&#x4f8b;&#x4e2d;&#x4f7f;&#x7528",{"_index":9240,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x4e86;&#x8bfb;&#x76ee;&#x5f55;&#x529f;&#x80fd;&#x3002",{"_index":7668,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4e86;&#xff0c;&#x8fd4;&#x56d",{"_index":3574,"title":{},"body":{"standards/time.html#定时器":{}}}],["x4e89;&#x7528;&#x8fd9;&#x628a;&#x9501;&#x3002",{"_index":7869,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e8b;&#x5b9e;&#x4e0a;&#xff0c;&#x5728",{"_index":7106,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x4e8b;&#x60c5;&#x5728;&#x6d41;&#x7a0b;&#x4e0a;&#x5176;&#x5b9e;&#x57fa;&#x672c;&#x4e00;&#x81f4;&#xff0c;&#x53ea;&#x4e0d;&#x8fc7;&#x6bcf;&#x4e00;&#x6b65;&#x64cd;&#x4f5c;&#x7684;&#x5bf9;&#x8c61;&#x662f;&#x4e0d;&#x540c;&#x7684;&#x3002",{"_index":7930,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e8c;&#x6bdb",{"_index":5323,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x4e8c;&#x7ef4;&#x6570;&#x7ec4",{"_index":783,"title":{"basic/array.html#二维数组":{}},"body":{}}],["x4e8c;&#x8fdb;&#x5236;&#x8868;&#x793a",{"_index":4677,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x4e8e",{"_index":5676,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x4e8e;&#x4f5c;&#x4e3a",{"_index":4378,"title":{},"body":{"standards/data/big.html#big":{}}}],["x4e8e;&#x5f53;&#x524d;&#x7684;&#x504f;&#x79fb;&#xff0c;&#x800c",{"_index":6913,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x4e8e;&#x64cd;&#x4f5c;&#x7b26;&#x3002",{"_index":1772,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x4e8e;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x8c03;&#x5ea6;&#x7684;&#xff0c;&#x5373;&#x7a0b;&#x5e8f;&#x8d1f;&#x8d23;&#x521b;&#x5efa;&#x7ebf;&#x7a0b;&#xff0c;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x8d1f;&#x8d23;&#x8c03;&#x5ea6;&#x3002;&#x4f46;&#x662f;&#x8fd9;&#x79cd;&#x652f;&#x6301;&#x5e76;&#x53d1;&#x7684;&#x65b9;&#x5f0f;&#x6709;&#x4e0d;&#x5c11;&#x7f3a;&#x9677;&#xff1a",{"_index":6410,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e8e;&#x7a0b;&#x5e8f;&#x903b;&#x8f91;&#x548c;&#x7a0b;&#x5e8f;&#x6027;&#x80fd;&#x90fd;&#x662f;&#x6709;&#x597d;&#x5904;&#x7684;&#x3002",{"_index":3028,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e8e;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x7684;&#x503c;&#x5728;&#x88ab;&#x771f;&#x6b63;&#x4f7f;&#x7528;&#x4e4b;&#x540e;&#xff0c;&#x5c31;&#x4e0d;&#x5e94;&#x8be5;&#x518d;&#x88ab;&#x590d;&#x5236;&#x4e86;&#x3002",{"_index":8282,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e8e;&#x8ba1;&#x7b97;&#x673a;&#x4e2d;&#x771f;&#x6b63;&#x7684",{"_index":4199,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x4e92;&#x65a5;&#x9501",{"_index":3182,"title":{},"body":{"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html#共享变量":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e92;&#x65a5;&#x9501;&#xff1a",{"_index":7819,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e9b;&#x7c7b;&#x578b;&#x7684;&#x5bbd;&#x5ea6;&#x5c31;&#x90fd;&#x662f",{"_index":1461,"title":{},"body":{"basic/map.html#map":{}}}],["x4ea4;&#x4e92;&#x5408;&#x4f5c;&#x5b8c;&#x6210;&#x4efb;&#x52a1;&#x3002;&#x4e00;&#x4e2a",{"_index":6530,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4ea4;&#x6362;&#x503c",{"_index":2433,"title":{},"body":{"basic/var.html#赋值":{}}}],["x4ea4;&#x6362;&#x7d22;&#x5f15;&#x4e3a",{"_index":9201,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x4ea7;&#x751f",{"_index":2780,"title":{},"body":{"commands/build.html#工具":{}}}],["x4eab;&#x5176;&#x6210;&#x5730;&#x4f7f;&#x7528;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x6240;&#x62e5;&#x6709;&#x7684;&#x4e00;&#x5207;&#x3002;&#x5982;&#x679c;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x6709;&#x54ea;&#x91cc;&#x4e0d;&#x5408;&#x5fc3;&#x610f;&#xff0c;&#x6211;&#x4eec;&#x8fd8;&#x53ef;&#x4ee5;&#x7528;&#x201c;&#x5305;&#x88c5;&#x201d;&#x6216;&#x201c;&#x5c4f;&#x853d;&#x201d;&#x7684;&#x65b9;&#x5f0f;&#x53bb;&#x8c03;&#x6574;&#x548c;&#x4f18;&#x5316;&#x3002",{"_index":1281,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x4ec0;&#x4e48;&#x53eb;&#x5185;&#x5bb9;&#x6cc4;&#x9732;&#xff1f;&#x8fd9;&#x91cc;&#x6240;&#x8bf4;&#x7684;&#x5185;&#x5bb9;&#x6cc4;&#x9732;&#x662f;&#x6307;&#xff0c;&#x4f7f;&#x7528",{"_index":3919,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ec0;&#x4e48;&#x65f6;&#x5019;&#x4f7f;&#x7528",{"_index":2831,"title":{},"body":{"commands/build.html#工具":{}}}],["x4ec0;&#x4e48;&#x662f;&#x4e3b",{"_index":6221,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4ec0;&#x4e48;&#x662f;&#x5806",{"_index":5292,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x4ec5;&#x4ec5;&#x53ea;&#x662f;&#x60f3;&#x8ba1;&#x7b97;&#x5bfc;&#x5165;&#x5305;&#x7684;&#x5305;&#x7ea7;&#x53d8;&#x91cf;&#x7684;&#x521d;&#x59cb;&#x5316;&#x8868;&#x8fbe;&#x5f0f;&#x548c;&#x6267;&#x884c;&#x5bfc;&#x5165;&#x5305;&#x7684",{"_index":2181,"title":{},"body":{"basic/package.html#点操作":{}}}],["x4ec5;&#x7528;&#x4e8e;&#x6574;&#x6570;&#x95f4;&#x7684;&#x8fd0;&#x7b97;&#x3002;&#x9664;&#x6cd5;&#x8fd0;&#x7b97;&#x7b26",{"_index":1794,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x4ecb;&#x7ecd",{"_index":158,"title":{"index.html#Golang-介绍":{}},"body":{}}],["x4ece",{"_index":673,"title":{},"body":{"basic/error.html#Panic-异常":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/data/container.html#堆":{},"standards/text/strings.html#从字符串中读取内容":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#HTTP-Server":{}}}],["x4ece;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x5b57;&#x7b26;&#x4e32;&#x8bfb;&#x53d6;&#x6587;&#x672c",{"_index":4657,"title":{},"body":{"standards/io/fmt.html#Scan":{}}}],["x4ece;&#x57fa;&#x672c;&#x8f93;&#x5165;&#x6e90;&#x7684;&#x504f;&#x79fb;&#x91cf",{"_index":6852,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x4ece;&#x5806;&#x9876",{"_index":5308,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x4ece;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x8bfb;&#x53d6;&#x4e0b;&#x4e00;&#x4e2a",{"_index":6001,"title":{},"body":{"standards/text/strings.html#从字符串中读取内容":{}}}],["x4ece;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x8bfb;&#x53d6;&#x5185;&#x5bb9",{"_index":5995,"title":{"standards/text/strings.html#从字符串中读取内容":{}},"body":{}}],["x4ece;&#x5b57;&#x7b26;&#x4e32;&#x8bfb;&#x53d6",{"_index":6818,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4ece;&#x6307;&#x5b9a;&#x4f4d;&#x7f6e;&#x5220;&#x9664;&#x6570;&#x636e;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x5220;&#x9664;&#x7684;&#x6570;&#x636",{"_index":5310,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x4ece;&#x6307;&#x5b9a;&#x7684",{"_index":4655,"title":{},"body":{"standards/io/fmt.html#Scan":{}}}],["x4ece;&#x6307;&#x5b9a;&#x7684;&#x4f4d;&#x7f6e;&#xff08;&#x76f8;&#x5bf9;&#x4e8e;&#x6587;&#x4ef6;&#x5f00;&#x59cb;&#x4f4d;&#x7f6e;&#xff09;&#x8bfb;&#x53d6;&#x957f;&#x5ea6;&#x4e3a",{"_index":7411,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4ece;&#x666e;&#x901a;&#x6587;&#x4ef6;&#x8bfb;&#x53d6;&#xff0c;&#x5176;&#x4e2d",{"_index":6816,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4ece;&#x6807;&#x51c6;&#x8f93;&#x5165;&#x8bfb;&#x53d6",{"_index":6815,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4ece;&#x6807;&#x51c6;&#x8f93;&#x5165;os.stdin&#x8bfb;&#x53d6;&#x6587;&#x672c",{"_index":4654,"title":{},"body":{"standards/io/fmt.html#Scan":{}}}],["x4ece;&#x6839;&#x51fa;&#x53d1;&#x626b;&#x63cf;&#x6240;&#x6709;&#x53ef;&#x8fbe;&#x5bf9;&#x8c61;&#xff0c;&#x6807;&#x8bb0;&#x4e3a;&#x7070;&#x8272;&#xff0c;&#x653e;&#x5165;&#x5f85;&#x5904;&#x7406;&#x961f;&#x5217;&#x3002",{"_index":516,"title":{},"body":{"advance/gc.html#三色标记和写屏障":{}}}],["x4ece;&#x7b2c",{"_index":3743,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ece;&#x7ba1;&#x9053;&#x4e2d;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#x3002;&#x8be5;&#x65b9;&#x6cd5;&#x4f1a;&#x5835;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x7ba1;&#x9053;&#x5199;&#x5165;&#x7aef;&#x5f00;&#x59cb;&#x5199;&#x5165;&#x6570;&#x636e;&#x6216;&#x5199;&#x5165;&#x7aef;&#x88ab;&#x5173;&#x95ed;&#x3002;&#x5982;&#x679c;&#x5199;&#x5165;&#x7aef;&#x5173;&#x95ed;&#x65f6;&#x5e26;&#x6709",{"_index":7014,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x4ece;&#x7ed3;&#x679c;&#x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c;&#x7b2c;&#x4e00;&#x6b21",{"_index":5435,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4ece;&#x800c;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5b57;&#x7b26;&#x4e32",{"_index":3784,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ece;&#x8f93;&#x5165;&#x4e2d;&#x8bfb;&#x53d6;&#x76f4;&#x5230;&#x9047;&#x5230;&#x754c;&#x5b9a;&#x7b26;&#xff08;delim&#xff09;&#x4e3a;&#x6b62;&#xff0c;&#x8fd4;&#x56de;&#x7684",{"_index":5463,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4ece;&#x8f93;&#x5165;&#x4e2d;&#x8bfb;&#x53d6;&#xff0c;&#x76f4;&#x5230;&#x9047;&#x5230;&#x7b2c;&#x4e00;&#x4e2a;&#x754c;&#x5b9a;&#x7b26;&#xff08;delim&#xff09;&#x4e3a;&#x6b62;&#xff0c;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x6307;&#x5411;&#x7f13;&#x5b58;&#x4e2d;&#x5b57;&#x8282;&#x7684",{"_index":5430,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4ece;&#x8f93;&#x51fa;&#x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c",{"_index":5984,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x4ece;&#x961f;&#x5217;&#x53d6;&#x51fa;&#x7070;&#x8272;&#x5bf9;&#x8c61;&#xff0c;&#x5c06;&#x5176;&#x5f15;&#x7528;&#x5bf9;&#x8c61;&#x6807;&#x8bb0;&#x4e3a;&#x7070;&#x8272;&#x653e;&#x5165;&#x961f;&#x5217;&#xff0c;&#x81ea;&#x8eab;&#x6807;&#x8bb0;&#x4e3a;&#x9ed1;&#x8272;&#x3002",{"_index":517,"title":{},"body":{"advance/gc.html#三色标记和写屏障":{}}}],["x4ece;0&#x5f00;&#x59cb;,&#x5982;&#x679c;&#x4e0d;&#x5b58;&#x5728;&#xff0c;&#x8fd4;&#x56d",{"_index":3771,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ee3;&#x66ff",{"_index":1080,"title":{},"body":{"basic/flow.html#for":{},"standards/time.html#定时器":{}}}],["x4ee3;&#x66ff;&#x672c;&#x51fd;&#x6570;&#x3002;&#x5b83;&#x4f1a;&#x4f7f;&#x7528;&#x6307;&#x5b9a;&#x7684;&#x9009;&#x9879;&#xff08;&#x5982",{"_index":7338,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4ee3;&#x7406;&#x7684;&#x683c;&#x5f0f;&#x53bb;&#x5199;&#x3002",{"_index":8842,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4ee3;&#x7801;&#x3002",{"_index":4248,"title":{},"body":{"basic/test.html#性能分析":{},"standards/data/sort.html#Reverse":{}}}],["x4ee3;&#x7801;&#x4e2d;&#x9996;&#x5148;&#x6784;&#x9020;&#x4e86;&#x4e00;&#x4e2a",{"_index":7110,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x4ee3;&#x7801;&#x4ee5;&#x53ca;&#x5806;&#x5185;&#x5b58;&#x7684;&#x4f7f;&#x7528;&#x60c5;&#x51b5;&#xff0c;&#x8fd9;&#x91cc;&#x5305;&#x542b;&#x5df2;&#x5206;&#x914d;&#x548c;&#x5df2;&#x91ca;&#x653e;&#x7684",{"_index":4250,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4ee3;&#x7801;&#x5230",{"_index":2725,"title":{},"body":{"commands/build.html#工具":{}}}],["x4ee3;&#x7801;&#x5305;&#x4e2d",{"_index":649,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4ee3;&#x7801;&#x70b9;&#x662f",{"_index":340,"title":{},"body":{"index.html#编码":{}}}],["x4ee3;&#x7801;&#x70b9;&#x7684",{"_index":3940,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ee3;&#x7801;&#x70b9;&#x7684;&#x6574;&#x6570;&#x503c;&#xff0c;&#x5e76;&#x4f7f;&#x7528;&#x201c;u+&#x201d;&#x4f5c;&#x4e3a;&#x524d;&#x7f00;&#x3002;&#x6bd4;&#x5982;&#xff0c;&#x82f1;&#x6587;&#x5b57;&#x6bcd;&#x5b57;&#x7b26;&#x201c;a&#x201d;&#x7684",{"_index":339,"title":{},"body":{"index.html#编码":{}}}],["x4ee3;&#x7801;&#x90fd;&#x5728",{"_index":6434,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4ee3;&#x7801;&#xff1a",{"_index":7067,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x7eb3;&#x79d2;&#x7cbe;&#x5ea6;&#x7684;&#x65f6;&#x95f4;&#x70b9;&#x3002;&#x7a0b;&#x5e8f;&#x4e2d;&#x5e94;&#x4f7f;&#x7528",{"_index":3446,"title":{},"body":{"standards/time.html#Time":{}}}],["x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x8bed;&#x53e5;&#xff0c;&#x5982;&#xff1a;ddl&#x3001;dml",{"_index":4438,"title":{},"body":{"standards/database/sql.html#类型":{}}}],["x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x901a;&#x4fe1;&#x64cd;&#x4f5c;&#xff0c;&#x53d1;&#x9001;&#x6216;&#x8005;&#x63a5;&#x6536;&#x3002",{"_index":3003,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4ee3;&#x8868;&#x4e24;&#x4e2a;&#x65f6;&#x95f4;&#x70b9;&#x4e4b;&#x95f4;&#x7ecf;&#x8fc7;&#x7684;&#x65f6;&#x95f4;&#xff0c;&#x4ee5",{"_index":3414,"title":{},"body":{"standards/time.html#time":{}}}],["x4ee3;&#x8868;&#x540c;&#x4e00;&#x5730;&#x5740;&#x7684;&#x6700;&#x77ed;&#x8def;&#x5f84;&#x3002",{"_index":5709,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x4ee3;&#x8868;&#x5e26;&#x6709;&#x7279;&#x5b9a;&#x5c5e;&#x6027;&#x7684;&#x4e00;&#x4e2a;&#x4e8b;&#x52a1;&#x3002",{"_index":4440,"title":{},"body":{"standards/database/sql.html#类型":{}}}],["x4ee3;&#x8868;&#x5f53;&#x524d;&#x7cfb;&#x7edf;&#x672c;&#x5730;&#x65f6;&#x533a;&#xff1b",{"_index":3425,"title":{},"body":{"standards/time.html#时区":{}}}],["x4ee3;&#x8868;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x7136;&#x540e;&#x628a",{"_index":6364,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4ee3;&#x8868;&#x7684;&#x662f;&#x65e2;&#x65e0;&#x53c2;&#x6570;&#x58f0;&#x660e;&#x4e5f;&#x65e0;&#x7ed3;&#x679c;&#x58f0;&#x660e;&#x7684;&#x51fd;&#x6570;&#x7c7b;&#x578b",{"_index":6355,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4ee3;&#x8868;&#x7684;&#x662f;&#xff1a;&#x6b64;&#x884c;&#x4ee3;&#x7801;&#x76f8;&#x5bf9;&#x4e8e;&#x5176;&#x6240;&#x5c5e;&#x51fd;&#x6570;&#x7684;&#x5165;&#x53e3;&#x7a0b;&#x5e8f;&#x8ba1;&#x6570;&#x504f;&#x79fb;&#x91cf;&#x3002;&#x7528;&#x5904;&#x5e76;&#x4e0d;&#x5927;&#x3002",{"_index":666,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4ee3;&#x8868;&#x7684;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#xff0c;&#x5982;&#x679c",{"_index":5665,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x4ee3;&#x8868;&#x7a7a;&#x6807;&#x8bc6;&#x7b26;&#xff0c",{"_index":214,"title":{},"body":{"index.html#空标识符":{}}}],["x4ee3;&#x8868;&#x8fd9",{"_index":7331,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4ee3;&#x8868;&#x8fd9;&#x4e2a",{"_index":2883,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4ee3;&#x8868;&#x901a;&#x7528;&#x534f;&#x8c03;&#x65f6;&#x95f4;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x96f6;&#x65f6;&#x533a;&#x3002",{"_index":3426,"title":{},"body":{"standards/time.html#时区":{}}}],["x4ee3;&#x8868;&#xff09;&#x3002",{"_index":8183,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4ee3;&#x8868;&#xff09;&#xff0c;&#x4ee5;&#x53ca;&#x4e00;&#x4e2a",{"_index":8181,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4ee5",{"_index":2198,"title":{},"body":{"basic/package.html#包声明":{},"standards/data/math.html#其他函数":{},"standards/io/io.html#Writer":{},"standards/os/os.html#文件属性":{}}}],["x4ee5;&#x4e0a;&#x4e24;&#x884c;&#x4ee3;&#x7801;&#xff0c;&#x5c31;&#x6210;&#x529f;&#x542f;&#x52a8;&#x4e86;&#x4e00;&#x4e2a",{"_index":8970,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4ee5;&#x4e0a;&#x5e38;&#x91cf;&#x5728;&#x6240;&#x6709;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x90fd;&#x6709;&#x76f8;&#x540c;&#x7684;&#x542b;&#x4e49;&#xff08;&#x53ef;&#x7528;&#x65f6;&#xff09;&#xff0c;&#x56e0;&#x6b64;&#x6587;&#x4ef6;&#x7684;&#x4fe1;&#x606f;&#x53ef;&#x4ee5;&#x5728;&#x4e0d;&#x540c;&#x7684;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x4e4b;&#x95f4;&#x5b89;&#x5168;&#x7684;&#x79fb;&#x690d;&#x3002;&#x4e0d;&#x662f;&#x6240;&#x6709;&#x7684;&#x4f4d;&#x90fd;&#x80fd;&#x7528;&#x4e8e;&#x6240;&#x6709;&#x7684;&#x7cfb;&#x7edf;&#xff0c",{"_index":7387,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4ee5;&#x4e0a;&#x8fd9;&#x4e9b;&#x88ab;&#x5b9a;&#x4e49;&#x7684;&#x4f4d;&#x662f",{"_index":7390,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4ee5;&#x4e0b;&#x4e24;&#x79cd;&#x60c5;&#x51b5;&#x4f1a;&#x5bfc;&#x81f4",{"_index":7444,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4ee5;&#x4e0b;&#x662f;&#x4e00;&#x4e2a;&#x9519;&#x8bef;&#x4f7f;&#x7528;&#x7684;&#x4f8b;&#x5b50;&#xff1a",{"_index":9272,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x4ee5;&#x4ea7;&#x751f;&#x66f4;&#x7d27;&#x51d1;&#x7684;&#xff08;&#x65e0;&#x672b;&#x5c3e;&#x7684;0&#xff09;&#x8f93;&#x51fa",{"_index":4694,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x4ee5;&#x5207;&#x7247;&#x503c;&#x4e3a;&#x4f8b;&#xff0c;&#x5982;&#x6b64;&#x590d;&#x5236;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x53ea;&#x662f;&#x62f7;&#x8d1d;&#x4e86;&#x5b83;&#x6307;&#x5411;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x4e2d;&#x67d0;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x7684;&#x6307;&#x9488;&#xff0c;&#x4ee5;&#x53ca;&#x5b83;&#x7684;&#x957f;&#x5ea6;&#x503c;&#x548c;&#x5bb9;&#x91cf;&#x503c;&#xff0c;&#x800c;&#x5b83;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x5e76;&#x4e0d;&#x4f1a;&#x88ab;&#x62f7;&#x8d1d;&#x3002",{"_index":3224,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x4ee5;&#x5341;&#x516d;&#x8fdb;&#x5236;&#xff08",{"_index":4722,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x4ee5;&#x53ca",{"_index":538,"title":{},"body":{"advance/gc.html#何时触发-GC":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["x4ee5;&#x53ca;&#x4efb;&#x4f55;&#x9047;&#x5230;&#x7684;&#x5f15;&#x8d77;&#x5199;&#x5165;&#x63d0;&#x524d;&#x505c;&#x6b62;&#x7684;&#x9519;&#x8bef;&#x3002;&#x82e5",{"_index":6873,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x4ee5;&#x53ca;&#x4efb;&#x4f55;&#x9047;&#x5230;&#x7684;&#x9519;&#x8bef;&#x3002",{"_index":6787,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4ee5;&#x53ca;&#x5176;&#x5b83;&#x51fd;&#x6570;&#x6216",{"_index":7034,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x4ee5;&#x53ca;&#x5224;&#x65ad;&#x6211;&#x4eec;&#x7ed9;&#x4e88;&#x7684;&#x6807;&#x8bb0;&#x662f;&#x5426;&#x5408;&#x6cd5;&#xff0c;&#x7b49;&#x7b49;&#x3002",{"_index":4153,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x4ee5;&#x53ca;&#x5bf9",{"_index":8412,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x4ee5;&#x53ca;&#x76f8;&#x5173;&#x7684;&#x53d8;&#x91cf;&#x548c;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x8fdb;&#x884c;&#x4e86;&#x7edf;&#x4e00;&#x7684;&#x53d8;&#x66f4;&#xff08;&#x7531",{"_index":6378,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4ee5;&#x53ca;&#x8fd9;&#x4e2a;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x7684;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#x3002",{"_index":665,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4ee5;&#x5bf9",{"_index":6377,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4ee5;&#x6c42;&#x54c8;&#x5e0c;&#x7684;&#x64cd;&#x4f5c;&#x4e3a;&#x4f8b;&#xff0c;&#x5bbd;&#x5ea6;&#x8d8a;&#x5c0f;&#x7684;&#x7c7b;&#x578b;&#x901f;&#x5ea6;&#x901a;&#x5e38;&#x8d8a;&#x5feb;&#x3002;&#x5bf9;&#x4e8e;&#x5e03;&#x5c14;&#x7c7b;&#x578b;&#x3001;&#x6574;&#x6570;&#x7c7b;&#x578b;&#x3001;&#x6d6e;&#x70b9;&#x6570;&#x7c7b;&#x578b;&#x3001;&#x590d;&#x6570;&#x7c7b;&#x578b;&#x548c;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x6765;&#x8bf4;&#x90fd;&#x662f;&#x5982;&#x6b64;&#x3002;&#x5bf9;&#x4e8e;&#x5b57",{"_index":1456,"title":{},"body":{"basic/map.html#map":{}}}],["x4ee5;&#x7528",{"_index":3758,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ee5;&#x8def;&#x5f84;&#x540d;&#x79f0;&#x5b57;&#x7b26;&#x4e32;&#x6765;&#x6307;&#x5b9a;&#x6587;&#x4ef6;&#xff0c;&#x5e76;&#x8981;&#x6c42;&#x53ef;&#x8bbf;&#x95ee;&#x8be5;&#x6587;&#x4ef6;&#xff08;&#x5373;&#x5bf9;&#x7ec4;&#x6210;&#x8def;&#x5f84;&#x540d;&#x7684;&#x5404;&#x76ee;&#x5f55;&#x62e5;&#x6709;&#x53ef;&#x6267;&#x884c",{"_index":7486,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["x4ee5;&#x901a;&#x8fc7;&#x8c03;&#x7528;&#x8be5;&#x7c7b;&#x578b;&#x503c;&#x7684",{"_index":8078,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4ee5;&#x9a71;&#x4f7f;&#x5b83;&#x628a;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x5199;&#x8fdb;&#x6211;&#x4eec;&#x6307;&#x5b9a;&#x7684;&#x5199;&#x5165;&#x5668;&#x4e2d;&#x3002",{"_index":4296,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4eec;&#x8981;&#x7ade;&#x4e89;&#x7684;&#x6240;&#x8c13",{"_index":6463,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4efb;&#x4f55;&#x65f6;&#x5019;&#x53d1;&#x751f;&#xff0c;&#x5e76;&#x4e14;&#x5b8c;&#x5168;&#x4e0d;&#x4f1a;&#x5f71;&#x54cd;&#x5230;&#x7a0b;&#x5e8f;&#x7684;&#x529f;&#x80fd;&#x3002",{"_index":8285,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4efb;&#x4f55;&#x6709",{"_index":9090,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x4efb;&#x4f55;&#x7c7b;&#x578b;&#x7684;&#x6307;&#x9488;&#x7684;&#x96f6;&#x503c;&#x90fd;&#x662f",{"_index":1691,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x4efb;&#x52a1;&#x521b;&#x5efa;&#x4e4b;&#x540e;&#x88ab;&#x653e;&#x7f6e;&#x5728",{"_index":6472,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4efb;&#x52a1;&#x53d1;&#x51fa;&#x62a2;&#x5360;&#x8c03;&#x5ea6;&#xff1b",{"_index":6567,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4efb;&#x610f;&#x8282;&#x70b9;&#x5c0f;&#x4e8e;&#xff08;&#x6216;&#x5927;&#x4e8e;&#xff09;&#x5b83;&#x7684;&#x6240;&#x6709;&#x540e;&#x88d4;&#xff0c;&#x6700;&#x5c0f;&#x5143;&#xff08;&#x6216;&#x6700;&#x5927;&#x5143;&#xff09;&#x5728;&#x5806;&#x7684;&#x6839;&#x4e0a;&#xff08;&#x5806;&#x5e8f;&#x6027;&#xff09;&#x3002",{"_index":5296,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x4f18;&#x5148;&#x7ea7",{"_index":1786,"title":{"basic/operator.html#优先级":{}},"body":{}}],["x4f18;&#x5148;&#x7ea7;&#x961f;&#x5217;&#x4e2d;&#x7684;&#x6570;&#x636e;&#xff0c;&#x53ef;&#x4ee5;&#x662f;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#xff0c;&#x8fd9;&#x91cc;&#x4f7f;&#x7528",{"_index":5313,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x4f18;&#x5148;&#x7ea7;&#x961f;&#x5217;&#x4e2d;&#x8282;&#x70b9;&#x7684;&#x4f18;&#x5148;&#x7ea7",{"_index":5314,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x4f18;&#x5148;&#x7ea7;&#x961f;&#x5217;&#x9700;&#x8981;&#x5b9e;&#x73b0",{"_index":5316,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x4f18;&#x5148;&#x8003;&#x8651;&#x54ea;&#x4e9b;&#x7c7b;&#x578b;&#x4f5c;&#x4e3a;&#x5b57;&#x5178;&#x7684;&#x952e;&#x7c7b;&#x578b",{"_index":1452,"title":{},"body":{"basic/map.html#map":{}}}],["x4f18;&#x5316;&#x3002;&#x590d;&#x6742;&#x7684;&#x9ad8;&#x7ea7;&#x7c7b;&#x578b;&#x5360;&#x7528;&#x7684;&#x5185;&#x5b58;&#x5f80;&#x5f80;&#x76f8;&#x5bf9;&#x8f83;&#x5927;&#xff0c;&#x5b58;&#x50a8;&#x5728",{"_index":1719,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4f18;&#x70b9;&#xff1a",{"_index":1289,"title":{},"body":{"basic/oop.html#封装":{}}}],["x4f1a",{"_index":3006,"title":{},"body":{"concurrent/channel.html#channel":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{}}}],["x4f1a;&#x4e00;&#x76f4;&#x505c;&#x6ede;&#x5728;&#x8c03;&#x7528;&#x8be5;&#x4e92;&#x65a5;&#x9501;&#x7684",{"_index":7858,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4f1a;&#x4e00;&#x76f4;&#x8fdb;&#x884c;&#x66f4;&#x65b0;&#x3002",{"_index":540,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x4f1a;&#x4e0e;&#x6211;&#x4eec;&#x624b;&#x52a8;&#x542f;&#x7528;&#x7684;&#x5176;&#x4ed6",{"_index":6310,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x4ee5;&#x600e;&#x6837;&#x7684;&#x987a;&#x5e8f;&#x8fd0;&#x884c;&#x3002;&#x7531;&#x4e8e;&#x4e3b",{"_index":6309,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x4f20;&#x9012;&#x8fde;&#x63a5;&#x7ed9",{"_index":4493,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x4f1a;&#x4f7f;&#x7528;&#x7edd;&#x5bf9",{"_index":8845,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4f1a;&#x4fdd;&#x5b58;&#x6bcf;&#x4e2a;&#x5305;&#x7684;&#x7f16;&#x8bd1;&#x6210;&#x679c;&#xff0c;&#x5e76;&#x628a",{"_index":2766,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f1a;&#x4fdd;&#x62a4;&#x5171;&#x4eab;&#x53d8;&#x91cf;&#xff0c;&#x5f53;&#x5df2;&#x7ecf;&#x6709",{"_index":7820,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4f1a;&#x4fdd;&#x7559",{"_index":5985,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x4f1a;&#x5148;&#x5224;&#x65ad;&#x6587;&#x4ef6;&#x7684;&#x5927;&#x5c0f;&#xff0c;&#x7ed9",{"_index":4813,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x4f1a;&#x5148;&#x6839;&#x636e;&#x5b57;&#x7b26;&#x4e32;&#x6570;&#x7ec4;&#x7684;&#x5185;&#x5bb9;&#xff0c;&#x8ba1;&#x7b97;&#x51fa;&#x4e00;&#x4e2a;&#x62fc;&#x63a5;&#x4e4b;&#x540e;&#x7684;&#x957f;&#x5ea6;&#xff0c;&#x7136;&#x540e;&#x7533;&#x8bf7;&#x5bf9;&#x5e94;&#x5927;&#x5c0f;&#x7684;&#x5185;&#x5b58;&#xff0c;&#x4e00;&#x4e2a;&#x4e00;&#x4e2a;&#x5b57;&#x7b26",{"_index":3755,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4f1a;&#x5148;&#x88ab;&#x6c42;&#x503c",{"_index":6350,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x5148;&#x88ab;&#x6c42;&#x503c;&#x3002",{"_index":1102,"title":{},"body":{"basic/flow.html#for":{}}}],["x4f1a;&#x518d;&#x8c03;&#x7528",{"_index":7596,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4f1a;&#x521b;&#x5efa;&#x591a;&#x4e2a;&#x7ebf;&#x7a0b;&#x6765;&#x6267;&#x884c;&#x5e76;&#x53d1;&#x4efb;&#x52a1;&#xff0c;&#x800c;&#x4e14;&#x4efb;&#x52a1",{"_index":6196,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x5339;&#x914d;&#x6240;&#x6709;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002",{"_index":4131,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x4f1a;&#x5339;&#x914d;&#x8def;&#x7531;&#xff0c;h",{"_index":9036,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4f1a;&#x53bb;&#x5c1d;&#x8bd5;&#x83b7;&#x53d6;&#x4e00;&#x4e2a;&#x53ef;&#x7528;&#x7684",{"_index":6610,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x53bb;&#x901a;&#x4fe1;&#x5e76;&#x6267;&#x884c",{"_index":1069,"title":{},"body":{"basic/flow.html#select":{}}}],["x4f1a;&#x5728",{"_index":6254,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x5728;&#x4ec0;&#x4e48;&#x65f6;&#x5019;&#x6267;&#x884c;&#xff0c;&#x8fd9;&#x4e2a;&#x53c2;&#x6570;&#x503c;&#x90fd;&#x4e0d;&#x4f1a;&#x53d8;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c",{"_index":6352,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x5728;&#x4f20;&#x9012;&#x53c2;&#x6570;&#x524d;&#x81ea;&#x52a8;&#x9002;&#x914d;&#x4ee5;&#x7b26;&#x5408;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#xff1a;&#x5982;&#x679c;&#x65b9;&#x6cd5;&#x7684;&#x53c2;&#x6570",{"_index":1739,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4f1a;&#x5728;&#x540e;&#x53f0;&#x6709;&#x4e00;&#x4e2a;&#x68c0;&#x6d4b;&#x7ebf;&#x7a0b;&#xff0c;&#x5b83;&#x4f1a;&#x68c0;&#x6d4b;&#x8fd9;&#x4e9b;&#x60c5;&#x51b5;&#xff0c",{"_index":6543,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x5728;&#x91cd;&#x5b9a;&#x5411;&#x540e;&#x8fdb;&#x884c;&#x5339;&#x914d;&#x3002;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x5df2;&#x6ce8;&#x518c;&#x6a21;&#x5f0f;&#x53ef;&#x4ee5;&#x5e94;&#x7528;&#x4e8e;&#x8be5;&#x8bf7;&#x6c42;&#xff0c",{"_index":8954,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4f1a;&#x590d;&#x5236;&#x76ee;&#x6807;&#x6570;&#x636e;&#x3002;&#x53ef;&#x6539;&#x7528;&#x6570;&#x7ec4;&#x6307;&#x9488;&#x6216;&#x8005;&#x5207;&#x7247",{"_index":1082,"title":{},"body":{"basic/flow.html#for":{}}}],["x4f1a;&#x5931;&#x8d25;&#xff0c;&#x8fd9;&#x65f6",{"_index":7595,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4f1a;&#x5b8c;&#x5168;&#x505c;&#x6b62;&#x5bf9;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x91c7;&#x6837;&#x3002;&#x8be5;&#x53d8;&#x91cf;&#x7684;&#x7f3a;&#x7701;&#x503c;&#x662f",{"_index":4268,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4f1a;&#x5c06",{"_index":6981,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x4f1a;&#x5c06;&#x5185;&#x5bb9;&#x8f93;&#x51fa;&#x5230;&#x6807;&#x51c6;&#x8f93;&#x51fa;&#x4e2d;&#x3002",{"_index":6836,"title":{},"body":{"standards/io/io.html#Writer":{}}}],["x4f1a;&#x5c06;&#x6240;&#x6709;&#x8def;&#x5f84;&#x7684;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#x90fd;&#x89e3;&#x6790;&#x51fa;&#x6765;&#x3002;&#x9664;&#x6b64;&#x4e4b;&#x5916;&#xff0c;&#x5b83;&#x8fd4;&#x56de;&#x7684;&#x8def;&#x5f84;&#xff0c;&#x662f;&#x76f4;&#x63a5;&#x53ef;&#x8bbf;&#x95ee;&#x7684;&#x3002",{"_index":5725,"title":{},"body":{"standards/os/filepath.html#符号链接指向的路径名":{}}}],["x4f1a;&#x5c06;&#x8fde;&#x63a5;&#x7acb;&#x9a6c;&#x8fd4;&#x56de;&#x7ed9;&#x8fde;&#x63a5;&#x6c60;&#x3002",{"_index":4490,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x4f1a;&#x5c06;&#x8fde;&#x63a5;&#x7acb;&#x9a6c;&#x8fd4;&#x56de;&#x7ed9;&#x8fde;&#x63a5;&#x6c60;&#xff0c;&#x4f46;&#x662f;&#x5b83;&#x8fd4;&#x56de;&#x7684",{"_index":4491,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x4f1a;&#x5c1d;&#x8bd5;&#x8fd0;&#x884c;&#x4e0b;&#x4e00;&#x4e2a",{"_index":6578,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x5f15;&#x8d77;&#x7a0b;&#x5e8f;&#x7684;&#x5d29;&#x6e83;&#xff0c;&#x56e0;&#x6b64",{"_index":639,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4f1a;&#x5f71;&#x54cd;&#x5230;&#x5df2;&#x5b58;&#x5728;&#x7684;&#x5185;&#x5bb9;&#x3002",{"_index":3818,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4f1a;&#x5ffd;&#x7565;&#x4efb;&#x4f55;&#x6587;&#x4ef6;&#x7cfb;&#x7edf;&#x76f8;&#x5173;&#x7684;&#x9519;&#x8bef;&#xff0c;&#x5982;&#x8bfb;&#x76ee;&#x5f55;&#x5f15;&#x53d1;&#x7684",{"_index":5765,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x4f1a;&#x628a",{"_index":998,"title":{},"body":{"basic/env_config.html#Go-Module":{},"concurrent/sync_lock.html#sync-Map":{}}}],["x4f1a;&#x628a;&#x8be5;&#x952e;&#x503c;&#x5bf9;&#x4e2d;&#x6307;&#x5411;&#x503c;&#x7684;&#x90a3;&#x4e2a;&#x6307;&#x9488;&#x7f6e;&#x4e3a",{"_index":8393,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4f1a;&#x63cf;&#x8ff0;&#x8be5;&#x95ee;&#x9898;&#xff0c",{"_index":5801,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x4f1a;&#x65e0;&#x6548;&#x3002",{"_index":5487,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4f1a;&#x662f",{"_index":5507,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#目录与链接":{}}}],["x4f1a;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x4e34;&#x65f6",{"_index":4087,"title":{},"body":{"basic/test.html#测试":{}}}],["x4f1a;&#x786e;&#x4fdd;&#x6240;&#x6709",{"_index":6395,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x7ecf;&#x7531",{"_index":4308,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4f1a;&#x7ed1;&#x5b9a;&#x5230;&#x5355;&#x4e2a;&#x8fde;&#x63a5;&#x3002;&#x5f53;&#x8c03;&#x7528;&#x4e8b;&#x52a1",{"_index":4446,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x4f1a;&#x7f16;&#x8bd1;&#x5931;&#x8d25;&#xff1a",{"_index":2076,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x4f1a;&#x81ea;&#x52a8;&#x4e0b;&#x8f7d",{"_index":997,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4f1a;&#x81ea;&#x52a8;&#x63a8;&#x65ad;&#x7c7b;&#x578b;&#xff1a",{"_index":2412,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x4f1a;&#x81ea;&#x52a8;&#x8c03;&#x7528",{"_index":8799,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4f1a;&#x88ab;&#x5524;&#x9192;&#xff0c;&#x6807;&#x8bb0;&#x4e3a",{"_index":6587,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x88ab;&#x6253;&#x5370;&#x6210",{"_index":4718,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x4f1a;&#x88ab;&#x653e;&#x7f6e;&#x5230;&#x67d0;&#x4e2a",{"_index":6576,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x88ab;&#x6807;&#x8bb0;&#x4e3a",{"_index":6613,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x88ab;&#x7f6e;&#x4e3a",{"_index":7048,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x4f1a;&#x88ab;&#x8bbe;&#x7f6e;&#x4e3a",{"_index":5479,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x4f1a;&#x89e3;&#x91ca;&#x539f;&#x56e0",{"_index":5535,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x4f1a;&#x8bb0;&#x5f55;&#x4e0b;&#x6bcf;&#x4e00;&#x4e2a;&#x8bfb;&#x6216;&#x8005;&#x5199;&#x5171;&#x4eab;&#x53d8;&#x91cf;&#x7684",{"_index":8409,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x4f1a;&#x8fd0;&#x884c;&#x793a;&#x4f8b;&#x51fd;&#x6570;&#x6d4b;&#x8bd5;&#x3002",{"_index":4148,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x4f1a;&#x8fd4;&#x56d",{"_index":5451,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#规整化路径":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html#目录与链接":{}}}],["x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":6799,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4f1a;&#x8fd4;&#x56de;&#x53ef;&#x7528;&#x6570;&#x636e;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x7b49;&#x5f85;&#x66f4;&#x591a;&#x6570;&#x636e;&#x3002",{"_index":6791,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4f1a;&#x8fd4;&#x56de;&#x5931;&#x8d25;&#x3002",{"_index":7604,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4f1a;&#x8fd4;&#x56de;&#x6240;&#x547d;&#x540d;&#x6587;&#x4ef6;&#x7684;&#x76f8;&#x5173;&#x4fe1;&#x606f;&#x3002",{"_index":7498,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4f1a;&#x8fd4;&#x56de;&#x7a7a;&#x5b57;&#x7b26;&#x4e32;&#x3002",{"_index":5655,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x4f1a;&#x8fd4;&#x56de;&#x8be5;&#x9519;&#x8bef;&#xff0c;&#x4e00;&#x822c;&#x4e0d;&#x4f1a;&#x51fa;&#x9519;&#xff0c;&#x5982;&#x679c;&#x8def;&#x5f84;&#x540d;&#x957f;&#x5ea6;&#x8d85;&#x8fc7;&#x7cfb;&#x7edf;&#x9650;&#x5236;&#xff0c;&#x5219;&#x4f1a;&#x62a5;&#x9519;&#x3002",{"_index":5669,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x4f1a;&#x8fd4;&#x56de;&#x9519;&#x8bef;&#xff0c;&#x56e0;&#x4e3a",{"_index":6937,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x4f1a;&#x90a3;&#x4e48;&#x50cf;&#x8fdb;&#x7a0b;&#x5207;&#x6362;&#x90a3;&#x4e48;&#x8017;&#x8d39;&#x8d44;&#x6e90;&#x3002",{"_index":6188,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x4f1a;&#x963b;&#x585e;&#xff0c;&#x6267;&#x884c;&#x8be5",{"_index":6593,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x968f;&#x673a;&#x5730;&#x9009;&#x62e9;&#x4e00;&#x4e2a;&#x6267;&#x884c;&#x3002;&#x5982;&#x679c;&#x6ca1;&#x6709",{"_index":1073,"title":{},"body":{"basic/flow.html#select":{}}}],["x4f20;&#x5165;&#x51fd;&#x6570;&#x7684;&#x90a3;&#x4e9b;&#x53c2;&#x6570;&#x503c;&#x540e;&#x6765;&#x600e;&#x4e48;&#x6837;&#x4e86",{"_index":3209,"title":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}},"body":{}}],["x4f20;&#x53c2;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x4f20;&#x8fdb;&#x53bb;&#x7684;&#x662f;&#x503c;&#x8fd8;&#x662f;&#x5f15;&#x7528;&#x3002;&#x5b9e;&#x9645;&#x4e0a;&#xff0c;&#x5728;&#x5927;&#x90e8;&#x5206;&#x5f15;&#x7528;&#x578b;&#x8bed;&#x8a00;&#x91cc;&#xff0c",{"_index":1713,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4f20;&#x64ad;&#x3002;&#x6240;&#x4ee5;&#xff0c",{"_index":724,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x4f20;&#x64ad;&#x9519;&#x8bef",{"_index":617,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x4f20;&#x7ed9",{"_index":3566,"title":{},"body":{"standards/time.html#定时器":{},"concurrent/goroutine.html#goroutine-1":{},"standards/net/http.html#自定义处理器":{}}}],["x4f20;&#x8f93;&#x7f16;&#x7801",{"_index":8746,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x4f20;&#x9012",{"_index":8916,"title":{},"body":{"standards/net/http.html#client":{}}}],["x4f20;&#x9012;&#x53c2;&#x6570;&#x7ed9;5c",{"_index":2750,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f20;&#x9012;&#x53c2;&#x6570;&#x7ed9;5g",{"_index":2753,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f20;&#x9012;&#x53c2;&#x6570;&#x7ed9;5l",{"_index":2759,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f20;&#x9012;&#x53c2;&#x6570;&#x7ed9;gccgo&#x7f16;&#x8bd1;&#x8fde;&#x63a5;&#x8c03;&#x7528",{"_index":2752,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f20;&#x9012;&#x767e;&#x5206;&#x6bd4",{"_index":544,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x4f3c;&#x662f;&#x7ee7;&#x627f;&#x4e86",{"_index":1269,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x4f3d;&#x739b;&#x51fd;&#x6570",{"_index":6118,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x4f3d;&#x739b;&#x51fd;&#x6570;&#x7684;&#x81ea;&#x7136;&#x5bf9;&#x6570",{"_index":6119,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x4f46;&#x4f9d;&#x7136",{"_index":4469,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x4f46;&#x662f",{"_index":791,"title":{},"body":{"basic/array.html#数组传入函数":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4f46;&#x662f;&#x5728",{"_index":6454,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f46;&#x662f;&#x5728;&#x5f88;&#x591a;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x9700;&#x8981;&#x652f;&#x6301;&#x5bf9",{"_index":8889,"title":{},"body":{"standards/net/http.html#client":{}}}],["x4f46;&#x662f;&#x5982;&#x679c;&#x5305;&#x7684;&#x6ce8;&#x91ca;&#x8f83;&#x957f;&#xff0c;&#x4e00;&#x822c;&#x4f1a;&#x653e;&#x5230;&#x4e00;&#x4e2a;&#x53eb;&#x505a",{"_index":2807,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f46;&#x662f;&#x5982;&#x679c;&#x662f;&#x5f15;&#x7528;&#x4f20;&#x9012;&#xff0c;&#x5728;&#x8c03;&#x7528;&#x51fd;&#x6570;&#x65f6;&#x5c06;&#x5b9e;&#x9645;&#x53c2;&#x6570;&#x7684;&#x5730;&#x5740;&#x4f20;&#x9012;&#x5230;&#x51fd;&#x6570;&#x4e2d;&#xff0c;&#x90a3;&#x4e48;&#x5728;&#x51fd;&#x6570;&#x4e2d;&#x5bf9;&#x53c2;&#x6570;&#x6240;&#x8fdb;&#x884c;&#x7684;&#x4fee;&#x6539;&#xff0c;&#x5c06;&#x5f71;&#x54cd;&#x5230;&#x5b9e;&#x9645;&#x53c2;&#x6570;&#x3002",{"_index":3131,"title":{},"body":{"basic/function.html#参数":{}}}],["x4f46;&#x662f;&#x8fd9;&#x65f6;&#x5b83;&#x7edd;&#x4e0d;&#x4f1a;&#x88ab;&#x60f3;&#x63a5;&#x6536;&#x5b83;&#x7684;&#x4e00;&#x65b9;&#x770b;&#x5230;&#x548c;&#x53d6;&#x8d70",{"_index":2971,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4f46;&#x662f;&#xff0c;&#x4e3a;&#x4e86;&#x52a0;&#x5feb;&#x6d4b;&#x8bd5;&#x901f;&#x5ea6;&#xff0c;&#x5b83;&#x901a;&#x5e38;&#x4f1a;&#x5e76;&#x53d1;&#x5730;&#x5bf9;&#x591a;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#x8fdb;&#x884c;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#xff0c;&#x53ea;&#x4e0d;&#x8fc7;&#xff0c;&#x5728;&#x6700;&#x540e;&#x6253;&#x5370;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x4f1a;&#x4f9d;&#x7167;&#x6211;&#x4eec;&#x7ed9;&#x5b9a;&#x7684",{"_index":4160,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x4f46;&#x662f;&#xff0c;&#x5f53;&#x539f;&#x5207;&#x7247;&#x7684;&#x957f;&#x5ea6;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x539f;&#x957f;&#x5ea6;&#xff09;&#x5927;&#x4e8e;&#x6216;&#x7b49;&#x4e8",{"_index":1929,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x4f46;&#x662f;&#xff0c;&#x5f53;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x5728;&#x6267;&#x884c;&#x7684;&#x65f6;&#x5019;&#x53d1;&#x73b0;&#x7a7a;&#x7684;&#x901a;&#x9053;&#x4e2d;&#xff0c;&#x6b63;&#x597d;&#x6709;&#x7b49;&#x5f85;&#x7684;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#xff0c;&#x90a3;&#x4e48;&#x5b83;&#x4f1a;&#x76f4;&#x63a5;&#x628a;&#x5143;&#x7d20;&#x503c;&#x590d;&#x5236;&#x7ed9;&#x63a5;&#x6536;&#x65b9;&#x3002",{"_index":2951,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4f46;&#x662f;&#xff0c;&#x6211;&#x4eec",{"_index":692,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4f46;&#x662f;&#xff0c;&#x7531;&#x4e8e;&#x8fd9;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x4e0",{"_index":3933,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4f46;&#x662f;s&#x7c7b;&#x578b;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x53ef;&#x4ee5;&#x5305;&#x542b",{"_index":2049,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x4f46;&#x6709;&#x4e00;&#x4e2a;&#x4f8b;&#x5916;&#xff0c;&#x5bf9;&#x5207;&#x7247;&#x5b57;&#x9762;&#x91cf;&#x7684;&#x7d22;&#x5f15;&#x7ed3;&#x679c;&#x503c;&#x867d;&#x7136;&#x4e5f;&#x5c5e;&#x4e8e;&#x4e34;&#x65f6;&#x7ed3;&#x679c;&#xff0c;&#x4f46;&#x5374;&#x662f;&#x53ef;&#x5bfb;&#x5740;&#x7684;&#x3002;&#x51fd;&#x6570;&#x7684;&#x8fd4;&#x56de;&#x503c;&#x4e5f;&#x662f;&#x4e34;&#x65f6;&#x7ed3;&#x679c;&#x3002",{"_index":1770,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x4f46;&#x8fd9;&#x662f;&#x9519;&#x8bef;&#x7684;&#x7406;&#x89e3;&#x3002;&#x8bf7;&#x6ce8;&#x610f;&#x4e0a;&#x9762;&#x4f8b;&#x5b50;&#x4e2d;&#x5bf9",{"_index":1264,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x4f46;&#x8fde;&#x63a5;&#x6c60;&#x4e2d;&#x6ca1;&#x6709;&#x7a7a;&#x95f2;&#x7684;&#x53ef;&#x7528;&#xff0c;&#x4e14;&#x6253;&#x5f00;&#x7684;&#x8fde;&#x63a5;&#x6570;&#x8fbe;&#x5230;&#x4e86;&#x8be5;&#x65b9;&#x6cd5;&#x8bbe;&#x7f6e;&#x7684;&#x6700;&#x5927;&#x503c;&#xff0c;&#x8be5;&#x65b9;&#x6cd5;&#x8c03;&#x7528;&#x5c06;&#x5835;&#x585e;&#x3002;&#x9ed8;&#x8ba4;&#x9650;&#x5236;&#x662f",{"_index":4512,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x4f4d",{"_index":7560,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4f4d;&#x3002",{"_index":7389,"title":{},"body":{"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{}}}],["x4f4d;&#x3002;&#x82e5;&#x5bf9;&#x67d0;&#x6587;&#x4ef6;&#x8bbe;&#x7f6e;&#x4e86",{"_index":7570,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4f4d;&#x4e00;&#x822c;&#x7528;&#x4e8e;&#x76ee;&#x5f55;&#xff0c;&#x8d77;&#x9650;&#x5236;&#x5220;&#x9664;&#x4f4d;&#x7684;&#x4f5c;&#x7528;&#xff0c;&#x8868;&#x660e;&#x4ec5;&#x5f53;&#x975e;&#x7279;&#x6743;&#x8fdb;&#x7a0b;&#x5177;&#x6709;&#x5bf9;&#x76ee;&#x5f55;&#x7684;&#x5199;&#x6743;&#x9650;&#xff0c;&#x4e14;&#x4e3a;&#x6587;&#x4ef6;&#x6216;&#x76ee;&#x5f55;&#x7684;&#x5c5e;&#x4e3b;&#x65f6;&#xff0c;&#x624d;&#x80fd;&#x5bf9;&#x76ee;&#x5f55;&#x4e0b;&#x7684;&#x6587;&#x4ef6;&#x8fdb;&#x884c;&#x5220;&#x9664;&#x548c;&#x91cd;&#x547d;&#x540d;&#x64cd",{"_index":7564,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4f4d;&#x4e3a",{"_index":1811,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x4f4d;&#x5462;&#xff1f",{"_index":4932,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x4f4d;&#x63a9;&#x7801;&#x53c2;&#x6570",{"_index":7345,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4f4d;&#x63a9;&#x7801;&#xff0c;&#x6587;&#x4ef6;&#x7c7b;&#x578b;&#x548c;&#x6587;&#x4ef6;&#x6743;&#x9650",{"_index":7517,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4f4d;&#x6574;&#x578b",{"_index":3705,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x4f4d;&#x6d6e;&#x70b9;&#x578b;&#x6570;&#xff0c",{"_index":3711,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x4f4d;&#x7528;&#x6765;&#x8868;&#x660e;&#x5c5e;&#x4e3b;&#x3001;&#x5c5e;&#x7ec4;&#x548c;&#x5176;&#x4ed6;&#x7528;&#x6237;&#x7684;&#x6743;&#x9650;&#x5916;&#xff0c;&#x6587;&#x4ef6;&#x6743;&#x9650;&#x63a9;&#x7801;&#x8fd8;&#x53e6;&#x8bbe;&#x6709",{"_index":7561,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4f4d;&#x7684;&#x503c;&#x3002;&#x5982;&#xff1a",{"_index":1819,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x4f4d;&#x7b49;&#x4e8e",{"_index":1817,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x4f4d;&#x7cfb;&#x7edf;&#x5360",{"_index":4927,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x4f4d;&#x7f6e;&#x6570;&#x636e;&#x53d1;&#x751f;&#x6539;&#x53d8;&#x540e;&#xff0c;&#x5bf9;&#x5806;&#x518d;&#x5e73;&#x8861;&#xff0c;&#x4f18;&#x5148;&#x7ea7;&#x961f;&#x5217;&#x4f7f;&#x7528;&#x5230;&#x4e86;&#x8be5;&#x65b9;&#x6cd5",{"_index":5311,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x4f4d;&#x8fd0;&#x7b97;&#x7b26",{"_index":1807,"title":{"basic/operator.html#位运算符":{}},"body":{}}],["x4f4d;&#x8fd8;&#x662f",{"_index":4931,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x4f4d;&#xff08;&#x4e5f;&#x53ef;&#x4ee5;&#x8bf4;&#x662f;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x7684;&#x4e00;&#x4e2a;&#x5b9e;&#x4f53;&#xff09;&#x3002",{"_index":6183,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x4f4d;&#xff09;&#xff0c;&#x5206;&#x522b;&#x5bf9;&#x5e94;&#x7cfb;&#x7edf;&#x8c03;&#x7528",{"_index":7577,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4f4d;&#xff0c;&#x5219",{"_index":7571,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4f4d;&#xff0c;&#x5bf9;&#x6743;&#x9650;&#x4e0d;&#x8d77;&#x4f5c;&#x7528;&#x3002;&#x7cfb;&#x7edf;&#x4f1a;&#x5ffd;&#x7565;&#x5b83;&#x3002",{"_index":7581,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4f4d;&#xff0c;&#x6700;&#x9ad8;&#x4f4d;&#x4ee3;&#x8868;&#x7b26;&#x53f7;&#x4f4d",{"_index":4943,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x4f4d;&#xff0c;&#x6b63;&#x662f;&#x51fa;&#x4e8e;&#x8fd9;&#x4e2a;&#x539f;&#x56e0;&#x3002",{"_index":7568,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4f4d;&#xff0c;&#x8db3;&#x4ee5;&#x6ee1;&#x8db3;&#x5927;&#x591a;&#x6570;&#x7684;&#x4efb;&#x52a1;&#x3002;&#x4f46;&#x662f;&#x5f53;&#x5bf9;&#x8d85;&#x51fa",{"_index":4354,"title":{},"body":{"standards/data/big.html#big":{}}}],["x4f4d;&#xff0c;&#x90a3;&#x4e48;&#x5c06;&#x5bf9;&#x65b0;&#x76ee;&#x5f55;&#x8bbe;&#x7f6e;&#x8be5;&#x6743;&#x9650;&#x3002",{"_index":7641,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4f55;&#x65f6;&#x89e6;&#x53d1",{"_index":521,"title":{"advance/gc.html#何时触发-GC":{}},"body":{}}],["x4f55;&#x9047;&#x5230;&#x7684;&#x9519;&#x8bef;&#x3002",{"_index":6856,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x4f59;&#x5f26;&#x51fd;&#x6570;&#xff0c;&#x53cd;&#x4f59;&#x5f26;&#x51fd;&#x6570;&#xff0c;&#x53cc;&#x66f2;&#x4f59;&#x5f26;&#xff0c;&#x53cd;&#x53cc;&#x66f2;&#x4f59;&#x5f26",{"_index":6077,"title":{},"body":{"standards/data/math.html#三角函数":{}}}],["x4f59;&#x8865;&#x8bef;&#x5dee;&#x51fd;&#x6570",{"_index":6115,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x4f5c;&#x3002;&#x6839;&#x636e;&#x8fd9;&#x4e2a;&#x673a;&#x5236;&#x6765;&#x521b;&#x5efa;&#x4e3a;&#x591a;&#x4e2a;&#x7528;&#x6237;&#x5171;&#x4eab;&#x7684;&#x4e00;&#x4e2a;&#x76ee;&#x5f55;&#xff0c;&#x5404;&#x4e2a;&#x7528;&#x6237;&#x53ef;&#x5728;&#x5176;&#x4e0b;&#x521b;&#x5efa;&#x6216;&#x5220;&#x9664;&#x5c5e;&#x4e8e;&#x81ea;&#x5df1;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x4f46;&#x4e0d;&#x80fd;&#x5220;&#x9664;&#x96b6;&#x5c5e;&#x4e8e;&#x5176;&#x4ed6;&#x7528;&#x6237;&#x7684;&#x6587;&#x4ef6;&#x3002",{"_index":7565,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x4f5c;&#x4e3a",{"_index":9013,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4f5c;&#x4e3a;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x53c2;&#x6570;&#x65f6;&#xff0c;&#x5b83;&#x4e00;&#x822c;&#x603b;&#x662f;&#x88ab;&#x4e13;&#x95e8;&#x7528;&#x4e8",{"_index":2954,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4f5c;&#x4e3a;&#x4e00;&#x4e2a;&#x6bd4;&#x8f83;&#x56de;&#x8c03;&#x51fd;&#x6570;&#xff0c;&#x53ef;&#x4ee5;&#x7b80;&#x5355",{"_index":9301,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x4f5c;&#x4e3a;&#x4e00;&#x4e2a;&#x7f16;&#x7801;&#x5355;&#x5143;&#x3002;&#x5b83;&#x4e0e;&#x6807;&#x51c6;&#x7684",{"_index":359,"title":{},"body":{"index.html#编码":{}}}],["x4f5c;&#x4e3a;&#x53c2;&#x6570;&#x4f20;&#x7ed9;&#x4e86;&#x5b83;&#x3002",{"_index":6359,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f5c;&#x4e3a;&#x53c2;&#x6570;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c",{"_index":6812,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x4f5c;&#x4e3a;&#x53c2;&#x6570;&#xff0c;&#x90a3;&#x4e48;&#x4ed6;&#x53ef;&#x4ee5;&#x63a5;&#x53d7;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x4f5c;&#x4e3a;&#x53c2;&#x6570;&#xff0c;&#x5982;&#x679c;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x8fd4;&#x56d",{"_index":2341,"title":{},"body":{"basic/interface.html#接口":{}}}],["x4f5c;&#x4e3a;&#x5b58;&#x50a8;&#x4ecb;&#x8d28",{"_index":8358,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4f5c;&#x4e3a;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x662f;&#x975e;&#x5e38;&#x597d;&#x7684;&#xff0c;&#x56e0;&#x4e3a;&#x65e0;&#x8bba",{"_index":1398,"title":{},"body":{"basic/map.html#map":{}}}],["x4f5c;&#x4e3a;&#x63a5;&#x6536;&#x5668;&#x3002",{"_index":1230,"title":{},"body":{"basic/oop.html#方法":{}}}],["x4f5c;&#x4e3a;&#x6587;&#x6863;&#xff0c;&#x5982",{"_index":4145,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x4f5c;&#x4e3a;&#x8c03;&#x7528",{"_index":5793,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x4f5c;&#x4e3a;&#x8fd4;&#x56de;&#x7ed3;&#x679c;&#x3002;&#x56e0;&#x4e3a;&#x6ca1;&#x6709;&#x5fc5;&#x8981;&#x521b;&#x5efa",{"_index":4380,"title":{},"body":{"standards/data/big.html#big":{}}}],["x4f5c;&#x662f;&#x4e0d;&#x5b89;&#x5168;&#x7684;&#x3002",{"_index":8332,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4f5c;&#x7528;&#x57df",{"_index":2245,"title":{"basic/scope.html#作用域":{}},"body":{}}],["x4f5c;&#x7528;&#x57df;&#x90fd;&#x662f;&#x5168;&#x5c40;&#x7684;&#xff08;&#x5728;&#x672c;&#x5305;&#x8303;&#x56f4;&#x5185;&#xff09",{"_index":2250,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x4f5c;&#x7cfb;&#x7edf;&#x8c03;&#x5ea6;&#x5207;&#x6362",{"_index":6419,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f60;&#x53ef;&#x4ee5;&#x60f3;&#x8c61;&#x8be5;&#x7c7b;&#x578b;&#x4e2d;&#x6709;&#x4e00;&#x4e2a;&#x8ba1;&#x6570;&#x5668;&#xff0c;&#x5b83;&#x7684;&#x9ed8;&#x8ba4;&#x503c;&#x662f",{"_index":8076,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4f60;&#x53ef;&#x4ee5;&#x628a;&#x8fd9;&#x5757;&#x5185;&#x5b58;&#x7684;&#x5185;&#x5bb9;&#x770b;&#x6210;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#xff0c;&#x800c;&#x76f8;&#x5e94;&#x7684",{"_index":3790,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4f60;&#x7684;&#x4ee3;&#x7801;&#x5c31;&#x88ab;&#x4fee;&#x6539;&#x6210;&#x4e86;&#x6807;&#x51c6;&#x683c;&#x5f0f;&#x3002",{"_index":2791,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f7f;&#x4efb;&#x4f55;&#x9488;&#x5bf9;&#x5b83;&#x7684;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x7acb;&#x5373;&#x7ed3;&#x675f;&#x3002",{"_index":8250,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4f7f;&#x7528",{"_index":202,"title":{},"body":{"index.html#注释":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/map.html#map":{},"basic/json.html#序列化":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html#slice":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#切片操作":{},"basic/package.html#初始化包":{},"standards/log.html#Logger":{},"commands/build.html#工具":{},"concurrent/channel.html#channel":{},"basic/basic_data.html#字符串":{},"standards/io/bufio.html#bufio-Reader":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#sync-Map":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html#数据集合排序":{}}}],["x4f7f;&#x7528;&#x4e00;&#x4e2a;&#x6216;&#x591a;&#x4e2a;&#x7a7a;&#x683c;&#x5206;&#x9694;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#x8fd4;&#x56de;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x4e0d;&#x4f1a;&#x5305;&#x542b;&#x7a7a;&#x683c;&#x5b57;&#x7b26;&#x4e32;&#x3002",{"_index":5972,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x4f7f;&#x7528;&#x51fd;&#x6570",{"_index":3153,"title":{},"body":{"basic/function.html#函数作为值":{}}}],["x4f7f;&#x7528;&#x5e26;&#x6709",{"_index":1117,"title":{},"body":{"basic/flow.html#for":{}}}],["x4f7f;&#x7528;&#x6307;&#x5b9a;&#x7684;&#x6743;&#x9650;&#x548c;&#x540d;&#x79f0;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x76ee;&#x5f55;&#x3002;&#x5982;&#x679c;&#x51fa;&#x9519;&#xff0c;&#x4f1a;&#x8fd4;&#x56d",{"_index":7633,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4f7f;&#x7528;&#x6587;&#x6863;&#x4e3b;&#x9898",{"_index":2574,"title":{"theme/theme-usage.html#使用文档主题":{}},"body":{}}],["x4f7f;&#x7528;&#x65b9;&#x6cd5",{"_index":7401,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x4f7f;&#x7528;&#x6ce8;&#x610f",{"_index":8107,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4f7f;&#x7528;&#x7684;&#x6570;&#x636e;&#x7ed3;&#x6784;&#x662f;&#x6700;&#x5c0f;&#x5806;&#xff0c",{"_index":5299,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x4f7f;&#x7528;&#x7b26;&#x53f7;&#x94fe;&#x63a5",{"_index":7612,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4f7f;&#x7528;&#x8be5;&#x51fd;&#x6570;&#x524d;&#x7f00;&#x6dfb;&#x52a0;&#x989d;&#x5916;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#x4fe1;&#x606f;&#x5230;&#x539f;&#x59cb;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x3002",{"_index":621,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x4f7f;&#x7528;&#x901a;&#x9053",{"_index":6338,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f7f;&#x7528;&#x9501;&#x5c31;&#x610f;&#x5473;&#x7740;&#x8981;&#x628a;&#x4e00;&#x4e9b;&#x5e76;&#x53d1;&#x7684;&#x64cd;&#x4f5c;&#x5f3a;&#x5236;&#x4e32;&#x884c;&#x5316;&#x3002;&#x8fd9;&#x5f80;&#x5f80;&#x4f1a;&#x964d;&#x4f4e;&#x7a0b;&#x5e8f;&#x7684;&#x6027;&#x80fd;&#xff0c;&#x5c24;&#x5176;&#x662f;&#x5728;&#x8ba1;&#x7b97;&#x673a;&#x62e5;&#x6709;&#x591a;&#x4e2a",{"_index":8338,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4f7f;&#x7528;&#xff0c;&#x4ee5;&#x514d;&#x9020;&#x6210;&#x6d41;&#x7a0b;&#x6df7;&#x4e71;&#x3002",{"_index":1114,"title":{},"body":{"basic/flow.html#for":{}}}],["x4f7f;&#x7528;&#xff0c;&#x8fd9;&#x70b9;&#x548c;&#x6211;&#x5e38;&#x7528;&#x7684;js&#x4e0d;&#x540c;&#xff1a",{"_index":262,"title":{},"body":{"index.html#类型转换":{}}}],["x4f8b;&#x5982",{"_index":4430,"title":{},"body":{"standards/database/sql.html#sql":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["x4f8b;&#x5982;&#xff0c;&#x5728",{"_index":5619,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x4f8b;&#x5982;&#xff1a",{"_index":1355,"title":{},"body":{"basic/constant.html#常量":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["x4f8b;&#x5b50;&#xff0c;&#x6253;&#x5f00;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#x5e76;&#x4ece;&#x4e2d;&#x8bfb;&#x53d6;&#x4e00;&#x4e9b;&#x6570;&#x636e;&#xff1a",{"_index":7321,"title":{},"body":{"standards/os/os.html#os":{}}}],["x4f8b;&#x5b50;&#xff1a",{"_index":5131,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x4f9b",{"_index":6580,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f9d;&#x7136;&#x60f3;&#x8ba9;&#x4e3b",{"_index":6390,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f9d;&#x8d56;c",{"_index":2212,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x4fdd;&#x5b58;&#x5185;&#x5b58;&#x5730;&#x5740;&#x7684;&#x6574;&#x5f62;&#x53d8;&#x91cf;&#x3002",{"_index":1679,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x4fdd;&#x5b58;&#x5df2;&#x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#x7684;&#x8ba1;&#x6570;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x5df2;&#x8bfb;&#x8ba1;&#x6570;&#xff09;&#x3002",{"_index":3854,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4fdd;&#x5b58;&#x8def;&#x7531;&#x89c4;&#x5219",{"_index":8979,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x4fdd;&#x6301;&#x4e00;&#x81f4;&#xff1a",{"_index":3557,"title":{},"body":{"standards/time.html#定时器":{}}}],["x4fdd;&#x7559;&#x9ed8;&#x8ba4;&#x503c",{"_index":3569,"title":{},"body":{"standards/time.html#定时器":{}}}],["x4fdd;&#x8bc1;&#x6bcf;&#x4e2a;&#x5305;&#x662f;&#x6700;&#x65b0;&#x7248;&#x672c;&#x3002",{"_index":2727,"title":{},"body":{"commands/build.html#工具":{}}}],["x4fe1;&#x606f",{"_index":2039,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x4fe1;&#x606f;&#x4e5f;&#x4f1a;&#x53c2;&#x4e0e;&#x6bd4;&#x8f83;&#xff0c;&#x56e0;&#x6b64",{"_index":3472,"title":{},"body":{"standards/time.html#Time":{}}}],["x4fe1;&#x606f;&#x5c55;&#x793a;&#x51fa;&#x6765;&#x3002",{"_index":4239,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4fe1;&#x606f;&#x7684",{"_index":7882,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4fe1;&#x606f;&#xff0c;&#x4ee5;&#x4fbf;&#x5224;&#x65ad;&#x662f;&#x5426;&#x662f;&#x76ee;&#x5f55;&#x3002;&#x6ce8;&#x610f;&#xff0c;&#x8fd9;&#x91cc;&#x4f7f;&#x7528",{"_index":7660,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4fee;&#x6539",{"_index":2582,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{},"standards/os/os.html#文件属性":{}}}],["x4fee;&#x6539;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#x7684;&#x540d;&#x5b57;&#x6216;&#x79fb;&#x52a8;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#x3002;&#x5982;&#x679c",{"_index":7610,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x4fee;&#x6539;&#x5b57;&#x7b26;&#x4e32",{"_index":5959,"title":{"standards/text/strings.html#修改字符串":{}},"body":{}}],["x4fee;&#x9970;&#x7684;&#x51fd;&#x6570;&#x4e2d;&#x4f7f;&#x7528",{"_index":707,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x500d",{"_index":1928,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x500d;&#x4f5c;&#x4e3a;&#x65b0;&#x5bb9;&#x91cf;&#x7684;&#x57fa;&#x51c6;&#xff08;&#x4ee5;&#x4e0b;&#x65b0;&#x5bb9;&#x91cf;&#x57fa;&#x51c6;&#xff09;&#x3002",{"_index":1932,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x500d;&#x591a;&#x3002",{"_index":4966,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x503c",{"_index":1096,"title":{},"body":{"basic/flow.html#for":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/data/math.html#其他函数":{},"standards/os/os.html#文件-I-O":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x3002",{"_index":3851,"title":{},"body":{"basic/basic_data.html#字符串":{},"standards/net/http.html#Response":{}}}],["x503c;&#x3002;&#x8868;&#x793a",{"_index":3491,"title":{},"body":{"standards/time.html#Time":{}}}],["x503c;&#x4e0a;&#x5e94;&#x7528;&#x5207;&#x7247;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x5c31;&#x76f8;&#x5f53;&#x4e8e;&#x5728;&#x5bf9;&#x5176;&#x5e95;&#x5c42;&#x7684;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#x505a;&#x5207;&#x7247",{"_index":3793,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e0d;&#x80fd;&#x518d;&#x88ab;&#x590d;&#x5236;&#xff0c;&#x4f46;&#x662f;&#x5b83;&#x7684;&#x6307;&#x9488;&#x503c;&#x5374;&#x53ef;&#x4ee5;&#x3002;&#x65e0;&#x8bba;&#x4ec0;&#x4e48;&#x65f6;&#x5019;&#xff0c;&#x6211;&#x4eec;&#x90fd;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x4efb;&#x4f55;&#x65b9;&#x5f0f;&#x590d;&#x5236;&#x8fd9;&#x6837;&#x7684;&#x6307;&#x9488;&#x503c",{"_index":3849,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e0d;&#x80fd;&#x518d;&#x88ab;&#x590d;&#x5236;&#xff0c;&#x6240;&#x4ee5;&#x80af;&#x5b9a;&#x4e0d;&#x4f1a;&#x51fa;&#x73b0;&#x591a;&#x4e2a",{"_index":3844,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e2d;&#x6709;&#x4e00;&#x4e2a;&#x7528;&#x4e8e;&#x627f;&#x8f7d;&#x5185;&#x5bb9;&#x7684;&#x5bb9;&#x5668;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff09;&#x3002;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x4ee5",{"_index":3807,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e2d;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff08;&#x4e5f;&#x5c31;&#x662f;&#x90a3;&#x4e2a;&#x5b57;&#x8282;&#x5207;&#x7247;&#xff09;&#x5171;&#x7528;&#x4e00;&#x4e2a;&#x5e95;&#x5c42;&#x5b57",{"_index":3845,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e2d;&#x7684;&#x5185;&#x5bb9;&#x662f;&#x4e0d;&#x53ef;&#x53d8;&#x7684;&#x3002;&#x56e0;&#x6b64;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5229;&#x7528",{"_index":3816,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e2d;&#x76f8;&#x5e94;&#x7684;&#x4ee3;&#x7801;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#xff09;&#x4f1a;&#x5148;&#x5224;&#x65ad;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5269;&#x4f59;&#x5bb9;&#x91cf;&#xff0c;&#x662f;&#x5426;&#x53ef;&#x4ee5;&#x6ee1;&#x8db3;&#x8c03;&#x7528;&#x65b9;&#x7684;&#x8981;&#x6c42;&#xff0c;&#x6216;&#x8005;&#x662f;&#x5426;&#x8db3",{"_index":3904,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4ea7;&#x751f;&#x51fa;&#x4efb;&#x610f;&#x4e2a;&#x5b50;&#x503c;&#x3002;&#x8fd9;&#x4e9b;&#x5b50;&#x503c",{"_index":8206,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x4f1a",{"_index":3853,"title":{},"body":{"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x4f1a;&#x5148;&#x5173;&#x95ed;&#x5b83;&#x5185;&#x90e8;&#x7684;&#x63a5;&#x6536;&#x901a;&#x9053;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x5b83;&#x7684",{"_index":8259,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x4f1a;&#x62e5;&#x6709;&#x4e00;&#x4e2a;&#x9ed8;&#x8ba4;&#x5c3a;&#x5bf8;&#x7684;&#x7f13;&#x51b2;&#x533a;&#x3002;&#x8fd9;&#x4e2a;&#x9ed8;&#x8ba4;&#x5c3a;&#x5bf8;&#x662f",{"_index":5403,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{}}}],["x503c;&#x4f1a;&#x81ea;&#x52a8;&#x5730;&#x5bf9;&#x81ea;&#x8eab;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x8fdb;&#x884c;&#x6269;&#x5bb9;&#x3002",{"_index":3823,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4f20;&#x9012",{"_index":3126,"title":{},"body":{"basic/function.html#参数":{}}}],["x503c;&#x4f5c;&#x4e3a;&#x7ed3;&#x679c;&#x8fd4;&#x56d",{"_index":3798,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x5171;&#x540c;&#x6784;&#x6210;&#x4e86;&#x4e00;&#x9897;&#x4ee3;&#x8868;&#x4e86;&#x4e0a;&#x4e0b;&#x6587;&#x5168;&#x8c8c;&#x7684;&#x6811;&#x5f62;&#x7ed3;&#x6784;&#x3002;&#x8fd9;&#x68f5;&#x6811;&#x7684",{"_index":8209,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x5219;&#x5305;&#x542b;&#x4e86;&#x6307;&#x5411;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#x5934;&#x90e8;&#x7684;&#x6307;&#x9488;&#x503c;&#x3002;&#x5982;&#x6b64;&#x4e00;&#x6765;&#xff0c",{"_index":3791,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x53c8;&#x610f;&#x5473;&#x7740;&#x4ec0;&#x4e48;&#xff1f",{"_index":8241,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x540c;&#x6837;&#x62e5;&#x6709;&#x9ad8;&#x6548;&#x5229;&#x7528;&#x5185;&#x5b58;&#x7684;&#x524d;&#x63d0;&#x6761;&#x4ef6;&#x3002",{"_index":3814,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x5728;&#x62fc;&#x63a5;&#x5185;&#x5bb9;&#x65f6;&#x53ef;&#x80fd;&#x4ea7;&#x751f;&#x7684;&#x51b2;&#x7a81;&#x95ee;&#x9898;&#x3002",{"_index":3847,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x5b58;&#x50a8;&#x5185;&#x5bb9;&#x7684;&#x65b9;&#x5f0f;&#x662f;&#x4e00;&#x6837;&#x7684",{"_index":3810,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x5e76;&#x4e0d;&#x4f1a;&#x88ab;&#x5b58;&#x5165;&#x5f53;&#x524d;&#x7684;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60;&#x4e2d;&#xff0c;&#x800c;&#x662f;&#x76f4;&#x63a5;&#x8fd4;&#x56de;&#x7ed9",{"_index":8302,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x503c;&#x5e76;&#x4e0d;&#x5728;&#x94fe;&#x8868;&#x4e2d;&#xff0c;&#x6240;&#x4ee5;&#x4e5f;&#x5c31;&#x8c08;&#x4e0d;&#x4e0a;&#x201c;&#x5728;&#x94fe;&#x8868;&#x4e2d;&#x79fb;&#x52a8;&#x5143;&#x7d20;&#x201d;&#x3002",{"_index":5247,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x503c;&#x5e76;&#x4e0d;&#x662f;&#x7528;&#x5b57;&#x5178;&#x6765;&#x5b58;&#x50a8;&#x952e;&#x548c;&#x503c;&#x7684;&#xff0c",{"_index":8274,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x62e5;&#x6709;&#x7684;&#x4e00;&#x7cfb;&#x5217;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#xff0c;&#x5305;&#x62ec;&#xff1a",{"_index":3819,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x63d0;&#x4f9b;&#x7684;&#x65b9;&#x6cd5;&#x62fc;&#x63a5;&#x66f4;&#x591a;&#x7684;&#x5185;&#x5bb9;&#xff0c;&#x800c;&#x4e1d;&#x6beb;&#x4e0d;&#x7528;&#x62c5;&#x5fc3;&#x8fd9;&#x4e9b;&#x65b9;&#x6cd5",{"_index":3817,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x643a;&#x5e26;&#x6570;&#x636",{"_index":8266,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x65b9;&#x6cd5;&#xff0c;&#x5c31;&#x662f;&#x63a5;&#x6536;&#x8005;&#x7c7b;&#x578b;&#x662f;&#x975e;&#x6307;&#x9488;&#x7684;&#x81ea;&#x5b9a;&#x4e49;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":1257,"title":{},"body":{"basic/oop.html#方法":{}}}],["x503c;&#x65e2;&#x53ef;&#x4ee5;&#x88ab;&#x624b;&#x52a8;&#x6269;&#x5bb9;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x8fdb;&#x884c;&#x81ea;&#x52a8;&#x6269;&#x5bb9;&#x3002;&#x5e76;&#x4e14;&#xff0c;&#x8fd9;&#x4e24;&#x79cd;&#x6269;&#x5bb9;&#x65b9;&#x5f0f;&#x7684;&#x7b56;&#x7565;&#x662f;&#x57fa;&#x672c;&#x4e00;&#x81f4;&#x7684;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x9664;&#x975e;&#x6211;&#x4eec;&#x5b8c;&#x5168;&#x786e;&#x5b9a;&#x540e;&#x7eed;&#x5185;&#x5bb9;&#x6240;&#x9700",{"_index":3900,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x65f6;&#xff0c;&#x8868;&#x793a;&#x53d1;&#x751f;&#x4e86;&#x672a;&#x77e5;&#x7684",{"_index":718,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x503c;&#x662f",{"_index":5805,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x503c;&#x662f;&#x4e0d;&#x53ef;&#x64a4;&#x9500;&#x7684",{"_index":8264,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x662f;&#x53ef;&#x4ee5;&#x88ab;&#x590d;&#x7528;&#x7684;&#xff0c;&#x4f46;&#x9700;&#x8981;&#x4fdd;&#x8bc1;&#x5176;&#x8ba1;&#x6570;&#x5468;&#x671f;&#x7684;&#x5b8c;&#x6574;&#x6027",{"_index":8101,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x503c;&#x672c;&#x8eab;&#x5c31;&#x53ef;&#x4ee5;&#x6253;&#x5370;&#x51fa;&#x540e;&#x8005;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x8868;&#x793a;&#x5f62;&#x5f0f;&#xff0c",{"_index":1308,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x503c;&#x6765;&#x534f;&#x8c03;&#x5b83;&#x4eec;&#x548c;&#x5206;&#x53d1;&#x5b50;&#x4efb",{"_index":8163,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x6765;&#x8bf4;&#xff0c;&#x5982;&#x679c;&#x7b2c;&#x4e00;&#x6b21;&#x6269;&#x5bb9;&#x65f6;&#x7684;&#x53e6;&#x9700;&#x5b57;&#x8282;&#x6570;&#x4e0d;&#x5927;&#x4e8",{"_index":3889,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x6b63;&#x662f;&#x4f9d;&#x9760;&#x8fd9;&#x6837;&#x4e00;&#x4e2a;&#x8ba1;&#x6570;&#xff0c;&#x4ee5;&#x53ca;&#x9488;&#x5bf9;&#x5b57;&#x7b26;&#x4e32;&#x503c;&#x7684;&#x5207;&#x7247;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x4ece;&#x800c;&#x5b9e;&#x73b0;&#x5feb;&#x901f;&#x8bfb;&#x53d6",{"_index":3856,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x7684",{"_index":3826,"title":{},"body":{"basic/basic_data.html#字符串":{},"basic/test.html#性能分析":{},"standards/net/http.html#Response":{}}}],["x503c;&#x7684;&#x4e00;&#x65b9;&#x901a;&#x8fc7;&#x67d0;&#x79cd;&#x975e;&#x6807;&#x51c6;&#x7684;&#xff08;&#x6216;&#x8005;&#x8bf4;&#x4e0d;&#x6b63;&#x5f0f;&#x7684;&#xff09;&#x65b9;&#x5f0f;&#x5f97;&#x5230;&#x4e86;&#x672c;&#x4e0d;&#x8be5;&#x5f97;&#x5230;&#x7684;&#x5185;&#x5bb9;&#x3002",{"_index":3920,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x7684;&#x4e24;&#x79cd;&#x64cd;&#x4f5c;&#x7684;&#x5e76;&#x53d1;&#x6267;&#x884c",{"_index":8112,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x503c;&#x7684;&#x4fee;&#x6539;&#x800c;&#x6539;&#x53d8;&#x5417;&#xff1f",{"_index":3217,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x503c;&#x7684;&#x5185;&#x5bb9;&#x4f1a;&#x88ab;&#x5b58;&#x50a8;&#x5230;&#x4e00;&#x5757;&#x8fde;&#x7eed;&#x7684;&#x5185;&#x5b58;&#x7a7a;&#x95f4;&#x4e2d;&#x3002;&#x540c;&#x65f6;&#xff0c;&#x8fd9;&#x5757;&#x5185;&#x5b58;&#x5bb9;&#x7eb3;&#x7684;&#x5b57;&#x8282;&#x6570;&#x91cf;&#x4e5f;&#x4f1a;&#x88ab;&#x8bb0;&#x5f55;&#x4e0b;&#x6765;&#xff0c;&#x5e76;&#x7528;&#x4e8e;&#x8868;&#x793a",{"_index":3788,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x5373;&#xff1a",{"_index":8224,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x7684;&#x62fc;&#x63a5;&#x65b9;&#x6cd5;&#x6216;&#x6269;&#x5bb9;&#x65b9;&#x6cd5;&#xff0c;&#x5c31;&#x4e0d;&#x80fd;&#x518d;&#x4ee5;&#x4efb;&#x4f55;&#x7684;&#x65b9;&#x5f0f;&#x5bf9;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x8fdb;&#x884c;&#x590d;&#x5236;&#x4e86",{"_index":3839,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x6211;&#x4eec;&#x6700;&#x597d;&#x7528",{"_index":8153,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x7684;&#x7236;&#x503c",{"_index":8229,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x6240;&#x5bf9;&#x5e94;&#x7684;&#x90a3;&#x4e2a;&#x7d22;&#x5f15;&#x503c;&#x3002;&#x800c;&#x8d4b;&#x7ed9;&#x7b2c;&#x4e8c;&#x4e2a;&#x53d8;&#x91cf;&#x7684;&#x503c;&#x5219;&#x662f;&#x8fd9;&#x4e2a",{"_index":1129,"title":{},"body":{"basic/flow.html#for":{}}}],["x503c;&#x7684;&#x81ea;&#x52a8;&#x6269;&#x5bb9;&#xff0c;&#x6211;&#x4eec;&#x8fd8;&#x53ef;&#x4ee5;&#x9009;&#x62e9;&#x624b;&#x52a8;&#x6269;&#x5bb9;&#xff0c;&#x8fd9;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":3825,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x7684;&#x8bfb;&#x53d6;&#x65b9;&#x6cd5;&#x4e00;&#x822c;&#x90fd;&#x4f1a;&#x5148;&#x4ece;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x7684;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#x3002;&#x540c;&#x65f6;&#xff0c;&#x5728;&#x5fc5;&#x8981;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x4eec;&#x8fd8;&#x4f1a;&#x9884;&#x5148;&#x4ece;&#x5e95;&#x5c42;&#x8bfb;&#x53d6;&#x5668;&#x90a3;&#x91cc;&#x8bfb;&#x51fa;&#x4e00;&#x90e8;&#x5206;&#x6570;&#x636e;&#xff0c;&#x5e76;&#x6682",{"_index":5411,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x503c;&#x7684;&#x957f;&#x5ea6;&#x3002",{"_index":3789,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x76f8;&#x6bd4;&#xff0c",{"_index":3802,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x81ea;&#x52a8;&#x53bb;&#x6269;&#x5bb9;&#x5c31;&#x597d;&#x4e86;&#x3002",{"_index":3902,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x88ab;&#x64a4;&#x9500;&#xff0c;&#x8fd9;&#x91cc;&#x7684;&#x63a5;&#x6536;&#x901a;&#x9053;&#x5c31;&#x4f1a;&#x88ab;&#x7acb;&#x5373;&#x5173;&#x95ed;&#x3002;&#x6211;&#x4eec;&#x90fd;&#x77e5;&#x9053;&#xff0c;&#x5bf9;&#x4e8e;&#x4e00;&#x4e2a;&#x672a;&#x5305;&#x542b;&#x4efb;&#x4f55;&#x5143;&#x7d20;&#x503c;&#x7684;&#x901a;&#x9053;&#x6765;&#x8bf4;&#xff0c;&#x5b83;&#x7684;&#x5173;&#x95ed;&#x4f1a",{"_index":8249,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x8d85;&#x8fc7;&#x4e86;&#x7c7b;&#x578b;&#x80fd;&#x8868;&#x793a;&#x7684;&#x6700;&#x5927;&#x8303;&#x56f4;&#xff0c;&#x6bd4;&#x5982;&#x5c06",{"_index":4892,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x503c;&#x8fd8;&#x5c06;&#x4e8e;&#x8fdb;&#x7a0b;&#x63a9;&#x7801;&#x76f8",{"_index":7638,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x503c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x542b;&#x6570;&#x636e;&#x7684",{"_index":8268,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#xff09;&#x3002",{"_index":8124,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x503c;&#xff09;&#x62e5;&#x6709;&#x7684;&#x6240;&#x6709;&#x6570;&#x636e;&#x5199;&#x5165;&#x65b9;&#x6cd5;&#x90fd;&#x4f1a;&#x5728;&#x5fc5;&#x8981;&#x7684;&#x65f6;&#x5019;&#x8c03;&#x7528;&#x5b83;&#x7684",{"_index":5541,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x503c;&#xff09;&#x662f;&#x53ef;&#x4ee5;&#x7e41;&#x884d;&#x7684;&#xff0c;&#x8fd9;&#x610f;&#x5473;&#x7740;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x4e00;&#x4e2a",{"_index":8205,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#xff09;&#x7684;&#x65f6;&#x5019;&#x9700;&#x8981;&#x4e09;&#x4e2a;&#x53c2;&#x6570;&#xff0c;&#x5373;&#xff1a;&#x7236;&#x503c;&#x3001;&#x952e;&#x548c;&#x503c",{"_index":8269,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#xff0c;&#x548c;&#x4e00;&#x4e2a;&#x7528;&#x4e8e;&#x89e6;&#x53d1;&#x64a4;&#x9500;&#x4fe1;&#x53f7;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":8233,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#xff0c;&#x800c;&#x7b2c;&#x4e8c;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x5219;&#x662f",{"_index":8256,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5047;&#x8bbe;&#x6211;&#x5df2;&#x7ecf;&#x4fdd;&#x8bc1;&#x4e86;&#x5bf9;&#x4e00;&#x4e2a;&#x53d8;&#x91cf;&#x7684;&#x5199;&#x64cd;&#x4f5c;&#x90fd;&#x662f;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#xff0c;&#x6bd4;&#x5982;&#xff1a;&#x52a0;&#x6216;&#x51cf;&#x3001;&#x5b58;&#x50a8;&#x3001;&#x4ea4;&#x6362;&#x7b49;&#x7b49;&#xff0c;&#x90a3;&#x6211;&#x5bf9;&#x5b83;&#x8fdb;&#x884c;&#x8bfb;&#x64cd;&#x4f5c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x8fd8;&#x6709;&#x5fc5;&#x8981;&#x4f7f;&#x7528;&#x539f",{"_index":8034,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x504f;&#x79fb;&#x5904;&#x5f00;&#x59cb;&#x8bfb;&#x53d6;&#x6570;&#x636e",{"_index":6983,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x505a;&#x5230;&#x5e76;&#x53d1;&#x3002;&#x534f;&#x7a0b;&#x62e5;&#x6709;&#x81ea;&#x5df1;&#x7684;&#x5bc4;&#x5b58;&#x5668;&#x4e0a;&#x4e0b;&#x6587;&#x548c;&#x6808;&#x3002;&#x534f;&#x7a0b;&#x5728;&#x7ebf;&#x7a0b;&#x4e0a;&#x901a;&#x8fc7;&#x4e3b;&#x52a8",{"_index":6191,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x505a;&#x6e05;&#x7406;&#x5de5;&#x4f5c",{"_index":6491,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x505c;&#x4e0b;&#x6765;&#x5e76;&#x8c03;&#x5ea6;&#x4e0b;&#x4e00;&#x4e2a",{"_index":6524,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x505c;&#x6b62;&#x3002",{"_index":6990,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x505c;&#x6b62;&#x5f53;&#x524d;&#x6d4b;&#x8bd5;&#x51fd;&#x6570",{"_index":4110,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x5141;&#x8bb8;&#x591a;&#x4e2a;&#x76ee;&#x5f55;&#xff0c;&#x5f53;&#x6709;&#x591a;&#x4e2a;&#x76ee;&#x5f55;&#x65f6;&#xff0c;&#x8bf7;&#x6ce8;&#x610f;&#x5206;&#x9694;&#x7b26;&#xff0c;&#x591a;&#x4e2a;&#x76ee;&#x5f55;&#x7684;&#x65f6;&#x5019",{"_index":949,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x5143;&#x7d20",{"_index":5238,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5143;&#x7d20;&#x3002",{"_index":1436,"title":{},"body":{"basic/map.html#map":{}}}],["x5143;&#x7d20;&#x503c;&#x4ece;&#x5916;&#x754c;&#x8fdb;&#x5165;&#x901a;&#x9053;&#x65f6;&#x4f1a;&#x88ab;&#x590d;&#x5236;&#x3002;&#x66f4;&#x5177;&#x4f53;&#x5730;&#x8bf4;&#xff0c;&#x8fdb;&#x5165;&#x901a;&#x9053;&#x7684;&#x5e76;&#x4e0d;&#x662f;&#x5728;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x7b26;&#x53f3;&#x8fb9;&#x7684;&#x90a3;&#x4e2a;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x800c;&#x662f;&#x5b83;&#x7684;&#x526f;&#x672c",{"_index":2969,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5143;&#x7d20;&#x5bf9;&#x7684;&#x65f6;&#x5019;&#xff0c;go",{"_index":1477,"title":{},"body":{"basic/map.html#map":{}}}],["x5143;&#x7d20;&#x5bf9;&#xff0c;&#x6211;&#x4eec;&#x5728;&#x4e00;&#x4e2a;&#x503c;&#x4e3a",{"_index":1472,"title":{},"body":{"basic/map.html#map":{}}}],["x5143;&#x7d20;&#x6240;&#x5728;&#x94fe;&#x8868",{"_index":5237,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5143;&#x7d20;&#xff0c;&#x5982;&#x679c;&#x961f;&#x5217;&#x88ab;&#x585e;&#x6ee1;&#x4e86;&#xff0c;&#x90a3;&#x4e48;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x5c06;&#x963b",{"_index":2944,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5143;&#x7d20;&#xff0c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x5219;&#x662f",{"_index":2943,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5148;&#x4e0d;&#x8bf4;&#x8fd9;&#x8fdd;&#x80cc;&#x4e86;&#x4e92;&#x65a5;&#x9501;&#x7684;&#x91cd;&#x8981;&#x4f7f;&#x7528;&#x539f;&#x5219;&#xff0c;&#x5373;&#xff1a;&#x6210;&#x5bf9;&#x7684;&#x9501;&#x5b9a;&#x548c;&#x89e3;&#x9501;&#xff0c;&#x5c31;&#x7b97;&#x522b;&#x7684",{"_index":7956,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5148;&#x4e3a;&#x5207;&#x7247;&#x503c",{"_index":8054,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x5148;&#x540e;&#x8c03;&#x7528;&#x4e86",{"_index":8177,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5148;&#x6267;&#x884c;&#x4e86;&#x63a5;&#x53d7;&#x64cd;&#x4f5c;&#xff0c;&#x4e5f;&#x4f1a;&#x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x53e6;&#x4e00;&#x4e2a",{"_index":2933,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5148;&#x6267;&#x884c;&#x5b8c;&#x3001;&#x54ea;&#x4e2a",{"_index":6316,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5148;&#x770b",{"_index":3475,"title":{},"body":{"standards/time.html#Time":{}}}],["x5148;&#x7edf;&#x4e00",{"_index":8154,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5148;&#x8ba1;&#x7b97;&#x51fa",{"_index":2442,"title":{},"body":{"basic/var.html#赋值":{}}}],["x5148;&#x8c03;&#x7528",{"_index":726,"title":{},"body":{"basic/error.html#Recover-捕获异常":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5165;&#x4f18;&#x5148;&#x7ea7;&#x961f;&#x5217",{"_index":5330,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x5168;&#x5339;&#x914d;&#x4e0a;&#xff0c;&#x4e0d;&#x53ea;&#x662f;&#x5b50;&#x4e32;&#x3002;&#x5728",{"_index":5754,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x5168;&#x5b57;&#x5178;&#x7684;&#x6027;&#x80fd;&#x5f71;&#x54cd;&#x662f;&#x6700;&#x5927;&#x7684;&#xff0c;&#x5176;&#x6b21;&#x662f;&#x5220;&#x9664;&#x64cd;&#x4f5c;&#xff0c;&#x6700;&#x540e;&#x624d;&#x662f;&#x4fee;&#x6539;&#x64cd;&#x4f5c;&#x3002",{"_index":8403,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5168;&#x5c40;&#x53d8;&#x91cf",{"_index":2249,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5168;&#x5c40;&#x53d8;&#x91cf;&#x53ef;&#x4ee5;&#x5728;&#x4efb;&#x4f55;&#x51fd;&#x6570;&#x4e2d;&#x4f7f;&#x7528;&#x3002",{"_index":2255,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5168;&#x5c40;&#x53d8;&#x91cf;&#x53ef;&#x4ee5;&#x5728;&#x6574;&#x4e2a;&#x5305;&#x751a;&#x81f3;&#x5916;&#x90e8;&#x5305",{"_index":2252,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5168;&#x5c40;&#x552f;&#x4e00",{"_index":8213,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5168;&#x662f",{"_index":6301,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5168;&#x9762;&#x963b;&#x585e;&#x3002",{"_index":7969,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x516b;&#x8fdb;&#x5236;&#x8868;&#x793a",{"_index":4681,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5171;&#x4eab;&#x53d8;&#x91cf",{"_index":7802,"title":{"concurrent/sync_lock.html#共享变量":{}},"body":{}}],["x5171;&#x4eab;&#xff0c;&#x5e76;&#x957f;&#x671f;&#x6d3b;&#x8dc3;&#x3002;&#x5f53;&#x7136;&#xff0c;&#x5982;&#x679c;&#x4f60;&#x786e;&#x5b9a",{"_index":4456,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5173;&#x4e8e",{"_index":4472,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5173;&#x4e8e;&#x8fd4;&#x56de;&#x503c",{"_index":7443,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5173;&#x7cfb;&#x8fd0;&#x7b97;&#x7b26",{"_index":1801,"title":{"basic/operator.html#关系运算符":{}},"body":{}}],["x5173;&#x952e;&#x5b57",{"_index":3172,"title":{"basic/function.html#关键字-defer":{}},"body":{}}],["x5173;&#x952e;&#x5b57;&#x3002;go",{"_index":2163,"title":{},"body":{"basic/package.html#main":{}}}],["x5173;&#x952e;&#x5b57;&#x4e0d;&#x80fd;&#x5b9a;&#x4e49;&#x53d8;&#x91cf;&#x540d;&#xff0c;&#x5982",{"_index":221,"title":{},"body":{"index.html#命名":{}}}],["x5173;&#x952e;&#x5b57;&#x521b;&#x5efa",{"_index":6209,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5173;&#x952e;&#x5b57;&#x53f3;&#x8fb9;&#x7684",{"_index":1101,"title":{},"body":{"basic/flow.html#for":{}}}],["x5173;&#x952e;&#x5b57;&#x53f3;&#x8fb9;&#x7684;&#x4f4d;&#x7f6e;&#x4e0a;&#x7684;&#x4ee3;&#x7801;&#x88ab;&#x79f0;&#x4e3a",{"_index":1083,"title":{},"body":{"basic/flow.html#for":{}}}],["x5173;&#x952e;&#x5b57;&#x58f0;&#x660e;&#x51fd;&#x6570;&#xff1a",{"_index":3109,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x5173;&#x952e;&#x5b57;&#x5e76;&#x4e0d;&#x662f;&#x6267;&#x884c;&#x5e76;&#x53d1;&#x64cd;&#x4f5c;&#xff0c;&#x800c;&#x662f;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x5e76;&#x53d1;&#x4efb;&#x52a1;&#x5355;&#x5143",{"_index":6266,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5173;&#x952e;&#x5b57;&#xff1a",{"_index":1402,"title":{},"body":{"basic/map.html#map":{}}}],["x5173;&#x95ed;&#x4e00;&#x4e2a;&#x672a;&#x6253;&#x5f00;&#x7684;&#x6587;&#x4ef6;&#xff1b",{"_index":7446,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5173;&#x95ed;&#x540e;&#x4e0d;&#x80fd;&#x518d;&#x53d1;&#x9001;&#x6570;&#x636e;&#xff0c;&#x4f46;&#x662f;&#x53ef;&#x4ee5;&#x63a5;&#x53d7;&#x5df2;&#x7ecf;&#x53d1;&#x9001;&#x6210;&#x529f;&#x7684;&#x6570;&#x636e;&#xff0c",{"_index":2896,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5173;&#x95ed;&#x8fde;&#x63a5",{"_index":8747,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5173;&#x95ed;&#xff09;&#xff0c",{"_index":7016,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x5173;&#x95ed;&#xff09;&#xff0c;&#x8be5",{"_index":7021,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x5176;&#x4e2d",{"_index":4474,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{},"standards/net/http.html#HTTP-Server":{}}}],["x5176;&#x4e2d;&#x4e00;&#x4e2a;&#x539f;&#x751f",{"_index":8359,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5176;&#x4e2d;&#xff0c",{"_index":7356,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5176;&#x4ed6;&#x51fd;&#x6570",{"_index":6098,"title":{"standards/data/math.html#其他函数":{}},"body":{}}],["x5176;&#x4ed6;&#x5b9e;&#x73b0;&#x4e86",{"_index":5527,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x5176;&#x4ed6;&#x5f62;&#x5f0f;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x4f1a;&#x8fd4;&#x56de;&#x9519;&#x8bef",{"_index":4974,"title":{},"body":{"standards/text/strconv.html#字符串和布尔值之间的转换":{}}}],["x5176;&#x4ed6;&#x63a5;&#x53e3",{"_index":6940,"title":{"standards/io/io.html#其他接口":{}},"body":{}}],["x5176;&#x4ed6;&#x6570;&#x503c;&#x7c7b;&#x578b",{"_index":3720,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5176;&#x4ed6;&#x65b9;&#x6cd5",{"_index":5509,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x5176;&#x4ed6;&#x8fd0;&#x7b97;&#x7b26",{"_index":1827,"title":{"basic/operator.html#其他运算符":{}},"body":{}}],["x5176;&#x4f59;&#x90e8;&#x5206;&#x4fdd;&#x5b58;&#x5728;&#x786c;&#x76d8;&#x7684",{"_index":8805,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5176;&#x53c2;&#x6570;&#x503c;&#xff0c;&#x5e76;&#x9010;&#x4e2a;&#x6267;&#x884c;&#x8c03;&#x7528;&#x3002",{"_index":3208,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5176;&#x5b83;&#x6807;&#x8bb0",{"_index":4704,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5176;&#x5b83;&#x7684;&#x5305;&#xff0c;&#x90a3;&#x4e48;&#x4f1a;&#x5148;&#x5c06;&#x5176;&#x5b83;&#x5305;&#x5bfc;&#x5165;&#x8fdb;&#x6765;&#xff0c;&#x7136;&#x540e;&#x518d;&#x5bf9;&#x8fd9;&#x4e9b;&#x5305;&#x4e2d;&#x7684;&#x5305;&#x7ea7;&#x5e38;&#x91cf;&#x548c;&#x53d8;&#x91cf;&#x8fdb;&#x884c;&#x521d;&#x59cb;&#x5316;&#xff0c;&#x63a5;&#x7740;&#x6267;&#x884c",{"_index":2237,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5176;&#x5b9e;&#x5e76;&#x4e0d;&#x91cd;&#x8981;&#x3002",{"_index":655,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5176;&#x5b9e;&#x5f88;&#x7b80;&#x5355;&#xff0c;&#x5728;&#x8c03;&#x7528",{"_index":687,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5176;&#x5b9e;&#x8fd9;&#x6837;&#x89c4;&#x5b9a;&#x4e5f;&#x6709;&#x5b89;&#x5168;&#x6027;&#x65b9;&#x9762;&#x7684;&#x8003;&#x8651;&#x3002",{"_index":1766,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x5177;&#x4f53;&#x539f;&#x56e0;&#x548c;&#x7406;&#x5ff5;&#x8bf7;&#x89c1",{"_index":1277,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x5177;&#x6709",{"_index":8883,"title":{},"body":{"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["x5185;&#x5728;&#x8868;&#x8fbe;&#x3002",{"_index":3955,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5185;&#x5b58;&#x5206;&#x914d",{"_index":381,"title":{"advance/mm.html#内存分配":{}},"body":{}}],["x5185;&#x5b58;&#x5206;&#x914d;&#x5668",{"_index":389,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x5185;&#x5b58;&#x5206;&#x914d;&#x5668;&#x7ba1;&#x7406;&#x7684;&#x5185;&#x5b58;&#x5206;&#x4e3a;&#x4e24;&#x79cd;&#xff1a",{"_index":395,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x5185;&#x5b58;&#x56de;&#x6536;&#x7684;&#x6e90;&#x5934;&#x662f;&#x5783;&#x573e;&#x6e05;&#x7406;&#x64cd;&#x4f5c",{"_index":425,"title":{},"body":{"advance/mm.html#回收":{}}}],["x5185;&#x5b58;&#x5757",{"_index":394,"title":{"advance/mm.html#内存块":{}},"body":{}}],["x5185;&#x5b58;&#x590d;&#x7528",{"_index":428,"title":{},"body":{"advance/mm.html#回收":{}}}],["x5185;&#x5b58;&#x6982;&#x8981;&#x6587;&#x4ef6;&#xff0c;&#x5176;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x6bb5;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x90fd;&#x8bb0;&#x8f7d;&#x7740;&#xff0c;&#x5728;&#x67d0;&#x4e2a;&#x91c7;&#x6837;&#x65f6;&#x523b;&#xff0c;&#x6b63;&#x5728;&#x6267;&#x884c;&#x7684",{"_index":4249,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5185;&#x5b58;&#x7ba1;&#x7406;&#x4e2d;&#x7684;&#x5185;&#x5b58;&#x533a;&#x57df;&#x4e00;&#x822c;&#x5305;&#x62ec",{"_index":1715,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x4e3a;&#xff1a;8&#x3002",{"_index":3929,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5185;&#x5bb9;&#x7684;&#x51fd;&#x6570;&#x8fd8;&#x6709;&#xff1a",{"_index":5999,"title":{},"body":{"standards/text/strings.html#从字符串中读取内容":{}}}],["x5185;&#x5bb9;&#x90fd;&#x88ab;&#x8bfb",{"_index":7122,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x5185;&#x5bb9;&#xff0c;&#x90a3;&#x5c31;&#x8981;&#x770b;&#x4eec;&#x8c03;&#x7528",{"_index":4316,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5185;&#x5d4c;&#x4e86",{"_index":6953,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x5185;&#x7f6e",{"_index":3717,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5185;&#x7f6e;&#x4e86",{"_index":9094,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x5185;&#x7f6e;&#x4e86;&#x9519;&#x8bef;&#x63a5;&#x53e3;&#x3002",{"_index":2344,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5185;&#x7f6e;&#x51fd;&#x6570",{"_index":769,"title":{},"body":{"basic/array.html#数组":{},"basic/basic_data.html#字符串":{}}}],["x5185;&#x7f6e;&#x7684",{"_index":1423,"title":{},"body":{"basic/map.html#map":{}}}],["x5185;&#x7f6e;&#x7684;&#x7c7b;&#x578b;&#x3001;&#x51fd;&#x6570;&#x548c;&#x5e38;&#x91cf;&#xff0c;&#x6bd4;&#x5982",{"_index":2259,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5185;&#x90e8;&#x4f1a;&#x8c03;&#x7528",{"_index":7399,"title":{},"body":{"standards/os/os.html#文件-I-O":{},"standards/os/os.html#目录与链接":{}}}],["x5185;&#x90e8;&#x4f1a;&#x8fdb;&#x884c",{"_index":4503,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5185;&#x90e8;&#x4f7f;&#x7528;&#x3002;&#x6240;&#x4ee5;&#x5728;&#x5bf9;&#x6570;&#x636e;&#x96c6;&#x5408;&#x6392;&#x5e8f;&#x65f6;&#x4e0d;&#x5fc5;&#x8003;&#x8651;&#x5e94;&#x5f53;&#x9009;&#x62e9;&#x54ea;&#x4e00;&#x79cd;&#x6392;&#x5e8f;&#x65b9;&#x6cd5;&#xff0c;&#x53ea;&#x8981;&#x5b9e;&#x73b0;&#x4e86",{"_index":9193,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x5185;&#x90e8;&#x5219;&#x662f;&#x901a;&#x8fc7;&#x4e00;&#x4e2a;&#x6307;&#x9488;&#x6307;&#x5411;&#x5b9e;&#x9645;&#x4fdd;&#x5b58;&#x5185;&#x5bb9;&#x7684;&#x6570;&#x7ec4;&#x3002",{"_index":3762,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5185;&#x90e8;&#x5305",{"_index":2822,"title":{},"body":{"commands/build.html#工具":{}}}],["x5185;&#x90e8;&#x6301;&#x6709;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x961f;&#x5217;&#x3002",{"_index":2939,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5185;&#x90e8;&#x7528;&#x9017;&#x53f7;&#x5206;&#x9694;&#x5c5e;&#x6027;&#xff09",{"_index":8760,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5185;&#x90e8;&#x76f4;&#x63a5;&#x8c03;&#x7528",{"_index":4958,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x5185;&#x90e8;&#x7f13;&#x5b58;&#x6709;&#x6548;&#x5143;&#x7d20;&#x7684;&#x4e2a;&#x6570;&#x3002",{"_index":2961,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5185;&#x90e8;&#x7f13;&#x5b58;&#x7684;&#x5bb9;&#x91cf;&#x3002",{"_index":2960,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5185;&#x90e8;&#x8c03;&#x7528;&#x7684;&#x662f",{"_index":5706,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x5185;&#x90e8;&#x901a;&#x8fc7",{"_index":3760,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5185;&#x90e8;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":4912,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x5185;&#x90e8;&#xff1b;&#x5982;&#x679c;&#x662f;&#x591a;&#x4e2a",{"_index":7851,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x518d;&#x4e0b;&#x9762;&#x7684;&#x4e00;&#x884c;&#xff0c;&#x6307;&#x51fa;&#x7684;&#x5c31;&#x662f;&#x8fd9;&#x4e2a",{"_index":662,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x518d;&#x505a;&#x8fd9;&#x4e24;&#x79cd;&#x64cd;&#x4f5c;&#x3002",{"_index":7900,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5199;&#x4e0d;&#x4e00;&#x81f4;&#xff0c;&#x8fd9;&#x4e2a",{"_index":8922,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5199;&#x5165",{"_index":4820,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x5199;&#x5165;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x6210;&#x529f;&#xff01;&#x51c6;&#x5907;&#x8bfb;&#x53d6;&#x8be5;&#x5b57;&#x8282;&#x2026;&#x2026",{"_index":6944,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x5199;&#x5165;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5982;&#x679c;&#x8fd4;&#x56de;&#x5199;&#x5165;&#x7684;&#x5b57;&#x8282;&#x6570;&#x6bd4",{"_index":5533,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x5199;&#x5165;&#x5b57;&#x8282",{"_index":7024,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x5199;&#x5165;&#x6bb5;&#x5df2;&#x5173;&#x95ed",{"_index":7025,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x5199;&#x5165;&#x9519;&#x8bef",{"_index":6946,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x5199;&#x5230",{"_index":9045,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5199;&#x5230;&#x6211;&#x4eec;&#x6307;&#x5b9a;&#x7684;&#x5199;&#x5165;&#x5668;&#x4e2d;&#x3002",{"_index":4277,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5199;&#x64cd;&#x4f5c;&#x65f6;&#x5c06;&#x6570;&#x636e;&#x9644;&#x52a0;&#x5230;&#x6587;&#x4ef6;&#x5c3e;&#x90e8",{"_index":7351,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5199;&#x6570;&#x636e;&#x5230;&#x7ba1;&#x9053;&#x4e2d;&#x3002;&#x8be5;&#x65b9;&#x6cd5;&#x4f1a;&#x5835;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x7ba1;&#x9053;&#x8bfb;&#x53d6;&#x7aef;&#x8bfb;&#x5b8c;&#x6240;&#x6709;&#x6570;&#x636e;&#x6216;&#x8bfb;&#x53d6;&#x7aef;&#x88ab;&#x5173;&#x95ed;&#x3002;&#x5982;&#x679c;&#x8bfb;&#x53d6;&#x7aef;&#x5173;&#x95ed;&#x65f6",{"_index":7020,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x5199;&#x8fc7;&#x7a0b;&#x4e2d;&#x9047;&#x5230;&#x7684;&#x9519;&#x8bef",{"_index":5512,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x51b3;&#x5b9a;&#x76f8;&#x5bf9;&#x4f4d;&#x7f6e;&#xff1a;0",{"_index":7458,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x51c6;&#x5907;&#x73af;&#x5883",{"_index":979,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x51cf;&#x5c11;&#x4e86;&#x5185;&#x5b58;&#x5206;&#x914d;&#x548c;&#x5185;&#x5bb9;&#x62f7;&#x8d1d;&#x7684;&#x6b21;&#x6570;&#xff1b",{"_index":3805,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x51fa;&#x5185;&#x5bb9",{"_index":5309,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x51fa;&#x9519;&#x65f6;&#xff0c",{"_index":5668,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x51fd;&#x6570",{"_index":644,"title":{"basic/function.html#函数":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#WriteString-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/io/io.html#TeeReader-函数":{}},"body":{"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/map.html#map":{},"basic/package.html#初始化包":{},"concurrent/channel.html#channel":{},"standards/time.html#时区":{},"basic/test.html#性能测试的测试结果":{},"standards/text/strings.html#从字符串中读取内容":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x51fd;&#x6570;&#x3002",{"_index":2093,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html#初始化包":{},"basic/interface.html#接口":{},"standards/time.html#Time":{},"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x3002;&#x4e0d;&#x8fc7;&#x8981;&#x7279;&#x522b;&#x6ce8;&#x610f;&#xff0c;&#x8be5;&#x51fd;&#x6570;&#x4f1a;&#x5f15;&#x8d77",{"_index":4282,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x3002;&#x4f46;&#x662f;&#x63a7;&#x5236;&#x6743;&#x4e5f;&#x4e0d;&#x4f1a;&#x505c;&#x7559;&#x5728;&#x90a3;&#x91cc;&#xff0c;&#x800c;&#x662f;&#x88ab",{"_index":680,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#x3002;&#x5176;&#x542b;&#x4e49;&#x662f;&#xff0c;&#x5982;&#x679c;&#x6240;&#x6709;&#x7684",{"_index":8193,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x3002;&#x5e95;&#x5c42;&#x7684;&#x6587;&#x4ef6;&#x7cfb;&#x7edf;&#x53ef;&#x80fd;&#x4f1a;&#x622a;&#x65ad;/&#x820d;&#x5165",{"_index":7536,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x51fd;&#x6570;&#x3002;&#x800c;&#x4e3b",{"_index":6259,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x4f1a;&#x628a;&#x6536;&#x96c6;&#x597d;&#x7684;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#xff0c",{"_index":4276,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x6240;&#x505a;&#x7684;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x5148;&#x8c03;&#x7528",{"_index":2352,"title":{},"body":{"basic/interface.html#接口":{}}}],["x51fd;&#x6570;&#x3002;&#x8fd9;&#x56db;&#x4e2a;&#x51fd;&#x6570;&#x90fd;&#x662f;&#x901a;&#x8fc7",{"_index":5978,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x51fd;&#x6570;&#x4e00;&#x4e2a;&#x5e38;&#x7528;&#x7684;&#x4f7f;&#x7528;&#x65b9;&#x5f0f;&#x662f;&#x641c;&#x7d22;&#x5143;&#x7d20",{"_index":9242,"title":{},"body":{"standards/data/sort.html#Search":{}}}],["x51fd;&#x6570;&#x4e0d;&#x4f1a;&#x8fd4;&#x56de;&#x4efb;&#x4f55;&#x503c;&#x3002",{"_index":3114,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x51fd;&#x6570;&#x4e0d;&#x4f1a;&#x904d;&#x5386",{"_index":5781,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x51fd;&#x6570;&#x4e0d;&#x662f;&#x4e00;&#x4e2a;&#x6e05;&#x7406;&#x64cd;&#x4f5c;&#xff0c;&#x800c;&#x662f;&#x4e00;&#x4e2a;&#x63a7;&#x5236;&#x64cd;&#x4f5c",{"_index":2898,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x51fd;&#x6570;&#x4e0d;&#x80fd;&#x6709;&#x4efb;&#x4f55;&#x7684;&#x53c2;&#x6570;&#x548c;&#x8fd4;&#x56de;&#x503c;&#xff0c;&#x867d;&#x7136;&#x4e00;&#x4e2a",{"_index":2227,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#x4e2d;&#x58f0;&#x660e;&#x4e86;&#x4e00;&#x4e2a;&#x6570;&#x7ec4",{"_index":3210,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x51fd;&#x6570;&#x4e2d;&#x5c31;&#x662f;&#x8fd9;&#x4e48;&#x505a;&#x7684;&#xff09;&#x3002",{"_index":8217,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x4e2d;&#x6700;&#x540e;&#x7684;&#x90a3;&#x4e24;&#x884c;&#x4ee3;&#x7801;&#x4e86;&#x5417;&#xff1f;&#x91cd;&#x590d;&#x7684;&#x4e24;&#x4e2a;&#x63a5;&#x6536;&#x8868;&#x8fbe;&#x5f0f",{"_index":8068,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x51fd;&#x6570;&#x4e2d;&#x7684;&#x4ee3;&#x7801;&#x62ff;&#x5230;&#x8fd9;&#x4e2a;&#x7ed3;&#x679c;&#x4e4b;&#x540e;&#x6253;&#x5370;&#x4e86;&#x5b83;&#xff08;&#x5373",{"_index":3213,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x51fd;&#x6570;&#x4e2d;&#x8c03;&#x7528",{"_index":4460,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x51fd;&#x6570;&#x4e2d;&#x8c03;&#x7528;&#x7684",{"_index":6353,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x4e2d;&#x8fdb;&#x884c;&#x7684;&#xff0c;&#x8fd9;&#x4e5f;&#x5c31;&#x662f;&#x4e3a;&#x4ec0;&#x4e48;&#x91c7;&#x7528",{"_index":4476,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x51fd;&#x6570;&#x4e2d;&#xff0c;&#x57fa;&#x4e8e;&#x8c03;&#x7528;&#x8868;&#x8fbe;&#x5f0f",{"_index":8252,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x4e2d;&#xff0c;&#x901a;&#x8fc7;&#x8c03;&#x7528;&#x8be5;&#x51fd;&#x6570;&#xff0c;&#x83b7;&#x5f97;&#x4e86;&#x4e00;&#x4e2a;&#x884d;&#x751f;&#x81ea;&#x4e0a;&#x4e0b;&#x6587;&#x6839;&#x8282;&#x70b9;&#x7684",{"_index":8232,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x4ee5;&#x53ca;&#x6539;&#x9020;&#x540e;&#x7684",{"_index":6382,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x4f1a;&#x4e0d;&#x65ad;&#x5730;&#x83b7;&#x53d6;&#x4e00;&#x4e2a;&#x540d;&#x53eb",{"_index":6360,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x4f1a;&#x600e;&#x4e48;&#x6837;&#x5462;&#xff1f",{"_index":728,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x4f1a;&#x68c0;&#x67e5",{"_index":526,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x51fd;&#x6570;&#x4f1a;&#x81ea;&#x5df1;&#x53bb;&#x5bfb;&#x627e;&#x5b83;&#x3002;&#x6b64;&#x65f6;&#x7684;&#x6253;&#x5370;&#x5185;&#x5bb9;&#x4f1a;&#x662f",{"_index":1310,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x51fd;&#x6570;&#x4f1a;&#x88ab;&#x591a;&#x4e2a",{"_index":6370,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x6700;&#x591a",{"_index":7674,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x51fd;&#x6570;&#x4f1a;&#x904d;&#x5386",{"_index":5775,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x51fd;&#x6570;&#x4f53",{"_index":1219,"title":{},"body":{"basic/oop.html#方法":{},"basic/function.html#声明函数":{}}}],["x51fd;&#x6570;&#x4f5c;&#x4e3a;&#x503c",{"_index":3150,"title":{"basic/function.html#函数作为值":{}},"body":{}}],["x51fd;&#x6570;&#x4f5c;&#x4e3a;&#x53c2;&#x6570",{"_index":3154,"title":{"basic/function.html#函数作为参数":{}},"body":{}}],["x51fd;&#x6570;&#x5173;&#x95ed",{"_index":2895,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x51fd;&#x6570;&#x5176;&#x5b9e;&#x4e5f;&#x662f;&#x8c03;&#x7528;&#x7684;&#x8be5;&#x51fd;&#x6570;&#xff0c;&#x56e0;&#x4e3a;&#x8be5;&#x51fd;&#x6570;&#x662f;&#x4f7f;&#x7528;&#x7684;&#x4e8c;&#x5206;&#x67e5;&#x627e;&#x6cd5;&#xff0c;&#x6240;&#x4ee5;&#x8981",{"_index":9312,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x51fd;&#x6570;&#x5185;&#x90e8;&#x8c03;&#x7528",{"_index":8092,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x51fd;&#x6570;&#x5219;&#x5c06;&#x7f13;&#x51b2;&#x533a;&#x5c3a;&#x5bf8;&#x7684;&#x51b3;&#x5b9a;&#x6743;&#x629b;&#x7ed9;&#x4e86;&#x4f7f;&#x7528;&#x65b9;&#x3002",{"_index":5405,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{}}}],["x51fd;&#x6570;&#x5219;&#x90fd;&#x53ef;&#x4ee5;&#x88ab;&#x7528;&#x6765;&#x4ea7;&#x751f;&#x4e00;&#x4e2a;&#x4f1a",{"_index":8234,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x521b;&#x5efa",{"_index":1945,"title":{},"body":{"basic/slice.html#长度和容量":{},"concurrent/channel.html#channel":{}}}],["x51fd;&#x6570;&#x521b;&#x5efa;&#x4e00;&#x4e2a",{"_index":8739,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x51fd;&#x6570;&#x521b;&#x5efa;&#x590d;&#x6570;&#x3002",{"_index":3718,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x51fd;&#x6570;&#x521b;&#x5efa;&#x5b83;&#x7684;&#x6307;&#x9488;&#x503c",{"_index":7905,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x51fd;&#x6570;&#x521b;&#x5efa;&#x7684",{"_index":3552,"title":{},"body":{"standards/time.html#定时器":{}}}],["x51fd;&#x6570;&#x521d;&#x59cb;&#x5316;&#x7684",{"_index":5402,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{}}}],["x51fd;&#x6570;&#x521d;&#x59cb;&#x5316;&#xff0c;&#x6216;&#x8005",{"_index":1480,"title":{},"body":{"basic/map.html#map":{}}}],["x51fd;&#x6570;&#x5220;&#x9664",{"_index":1435,"title":{},"body":{"basic/map.html#map":{}}}],["x51fd;&#x6570;&#x53ca",{"_index":3207,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x53ca;&#x5176;&#x53c2;&#x6570;&#x503c;&#x53e6;&#x884c;&#x5b58;&#x50a8;&#x5230;&#x4e00;&#x4e2a;&#x961f;&#x5217;&#x4e2d;&#x3002",{"_index":3201,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x53d1;&#x9001;&#x8bf7;&#x6c42;&#xff0c;&#x5c31;&#x662f;&#x901a;&#x8fc7;&#x7ed1;&#x5b9a;&#x4e00;&#x4e2a;&#x9ed8;&#x8ba4",{"_index":8880,"title":{},"body":{"standards/net/http.html#client":{}}}],["x51fd;&#x6570;&#x53ef;&#x4ee5;&#x4e3a;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x5206;&#x914d;&#x5185;&#x5b58;&#xff0c;&#x4f46;&#x8fd9;&#x662f;&#x4e0d;&#x5b8c;&#x6574;&#x7684;&#x521b;&#x5efa;&#x3002;&#x6bd4;&#x5982",{"_index":237,"title":{},"body":{"index.html#make-和-new":{}}}],["x51fd;&#x6570;&#x53ef;&#x4ee5;&#x521b;&#x5efa;&#x591a;&#x4e2a",{"_index":2479,"title":{},"body":{"standards/log.html#Logger":{}}}],["x51fd;&#x6570;&#x53ef;&#x4ee5;&#x5c06;&#x4efb;&#x610f;&#x6570;&#x91cf;&#x7684;&#x8def;&#x5f84;&#x5143;&#x7d20;&#x653e;&#x5165;&#x4e00;&#x4e2a;&#x5355;&#x4e00;&#x8def;&#x5f84;&#x91cc;&#xff0c;&#x4f1a;&#x6839;&#x636e;&#x9700;&#x8981;&#x6dfb;&#x52a0;&#x8def;&#x5f84;&#x5206;&#x9694;&#x7b26;&#x3002;&#x7ed3;&#x679c;&#x662f;&#x7ecf;&#x8fc7",{"_index":5696,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x51fd;&#x6570;&#x53ef;&#x4ee5;&#x83b7;&#x53d6",{"_index":2959,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x51fd;&#x6570;&#x53ef;&#x4ee5;&#x89c2;&#x5bdf;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x503c;&#xff0c",{"_index":3191,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x540c;&#x6837;&#x9002;&#x7528;&#x4e8e",{"_index":1424,"title":{},"body":{"basic/map.html#map":{}}}],["x51fd;&#x6570;&#x540d",{"_index":3110,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x51fd;&#x6570;&#x548c",{"_index":8178,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x548c;&#x666e;&#x901a;&#x51fd;&#x6570;&#x7c7b;&#x4f3c;&#xff0c;&#x4f46;&#x662f;&#x4e0d;&#x80fd;&#x88ab;&#x8c03;&#x7528;&#x6216;&#x5f15;&#x7528;&#x3002",{"_index":2225,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#x5728;&#x4e00;&#x4e2a;&#x5355;&#x72ec;&#x7684",{"_index":6205,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x5728;&#x4ea7;&#x751f;&#x65b0;&#x7684",{"_index":8267,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x5728;&#x6a21;&#x677f;&#x6807;&#x51c6;&#x5e93;&#x4e2d;&#x88ab;&#x7528;&#x5230;&#x4e86;&#x3002",{"_index":5757,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x51fd;&#x6570;&#x5728;&#x88ab;&#x8c03;&#x7528;&#x540e;&#x4f1a;&#x4ea7;&#x751f;&#x4e24;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x3002;&#x7b2c;&#x4e00;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x5c31;&#x662f;&#x90a3;&#x4e2a;&#x53ef;&#x64a4;&#x9500;&#x7684",{"_index":8255,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x58f0;&#x660e;&#x4f7f;&#x7528",{"_index":2162,"title":{},"body":{"basic/package.html#main":{}}}],["x51fd;&#x6570;&#x5bf9;&#x53c2;&#x6570",{"_index":3216,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x51fd;&#x6570;&#x5bf9;&#x5b83;&#x4eec;&#x8d77;&#x4e0d;&#x5230;&#x4efb;&#x4f55;&#x4f5c;&#x7528;&#x3002",{"_index":7887,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x51fd;&#x6570;&#x5bf9;&#x5b83;&#x8fdb;&#x884c;&#x521d;&#x59cb;&#x5316;&#x65f6;&#xff0c;&#x8be5;&#x53d8;&#x91cf;&#x7684;&#x503c;&#x5c31;&#x4f1a;&#x662f",{"_index":2988,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x51fd;&#x6570;&#x5bf9;&#x6bcf;&#x4e00;&#x4e2a;&#x6587;&#x4ef6",{"_index":5784,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x51fd;&#x6570;&#x5c06",{"_index":6811,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x51fd;&#x6570;&#x5c06;&#x4e00;&#x4e2a;&#x8def;&#x5f84;&#x540d;&#x5b57;&#x7b26;&#x4e32;&#x5206;&#x89e3;&#x6210;&#x76ee;&#x5f55;&#x548c;&#x6587;&#x4ef6;&#x540d;&#x4e24;&#x90e8;&#x5206;&#x3002;&#xff08;&#x4e00;&#x822c;&#x60c5;&#x51b5;&#xff0c;&#x8fd9;&#x4e9b;&#x51fd;&#x6570;&#x4e0",{"_index":5624,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x51fd;&#x6570;&#x5c06;&#x4e0d;&#x4f1a;&#x6df1;&#x5165;&#x8be5;&#x76ee;&#x5f55;&#xff09;&#xff1b;&#x5982;&#x679c;&#x8be5;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x9519;&#x8bef;&#xff0c",{"_index":5803,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x51fd;&#x6570;&#x5c06;&#x5b57;&#x7b26;&#x4e32;&#x6570;&#x7ec4;&#xff08;&#x6216",{"_index":5968,"title":{},"body":{"standards/text/strings.html#JOIN":{}}}],["x51fd;&#x6570;&#x5c31;&#x4f1a;&#x4f7f;&#x7528;&#x5b83;&#x3002",{"_index":6893,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x51fd;&#x6570;&#x5c31;&#x662f",{"_index":6260,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x5c31;&#x662f;&#x547d;&#x4ee4;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x90a3;&#x4e2a",{"_index":658,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#x5e76;&#x4f20;&#x5165;&#x53c2;&#x6570;&#x503c",{"_index":4292,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x5e76;&#x6ca1;&#x6709;&#x8fdb;&#x884c;&#x6570;&#x636e;&#x5e93;&#x8fde;&#x63a5;&#x3002",{"_index":4466,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x51fd;&#x6570;&#x5f88;&#x5c11;&#x4f7f;&#x7528;&#xff0c;&#x641c;&#x7d22;&#x4e86;&#x4e00;&#x904d;&#xff0c;&#x6807;&#x51c6;&#x5e93;&#x6ca1;&#x6709;&#x7528;&#x5230;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x3002;&#x800c",{"_index":5756,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x51fd;&#x6570;&#x5f97;&#x5230;&#x4e00;&#x4e2a;&#x952e;&#x503c;&#x5bf9;&#x5e94;&#x7684;&#x53cd;&#x5c04;&#x7c7b",{"_index":8351,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x51fd;&#x6570;&#x5f97;&#x5230;&#x5b83;&#x7684;&#x76ee;&#x5f55;&#x8def;&#x5f84;&#x548c;&#x6587;&#x4ef6;&#x540d;&#xff1a",{"_index":5680,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x51fd;&#x6570;&#x5f97;&#x5230;&#x7684",{"_index":8263,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x5f97;&#x5230;&#x7684;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x5e76;&#x4e0d;&#x662f;&#x5b9e;&#x65f6;&#x7684;&#xff0c;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x5feb;&#x7167;&#xff0c;&#x662f;&#x5728;&#x6700;&#x8fd1;&#x4e00;&#x6b21;&#x7684;&#x5185;&#x5b58;&#x5783;&#x573e;&#x6536;&#x96c6;&#x5de5;&#x4f5c;&#x5b8c;&#x6210;&#x65f6;&#x4ea7",{"_index":4279,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x6062;&#x590d",{"_index":699,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x624d;&#x662f;&#x6b63;&#x786e;&#x7684;&#x6253;&#x5f00;&#x65b9;&#x5f0f",{"_index":733,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x6253;&#x5370;&#x7684;&#x4e00;&#x5b9a;&#x4f1a;&#x662f;&#x90a3;&#x4e2a;&#x5f53;&#x6b21;&#x8fed;&#x4ee3;&#x7684;&#x5e8f;&#x53f7;&#x3002",{"_index":6354,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x6267;&#x884c;&#x4e4b;&#x524d;&#xff0c;&#x6240;&#x6709;&#x4f9d;&#x8d56;&#x7684;&#x5305;&#x90fd;&#x5df2;&#x7ecf;&#x5b8c;&#x6210;&#x521d;&#x59cb;&#x5316;&#x5de5;&#x4f5c;&#x4e86;&#x3002",{"_index":2223,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#x63a5;&#x53d7;&#x4efb;&#x4f55;&#x503c;&#x4f5c;&#x4e3a;&#x53c2;&#x6570;&#x3002;&#x5f53;&#x67d0;&#x4e9b;&#x4e0d;&#x5e94;&#x8be5;&#x53d1;&#x751f;&#x7684;&#x573a;&#x666f;&#x53d1;&#x751f;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x5c31;&#x5e94;&#x8be5;&#x8c03;&#x7528",{"_index":645,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#x6539;&#x53d8;&#x6700;&#x5927",{"_index":4204,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x51fd;&#x6570;&#x6587;&#x6863;&#x7684;&#x4e00;&#x90e8;&#x5206;&#x3002",{"_index":4147,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x51fd;&#x6570;&#x6587;&#x6863;&#xff1a",{"_index":7049,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#WriteString-函数":{}}}],["x51fd;&#x6570;&#x65f6;&#x672a;&#x53d1;&#x751f",{"_index":730,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x65f6;&#x8981;&#x6ce8;&#x610f;&#xff0c",{"_index":1899,"title":{},"body":{"basic/slice.html#append-和-copy":{}}}],["x51fd;&#x6570;&#x65f6;&#xff0c;&#x4f7f;&#x7528;&#x5360;&#x4f4d;&#x7b26",{"_index":1307,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x51fd;&#x6570;&#x65f6;&#xff0c;&#x628a;&#x67d0;&#x4e2a;&#x503c;&#x4f5c;&#x4e3a;&#x53c2;&#x6570;&#x4f20;&#x7ed9;&#x8be5;&#x51fd;&#x6570;&#x5c31;&#x53ef;&#x4ee5;&#x4e86;&#x3002",{"_index":688,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#x65f6;&#xff0c;&#x662f;&#x4ece;&#x672b;&#x5c3e;&#x5f00;&#x59cb;&#x6dfb;&#x52a0;&#x6570;&#x636e;&#xff0c;&#x6ce8;&#x610f",{"_index":1918,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x51fd;&#x6570;&#x6765;&#x521b;&#x5efa;&#x5207;&#x7247",{"_index":1890,"title":{},"body":{"basic/slice.html#slice":{}}}],["x51fd;&#x6570;&#x6765;&#x521d;&#x59cb;&#x5316;&#xff1a",{"_index":5550,"title":{},"body":{"standards/io/bufio.html#ReadWriter":{}}}],["x51fd;&#x6570;&#x6765;&#x5904;&#x7406;&#x3002",{"_index":5699,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x51fd;&#x6570;&#x6765;&#x7b80;&#x5316;&#x521d;&#x59cb;&#x5316;&#x5de5;&#x4f5c;&#xff0c",{"_index":2224,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#x6765;&#x83b7;&#x53d6;&#x8be5;&#x5b57;&#x6bb5;&#x7684;&#x503c;&#xff0c;&#x5e76;&#x4e14;&#x4e00;&#x65e6",{"_index":8138,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x51fd;&#x6570;&#x6839;&#x636e;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x8def;&#x5f84;&#x5206;&#x9694;&#x7b26;&#x5c06;&#x8def;&#x5f84",{"_index":5681,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x51fd;&#x6570;&#x6ca1;&#x6709;&#x53c2;&#x6570;&#x3002;&#x6bd4;&#x5982;&#xff1a",{"_index":2160,"title":{},"body":{"basic/package.html#main":{}}}],["x51fd;&#x6570;&#x7167;&#x5e38;&#x6267;&#x884c;&#x5904;&#x7406;&#x4e0b;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#x3002",{"_index":5807,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x51fd;&#x6570;&#x751f",{"_index":713,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x7528;&#x4e8e;&#x4ea7;&#x751f;&#x4e00;&#x4e2a;&#x53ef;&#x64a4;&#x9500;&#x7684",{"_index":8230,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x7528;&#x4e8e;&#x5224;&#x65ad",{"_index":3489,"title":{},"body":{"standards/time.html#Time":{}}}],["x51fd;&#x6570;&#x7684",{"_index":5789,"title":{},"body":{"standards/os/filepath.html#遍历目录":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x7684;&#x4e0d;&#x540c;&#x4e4b;&#x5904;&#x662f;&#xff1a;&#x5bf9",{"_index":5704,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x51fd;&#x6570;&#x7684;&#x53c2;&#x6570",{"_index":6349,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x7684;&#x53c2;&#x6570;&#xff0c;&#x7b2c;&#x4e00;&#x4e2a;&#x662f;&#x9a71;&#x52a8;&#x540d;&#xff0c;&#x4e3a;&#x4e86;&#x907f;&#x514d;&#x6df7;&#x6dc6;&#xff0c;&#x4e00;&#x822c;&#x548c;&#x9a71;&#x52a8;&#x5305;&#x540d;&#x4e00;&#x81f4;&#xff0c;&#x5728;&#x9a71;&#x52a8;&#x5b9e;&#x73b0;&#x4e2d;&#xff0c;&#x4f1a;&#x6709;&#x7c7b;&#x4f3c;&#x8fd9;&#x6837;&#x7684;&#x4ee3;&#x7801;&#xff1a",{"_index":4473,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x51fd;&#x6570;&#x7684;&#x552f;&#x4e00;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x662f;&#x7a7a;&#x63a5;&#x53e3",{"_index":689,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#x7684;&#x5b9e;&#x73b0;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x8c03;&#x7528",{"_index":7011,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["x51fd;&#x6570;&#x7684;&#x5e8f;&#x53f7;&#x3002",{"_index":6387,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x7684;&#x5f00;&#x59cb;&#x5904;&#x8bbe;&#x5b9a;&#x4e00;&#x6b21;&#x3002",{"_index":4274,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x4f1a;&#x4e2d;&#x6b62;&#xff1b;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x4f8b;&#x5916;&#xff0c;&#x5982;&#x679c",{"_index":5804,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x4f1a;&#x4ee5;&#x600e;&#x6837;&#x7684;&#x65b9;&#x5f0f;&#x7ed3;&#x675f;&#xff0c",{"_index":8151,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x65f6;&#x95f4;&#x603b;&#x662f;&#x4f1a;&#x660e;&#x663e;&#x6ede;&#x540e;&#x4e8e;&#x5b83;&#x6240;&#x5c5e;&#x7684",{"_index":6285,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#xff0c;&#x5b83;&#x4f1a;&#x7acb;&#x523b;&#x53bb;&#x6267;&#x884c;&#x540e;&#x8fb9;&#x7684;&#x8bed;&#x53e5",{"_index":6294,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x7684;&#x65f6;&#x5019;&#x4f20;&#x5165;&#x7684;&#x662f;&#x4ec0;&#x4e48;&#x6837;&#x7684;&#x53c2;&#x6570;&#x503c;&#x4e86;&#x3002",{"_index":4317,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x503c;&#x3002;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x533f;&#x540d;&#x51fd;&#x6570;&#xff0c;&#x5176;&#x4e2d;&#x53ea;&#x5305;&#x542b;&#x4e86;&#x4e00;&#x6761",{"_index":8185,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x8fd4;&#x56de;&#x503c;&#x7528;&#x6765;&#x4f20;&#x9012;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x3002;&#x5982;&#x679c;&#x5bfc;&#x81f4;&#x5931;&#x8d25;&#x7684;&#x539f;&#x56e0;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#xff0c;&#x8fd4;&#x56de;&#x503c;&#x53ef;&#x4ee5;&#x662f;&#x4e00;&#x4e2a;&#x5e03;&#x5c14;&#x503c;&#xff0c",{"_index":3168,"title":{},"body":{"basic/function.html#错误":{}}}],["x51fd;&#x6570;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#xff0c;&#x4e3a;&#x4ec0;&#x4e48;&#x4e0d;&#x662f",{"_index":8007,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x51fd;&#x6570;&#x7684;&#x7b7e;&#x540d;&#x90e8;&#x5206;&#x3002;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x9664;&#x4e86;&#x9700;&#x8981;&#x4e24;&#x4e2a",{"_index":3159,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x51fd;&#x6570;&#x76f8;&#x540c;&#x3002",{"_index":5763,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x51fd;&#x6570;&#x76f8;&#x540c;&#x7684;&#x529f;&#x80fd;&#x3002",{"_index":8176,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x771f;&#x6b63;&#x88ab;&#x6267;&#x884c;&#x7684;&#x65f6;&#x95f4;&#x603b;&#x4f1a;&#x4e0e;&#x5176;&#x6240;&#x5c5e;&#x7684",{"_index":6262,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x77e5;&#x9053;&#x662f;&#x54ea;&#x4e2a;&#x65f6;&#x533a;&#xff09;&#x3002;&#x5728;&#x4e2d;&#x56fd;&#xff0c;&#x5b83;&#x4eec;&#x76f8;&#x5de",{"_index":3504,"title":{},"body":{"standards/time.html#Time":{}}}],["x51fd;&#x6570;&#x7b7e;&#x540d;&#x548c;&#x4f5c;&#x7528;&#x57df;&#x7684;&#x539f;&#x56e0;&#xff0c;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x53ea;&#x80fd;&#x662f",{"_index":9296,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x51fd;&#x6570;&#x7c7b;&#x578b;&#x3001;&#x5b57;&#x5178;&#x7c7b;&#x578b;&#x548c;&#x5207;&#x7247;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x5e76;&#x4e0d;&#x652f;&#x6301;&#x5224;&#x7b49;&#x64cd;&#x4f5c;&#xff0c;&#x6240;&#x4ee5;&#x5b57;&#x5178;&#x7684;&#x952e;&#x7c7b;&#x578b;&#x4e0d;&#x80fd;&#x662f;&#x8fd9;&#x4e9b;&#x7c7b;&#x578b;&#x3002",{"_index":1448,"title":{},"body":{"basic/map.html#map":{}}}],["x51fd;&#x6570;&#x7c7b;&#x578b;&#x503c;&#x3002;&#x8c03;&#x7528;&#x65f6",{"_index":5786,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x51fd;&#x6570;&#x7c7b;&#x578b;&#x53d8;&#x91cf;&#xff09;&#x3002",{"_index":8978,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x51fd;&#x6570;&#x83b7;&#x53d6;&#x6587;&#x4ef6;&#x5168;&#x90e8;&#x5185;&#x5bb9;&#x3002;&#x5176;&#x5b9e;&#xff0c;&#x8ddf;&#x8e2a;&#x4e00;&#x4e0b",{"_index":6898,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x51fd;&#x6570;&#x88ab;&#x6267;&#x884c;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x4e0d;&#x4f1a;&#x5f71;&#x54cd;&#x5176;&#x4ed6;&#x5e76;&#x53d1;&#x4efb;&#x52a1;&#x3002",{"_index":6396,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x88ab;&#x770b;&#x4f5c;&#x7b2c;&#x4e00;&#x7c7b;&#x503c;&#xff1a;&#x51fd;&#x6570;&#x50cf;&#x5176;&#x4ed6;&#x503c;&#x4e00;&#x6837;&#xff0c;&#x62e5;&#x6709;&#x7c7b;&#x578b;&#xff0c;&#x53ef;&#x4ee5;&#x88ab;&#x8d4b;&#x503c;&#x7ed9;&#x5176;&#x4ed6;&#x53d8;&#x91cf;&#xff0c;&#x4f20;&#x9012;&#x7ed9;&#x51fd;&#x6570;&#xff0c;&#x4ece;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x3002",{"_index":3151,"title":{},"body":{"basic/function.html#函数作为值":{}}}],["x51fd;&#x6570;&#x88ab;&#x8c03;&#x7528;&#xff0c;&#x9488;&#x5bf9;&#x8be5;&#x901a;&#x9053;&#x7684;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x5c31;&#x4f1a;&#x9a6c;&#x4e0a;&#x7ed3;&#x675f;&#xff0c;&#x6240;&#x4ee5;&#xff0c;&#x8fd9;&#x6837;&#x505a;&#x5c31;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x201c;&#x7b49;&#x5f85;&#x6240;&#x6709;&#x7684",{"_index":8201,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x8bbe;&#x5b9a;&#x9650;&#x5236;&#xff0c;&#x5176;&#x5927;&#x5c0f;&#x9ed8;&#x8ba4;&#x9650;&#x5236;&#x4e3a;&#x5f00;&#x5934",{"_index":8798,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528",{"_index":709,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x4e4b;&#x540e;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x6839;&#x672c;&#x5c31;&#x6ca1;&#x6709;&#x6267;&#x884c;&#x7684;&#x673a;&#x4f1a",{"_index":725,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x5e76;&#x4e0d;&#x4f1a;&#x8d77;&#x5230;&#x4efb;&#x4f55;&#x4f5c;&#x7528;&#xff0c;&#x751a;&#x81f3;&#x90fd;&#x6ca1;&#x6709;&#x673a;&#x4f1a;&#x6267;&#x884c;&#x3002;&#x56e0;&#x4e3a",{"_index":722,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x7684;&#x6267;&#x884c;&#x987a;&#x5e8f;&#x4e0e;&#x5b83;&#x4eec;&#x5206;&#x522b;&#x6240;&#x5c5e;&#x7684",{"_index":3197,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x7684;&#x6267;&#x884c;&#x987a;&#x5e8f;&#x662f;&#x600e;&#x6837;&#x7684",{"_index":3195,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x7684;&#x65f6;&#x5019;&#xff0c;go",{"_index":3205,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x90fd;&#x4f1a;&#x5728;&#x5b83;&#x5373;&#x5c06;&#x7ed3;&#x675f;&#x6267;&#x884c;&#x7684;&#x90a3;&#x4e00;&#x523b;&#x6267;&#x884c;&#x3002;&#x5373;&#x4f7f;&#x5bfc;&#x81f4;&#x5b83;&#x6267;&#x884c;&#x7ed3;&#x675f;&#x7684;&#x539f;&#x56e0;&#x662f;&#x4e00",{"_index":735,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x8fd4;&#x56de",{"_index":5651,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x51fd;&#x6570;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x76f8;&#x5bf9;&#x8def;&#x5f84;&#xff0c;&#x8fd4;&#x56de;&#x503c;&#x662f",{"_index":5670,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x51fd;&#x6570;&#x8fd4;&#x56de;&#x6240;&#x6709;&#x5339;&#x914d;&#x4e86",{"_index":5758,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x51fd;&#x6570;&#x8fd4;&#x56de;&#x65f6;&#xff0c;&#x6240;&#x6709",{"_index":6210,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x8fd4;&#x56de;&#x7684;&#x662f;&#x6307;&#x5411;&#x201c;&#x539f;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x201d;&#x7684;&#x65b0;&#x5207;&#x7247;&#xff0c;&#x800c;&#x5728;&#x9700;&#x8981;&#x6269;&#x5bb9;&#x65f6;&#xff0c",{"_index":1940,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x51fd;&#x6570;&#x8fd4;&#x56de;&#x7684;&#x662f;&#x6307;&#x5411;&#x201c;&#x65b0;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x201d;&#x7684;&#x65b0;&#x5207;&#x7247",{"_index":1941,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x51fd;&#x6570;&#x8fd4;&#x56de;&#x76ee;&#x5f55;&#x4e2d;&#x5269;&#x4f59;&#x6240;&#x6709;&#x6587;&#x4ef6;&#x5bf9;&#x8c61;&#x7684;&#x540d;&#x5b57;&#x6784;&#x6210;&#x7684;&#x5207;&#x7247;&#x3002;&#x6b64;&#x65f6;&#xff0c;&#x5982;&#x679c",{"_index":7680,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x51fd;&#x6570;&#x8fd4;&#x56de;&#x8def;&#x5f84;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x3002;&#x5728;&#x63d0;&#x53d6;&#x5143;&#x7d20;&#x524d;&#x4f1a;&#x53bb;&#x6389;&#x672b;&#x5c3e;&#x7684;&#x659c;&#x6760;&#x3002;&#x5982;&#x679c;&#x8def;&#x5f84;&#x662f",{"_index":5637,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x51fd;&#x6570;&#x8fd8;&#x53ef;&#x4ee5;&#x4fee;&#x6539;&#x51fd;&#x6570;&#x7684;&#x8fd4;&#x56de;&#x503c;&#xff1a",{"_index":3192,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x8fdb;&#x884c;&#x5783;&#x573e;&#x56de;&#x6536",{"_index":533,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x51fd;&#x6570;&#x8fdb;&#x884c;&#x6392;&#x5e8f",{"_index":9223,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x51fd;&#x6570;&#x8fdb;&#x884c;&#x89e6;&#x53d1;&#x6761;&#x4ef6;&#x68c0;&#x6d4b",{"_index":532,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x51fd;&#x6570;&#x9000;&#x51fa;&#x6216;&#x8005;&#x76f4;&#x63a5;&#x7ec8;&#x6b62;&#x7a0b;&#x5e8f;&#x4e4b;&#x5916;&#xff0c;&#x6ca1;&#x6709;&#x5176;&#x5b83",{"_index":6213,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x901a;&#x8fc7;&#x5355;&#x7eaf;&#x7684;&#x8bcd;&#x6cd5;&#x64cd;&#x4f5c;&#x8fd4;&#x56de;&#x548c",{"_index":5708,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x51fd;&#x6570;&#x90fd;&#x6267",{"_index":8202,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x90fd;&#x6267;&#x884c;&#x5b8c;&#x6bd5;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x7acb;&#x5373;&#x901a;&#x77e5;&#x5206;&#x53d1;&#x5b50;&#x4efb;&#x52a1",{"_index":8194,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#xff08;&#x522b;&#x5fd8;&#x4e86",{"_index":9042,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x51fd;&#x6570;&#xff08;&#x5982;&#x679c;&#x5b58;&#x5728;&#x7684;&#x8bdd;&#xff09;&#xff0c;&#x6700;&#x540e",{"_index":2242,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#xff08;&#x5982;&#x679c;&#x6709;&#x7684;&#x8bdd;&#xff09;&#xff0c;&#x4f9d;&#x6b21;&#x7c7b;&#x63a8;&#x3002;&#x7b49;&#x6240;&#x6709",{"_index":2238,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#xff08;&#x6216;&#x8005;&#x8bf4;&#x8be5;&#x51fd;&#x6570;&#x4e2d;&#x7684;&#x90a3;&#x4e9b;&#x4ee3;&#x7801;&#xff09;&#xff0c;&#x7136;&#x540e;&#x518d;&#x628a;&#x8fd9",{"_index":6279,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#xff0c",{"_index":2354,"title":{},"body":{"basic/interface.html#接口":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#x8fd9;&#x91cc;&#x7684",{"_index":659,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#xff0c;&#x4f46;&#x662f",{"_index":2091,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x51fd;&#x6570;&#xff0c;&#x4f46;&#x8fd9;&#x65e0;&#x8bba;&#x662f;&#x5bf9;&#x4e8e;&#x53ef;&#x8bfb;&#x6027;&#x8fd8;&#x662f;&#x4ee5;&#x540e;&#x7684;&#x53ef;&#x7ef4;&#x62a4;&#x6027;&#x6765;&#x8bf4;&#xff0c",{"_index":2229,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#xff0c;&#x518d;&#x8c03;&#x7528",{"_index":727,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#xff0c;&#x5373;&#x53ef;&#x5bf9;&#x963b;&#x585e;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x91c7;&#x6837;&#x9891;&#x7387;&#x8fdb;&#x884c;&#x8bbe;&#x5b9a;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x6709;&#x4e00;&#x4e2a;&#x540d;&#x53eb",{"_index":4285,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#xff0c;&#x56e0;&#x4e3a",{"_index":3590,"title":{},"body":{"standards/time.html#Ticker":{}}}],["x51fd;&#x6570;&#xff0c;&#x5b83;&#x4f1a;&#x5904;&#x7406;&#x5b57;&#x7b26;&#x4e32;&#x683c;&#x5f0f;&#x5316;&#x3002",{"_index":2350,"title":{},"body":{"basic/interface.html#接口":{}}}],["x51fd;&#x6570;&#xff0c;&#x5b83;&#x4f1a;&#x6e05;&#x9664;&#x6240;&#x6709;&#x7684",{"_index":8324,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x51fd;&#x6570;&#xff0c;&#x5c31;&#x6ca1;&#x6709;&#x518d;&#x4f7f;&#x7528;&#x901a;&#x9053;&#x3002",{"_index":6392,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#xff0c;&#x5e76;&#x5f97;&#x5230;&#x4e86;&#x4e00;&#x4e2a;&#x53ef;&#x64a4;&#x9500;&#x7684",{"_index":8179,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#xff0c;&#x5e76;&#x8bd5;&#x56fe;&#x9488;&#x5bf9;&#x8be5;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x7684;&#x901a;&#x9053;&#xff0c;&#x8fdb;&#x884c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x3002",{"_index":8200,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#xff0c;&#x5f97;&#x5230;&#x786e;&#x5207;&#x7684;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#xff1b;&#x518d;&#x8c03;&#x7528",{"_index":2353,"title":{},"body":{"basic/interface.html#接口":{}}}],["x51fd;&#x6570;&#xff0c;&#x6211;&#x4eec;&#x5c31;&#x53ef;&#x4ee5;&#x83b7;&#x53d6;&#x5230",{"_index":8215,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#xff0c;&#x6211;&#x8981;&#x505a;&#x7684;&#x662f;&#xff0c;&#x8ba9",{"_index":6384,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#xff0c;&#x6709;&#x5173;&#x683c;&#x5f0f;&#x5316;&#x8f93;&#x5165;&#x8f93;&#x51fa;&#x7684;&#x65b9;&#x6cd5;&#x6709;&#x4e24;&#x5927;&#x7c7b;&#xff1a",{"_index":4637,"title":{},"body":{"standards/io/fmt.html#fmt-包":{}}}],["x51fd;&#x6570;&#xff0c;&#x7528;&#x4e8e;&#x904d;&#x5386;&#x76ee;&#x5f55;&#x6811;&#x3002",{"_index":5774,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x51fd;&#x6570;&#xff0c;&#x800c;&#x4e0d;&#x7528;&#x63d0;&#x4f9b;&#x4e00;&#x4e2a;&#x7279;&#x5b9a;&#x7684",{"_index":9298,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x51fd;&#x6570;&#xff0c;&#x800c;&#x5728;&#x505c;&#x6b62;&#x91c7;&#x6837;&#x7684;&#x65f6;&#x5019;&#x5219;&#x9700;&#x8981;&#x8c03;&#x7528;&#x8be5;&#x5305;&#x4e2d;&#x7684",{"_index":4260,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#xff0c;&#x8bb0;&#x5f55;&#x4e86;&#x8fdb;&#x5165;&#x51fd;&#x6570;&#x7684;&#x65f6;&#x95f4;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x503c;&#xff0c;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x503c;&#x4f1a;&#x5ef6;&#x8fdf;&#x6267;&#x884c",{"_index":3184,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#xff0c;&#x8fd9;&#x4e2a;&#x662f;&#x7a0b;&#x5e8f;&#x7684;&#x5165;&#x53e3;&#x51fd;&#x6570;&#xff0c;&#x5e76;&#x4e14",{"_index":2159,"title":{},"body":{"basic/package.html#main":{}}}],["x51fd;&#x6570;&#xff0c;&#x90a3;&#x4e48;&#x5b83;&#x5c31;&#x662f;&#x547d;&#x4ee4;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x3002",{"_index":189,"title":{},"body":{"index.html#三种文件":{}}}],["x51fd;&#x6570;&#xff1a",{"_index":7651,"title":{},"body":{"standards/os/os.html#目录与链接":{},"standards/data/sort.html#Reverse":{}}}],["x51fd;&#x6570;(&#x4e00;&#x822c;&#x79f0;&#x4e3a;&#x76d1;&#x63a7;&#x7ebf;&#x7a0b;)&#x3002;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x4f1a;&#x5468;&#x671f;&#x6027;&#x5730;&#x505a",{"_index":6548,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x51fd;&#x6570;/&#x65b9;&#x6cd5",{"_index":1712,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5206",{"_index":3519,"title":{},"body":{"standards/time.html#Time":{}}}],["x5206;&#x4e00;&#x5757;&#x5bb9;&#x91cf;&#x503c;&#x4e3a;&#x539f;&#x5bb9;&#x91cf;&#x503c",{"_index":1949,"title":{},"body":{"basic/slice.html#长度和容量":{}}}],["x5206;&#x522b;&#x4ee3;&#x8868",{"_index":4925,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x5206;&#x522b;&#x5b9e;&#x73b0;&#x4e86",{"_index":6848,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#其他接口":{}}}],["x5206;&#x5272;&#x5b57;&#x7b26;&#x4e32",{"_index":3777,"title":{"standards/text/strings.html#分割字符串":{}},"body":{"basic/basic_data.html#字符串":{}}}],["x5206;&#x6279;&#x5730;&#x542f;&#x7528;&#x6267;&#x884c;&#x5b50;&#x4efb;&#x52a1;&#x7684",{"_index":8167,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5206;&#x6790;&#xff1a",{"_index":6879,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x5206;&#x7c7b",{"_index":2506,"title":{"standards/log.html#分类":{}},"body":{}}],["x5206;&#x89e3",{"_index":6103,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x5206;&#x914d;&#x5668;&#x6309;&#x9875;&#x6570;&#x533a;&#x5206;&#x5927;&#x5c0f;&#x4e0d;&#x540c;&#x7684",{"_index":401,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x5206;&#x914d;&#x65f6;&#x4f7f;&#x7528;&#x3002;&#x53ea;&#x6709;&#x95f2;&#x7f6e;&#x5185;&#x5b58;&#x8fc7;&#x591a;&#x65f6;&#xff0c;&#x624d;&#x8003;&#x8651;&#x91ca;&#x653e;&#x3002",{"_index":430,"title":{},"body":{"advance/mm.html#回收":{}}}],["x5206;&#x914d;&#x7684;&#x5bf9;&#x8c61;&#x5c0f;&#x4e8e",{"_index":531,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x5206;&#x914d;&#x7ed9;&#x6307;&#x5b9a;&#x7684;&#x8bf7;&#x6c42;&#x3002",{"_index":8961,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5206;&#x914d;&#x7ed9;&#x6587;&#x4ef6;&#x7684;&#x603b;&#x5757;&#x6570;&#xff0c;&#x5757;&#x5927;&#x5c0f;&#x4e3a",{"_index":7524,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5206;&#x949f;&#x4f1a;&#x68c0;&#x67e5;&#x4e00;&#x6b21",{"_index":561,"title":{},"body":{"advance/gc.html#监控":{}}}],["x5206;&#x949f;&#x5219;&#x5f3a;&#x5236;&#x6267;&#x884c;&#x3002",{"_index":563,"title":{},"body":{"advance/gc.html#监控":{}}}],["x5206;&#x949f;&#x6ca1;&#x6709;&#x5783;&#x573e;&#x56de;&#x6536;&#xff0c;&#x5f3a;&#x5236;&#x6267;&#x884c;&#xff1b",{"_index":6563,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5206;&#x949f;&#x7684",{"_index":6560,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5206;&#x9694;&#x4e3a;&#x76ee;&#x5f55;&#x548c;&#x6587;&#x4ef6;&#x540d;&#x4e24;&#x90e8;&#x5206;&#xff08",{"_index":5682,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x5207;&#x6362;&#x540c;&#x4e00;&#x57fa;&#x7840;&#x7c7b;&#x578b;&#x4e0d;&#x540c;&#x7cbe;&#x5ea6;&#x8303;&#x56f4",{"_index":256,"title":{},"body":{"index.html#类型转换":{}}}],["x5207;&#x6362;&#x591a;&#x4e2a;&#x8fdb;&#x7a0b;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x4f1a;&#x82b1;&#x8d39;&#x4e0d;&#x5c11;&#x7684;&#x65f6;&#x95f4;&#xff0c;&#x56e0;&#x4e3a;&#x5207;&#x6362;&#x8fdb;&#x7a0b;&#x9700;&#x8981;&#x5207;&#x6362;&#x5230;&#x5185;&#x6838;&#x6001;&#xff0c;&#x800c;&#x6bcf;&#x6b21;&#x8c03;&#x5ea6;&#x9700;&#x8981;&#x5185;&#x6838;&#x6001;&#x90fd;&#x9700;&#x8981;&#x8bfb;&#x53d6;&#x7528;&#x6237;&#x6001;&#x7684;&#x6570;&#x636e;&#xff0c;&#x8fdb;&#x7a0b",{"_index":6185,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5207;&#x6362;&#x6765;&#x5b9e;&#x73b0;&#x5e76;&#x53d1;&#xff0c;&#x51cf;&#x5c11;&#x4e86;&#x963b;&#x585e;&#x65f6;&#x95f4;&#xff0c;&#x8fd8;&#x907f;&#x514d;&#x4e86;&#x7ebf;&#x7a0b;&#x5207;&#x6362;&#x7684;&#x5f00;&#x9500;&#x3002;&#x4f46;&#x534f;&#x7a0b;&#x8fd0;&#x884c;&#x7684;&#x5e76;&#x53d1;&#x672c;&#x8d28;&#x4e0a;&#x8fd8;&#x662f;&#x4e32;&#x884c;&#x7684;&#x3002;&#x7ebf;&#x7a0b;&#x548c;&#x8fdb;&#x7a0b;&#x7684;&#x64cd;&#x4f5c;&#x662f;&#x7531;&#x7a0b;&#x5e8f;&#x89e6;&#x53d1;&#x7cfb;&#x7edf",{"_index":6192,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5207;&#x7247",{"_index":9270,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5207;&#x7247;&#x3001;&#x5b57;&#x7b26;&#x4e32;&#x3001;&#x5b57;&#x5178;&#x6216;&#x8005;&#x5141;&#x8bb8;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x7684;&#x901a;&#x9053;&#x4e2d;&#x7684;&#x67d0;&#x4e00;&#x4e2a;&#xff0c;&#x5e76;&#x4e14;&#x7ed3;&#x679c;&#x503c;&#x53ea;&#x80fd;&#x6709;&#x4e00;&#x4e2a;&#x3002;&#x8fd9;&#x91cc;&#x7684",{"_index":1104,"title":{},"body":{"basic/flow.html#for":{}}}],["x5207;&#x7247;&#x521d;&#x59cb;&#x5316;&#x8981;&#x6ce8;&#x610f;&#x7684;&#x4e8b;&#x60c5",{"_index":1911,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x5207;&#x7247;&#x6392;&#x5e8f;&#x5185;&#x90e8;&#x5b9e;&#x73b0;&#x53ca;&#x4f7f;&#x7528;&#x65b9;&#x6cd5;&#x4e0",{"_index":9251,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5207;&#x7247;&#x6392;&#x5e8f;&#x66f4;&#x5e38;&#x4f7f;&#x7528",{"_index":9260,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5207;&#x7247;&#x64cd;&#x4f5c",{"_index":1902,"title":{"basic/slice.html#切片操作":{}},"body":{}}],["x5207;&#x7247;&#x7c7b;&#x578b;&#x5c5e;&#x4e8e;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x6211;&#x5728;&#x5916;&#x9762;&#x6539;&#x52a8;&#x8fd9;&#x4e2a;&#x5207;&#x7247;&#x503c;&#xff0c;&#x5c31;&#x7b49;&#x4e8e;&#x4fee;&#x6539;&#x4e86",{"_index":8050,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x5207;&#x7247;&#xff08;slice&#xff09",{"_index":1867,"title":{},"body":{"basic/slice.html#slice":{}}}],["x5217;&#x51fa;&#x5de5;&#x4f5c;&#x533a;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x5305",{"_index":2836,"title":{},"body":{"commands/build.html#工具":{}}}],["x5217;&#x51fa;&#x6307;&#x5b9a;&#x76ee;&#x5f55;&#x4e0b;&#x7684;&#x6240;&#x6709;&#x5305",{"_index":2837,"title":{},"body":{"commands/build.html#工具":{}}}],["x5217;&#x662f",{"_index":4484,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5219",{"_index":2585,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x5219;&#x4ee3;&#x8868;&#x4e86;&#x94fe;&#x8868;&#x4e2d;&#x5143;&#x7d20;&#x7684;&#x7ed3;&#x6784;&#x3002",{"_index":5235,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5219;&#x4f1a;&#x8fd4;&#x56de;&#x7531;&#x67d0;&#x4e2a;&#x6253;&#x5f00;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#xff08;go",{"_index":7500,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5219;&#x6307;&#x5b9a;&#x4e86",{"_index":4644,"title":{},"body":{"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{}}}],["x5219;&#x662f;&#x4ece;&#x5b57;&#x7b26;&#x4e32;&#x8bfb;&#x53d6",{"_index":4653,"title":{},"body":{"standards/io/fmt.html#Scan":{}}}],["x5219;&#x662f;&#x8f93;&#x51fa;&#x5230;&#x5b57;&#x7b26;&#x4e32",{"_index":4646,"title":{},"body":{"standards/io/fmt.html#Print":{}}}],["x5219;&#x66ff;&#x6362;&#x6240",{"_index":5949,"title":{},"body":{"standards/text/strings.html#字符串替换":{}}}],["x5219;&#x8868;&#x793a;&#x65ad;&#x8a00;&#x5931;&#x8d25;&#x3002",{"_index":312,"title":{},"body":{"index.html#类型断言":{}}}],["x5219;&#x8868;&#x793a;&#x65ad;&#x8a00;&#x6210;&#x529f;&#xff0c",{"_index":311,"title":{},"body":{"index.html#类型断言":{}}}],["x521a;&#x624d;&#x8bf4;&#x8fc7;&#xff0c;&#x4e00;&#x65e6;&#x4e3b",{"_index":6322,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x521b;&#x5efa",{"_index":2882,"title":{},"body":{"concurrent/channel.html#channel":{},"standards/data/container.html#堆":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a",{"_index":2345,"title":{},"body":{"basic/interface.html#接口":{},"standards/data/container.html#堆":{},"standards/net/http.html#http":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a;&#x4e34;&#x65f6;&#x76ee;&#x5f55;&#xff0c;&#x7528;&#x4e8e;&#x5b58;&#x653e;&#x7f16;&#x8bd1;&#x8fc7;&#x7a0b;&#x7684;&#x4e34;&#x65f6;&#x6587;&#x4ef6;&#xff1a",{"_index":4830,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":7598,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a;&#x957f;&#x5ea6;&#x4e3a",{"_index":5270,"title":{},"body":{"standards/data/container.html#环":{}}}],["x521b;&#x5efa;&#x4e86;&#x4e00;&#x4e2a",{"_index":9010,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x521b;&#x5efa;&#x4e86;&#x4e00;&#x4e2a;&#x5b8c;&#x5168;&#x7684;&#x526f;&#x672c;&#x3002;&#x8fd9;&#x4e2a;&#x526f;&#x672c;&#x6d89;&#x53ca;&#x7684;&#x6570;&#x636e;&#x5df2;&#x7ecf;&#x4e0e;&#x539f;&#x503c;&#x6beb;&#x4e0d;&#x76f8;&#x5e72;&#x4e86;&#x3002;&#x7136;&#x540e;&#xff0c;&#x6211;&#x518d;&#x628a;&#x8fd9;&#x4e2a;&#x526f;&#x672c;&#x5b58;&#x5165",{"_index":8055,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x521b;&#x5efa;&#x4f18;&#x5148;&#x7ea7;&#x961f;&#x5217;&#xff0c;&#x5e76;&#x521d;&#x59cb;&#x5316",{"_index":5326,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x521b;&#x5efa;&#x5207;&#x7247",{"_index":1904,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x521b;&#x5efa;&#x548c;&#x79fb;&#x9664;&#x76ee;&#x5f55",{"_index":7631,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x521b;&#x5efa;&#x548c;&#x79fb;&#x9664;&#xff08;&#x786c;&#xff09;&#x94fe;&#x63a5",{"_index":7588,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x521b;&#x5efa;&#x8005;&#x80fd;&#x5220;&#x9664",{"_index":7380,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x521b;&#x5efa;&#x8282;&#x70b9;&#x5e76;&#x8bbe;&#x8ba1;&#x4ed6;&#x4eec;&#x7684;&#x4f18;&#x5148;&#x7ea7",{"_index":5322,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x521d;&#x59cb;&#x5316",{"_index":7910,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x521d;&#x59cb;&#x5316;&#x4e00;&#x4e2a;&#x65b0;&#x7684",{"_index":8943,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x521d;&#x59cb;&#x5316;&#x503c;&#x4f9d;&#x6b21;&#x662f",{"_index":1876,"title":{},"body":{"basic/slice.html#slice":{}}}],["x521d;&#x59cb;&#x5316;&#x5168;&#x5c40;&#x7684",{"_index":4461,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x521d;&#x59cb;&#x5316;&#x51fd;&#x6570;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x533f;&#x540d;&#x5bfc;&#x5165;&#x3002",{"_index":2182,"title":{},"body":{"basic/package.html#点操作":{}}}],["x521d;&#x59cb;&#x5316;&#x5207;&#x7247",{"_index":1878,"title":{},"body":{"basic/slice.html#slice":{}}}],["x521d;&#x59cb;&#x5316;&#x5207;&#x7247;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x4e24;&#x79cd;&#x65b9;&#x5f0f;&#xff1a",{"_index":1912,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x521d;&#x59cb;&#x5316;&#x5207;&#x7247;&#xff0c;&#x8981;&#x6ce8;&#x610f;&#x4f7f;&#x7528",{"_index":1917,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x521d;&#x59cb;&#x5316;&#x5207;&#x7247;&#xff1a",{"_index":1873,"title":{},"body":{"basic/slice.html#slice":{}}}],["x521d;&#x59cb;&#x5316;&#x5305",{"_index":2207,"title":{"basic/package.html#初始化包":{}},"body":{}}],["x521d;&#x59cb;&#x5316;&#x5806",{"_index":5328,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x521d;&#x59cb;&#x5316;&#x6570;&#x7ec4;&#x4e2d",{"_index":773,"title":{},"body":{"basic/array.html#数组":{}}}],["x521d;&#x59cb;&#x5316;&#x6570;&#x7ec4;&#xff1a",{"_index":772,"title":{},"body":{"basic/array.html#数组":{}}}],["x521d;&#x59cb;&#x5316;&#x73af;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x9700;&#x8981;&#x5b9a;&#x4e49;&#x597d;&#x73af;&#x7684;&#x5927;&#x5c0f;&#xff0c;&#x7136;&#x540e;&#x5bf9;&#x73af;&#x7684;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x8fdb;&#x884c;&#x8d4b;&#x503c;&#x3002;&#x73af;&#x8fd8;&#x63d0;&#x4f9b;&#x4e00;&#x4e2a",{"_index":5266,"title":{},"body":{"standards/data/container.html#环":{}}}],["x521d;&#x59cb;&#x5316;&#x7684;&#x65f6;&#x5019;&#x8bbe;&#x7f6",{"_index":541,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x521d;&#x59cb;&#x5316;&#x8fd9;&#x4e2a;&#x6c60;&#x7684;&#x65f6;&#x5019;&#x6700;&#x597d;&#x7ed9;&#x5b9a;&#x5b83",{"_index":8298,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x521d;&#x671f;&#x5c31;&#x5df2;&#x7ecf;&#x5b58;&#x5728;&#x4e86;&#x3002;&#x8be5;&#x503c;&#x4e5f;&#x53ef;&#x4ee5;&#x4ec",{"_index":8819,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5220;&#x9664",{"_index":993,"title":{},"body":{"basic/env_config.html#Go-Module":{},"standards/data/container.html#环":{},"standards/os/os.html#目录与链接":{}}}],["x5220;&#x9664;&#x5b57;&#x7b26;&#x4e32;&#x5c3e;&#x90e8;&#x7684;&#x5b57;&#x7b26",{"_index":5963,"title":{},"body":{"standards/text/strings.html#修改字符串":{}}}],["x5220;&#x9664;&#x5b57;&#x7b26;&#x4e32;&#x9996;&#x5c3e;&#x7684;&#x5b57;&#x7b26",{"_index":5961,"title":{},"body":{"standards/text/strings.html#修改字符串":{}}}],["x5220;&#x9664;&#x5b57;&#x7b26;&#x4e32;&#x9996;&#x5c3e;&#x7684;&#x7a7a;&#x683c",{"_index":5964,"title":{},"body":{"standards/text/strings.html#修改字符串":{}}}],["x5220;&#x9664;&#x5b57;&#x7b26;&#x4e32;&#x9996;&#x7684;&#x5b57;&#x7b26",{"_index":5962,"title":{},"body":{"standards/text/strings.html#修改字符串":{}}}],["x5220;&#x9664;&#x67d0;&#x4e2a;&#x5143;&#x7d20",{"_index":5260,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5224;&#x5b9a;&#x5728",{"_index":8876,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x5224;&#x65ad",{"_index":295,"title":{},"body":{"index.html#类型断言":{},"standards/text/unicode.html#utf8-包":{}}}],["x5224;&#x65ad;&#x5b57;&#x7b26;&#x4e32",{"_index":5921,"title":{},"body":{"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#判断是否包含字符串":{}}}],["x5224;&#x65ad;&#x5b57;&#x7b26;&#x4e32;&#x662f;&#x5426;&#x4ee5",{"_index":3772,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5224;&#x65ad;&#x5b57;&#x8282;&#x4e32;&#x6216;&#x8005;&#x5b57;&#x7b26;&#x4e32;&#x7684",{"_index":5140,"title":{},"body":{"standards/text/unicode.html#utf8-包":{}}}],["x5224;&#x65ad;&#x662f;&#x5426;&#x5305;&#x542b;&#x5b57;&#x7b26;&#x4e32",{"_index":5925,"title":{"standards/text/strings.html#判断是否包含字符串":{}},"body":{}}],["x5224;&#x65ad;&#x662f;&#x5426;&#x5df2;&#x7ecf;&#x6392;&#x597d;&#x987a;&#x5e8f",{"_index":9224,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x5224;&#x65ad;&#x662f;&#x5426;&#x662f;&#x8be5;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf;&#xff1a",{"_index":300,"title":{},"body":{"index.html#类型断言":{}}}],["x5224;&#x65ad;&#x662f;&#x5426;&#x7b26;&#x5408",{"_index":5137,"title":{},"body":{"standards/text/unicode.html#utf8-包":{}}}],["x5224;&#x65ad;2&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x5927;&#x5c0f;&#xff0c;&#x76f8;&#x7b49;0&#xff0c;&#x5de6;&#x8fb9;&#x5927;&#x4e8e;&#x53f3;&#x8fb9",{"_index":3775,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5229;&#x7528",{"_index":8820,"title":{},"body":{"standards/net/http.html#Request":{},"standards/data/sort.html#interface-排序与查找":{}}}],["x5229;&#x7528;&#x63d0;&#x4f9b;&#x7684;&#x7528;&#x6237;&#x540d;&#x548c;&#x5bc6;&#x7801;&#x7ed9",{"_index":8764,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5230",{"_index":1883,"title":{},"body":{"basic/slice.html#slice":{},"concurrent/channel.html#channel":{},"standards/time.html#Time":{},"basic/basic_data.html#数值类型":{},"standards/text/unicode.html#utf8-包":{}}}],["x5230;&#x591a;&#x4e2a;&#x659c;&#x6760;&#x540e;&#x8ddf",{"_index":5634,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x5230;&#x591a;&#x4e2a;&#x975e;&#x659c;&#x6760;&#x5b57;&#x7b26;&#x7ec4;&#x6210;&#xff0c;&#x4f1a;&#x8fd4;&#x56d",{"_index":5635,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x5230;&#x5b83;&#x7684;&#x5df2;&#x8bfb;&#x8ba1;&#x6570;&#x3002",{"_index":3894,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5230;&#x670d;&#x52a1;&#x7aef;&#x63a5;&#x6536;&#x5ba2;&#x6237;&#x7aef;&#x8bf7;&#x6c42;&#x5e76;&#x54cd;&#x5e94;&#x3002",{"_index":8969,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5230;&#x671f;&#x65f6;&#xff0c;&#x5f53;&#x65f6;&#x7684;&#x65f6;&#x95f4;&#x4f1a;&#x88ab;&#x53d1;&#x9001;&#x7ed9",{"_index":3549,"title":{},"body":{"standards/time.html#定时器":{}}}],["x5230;&#x7d22;&#x5f15",{"_index":1906,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x5230;&#x8bf7;&#x6c42;&#x7684;&#x5934;&#x57df;&#x3002;bodi",{"_index":8837,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5236;&#x64cd;&#x4f5c;&#x53ef;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":7066,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x524d;&#x7f00;&#x548c;&#x540e;&#x7f00",{"_index":5920,"title":{"standards/text/strings.html#前缀和后缀":{}},"body":{}}],["x524d;&#x8005;&#x53ef;&#x4ee5;&#x7531;&#x4e00;&#x4e2a;&#x4ee5",{"_index":3943,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x524d;&#x9762;&#x4ee5",{"_index":8879,"title":{},"body":{"standards/net/http.html#client":{}}}],["x524d;&#x9762;&#x8bf4;&#x8fc7;&#xff0c",{"_index":4464,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x524d;&#x9762;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":3930,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x524d;&#xff0c;&#x9700;&#x8981;&#x5148;&#x4ee5;&#x53ef;&#x5199;&#x65b9;&#x5f0f;&#x6253;&#x5f00;&#x64cd;&#x4f5c;&#x6587;&#x4ef6;&#xff0c;&#x8be5;&#x65b9;&#x6cd5;&#x4e0d;&#x4f1a;&#x4fee;&#x6539;&#x6587;&#x4ef6;&#x504f;&#x79fb;&#x91cf;&#x3002",{"_index":7490,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["x5254;&#x9664;&#x5f00;&#x59cb;&#x4e8e;&#x6839;&#x8def;&#x5f84;&#x7684",{"_index":5717,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x5254;&#x9664;&#x6bcf;&#x4e00;&#x4e2a",{"_index":5712,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x5254;&#x9664;&#x6bcf;&#x4e00;&#x4e2a;&#x8def;&#x5f84;&#x5185;&#x7684",{"_index":5714,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x5256;&#x6790",{"_index":4132,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x5256;&#x6790;&#x6570;&#x636e;&#x6807;&#x8bc6;&#x4e86;&#x6700;&#x8017",{"_index":4135,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x529f;&#x5730;&#x5f15;&#x7528;&#x4e86;&#x5f53;&#x524d;&#x503c;&#x7684;&#x6240;&#x6709;&#x5b57;&#x6bb5;&#x3002",{"_index":1313,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x7684;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c",{"_index":4163,"title":{"basic/test.html#功能测试的测试结果":{}},"body":{}}],["x52a0",{"_index":1142,"title":{},"body":{"basic/flow.html#for":{}}}],["x52a0;&#x4e0a",{"_index":7359,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x52a0;&#x62ec;&#x53f7;&#xff0c;&#x5426;&#x5219;&#x4f1a;&#x88ab;&#x89e3;&#x6790;&#x4e3a;*(int(&amp;x",{"_index":270,"title":{},"body":{"index.html#类型转换":{}}}],["x52a0;&#x8f7d",{"_index":8189,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x52a0;&#x9501;&#x5c31;&#x6ca1;&#x6709;&#x5fc5;&#x8981;&#x3002;&#x53ef;&#x4ee5;&#x4f7f",{"_index":7830,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x52a1;&#x7684",{"_index":8164,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x52a8;&#x8bcd;&#xff0c",{"_index":8886,"title":{},"body":{"standards/net/http.html#client":{}}}],["x5305",{"_index":2133,"title":{"basic/package.html#包":{},"standards/io/fmt.html#fmt-包":{},"standards/text/unicode.html#unicode-包":{},"standards/text/unicode.html#utf8-包":{},"standards/text/unicode.html#2-5-3-utf16-包":{}},"body":{"concurrent/goroutine.html#goroutine-1":{},"standards/data/sort.html#sort":{}}}],["x5305;&#x3002",{"_index":5615,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x5305;&#x3002;&#x5982",{"_index":2825,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x3002;&#x5982;&#x679c",{"_index":2233,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x4e0b;&#xff1a;&#x6709;&#x7528;&#x6765;&#x8868;&#x793a;&#x5927;&#x6574;&#x6570;&#x7684",{"_index":4362,"title":{},"body":{"standards/data/big.html#big":{}}}],["x5305;&#x4e0e;&#x5b57;&#x7b26;&#x4e32;&#x64cd;&#x4f5c",{"_index":3766,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#x4e0e;&#x5b57;&#x8282;&#x4e32;&#x64cd;&#x4f5c",{"_index":3857,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#x4e2d",{"_index":3555,"title":{},"body":{"standards/time.html#定时器":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5305;&#x4e2d;&#x3002;&#x4ec",{"_index":3477,"title":{},"body":{"standards/time.html#Time":{}}}],["x5305;&#x4e2d;&#x4ee3;&#x8868;&#x7740;&#x4ec0;&#x4e48;&#xff1f;&#x201c;&#x64a4;&#x9500;&#x201d;&#x4e00;&#x4e2a",{"_index":8240,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x4e2d;&#x58f0;&#x660e;&#x4e86;&#x5f88;&#x591a;&#x7528;&#x4e8e;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x7684;&#x51fd;&#x6570;&#x3002;&#x7531;&#x4e8e;&#x6211;&#x9009;&#x7528;&#x7684;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x5bf9;&#x88ab;&#x64cd;&#x4f5c;&#x7684;&#x6570;&#x503c;&#x7684;&#x7c7b;&#x578b;&#x6709;&#x7ea6;&#x675f;&#xff0c;&#x6240",{"_index":6376,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5305;&#x4e2d;&#x5b9a;&#x4e49;&#x4e86;&#x4e24;&#x4e2a;&#x975e;&#x5bfc;&#x51fa;&#x7c7b;&#x578b;&#xff1a",{"_index":7107,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x5305;&#x4e2d;&#x5b9a;&#x4e49;&#x4e86;&#x76f8;&#x5e94;&#x7684;&#x5e38;&#x91cf;&#xff0c;&#x5e94;&#x8be5;&#x4f7f;&#x7528;&#x8fd9;&#x4e9b;&#x5e38;&#x91cf",{"_index":6924,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x5305;&#x4e2d;&#x5b9e;&#x73b0;&#x4e86;&#x51e0;&#x79cd;&#x57fa;&#x672c;&#x7684;&#x6392;&#x5e8f;&#x7b97;&#x6cd5;&#xff1a;&#x63d2;&#x5165;&#x6392;&#x5e8f;&#x3001;&#x5f52;&#x5e76;&#x6392;&#x5e8f;&#x3001;&#x5806;&#x6392;&#x5e8f;&#x548c;&#x5feb;&#x901f;&#x6392;&#x5e8f;&#x3002;&#x4f46;&#x662f;&#x8fd9;&#x56db;&#x79cd;&#x6392;&#x5e8f;&#x65b9;&#x6cd5;&#x662f;&#x4e0d;&#x516c;&#x5f00;&#x7684;&#xff0c;&#x53ea;&#x7528;&#x4e8",{"_index":9192,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x5305;&#x4e2d;&#x6709;&#x4e24;&#x4e2a;&#x516c;&#x5f00;&#x7684;&#x7ed3;&#x6784;&#x2014;&#x2014",{"_index":5233,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5305;&#x4e2d;&#x7684",{"_index":2241,"title":{},"body":{"basic/package.html#初始化包":{},"basic/test.html#性能分析":{},"standards/io/ioutil.html#NopCloser-函数":{},"concurrent/sync_lock.html#原子操作":{}}}],["x5305;&#x4e2d;&#x7684;&#x4e00;&#x4e2a;&#x9884;&#x5b9a;&#x4e49;&#x51fd;&#x6570",{"_index":3533,"title":{},"body":{"standards/time.html#Time":{}}}],["x5305;&#x4e2d;&#x7684;&#x51fd;&#x6570;&#x53ef;&#x4ee5;&#x505a;&#x7684;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x6709;&#xff1a;&#x52a0;&#x6cd5;&#xff08;add&#xff09;&#x3001;&#x6bd4;&#x8f83;&#x5e76;&#x4ea4;&#x6362;&#xff08;compar",{"_index":7996,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5305;&#x4e2d;&#x7684;&#x51fd;&#x6570;&#x548c",{"_index":8172,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x4e2d;&#x7684;&#x5305;&#x7ea7;&#x5e38;&#x91cf;&#x548c;&#x53d8;&#x91cf;&#x8fdb;&#x884c;&#x521d;&#x59cb;&#x5316;&#xff0c;&#x7136;&#x540e;&#x6267;&#x884c",{"_index":2240,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x4e2d;&#x7684;&#x5e38;&#x91cf;&#x5df2;&#x7ecf;&#x88ab;&#x6807;&#x6ce8;&#x4e3a",{"_index":6926,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x5305;&#x4e2d;&#x7684;&#x65b9;&#x6cd5;&#x8fdb;&#x884c;&#x8f6c;&#x6362;&#x3002",{"_index":4969,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x5305;&#x4e2d;&#x7684;&#x7a0b;&#x5e8f;&#x5b9e;&#x4f53;&#xff0c;&#x5b9e;&#x73b0;&#x4e00;&#x5bf9;&#x591a;&#x7684",{"_index":8170,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x4e2d;&#x8fd8;&#x5305;&#x542b;&#x4e86",{"_index":8222,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x4e2d;&#x90fd;&#x5305;&#x542b;&#x4e86",{"_index":2190,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5305;&#x4e2d;&#x9884;&#x5b9a;&#x4e49;&#x597d;&#x7684",{"_index":8211,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x4e2d;&#xff0c",{"_index":7010,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["x5305;&#x4e3a",{"_index":9310,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x5305;&#x4e3b;&#x8981;&#x8d1f;&#x8d23",{"_index":5105,"title":{},"body":{"standards/text/unicode.html#unicode":{}}}],["x5305;&#x4e3b;&#x8981;&#x9762;&#x5411;&#x7684;&#x662f",{"_index":3861,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#x4e4b;&#x6240;&#x4ee5;&#x4e0d;&#x4f7f;&#x7528",{"_index":9281,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5305;&#x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x72ec;&#x7acb;&#x8fd0;&#x884c;&#x7684;&#x7a0b;&#x5e8f;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x4e00;&#x4e2a",{"_index":2156,"title":{},"body":{"basic/package.html#main":{}}}],["x5305;&#x4f1a;&#x6839;&#x636e;&#x5b9e;&#x9645;&#x6570;&#x636e;&#x81ea;&#x52a8;&#x9009;&#x62e9;&#x9ad8;&#x6548;&#x7684;&#x6392;&#x5e8f;&#x7b97;&#x6cd5;&#x3002",{"_index":9196,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x5305;&#x4f1a;&#x81ea;&#x52a8;&#x521b;&#x5efa;&#x548c;&#x91ca;&#x653e;&#x8fde;&#x63a5;&#xff1b;&#x5b83;&#x4e5f;&#x4f1a;&#x7ef4;&#x62a4;&#x4e00;&#x4e2a;&#x95f2;&#x7f6e;&#x8fde;&#x63a5;&#x7684;&#x8fde;&#x63a5;&#x6c60;&#x3002;&#x5982;&#x679c;&#x6570;&#x636e;&#x5e93;&#x5177;&#x6709;&#x5355;&#x8fde;&#x63a5;&#x72b6;&#x6001;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x8be5;&#x72b6;&#x6001;&#x53ea;&#x6709;&#x5728;&#x4e8b;&#x52a1;&#x4e2d;&#x88ab;&#x89c2;&#x5bdf;&#x65f6;&#x624d;&#x53ef;&#x4fe1;&#x3002",{"_index":4443,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5305;&#x5185;&#x4ee5;&#x5927;&#x5199;&#x5b57;&#x6bcd;&#x5f00;&#x5934;&#x5b9a;&#x4e49;&#x7684;&#x540d;&#x5b57;&#xff08;&#x5305;&#x62ec;&#x53d8;&#x91cf;&#xff0c;&#x7c7b;&#x578b;&#xff0c;&#x51fd;&#x6570;&#x7b49;&#x7b49;&#xff09;&#xff0c;&#x4f1a;&#x88ab;&#x5bfc;&#x51fa;&#xff0c;&#x53ef;&#x4ee5;&#x5728;&#x5305;&#x7684;&#x5916;&#x90e8;&#x8bbf;&#x95ee;&#x3002",{"_index":2193,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5305;&#x5185;&#x7684;&#x51fd;&#x6570;&#x5b8c;&#x6210;&#x6392;&#x5e8f;&#xff0c;&#x67e5;&#x627e;&#x7b49;&#x64cd;&#x4f5c;&#x3002;&#x4f46;&#x662f;&#x8fd9;&#x79cd;&#x7528;&#x6cd5;&#x5bf9;&#x4e8e;&#x5176;&#x5b83;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x7684",{"_index":9288,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x5305;&#x521d;&#x59cb;&#x5316;&#x7684;&#x65f6;&#x5019;&#x53ef;&#x4ee5;&#x8ba4;&#x4e3a",{"_index":2219,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x5305;&#x542b;&#x4e86;&#x4e00;&#x7cfb;&#x5217;&#x5b57;&#x7b26;&#x4e32;&#x4e0e;&#x76f8;&#x5173;&#x7684;&#x7c7b;&#x578b;&#x8f6c;&#x6362;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":4885,"title":{},"body":{"standards/text/strconv.html#strconv":{}}}],["x5305;&#x5305;&#x542b;&#x57fa;&#x672c;&#x7684;&#x5b57;&#x7b26;&#x5224;&#x65ad;&#x51fd;&#x6570;&#x3002;utf8",{"_index":5104,"title":{},"body":{"standards/text/unicode.html#unicode":{}}}],["x5305;&#x539f;&#x751f;&#x652f;&#x6301",{"_index":9204,"title":{},"body":{"standards/data/sort.html#sort":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5305;&#x53ea;&#x662f;&#x5b9e;&#x73b0;&#x4e86;&#x4e00;&#x4e2a;&#x63a5;&#x53e3;&#xff1a",{"_index":5300,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x5305;&#x53ea;&#x80fd;&#x88ab;&#x548c",{"_index":2826,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x53ef;&#x4ee5;&#x8bf4;&#x662f;&#x4e00;&#x5bf9;&#x5b6a;&#x751f;&#x5144;&#x5f1f;&#xff0c;&#x5b83;&#x4eec;&#x5728",{"_index":3858,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#x540d;&#x5f88;&#x957f;&#x3002;&#x91cd;&#x547d;&#x540d;&#x4e00;&#x4e2a;&#x7b80;&#x77ed;&#x7684;&#x5305;&#x540d;&#x3002",{"_index":2174,"title":{},"body":{"basic/package.html#点操作":{}}}],["x5305;&#x542b",{"_index":1252,"title":{},"body":{"basic/oop.html#方法":{},"basic/slice.html#切片操作":{}}}],["x5305;&#x542b;&#x4e00;&#x4e2a;&#x503c;&#xff0c;&#x4ee5;&#x53ca;&#x5e94;&#x8be5;&#x8ba9;&#x5b83;&#x5305;&#x542b;&#x4ec0;&#x4e48;&#x6837;&#x7684;&#x503c",{"_index":686,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5305;&#x542b;&#x4e86;&#x4ece;&#x5f53;&#x524d;&#x5230",{"_index":5464,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x5305;&#x542b;&#x4e86;&#x5bf9",{"_index":5110,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x5305;&#x542b;&#x7684;&#x6bcf;&#x4e00;&#x4e2a",{"_index":1124,"title":{},"body":{"basic/flow.html#for":{}}}],["x5305;&#x542b;&#x8def;&#x5f84;&#x7684;&#x5b8c;&#x6574;&#x6587;&#x4ef6;&#x540d",{"_index":2501,"title":{},"body":{"standards/log.html#Logger":{}}}],["x5305;&#x542b;&#x9000;&#x683c;&#x548c;&#x6362;&#x884c",{"_index":3736,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#x547d;&#x540d",{"_index":2205,"title":{"basic/package.html#包命名":{}},"body":{}}],["x5305;&#x547d;&#x540d;&#x5c3d;&#x91cf;&#x6709;&#x63cf;&#x8ff0;&#x6027;&#x4e14;&#x65e0;&#x6b67;&#x4e49;&#xff0c;&#x7b80;&#x77ed;&#xff0c;&#x907f;&#x514d;&#x51b2;&#x7a81;&#x3002",{"_index":2206,"title":{},"body":{"basic/package.html#包命名":{}}}],["x5305;&#x548c",{"_index":2170,"title":{},"body":{"basic/package.html#点操作":{},"basic/package.html#包声明":{},"basic/basic_data.html#字符串":{}}}],["x5305;&#x5728",{"_index":8322,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5305;&#x5728;&#x4efb;&#x4f55;&#x7531;&#x6587;&#x4ef6;&#x7ed3;&#x675f;&#x5f15;&#x8d77;&#x7684;&#x8bfb;&#x53d6;&#x5931;&#x8d25;&#x90fd;&#x8fd4;&#x56de;&#x540c;&#x4e00;&#x4e2a;&#x9519;&#x8bef",{"_index":627,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x5305;&#x58f0;&#x660e",{"_index":2187,"title":{"basic/package.html#包声明":{}},"body":{}}],["x5305;&#x58f0;&#x660e;&#x8bed;&#x53e5;&#xff08;&#x5305;&#x540d;&#xff09;&#x5fc5;&#x987b;&#x5728;&#x6bcf;&#x4e2a;&#x6e90;&#x6587;&#x4ef6;&#x7684;&#x5f00;&#x5934;&#x3002;&#x88ab;&#x5176;&#x5b83;&#x5305;&#x5bfc;&#x5165;&#x65f6;&#x9ed8;&#x8ba4;&#x7684;&#x6807;&#x8bc6;&#x7b26;&#x3002;&#x6bcf;&#x4e2a;&#x5305;&#x90fd;&#x5bf9;&#x5e94;&#x4e00;&#x4e2a;&#x72ec;&#x7acb;&#x7684;&#x540d;&#x5b57;&#x7a7a;&#x95f4;&#xff0c",{"_index":2188,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5305;&#x5b9a;&#x4e49;&#x4e86;&#x4e00;&#x4e2a",{"_index":9252,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5305;&#x5b9a;&#x4e49;&#x4e86;&#x4e24;&#x4e2a",{"_index":4889,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x5305;&#x5b9e;&#x73b0;&#x4e86;&#x683c;&#x5f0f;&#x5316",{"_index":4636,"title":{},"body":{"standards/io/fmt.html#fmt-包":{}}}],["x5305;&#x5b9e;&#x73b0;&#x4e86;&#x7f13;&#x5b58",{"_index":5396,"title":{},"body":{"standards/io/bufio.html#bufio":{}}}],["x5305;&#x5b9e;&#x73b0;&#x7684;&#x5c31;&#x662f;&#x6570;&#x5b66;&#x51fd;&#x6570;&#x8ba1;&#x7b97;&#x3002",{"_index":6073,"title":{},"body":{"standards/data/math.html#math":{}}}],["x5305;&#x5bf9;&#x5b66;&#x751f;&#x6210;&#x7ee9;&#x6392;&#x5e8f;&#x7684;&#x793a;&#x4f8b;&#xff1a",{"_index":9216,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x5305;&#x5bfc;&#x5165;&#x4e86",{"_index":2217,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x5e76;&#x6ca1;&#x6709;&#x89c4;&#x5b9a;&#xff0c;&#x5177;&#x4f53;&#x4e66;&#x5199;&#x65b9;&#x5f0f;&#x53c2;&#x89c1;&#x9a71;&#x52a8;&#x6587;&#x6863;&#x3002",{"_index":4479,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5305;&#x5fc5;&#x7136;&#x5df2;&#x7ecf;&#x521d;&#x59cb;&#x5316;&#x8fc7;&#x4e86;&#x3002;&#x521d;&#x59cb;&#x5316;&#x5de5;&#x4f5c;&#x662f;&#x81ea;&#x4e0b;&#x800c;&#x4e0a;&#x8fdb;&#x884c;&#x7684;&#xff0c",{"_index":2220,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x603b;&#x662f;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x4e00;&#x4e9b",{"_index":8311,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5305;&#x6216;&#x8005",{"_index":2829,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x62ec;&#x4e09;&#x4e2a;&#x51fd;&#x6570;&#xff1a",{"_index":4908,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x5305;&#x6392;&#x5e8f",{"_index":1440,"title":{},"body":{"basic/map.html#map":{}}}],["x5305;&#x63d0;&#x4f9b;&#x4e86",{"_index":3423,"title":{},"body":{"standards/time.html#时区":{},"standards/os/os.html#文件-I-O":{},"standards/data/sort.html#Reverse":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5305;&#x63d0;&#x4f9b;&#x4e86;&#x4e24;&#x79cd;&#x9501;&#x7c7b;&#x578b;&#xff1a",{"_index":7813,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x5305;&#x63d0;&#x4f9b;&#x4e86;&#x4ee5;&#x4e0b;&#x51fd;&#x6570;&#xff1a",{"_index":9293,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x5305;&#x63d0;&#x4f9b;&#x4e86;&#x590d;&#x6570;&#x5904;&#x7406;&#x7684;&#x8bb8;&#x591a;&#x51fd;&#x6570;&#x3002",{"_index":3719,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5305;&#x63d0;&#x4f9b;&#x4e86;&#x5e73;&#x53f0;&#x65e0;&#x5173;&#x7684;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x529f;&#x80fd;&#x63a5;&#x53e3;&#x3002;&#x4f8b;&#x5982",{"_index":7317,"title":{},"body":{"standards/os/os.html#os":{}}}],["x5305;&#x63d0;&#x4f9b;&#x652f;&#x6301;&#xff0c;&#x5e76;&#x4e14;&#x8fd9;&#x7c7b;&#x5305;&#x90fd;&#x6709;&#x7740;&#x76f8;&#x4f3c;&#x7684",{"_index":1543,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5305;&#x63d0;&#x4f9b;&#x7edf;&#x4e00;&#x7684;&#x4f7f;&#x7528;&#x63a5;&#x53e3;&#x3002",{"_index":7320,"title":{},"body":{"standards/os/os.html#os":{}}}],["x5305;&#x6587;&#x6863",{"_index":2800,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x6700;&#x540e;&#x88ab;&#x521d;&#x59cb;&#x5316;&#x3002;&#x4ee5;&#x8fd9;&#x79cd;&#x65b9;&#x5f0f;&#xff0c",{"_index":2221,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x6709;&#x4e24;&#x79cd;&#x5b9a;&#x65f6;&#x5668;&#xff1a",{"_index":3544,"title":{},"body":{"standards/time.html#定时器":{}}}],["x5305;&#x672c;&#x8eab;&#x5b9e;&#x73b0;&#x8fd9;&#x4e24;&#x4e2a;&#x63a5;&#x53e3;&#x7684;&#x7c7b;&#x578b",{"_index":6850,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["x5305;&#x6765;&#x505a;&#x8fd9;&#x4ef6;&#x4e8b;&#x3002;&#x5982;&#xff1a",{"_index":4961,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x5305;&#x6ca1;&#x6709;&#x63d0;&#x4f9b;&#x65e5;&#x5fd7;&#x5206;&#x7ea7;&#x7684;&#x529f;&#x80fd;&#xff0c;&#x9700;&#x8981;&#x81ea;&#x5df1;&#x5b9e;&#x73b0;&#xff1a",{"_index":2517,"title":{},"body":{"standards/log.html#Level":{}}}],["x5305;&#x6d89;&#x53ca;&#x5230;&#x8def;&#x5f84;&#x64cd;&#x4f5c;&#x65f6;&#xff0c;&#x8def;&#x5f84;&#x5206;&#x9694;&#x7b26;&#x4f7f;&#x7528",{"_index":5616,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x5305;&#x6e90;&#x4ee3;&#x7801;&#x5206;&#x6790;&#x53d1;&#x73b0;&#xff0c;&#x8c03;&#x7528",{"_index":8972,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5305;&#x751f;&#x4ea7;&#x7684;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#x653e;&#x5230",{"_index":2767,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x7684",{"_index":6339,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x7684;&#x521d;&#x59cb;&#x5316;&#x9996;&#x5148;&#x662f;&#x89e3;&#x51b3;&#x5305;&#x7ea7;&#x53d8;&#x91cf;&#x7684;&#x4f9d;&#x8d56;&#x987a;&#x5e8f;&#xff0c;&#x7136;&#x540e;&#x6309;&#x7167;&#x5305;&#x7ea7;&#x53d8;&#x91cf;&#x58f0;&#x660e;&#x51fa;&#x73b0;&#x7684;&#x987a;&#x5e8f;&#x4f9d;&#x6b21;&#x521d;&#x59cb;&#x5316;&#xff1a",{"_index":2208,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x7684;&#x5b9e;&#x73b0;&#x4e0d;&#x4f9d;&#x8d56;&#x4e0e;&#x5176;&#x4ed6;&#x4efb;&#x4f55;&#x5305;&#x3002",{"_index":9283,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5305;&#x7684;&#x63a5;&#x53e3;&#x65b9;&#x6cd5;&#xff1a",{"_index":5528,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x5305;&#x7684;&#x7f16;&#x7801;&#x548c;&#x89e3;&#x7801;&#x7684;&#x884c;&#x4e3a;&#xff0c",{"_index":1564,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5305;&#x76ee;&#x5f55;&#x3002",{"_index":2721,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x7c7b;&#x4f3c;&#xff0c;&#x4f46;&#x662f;&#x5bf9;&#x4e8e;&#x4e0d;&#x540c;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x63d0;&#x4f9b;&#x4e86;&#x66f4;&#x597d;&#x7684;&#x652f;&#x6301;&#x3002",{"_index":5611,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x5305;&#x7ed9;&#x6211;&#x4eec;&#x63d0;&#x4f9b;&#x4e86;&#x4e13;&#x95e8;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x529f;&#x80fd;&#x66f4;&#x5f3a;&#x5927;&#xff0c;&#x6027;&#x80fd;&#x4e5f;&#x66f4;&#x597d;&#xff0c;&#x8fd9;&#x5c31;&#x662f",{"_index":3525,"title":{},"body":{"standards/time.html#Time":{}}}],["x5305;&#x80fd;&#x591f;&#x81ea;&#x52a8;&#x7684;&#x6839;&#x636e;&#x4e0d;&#x540c;&#x7684;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x6587;&#x4ef6;&#x8def;&#x5f84;&#x8fdb;&#x884c;&#x8f6c;&#x6362;&#xff0c",{"_index":5612,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x5305;&#x88c5;&#x7684",{"_index":657,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5305;&#x88c5;&#x8f6c;&#x6362;&#x4e00;&#x4e0b;&#x3002;&#x76f8;&#x5173;&#x4ee3;&#x7801;&#x5982;&#x4e0b;&#xff1a",{"_index":4802,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x5305;&#x88f9;&#x6210;&#x4e3a",{"_index":9110,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x5305;&#x8c03;&#x7528;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002",{"_index":4088,"title":{},"body":{"basic/test.html#测试":{}}}],["x5305;&#x8d1f;&#x8d23",{"_index":5107,"title":{},"body":{"standards/text/unicode.html#unicode":{}}}],["x5305;&#x8fd8;&#x5bfc;&#x5165;&#x4e86;&#x5176;&#x5b83;&#x7684;&#x5305;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x4f1a;&#x5728;&#x7f16;&#x8bd1;&#x65f6;&#x5c06;&#x5b83;&#x4eec;&#x4f9d;&#x6b21;&#x5bfc;&#x5165;&#x3002;&#x6709;&#x65f6;&#x4e00;&#x4e2a;&#x5305;&#x4f1a;&#x88ab;&#x591a;&#x4e2a;&#x5305;&#x540c;&#x65f6;&#x5bfc;&#x5165;&#xff0c",{"_index":2234,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x8fd8;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":8005,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5305;&#x90fd;&#x4f1a;&#x6709;&#x4e00;&#x5957;&#x51fd;&#x6570;&#x7ed9;&#x4e88;&#x652f;&#x6301;&#x3002;&#x8fd9;&#x4e9b;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x6709;&#xff1a",{"_index":8001,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5305;&#x91cc",{"_index":2157,"title":{},"body":{"basic/package.html#main":{}}}],["x5305;&#x9762;&#x5bf9;&#x7684;&#x5219;&#x4e3b;&#x8981;&#x662f;&#x5b57;&#x8282;&#x548c;&#x5b57;&#x8282;&#x5207;&#x7247;&#x3002",{"_index":3864,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#x9ed8;&#x8ba4;&#xff08;&#x4e3a;&#x663e;&#x793a;&#x63d0;&#x4f9b;&#x65f6;&#x533a;&#xff09;&#x4f7f;&#x7528",{"_index":3427,"title":{},"body":{"standards/time.html#时区":{}}}],["x5305;&#xff0c",{"_index":2196,"title":{},"body":{"basic/package.html#包声明":{},"basic/package.html#初始化包":{},"commands/build.html#工具":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5305;&#xff0c;&#x4f46;&#x5b83;&#x53ea;&#x4f1a;&#x88ab;&#x5bfc;&#x5165;&#x4e00;&#x6b21;&#xff0c;&#x56e0;&#x4e3a;&#x6ca1;&#x6709;&#x5fc5;&#x8981;&#x5bfc;&#x5165;&#x591a;&#x6b21;&#xff09;&#x3002;&#x5f53;&#x4e00;&#x4e2a;&#x5305;&#x88ab;&#x5bfc;&#x5165;&#x65f6;&#xff0c;&#x5982;&#x679c;&#x8be5;&#x5305;&#x8fd8;&#x5bfc;&#x5165;&#x4e86",{"_index":2236,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#xff0c;&#x53ef;&#x4ee5;&#x4e3a;&#x4e00;&#x4e2a;&#x5305;&#x91cd;&#x547d;&#x540d;&#x6765;&#x89e3;&#x51b3;&#x540d;&#x5b57;&#x51b2;&#x7a81;&#xff1a",{"_index":2171,"title":{},"body":{"basic/package.html#点操作":{}}}],["x5305;&#xff0c;&#x5e76;&#x4e14;&#x5305;&#x542b;&#x4e00;&#x4e2a;&#x65e0;&#x53c2;&#x6570;&#x58f0;&#x660e;&#x4e14;&#x65e0;&#x7ed3;&#x679c;&#x58f0;&#x660e;&#x7684",{"_index":188,"title":{},"body":{"index.html#三种文件":{}}}],["x5305;&#xff0c;&#x5e76;&#x4ee5",{"_index":4105,"title":{},"body":{"basic/test.html#测试函数":{},"basic/test.html#基准测试":{}}}],["x5305;&#xff0c;&#x800c;&#x4e0d;&#x662f",{"_index":5614,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x5305;&#xff0c;&#x88ab;&#x5305;&#x542b;&#x5728",{"_index":4361,"title":{},"body":{"standards/data/big.html#big":{}}}],["x5305;&#xff1a",{"_index":2347,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5305;&#xff1f",{"_index":2832,"title":{},"body":{"commands/build.html#工具":{}}}],["x5339;&#x914d",{"_index":5738,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{},"standards/net/http.html#HTTP-Server":{}}}],["x5339;&#x914d;&#x533a;&#x95f4;[lo",{"_index":5750,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x5339;&#x914d;&#x5b57;&#x7b26",{"_index":5746,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x5339;&#x914d;&#x6709;&#x5173;&#xff0c;&#x4e5f;&#x5373;&#x5f80",{"_index":8982,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5339;&#x914d;&#x8981;&#x6c42",{"_index":5752,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x533a;&#x522b;&#x65e0;&#x975e;&#x662f;&#x62f7;&#x8d1d;&#x76ee;&#x6807;&#x5bf9;&#x8c61;&#x8fd8;&#x662f;&#x62f7;&#x8d1d;&#x6307;&#x9488;&#xff09;&#x5f53;&#x5728;&#x88ab;&#x8c03;&#x7528;&#x51fd;&#x6570;&#x4e2d;&#x4fee;&#x6539;&#x53c2;&#x6570;&#x503c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x8c03;&#x7528;&#x51fd;&#x6570;&#x4e2d;&#x76f8;&#x5e94;&#x5b9e;&#x53c2;&#x4e0d;&#x4f1a;&#x53d1;&#x751f;&#x4efb;&#x4f55;&#x53d8;&#x5316;&#xff0c;&#x56e0;&#x4e3a;&#x6570;&#x503c;&#x53d8;&#x5316;&#x53ea;&#x4f5c;&#x7528;&#x5728",{"_index":3129,"title":{},"body":{"basic/function.html#参数":{}}}],["x533a;&#x522b;&#x793a;&#x4f8b;&#xff1a",{"_index":5727,"title":{},"body":{"standards/os/filepath.html#符号链接指向的路径名":{}}}],["x533f;&#x540d;&#x51fd;&#x6570",{"_index":9297,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x533f;&#x540d;&#x5bfc;&#x5165",{"_index":2177,"title":{},"body":{"basic/package.html#点操作":{}}}],["x533f;&#x540d;&#x5bfc;&#x5165;&#x6709;&#x4ec0;&#x4e48;&#x7528;&#xff1f;&#x6211;&#x4eec;&#x77e5;&#x9053;&#x5982;&#x679c;&#x5bfc;&#x5165;&#x4e00;&#x4e2a;&#x5305;&#x800c;&#x4e0d;&#x4f7f;&#x7528;&#x4f1a;&#x5bfc;&#x81f4;&#x7f16;&#x8bd1;&#x9519;&#x8bef",{"_index":2179,"title":{},"body":{"basic/package.html#点操作":{}}}],["x533f;&#x540d;&#x6210;&#x5458",{"_index":2057,"title":{"basic/struct.html#结构体嵌入-匿名成员":{}},"body":{}}],["x533f;&#x540d;&#x6210;&#x5458;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x662f;&#x547d;&#x540d;&#x7684;&#x7c7b;&#x578b;&#x6216;&#x6307;&#x5411;&#x4e00;&#x4e2a;&#x547d;&#x540d;&#x7684;&#x7c7b;&#x578b;&#x7684;&#x6307;&#x9488;&#x3002",{"_index":2067,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x533f;&#x540d;&#x63a5;&#x53e3;&#x7684;&#x4f18;&#x70b9;&#xff0c",{"_index":2101,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x533f;&#x540d;&#x63a5;&#x53e3;&#x7684;&#x65b9;&#x5f0f;&#x4e0d;&#x4f9d;&#x8d56;&#x5177;&#x4f53;&#x5b9e;&#x73b0;&#xff0c;&#x53ef;&#x4ee5;&#x5bf9;&#x4efb;&#x610f;&#x5b9e;&#x73b0;&#x4e86;&#x8be5;&#x63a5;&#x53e3;&#x7684;&#x7c7b;&#x578b;&#x8fdb;&#x884c;&#x91cd;&#x5199",{"_index":2102,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x533f;&#x540d;&#x63a5;&#x53e3;(anonym",{"_index":2085,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x533f;&#x540d;struct",{"_index":2099,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5341;&#x516d;&#x8fdb;&#x5236;&#x8868;&#x793a;&#xff0c;&#x524d;&#x7f00",{"_index":4703,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5341;&#x516d;&#x8fdb;&#x5236;&#x8868;&#x793a;&#xff0c;&#x5b57;&#x6bcd;&#x5f62;&#x5f0f;&#x4e3a;&#x5927;&#x5199",{"_index":4686,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5341;&#x516d;&#x8fdb;&#x5236;&#x8868;&#x793a;&#xff0c;&#x5b57;&#x6bcd;&#x5f62;&#x5f0f;&#x4e3a;&#x5c0f;&#x5199",{"_index":4685,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5341;&#x516d;&#x8fdb;&#x5236;&#x8868;&#x793a;&#xff0c;&#x7528",{"_index":4735,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5341;&#x516d;&#x8fdb;&#x5236;&#xff0c;&#x5927;&#x5199;&#x5b57;&#x6bcd;&#xff0c;&#x6bcf;&#x5b57;&#x8282;&#x4e24;&#x4e2a;&#x5b57;&#x7b26",{"_index":4701,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5341;&#x516d;&#x8fdb;&#x5236;&#xff0c;&#x5c0f;&#x5199;&#x5b57;&#x6bcd;&#xff0c;&#x6bcf;&#x5b57;&#x8282;&#x4e24;&#x4e2a;&#x5b57;&#x7b26",{"_index":4700,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5341;&#x8fdb;&#x5236;&#x8868;&#x793a",{"_index":4680,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5343;&#x5b57;&#x8282;&#x3002",{"_index":4270,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5347;&#x5e8f",{"_index":9309,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x5347;&#x5e8f;&#x6392;&#x5e8f",{"_index":9316,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x534e;&#x6c0f;&#x6e29;&#x5ea6",{"_index":278,"title":{},"body":{"index.html#自定义类型":{}}}],["x534f;&#x4f5c;&#x6d41;&#x7a0b",{"_index":8171,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x534f;&#x4f5c;&#x6d41;&#x7a0b;&#x3002",{"_index":8072,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x534f;&#x7a0b",{"_index":6189,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x534f;&#x7a0b;&#x540c;&#x65f6;&#x4f7f;&#x7528;&#x3002;&#x65f6;&#x95f4;&#x70b9;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":3450,"title":{},"body":{"standards/time.html#Time":{}}}],["x534f;&#x7a0b;&#x7684;&#x5b9e;&#x4f53;&#xff0c;&#x5305;&#x62ec;&#x4e86;&#x8c03;&#x7528;&#x6808;&#xff0c;&#x91cd;&#x8981;&#x7684;&#x8c03;&#x5ea6;&#x4fe1;&#x606f;&#xff0c;&#x4f8b;&#x5982",{"_index":6235,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x534f;&#x7a0b;&#x7684;&#x5b9e;&#x4f53;&#xff0c;&#x5e76;&#x4e0d;&#x662f;&#x6267;&#x884c;&#x4f53;&#xff0c;&#x4ec5;&#x4fdd;&#x5b58;&#x4e86;&#x5e76;&#x53d1;&#x4efb;&#x52a1;&#x7684;&#x72b6;&#x6001;&#xff0c;&#x5305;&#x62ec;&#x4e86;&#x8c03;&#x7528;&#x6808;&#xff0c;&#x91cd;&#x8981;&#x7684;&#x8c03;&#x5ea6;&#x4fe1;&#x606f;&#xff0c;&#x4f8b;&#x5982",{"_index":6471,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x534f;&#x8bae;&#x662f;&#x5426;&#x81f3;&#x5c11;&#x662f",{"_index":8813,"title":{},"body":{"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["x534f;&#x8bae;&#xff0c;&#x5305;&#x62ec",{"_index":8724,"title":{},"body":{"standards/net/http.html#http":{}}}],["x5355;&#x5411",{"_index":2952,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5355;&#x5b57;&#x7b26;&#x662f;&#x88ab",{"_index":7365,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5355;&#x5f15;&#x53f7;&#x56f4;&#x7ed5;&#x7684;&#x5b57;&#x7b26;&#x5b57;&#x9762;&#x503c;&#xff0c;&#x7531",{"_index":4682,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5355;&#x8bcd",{"_index":4673,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5360",{"_index":4942,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x5360;&#x4f4d;&#x7b26",{"_index":4658,"title":{"standards/io/fmt.html#占位符":{}},"body":{"standards/io/fmt.html#占位符":{}}}],["x5360;&#x7528;&#x7684;&#x8d44;&#x6e90;&#x4e0d;&#x5c0f;&#x4e4b;&#x5916;&#xff0c;&#x64cd",{"_index":6418,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5360;&#x7528;&#x7684;&#x8d44;&#x6e90;&#x975e;&#x5e38;&#x5c0f;(goroutin",{"_index":6429,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5373;&#x4e0d;&#x5fc5;&#x5b9e;&#x73b0",{"_index":9206,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x5373;&#x4e3a",{"_index":1227,"title":{},"body":{"basic/oop.html#方法":{},"standards/net/http.html#HTTP-Server":{}}}],["x5373;&#x4e3a;&#x88ab;&#x6d4b;&#x8bd5;&#x4ee3;&#x7801;&#x5305;&#x7684",{"_index":4099,"title":{},"body":{"basic/test.html#测试":{}}}],["x5373;&#x4f7f",{"_index":5673,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x5373;&#x53ef;&#x8fd0;&#x884c;&#xff0c;&#x8be5",{"_index":6553,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5373;&#x53ef;&#xff0c;&#x5373;&#x5b9e;&#x73b0;&#x6216;&#x8005;&#x88ab",{"_index":9109,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x5373;&#x662f;&#x6ce8;&#x518c;&#x7684;&#x9a71;&#x52a8;&#x540d;&#x3002;&#x7531;&#x4e8e;&#x6ce8;&#x518c;&#x9a71;&#x52a8;&#x662f;&#x5728",{"_index":4475,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5373;&#x6709;&#x591a;&#x5c11;&#x4e2a",{"_index":6247,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5373;&#x8c03;&#x7528",{"_index":6363,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5374;&#x6ca1;&#x6709;&#x5b9e;&#x73b0",{"_index":2092,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x539f;&#x5207;&#x7247;&#x5bb9;&#x91cf;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x539f;&#x5bb9;&#x91cf;&#xff09;&#x7684",{"_index":1927,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x539f;&#x56e0;&#x5f88;&#x7b80;&#x5355;&#xff0c;&#x56e0;&#x4e3a;&#x5bf9;&#x5b83;&#x7684;&#x64cd;&#x4f5c;&#x5fc5;&#x987b;&#x662f;&#x201c;&#x539f;&#x5b50;&#x201d;&#x7684;&#x3002",{"_index":8136,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x539f;&#x56e0;&#x5f88;&#x7b80;&#x5355;&#xff0c;&#x5f53;&#x6211;&#x4eec;&#x4ece;&#x4e2d;&#x83b7;&#x53d6;&#x6570;&#x636e;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x9700;&#x8981;&#x6839;&#x636e;&#x7ed9;&#x5b9a;&#x7684;&#x952e;&#x6765;&#x67e5;&#x627e;&#x5bf9;&#x5e94;&#x7684;&#x503c;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8fd9;&#x79cd",{"_index":8273,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x539f;&#x5b50;&#x5730",{"_index":8188,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x539f;&#x5b50;&#x64cd;&#x4f5c",{"_index":7992,"title":{"concurrent/sync_lock.html#原子操作":{}},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x539f;&#x5b50;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x9700;&#x8981;&#x7684;&#x662f;&#x88ab;&#x64cd;&#x4f5c;&#x503c;&#x7684;&#x6307;&#x9488;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x8fd9;&#x4e2a;&#x503c;&#x672c;&#x8eab",{"_index":8010,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x539f;&#x6709;&#x5bb9;&#x91cf",{"_index":3916,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x539f;&#x751f;&#x652f;&#x6301;&#x5e76;&#x53d1",{"_index":6469,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x53bb;&#x5305;&#x88c5;&#x5f53;&#x524d;&#x7684;&#x90a3;&#x4e2a",{"_index":6278,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53bb;&#x6267;&#x884c;)&#xff0c",{"_index":6170,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x53bb;&#x6389;&#x3002",{"_index":5648,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x53bb;&#x6389;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x540e;&#xff0c;&#x4f1a;&#x7b80;&#x5316;&#x8def;&#x5f84;&#x5e76;&#x53bb;&#x6389;&#x672b;&#x5c3e;&#x7684;&#x659c;&#x6760;&#x3002",{"_index":5631,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x53bb;&#x6389;&#x6ce8;&#x91ca;&#xff0c;&#x53ef;&#x4ee5;&#x770b;&#x770b;&#x76f8;&#x5e94;&#x7684;&#x7a7a;&#x95f2;&#x8fde;&#x63a5;&#x662f;&#x4e0d;&#x662f;&#x53d8;&#x5316;&#x4e86",{"_index":4518,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x53bb;&#x9664;&#x5b57;&#x7b26;&#x4e32;2&#x7aef;&#x7a7a;&#x683c",{"_index":3779,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53bb;&#x9664;&#x6389",{"_index":5967,"title":{},"body":{"standards/text/strings.html#修改字符串":{}}}],["x53c2;&#x6570",{"_index":3124,"title":{"basic/function.html#参数":{}},"body":{"basic/test.html#测试":{}}}],["x53c2;&#x6570;&#x3002",{"_index":1919,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x53c2;&#x6570;&#x4e3a;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x65f6;&#xff0c;&#x4f20;&#x8fdb;&#x53bb;&#x7684;&#x5927;&#x90fd;&#x662f;&#x503c;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x53e6;&#x5916;&#x590d;&#x5236;&#x4e86;&#x4e00;&#x4efd;&#x53c2;&#x6570;&#x5230;&#x5f53;&#x524d;&#x7684;&#x51fd;&#x6570;&#x8c03;&#x7528;&#x6808;&#x3002;&#x53c2;&#x6570;&#x4e3a;&#x9ad8;&#x7ea7;&#x7c7b;&#x578b;&#x65f6;&#xff0c;&#x4f20;&#x8fdb;&#x53bb;&#x7684;&#x57fa;&#x672c;&#x90fd;&#x662f;&#x5f15;&#x7528;&#x3002",{"_index":1714,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x53c2;&#x6570;&#x4e3b;&#x8981;&#x7684;&#x53ef;&#x9009;&#x503c;&#x6709;&#x4e24;&#x4e2a;&#xff0c;&#x5373;&#xff1a;0",{"_index":4300,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x53c2;&#x6570;&#x4f1a;&#x5305;&#x542b",{"_index":5787,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x53c2;&#x6570;&#x4f5c;&#x4e3a;&#x524d;&#x7f00;&#xff1b;&#x5c31;&#x662f;&#x8bf4;&#xff0c",{"_index":5788,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x53c2;&#x6570;&#x542b;&#x4e49;&#x7c7b;&#x4f3c;&#x3002",{"_index":4837,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x53c2;&#x6570;&#x548c",{"_index":4836,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x53c2;&#x6570;&#x5c06;&#x5728;&#x6bcf;&#x4e2a;&#x4ee3;&#x7801;&#x5757;&#x63d2;&#x5165;&#x4e00;&#x4e2a;&#x8ba1;&#x6570;&#x5668;&#x800c;&#x4e0d;&#x662f;&#x5e03;&#x5c14;&#x6807;&#x5fd7;&#x91cf;&#x3002;&#x5728;&#x7edf;&#x8ba1;&#x7ed3;&#x679c;&#x4e2d;&#x8bb0;&#x5f55;&#x4e86;&#x6bcf;&#x4e2a;&#x5757;&#x7684;&#x6267;&#x884c;&#x6b21;&#x6570;&#xff0c",{"_index":4121,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["x53c2;&#x6570;&#x5fc5;&#x987b;&#x662f;&#x987a;&#x5e8f;&#x4e32;&#x8054;&#x7684;&#x670d;&#x52a1;&#x7aef;&#x8bc1;&#x4e66;&#x548c",{"_index":8932,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x53c2;&#x6570;&#x6307;&#x5b9a;&#x4e86;&#x65b0;&#x76ee;&#x5f55;&#x7684;&#x6743;&#x9650;&#x3002;&#x5bf9;&#x8be5;&#x4f4d;&#x63a9;&#x7801;&#x503c;&#x7684;&#x6307;&#x5b9a;&#x65b9;&#x5f0f;&#x548c",{"_index":7636,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x53c2;&#x6570;&#x6307;&#x5b9a;&#x4e86;&#x65b0;&#x76ee;&#x5f55;&#x7684;&#x8def;&#x5f84;&#x540d;&#xff0c;&#x53ef;&#x4ee5;&#x662f;&#x76f8;&#x5bf9;&#x8def;&#x5f84;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x662f;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#x3002;&#x5982;&#x679c;&#x5df2;&#x7ecf;&#x5b58;&#x5728;&#xff0c;&#x5219;&#x8c03;&#x7528;&#x5931;&#x8d25;&#x5e76;&#x8fd4;&#x56d",{"_index":7634,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x53c2;&#x6570;&#x6307;&#x5b9a;&#x7684;&#x503c;&#xff1b;go",{"_index":7480,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["x53c2;&#x6570;&#x662f",{"_index":5796,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x53c2;&#x6570;&#x662f;&#x53ef;&#x9009;&#x7684;&#xff0c;&#x6307;&#x5b9a;&#x8be5;&#x56de;&#x590d",{"_index":8861,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x53c2;&#x6570;&#x7528;&#x4e8e;&#x62a5;&#x544a;&#x6d4b;&#x8bd5;&#x5931;&#x8d25;&#x548c;&#x9644;&#x52a0;&#x7684;&#x65e5;&#x5fd7;&#x4fe1;&#x606f;&#x3002",{"_index":4108,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x53c2;&#x6570;&#x7684;&#x503c;&#x662f",{"_index":3563,"title":{},"body":{"standards/time.html#定时器":{}}}],["x53c2;&#x6570;&#x80fd;&#x591f;&#x8868;&#x793a;&#x7684;&#x8303;&#x56f4;&#xff0c;&#x5219;&#x4f1a;&#x8fd4;&#x56d",{"_index":4938,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x53c2;&#x6570;&#x8868;&#x793a;&#x7528;json&#x683c;&#x5f0f;&#x6253;&#x5370;&#x6bcf;&#x4e2a;&#x5305;&#x7684;&#x5143;&#x4fe1;&#x606f",{"_index":2840,"title":{},"body":{"commands/build.html#工具":{}}}],["x53c2;&#x6570;&#x88ab;&#x8c03;&#x7528;&#x65f6;&#x7684",{"_index":5795,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x53c2;&#x6570;&#x8bbe;&#x7f6e;&#xff0c;&#x5f53;&#x67d0;&#x4e2a;&#x6807;&#x8bc6;&#x88ab;&#x8bbe;&#x7f6e;&#xff0c;&#x4f1a;&#x5728;&#x65e5;&#x5fd7;&#x4e2d;&#x8fdb;&#x884c;&#x663e;&#x793a;&#xff0c;log",{"_index":2495,"title":{},"body":{"standards/log.html#Logger":{}}}],["x53c2;&#x6570;&#x9664;&#x4e86;&#x63d0;&#x4f9b;&#x548c",{"_index":4125,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x53c2;&#x6570;&#xff0c;&#x6211;&#x4eec;&#x4e00;&#x822c;&#x53ef;&#x4ee5;&#x6307;&#x5b9a;&#x4e3a;&#xff1a",{"_index":4823,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x53c2;&#x6570;&#xff0c;&#x6307;&#x5b9a;&#x8981;&#x8fd0;&#x884c;&#x7684;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002;&#x8be5;&#x53c2;&#x6570;&#x662f;&#x4e00;&#x4e2a;&#x6b63;&#x5219;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x7528;&#x4e8e;&#x5339;&#x914d;&#x8981;&#x6267;&#x884c;&#x7684;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x7684;&#x540d;&#x5b57;&#xff0c",{"_index":4129,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x53c2;&#x6570;&#xff0c;&#x7edf;&#x8ba1;&#x8986;&#x76d6;&#x7387;&#x6570;&#x636e;&#xff0c;&#x5e76;&#x5c06;&#x7edf;&#x8ba1;&#x65e5;&#x5fd7;&#x6570;&#x636e;&#x5199;&#x5165;&#x6307;&#x5b9a;&#x6587;&#x4ef6;&#xff0c;&#x5982",{"_index":4120,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["x53c2;&#x6570;&#xff1a",{"_index":2481,"title":{},"body":{"standards/log.html#Logger":{},"standards/text/strconv.html#字符串转为整型":{}}}],["x53c8;&#x4e3a;&#x4ec0;&#x4e48;&#x662f;&#x8fd9;&#x4e2a;&#x65f6;&#x95f4;&#x70b9;&#x800c;&#x4e0d;&#x662f;&#x5176;&#x4ed6;&#x65f6;&#x95f4;&#x70b9;&#xff1f",{"_index":3512,"title":{},"body":{"standards/time.html#Time":{}}}],["x53c8;&#x4f1a;&#x53cd;&#x8fc7;&#x6765;&#x8c03;&#x7528",{"_index":1321,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x53c8;&#x662f",{"_index":347,"title":{},"body":{"index.html#编码":{}}}],["x53c8;&#x7531;&#x4e8e;&#xff0c;&#x6bcf;&#x4e2a",{"_index":3963,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53c8;&#x81ea;&#x5b9a;&#x4e49",{"_index":9066,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x53ca",{"_index":7552,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x53cc;&#x5f15;&#x53f7;&#x56f4;&#x7ed5;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x7531",{"_index":4699,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x53cc;&#x5f15;&#x53f7;&#x62ec;&#x8d77;&#x6765;&#x7684;&#x5b57;&#x7b26;&#x4e32",{"_index":4741,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x53cd;&#x4e4b;&#xff0c;&#x5982;&#x679c;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5269;&#x4f59;&#x5bb9;&#x91cf;&#x4e0d;&#x591f;&#x4e86;&#xff0c;&#x90a3;&#x4e48;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#x53ef;&#x80fd;&#x5c31;&#x4f1a;&#x7528;&#x65b0;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x53bb;&#x66ff;&#x4ee3;&#x539f;&#x6709;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff0c;&#x4ece;&#x800c;&#x5b9e;&#x73b0;&#x6269;&#x5bb9;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8fd9;&#x91cc;&#x8fd8;&#x4e00;&#x6b65;&#x4f18;&#x5316;&#x3002",{"_index":3908,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53cd;&#x5c04",{"_index":5026,"title":{"basic/reflect.html#反射":{}},"body":{}}],["x53cd;&#x5c04;&#x673a;&#x5236;&#xff0c;&#x80fd;&#x591f;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x66f4;&#x65b0;&#x53d8;&#x91cf;&#x548c;&#x68c0;&#x67e5;&#x5b83;&#x4eec;&#x7684;&#x503c;&#x3001;&#x8c03;&#x7528;&#x5b83;&#x4eec;&#x7684;&#x65b9;&#x6cd5;&#x548c;&#x5b83;&#x4eec;&#x652f;&#x6301;&#x7684;&#x5185;&#x5728;&#x64cd;&#x4f5c;&#xff0c;&#x800c;&#x4e0d;&#x9700;&#x8981;&#x5728;&#x7f16;&#x8bd1;&#x65f6;&#x5c31;&#x77e5;&#x9053",{"_index":5027,"title":{},"body":{"basic/reflect.html#反射":{}}}],["x53d1;&#x5b89;&#x5168;&#x6027;&#x3002;&#x5728",{"_index":6375,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53d1;&#x73b0;&#x8be5;&#x503c;&#x4e3a",{"_index":8139,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x53d1;&#x751f;&#x5728;&#x8bfb;&#x53d6;&#x4e86;&#x4e00;&#x4e9b;&#x4f46;&#x4e0d;&#x662f;&#x6240;&#x6709;&#x7684;&#x5b57;&#x8282;&#x540e;&#xff0c",{"_index":7091,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x53d1;&#x751f;&#x5728;&#x8bfb;&#x53d6;&#x4e86;&#x5c11;&#x4e8",{"_index":7082,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x53d1;&#x9001;&#x4e00;&#x4e2a;&#x503c",{"_index":2889,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x548c;&#x63a5;&#x6536;&#x4e24;&#x4e2a;&#x64cd;&#x4f5c;&#x4f7f;&#x7528",{"_index":2887,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x64cd;&#x4f5c;&#x4f1a;&#x5411",{"_index":2941,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x64cd;&#x4f5c;&#x548c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x4e2d;&#x5bf9;&#x5143;&#x7d20;&#x503c;&#x7684;&#x5904;&#x7406;&#x90fd;&#x662f;&#x4e0d;&#x53ef;&#x5206;&#x5272;&#x7684;&#x3002;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x8981;&#x4e48;&#x8fd8;&#x6ca1;&#x590d;&#x5236;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x8981;&#x4e48;&#x5df2;&#x7ecf;&#x590d;&#x5236;&#x5b8c;&#x6bd5;&#xff0c;&#x7edd;&#x4e0d;&#x4f1a;&#x51fa;&#x73b0;&#x53ea;&#x590d;&#x5236;&#x4e86;&#x4e00;&#x90e8;&#x5206",{"_index":2966,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x64cd;&#x4f5c;&#x548c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x5728;&#x4ec0;&#x4e48;&#x65f6;&#x5019;&#x53ef;&#x80fd;&#x88ab;&#x957f;&#x65f6;&#x95f4;&#x7684;&#x963b;&#x585",{"_index":2972,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x64cd;&#x4f5c;&#x5728;&#x5b8c;&#x5168;&#x5b8c;&#x6210;&#x4e4b;&#x524d;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#x3002;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x4e5f;&#x662f;&#x5982;&#x6b64;&#x3002",{"_index":2968,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x6570;&#x636e;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x4f1a",{"_index":2928,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x65b0;&#x7684;&#x6570;&#x636e;&#xff0c;&#x6240;&#x4ee5;&#x53ea;&#x6709;&#x5728",{"_index":2902,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x6d88;&#x606f",{"_index":2879,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x8bf7;&#x6c42;&#xff1a",{"_index":8735,"title":{},"body":{"standards/net/http.html#http":{}}}],["x53d6;&#x4f59;&#x8fd0;&#x7b97",{"_index":6126,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x53d6;&#x503c;&#x5982;&#x4f55;&#xff0c;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x503c;&#x7c7b;&#x578b;&#x90fd;&#x662f",{"_index":4980,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x53d6;&#x51fa",{"_index":2892,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d6;&#x5230;&#x5b57;&#x8282;&#xff0c;&#x9519;&#x8bef;&#x5c31;&#x53ea;&#x662f",{"_index":7090,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x53d6;&#x5927;&#x503c",{"_index":6108,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x53d6;&#x5c0f;&#x503c",{"_index":6109,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x53d6;&#x6a21",{"_index":6102,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x53d6;&#x6a21;&#x8fd0;&#x7b97;&#x7b26;&#x7684;&#x7b26;&#x53f7;&#x548c;&#x88ab;&#x53d6;&#x6a21;&#x6570;&#x7684;&#x7b26;&#x53f7;&#x603b;&#x662f;&#x4e00;&#x81f4;&#x7684;&#xff0c;&#x56e0;&#x6b64",{"_index":1792,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x53d8;&#x4e3a",{"_index":8103,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{}}}],["x53d8;&#x4e3a;&#x4e86",{"_index":6379,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53d8;&#x53c2;&#x672c;&#x8d28;&#x4e0a;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x5207;&#x7247;&#xff0c;&#x53ea;&#x80fd;&#x63a5;&#x53d7;&#x4e00;&#x5230;&#x591a;&#x4e2a;&#x540c;&#x7c7b;&#x578b;&#x53c2;&#x6570;&#xff0c;&#x800c;&#x4e14;&#x5fc5;&#x987b;&#x5728;&#x53c2;&#x6570;&#x5217;&#x8868;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a",{"_index":3142,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x53d8;&#x6210;&#x4e86;&#x5c0f;&#x5199;&#x7684",{"_index":1554,"title":{},"body":{"basic/json.html#序列化":{}}}],["x53d8;&#x91cf",{"_index":1699,"title":{"basic/var.html#变量":{}},"body":{"basic/pointer.html#指向指针的指针":{}}}],["x53d8;&#x91cf;&#x3001",{"_index":6381,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53d8;&#x91cf;&#x4e2d;&#x7684;&#x8bfb;&#x9501;&#xff0c",{"_index":7913,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53d8;&#x91cf;&#x4f5c",{"_index":9069,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x53d8;&#x91cf;&#x540d",{"_index":767,"title":{},"body":{"basic/array.html#数组":{},"basic/oop.html#方法":{},"basic/map.html#map":{},"basic/slice.html#slice":{}}}],["x53d8;&#x91cf;&#x540d;&#x5b57",{"_index":2397,"title":{},"body":{"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{}}}],["x53d8;&#x91cf;&#x6210;&#x4e3a;&#x4e00;&#x4e2a;&#x4fe1;&#x53f7;&#xff0c",{"_index":6385,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53d8;&#x91cf;&#x7528;&#x4e8e;&#x83b7;&#x53d6;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x7684;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x5e73;&#x53f0;&#x4e0b",{"_index":4933,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x53d8;&#x91cf;&#x7684",{"_index":7906,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x53d8;&#x91cf;&#x7684;&#x503c;&#x3002",{"_index":8191,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x53d8;&#x91cf;&#x7684;&#x503c;&#x52a0",{"_index":6365,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53d8;&#x91cf;&#x7684;&#x503c;&#x662f;&#x5426;&#x7b49;&#x4e8e",{"_index":7923,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53d8;&#x91cf;&#x7684;&#x503c;&#xff0c;&#x5e76;&#x5224;&#x65ad;&#x5b83;&#x662f;&#x5426;&#x7b49;&#x4e8",{"_index":8190,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x53d8;&#x91cf;&#x7684;&#x542b;&#x4e49;&#x662f;&#x5bf9;&#x5e94;&#x7684;&#x3002",{"_index":7908,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53d8;&#x91cf;&#x7684;&#x5b9a;&#x4e49;&#xff1a",{"_index":6819,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x53d8;&#x91cf;&#x8d4b;&#x503c;&#x5373;&#x53ef;&#x3002",{"_index":4265,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x53d8;&#x91cf;&#xff0c",{"_index":306,"title":{},"body":{"index.html#类型断言":{}}}],["x53d8;&#x91cf;&#xff0c;&#x6bd4;&#x5982",{"_index":1470,"title":{},"body":{"basic/map.html#map":{}}}],["x53e5;&#x67c4;&#x901a;&#x5e38;&#x88ab;&#x591a;&#x4e2a",{"_index":4455,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x53e6;&#x4e00;&#x65b9;&#x9762;&#xff0c;&#x4f60;&#x73b0;&#x5728;&#x662f;&#x53e6;&#x4e00;&#x4e2a",{"_index":7928,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53e6;&#x4e00;&#x65b9;&#x9762;&#xff0c;&#x6211;&#x4eec;&#x5728",{"_index":3794,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53e6;&#x5916;&#xff0c",{"_index":4948,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/os/os.html#文件属性":{}}}],["x53e6;&#x5916;&#xff0c;&#x5728",{"_index":7398,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x53e6;&#x5916;&#xff0c;&#x5982;&#x679c;&#x952e;&#x7684;&#x7c7b;&#x578b;&#x662f;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x7684;&#xff0c;&#x90a3;&#x4e48;&#x952e;&#x503c;&#x7684;&#x5b9e;&#x9645;&#x7c7b;&#x578b;&#x4e5f;&#x4e0d;&#x80fd;&#x662f;&#x4e0a;&#x8ff0;&#x4e09;&#x79cd;&#x7c7b;&#x578b;&#xff0c;&#x5426;&#x5219;&#x5728;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x8fc7;&#x7a0b;&#x4e2d;&#x4f1a;&#x5f15;&#x53d1",{"_index":1449,"title":{},"body":{"basic/map.html#map":{}}}],["x53e6;&#x5916;&#xff0c;&#x5bf9;&#x4e8e;&#x7ba1;&#x9053;&#x7684",{"_index":7045,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x53e6;&#x5916;&#xff0c;&#x7c7b;&#x578b;&#x95f4;&#x7684;&#x7ec4;&#x5408;&#x4e5f;&#x662f;&#x7075;&#x6d3b;&#x7684;&#xff0c;&#x6211;&#x4eec;&#x603b;&#x662f;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x65b9;&#x5f0f;&#x628a;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x7684;&#x5c5e;&#x6027;&#x548c;&#x80fd;&#x529b;&#x201c;&#x5ac1;&#x63a5;&#x201d;&#x7ed9;&#x53e6;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x3002",{"_index":1282,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x53e6;&#x5916;&#xff0c;read",{"_index":5499,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x53ea;&#x4e0d;&#x8fc7;&#xff0c",{"_index":3860,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53ea;&#x4f1a;&#x88ab;&#x4f7f;&#x7528;&#x4e00;&#x6b21;&#xff0c",{"_index":4457,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x53ea;&#x5141;&#x8bb8;&#x8bfb;&#x53d6;&#x4e00;&#x5b9a;&#x957f;&#x5ea6;&#x6570;&#x636",{"_index":7008,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["x53ea;&#x5199;&#x6a21;&#x5f0f;&#x6253;&#x5f00;&#x6587;&#x4ef6",{"_index":7349,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x53ea;&#x5305;&#x542b;&#x7a7a;&#x683c;&#xff0c;&#x5219;&#x8fd4;&#x56de;&#x7a7a;&#x5217;&#x8868",{"_index":5974,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x53ea;&#x53d1;&#x9001;&#x6216;&#x8005;&#x53ea;&#x63a5;&#x6536",{"_index":2955,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53ea;&#x53ef;&#x80fd;&#x662f",{"_index":8129,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x53ea;&#x58f0;&#x660e;&#x4e00;&#x4e2a;&#x6210;&#x5458;&#x5bf9;&#x5e94;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x800c;&#x5b9a;&#x4e49;&#x6210;&#x5458;&#x7684;&#x540d;&#x5b57;&#xff1b;&#x8fd9;&#x7c7b;&#x6210;&#x5458;&#x5c31;&#x53eb;&#x533f;&#x540d;&#x6210;&#x5458",{"_index":2063,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x53ea;&#x5b9e;&#x73b0;&#x4e86",{"_index":7005,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["x53ea;&#x6267;&#x884c;&#x540d;&#x79f0;&#x4e3a;&#x7a7a;&#x7684;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x4e0d;&#x6267;&#x884c;&#x4efb;&#x4f55;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002",{"_index":4183,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x53ea;&#x6307;&#x5b9a;&#x4e00;&#x4e2a;&#xff0c;&#x5269;&#x4e0b;&#x7684;&#x901a;&#x8fc7",{"_index":7357,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x53ea;&#x662f;&#x4e09;&#x4e2a;&#x7279;&#x6b8a;&#x7684;&#x6587;&#x4ef6;&#x7c7b;&#x578b;&#x7684;&#x6807;&#x8bc6;&#xff08;&#x90fd;&#x662f",{"_index":6843,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["x53ea;&#x662f;&#x5185;&#x90e8",{"_index":6992,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x53ea;&#x662f;&#x8c03;&#x6574;&#x5185;&#x6838;&#x4e2d;&#x4e0e;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x76f8;&#x5173;&#x7684;&#x6587;&#x4ef6;&#x504f;&#x79fb;&#x91cf;&#x8bb0;&#x5f55;&#xff0c;&#x5e76;&#x6ca1;&#x6709;&#x8bbf;&#x95ee;&#x4efb;&#x4f55;&#x7269;&#x7406;&#x8bbe;&#x5907;&#x3002",{"_index":7463,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x53ea;&#x662f;&#x903b;&#x8f91;&#x4e0a;&#x5c06;&#x591a",{"_index":7118,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x53ea;&#x6709",{"_index":7379,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x53ea;&#x6709;&#x5728;&#x6761;&#x4ef6;&#x6ee1;&#x8db3;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#x624d;&#x4f1a;&#x8fdb;&#x884c;&#x503c;&#x7684;&#x4ea4;&#x6362",{"_index":8021,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x53ea;&#x6709;&#x5728;&#x6d89;&#x53ca;&#x5230;&#x52a0;&#x9501;&#xff0c",{"_index":6531,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x53ea;&#x6709;&#x5f53;&#x4e00;&#x4e2a;&#x952e;&#x503c;&#x5bf9;&#x5e94;&#x8be5;&#x88ab;&#x5220;&#x9664;&#xff0c;&#x4f46;&#x5374;&#x4ecd;&#x7136;&#x5b58;&#x5728;&#x4e8e;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x624d;&#x4f1a;&#x88ab;&#x7528;&#x6807;&#x8bb0;&#x4e3a;&#x201c;&#x5df2;&#x5220;&#x9664;&#x201d;&#x7684;&#x65b9;&#x5f0f;&#x8fdb;&#x884c;&#x903b;&#x8f91;&#x5220;&#x9664;&#xff0c;&#x800c;&#x4e0d;&#x4f1a;&#x76f4;&#x63a5;&#x88ab;&#x7269;&#x7406;&#x5220;&#x9664;&#x3002",{"_index":8389,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ea;&#x6709;&#x7c7b;&#x578b",{"_index":1236,"title":{},"body":{"basic/oop.html#方法":{}}}],["x53ea;&#x6709;&#x8d44;&#x6e90;&#x975e;&#x5e38;&#x7d27;&#x5f20;&#x7684;&#x73af;&#x5883;&#x6216;&#x8005;&#x670d;&#x52a1;&#x7aef;&#x5728;&#x5173;&#x95ed;&#x8fdb;&#x7a0b;&#x4e2d;&#x65f6;&#xff0c;&#x624d;&#x5e94;&#x8be5;&#x5173;&#x95ed;&#x8be5;&#x529f;&#x80fd;&#x3002",{"_index":8939,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x53ea;&#x6709;&#x8fd9;&#x6837;&#xff0c;go",{"_index":6344,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ea;&#x7ba1;&#x7406;&#x5185;&#x5b58;&#xff0c;&#x4e0d;&#x5173;&#x5fc3;&#x5bf9;&#x8c61;&#x7684;&#x72b6;&#x6001;&#xff0c;&#x5e76;&#x4e14;&#x5b83;&#x4e0d;&#x4f1a;&#x4e3b;&#x52a8;&#x56de;&#x6536;&#x5185;&#x5b58;&#xff0c;&#x9700;&#x8981",{"_index":390,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x53ea;&#x80fd;&#x5199;&#x5165;&#xff0c;&#x4e14;&#x53ea;&#x80fd;&#x5199;&#x5165;&#x5230;&#x672b;&#x5c3",{"_index":7367,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x53ea;&#x80fd;&#x5728",{"_index":706,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x53ea;&#x80fd;&#x5728;&#x5171;&#x4eab;&#x53d8;&#x91cf;&#x6ca1;&#x6709;&#x4efb;&#x4f55;&#x5199;&#x5165;&#x64cd;&#x4f5c;&#x65f6;&#x53ef;&#x7528",{"_index":7839,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x53ea;&#x80fd;&#x5728;&#x51fd;&#x6570;&#x5185;&#x4f7f;&#x7528;&#xff0c;&#x4e0d;&#x80fd;&#x63d0;&#x4f9b;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":2411,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x53ea;&#x80fd;&#x7528;&#x4e8e;&#x5185;&#x5efa;&#x7c7b;&#x578b;&#xff08",{"_index":232,"title":{},"body":{"index.html#make-和-new":{}}}],["x53ea;&#x80fd;&#x88ab",{"_index":2828,"title":{},"body":{"commands/build.html#工具":{}}}],["x53ea;&#x8981",{"_index":6291,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ea;&#x8981;&#x4e3a",{"_index":4264,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x53ea;&#x8981;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x62ff;&#x5230;&#x4e86;&#x88ab;&#x64cd;&#x4f5c;&#x503c;&#x7684;&#x6307;&#x9488;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x5b9a;&#x4f4d;&#x5230;&#x5b58;&#x50a8;&#x8be5;&#x503c;&#x7684;&#x5185;&#x5b58;&#x5730;&#x5740;&#x3002;&#x53ea;&#x6709;&#x8fd9;&#x6837;&#xff0c;&#x5b83;&#x4eec;&#x624d;&#x80fd;&#x591f;&#x901a;&#x8fc7;&#x5e95;&#x5c42;&#x7684;&#x6307;&#x4ee4;&#xff0c;&#x51c6;&#x786e;&#x5730;&#x64cd;&#x4f5c;&#x8fd9;&#x4e2a;&#x5185",{"_index":8016,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x53ea;&#x8981;&#x540d;&#x79f0;&#x76f8;&#x540c;&#xff0c;&#x65e0;&#x8bba;&#x8fd9;&#x4e24;&#x4e2a;&#x65b9;&#x6cd5;&#x7684;&#x7b7e;&#x540d;&#x662f;&#x5426;&#x4e00;&#x81f4;&#xff0c;&#x88ab;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x7684;&#x65b9;&#x6cd5;&#x90fd;&#x4f1a;&#x201c;&#x5c4f;&#x853d;&#x201d;&#x6389;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x540c;&#x540d;&#x65b9;&#x6cd5",{"_index":2104,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x53ea;&#x8981;&#x5b9e;&#x73b0;&#x4e86",{"_index":9286,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x53ea;&#x8981;&#x6211;&#x4eec;&#x5728;&#x4e25;&#x683c;&#x9075;&#x5faa;&#x4e0a;&#x8ff0;&#x89c4;&#x5219;&#x7684;&#x524d;&#x63d0;&#x4e0b;&#xff0c;&#x5206;&#x6279;&#x5730;&#x542f;&#x7528;&#x6267;&#x884c;&#x5b50;&#x4efb;&#x52a1;&#x7684",{"_index":8168,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x53ea;&#x8981;&#x7b49;&#x5f85;&#x901a;&#x77e5;&#x5c31;&#x597d;&#x4e86;&#x3002",{"_index":7895,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53ea;&#x8981;&#x8c03;&#x7528;&#x4e86",{"_index":3838,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53ea;&#x8bfb;&#x5b57;&#x5178",{"_index":8363,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#x6ca1;&#x6709;&#xff0c;&#x4f46;&#x810f",{"_index":8382,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ea;&#x8bfb;&#x5b57;&#x5178;&#x867d;&#x7136;&#x4e0d;&#x4f1a;&#x589e;&#x51cf;&#x5176;&#x4e2d;&#x7684;&#x952e;&#xff0c;&#x4f46;&#x5374;&#x5141;&#x8bb8;&#x53d8;&#x66f4;&#x5176;&#x4e2d;&#x7684;&#x952e;&#x6240;&#x5bf9;&#x5e94;&#x7684;&#x503c",{"_index":8364,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ea;&#x8bfb;&#x6a21;&#x5f0f;&#x6253;&#x5f00;&#x6587;&#x4ef6",{"_index":7348,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x53ea;&#x9700;&#x8981;&#x786e;&#x4fdd;&#x5b9e;&#x9a8c;&#x76ee;&#x5f55;&#x4e0d;&#x5728",{"_index":984,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x53eb",{"_index":7903,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53eb;&#x4f5c;&#x65b9;&#x6cd5;&#x7684;&#x63a5;&#x6536;&#x5668;&#xff0c;&#x7c7b;&#x4f3c",{"_index":1225,"title":{},"body":{"basic/oop.html#方法":{}}}],["x53eb;&#x505a",{"_index":6207,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ef;&#x4ee5;&#x4e0d;&#x8c03;&#x7528;&#xff0c;&#x56e0;&#x4e3a",{"_index":4454,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x53ef;&#x4ee5;&#x4ece;&#x4efb;&#x610f;&#x7684;&#x5730;&#x65b9;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#xff0c;&#x53ea;&#x8981;&#x6765;&#x6e90;&#x5b9e;&#x73b0;&#x4e86",{"_index":6813,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":1438,"title":{},"body":{"basic/map.html#map":{},"basic/interface.html#接口":{}}}],["x53ef;&#x4ee5;&#x4fdd;&#x8bc1;&#x8ba9;&#x4f60;&#x66f4;&#x4efb;&#x4f55;&#x60c5;&#x51b5;&#x4e0b;&#xff0c",{"_index":3180,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x53ef;&#x4ee5;&#x4fee;&#x6539;&#x6587;&#x4ef6;&#x6743;&#x9650;&#xff08;&#x5305;&#x62ec",{"_index":7576,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x53ef;&#x4ee5;&#x5148;&#x4f7f;&#x7528",{"_index":1479,"title":{},"body":{"basic/map.html#map":{}}}],["x53ef;&#x4ee5;&#x521b;&#x5efa;&#x4e00;&#x4e2a",{"_index":9078,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x53ef;&#x4ee5;&#x540c;&#x65f6;&#x8fd0;&#x884c;&#x3002",{"_index":6248,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ef;&#x4ee5;&#x540c;&#x65f6;&#x8fd0;&#x884c;&#x3002;&#xff08;&#x524d;&#x63d0;&#xff1a;&#x7cfb;&#x7edf;&#x7684;&#x7269;&#x7406",{"_index":6474,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x53ef;&#x4ee5;&#x5b58;&#x50a8;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#xff0c;&#x90a3;&#x4e48;&#x600e;&#x4e48;&#x5224;&#x65ad;&#x5b58;&#x50a8;&#x4e86;&#x4ec0;&#x4e48;&#x7c7b;&#x578b;&#xff1f",{"_index":2343,"title":{},"body":{"basic/interface.html#接口":{}}}],["x53ef;&#x4ee5;&#x5c06;&#x8bf7;&#x6c42",{"_index":8784,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x53ef;&#x4ee5;&#x5f88;&#x5bb9;&#x6613;&#x7684;&#x628a",{"_index":1429,"title":{},"body":{"basic/map.html#map":{}}}],["x53ef;&#x4ee5;&#x5f97;&#x5230;&#x8be5;&#x63a5;&#x53e3",{"_index":7495,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x53ef;&#x4ee5;&#x627f;&#x8f7d;&#x82e5;&#x5e72;&#x4e2a",{"_index":6239,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x53ef;&#x4ee5;&#x628a;&#x65e0;&#x7c7b;&#x578b;&#x7684;&#x5e38;&#x91cf",{"_index":250,"title":{},"body":{"index.html#类型转换":{}}}],["x53ef;&#x4ee5;&#x63cf;&#x8ff0;&#x591a;&#x5c42;&#x7684;&#x540d;&#x5b57;&#xff0c;&#x5982",{"_index":5764,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x53ef;&#x4ee5;&#x643a;&#x5e26;&#x5176;&#x7236;&#x503c;&#x7684;&#x5c5e;&#x6027;&#x548c;&#x6570;&#x636e;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x54cd;&#x5e94;&#x901a;&#x8fc7;&#x5176;&#x7236;&#x503c;&#x4f20;&#x8fbe;&#x7684;&#x4fe1;&#x53f7;&#x3002",{"_index":8207,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x53ef;&#x4ee5;&#x662f;&#x4efb;&#x610f;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x9762;&#x503c;&#xff0c;&#x4f46;&#x662f;&#x901a;&#x5e38;&#x662f;&#x4e00;&#x7cfb;&#x5217;&#x7528;&#x7a7a;&#x683c;&#x5206;&#x9694;&#x7684",{"_index":1559,"title":{},"body":{"basic/json.html#序列化":{}}}],["x53ef;&#x4ee5;&#x663e;&#x5f0f;&#x6539;&#x53d8;&#x6587;&#x4ef6;&#x7684;&#x8bbf;&#x95ee;&#x65f6;&#x95f4;&#x548c;&#x4fee;&#x6539;&#x65f6;&#x95f4;&#x3002",{"_index":7534,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x53ef;&#x4ee5;&#x663e;&#x8457;&#x5730;&#x51cf;&#x5c11;&#x9501;&#x7684;&#x4e89;&#x7528;&#x3002",{"_index":8336,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ef;&#x4ee5;&#x6765;&#x89e3;&#x9501;&#xff0c;&#x90a3;&#x4e07;&#x4e00;&#x89e3;&#x9501;&#x91cd;&#x590d;&#x4e86;&#x600e;&#x4e48;&#x529e;&#xff1f",{"_index":7957,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53ef;&#x4ee5;&#x6839;&#x636e;&#x4e00;&#x4e2a;&#x683c;&#x5f0f;&#x5316;&#x5b57;&#x7b26;&#x4e32;&#x6765;&#x5c06;&#x4e00;&#x4e2a;&#x65f6;&#x95f4",{"_index":3534,"title":{},"body":{"standards/time.html#Time":{}}}],["x53ef;&#x4ee5;&#x6839;&#x636e;&#x540d;&#x79f0;&#x83b7;&#x53d6;&#x7279;&#x5b9a;&#x65f6;&#x533a;&#x7684;&#x5b9e;&#x4f8b;&#xff1a",{"_index":3437,"title":{},"body":{"standards/time.html#时区":{}}}],["x53ef;&#x4ee5;&#x7075;&#x6d3b;&#x7684;&#x5bf9",{"_index":8892,"title":{},"body":{"standards/net/http.html#client":{}}}],["x53ef;&#x4ee5;&#x7528;&#x6765;&#x5904;&#x7406",{"_index":8723,"title":{},"body":{"standards/net/http.html#http":{}}}],["x53ef;&#x4ee5;&#x7701;&#x7565;&#x5176;&#x4e2d;&#x7684;&#x4e00;&#x4e2a;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x7c7b;&#x578b;&#xff0c;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8868;&#x8fbe;&#x5f0f;&#x63a8;&#x65ad;&#x51fa;&#x7c7b;&#x578b;&#xff0c",{"_index":2398,"title":{},"body":{"basic/var.html#变量":{}}}],["x53ef;&#x4ee5;&#x7701;&#x7565;&#x7684;&#x5199;&#x6210",{"_index":2167,"title":{},"body":{"basic/package.html#点操作":{}}}],["x53ef;&#x4ee5;&#x770b;&#x51fa",{"_index":6835,"title":{},"body":{"standards/io/io.html#Writer":{}}}],["x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c",{"_index":3478,"title":{},"body":{"standards/time.html#Time":{}}}],["x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c;&#x5728;&#x8bfb;&#x64cd;&#x4f5c;&#x6709;&#x5f88;&#x591a;&#x4f46;&#x5199;&#x64cd;&#x4f5c;&#x5374;&#x5f88;&#x5c11;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x7684;&#x6027;&#x80fd;&#x5f80;&#x5f80;&#x4f1a;&#x66f4;&#x597d;&#x3002;&#x5728;&#x51e0;&#x4e2a;&#x5199;&#x64cd;&#x4f5c;&#x5f53;&#x4e2d;&#xff0c;&#x65b0;&#x589e;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x64cd;&#x4f5c;&#x5bf9;&#x5e76;&#x53d1;&#x5b89",{"_index":8402,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ef;&#x4ee5;&#x770b;&#x5230",{"_index":8321,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x53ef;&#x4ee5;&#x770b;&#x5230;&#xff0c;&#x7b2c;&#x4e00;&#x6b21;&#x8c03;&#x7528",{"_index":7115,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x53ef;&#x4ee5;&#x786e;&#x4fdd;&#x5728",{"_index":2222,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x53ef;&#x4ee5;&#x7b80;&#x5355;&#x5730;&#x8ba4;&#x4e3a;&#x65b0;&#x5207;&#x7247;&#x7684;&#x5bb9;&#x91cf;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x65b0;&#x5bb9;&#x91cf;&#xff09;&#x5c06;&#x4f1a;&#x662f",{"_index":1926,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x53ef;&#x4ee5;&#x7b80;&#x5355;&#x7406;&#x89e3;&#x4e3a;&#x534f;&#x7a0b;&#xff0c;&#x5f00;&#x9500;&#x8f83;&#x4f4",{"_index":6199,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ef;&#x4ee5;&#x7ed9;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x5b9a;&#x4e49;&#x65b9;&#x6cd5",{"_index":1231,"title":{},"body":{"basic/oop.html#方法":{}}}],["x53ef;&#x4ee5;&#x80dc;&#x4efb;&#xff0c;&#x4f46;&#x5982;&#x679c;&#x5bf9;&#x7cbe;&#x5ea6;&#x6709;&#x4e25;&#x683c;&#x8981;&#x6c42;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5219;&#x4e0d;&#x80fd;&#x4f7f;&#x7528;&#x6d6e;&#x70b9;&#x6570;&#xff0c;&#x5728;&#x5185;&#x5b58;&#x4e2d;&#x5b83;&#x4eec;&#x53ea;&#x80fd",{"_index":4357,"title":{},"body":{"standards/data/big.html#big":{}}}],["x53ef;&#x4ee5;&#x83b7;&#x53d6;&#x5230;)&#x3002;&#x6709;&#x65f6;&#x5019;&#xff0c;&#x6211;&#x4eec;&#x81ea;&#x5df1;&#x9700;&#x8981;&#x521b;&#x5efa;&#x4e34;&#x65f6;&#x76ee;&#x5f55;&#xff0c",{"_index":4827,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x53ef;&#x4ee5;&#x83b7;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x957f;&#x5ea6;&#x3002",{"_index":3738,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53ef;&#x4ee5;&#x83b7;&#x53d6;&#x6587;&#x4ef6;&#x7684;&#x6743;&#x9650;&#x3002;&#x8fd9;&#x5bf9;&#x5e94;&#x7cfb;&#x7edf;&#x8c03;&#x7528",{"_index":7559,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x53ef;&#x4ee5;&#x83b7;&#x5f97;&#x5e95;&#x5c42;&#x7684;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#xff1a",{"_index":7324,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x53ef;&#x4ee5;&#x83b7;&#x5f97;&#x8def;&#x5f84;&#x4e2d;&#x6587;&#x4ef6;&#x540d;&#x7684;&#x6269;&#x5c55;&#x540d;&#x3002",{"_index":5650,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x53ef;&#x4ee5;&#x88ab;&#x7edf",{"_index":7877,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x53ef;&#x4ee5;&#x8bbe;&#x7f6e;&#x5f53;&#x5176;&#x5b83;&#x7684;&#x64cd;&#x4f5c",{"_index":3011,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53ef;&#x4ee5;&#x8c03;&#x6574;&#x6587;&#x4ef6;&#x504f;&#x79fb;&#x91cf;&#xff1a",{"_index":7455,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x53ef;&#x4ee5;&#x8de8",{"_index":6496,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x53ef;&#x4ee5;&#x8de8;&#x7ebf;&#x7a0b;&#x8c03;&#x5ea6;&#x3002;&#x6240;&#x4ee5",{"_index":6197,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ef;&#x4ee5;&#x9002;&#x7528;&#x4e8e;&#x6574;&#x6570;&#x3001;&#x6d6e;&#x70b9;&#x6570;&#x548c;&#x590d;&#x6570;&#x3002",{"_index":1791,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":963,"title":{},"body":{"basic/env_config.html#Go-Module":{},"basic/basic_data.html#字符串":{}}}],["x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":4203,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x53ef;&#x4ee5;&#x907f;&#x514d;&#x8fdb;&#x884c;&#x6210;&#x672c;&#x8f83",{"_index":1723,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x53ef;&#x4ee5;&#x914d;&#x7f6e;&#x7f13;&#x51b2;&#x533a;&#x7684;&#x5927;&#x5c0f",{"_index":5406,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{}}}],["x53ef;&#x53d8;&#x53c2;&#x6570",{"_index":3141,"title":{"basic/function.html#可变参数":{}},"body":{}}],["x53ef;&#x5bf9;&#x76f8;&#x540c;&#x7684;&#x8f93;&#x5165;&#x6e90;&#x5e76;&#x884c;&#x6267;&#x884c",{"_index":6865,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x53ef;&#x5c06;&#x5185;&#x5bb9;&#x91cd;&#x7f6e;&#xff0c;&#x53ef;&#x91cd;&#x7528;&#x503c;&#x3002",{"_index":3806,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#x3002",{"_index":2723,"title":{},"body":{"commands/build.html#工具":{}}}],["x53ef;&#x662f;&#x65e0;&#x6cd5;&#x6062;&#x590d;&#x7684;&#x3002",{"_index":7959,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53ef;&#x7528;&#x6765",{"_index":7545,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x53ef;&#x7528;&#xff0c",{"_index":6892,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x53ef;&#x80fd;&#x4f1a;&#x627e;&#x4e0d;&#x5230;&#x547d;&#x4ee4;&#x3002",{"_index":2583,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x53ef;&#x80fd;&#x4f60;&#x5df2;&#x7ecf;&#x6ce8;&#x610f;&#x5230;&#xff1a",{"_index":3509,"title":{},"body":{"standards/time.html#Time":{}}}],["x53ef;&#x80fd;&#x8868;&#x793a;&#x591a;&#x4e2a;&#x65f6;&#x533a;&#x3002",{"_index":3422,"title":{},"body":{"standards/time.html#时区":{}}}],["x53ef;&#x80fd;&#x8fbe;&#x4e0d;&#x5230;&#x4e92;&#x9006;&#x7684;&#x6548;&#x679c;&#x3002;&#x5982;&#xff1a",{"_index":4994,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x53ef;&#x80fd;&#x8fd4;&#x56d",{"_index":6805,"title":{},"body":{"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x53ef;&#x89c1;&#xff0c",{"_index":6867,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x53ef;&#x8d4b;&#x503c;&#x6027",{"_index":2438,"title":{},"body":{"basic/var.html#赋值":{}}}],["x53ef;&#x8fd0;&#x884c",{"_index":3005,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53ef;&#x8fd0;&#x884c;&#x3002",{"_index":1075,"title":{},"body":{"basic/flow.html#select":{}}}],["x53ef;&#x8fd0;&#x884c;&#xff0c;&#x5b83;&#x5c06;&#x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x6709",{"_index":1074,"title":{},"body":{"basic/flow.html#select":{},"concurrent/channel.html#channel":{}}}],["x53ef;&#x9009",{"_index":1077,"title":{},"body":{"basic/flow.html#select":{},"concurrent/channel.html#channel":{}}}],["x5404;&#x81ea;&#x90fd;&#x6709;&#x4e00;&#x4e2a;&#x533f;&#x540d;&#x6210;&#x5458;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8bf4",{"_index":2069,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5408;&#x4f5c;&#x505c;&#x4e0b;&#x6765;&#xff0c;&#x8fd9;&#x4f1a;&#x9020;&#x6210;&#x8f83;&#x957f;&#x65f6",{"_index":6536,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5408;&#x5e76;&#x6784;&#x5efa;&#x66f4;&#x5927;&#x7684;&#x5185;&#x5b58;&#x5757;&#xff0c;&#x51cf;&#x5c11;&#x788e;&#x7247;&#x3002",{"_index":412,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x540c;&#x4e00;&#x65f6;&#x523b;&#x90fd;&#x8fd0;&#x884c;&#x4efb;&#x52a1;&#xff0c;&#x4e92;&#x4e0d;&#x62a2;&#x5360;&#x81ea;&#x5df1;&#x6240;&#x5728;&#x7684",{"_index":6175,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x540c;&#x6216;&#x8005;&#x80fd;&#x591f;&#x90fd;&#x7edf;&#x4e00;&#x5230",{"_index":1047,"title":{},"body":{"basic/flow.html#switch":{}}}],["x540c;&#x65f6",{"_index":2072,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x540c;&#x65f6;&#x4e5f;&#x5b9e;&#x73b0;&#x4e86",{"_index":9080,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x540c;&#x65f6;&#x4f7f;&#x7528;&#x3002",{"_index":4442,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x540c;&#x65f6;&#x5b83;&#x8fd8;&#x4f1a;&#x68c0;&#x6d4b;&#x6bcf;&#x4e2a",{"_index":6550,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x540c;&#x65f6;&#x5b9e;&#x73b0;&#x4e86",{"_index":6847,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#其他接口":{}}}],["x540c;&#x65f6;&#x6ee1;&#x8db3;&#x6761;&#x4ef6;&#xff0c",{"_index":1072,"title":{},"body":{"basic/flow.html#select":{},"concurrent/channel.html#channel":{}}}],["x540c;&#x65f6;&#xff0c;&#x7c7b;&#x578b;&#x7ec4;&#x5408;&#x4e5f;&#x662f;&#x975e;&#x4fb5;&#x5165;&#x5f0f;&#x7684;&#xff0c;&#x5b83;&#x4e0d;&#x4f1a;&#x7834;&#x574f;&#x7c7b;&#x578b;&#x7684;&#x5c01;&#x88c5;&#x6216;&#x52a0;&#x91cd;&#x7c7b;&#x578b;&#x4e4b;&#x95f4;&#x7684;&#x8026;&#x5408;&#x3002;&#x6211;&#x4eec;&#x8981;&#x505a;&#x7684;&#x53ea;&#x662f;&#x628a;&#x7c7b;&#x578b;&#x5f53;&#x505a;&#x5b57;&#x6bb5;&#x5d4c;&#x5165;&#x8fdb;&#x6765;&#xff0c;&#x7136;&#x540e;&#x5750",{"_index":1280,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x540c;&#x6837;&#x5b89;&#x5168;&#xff1a;&#x540c;&#x79cd;&#x7c7b;&#x7684;&#x8c03;&#x7528;&#x5c06;&#x6309;&#x987a;&#x5e8f;&#x8fdb;&#x884c;&#x63a7;&#x5236;&#x3002",{"_index":7040,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x540c;&#x6837;&#x7684;&#xff0c;&#x57fa;&#x4e8e;&#x6027;&#x80fd;&#x7684;&#x8003;&#x8651;&#xff0c;&#x5e94;&#x8be5;&#x4f7f;&#x7528",{"_index":4997,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x540c;&#x6b65",{"_index":7042,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x540c;&#x6b65;&#x548c;&#x9501",{"_index":7801,"title":{"concurrent/sync_lock.html#同步和锁":{}},"body":{}}],["x540c;&#x6b65;&#x9501",{"_index":7811,"title":{"concurrent/sync_lock.html#同步锁":{}},"body":{}}],["x540d;&#x5b57;&#x7684;&#x8def;&#x5f84;&#x6bb5;&#x7684;&#x5305;&#x5bfc;&#x5165;&#x8def;&#x5f84;&#x505a;&#x4e86;&#x7279;&#x6b8a;&#x5904;&#x7406;&#x3002;&#x8fd9;&#x79cd;&#x5305;&#x53eb",{"_index":2824,"title":{},"body":{"commands/build.html#工具":{}}}],["x540d;&#x8fd4;&#x56de;&#x503c;&#xff08;&#x4e5f;&#x5c31;&#x662f;&#x5bf9;&#x8fd4;&#x56de;&#x503c;&#x547d;&#x540d;&#xff09;&#x4f5c;&#x4e3a;&#x51fd;&#x6570;&#x6700;&#x5916;&#x5c42;&#x7684;&#x5c40;&#x90e8;&#x53d8;&#x91cf;&#xff0c;&#x88ab;&#x5b58;&#x50a8;&#x5728;&#x76f8;&#x540c;&#x7684;&#x8bcd;&#x6cd5;&#x5757;&#x4e2d;&#x3002",{"_index":3123,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x540e;&#x4e09;&#x4e2a;&#x65b9;&#x6cd5;&#x6700;&#x7ec8;&#x90fd;&#x662f;&#x8c03;&#x7528",{"_index":5427,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x540e;&#x4e24;&#x8005;&#x53ea;&#x662f;&#x88ab;&#x7b80;&#x5355;&#x5730;&#x5b58;&#x50a8;&#x5728;&#x524d;&#x8005;&#x7684;&#x76f8;&#x5e94;&#x5b57;&#x6bb5;&#x4e2d;&#x800c;&#x5df2;&#x3002",{"_index":8275,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x540e;&#x5f97;&#x5230;&#x7684",{"_index":1143,"title":{},"body":{"basic/flow.html#for":{}}}],["x540e;&#x6253;&#x5370",{"_index":7846,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x540e;&#x6267;&#x884c;&#x5b8c;&#x5f80;&#x5f80;&#x662f;&#x4e0d;&#x53ef;&#x9884;&#x77e5;&#x7684;&#xff0c;&#x9664;&#x975e;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x4e86;&#x67d0;&#x79cd",{"_index":6317,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x540e;&#x63a5;&#x6536;&#x4efb;&#x610f;&#x4e2a;&#x6570;&#x7684;&#x540e;&#x7eed;&#x53c2;&#x6570;&#x3002",{"_index":3145,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x540e;&#x7684;&#x51fd;&#x6570;&#x624d;&#x4f1a;&#x88ab;&#x6267;&#x884c;&#x3002",{"_index":3178,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x540e;&#x7684;&#x903b;&#x8f91",{"_index":9114,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x540e;&#x9762;&#x7684",{"_index":5290,"title":{},"body":{"standards/data/container.html#环":{}}}],["x540e;&#x9762;&#xff0c;&#x8fd4;&#x56de;&#x503c;&#x4e3a",{"_index":5281,"title":{},"body":{"standards/data/container.html#环":{}}}],["x540e;&#xff0c",{"_index":5283,"title":{},"body":{"standards/data/container.html#环":{}}}],["x540e;&#xff0c;&#x8be5;&#x4e8b;&#x52a1;&#x4f7f;&#x7528;&#x7684;&#x8fde;&#x63a5;&#x4f1a;&#x5f52;&#x8fd8;&#x5230",{"_index":4447,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x540e;&#xff0c;&#x8fdb;&#x5165",{"_index":6484,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5411",{"_index":5440,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x5411;&#x4e0a;&#x53d6;&#x6574",{"_index":6100,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x5411;&#x4e0b;&#x53d6;&#x6574",{"_index":6101,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x5411;&#x5207;&#x7247;&#x8ffd;&#x52a0;&#x65b0;&#x5143;&#x7d20",{"_index":1896,"title":{},"body":{"basic/slice.html#append-和-copy":{}}}],["x5411;&#x53e6;&#x4e00;&#x4e2a",{"_index":2878,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5411;&#x6587;&#x4ef6;&#x4e2d;&#x5199;&#x5165",{"_index":7420,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5411;&#x8bf7;&#x6c42;&#x4e2d;&#x6dfb;&#x52a0;&#x4e00;&#x4e2a",{"_index":8752,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5411;&#x957f;&#x65f6;&#x95f4;&#x8fd0;&#x884c;&#x7684",{"_index":6566,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5417",{"_index":8097,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5417;&#xff1f",{"_index":7955,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5426;&#x5219",{"_index":3442,"title":{},"body":{"standards/time.html#时区":{}}}],["x5426;&#x5219;&#x7684;&#x8bdd;&#x5c06;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":8782,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5426;&#x5219;&#xff0c;&#x5b83;&#x624d;&#x4f1a;&#x5728;&#x9501;&#x7684;&#x4fdd;&#x62a4;&#x4e0b;&#x628a;&#x952e;&#x503c;&#x5bf9;&#x5b58;&#x50a8;&#x5230;&#x810f;&#x5b57;&#x5178;&#x4e2d;&#x3002;&#x8fd9;&#x4e2a;&#x65f6;&#x5019;&#xff0c;&#x8be5;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x201c;&#x5df2;&#x5220;&#x9664;&#x201d;&#x6807;&#x8bb0;&#x4f1a;&#x88ab;&#x62b9;&#x53bb;&#x3002",{"_index":8388,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x542f;&#x52a8;&#x5f00;&#x53d1;&#x670d;&#x52a1;&#xff0c;&#x8bbf;&#x95e",{"_index":2588,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x542f;&#x52a8;&#x7684;&#x65f6;&#x5019;&#x901a;&#x8fc7",{"_index":543,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x5462;&#xff1f",{"_index":8009,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5473;&#x7740",{"_index":4289,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x547d;&#x4ee4",{"_index":2714,"title":{"commands/build.html#命令":{}},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x4e0b;&#x8f7d;&#x4e00;&#x4e2a;&#x5305;&#x3002;&#x5982",{"_index":2718,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x4e2d;&#x96c6;&#x6210;&#x4e86;&#x6d4b;&#x8bd5;&#x8986;&#x76d6;&#x7387;&#x5de5;&#x5177;&#x3002",{"_index":4115,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["x547d;&#x4ee4;&#x4f1a",{"_index":4158,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x547d;&#x4ee4;&#x4f1a;&#x591a;&#x6b21;&#x8fd0;&#x884c;&#x57fa;&#x51c6;&#x51fd;&#x6570;&#x4ee5;&#x8ba1;&#x7b97;&#x4e00;&#x4e2a;&#x5e73;&#x5747;&#x7684;&#x6267;&#x884c;&#x65f6;&#x95f4;&#x3002",{"_index":4085,"title":{},"body":{"basic/test.html#测试":{}}}],["x547d;&#x4ee4;&#x4f1a;&#x8c03;&#x7528;&#x8fd9;&#x4e9b;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x5e76;&#x62a5;&#x544a;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c;&#x662f",{"_index":4083,"title":{},"body":{"basic/test.html#测试":{}}}],["x547d;&#x4ee4;&#x53ef;&#x4ee5;&#x7528;&#x6765;&#x5206;&#x6790;&#x4e0a;&#x9762;&#x7684;&#x547d;&#x4ee4;&#x751f;&#x6210;&#x7684;&#x6570;&#x636e;&#x3002",{"_index":4140,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x547d;&#x4ee4;&#x540e;&#x9762;&#x52a0;&#x4e0a",{"_index":8407,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x547d;&#x4ee4;&#x548c",{"_index":2764,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x5728;&#x5f00;&#x59cb;&#x8fd0;&#x884c;&#x65f6;&#xff0c;&#x4f1a;&#x5148;&#x505a;&#x4e00;&#x4e9b;&#x51c6;&#x5907;&#x5de5;&#x4f5c;&#xff0c;&#x6bd4;&#x5982;&#xff0c;&#x786e;&#x5b9a;&#x5185;&#x90e8;&#x9700;&#x8981;&#x7528;&#x5230;&#x7684;&#x547d;&#x4ee4;&#xff0c;&#x68c0;&#x67e5;&#x6211;&#x4eec;&#x6307;&#x5b9a;&#x7684;&#x4ee3;&#x7801;&#x5305;&#x6216;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x7684;&#x6709;&#x6548;&#x6027;&#xff0c",{"_index":4152,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x547d;&#x4ee4;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x53c2;&#x6570;&#x6307;&#x5b9a;&#x5305;&#x90a3;&#x4e48;&#x5c06;&#x9ed8;&#x8ba4;&#x91c7;&#x7528;&#x5f53;&#x524d;&#x76ee;&#x5f55;&#x5bf9;&#x5e94;&#x7684;&#x5305;&#x3002",{"_index":4111,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x547d;&#x4ee4;&#x5b9e;&#x9645;&#x4e0a;&#x662f;&#x7ed3;&#x5408;&#x4e86;&#x6784;&#x5efa;&#x548c;&#x8fd0;&#x884c;&#x7684;&#x4e24;&#x4e2a;&#x6b65;&#x9aa4;&#x3002",{"_index":2763,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x5c31;&#x4f1a;&#x62a5;&#x544a;&#x9519;&#x8bef;&#x201c;illeg",{"_index":325,"title":{},"body":{"index.html#编码":{}}}],["x547d;&#x4ee4;&#x5c31;&#x4f1a;&#x9488;&#x5bf9;&#x6bcf;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#xff0c;&#x4f9d;&#x6b21;&#x5730;&#x8fdb;&#x884c;&#x6784;&#x5efa;&#x3001;&#x6267;&#x884c;&#x5305;&#x4e2d;&#x7b26;&#x5408;&#x8981;&#x6c42;&#x7684;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x6e05;&#x7406;&#x4e34;&#x65f6;&#x6587;&#x4ef6;&#xff0c",{"_index":4155,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x547d;&#x4ee4;&#x5e76;&#x53d1;&#x5730;&#x6267;&#x884c;&#xff0c;&#x800c;&#x5e76;&#x53d1;&#x6267;&#x884c;&#x7684;&#x6700;&#x5927;&#x6570;&#x91cf;&#x6b63;&#x662f",{"_index":4226,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x547d;&#x4ee4;&#x6216;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x53ef;&#x4ee5;&#x8bbe;&#x7f6e;&#x6587;&#x4ef6;&#x7684",{"_index":7569,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x547d;&#x4ee4;&#x6267;&#x884c;&#x7684;&#x4e3b;&#x8981;&#x6d4b;&#x8bd5;&#x6d41;&#x7a0b",{"_index":4151,"title":{"basic/test.html#go-test-命令执行的主要测试流程":{}},"body":{}}],["x547d;&#x4ee4;&#x65f6;&#xff0c;&#x52a0;&#x5165;&#x6807;&#x8bb0",{"_index":4206,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x6765;&#x67e5;&#x770b;&#x7f13;&#x5b58;&#x76ee;&#x5f55;&#x7684;&#x8def;&#x5f84;&#x3002",{"_index":4167,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x67e5;&#x770b",{"_index":2843,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x67e5;&#x8be2;&#x53ef;&#x7528;&#x5305;&#x7684;&#x4fe1;&#x606f;&#x3002;&#x5982",{"_index":2835,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x6d4b;&#x8bd5;&#x4ee3;&#x7801;&#xff0c;&#x5305;&#x76ee;&#x5f55;&#x5185;&#xff0c;&#x6240;&#x6709;&#x4ee5",{"_index":4076,"title":{},"body":{"basic/test.html#测试":{}}}],["x547d;&#x4ee4;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#xff0c;&#x5982;&#x679c;&#x4e00;&#x4e2a;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x58f0;&#x660e;&#x5c5e;&#x4e8",{"_index":187,"title":{},"body":{"index.html#三种文件":{}}}],["x547d;&#x4ee4;&#x72ec;&#x7acb;&#x7f16;&#x8bd1;&#x3002;(&#x4ee5",{"_index":2200,"title":{},"body":{"basic/package.html#包声明":{}}}],["x547d;&#x4ee4;&#x7684;&#x65f6;&#x5019;&#x4e0d;&#x52a0",{"_index":4185,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x7684;&#x6e90;&#x7801;&#x4e2d;&#x521b;&#x5efa;&#x4e34;&#x65f6;&#x6587;&#x4ef6;&#xff1a",{"_index":4835,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x547d;&#x4ee4;&#x7684;&#x7f13;&#x5b58;&#x884c;&#x4e3a;&#x3002;&#x6bd4;&#x5982;&#xff0c;&#x8bbe;&#x7f6e;&#x503c;&#x4e3a",{"_index":4171,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x76f4;&#x63a5;&#x628a;&#x4e4b;&#x524d;&#x7f13;&#x5b58;&#x6d4b;&#x8bd5;&#x6210;&#x529f;&#x7684;&#x7ed3;&#x679c;&#x6253;&#x5370;&#x51fa;&#x6765;&#x4e86;&#x3002",{"_index":4165,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x76f8;&#x4f3c;&#xff0c;&#x4e0d;&#x540c;&#x7684;&#x662f",{"_index":2765,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x7c7b;&#x4f3c;&#x3002",{"_index":7127,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x547d;&#x4ee4;&#x7c7b;&#x4f3c;&#xff0c;&#x4f46;&#x5982;&#x679c",{"_index":5625,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x547d;&#x4ee4;&#x7ed5",{"_index":4173,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x7f16;&#x8bd1;&#x5b8c;&#x4e4b;&#x540e;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#x3002",{"_index":2197,"title":{},"body":{"basic/package.html#包声明":{}}}],["x547d;&#x4ee4;&#x7f16;&#x8bd1;&#xff0c;&#x547d;&#x4ee4;&#x884c;&#x53c2;&#x6570;&#x6307;&#x5b9a;&#x7684;&#x6bcf;&#x4e2a;&#x5305;&#x3002",{"_index":2730,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x901a;&#x5e38;&#x4f1a;&#x7f13;&#x5b58;&#x7a0b;&#x5e8f;&#x6784;&#x5efa;&#x7684;&#x7ed3;&#x679c;&#xff0c;&#x4ee5;&#x4fbf;&#x5728;&#x5c06;&#x6765;&#x7684;&#x6784;&#x5efa;&#x4e2d;&#x91cd;&#x7528;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8fd0;&#x884c",{"_index":4166,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x547d;&#x4ee4;&#xff0c;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x6709;&#x4e24;&#x4e2a;&#x662f",{"_index":4519,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x547d;&#x4ee4;&#xff0c;&#x9a8c;&#x8bc1;&#x662f;&#x5426;&#x5b89;&#x88c5;&#x6210;&#x529f;&#x3002;&#x5426;&#x5219;&#x68c0;&#x67e5;&#x73af;&#x5883;&#x53d8;&#x91cf",{"_index":930,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x547d;&#x4ee4;&#xff1a",{"_index":2716,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x540d",{"_index":217,"title":{"index.html#命名":{}},"body":{}}],["x547d;&#x540d;&#x53d8;&#x91cf;&#x7684;&#x8d4b;&#x503c",{"_index":2426,"title":{},"body":{"basic/var.html#赋值":{}}}],["x547d;&#x540d;&#x7ba1;&#x9053;&#xff08;fifo&#xff09",{"_index":7372,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x548c",{"_index":161,"title":{"index.html#make-和-new":{},"basic/slice.html#len-和-cap":{},"basic/slice.html#append-和-copy":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}},"body":{"index.html#Golang-介绍":{},"index.html#os-Args":{},"index.html#make-和-new":{},"index.html#编码":{},"advance/gc.html#何时触发-GC":{},"basic/array.html#二维数组":{},"basic/env_config.html#安装":{},"basic/env_config.html#Go-Module":{},"basic/flow.html#for":{},"basic/oop.html#String-方法":{},"basic/map.html#map":{},"basic/pointer.html#为什么需要指针":{},"basic/pointer.html#哪些值是不可寻址的":{},"basic/operator.html#算术运算符":{},"basic/operator.html#关系运算符":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/scope.html#作用域":{},"basic/interface.html#接口":{},"standards/log.html#Logger":{},"standards/log.html#分类":{},"theme/theme-usage.html#Sidebar":{},"concurrent/channel.html#channel":{},"basic/function.html#错误":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"standards/time.html#Ticker":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#布尔类型":{},"basic/basic_data.html#字符串":{},"basic/test.html#测试函数":{},"basic/test.html#性能测试函数中的计时器":{},"basic/test.html#性能分析":{},"standards/data/big.html#big":{},"standards/database/sql.html#类型":{},"standards/io/fmt.html#fmt-包":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"standards/text/unicode.html#unicode":{},"standards/text/unicode.html#2-5-3-utf16-包":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/io/bufio.html#bufio":{},"standards/io/bufio.html#bufio包中的数据类型":{},"standards/io/bufio.html#bufio-Reader":{},"standards/os/filepath.html#filepath":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#相对路径和绝对路径":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#Windows-起作用的函数":{},"standards/text/strings.html#分割字符串":{},"standards/text/strings.html#从字符串中读取内容":{},"standards/data/math.html#三角函数":{},"standards/data/math.html#类型转化函数":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html#io":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#截断文件":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html#sort":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x548c;&#x4e00;&#x4e9b;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x9519;&#x8bef;&#x4f1a;&#x4f7f;&#x5b83;&#x8fd4;&#x56de;&#x771f;&#x3002",{"_index":7558,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x548c;&#x5176;&#x4ed6;&#x57fa;&#x672c;&#x578b;&#x522b;&#x4e0d;&#x540c;&#xff0c;&#x5b83;&#x4e0d;&#x662f",{"_index":1432,"title":{},"body":{"basic/map.html#map":{}}}],["x548c;&#x5176;&#x4ed6;&#x7684;&#x4e00;&#x4e9b;&#x914d;&#x7f6e;&#x3002",{"_index":2597,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x548c;&#x51fd;&#x6570;&#xff09;&#xff1a",{"_index":2407,"title":{},"body":{"basic/var.html#变量":{}}}],["x548c;&#x521a;&#x521a;&#x58f0;&#x660e;&#x7684;&#x53d8;&#x91cf",{"_index":6358,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x548c;&#x5904;&#x7406;&#x5f00;&#x9500;&#x4f7f;&#x5b83;&#x4eec;&#x4f7f;&#x7528;&#x8d77;&#x6765;&#x8981;&#x6bd4;&#x5185;&#x7f6e;&#x7684;&#x6570;&#x5b57;&#x7c7b;&#x578b;&#x6162;&#x5f88;&#x591a;&#x3002",{"_index":4368,"title":{},"body":{"standards/data/big.html#big":{}}}],["x548c;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x7684",{"_index":8976,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x548c;&#x6307;&#x5411;&#x4ed6;&#x4eec;&#x7684;&#x6307;&#x9488",{"_index":1237,"title":{},"body":{"basic/oop.html#方法":{}}}],["x548c;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x5b83;&#x4e5f;&#x53ea;&#x9488;&#x5bf9;&#x5c11;&#x6570;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x63d0;&#x4f9b;&#x4e86;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x3002;&#x8fd9;&#x4e9b;&#x51fd;&#x6570;&#x90fd;&#x5b58;&#x5728;&#x4e8e;&#x6807;&#x51c6;&#x5e93;&#x4ee3",{"_index":7994,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x548c;&#x8868;&#x793a;&#x5927;&#x6709;&#x7406;&#x6570;&#x7684",{"_index":4363,"title":{},"body":{"standards/data/big.html#big":{}}}],["x548c;&#x8be5;&#x5b57;&#x7b26;&#x5360;&#x7528;&#x7684;&#x5b57;&#x8282;&#x6570;&#x3002",{"_index":6970,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x548c;&#x8def;&#x7531;&#x89c4;&#x5219",{"_index":8984,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x54cd;&#x5e94",{"_index":8965,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x54cd;&#x5e94;&#x5bf9;&#x8c61",{"_index":8730,"title":{},"body":{"standards/net/http.html#http":{}}}],["x54cd;&#x5e94;&#x62a5;&#x6587;&#x4f53",{"_index":8857,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x54cd;&#x5e94;&#x62a5;&#x6587;&#x5934",{"_index":8856,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x54cd;&#x5e94;&#x6d41",{"_index":8903,"title":{},"body":{"standards/net/http.html#client":{}}}],["x54cd;&#x5e94;&#xff1a",{"_index":8851,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x54ea;&#x4e9b;&#x503c;&#x662f;&#x4e0d;&#x53ef;&#x5bfb;&#x5740;&#x7684",{"_index":1763,"title":{"basic/pointer.html#哪些值是不可寻址的":{}},"body":{}}],["x5524;&#x9192;&#x7684",{"_index":7988,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x552f;&#x4e00;&#x5171;&#x6709;&#x7684;&#x662f;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x76ee;&#x5f55;&#x7684",{"_index":7388,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x56db;&#x4e2a;&#x7528;&#x4e8e;&#x7e41;&#x884d",{"_index":8223,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x56de",{"_index":5455,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x56de;&#x5230;&#x5305;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x6211;&#x4eec;&#x770b;&#x5230;&#x6709;&#x4e0b;&#x9762;&#x8fd9;&#x4e9b;&#x5224;&#x65ad;&#x51fd;&#x6570;&#xff1a",{"_index":5116,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x56de;&#x590d;&#x3002;req",{"_index":8860,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x56de;&#x6536",{"_index":424,"title":{"advance/mm.html#回收":{}},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x56de;&#x6536;&#x4e0d;&#x662f;&#x91ca;&#x653",{"_index":426,"title":{},"body":{"advance/mm.html#回收":{}}}],["x56de;&#x6536;&#x5bf9;&#x8c61;&#x5185;&#x5b58;&#x65f6;&#xff0c;&#x5c06;&#x5c0f;&#x5757;&#x5185;&#x5b58;&#x8fd8;&#x7ed9;&#x539f;&#x94fe;&#x8868;&#xff0c;&#x4ee5;&#x4fbf;&#x590d;&#x7528;&#x3002",{"_index":387,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x56de;&#x6536;&#x64cd;&#x4f5c;&#x4ee5",{"_index":431,"title":{},"body":{"advance/mm.html#回收":{}}}],["x56de;&#x6536;&#x9891;&#x7387;&#x76f8;&#x5bf9;&#x8f83;&#x4f4e;&#xff0c;&#x4ee3;&#x4ef7;&#x4e5f;&#x8f83;&#x5927;&#xff0c;&#x56e0;&#x6b64;&#x4f20",{"_index":1721,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x56de;&#x7684;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#x662f;&#x552f;&#x4e00;&#x6307;&#x5411;&#x8be5;&#x5730;&#x5740;&#x7684;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#x3002;&#x5728",{"_index":5667,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x56de;&#x7b54;&#x662f;&#xff1a;&#x4e0d;&#x4f1a;&#x6709;&#x4efb;&#x4f55;&#x5185;&#x5bb9;&#x88ab;&#x6253;&#x5370;&#x51fa;&#x6765;&#x3002",{"_index":6225,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x56de;&#x7ed9;&#x4e86;&#x65b9;&#x6cd5;&#x7684;&#x8c03;&#x7528;&#x65b9;&#x3002",{"_index":3924,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x56de;&#x8fd9;&#x4e2a;&#x9519;&#x8bef;&#x3002",{"_index":4898,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x56e0",{"_index":671,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x56e0;&#x4e3a",{"_index":3567,"title":{},"body":{"standards/time.html#定时器":{},"concurrent/goroutine.html#goroutine-1":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-Map":{}}}],["x56e0;&#x4e3a;&#x5173;&#x95ed;&#x64cd;&#x4f5c;&#x53ea;&#x7528;&#x4e8e;&#x65ad;&#x8a00;&#x4e0d;&#x518d;&#x5411",{"_index":2901,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x56e0;&#x4e3a;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684",{"_index":7945,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x56e0;&#x4e3a;&#x8fd9;&#x6837;&#x7684;&#x5185;&#x90e8;&#x6784;&#x9020;&#xff0c",{"_index":3813,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x56e0;&#x6536;&#x5230;&#x901a;&#x77e5;&#x800c;&#x88ab;&#x5524;&#x9192;&#xff0c;&#x4e5f;&#x4f9d;&#x7136;&#x4f1a;&#x518d;&#x6b21;&#x6267;&#x884c;&#x8fd9;&#x4e2a",{"_index":7964,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x56e0;&#x6536;&#x5230;&#x901a;&#x77e5;&#x800c;&#x88ab;&#x5524;&#x9192;&#xff0c;&#x4f46;&#x5374;&#x53d1;&#x73b0;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#xff0c;&#x4f9d;&#x7136;&#x4e0d;&#x7b26;&#x5408;&#x5b83;&#x7684;&#x8981;&#x6c42;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x5e94;&#x8be5;&#x518d;&#x6b21;&#x8c03;&#x7528",{"_index":7978,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x56e0;&#x6b64;&#x5bf9;&#x4e00;&#x4e2a;&#x53ea;&#x63a5;&#x6536;&#x7684",{"_index":2906,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x56e0;&#x6b64;&#x6210;&#x5458",{"_index":1561,"title":{},"body":{"basic/json.html#序列化":{}}}],["x56e0;&#x6b64;&#x6574;&#x4e2a",{"_index":9086,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x56e0;&#x6b64;&#xff0c",{"_index":6284,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x56e0;&#x6b64;&#xff0c;&#x5728",{"_index":2148,"title":{},"body":{"basic/package.html#包":{}}}],["x56e0;&#x6b64;&#xff0c;&#x5728;&#x4e0b;&#x5217;&#x60c5;&#x51b5;&#x53ef;&#x4ee5;&#x8003;&#x8651;&#x4f7f;&#x7528;&#x6307;&#x9488;&#xff1a",{"_index":1725,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x56e0;&#x6b64;&#xff0c;&#x5e94;&#x8be5",{"_index":6938,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x56e0;&#x6b64;&#xff0c;&#x6211;&#x4eec;&#x5728;&#x8fd9;&#x91cc;&#x9996;&#x5148;&#x8981;&#x505a;&#x7684;&#x4e00;&#x4ef6;&#x4e8b;&#x5c31;&#x662f;&#xff1a;&#x4e00;&#x5b9a;&#x4e0d;&#x8981;&#x8fdd;&#x53cd;&#x4e0a;&#x8ff0;&#x89c4;&#x5219;&#x3002;&#x6211;&#x4eec;&#x5e94;&#x8be5;&#x5728;&#x6bcf;&#x6b21;&#x64cd;&#x4f5c;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x90fd;&#x53bb;&#x663e;&#x5f0f;&#x5730;&#x68c0;&#x67e5;&#x952e;&#x503c;&#x7684;&#x5b9e;&#x9645",{"_index":8346,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x56e0;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x65f6;&#x95f4;&#x957f;&#x800c;&#x963b;&#x585e;&#xff0c;p",{"_index":6508,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5728",{"_index":253,"title":{},"body":{"index.html#类型转换":{},"advance/gc.html#何时触发-GC":{},"basic/error.html#Recover-捕获异常":{},"basic/env_config.html#Go-Module":{},"basic/oop.html#String-方法":{},"basic/constant.html#iota":{},"basic/operator.html#算术运算符":{},"basic/package.html#import":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html#定时器":{},"basic/basic_data.html#字符串":{},"basic/test.html#测试":{},"basic/test.html#性能分析":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/text/strconv.html#字符串转为整型":{},"basic/reflect.html#reflect-ValueOf":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html#遍历目录":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html#LimitedReader-类型":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#竞争检查器":{},"standards/net/http.html#Request":{},"standards/data/sort.html#Search":{}}}],["x5728;&#x4e00;&#x4e2a",{"_index":6447,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5728;&#x4e00;&#x4e2a;&#x573a;&#x666f;&#x4e2d;&#xff1a;&#x670d;&#x52a1;&#x91cd;&#x542f;&#xff0c;&#x6d77;&#x91cf;&#x7684;&#x5ba2;&#x6237;&#x7aef;&#x63a5;&#x5165;&#xff0c;&#x77ac;&#x95f4;&#x5206;&#x914d;&#x4e86;&#x5927;&#x91cf;&#x5bf9;&#x8c61;&#xff0c;&#x8fd9;&#x4f1a;&#x5c06",{"_index":552,"title":{},"body":{"advance/gc.html#监控":{}}}],["x5728;&#x4e00;&#x4e9b;&#x573a;&#x5408;&#x4e0b;&#x91cc;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x901a;&#x9053;&#x7684;&#x65b9;&#x5f0f;&#x770b;&#x8d77;&#x6765;&#x90fd;&#x4f3c;&#x4e4e;&#x6709;&#x4e9b;&#x8e69;&#x811a;&#x3002;&#x6bd4;&#x5982;&#xff1a;&#x58f0;&#x660e;&#x4e00;&#x4e2a;&#x901a;&#x9053;&#xff0c;&#x4f7f;&#x5b83;&#x7684;&#x5bb9;&#x91cf;&#x4e0e;&#x6211;&#x4eec;&#x624b;&#x52a8;&#x542f;&#x7528;&#x7684",{"_index":8060,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5728;&#x4e0a;&#x9762",{"_index":9277,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5728;&#x4ee3;&#x7801;&#x4e2d;&#x6dfb;&#x52a0;&#x6ce8;&#x91ca;&#xff0c;&#x7528;&#x4e8e;&#x751f;&#x6210;&#x6587;&#x6863;&#x3002;go",{"_index":2801,"title":{},"body":{"commands/build.html#工具":{}}}],["x5728;&#x4f18;&#x5148;&#x7ea7;&#x961f;&#x5217;&#x4e2d;&#x7684;&#x4f4d;&#x7f6",{"_index":5321,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x5728;&#x503c;&#x4e3a",{"_index":1463,"title":{},"body":{"basic/map.html#map":{}}}],["x5728;&#x5176",{"_index":7584,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x5728;&#x5185;&#x90e8;&#xff0c",{"_index":3869,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5728;&#x5199",{"_index":192,"title":{},"body":{"index.html#package":{}}}],["x5728;&#x5199;&#x5165;&#x8fc7;&#x7a0b;&#x4e2d;&#x9047;&#x5230;&#x7684;&#x4efb;&#x4f55;&#x9519;&#x8bef;&#x4e5f;&#x5c06;&#x88ab;&#x8fd4;&#x56de;&#x3002",{"_index":6906,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x5728;&#x51c6;&#x5907;&#x5de5;&#x4f5c;&#x987a;&#x5229;&#x5b8c;&#x6210;&#x4e4b;&#x540e;&#xff0c;go",{"_index":4154,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x5728;&#x51fd;&#x6570;&#x4f53;&#x4e2d;&#xff0c;&#x51fd;&#x6570;&#x7684;&#x5f62;&#x53c2;&#x4f5c;&#x4e3a;&#x5c40;&#x90e8;&#x53d8;&#x91cf;&#xff0c;&#x88ab;&#x521d;&#x59cb;&#x5316;&#x4e3a;&#x8c03;&#x7528;&#x8005;&#x63d0;&#x4f9b;&#x7684;&#x503c;&#xff08;&#x51fd;&#x6570;&#x8c03;&#x7528;&#x5fc5;&#x987b;&#x6309;&#x7167;&#x58f0;&#x660e;&#x987a;&#x5e8f;&#x4e3a;&#x6240;&#x6709;&#x53c2;&#x6570;&#x63d0;&#x4f9b;&#x5b9e;&#x53c2;&#xff09;&#x3002;&#x51fd;&#x6570;&#x7684;&#x5f62;&#x53c2;&#x548c;&#x6709",{"_index":3122,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x5728;&#x51fd;&#x6570;&#x4f53;&#x5185;&#x6216;&#x4ee3;&#x7801;&#x5757;&#x5185;&#x58f0;&#x660e;&#x7684;&#x53d8;&#x91cf;&#x79f0;&#x4e4b;&#x4e3a;&#x5c40;&#x90e8;&#x53d8;&#x91cf;&#xff0c;&#x5b83;&#x4eec;&#x7684;&#x4f5c;&#x7528;&#x57df;&#x53ea;&#x5728;&#x4ee3;&#x7801;&#x5757;&#x5185;&#xff0c;&#x53c2;&#x6570;&#x548c;&#x8fd4;&#x56de;&#x503c;&#x53d8;&#x91cf;&#x4e5f;&#x662f;&#x5c40;&#x90e8;&#x53d8;&#x91cf;&#x3002",{"_index":2248,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5728;&#x51fd;&#x6570;&#x4f53;&#x5916;&#x58f0;&#x660e;&#x7684;&#x53d8;&#x91cf;&#x79f0;&#x4e4b;&#x4e3a;&#x5168;&#x5c40;&#x53d8;&#x91cf;&#xff0c",{"_index":2251,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5728;&#x51fd;&#x6570;&#x5185;&#x90e8;&#x58f0;&#x660e;&#x7684;&#x540d;&#x5b57;&#xff0c;&#x53ea;&#x80fd;&#x5728;&#x51fd;&#x6570;&#x5185;&#x90e8;&#x8bbf;&#x95e",{"_index":2264,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5728;&#x51fd;&#x6570;&#x5916;&#x90e8;&#xff08;&#x4e5f;&#x5c31;&#x662f;&#x5305;&#x7ea7;&#x8bed;&#x6cd5;&#x57df;&#xff09;&#x58f0;&#x660e;&#x7684;&#x540d;&#x5b57;&#x53ef;&#x4ee5;&#x5728;&#x540c;&#x4e00;&#x4e2a;&#x5305;&#x7684;&#x4efb;&#x4f55;&#x6e90;&#x6587;&#x4ef6;&#x4e2d;&#x8bbf;&#x95e",{"_index":2261,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5728;&#x5207;&#x6362;&#x7a0b;&#x5e8f;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5982;&#x679c;&#x4e0d;&#x4fdd;&#x5b58;&#x4e0a;&#x4e00;&#x4e2a;&#x7a0b;&#x5e8f;&#x7684;&#x72b6;&#x6001;&#xff08;&#x4e5f;&#x5c31;&#x662f;&#x6211;&#x4eec;&#x5e38;&#x8bf4;&#x7684",{"_index":6180,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5728;&#x5207;&#x7247",{"_index":9267,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5728;&#x521d;&#x59cb;&#x5316",{"_index":3430,"title":{},"body":{"standards/time.html#时区":{}}}],["x5728;&#x53c2;&#x6570",{"_index":6123,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x5728;&#x53c2;&#x6570;&#x5217;&#x8868;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x7c7b;&#x578b;&#x4e4b;&#x524d;&#x52a0;&#x4e0a;&#x7701;&#x7565;&#x7b26;&#x53f7",{"_index":3146,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x5728;&#x53f3;&#x4fa7;&#x800c;&#x975e;&#x5de6;&#x4fa7;&#x586b;&#x5145;&#x7a7a;&#x683c;&#xff08;&#x5de6;&#x5bf9;&#x9f50;&#x8be5;&#x533a;&#x57df;&#xff09",{"_index":4708,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5728;&#x540c;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x4e2d;&#xff0c",{"_index":3196,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5728;&#x540c;&#x4e00;&#x65f6;&#x523b;&#x8bbf;&#x95ee;&#x4e00;&#x4e2a;&#x5171;&#x4eab;&#x53d8;&#x91cf;&#xff1a",{"_index":7818,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x5728;&#x540c;&#x4e00;&#x73af;&#x5f62;&#x94fe;&#x8868;&#x4e2d;&#xff0c;&#x5219;&#x5220;&#x9664",{"_index":5275,"title":{},"body":{"standards/data/container.html#环":{}}}],["x5728;&#x5806;&#x4e0a;&#x5206;&#x914d;&#x5927;&#x4e8",{"_index":528,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x5728;&#x58f0;&#x660e;&#x4e00;&#x4e2a",{"_index":1243,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5728;&#x5927;&#x591a;&#x6570;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x7f13;&#x51b2;&#x901a;&#x9053;&#x4f1a;&#x4f5c;&#x4e3a;&#x6536;&#x53d1;&#x53cc;&#x65b9;&#x7684;&#x4e2d;&#x95f4;&#x4ef6;&#x3002;&#x6b63;&#x5982;&#x524d;&#x6587;&#x6240;&#x8ff0;&#xff0c;&#x5143;&#x7d20;&#x503c;&#x4f1a;&#x5148;&#x4ece;&#x53d1;&#x9001;&#x65b9;&#x590d;&#x5236;&#x5230;&#x7f13;&#x51b2;&#x901a;&#x9053;&#xff0c;&#x4e4b;&#x540e;&#x518d;&#x7531;&#x7f13;&#x51b2;&#x901a;&#x9053;&#x590d;&#x5236;&#x7ed9;&#x63a5;&#x6536;&#x65b9;&#x3002",{"_index":2950,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5728;&#x5927;&#x591a;&#x6570;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x4e2d;&#xff0c;&#x53ea;&#x8981;&#x9000;&#x51fa;&#x72b6;&#x6001;&#x7801;&#x4e0d;&#x662f",{"_index":668,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5728;&#x5b57;&#x7b26;&#x4e32",{"_index":5928,"title":{},"body":{"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{}}}],["x5728;&#x5b58;&#x50a8;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x53ea;&#x8981;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#x5df2;&#x5b58;&#x6709;&#x8fd9;&#x4e2a;&#x952e;&#xff0c;&#x5e76;&#x4e14;&#x8be5;&#x952e;&#x503c;&#x5bf9;&#x672a;&#x88ab;&#x6807;&#x8bb0;&#x4e3a;&#x201c;&#x5df2;&#x5220;&#x9664;&#x201d;&#xff0c;&#x5c31;&#x4f1a;&#x628a;&#x65b0;&#x503c;&#x5b58;&#x5230;&#x91cc;&#x9762;&#x5e76",{"_index":8386,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5728;&#x5b66;&#x4e60;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x8bed;&#x8a00;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x603b;&#x662f;&#x8981;&#x5148;&#x641e;&#x6e05;&#x695a;&#xff0c;&#x5f53;&#x7ed9;&#x4e00;&#x4e2a",{"_index":1711,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5728;&#x5b8c;&#x6210;&#x6e05;&#x7406;&#x64cd;&#x4f5c;&#x540e;&#xff0c",{"_index":392,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x5728;&#x5de5;&#x4f5c;&#x533a;&#x76ee;&#x5f55;&#x4e0b;&#x8fd0;&#x884c",{"_index":2820,"title":{},"body":{"commands/build.html#工具":{}}}],["x5728;&#x5e95;&#x5c42;&#xff0c;&#x4e00;&#x4e2a",{"_index":3787,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5728;&#x5f53;&#x524d;&#x76ee;&#x5f55;&#x4e0b;&#x521b;&#x5efa;&#x4e00;&#x4e2a",{"_index":5728,"title":{},"body":{"standards/os/filepath.html#符号链接指向的路径名":{}}}],["x5728;&#x6210;&#x529f;&#x8bfb;&#x53d6",{"_index":6792,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x5728;&#x6211;&#x4eec;&#x9700;&#x8981;&#x5b58;&#x50a8;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x6570;&#x503c;&#x7684;&#x65f6;&#x5019;&#x76f8;&#x5f53;&#x6709;&#x7528;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x53ef;&#x4ee5;&#x5b58;&#x50a8;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x6570;&#x503c;&#x3002",{"_index":2337,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5728;&#x6253;&#x5370;&#x7ed3;&#x6784;&#x4f53;&#x65f6;&#xff0c;&#x201c;&#x52a0;&#x53f7;&#x201d;&#x6807;&#x8bb0;&#xff08;%+v&#xff09;&#x4f1a;&#x6dfb;&#x52a0;&#x5b57;&#x6bb5;&#x540d;%#v",{"_index":4666,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5728;&#x6269;&#x5bb9;&#x7684;&#x65f6;&#x5019;&#xff0c",{"_index":3903,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5728;&#x627e;&#x5230;&#x754c;&#x5b9a;&#x7b26;&#x4e4b;&#x524d;&#x9047;&#x5230;&#x4e86",{"_index":5447,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x5728;&#x62ff;&#x5230;&#x4e86;&#x4e00;&#x4e2a;&#x7a7a;&#x95f2;&#x7684",{"_index":6275,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5728;&#x64a4;&#x9500;&#x51fd;&#x6570;&#x88ab;&#x8c03;&#x7528;&#x4e4b;&#x540e;&#xff0c;&#x5bf9;&#x5e94;&#x7684",{"_index":8258,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5728;&#x6574;&#x4e2a",{"_index":6554,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5728;&#x6587;&#x4ef6;&#x6d41;&#x7684",{"_index":6882,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x5728;&#x6587;&#x4ef6;&#x76f8;&#x5173;&#x64cd;&#x4f5c;&#x62a5;&#x9519;&#x65f6;&#xff0c;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":7555,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5728;&#x65e0;&#x9700;&#x6269;&#x5bb9;&#x65f6;&#xff0c",{"_index":1939,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x5728;&#x666e;&#x901a;&#x51fd;&#x6570;&#x6216;&#x65b9;&#x6cd5;&#x524d;&#x52a0;&#x5173;&#x952e;&#x5b57",{"_index":3173,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5728;&#x66ff;&#x6362;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x7684;&#x65f6;&#x5019;&#x6839;&#x672c;&#x7528;&#x4e0d;&#x7740;&#x9501;&#x3002;&#x53e6;&#x5916;&#xff0c;&#x8fd9;&#x4e2a;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x5728;&#x5b58;&#x50a8;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x8fd8;&#x5728;&#x503c;&#x4e4b;&#x4e0a",{"_index":8368,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5728;&#x6700;&#x540e;&#x4ece;&#x8fd9;&#x4e2a;&#x901a;&#x9053;&#x4e2d;&#x63a5;&#x6536;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x63a5;&#x6536;&#x7684;&#x6b21;&#x6570;&#x9700;&#x8981;&#x4e0e;&#x5176;&#x4ed6;&#x7684",{"_index":8066,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5728;&#x670d;&#x52a1;&#x6b63;&#x5e38;&#x4ee5;&#x540e;&#xff0c;&#x7531;&#x4e8e;&#x6d3b;&#x8dc3;&#x5bf9;&#x8c61;&#x8fdc;&#x8fdc;&#x5c0f;&#x4e8e;&#x6539;&#x9608;&#x503c;&#xff0c;&#x4f1a;&#x5bfc;&#x81f4",{"_index":555,"title":{},"body":{"advance/gc.html#监控":{}}}],["x5728;&#x672a;&#x521d;&#x59cb;&#x5316;&#x4e4b;&#x524d;&#x9ed8;&#x8ba4;&#x4e3a",{"_index":1406,"title":{},"body":{"basic/map.html#map":{}}}],["x5728;&#x67d0;&#x4e2a;&#x5143;&#x7d20;&#x524d;&#x63d2;&#x5165",{"_index":5256,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5728;&#x67d0;&#x4e2a;&#x5143;&#x7d20;&#x540e;&#x63d2;&#x5165",{"_index":5255,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5728;&#x67e5;&#x627e;&#x6307;&#x5b9a;&#x7684;&#x952e;&#x6240;&#x5bf9;&#x5e94;&#x7684;&#x503c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x603b;&#x4f1a;&#x5148;&#x53bb;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#x5bfb;&#x627e;&#xff0c;&#x5e76;&#x4e0d;&#x9700;&#x8981;&#x9501;&#x5b9a;&#x4e92;&#x65a5;&#x9501;&#x3002;&#x53ea;&#x6709;&#x5f53;&#x786e;&#x5b9a",{"_index":8381,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5728;&#x6808;&#x4e0a;&#x590d;&#x5236;&#x5c0f;&#x5bf9;&#x8c61;&#xff0c;&#x8981;&#x6bd4;&#x5806;&#x4e0a;&#x5206;&#x914d;&#x5185;&#x5b58;&#x8981;&#x5feb;&#x7684;&#x591a;&#x3002",{"_index":3140,"title":{},"body":{"basic/function.html#参数":{}}}],["x5728;&#x6b64",{"_index":653,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5728;&#x6b64;&#x65f6;&#x7684;&#x6240;&#x6709;&#x672a;&#x8bfb;&#x5185;&#x5bb9;&#x3002;&#x5982;&#x6b64;&#x4e00;&#x6765;&#xff0c",{"_index":3936,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5728;&#x76f8;&#x540c;&#x7684",{"_index":2930,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5728;&#x76f8;&#x7b49;&#x7684;&#x60c5;&#x51b5;&#xff0c;&#x4e0d;&#x8bba;&#x8fd9;&#x4e9b;&#x7ed3;&#x679c;&#x503c;&#x76f8;&#x7b49;&#x7684;&#x5b50;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x662f;&#x5426;&#x5b58;&#x5728;&#x4e8e;&#x4e0d;&#x540c;&#x7684",{"_index":1056,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5728;&#x7ebf;&#x670d;&#x52a1",{"_index":2816,"title":{},"body":{"commands/build.html#工具":{}}}],["x5728;&#x7ecf;&#x8fc7;&#x4e00;&#x5b9a;&#x65f6;&#x95f4;&#x6216;&#x5468;&#x671f;&#x6267;&#x884c;&#x67d0;&#x9879;&#x4efb;&#x52a1;&#xff08;&#x4e8b;&#x4ef6;&#x5904;&#x7406;&#x7684;&#x7279;&#x4f8b;&#xff09;&#x3002",{"_index":3409,"title":{},"body":{"standards/time.html#time":{}}}],["x5728;&#x8bbe;&#x8ba1;&#x4e4b;&#x521d;&#x5e76;&#x6ca1;&#x8003;&#x8651;&#x5c06",{"_index":6528,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5728;&#x8fd0;&#x884c;&#x671f;&#x95f4;&#x4fee;&#x6539",{"_index":6514,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5728;&#x8fd0;&#x884c;&#x7ed3;&#x675f;&#x4e4b;&#x524d;&#xff0c",{"_index":8064,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5728;&#x8fd9;&#x4e4b;&#x540e;&#xff0c;&#x4e00;&#x65e6;&#x518d;&#x6709;&#x65b0;&#x7684;&#x952e;&#x503c;&#x5bf9;&#x5b58;&#x5165;&#xff0c;&#x5b83;&#x5c31;&#x4f1a;&#x4f9d;&#x636e;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x53bb;&#x91cd;&#x5efa;&#x810f;&#x5b57;&#x5178;&#x3002;&#x8fd9;&#x4e2a;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x4f1a;&#x628a;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#x5df2;&#x88ab;&#x903b;&#x8f91;&#x5220;&#x9664;&#x7684;&#x952e;&#x503c;&#x5bf9;&#x8fc7;&#x6ee4;&#x6389;&#x3002",{"_index":8399,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5728;&#x8fd9;&#x51e0;&#x79cd;&#x7f16;&#x7801;&#x683c;&#x5f0f;&#x7684;&#x540d;&#x79f0;&#x4e2d;&#xff0c",{"_index":353,"title":{},"body":{"index.html#编码":{}}}],["x5728;&#x8fd9;&#x91cc;&#x4f20;&#x5165;&#x4e86;&#x201c;500",{"_index":6332,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5728;&#x94fe;&#x8868;&#x957f;&#x5ea6",{"_index":5257,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5728;&#x961f;&#x5217;&#x5934;&#x90e8;&#x63d2;&#x5165;&#x63a5;&#x4e0a;&#x65b0;&#x961f;&#x5217",{"_index":5259,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5728;&#x961f;&#x5217;&#x6700;&#x540e;&#x63d2;&#x5165;&#x63a5;&#x4e0a;&#x65b0;&#x961f;&#x5217",{"_index":5258,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5728;&#x9700;&#x8981;&#x6267;&#x884c;&#x67d0;&#x4e2a;&#x51fd;&#x6570;&#x4e2d;&#x7684",{"_index":3204,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5730;&#x4f20;&#x9012;&#x7ed9",{"_index":9302,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x5730;&#x5740",{"_index":1697,"title":{},"body":{"basic/pointer.html#指向指针的指针":{}}}],["x5730;&#x6267;&#x884c;&#x3002",{"_index":6297,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5730;&#x9009;&#x62e9;&#x4e00;&#x4e2a;&#x6267;&#x884c;&#x3002",{"_index":3008,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5783;&#x573e;&#x56de;&#x6536",{"_index":503,"title":{"advance/gc.html#垃圾回收":{}},"body":{}}],["x5783;&#x573e;&#x56de;&#x6536;&#x5668",{"_index":391,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x5783;&#x573e;&#x56de;&#x6536;&#x5668;&#x5728;&#x521d;&#x59cb;&#x5316;&#x65f6;&#xff0c;&#x8bbe;&#x7f6",{"_index":522,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x5783;&#x573e;&#x56de;&#x6536;&#x5668;&#x662f;&#x9700;&#x8981",{"_index":6534,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5783;&#x573e;&#x56de;&#x6536;&#x7684;&#x6210;&#x672c",{"_index":3139,"title":{},"body":{"basic/function.html#参数":{}}}],["x578b;&#x503c;&#xff08;&#x5373;&#xff1a",{"_index":8352,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x578b;&#x6574;&#x6570;&#x3002;&#x56e0;&#x4e3a",{"_index":4375,"title":{},"body":{"standards/data/big.html#big":{}}}],["x578b;&#x662f",{"_index":4797,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x578b;&#x7684;&#x6570;&#x7ec4;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x5728",{"_index":2380,"title":{},"body":{"basic/interface.html#接口":{}}}],["x578b;&#x80af;&#x5b9a;&#x4f1a;&#x5f15;&#x53d1",{"_index":8345,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x578b;&#x8f6c;&#x4e3a",{"_index":258,"title":{},"body":{"index.html#类型转换":{}}}],["x57df",{"_index":7373,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x57df;&#x5957;&#x63a5;&#x5b57;&#x7b49;&#x3002",{"_index":7553,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x57fa;&#x4e8e;&#x4e00;&#x4e2a;&#x65e0;&#x7f13;&#x5b58",{"_index":2927,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x57fa;&#x4e8e;&#x6d41;&#x5f0f;&#x7684;&#x89e3;&#x7801;&#x5668",{"_index":1586,"title":{},"body":{"basic/json.html#序列化":{}}}],["x57fa;&#x51c6;&#x6d4b;&#x8bd5",{"_index":4123,"title":{"basic/test.html#基准测试":{}},"body":{}}],["x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x8861;&#x91cf;&#x4e00;&#x4e9b;&#x51fd;&#x6570;&#x7684;&#x6027;&#x80fd;&#x3002",{"_index":4084,"title":{},"body":{"basic/test.html#测试":{}}}],["x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x5bf9;&#x4e8e;&#x8861;&#x91cf;&#x7279;&#x5b9a;&#x64cd;&#x4f5c;&#x7684;&#x6027;&#x80fd;&#x662f;&#x6709;&#x5e2e;&#x52a9;&#x7684;&#xff0c;go",{"_index":4133,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x57fa;&#x672c;&#x6388;&#x6743;&#x65f6;&#xff0c;&#x7528;&#x6237;&#x540d;&#x548c;&#x5bc6;&#x7801;&#x662f;&#x4e0d;&#x52a0;&#x5bc6;&#x7684",{"_index":8767,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x57fa;&#x672c;&#x6743;&#x9650;&#x63d0;&#x4f9b;&#x5177;&#x6709;&#x4e00;&#x5b9a;&#x6743;&#x9650;&#x7684",{"_index":8765,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x57fa;&#x672c;&#x7b56;&#x7565",{"_index":382,"title":{"advance/mm.html#基本策略":{}},"body":{}}],["x57fa;&#x7840;&#x636e;&#x7c7b;&#x578b",{"_index":3701,"title":{"basic/basic_data.html#基础据类型":{}},"body":{}}],["x57fa;&#x7840;&#x7c7b;&#x578b;&#xff0c;&#x6570;&#x503c;&#x3001;&#x5b57;&#x7b26;&#x4e32;&#x548c;&#x5e03;&#x5c14;&#x578b",{"_index":182,"title":{},"body":{"index.html#数据类型":{}}}],["x5806",{"_index":5291,"title":{"standards/data/container.html#堆":{}},"body":{}}],["x5806;&#x5177;&#x6709;&#x4ee5;&#x4e0b;&#x7279;&#x6027;&#xff1a",{"_index":5295,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x5806;&#x5256;&#x6790;&#x5219;&#x6807;&#x8bc6;&#x4e86;&#x6700;&#x8017;&#x5185;&#x5b58;&#x7684;&#x8bed;&#x53e5;&#x3002",{"_index":4137,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x5806;&#x603b;&#x662f;&#x4e00;&#x68f5;&#x5b8c;&#x5168;&#x6811;&#x3002;&#x5373;&#x9664;&#x4e86;&#x6700;&#x5e95;&#x5c42;&#xff0c;&#x5176;&#x4ed6;&#x5c42;&#x7684;&#x8282;&#x70b9;&#x90fd;&#x88ab;&#x5143;&#x7d20;&#x586b;&#x6ee1;&#xff0c;&#x4e14;&#x6700;&#x5e95;&#x5c42;&#x5c3d;&#x53ef;&#x80fd;&#x5730;&#x4ece;&#x5de6;&#x5230;&#x53f3;&#x586b;&#x5165;&#x3002",{"_index":5297,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x5806;&#x901a;&#x5e38;&#x662f;&#x4e00;&#x4e2a;&#x53ef;&#x4ee5;&#x88ab;&#x770b;&#x505a;&#x4e00;&#x68f5;&#x6811;&#x7684;&#x6570;&#x7ec4;&#x5bf9;&#x8c61",{"_index":5294,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x5806;&#xff08;heap&#xff0c;&#x4e5f;&#x53eb;&#x4f18;&#x5148;&#x961f;&#x5217;&#xff09;&#x662f;&#x8ba1;&#x7b97;&#x673a;&#x79d1;&#x5b66;&#x4e2d;&#x4e00;&#x7c7b;&#x7279;&#x6b8a;&#x7684;&#x6570;&#x636e;&#x7ed3;&#x6784;&#x7684;&#x7edf;&#x79f0;&#x3002",{"_index":5293,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x585e;&#x76f4;&#x5230;&#x53e6;&#x4e00;&#x4e2a",{"_index":2945,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x586b;&#x5145;&#x524d;&#x5bfc;&#x7684;0&#x800c;&#x975e;&#x7a7a;&#x683c;&#xff1b;&#x5bf9;&#x4e8e;&#x6570;&#x5b57;&#xff0c;&#x8fd9;&#x4f1a;&#x5c06;&#x586b;&#x5145;&#x79fb;&#x5230;&#x6b63;&#x8d1f;&#x53f7;&#x4e4b;&#x540",{"_index":4724,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x586b;&#x6ee1;&#x3002;&#x8fd9;&#x91cc;&#x91c7;&#x7528;&#x7684;&#x9a8c;&#x8bc1;&#x65b9;&#x6cd5;&#x662f;&#x5206;&#x914d;&#x4e00;&#x4e2a;&#x66f4;&#x5927;&#x7684;&#xff08;&#x4e24;&#x500d;&#xff09",{"_index":7629,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x58f0;&#x660e",{"_index":226,"title":{"index.html#声明":{}},"body":{"basic/struct.html#结构体":{}}}],["x58f0;&#x660e;&#x4e00;&#x4e2a;&#x540d;&#x53eb",{"_index":3155,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x58f0;&#x660e;&#x4e00;&#x4e2a;`string`&#x7c7b;&#x578b",{"_index":1348,"title":{},"body":{"basic/constant.html#常量":{}}}],["x58f0;&#x660e;&#x4e00;&#x7ec4",{"_index":2409,"title":{},"body":{"basic/var.html#声明一组变量":{}}}],["x58f0;&#x660e;&#x4e00;&#x7ec4;&#x4e0d;&#x540c;&#x7c7b;&#x578b",{"_index":1349,"title":{},"body":{"basic/constant.html#常量":{},"basic/var.html#声明一组变量":{}}}],["x58f0;&#x660e;&#x4e00;&#x7ec4;&#x53d8;&#x91cf",{"_index":2408,"title":{"basic/var.html#声明一组变量":{}},"body":{}}],["x58f0;&#x660e;&#x4e0b;&#x9762;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x5bfc;&#x5165;&#x4e00;&#x7cfb;&#x5217;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x7684;&#x5305;&#x3002;&#x6bd4;&#x5982",{"_index":2150,"title":{},"body":{"basic/package.html#import":{}}}],["x58f0;&#x660e;&#x4e2d;&#xff0c;&#x88ab;&#x91cd;&#x7f6e;&#x4e3a",{"_index":1359,"title":{},"body":{"basic/constant.html#iota":{}}}],["x58f0;&#x660e;&#x51fd;&#x6570",{"_index":230,"title":{"basic/function.html#声明函数":{}},"body":{"index.html#声明":{}}}],["x58f0;&#x660e;&#x51fd;&#x6570;&#x53d8;&#x91cf",{"_index":3152,"title":{},"body":{"basic/function.html#函数作为值":{}}}],["x58f0;&#x660e;&#x53d8;&#x91cf",{"_index":227,"title":{},"body":{"index.html#声明":{}}}],["x58f0;&#x660e;&#x53d8;&#x91cf;&#x548c;&#x5e38;&#x91cf",{"_index":162,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x58f0;&#x660e;&#x53d8;&#x91cf;&#xff0c;&#x5fc5;&#x987b;&#x4f7f;&#x7528;&#x7a7a;&#x683c;&#x9694;&#x5f00;&#xff1a",{"_index":2396,"title":{},"body":{"basic/var.html#变量":{}}}],["x58f0;&#x660e;&#x53d8;&#x91cf;&#xff0c;&#x9ed8;&#x8ba4",{"_index":1403,"title":{},"body":{"basic/map.html#map":{}}}],["x58f0;&#x660e;&#x5e38;&#x91cf",{"_index":228,"title":{},"body":{"index.html#声明":{}}}],["x58f0;&#x660e;&#x5e38;&#x91cf;&#xff0c;&#x8fd0;&#x884c;&#x65f6;&#x4e0d;&#x53ef;&#x6539;&#x53d8;&#xff08;&#x53ea;&#x8bfb;&#xff09;&#xff0c;&#x6ce8;&#x610f;&#x5e38;&#x91cf;&#x7684",{"_index":1342,"title":{},"body":{"basic/constant.html#常量":{}}}],["x58f0;&#x660e;&#x6240;&#x5c5e;&#x5305;&#x540d;&#x548c;&#x5bfc;&#x5165;&#x5305;&#x3002",{"_index":163,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x58f0;&#x660e;&#x6240;&#x5c5e;&#x7684;&#x4ee3;&#x7801;&#x5305;&#x4e0e;&#x5176;&#x6240;&#x5728;&#x76ee;&#x5f55;&#x7684;&#x540d;&#x79f0;&#x4e0d;&#x540c;&#x65f6",{"_index":2183,"title":{},"body":{"basic/package.html#点操作":{}}}],["x58f0;&#x660e;&#x6240;&#x5c5e;&#x7684;&#x4ee3;&#x7801;&#x5305;&#x540d;&#x79f0;&#x5bf9;&#x5e94;&#x3002;&#x4e3a;&#x4e86;&#x4e0d;&#x8ba9;&#x8be5;&#x4ee3;&#x7801;&#x5305;&#x7684;&#x4f7f;&#x7528;&#x8005;&#x4ea7;&#x751f;&#x56f0;&#x60d1;&#xff0c;&#x6211;&#x4eec;&#x603b;&#x662f;&#x5e94;&#x8be5;&#x8ba9;&#x58f0;&#x660e;&#x7684;&#x5305;&#x540d;&#x4e0e;&#x5176;&#x7236;&#x76ee;&#x5f55;&#x7684;&#x540d;&#x79f0;&#x4e00;&#x81f4;&#x3002",{"_index":2186,"title":{},"body":{"basic/package.html#点操作":{}}}],["x58f0;&#x660e;&#x6570;&#x7ec4",{"_index":781,"title":{},"body":{"basic/array.html#数组":{}}}],["x58f0;&#x660e;&#x6570;&#x7ec4;&#xff1a",{"_index":766,"title":{},"body":{"basic/array.html#数组":{}}}],["x58f0;&#x660e;&#x7c7b;&#x578b",{"_index":229,"title":{},"body":{"index.html#声明":{}}}],["x58f0;&#x660e;&#x8bed;&#x53e5;&#x3002;&#x6bd4;&#x5982",{"_index":194,"title":{},"body":{"index.html#package":{},"index.html#声明":{}}}],["x58f0;&#x660e;&#x8bed;&#x53e5;&#x4f5c;&#x7528;&#x57df;&#x8303;&#x56f4;&#x7684;&#x5927;&#x5c0f;&#x3002",{"_index":2258,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x58f0;&#x660e;&#x8bed;&#x53e5;&#x7684;&#x4f5c;&#x7528;&#x57df;&#x662f;&#x6307;&#x6e90;&#x4ee3;&#x7801;&#x4e2d;&#x53ef;&#x4ee5;&#x6709;&#x6548;&#x4f7f;&#x7528;&#x8fd9;&#x4e2a;&#x540d;&#x5b57;&#x7684;&#x8303;&#x56f4;&#x3002",{"_index":2246,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5904;&#x4e8e;&#x7b49;&#x5f85;&#x72b6;&#x6001;&#xff0c;&#x7b49;&#x5230;&#x901a;&#x77e5;&#x5230;&#x6765;&#x65f6;&#x518d;&#x51b3;&#x5b9a;&#x662f;&#x5426;&#x5524;&#x9192;&#x5b83;&#x3002;&#x6b64;&#x65f6;&#xff0c;&#x8fd9;&#x4e2a",{"_index":7939,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5904;&#x5199;&#x5165",{"_index":6883,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x5904;&#x5f00;&#x59cb;&#xff0c;&#x5c06",{"_index":6853,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x5904;&#x7406;&#x5668;&#x3002",{"_index":9111,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x5904;&#x7406;&#x5668;&#x548c;&#x4e00;&#x4e2a;&#x7a7a;&#x5b57;&#x7b26;&#x4e32;&#x6a21;&#x5f0f;&#x3002",{"_index":8958,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5904;&#x7406;&#x5668;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c",{"_index":8953,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5904;&#x7406;&#x8bf7;&#x6c42;&#xff0c;&#x4e3b;&#x8981;&#x903b;&#x8f91;&#x90fd;&#x5728",{"_index":9019,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5904;&#x7684;&#x57fa;&#x672c;&#x6570;&#x636e;&#x6d41;&#x4e2d;&#x3002;&#x5b83;&#x8fd4;&#x56de;&#x4ec",{"_index":6872,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x5904;&#x8bfb;&#x53d6",{"_index":6988,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x5907;&#x7528;&#x683c;&#x5f0f;&#xff1a;&#x4e3a;&#x516b;&#x8fdb;&#x5236;&#x6dfb;&#x52a0;&#x524d;&#x5bfc",{"_index":4709,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x590d;&#x5236;&#x5230",{"_index":7050,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x590d;&#x5236;&#x7684;&#x90a3;&#x4e2a;&#x503c;&#x7684;&#x4e00;&#x4e2a;&#x5feb;&#x7167;&#x3002;&#x4e4b;&#x540e;&#xff0c;&#x4e0d;&#x8bba;&#x540e;&#x8005;&#x5b58;&#x50a8;&#x7684;&#x503c;&#x600e;&#x6837;&#x6539;&#x53d8;&#xff0c;&#x90fd;&#x4e0d;&#x4f1a;&#x5f71;&#x54cd;&#x5230;&#x524d;&#x8005;&#x3002",{"_index":8045,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x590d;&#x5408;&#x7c7b;&#x578b;&#xff0c;&#x6570;&#x7ec4;&#x548c;&#x7ed3;&#x6784;&#x4f53",{"_index":183,"title":{},"body":{"index.html#数据类型":{}}}],["x590d;&#x6570",{"_index":3714,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x590d;&#x6570;&#x7684;&#x7ef4;&#x6570",{"_index":6110,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x5916;&#x7684;&#x4efb;&#x4f55;&#x903b;&#x8f91;&#x91cc;&#x9762;&#x4f7f;&#x7528;&#xff0c;&#x5982;&#x679c;&#x4f60;&#x8981;&#x5728",{"_index":315,"title":{},"body":{"index.html#类型断言":{}}}],["x5916;&#x9762;&#x5224;&#x65ad;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x5c31;&#x4f7f;&#x7528",{"_index":316,"title":{},"body":{"index.html#类型断言":{}}}],["x5916;&#xff0c;&#x8fd8;&#x6709",{"_index":1822,"title":{},"body":{"basic/operator.html#赋值运算符":{}}}],["x591a;&#x4e2a;&#x5b57;&#x6bb5;&#x6765;&#x5b9e;&#x73b0;&#x529f;&#x80fd;&#x5f3a;&#x5927;&#x7684;&#x7c7b;&#x578b;&#xff0c;&#x5374;&#x4e0d;&#x4f1a;&#x6709;&#x591a;&#x91cd;&#x7ee7;&#x627f;&#x90a3;&#x6837;&#x590d;&#x6742;&#x7684;&#x5c42;&#x6b21;&#x7ed3;&#x6784;&#x548c;&#x53ef;&#x89c2;&#x7684;&#x7ba1;&#x7406;&#x6210;&#x672c;&#x3002",{"_index":1285,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x591a;&#x4e86;&#x4e00;&#x6761;&#x8bb0;&#x5f55;&#xff0c;&#x5373;&#x591a;&#x4e86;&#x4e00;&#x4e2a;&#x8fde;&#x63a5;&#xff0c",{"_index":4483,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x591a;&#x4f59;&#x7684;&#x90e8;&#x5206;&#x6784;&#x6210;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5c0f;&#x7684",{"_index":410,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x591a;&#x4f59;&#x90e8;&#x5206;&#x5904;&#x4e8e;&#x7a7a;&#x95f2;&#x72b6;&#x6001;&#xff0c;&#x5728",{"_index":1947,"title":{},"body":{"basic/slice.html#长度和容量":{}}}],["x591a;&#x53d8;&#x91cf;&#x8d4b;&#x503c",{"_index":2440,"title":{},"body":{"basic/var.html#赋值":{}}}],["x591a;&#x7ebf;&#x7a0b;&#x548c;&#x591a;&#x8fdb;&#x7a0b;&#x662f;&#x5e76;&#x884c;&#x7684;&#x57fa;&#x672c;&#x6761;&#x4ef6;&#xff0c;&#x4f46;&#x662f;&#x5355;&#x7ebf;&#x7a0b;&#x53ef;&#x4ee5;&#x5229;&#x7528",{"_index":6190,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x591a;&#x8def;&#x590d;&#x7528",{"_index":2991,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x591a;&#x8def;&#x590d;&#x7528;&#x3002",{"_index":3001,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x591a;&#x90e8;&#x5206",{"_index":8781,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x591a;&#x989d;&#x5916;&#x7684;&#x5224;&#x65ad;&#xff0c;&#x8fd8;&#x7528;&#x5230;&#x4e86",{"_index":3752,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x591f;&#x5bb9;&#x7eb3;&#x65b0;&#x7684;&#x5185;&#x5bb9;&#x3002",{"_index":3905,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5927;&#x4e8e",{"_index":5505,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x5927;&#x591a;&#x6570;&#x7a0b;&#x5e8f;&#x90fd;&#x671f;&#x671b;&#x80fd;&#x591f;&#x4f7f;&#x7528",{"_index":7325,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5927;&#x5bf9;&#x8c61;&#x5efa;&#x8bae;&#x4f7f;&#x7528",{"_index":1247,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5927;&#x5c0f;&#x3002",{"_index":3726,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5927;&#x5c0f;&#x5199;&#x8f6c;&#x6362",{"_index":3781,"title":{"standards/text/strings.html#大小写转换":{}},"body":{"basic/basic_data.html#字符串":{}}}],["x5927;&#x5c0f;&#x5199;&#x8f6c;&#x6362;&#xff1b",{"_index":5918,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x5927;&#x5c0f;&#x7684;&#x5185;&#x5b58;&#x7a7a;&#x95f4;&#xff0c;&#x4f9d;&#x6b21;&#x7c7b;&#x63a8;&#x3002;&#x8fd9;&#x4e2a;&#x673a;&#x5236;&#x7684;&#x597d;&#x5904;&#x5728;&#x80fd;&#x591f;&#x63d0;&#x5347;&#x8fd0;&#x7b97;&#x6027;&#x80fd;&#xff0c;&#x56e0;&#x4e3a;&#x5185;&#x5b58;&#x7684;&#x91cd;&#x65b0;&#x5212;&#x5206;&#x4f1a;&#x964d;&#x4f4e;&#x6027;&#x80fd;&#x3002",{"_index":1950,"title":{},"body":{"basic/slice.html#长度和容量":{}}}],["x5927;&#x6982;&#x662f",{"_index":6200,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5927;&#x7684;&#x6574;&#x578b;&#x6570;&#x5b57;&#x662f;&#x901a;&#x8fc7",{"_index":4369,"title":{},"body":{"standards/data/big.html#big":{}}}],["x5927;&#x90e8;&#x5206;&#x65f6;&#x5019;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x9700;&#x8981;&#x5173;&#x5fc3;&#x8fde;&#x63a5;&#x4e0d;&#x91ca;&#x653e;&#x95ee;&#x9898;&#xff0c;&#x5b83;&#x4eec;&#x4f1a;&#x81ea;&#x52a8;&#x8fd4;&#x56de;&#x7ed9;&#x8fde;&#x63a5;&#x6c60;&#xff0c;&#x53ea;&#x6709",{"_index":4499,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5927;&#x91cf;&#x7684;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x6765;&#x5b58;&#x53d6;&#x952e;&#x548c;&#x503c;&#xff0c;&#x5e76;&#x4f7f;&#x7528;&#x4e86;&#x4e24;&#x4e2a;&#x539f;&#x751f;&#x7684",{"_index":8357,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5934;&#x3002",{"_index":8849,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5934;&#x4e0a",{"_index":6446,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5934;&#x5b57;&#x6bb5",{"_index":8756,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5956;&#x91d1",{"_index":2374,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5982",{"_index":2202,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5982;&#x4e0a;&#x9762;&#x7684;&#xff1a",{"_index":1557,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5982;&#x4e0d;&#x540c;&#x6e29;&#x5ea6;&#x5355;&#x4f4d;&#x5206;&#x522b;&#x5b9a;&#x4e49;&#x4e3a;&#x4e0d;&#x540c;&#x7684;&#x7c7b;&#x578b;&#xff1a",{"_index":276,"title":{},"body":{"index.html#自定义类型":{}}}],["x5982;&#x4f55;&#x5c06;&#x7a0b;&#x5e8f;&#x5185;&#x7684;&#x4f17;&#x591a",{"_index":6451,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5982;&#x4f55;&#x8ba9",{"_index":6523,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5982;&#x4f55;&#x9009;&#x62e9",{"_index":1240,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5982;&#x679c",{"_index":265,"title":{},"body":{"index.html#类型转换":{},"basic/array.html#数组":{},"concurrent/channel.html#channel":{},"standards/time.html#时区":{},"standards/data/container.html#环":{},"standards/io/bufio.html#bufio-Reader":{},"standards/os/filepath.html#符号链接指向的路径名":{},"standards/os/filepath.html#遍历目录":{},"standards/text/strings.html#分割字符串":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/os/os.html#目录与链接":{},"standards/net/http.html#Request":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html#sort":{}}}],["x5982;&#x679c;&#x4e00;&#x4e2a",{"_index":2926,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5982;&#x679c;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x4e2d;&#x6709;&#x591a;&#x6761",{"_index":3193,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5982;&#x679c;&#x4e00;&#x4e2a;&#x5b57;&#x6bb5;&#x7684;&#x58f0;&#x660e;&#x4e2d;&#x53ea;&#x6709;&#x5b57;&#x6bb5;&#x7684;&#x7c7b;&#x578b;&#x540d;&#x800c;&#x6ca1;&#x6709;&#x5b57;&#x6bb5;&#x7684;&#x540d;&#x79f0;&#xff0c;&#x90a3;&#x4e48;&#x5b83;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x79f0;&#x4e3a;&#x533f;&#x540d;&#x5b57;&#x6bb5;&#x3002",{"_index":2066,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5982;&#x679c;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x540d;&#x672c;&#x8eab;&#x662f;&#x4e00;&#x4e2a;&#x6307;&#x9488;&#x7684;&#x8bdd;&#xff0c;&#x662f;&#x4e0d;&#x5141;&#x8bb8;&#x5176;&#x51fa;&#x73b0;&#x5728;&#x63a5;&#x6536;&#x5668;&#x4e2d;&#x7684",{"_index":1239,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5982;&#x679c;&#x4e0d;&#x5b58;&#x5728;&#x5c06;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x6587;&#x4ef6",{"_index":7352,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5982;&#x679c;&#x4e24;&#x4e2a;&#x503c;&#x76f8;&#x7b49;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x8c03;&#x7528",{"_index":8192,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5982;&#x679c;&#x4f60;&#x6709;&#x591a;&#x4e2a;&#x53ea;&#x9700;&#x8981;&#x6267;&#x884c;&#x4e00;&#x6b21;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x5e94;&#x8be5;&#x4e3a;&#x5b83;&#x4eec;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#x90fd;&#x5206;&#x914d;&#x4e00;&#x4e2a",{"_index":8122,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5982;&#x679c;&#x4f60;&#x7684;&#x7f51;&#x7ad9;&#x5b58;&#x653e;&#x5728;&#x5b50;&#x76ee;&#x5f55;&#x4e2d;&#xff0c;&#x4f8b;&#x5982",{"_index":2584,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x5982;&#x679c;&#x4f60;&#x8981;&#x8bbe;&#x5b9a;&#x8fd9;&#x4e2a;&#x91c7;&#x6837;&#x9891;&#x7387;&#xff0c;&#x90a3;&#x4e48;&#x8d8a;&#x65e9;&#x8bbe;&#x5b9a;&#x8d8a;&#x597d;&#xff0c;&#x5e76;&#x4e14;&#x53ea;&#x5e94;&#x8be5;&#x8bbe;&#x5b9a;&#x4e00;&#x6b21;&#xff0c;&#x5426;&#x5219;&#x5c31;&#x53ef;&#x80fd;&#x4f1a;&#x5bf9",{"_index":4271,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5982;&#x679c;&#x4f7f;&#x7528",{"_index":1760,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5982;&#x679c;&#x4fe1;&#x7bb1;&#x91cc;&#x6ca1;&#x6709;&#x60c5;&#x62a5;&#xff0c;&#x90a3;&#x4e48;&#x6211;&#x5c31;&#x628a;&#x65b0;&#x60c5;&#x62a5;&#x653e;&#x8fdb;&#x53bb;&#xff0c;&#x5173;&#x4e0a;&#x4fe1;&#x7bb1;&#x3001;&#x9501;&#x4e0a;&#x9501;&#xff0c;&#x7136;&#x540e;&#x79bb;&#x5f00;&#x3002;&#x7528;&#x4ee3;&#x7801;&#x8868;&#x8fbe;&#x51fa;&#x6765;&#x5c31;&#x662f",{"_index":7925,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5982;&#x679c;&#x5199;&#x64cd;&#x4f5c;&#x8fd8;&#x6ca1;&#x6709;&#x8fdb;&#x884c;&#x5b8c;&#xff0c;&#x8bfb;&#x64cd;&#x4f5c;&#x5c31;&#x6765;&#x8bfb;&#x4e86;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x53ea;&#x80fd;&#x8bfb;&#x5230;&#x4ec5;&#x4fee;&#x6539;&#x4e86;&#x4e00;&#x90e8;&#x5206;&#x7684;&#x503c;&#x3002;&#x8fd9;&#x663e;&#x7136;&#x7834;&#x574f;&#x4e86;&#x503c;&#x7684;&#x5b8c;&#x6574;&#x6027;&#xff0c;&#x8bfb;&#x51fa;&#x6765;&#x7684;&#x503c;&#x4e5f;&#x662f;&#x5b8c;&#x5168;&#x9519;&#x8bef;&#x7684;&#x3002",{"_index":8038,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x5982;&#x679c;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x65e0;&#x540d;&#x53d8;&#x91cf;&#x6216;&#x8005;&#x6ca1;&#x6709;&#x8fd4;&#x56de;&#x503c;&#xff0c;&#x8fd4;&#x56de;&#x503c;&#x5217;&#x8868;&#x7684;&#x62ec;&#x53f7;&#x53ef;&#x4ee5;&#x7701;&#x7565;&#x3002;&#x5982;&#x679c;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x58f0;&#x660e;&#x6ca1;&#x6709;&#x8fd4;&#x56de;&#x503c;&#x5217;&#x8868;&#xff0c;&#x90a3;&#x4e48;&#x8fd9;&#x4e2a",{"_index":3113,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x5982;&#x679c;&#x524d;&#x7f00;&#x662f",{"_index":4642,"title":{},"body":{"standards/io/fmt.html#Print":{},"standards/io/fmt.html#Scan":{}}}],["x5982;&#x679c;&#x52a0;&#x5165;&#x4e86;&#x9ed8;&#x8ba4;&#x5206;&#x652f;&#xff0c;&#x90a3;&#x4e48;&#x65e0;&#x8bba;&#x6d89;&#x53ca;&#x901a;&#x9053;&#x64cd;&#x4f5c;&#x7684;&#x8868;&#x8fbe;&#x5f0f;&#x662f;&#x5426;&#x6709;&#x963b;&#x585e;&#xff0c",{"_index":3018,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5982;&#x679c;&#x5305;&#x4e2d;&#x542b;&#x6709;&#x591a;&#x4e2a;&#x6e90;&#x6587;&#x4ef6;&#xff0c;&#x6784;&#x5efa;&#x5de5;&#x5177;&#x9996;&#x5148;&#x4f1a;&#x5c06",{"_index":2214,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5982;&#x679c;&#x5305;&#x662f;&#x4e00;&#x4e2a;&#x5e93;&#xff0c;&#x5219;&#x5ffd;&#x7565;&#x8f93;&#x51fa;&#x7ed3;&#x679c;&#xff1b;&#x8fd9;&#x53ef;&#x4ee5;&#x7528;&#x4e8e;&#x68c0;&#x6d4b;&#x5305;&#x662f;&#x53ef;&#x4ee5;&#x6b63;&#x786e;&#x7f16;&#x8bd1;&#x7684;&#x3002",{"_index":2733,"title":{},"body":{"commands/build.html#工具":{}}}],["x5982;&#x679c;&#x53ef;&#x4ee5;&#xff0c;&#x90a3;&#x4e48;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#x4f1a;&#x5728;&#x5f53;&#x524d;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x4e4b;&#x4e0a;&#xff0c;&#x8fdb;&#x884c;&#x957f;&#x5ea6;&#x6269;&#x5145;&#x3002;&#x66f4;&#x5177;&#x4f53;&#x5730;&#x8bf4;&#xff0c;&#x5982;&#x679c;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x4e0e;&#x5176;&#x957f;&#x5ea6;&#x7684;&#x5dee;&#xff0c;&#x5927;&#x4e8e;&#x6216;&#x7b49;&#x4e8e;&#x53e6;&#x9700;&#x7684;&#x5b57",{"_index":3906,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5982;&#x679c;&#x53ef;&#x80fd;&#xff0c;&#x6253;&#x5f00;&#x65f6;&#x6e05;&#x7a7a;&#x6587;&#x4ef6",{"_index":7355,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5982;&#x679c;&#x5728",{"_index":8768,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5982;&#x679c;&#x5728;&#x4e00;&#x4e2a;&#x6b64;&#x7c7b;&#x503c;&#x7684",{"_index":8105,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5982;&#x679c;&#x5728;&#x6211;&#x4eec;&#x8c03;&#x7528",{"_index":729,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x5982;&#x679c;&#x5904;&#x7406;&#x7684;&#x7ed3;&#x679c;&#x662f;&#x7a7a;&#x5b57;&#x7b26;&#x4e32;&#xff0c;clean",{"_index":5722,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x5982;&#x679c;&#x591a;&#x4e2a",{"_index":1071,"title":{},"body":{"basic/flow.html#select":{},"concurrent/channel.html#channel":{}}}],["x5982;&#x679c;&#x5b57;&#x7b26;&#x4e32",{"_index":5973,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x5982;&#x679c;&#x5bf9;&#x57fa;&#x4e8e;&#x7c7b;&#x6765;&#x5b9e;&#x73b0;&#x9762;&#x5411;&#x5bf9;&#x8c61;&#x7684;&#x8bed;&#x8a00;&#x6bd4;&#x8f83;&#x719f;&#x6089;&#x7684;&#x8bdd;&#xff0c;&#x53ef;&#x80fd;&#x4f1a;&#x503e;&#x5411;&#x4e8e;&#x5c06",{"_index":1261,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x5982;&#x679c;&#x5bfc;&#x5165;&#x4e24;&#x4e2a;&#x76f8;&#x540c;&#x540d;&#x5b57;&#x7684;&#x5305;&#xff0c;&#x5982",{"_index":2169,"title":{},"body":{"basic/package.html#点操作":{}}}],["x5982;&#x679c;&#x5f53;&#x524d;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x7684;&#x4e00;&#x534a;&#x4ecd;&#x7136;&#x5927;&#x4e8e;&#x6216;&#x7b49;&#x4e8e;&#x5176;&#x73b0;&#x6709;&#x957f;&#x5ea6;&#x518d;&#x52a0;&#x4e0a;&#x53e6;&#x9700;&#x7684;&#x5b57;&#x8282;&#x6570;&#x7684;&#x548c;&#xff0c;&#x5373;&#xff1a",{"_index":3909,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5982;&#x679c;&#x5f53;&#x524d;&#x7684",{"_index":7960,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x58f0;&#x660e;&#x4e00;&#x4e2a",{"_index":9058,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x81ea;&#x5df1;&#x751f;&#x6210;&#x8fd9;&#x6837;&#x7684;&#x503c;&#xff0c;&#x7136;&#x540e;&#x628a;&#x5b83;&#x4f5c;&#x4e3a;&#x201c;&#x7ed9;&#x5b9a;&#x7684;&#x5143;&#x7d20;&#x201d;&#x4f20;&#x7ed9;&#x94fe;&#x8868;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x90a3;&#x4e48;&#x4f1a;&#x53d1;&#x751f;&#x4ec0;&#x4e48;&#xff1f;&#x94fe;&#x8868;&#x4f1a;&#x63a5;&#x53d7;&#x5b83;&#x5417;&#xff1f",{"_index":5245,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x8981;&#x83b7;&#x53d6",{"_index":7531,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5982;&#x679c;&#x6587;&#x4ef6;&#x5f53;&#x524d;&#x957f;&#x5ea6;&#x5927;&#x4e8e;&#x53c2;&#x6570",{"_index":7482,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["x5982;&#x679c;&#x65e0;&#x6cd5;&#x505a;&#x5230;&#xff0c;&#x90a3;&#x4e48;&#x8fd9;&#x6761",{"_index":1049,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5982;&#x679c;&#x65e2;&#x6307;&#x5b9a",{"_index":9065,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5982;&#x679c;&#x6709;&#x591a;&#x4e2a",{"_index":2996,"title":{},"body":{"concurrent/channel.html#channel":{},"concurrent/sync_lock.html#同步锁":{}}}],["x5982;&#x679c;&#x67d0;&#x4e9b;&#x5b50;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x6709;&#x91cd;&#x590d;&#x5e76;&#x4e14;&#x5b83;&#x4eec;&#x4e0",{"_index":1062,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5982;&#x679c;&#x6ca1;&#x6709",{"_index":3004,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5982;&#x679c;&#x6ca1;&#x6709;&#x52a0;&#x5165;&#x9ed8;&#x8ba4;&#x5206;&#x652f;&#xff0c;&#x90a3;&#x4e48;&#x4e00;&#x65e6;&#x6240;&#x6709;&#x7684",{"_index":3021,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5982;&#x679c;&#x6ce8;&#x91ca;&#x540e;&#x4ec5;&#x8ddf;&#x7740;&#x5305;&#x58f0;&#x660e;&#x8bed;&#x53e5;&#xff0c;&#x90a3;&#x6ce8;&#x91ca;&#x5bf9;&#x5e94;&#x6574;&#x4e2a;&#x5305;&#x7684;&#x6587;&#x6863;&#x3002;&#x5305;&#x6587;&#x6863;&#x6ce8;&#x91ca;&#x53ea;&#x80fd;&#x6709;&#x4e00;&#x4e2a;&#x3002;&#x53ef;&#x4ee5;&#x5728;&#x4efb;&#x610f;&#x7684;&#x6e90;&#x6587;&#x4ef6;&#x4e2d;&#x3002",{"_index":2806,"title":{},"body":{"commands/build.html#工具":{}}}],["x5982;&#x679c;&#x78b0;&#x5230;&#x4f20;&#x9012;&#x4e00;&#x4e2a;&#x5927;&#x6570;&#x7ec4;&#x65f6;&#xff0c;&#x6548;&#x7387;&#x8f83;&#x4f4e;&#x3002;&#x8fd9;&#x4e2a;&#x65f6;&#x5019;&#x53ef;&#x4ee5;&#x663e;&#x793a;&#x7684;&#x4f20;&#x5165;&#x4e00;&#x4e2a;&#x6570;&#x7ec4;&#x6307;&#x9488",{"_index":793,"title":{},"body":{"basic/array.html#数组传入函数":{}}}],["x5982;&#x679c;&#x7a0b;&#x5e8f;&#x7ec8;&#x6b62;&#x524d;&#x9700;&#x8981;&#x5b9a;&#x65f6;&#x5668;&#x4e00;&#x76f4;&#x89e6;&#x53d1;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x66f4;&#x7b80;&#x5355;&#x65b9;&#x4fbf;&#x7684",{"_index":3589,"title":{},"body":{"standards/time.html#Ticker":{}}}],["x5982;&#x679c;&#x7ed3;&#x6784;&#x4f53;&#x6210;&#x5458;&#x540d;&#x5b57;&#x662f;&#x4ee5;&#x5927;&#x5199;&#x5b57;&#x6bcd;&#x5f00;&#x5934;&#x7684;&#xff0c;&#x90a3;&#x4e48;&#x8be5;&#x6210;&#x5458;&#x5c31;&#x662f;&#x5bfc;&#x51fa;&#x7684;&#x3002",{"_index":2042,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x5982;&#x679c;&#x7ed9;&#x5b9a;&#x8def;&#x5f84;&#x540d",{"_index":5641,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x5982;&#x679c;&#x88ab;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x548c;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x6709;&#x540c;&#x540d;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x90a3;&#x4e48;&#x8c03;&#x7528;&#x54ea;&#x4e00;&#x4e2a;&#x7684;&#x65b9;&#x6cd5",{"_index":2103,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5982;&#x679c;&#x88ab;&#x64cd;&#x4f5c;&#x7684;&#x952e;&#x503c;&#x5bf9;&#x5df2;&#x7ecf;&#x5b58;&#x5728;&#x4e8",{"_index":8404,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5982;&#x679c;&#x88ab;&#x8f6c;&#x6362;&#x4e3a",{"_index":3959,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5982;&#x679c;&#x8981;&#x4f7f;&#x7528;&#x964d;&#x5e8f;&#x6392;&#x5e8f;&#xff0c;&#x663e;&#x7136;&#x8981;&#x7528;&#x524d;&#x9762;&#x63d0;&#x5230;&#x7684",{"_index":9264,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5982;&#x679c;&#x8981;&#x67e5;&#x627e;&#x6574;&#x6570",{"_index":9266,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5982;&#x679c;&#x8bbe;&#x7f6e;&#x4e86",{"_index":3434,"title":{},"body":{"standards/time.html#时区":{}}}],["x5982;&#x679c;&#x8d85;&#x8fc7",{"_index":6562,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5982;&#x679c;&#x8def;&#x5f84;&#x662f;&#x7a7a;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x4f1a;&#x8fd4;&#x56d",{"_index":5632,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x5982;&#x679c;&#x8fd9;&#x4e24;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x91cc;&#x5b58;&#x5728;&#x540c;&#x540d;&#x7684;&#x5b57;&#x6bb5;&#xff0c",{"_index":2106,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5982;&#x679c;&#x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x6709;&#x591a;&#x90e8;&#x5206;&#x7ec4;&#x6210;&#x7684",{"_index":8779,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5982;&#x679c;&#x901a;&#x77e5;&#x5230;&#x6765;&#x5e76;&#x4e14;&#x51b3;&#x5b9a;&#x5524;&#x9192;&#x8fd9;&#x4e2a",{"_index":7942,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5982;&#x679c;&#x901a;&#x8fc7",{"_index":1944,"title":{},"body":{"basic/slice.html#长度和容量":{}}}],["x5982;&#x679c;&#x904d;&#x5386",{"_index":5799,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x5982;&#x679c;&#x91cd;&#x590d;&#x4f7f;&#x7528;&#x7b80;&#x77ed;&#x58f0;&#x660e;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x53d8;&#x91cf;&#xff0c;&#x4f1a;&#x62a5;&#x9519;&#xff1a",{"_index":2422,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x5982;&#x679c;&#x9488;&#x5bf9;&#x8bbe;&#x5907",{"_index":7521,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5982;&#x679c;&#x95f2;&#x7f6e;&#x5185;&#x5b58;&#x8fc7;&#x591a;&#xff0c;&#x5219;&#x5c1d;&#x8bd5;&#x628a;&#x90e8;&#x5206;&#x5185;&#x5b58;&#x8fd8;&#x7ed9;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#xff0c;&#x964d;&#x4f4e;&#x5f00;&#x9500;&#x3002",{"_index":388,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x5982;&#x679c;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x4e00;&#x4e2a",{"_index":8314,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5982;&#x679c;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x81ea;&#x5b9a;&#x4e49;&#x7684",{"_index":9030,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5982;&#x679c;&#x9700;&#x8981;&#x548c",{"_index":5645,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x5982;&#x679c;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x80fd;&#x5728;&#x4e00;&#x5f00;&#x59cb;&#x5c31;&#x786e;&#x5b9a;&#x6267;&#x884c;&#x5b50;&#x4efb;&#x52a1;&#x7684",{"_index":8161,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5982;&#xff1a",{"_index":2189,"title":{},"body":{"basic/package.html#包声明":{}}}],["x59d3;&#x540d",{"_index":9218,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x5b50;&#x4e32;&#x51fa;&#x73b0;&#x7684;&#x6b21;&#x6570;&#xff08;&#x5b57;&#x7b26;&#x4e32;&#x5339;&#x914d;&#xff09;&#xff1b",{"_index":5910,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x5b50;&#x53e5;&#x4e2d;&#x7684;&#x5b50;&#x8868;&#x8fbe;&#x5f0f;&#x603b;&#x662f;&#x4f1a;&#x88ab;&#x6700;&#x5148;&#x6c42;&#x503c;&#xff0c;&#x5728;&#x5224;&#x7b49;&#x7684;&#x65f6;&#x5019;&#x987a;&#x5e8f;&#x4e5f;&#x662f;&#x8fd9;&#x6837",{"_index":1060,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5b50;&#x53e5;&#x603b;&#x4f1a;&#x88ab;&#x9009;&#x4e2d;&#x3002",{"_index":1064,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5b50;&#x53e5;&#x7684",{"_index":1118,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b50;&#x53e5;&#x7684;&#x7f16;&#x5199;&#x987a;&#x5e8f;&#x5f88;&#x91cd;&#x8981;&#xff0c;&#x6700;&#x4e0a;&#x8fb9;&#x7684",{"_index":1059,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5b50;&#x53e5;&#x7684;&#x9009;&#x62e9;&#x4e0a;&#x662f;&#x5177;&#x6709;&#x552f;&#x4e00;&#x6027;&#x7684",{"_index":1052,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5b50;&#x64cd;&#x4f5c;&#x5417",{"_index":8035,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x5b50;&#x8fdb;&#x7a0b;&#x65f6;&#x4f1a;&#x5173;&#x95ed;&#x901a;&#x8fc7",{"_index":7360,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5b57;&#x5178;&#x4e2d;&#x53ef;&#x80fd;&#x4f1a;&#x6709;&#x8fd9;&#x4e2a;&#x952",{"_index":8383,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x5178;&#x5185;&#x7684;&#x5065;&#x503c;&#x5bf9;&#x5206;&#x914d;&#x5185;&#x5b58;&#xff0c;&#x56e0;&#x6b64;&#x65e0;&#x6cd5;&#x6b63;&#x5e38;&#x5de5;&#x4f5c",{"_index":239,"title":{},"body":{"index.html#make-和-new":{}}}],["x5b57;&#x6bb5",{"_index":5522,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x5b57;&#x6bb5;&#x3002;&#x5bf9;&#x4e8e",{"_index":8789,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5b57;&#x6bb5;&#x4e2d;&#x7684;&#x539f;&#x751f;&#x5b57;&#x5178;&#x4e00;&#x81f4;&#xff0c;&#x5b83;&#x7684;&#x952e;&#x7c7b;&#x578b",{"_index":8375,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x4e2d;&#xff0c;&#x7136;&#x540e;&#x628a;&#x4ee3;&#x8868;&#x810f;&#x5b57;&#x5178;&#x7684",{"_index":8397,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x4e2d;&#xff0c;&#x8be5;&#x5b57;&#x6bb5;&#x662f",{"_index":8361,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x4ee3;&#x8868;&#x3002;&#x5b83;&#x5b58;&#x50a8;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x65b9;&#x5f0f;&#x4e0",{"_index":8374,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x4ee3;&#x8868;&#x7740;&#x521b;&#x5efa;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x7684;&#x51fd;&#x6570;&#x3002;&#x5b83;&#x7684;&#x7c7b;&#x578b;&#x662f;&#x6ca1;&#x6709;&#x53c2;&#x6570;&#x4f46;&#x6709;&#x552f;&#x4e00;&#x7ed3;&#x679c;&#x7684;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#xff0c;&#x5373;&#xff1a",{"_index":8297,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5b57;&#x6bb5;&#x4f1a;&#x5728;&#x53d1;&#x9001;&#x5b8c;&#x8bf7;&#x6c42;&#x540e;&#x5173;&#x95ed;&#x3002",{"_index":8838,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5b57;&#x6bb5;&#x4f1a;&#x8d4b;&#x503c;&#x4e3a",{"_index":3584,"title":{},"body":{"standards/time.html#Ticker":{}}}],["x5b57;&#x6bb5;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x503c;&#xff0c;&#x5e76;&#x76f4;&#x63a5;&#x5c06;&#x5176;&#x8fd4;&#x56d",{"_index":8296,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5b57;&#x6bb5;&#x540d;&#x7684;&#x6210;&#x5458;&#x5728;&#x7f16;&#x7801;&#x540e;&#x53d8;&#x6210;&#x4e86",{"_index":1553,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5b57;&#x6bb5;&#x7684",{"_index":3583,"title":{},"body":{"standards/time.html#Ticker":{}}}],["x5b57;&#x6bb5;&#x7684;&#x503c;&#x4e0d;&#x662f",{"_index":8133,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5b57;&#x6bb5;&#x7684;&#x503c;&#x53d8;&#x4e3a",{"_index":8144,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5b57;&#x6bb5;&#x7684;&#x503c;&#x7f6e;&#x4e3a",{"_index":8398,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x7684;&#x503c;&#x90fd;&#x4f1a;&#x53d8;&#x4e3a",{"_index":8152,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5b57;&#x6bb5;&#x7684;&#x7c7b;&#x578b;&#x53ef;&#x77e5;&#xff0c",{"_index":8367,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x7684;&#x8d4b;&#x503c;&#x7528;&#x7684;&#x662f;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#xff0c;&#x5e76;&#x4e14;&#xff0c;&#x8fd9;&#x4e00;&#x64cd;&#x4f5c;&#x662f;&#x88ab;&#x6302;&#x5728",{"_index":8149,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5b57;&#x6bb5;&#x83b7;&#x53d6;&#x56de;&#x590d;&#x7684",{"_index":8868,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x5b57;&#x6bb5;&#xff1a",{"_index":5414,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x5b57;&#x7b26;&#x2019;&#x597d;&#x2019;&#x5bf9;&#x5e94;&#x7684;&#x7d22;&#x5f15;&#x503c;&#x5e76;&#x4e0d;&#x662f",{"_index":1140,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b57;&#x7b26;&#x3002",{"_index":1126,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b57;&#x7b26;&#x3002;&#x4e00;&#x4e2a",{"_index":3950,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x3002;&#x6bd4;&#x5982;&#xff0c;&#x2019;g&#x2019;&#x3001;&#x2019;o&#x2019;&#x3001;&#x2019;&#x7231;&#x2019;&#x3001;&#x2019;&#x597d;&#x2019;&#x3001",{"_index":3948,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x4e32",{"_index":2404,"title":{"basic/basic_data.html#字符串":{}},"body":{"basic/var.html#变量":{}}}],["x5b57;&#x7b26;&#x4e32;&#x4e0e;&#x5b57;&#x8282;&#x5207;&#x7247",{"_index":4695,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x5b50;&#x4e32;&#x66ff;&#x6362;&#xff1b",{"_index":5917,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x5b57;&#x7b26;&#x4e32;&#x503c",{"_index":3956,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x4e32;&#x5206;&#x5272;&#xff08;&#x5207;&#x5206;&#xff09;&#x4e3a",{"_index":5911,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x5b57;&#x7b26;&#x4e32;&#x548c;&#x5e03;&#x5c14;&#x503c;&#x4e4b;&#x95f4;&#x7684;&#x8f6c;&#x6362",{"_index":4970,"title":{"standards/text/strconv.html#字符串和布尔值之间的转换":{}},"body":{}}],["x5b57;&#x7b26;&#x4e32;&#x548c;&#x6d6e;&#x70b9;&#x6570;&#x4e4b;&#x95f4;&#x7684;&#x8f6c;&#x6362",{"_index":4977,"title":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}},"body":{}}],["x5b57;&#x7b26;&#x4e32;&#x57fa;&#x672c;&#x64cd;&#x4f5c",{"_index":3767,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x4e32;&#x5c31;&#x662f;&#x4e00;&#x4e32;&#x56fa;&#x5b9a;&#x957f;&#x5ea6;&#x7684;&#x5b57;&#x7b26;&#x8fde;&#x63a5;&#x8d77;&#x6765;&#x7684;&#x5b57;&#x7b26;&#x5e8f;&#x5217;&#xff0c;&#x4e0d;&#x53ef;&#x6539;&#x53d8;&#x3002;go",{"_index":3729,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x4e32;&#x5e38;&#x89c1;&#x64cd;&#x4f5c;&#x6709;&#xff1a",{"_index":5906,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x5b57;&#x7b26;&#x4e32;&#x64cd;&#x4f5c",{"_index":3737,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x4e32;&#x662f;&#x5426;&#x6709;&#x67d0;&#x4e2a;&#x524d;&#x7f00;&#x6216;&#x540e;&#x7f00;&#xff1b",{"_index":5912,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x5b57;&#x7b26;&#x4e32;&#x66ff;&#x6362",{"_index":5942,"title":{"standards/text/strings.html#字符串替换":{}},"body":{}}],["x5b57;&#x7b26;&#x4e32;&#x66ff;&#x6362;:&#x610f;&#x601d;&#x662f;&#xff1a;&#x5728;sourcestr&#x4e2d;&#xff0c;&#x628a;oldstr&#x7684;&#x524d;n&#x4e2a;&#x66ff;&#x6362;&#x6210;newstr&#xff0c;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x65b0;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5982;&#x679c;n0&#x5219;&#x5168;&#x90e8;&#x66ff;&#x6362",{"_index":3782,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x4e32;&#x8f6c;&#x4e3a;&#x6574;&#x578b",{"_index":4907,"title":{"standards/text/strconv.html#字符串转为整型":{}},"body":{}}],["x5b57;&#x7b26;&#x4e32;&#x91cd;&#x590d;&#x51e0;&#x6b21;&#xff1b",{"_index":5916,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x5b57;&#x7b26;&#x4e32;&#x957f;&#x5ea6;&#xff1b",{"_index":5907,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x5b57;&#x7b26;&#x5168;&#x90e8;&#x8f6c;&#x6362;&#x4e3a;&#x5927;&#x5199;&#x5b57;&#x7b26;&#xff1a",{"_index":5958,"title":{},"body":{"standards/text/strings.html#大小写转换":{}}}],["x5b57;&#x7b26;&#x5168;&#x90e8;&#x8f6c;&#x6362;&#x4e3a;&#x5c0f;&#x5199;&#x5b57;&#x7b26;&#xff1a",{"_index":5957,"title":{},"body":{"standards/text/strings.html#大小写转换":{}}}],["x5b57;&#x7b26;&#x548c;&#x7ecf;&#x8fc7",{"_index":3862,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x6216;&#x5b50;&#x4e32;&#x5728;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x9996;&#x6b21;&#x51fa;&#x73b0;&#x7684;&#x4f4d;&#x7f6e;&#x6216;&#x6700;&#x540e;&#x4e00;&#x6b21;&#x51fa;&#x73b0;&#x7684;&#x4f4d;&#x7f6e;&#xff1b",{"_index":5913,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x5b57;&#x7b26;&#x6240;&#x5360;&#x7528;&#x7684;&#x5b57;&#x8282;&#x6570;&#x3002;&#x8bfb;&#x56de;&#x9000;&#x7684;&#x65f6;&#x5019;&#x4f1a;&#x7528;&#x5230;&#x5b83;&#x7684;&#x503c;&#x3002;&#x8fd9;&#x4e2a;&#x5b57",{"_index":5422,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x5b57;&#x7b26;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x8c03;&#x7528",{"_index":5547,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x5b57;&#x7b26;&#x7ec4;&#xff08;&#x5fc5;&#x987b;&#x975e;&#x7a7a;&#xff09",{"_index":5745,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x5b57;&#x7b26;&#x8bbe;&#x5907;&#xff0c;&#x9700;&#x5df2;&#x8bbe;&#x7f6",{"_index":7378,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5b57;&#x7b26;&#xff09;&#xff0c;&#x8c03;&#x7528",{"_index":6948,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x5b57;&#x7b26;&#xff0c;&#x5176;&#x7c7b;&#x578b;&#x4f1a;&#x662f",{"_index":1131,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b57;&#x7b26;&#xff0c;&#x5982",{"_index":5981,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x5b57;&#x7b26;&#xff0c;&#x8fd4;&#x56de;&#x5176",{"_index":6969,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x5b57;&#x8282",{"_index":7525,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5b57;&#x8282;&#x3002;&#x6bcf;&#x8c03;&#x7528;&#x4e00;&#x6b21",{"_index":7001,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["x5b57;&#x8282;&#x4fdd;&#x5b58;&#x5728;&#x5185;&#x5b58;&#xff0c",{"_index":8804,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5b57;&#x8282;&#x5e8f;&#x5217",{"_index":1122,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b57;&#x8282;&#x6570",{"_index":6801,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x5b57;&#x8282;&#x6570;&#x636e;&#x3002",{"_index":5494,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html#LimitedReader-类型":{}}}],["x5b57;&#x8282;&#x6570;&#x636e;&#x3002;&#x5b83;&#x8fd4;&#x56de;&#x5199;&#x5165;&#x7684;&#x5b57;&#x8282;&#x6570;&#x548c;&#x53ef;&#x80fd;&#x9047;&#x5230;&#x7684;&#x4efb;&#x4f55;&#x9519;&#x8bef;&#x3002;&#x5982;&#x679c;&#x8fd4;&#x56de;&#x503c",{"_index":7421,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5b57;&#x8282;&#x6570;&#x636e;&#x5e76;&#x5199;&#x5165",{"_index":7406,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5b57;&#x8282;&#x6570;&#x91cf;&#x548c;&#x5bf9;&#x8c61;&#x6570;&#x91cf;&#x3002",{"_index":4251,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5b57;&#x8282;&#xff0c",{"_index":6790,"title":{},"body":{"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x5b57;&#x9762;&#x4e0a;&#x7684;&#x767e;&#x5206;&#x53f7;&#xff0c;&#x5e76;&#x975e;&#x503c;&#x7684;&#x5360;&#x4f4d;&#x7b26",{"_index":4670,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5b57;&#x9762;&#x503c;&#x7684;&#x8bed;&#x6cd5;&#x521b;&#x5efa",{"_index":1405,"title":{},"body":{"basic/map.html#map":{}}}],["x5b58;&#x4e8e;&#x7f13;&#x51b2;&#x533a;&#x4e4b;&#x4e2d;&#x4ee5;&#x5907;&#x540e;&#x7528;&#x3002",{"_index":5412,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x5b58;&#x50a8;&#xff08;store&#xff09;&#x548c;&#x4ea4;&#x6362;&#xff08;swap&#xff09;&#x3002",{"_index":7999,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5b58;&#x53d6;&#x65f6;&#xff0c;&#x5fc5;&#x987b;&#x4f7f;&#x7528",{"_index":1434,"title":{},"body":{"basic/map.html#map":{}}}],["x5b58;&#x5728;&#xff0c",{"_index":7654,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x5b58;&#x5730;&#x5740;&#x4e0a;&#x7684;&#x6570;&#x636e;&#x3002",{"_index":8017,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5b58;&#x653e;&#x5230;&#x7ba1;&#x7406;&#x6570;&#x7ec4;&#x4e2d;&#xff0c;&#x9700;&#x8981;&#x65f6;&#x5c31;&#x4ee5;&#x9875;&#x6570;&#x4e3a;&#x7d22;&#x5f15;&#x8fdb;&#x884c;&#x67e5;&#x627e;&#x3002",{"_index":403,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x5b58;&#x653e;&#x7a7a;&#x95f2;&#x7684",{"_index":6268,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5b58;&#x653e;&#x7f16;&#x8bd1;&#x540e;&#x7684;&#x5305;&#x7684;&#x76ee;&#x6807;&#x6587;&#x4ef6",{"_index":948,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x5b58;&#x653e;&#x7f16;&#x8bd1;&#x540e;&#x7684;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f",{"_index":947,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x5b66;&#x751f;&#x6210;&#x7ee9;&#x7ed3;&#x6784;&#x4f53",{"_index":9217,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x5b83;&#x4e0d;&#x9700;&#x8981;&#x50cf",{"_index":5263,"title":{},"body":{"standards/data/container.html#环":{}}}],["x5b83;&#x4ec5;&#x7528;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x7684;&#x4e8c;&#x8fdb;&#x5236;&#x6570;&#x5c31;&#x53ef;&#x4ee5;&#x8868;&#x793a;&#xff0c;&#x800c;&#x5bf9;&#x4e8e;&#x4e00;&#x4e2a;&#x4e2d;&#x6587;&#x5b57;&#x7b26;&#xff0c;&#x5b83;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x4e09;&#x4e2a;&#x5b57;&#x8282;&#x624d;&#x80fd;&#x591f;&#x8868;&#x793a;&#x3002;&#x4e0d;&#x8bba;&#x600e;&#x6837;&#xff0c;&#x4e00;&#x4e2a;&#x53d7;&#x652f;&#x6301;&#x7684;&#x5b57;&#x7b26;&#x603b;&#x662f;&#x53ef;&#x4ee5;&#x7531",{"_index":368,"title":{},"body":{"index.html#编码":{}}}],["x5b83;&#x4ee3;&#x8868;&#x7684;&#x662f;&#x5b57;&#x7b26;&#x4e0e;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x4e4b;&#x95f4;&#x7684;&#x8f6c;&#x6362;&#x65b9;&#x5f0f;&#x3002",{"_index":352,"title":{},"body":{"index.html#编码":{}}}],["x5b83;&#x4eec;&#x4e4b;&#x95f4;&#x7684;&#x533a;&#x522b;&#x5728;&#x4e8e;&#x5982;&#x4f55;&#x6307;&#x5b9a;&#x64cd;&#x4f5c;&#x6587;&#x4ef6;&#xff1a",{"_index":7485,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["x5b83;&#x4eec;&#x63a5;&#x6536;&#x591a;&#x4e2a",{"_index":7102,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x5b83;&#x4eec;&#x662f",{"_index":4079,"title":{},"body":{"basic/test.html#测试":{}}}],["x5b83;&#x4eec;&#x7684;&#x533a;&#x522b;&#x548c;&#x4e0a;&#x6587;&#x63d0;&#x5230;&#x7684",{"_index":7548,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5b83;&#x4eec;&#x90fd;&#x8c03;&#x7528;&#x4e86",{"_index":5977,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x5b83;&#x4f1a;&#x4e0d;&#x65ad;&#x7684;&#x4f9d;&#x6b21;&#x5e94;&#x7528;&#x5982;&#x4e0b;&#x7684;&#x89c4;&#x5219;&#xff0c;&#x76f4;&#x5230;&#x4e0d;&#x80fd;&#x518d;&#x8fdb;&#x884c;&#x4efb;&#x4f55;&#x5904;&#x7406;&#xff1a",{"_index":5710,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x5b83;&#x4f1a;&#x7528;&#x4e00;&#x4e2a;&#x6216;&#x591a;&#x4e2a;&#x5b57;&#x8282;&#x7684;&#x4e8c;&#x8fdb;&#x5236;&#x6570;&#x6765;&#x8868;&#x793a;&#x67d0;&#x4e2a;&#x5b57;&#x7b26;&#xff0c;&#x6700;&#x591a;&#x4f7f;&#x7528;&#x56db;&#x4e2a;&#x5b57;&#x8282",{"_index":366,"title":{},"body":{"index.html#编码":{}}}],["x5b83;&#x4f1a;&#x8fd4;&#x56de;&#x8be5;&#x5207;&#x7247;&#x548c",{"_index":7682,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x5b83;&#x5148;&#x628a;&#x503c;&#x8f6c;&#x6362;&#x4e3a;&#x4e86",{"_index":8370,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b83;&#x53ea;&#x6709;&#x4e24;&#x4e2a;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#x2014;&#x2014",{"_index":8041,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x5b83;&#x53ef;&#x4ee5;&#x5e2e;&#x4f60;&#x683c;&#x5f0f;&#x5316;&#x4f60;&#x5199;&#x597d;&#x7684;&#x4ee3;&#x7801;&#x6587;&#x4ef6;&#xff0c;&#x4f7f;&#x4f60;&#x5199;&#x4ee3;&#x7801;&#x7684;&#x65f6;&#x5019;&#x4e0d;&#x9700;&#x8981;&#x5173;&#x5fc3;&#x683c;&#x5f0f;&#xff0c;&#x4f60;&#x53ea;&#x9700;&#x8981;&#x5728;&#x5199;&#x5b8c;&#x4e4b;&#x540e;&#x6267;&#x884c",{"_index":2789,"title":{},"body":{"commands/build.html#工具":{}}}],["x5b83;&#x5bfc;&#x81f4;&#x4e86;&#x4e00;&#x4e2a;&#x65e0;&#x9650;&#x9012;&#x5f52;&#x8c03;&#x7528;&#xff08",{"_index":1318,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x5b83;&#x5c06",{"_index":7031,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x5b83;&#x6307;&#x7684;&#x662f;&#x88ab;&#x6d4b;&#x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x6b21;&#x6570;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x6b21;&#x6570",{"_index":4211,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x5b83;&#x662f",{"_index":4287,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5b83;&#x7684;&#x4f5c;&#x7528;&#x662f;&#x8bb0;&#x5f55;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x7684",{"_index":8127,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5b83;&#x7684;&#x503c;&#x603b;&#x662f;&#x4e0b;&#x4e00;&#x4e2a;&#x53ef;&#x4ee5;&#x8c03;&#x7528;&#x6253;&#x5370;&#x51fd;&#x6570;&#x7684",{"_index":6386,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5b83;&#x8fd4;&#x56de;&#x590d;&#x5236;&#x7684;&#x5b57;&#x8282;&#x6570;&#x4ee5;&#x53ca;&#x5728;&#x590d;&#x5236;&#x65f6;&#x9047;&#x5230;&#x7684;&#x6700;&#x65e9;&#x7684;&#x9519;&#x8bef;&#x3002",{"_index":7072,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x5b83;&#xff08;&#x5728",{"_index":8216,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5b89;&#x5168;&#x7684;&#x64cd;&#x4f5c;&#x3002;&#x600e;&#x6837;&#x4fee;&#x8865;&#xff1a",{"_index":8052,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x5b89;&#x88c5",{"_index":915,"title":{"basic/env_config.html#安装":{}},"body":{}}],["x5b89;&#x88c5;&#x4f9d;&#x8d56",{"_index":2581,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x5b89;&#x88c5;&#x6839;&#x76ee;&#x5f55",{"_index":926,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x5b89;&#x88c5;&#x7684;&#x6587;&#x4ef6",{"_index":2783,"title":{},"body":{"commands/build.html#工具":{}}}],["x5b89;&#x88c5;&#x76f8;&#x5e94;&#x7684;&#x5305;&#xff0c;&#x7f16;&#x8bd1;&#x5e76;&#x4e14",{"_index":2739,"title":{},"body":{"commands/build.html#工具":{}}}],["x5b8c;&#x540e;&#x6267;&#x884c",{"_index":7138,"title":{},"body":{"standards/io/io.html#TeeReader-函数":{}}}],["x5b8c;&#x540e;&#xff0c",{"_index":7123,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x5b8c;&#x6210",{"_index":6608,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html#LimitedReader-类型":{}}}],["x5b8c;&#x6574;&#x7684;&#x6253;&#x5370;&#x5185;&#x5bb9;&#x5982;&#x4e0b;&#xff1a",{"_index":1133,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b98;&#x65b9;&#x6587;&#x6863;&#x7ed9;&#x51fa;&#x7684;&#x5c0f;&#x7a0b;&#x5e8f;&#xff1a",{"_index":9247,"title":{},"body":{"standards/data/sort.html#Search":{}}}],["x5b98;&#x65b9;&#x8bf4;&#xff0c;&#x4f7f;&#x7528;&#x5177;&#x4f53;&#x7684;&#x65f6;&#x95f4;&#xff0c;&#x6bd4;&#x4f7f;&#x7528",{"_index":3513,"title":{},"body":{"standards/time.html#Time":{}}}],["x5b9a;&#x4e49",{"_index":1400,"title":{},"body":{"basic/map.html#map":{},"basic/interface.html#接口":{}}}],["x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x5355;&#x72ec;&#x7684",{"_index":9290,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf",{"_index":2366,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5b9a;&#x4e49;&#x4e86;&#x4e00;&#x4e2a",{"_index":9233,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x5b9a;&#x4e49;&#x4e86;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b",{"_index":2031,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x5b9a;&#x4e49;&#x4e86;&#x8bfb;&#x53d6;&#x76ee;&#x5f55;&#x76f8;&#x5173;&#x7684",{"_index":7664,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x5b9a;&#x4e49;&#x5207;&#x7247;&#xff0c;&#x548c;&#x5b9a;&#x4e49;&#x6570;&#x7ec4;&#x7684;&#x533a;&#x522b;&#x5c31;&#x662f;&#x4e0d;&#x9700;&#x8981;&#x6307;&#x5b9a",{"_index":1869,"title":{},"body":{"basic/slice.html#slice":{}}}],["x5b9a;&#x4e49;&#x5728",{"_index":3553,"title":{},"body":{"standards/time.html#定时器":{}}}],["x5b9a;&#x4e49;&#x5c40;&#x90e8;&#x53d8;&#x91cf",{"_index":3119,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x5b9a;&#x4e49;&#x63a5;&#x53e3;&#xff1a",{"_index":2326,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5b9a;&#x4e49;&#x7684;&#x4e09;&#x4e2a;&#x65b9;&#x6cd5;&#x5c31;&#x53ef;&#x4ee5;&#x5bf9;&#x6570;&#x636e;&#x96c6;&#x5408;&#x8fdb",{"_index":9194,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x5b9a;&#x4e49;&#x7684;&#x6392;&#x5e8f;&#x65b9;&#x5f0f;&#x9006;&#x5e8f;&#x6392;&#x5e8f;&#xff0c;&#x800c;&#x4e0d;&#x5fc5;&#x4fee;&#x6539",{"_index":9229,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x5b9a;&#x4e49;&#x7ed3;&#x6784;&#x4f53",{"_index":1220,"title":{},"body":{"basic/oop.html#方法":{},"basic/interface.html#接口":{}}}],["x5b9a;&#x4e49;a&#x4e3a;&#x7a7a;&#x63a5;&#x53e3",{"_index":2338,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5b9a;&#x65f6;&#x5668",{"_index":3543,"title":{"standards/time.html#定时器":{}},"body":{}}],["x5b9a;&#x65f6;&#x64a4;&#x9500",{"_index":8235,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5b9e;&#x4f8b;&#x3002",{"_index":9057,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5b9e;&#x4f8b;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x5f53;&#x524d;&#x65f6;&#x95f4;&#x662f",{"_index":3522,"title":{},"body":{"standards/time.html#Time":{}}}],["x5b9e;&#x4f8b;&#x3002;&#x56e0;&#x4e3a;&#x6307;&#x5b9a;&#x4e86",{"_index":9085,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x5b9e;&#x4f8b;&#x9690;&#x85cf;&#x8d77;&#x6765;&#x4e86;&#xff0c;&#x56e0;&#x6b64;&#xff0c;&#x8be5;&#x51fd;&#x6570;&#x542f;&#x52a8;&#x7684;&#x5b9a;&#x65f6;&#x5668;&#x65e0;&#x6cd5;&#x505c;&#x6b62;&#x3002",{"_index":3591,"title":{},"body":{"standards/time.html#Ticker":{}}}],["x5b9e;&#x4f8b;&#xff0c",{"_index":9079,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x5b9e;&#x4f8b;&#xff0c;&#x51fd;&#x6570;&#x58f0;&#x660e;&#x5982;&#x4e0b;&#xff1a",{"_index":2480,"title":{},"body":{"standards/log.html#Logger":{}}}],["x5b9e;&#x4f8b;&#xff0c;&#x5b8c;&#x5168;&#x53ef;&#x4ee5;&#x8fbe;&#x5230;&#x6df1;&#x5ea6;&#x81ea;&#x5b9a;&#x4e49",{"_index":9059,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5b9e;&#x4f8b;&#xff1a",{"_index":247,"title":{},"body":{"index.html#类型转换":{},"basic/flow.html#for":{},"basic/oop.html#方法":{},"basic/struct.html#结构体":{},"basic/interface.html#接口":{}}}],["x5b9e;&#x4f8b;&#xff1b",{"_index":3496,"title":{},"body":{"standards/time.html#Time":{}}}],["x5b9e;&#x73b0",{"_index":2096,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#SectionReader-类型":{}}}],["x5b9e;&#x73b0;&#x3002",{"_index":3786,"title":{},"body":{"basic/basic_data.html#字符串":{},"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x5b9e;&#x73b0;&#x3002;&#x6b64;&#x5916;&#xff0c;&#x82e5",{"_index":7064,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x5b9e;&#x73b0;&#x4e0",{"_index":9274,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5b9e;&#x73b0;&#x4e86",{"_index":5529,"title":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}},"body":{"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#WriteString-函数":{}}}],["x5b9e;&#x73b0;&#x4e86;&#x4e00;&#x4e2a;&#x53cc;&#x5411;&#x94fe;&#x8868;&#xff08;&#x7b80;&#x79f0;&#x94fe;&#x8868;&#xff09;&#xff0c",{"_index":5234,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x5b9e;&#x73b0;&#x4e92;&#x65a5;&#x6240",{"_index":7815,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x5b9e;&#x73b0;&#x4f18;&#x5148;&#x7ea7;&#x961f;&#x5217",{"_index":5312,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x5b9e;&#x73b0;&#x5b8c;&#x5168;&#x76f8;&#x540c;&#xff0c",{"_index":9280,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5b9e;&#x73b0;&#x63a5;&#x53e3",{"_index":2361,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5b9e;&#x73b0;&#x63a5;&#x53e3;&#x65b9;&#x6cd5",{"_index":2328,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5b9e;&#x73b0;&#x7684",{"_index":4959,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x5b9e;&#x73b0;&#x7684;&#x3002",{"_index":8881,"title":{},"body":{"standards/net/http.html#client":{}}}],["x5b9e;&#x73b0;&#x7684;&#x3002;&#x8fd9;&#x6837;&#x7684;&#x58f0;&#x660e;&#x5b9a;&#x4e49;&#x4e86;&#x51fd;&#x6570;&#x6807;&#x8bc6;&#x7b26;&#x3002",{"_index":3137,"title":{},"body":{"basic/function.html#参数":{}}}],["x5b9e;&#x73b0;&#x7684;&#xff08;&#x67e5;&#x770b",{"_index":3580,"title":{},"body":{"standards/time.html#定时器":{}}}],["x5b9e;&#x73b0;&#xff0c;&#x4e0d;&#x50cf;&#x76f4;&#x63a5;&#x8fd0;&#x7b97;&#x7b26;&#x8fd9;&#x79cd;&#x4f1a;&#x4ea7;&#x751f;&#x5f88;&#x591a;&#x4e34;&#x65f6;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x4f46;&#x662f;&#x5185;&#x90e8;&#x7684;&#x903b;&#x8f91;&#x6bd4;&#x8f83;&#x590d;&#x6742;&#xff0c;&#x6709;&#x5f88",{"_index":3751,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b9e;&#x73b0;interface&#x63a5;&#x53e3",{"_index":2084,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5b9e;&#x9645;&#x4e0a;&#x5e94;&#x8be5;&#x5199;&#x505a",{"_index":1743,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5b9e;&#x9645;&#x4e0a;&#x662f",{"_index":8911,"title":{},"body":{"standards/net/http.html#client":{}}}],["x5b9e;&#x9645;&#x4e0a;&#x76f8;&#x5f53;&#x4e8e;&#x5bf9;&#x5176;&#x4f9d;&#x9644;&#x7684",{"_index":1751,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5b9e;&#x9645;&#x4e0a;&#xff0c",{"_index":2357,"title":{},"body":{"basic/interface.html#接口":{},"standards/time.html#Time":{}}}],["x5b9e;&#x9645;&#x5206;&#x914d;&#x7ed9;&#x6587;&#x4ef6;&#x7684;&#x78c1;&#x76d8;&#x5757;&#x6570;&#x91cf",{"_index":7526,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5b9e;&#x9645;&#x7f16;&#x7a0b;&#x4e2d;&#xff0c;&#x7ecf;&#x5e38;&#x5c06",{"_index":6932,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x5ba2;&#x6237;&#x7aef",{"_index":8732,"title":{},"body":{"standards/net/http.html#http":{}}}],["x5ba2;&#x6237;&#x7aef;&#x5fc5;&#x987b;&#x5728;&#x7ed3;&#x675f",{"_index":8866,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x5ba2;&#x6237;&#x7aef;&#xff0c;&#x4e3b;&#x8981;&#x7ec4;&#x6210;&#xff1a",{"_index":8726,"title":{},"body":{"standards/net/http.html#http":{}}}],["x5bb9;&#x5668;&#x5bb9;&#x91cf;&#x7684;&#x4e8c;&#x500d;&#x518d;&#x52a0;&#x4e0a",{"_index":3835,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5bf9",{"_index":5102,"title":{},"body":{"standards/text/unicode.html#unicode":{},"standards/data/container.html#堆":{}}}],["x5bf9;&#x4e00;&#x4e2a;&#x5df2;&#x7ecf;&#x88ab;&#x9501;&#x5b9a;&#x7684;&#x4e92;&#x65a5;&#x9501;&#x8fdb;&#x884c;&#x9501;&#x5b9a;&#xff0c;&#x662f;&#x4f1a;&#x7acb;&#x5373;&#x963b;&#x585e;&#x5f53;&#x524d;&#x7684",{"_index":7855,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x5bf9;&#x4e8e",{"_index":2979,"title":{},"body":{"concurrent/channel.html#channel":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x5bf9;&#x4e8e;&#x4e00;&#x4e2a;&#x5e38;&#x89c4;&#x6587;&#x4ef6;&#x8def;&#x5f84;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":5679,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x5bf9;&#x4e8e;&#x503c;&#x4e3a",{"_index":2982,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5bf9;&#x4e8e;&#x5176;&#x4ed6;&#x5e8f;&#x5217;&#x5316;&#x534f;&#x8bae;&#x5982",{"_index":1538,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5bf9;&#x4e8e;&#x51fd;&#x6570;&#xff08",{"_index":1734,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5bf9;&#x4e8e;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#xff0c;&#x4e3a;&#x4e86;&#x52a0;&#x5feb;&#x6d4b;&#x8bd5;&#x901f;&#x5ea6;&#xff0c;&#x547d;&#x4ee4;&#x901a;&#x5e38;&#x4f1a;&#x5e76;&#x53d1;&#x5730;&#x6d4b;&#x8bd5;&#x591a;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#x3002;&#x4f46;&#x662f;&#xff0c;&#x5728;&#x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#xff0c",{"_index":4218,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x5bf9;&#x4e8e;&#x540c;&#x4e00;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#x4e2d;&#x7684;&#x591a;&#x4e2a;&#x529f",{"_index":4219,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x5bf9;&#x4e8e;&#x540c;&#x4e00;&#x4e2a;&#x901a;&#x9053;&#xff0c;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x4e4b;&#x95f4;&#x662f;&#x4e92;&#x65a5;&#x7684;&#xff0c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x4e4b;&#x95f4;&#x4e5f;&#x662f;&#x4e92;&#x65a5;&#x7684;&#x3002;go",{"_index":2963,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5bf9;&#x4e8e;&#x5728;&#x5305;&#x4e00;&#x7ea7;&#x58f0;&#x660e;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x5b83;&#x4eec;&#x7684;&#x751f;&#x547d;&#x5468;&#x671f;&#x548c;&#x7a0b;&#x5e8f;&#x7684;&#x8fd0;&#x884c;&#x5468;&#x671f;&#x662f;&#x4e00;&#x81f4;&#x7684;&#x3002",{"_index":318,"title":{},"body":{"index.html#类型断言":{}}}],["x5bf9;&#x4e8e;&#x5904;&#x5728;&#x96f6;&#x503c;&#x72b6;&#x6001;&#x7684",{"_index":3888,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5bf9;&#x4e8e;&#x5e38;&#x7528",{"_index":8885,"title":{},"body":{"standards/net/http.html#client":{}}}],["x5bf9;&#x4e8e;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#xff0c;&#x6bd4;&#x5982;&#xff1a;&#x5207;&#x7247;&#x3001;&#x5b57;&#x5178;&#x3001;&#x901a;&#x9053;&#xff0c;&#x50cf;&#x4e0a;&#x9762;&#x90a3;&#x6837;&#x590d;&#x5236;&#x5b83;&#x4eec;&#x7684;&#x503c;&#xff0c;&#x53ea;&#x4f1a;&#x62f7;&#x8d1d;&#x5b83;&#x4eec;&#x672c;&#x8eab;&#x800c;&#x5df2;&#xff0c;&#x5e76;&#x4e0d;&#x4f1a;&#x62f7;&#x8d1d;&#x5b83;&#x4eec;&#x5f15;&#x7528;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x636e;&#x3002",{"_index":3222,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x5bf9;&#x4e8e;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#xff0c;&#x76f4;&#x63a5;&#x4f7f;&#x7528",{"_index":1250,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5bf9;&#x4e8e;&#x5f88;&#x591a;&#x7f51;&#x7edc;&#x670d;&#x52a1;&#x7a0b;&#x5e8f;&#xff0c;&#x7531;&#x4e8e;&#x4e0d;&#x80fd;&#x5927;&#x91cf;&#x521b;&#x5efa",{"_index":6411,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5bf9;&#x4e8e;&#x6240;&#x6709;&#x7684;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x3001;&#x6307;&#x9488;&#x7c7b;&#x578b;&#xff0c;&#x4ee5;&#x53ca;&#x6570;&#x7ec4;&#x7c7b;&#x578b;&#x3001;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x548c;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#xff0c;go",{"_index":1454,"title":{},"body":{"basic/map.html#map":{}}}],["x5bf9;&#x4e8e;&#x62fc;&#x63a5;&#x8def;&#x5f84;&#x7684;&#x9700;&#x6c42;&#xff0c;&#x6211;&#x4eec;&#x5e94;&#x8be5;&#x603b;&#x662f;&#x4f7f;&#x7528",{"_index":5698,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x5bf9;&#x4e8e;&#x6307;&#x5b9a;&#x683c;&#x5f0f;&#x7684",{"_index":8770,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5bf9;&#x4e8e;&#x6574;&#x6570;&#x7684;&#x9ad8;&#x7cbe;&#x5ea6;&#x8ba1;&#x7b97",{"_index":4359,"title":{},"body":{"standards/data/big.html#big":{}}}],["x5bf9;&#x4e8e;&#x6574;&#x6570;&#x7c7b;&#x578b;&#x503c;&#x3001;&#x6574;&#x6570;&#x5e38;&#x91cf;&#x4e4b;&#x95f4;&#x7684;&#x7c7b;&#x578b;&#x8f6c;&#x6362;&#xff0c;&#x539f;&#x5219;&#x4e0a;&#x53ea;&#x8981;&#x6e90;&#x503c;&#x5728;&#x76ee;&#x6807;&#x7c7b;&#x578b;&#x7684;&#x53ef;&#x8868;&#x793a;&#x8303;&#x56f4;&#x5185;&#x5c31;&#x662f;&#x5408;&#x6cd5;&#x7684;&#x3002;&#x6bd4;&#x5982;&#xff0c",{"_index":249,"title":{},"body":{"index.html#类型转换":{}}}],["x5bf9;&#x4e8e;&#x65b9;&#x6cd5;&#xff08",{"_index":1736,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5bf9;&#x4e8e;&#x67d0;&#x4e2a;&#x53d7;&#x5230;&#x8bfb;&#x5199;&#x9501;&#x4fdd;&#x62a4;&#x7684;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#xff0c;&#x591a;&#x4e2a;&#x5199;&#x64cd;&#x4f5c;&#x4e0d;&#x80fd;&#x540c;&#x65f6;&#x8fdb;&#x884c;&#xff0c;&#x5199;&#x64cd;&#x4f5c;&#x548c;&#x8bfb;&#x64cd;&#x4f5c;&#x4e5f;&#x4e0d;&#x80fd;&#x540c;&#x65f6;&#x8fdb;&#x884c;&#xff0c;&#x4f46;&#x591a;&#x4e2a;&#x8bfb;&#x64cd;&#x4f5c;&#x5374;&#x53ef;&#x4ee5;&#x540c;&#x65f6;&#x8fdb;&#x884c",{"_index":7838,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x5bf9;&#x4e8e;&#x6bcf;&#x4e2a;&#x5bfc;&#x822a;&#x9879;&#xff0c;&#x5fc5;&#x987b;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a",{"_index":2598,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x5bf9;&#x4e8e;&#x6bcf;&#x4e2a;&#x6253;&#x5f00;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x7cfb;&#x7edf;&#x5185;&#x6838;&#x4f1a;&#x8bb0;&#x5f55;&#x5176;&#x6587;&#x4ef6;&#x504f;&#x79fb;&#x91cf;&#xff0c;&#x6709;&#x65f6;&#x4e5f;&#x5c06;&#x6587;&#x4ef6;&#x504f;&#x79fb;&#x91cf;&#x79f0;&#x4e3a;&#x8bfb;&#x5199;&#x504f;&#x79fb;&#x91cf;&#x6216;&#x6307;&#x9488;&#x3002;&#x6587;&#x4ef6;&#x504f;&#x79fb;&#x91cf;&#x662f;&#x6307;&#x6267;&#x884c;&#x4e0b;&#x4e00;&#x4e2a",{"_index":7449,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5bf9;&#x4e8e;&#x6bcf;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#xff0c",{"_index":4157,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x5bf9;&#x4e8e;&#x8fd9;&#x4e24;&#x79cd;&#x7c7b;&#x578b;&#x5bf9;&#x5e94;&#x7684;&#x5b9e;&#x73b0;&#x65b9;&#x6cd5;&#xff08",{"_index":7108,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x5bf9;&#x4e8e;&#x901a;&#x9053;&#x4e2d;&#x7684;&#x540c;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x503c;&#x6765;&#x8bf4;&#xff0c;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x548c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x4e4b;&#x95f4;&#x4e5f;&#x662f;&#x4e92;&#x65a5;&#x7684;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x867d;&#x7136;&#x4f1a;&#x51fa;&#x73b0;&#xff0c;&#x6b63;&#x5728;&#x88ab;&#x590d;&#x5236;&#x8fdb;&#x901a;&#x9053;&#x4f46;&#x8fd8;&#x672a;&#x590d;&#x5236;&#x5b8c;&#x6210;&#x7684;&#x5143;&#x7d20;&#x503c;&#xff0c",{"_index":2970,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5bf9;&#x53c2;&#x6570;&#x503c;&#x7a0d;&#x4f5c;&#x4fee;&#x6539;&#x540e;&#x5c06;&#x5176;&#x4f5c;&#x4e3a;&#x7ed3;&#x679c;&#x503c;&#x8fd4;&#x56de;&#x3002",{"_index":3212,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x5bf9;&#x5916;&#x4e0d;&#x66b4;&#x9732;&#x3002",{"_index":4436,"title":{},"body":{"standards/database/sql.html#类型":{}}}],["x5bf9;&#x5e94",{"_index":7591,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x5bf9;&#x5e94;&#x503c;&#x7684;&#x7b2c;&#x4e00;&#x90e8;&#x5206;&#x7528;&#x4e8e;&#x6307;&#x5b9a",{"_index":1567,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5bf9;&#x5e94;&#x7684",{"_index":1816,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x5bf9;&#x5e94;&#x7684;&#x662f",{"_index":3707,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5bf9;&#x5e94;&#x7684;&#x8bf7;&#x6c42;&#xff08;&#x5373;&#x662f;&#x5bf9;&#x8be5;&#x8bf7;&#x6c42;&#x7684;&#x56de;&#x590d;&#xff09;&#x3002;&#x5982;&#x679c;&#x662f",{"_index":8862,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x5bf9;&#x5e94;&#x7cfb;&#x7edf;&#x8c03;&#x7528",{"_index":7474,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5bf9;&#x63a5;&#xff0c;&#x5e76;&#x5f97;&#x5230;&#x771f;&#x6b63;&#x8fd0;&#x884c;&#x7684;&#x4e2d;&#x4ecb;&#x3002;p",{"_index":6242,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5bf9;&#x6570;&#x51fd;&#x6570",{"_index":6084,"title":{},"body":{"standards/data/math.html#幂次函数":{}}}],["x5bf9;&#x6570;&#x636e;&#x96c6;&#x5408;&#xff08;&#x5305;&#x62ec;&#x81ea;&#x5b9a;&#x4e49;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x7684;&#x96c6;&#x5408;&#xff09;&#x6392;&#x5e8f;&#x9700;&#x8981;&#x5b9e;&#x73b0",{"_index":9209,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x5bf9;&#x6587;&#x4ef6;&#x4e0a;&#x6b21;&#x4fee;&#x6539;&#x65f6;&#x95f4",{"_index":7528,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5bf9;&#x6587;&#x4ef6;&#x4e0a;&#x6b21;&#x8bbf;&#x95ee;&#x65f6;&#x95f4",{"_index":7527,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5bf9;&#x6bd4;&#x4e00;&#x4e0b;&#x4f20;&#x7edf;&#x7684;&#x7ec4;&#x5408;&#x533f;&#x540d;&#x7ed3;&#x6784;&#x4f53;&#x5b9e;&#x73b0;&#x91cd;&#x5199;&#x7684;&#x5199;&#x6cd5;&#xff1a",{"_index":2098,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5bf9;&#x6bd4;&#x4e0b",{"_index":7409,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5bf9;&#x7684;&#x96c6;&#x5408;&#x3002",{"_index":1394,"title":{},"body":{"basic/map.html#map":{}}}],["x5bf9;&#x8c61",{"_index":5516,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{},"standards/os/os.html#文件属性":{},"standards/net/http.html#自定义处理器":{}}}],["x5bf9;&#x8c61;&#x3002",{"_index":1573,"title":{},"body":{"basic/json.html#序列化":{},"standards/io/bufio.html#bufio":{},"standards/os/os.html#文件-I-O":{},"standards/net/http.html#client":{}}}],["x5bf9;&#x8c61;&#x3002;&#x540c;&#x65f6;&#x5b9e;&#x73b0;&#x4e86",{"_index":5511,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x5bf9;&#x8c61;&#x4e2d;&#x3002",{"_index":5526,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x5bf9;&#x8c61;&#x4e3b;&#x8981;&#x7528;&#x4e8e;&#x6570;&#x636e;&#x7684;&#x5b58;&#x50a8;&#xff0c;&#x7ed3;&#x6784;&#xff1a",{"_index":8741,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5bf9;&#x8c61;&#x4e4b;&#x95f4;&#x7684;&#x5927;&#x5c0f;&#x6bd4;&#x8f83;&#x662f;&#x57fa;&#x4e8e;&#x201c;&#x5b57;&#x5178;&#x5e8f;&#x201d;&#x7684;&#x3002",{"_index":9284,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5bf9;&#x8c61;&#x4f1a;&#x5f15;&#x7528;&#x8be5;&#x8fde;&#x63a5;&#xff0c;&#x6240;&#x4ee5;&#xff0c;&#x4e4b;&#x540e;&#x53ef;&#x80fd;&#x4f1a;&#x518d;&#x6b21;&#x88ab;&#x4f7f;&#x7528;&#x3002",{"_index":4492,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5bf9;&#x8c61;&#x540e;&#xff0c;&#x8fde;&#x63a5;&#x6c60;&#x662f;&#x7a7a;&#x7684;&#xff0c;&#x7b2c;&#x4e00;&#x4e2a;&#x8fde;&#x63a5;&#x5728;&#x9700;&#x8981;&#x7684;&#x65f6;&#x5019;&#x624d;&#x4f1a;&#x521b;&#x5efa;&#xff1a",{"_index":4481,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5bf9;&#x8c61;&#x5bf9;&#x5e94;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x4e0b;&#x9762;&#x7684;&#x8fd9;&#x4e9b;&#x65b9;&#x6cd5;&#x4e0",{"_index":8887,"title":{},"body":{"standards/net/http.html#client":{}}}],["x5bf9;&#x8c61;&#x662f;&#x5bf9",{"_index":8737,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5bf9;&#x8c61;&#x7684",{"_index":9006,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5bf9;&#x8c61;&#x7684;&#x540d;&#x5b57;&#xff0c",{"_index":1568,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5bf9;&#x8c61;&#x8981;&#x4e48;&#x6d3b;&#x7740;&#x8981;&#x4e48;&#x6b7b;&#x7740;&#xff0c;&#x6240;&#x4ee5;&#x4f1a;&#x9020;&#x6210;&#x4e2d;&#x95f4;&#x6682;&#x505c;&#x65f6;&#x95f4;&#x53ef;&#x80fd;&#x4f1a;&#x5f88;&#x2ed3;&#xff0c;&#x2f64;&#x6237;&#x903b;&#x8f91;&#x5bf9;&#x4e8e;&#x2f64;&#x6237;&#x7684;&#x53cd;&#x5e94;&#x5c31;&#x4e2d;&#x2f4c;&#x4e86;&#x3002",{"_index":511,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x5bf9;&#x8c61;&#x8fd4;&#x56de;&#x3002",{"_index":4900,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x5bf9;&#x8c61;&#x8fd4;&#x56de;&#x7ed9;&#x5ba2;&#x6237;&#x7aef;&#xff0c",{"_index":9046,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5bf9;&#x8c61;&#x91cd;&#x7528;&#x7684;&#x51e0;&#x7387;&#xff0c;&#x51cf;&#x5c11",{"_index":8306,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5bf9;&#x8c61;&#xff08;&#x8fd9;&#x91cc",{"_index":1578,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5bf9;&#x8c61;&#xff0c;&#x4f9b;&#x7a0b;&#x5e8f;&#x4e2d;&#x6240;&#x6709;&#x9700;&#x8981;&#x8fdb",{"_index":4462,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5bf9;&#x8c61;&#xff0c;&#x5206;&#x522b",{"_index":7330,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5bf9;&#x8c61;&#xff0c;&#x5e76;&#x8c03;&#x7528",{"_index":9005,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5bf9;&#x8c61;&#xff0c;&#x5f53;&#x8be5;&#x5bf9;&#x8c61;&#x7684",{"_index":4496,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5bf9;&#x8c61;&#xff0c;&#x76f4;&#x5230;&#x5b8c;&#x5168;&#x904d;&#x5386;&#x4e86;&#x6240;&#x6709;&#x7684;&#x884c;&#x6216",{"_index":4494,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5bf9;&#x8c61;&#xff0c;&#x901a;&#x5e38;&#x662f;&#x6807;&#x51c6;&#x8f93;&#x51fa",{"_index":2483,"title":{},"body":{"standards/log.html#Logger":{}}}],["x5bf9;&#x8c61;&#xff1a",{"_index":4905,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x5bfc;&#x5165;&#x4e00;&#x4e2a;&#x5305",{"_index":2153,"title":{},"body":{"basic/package.html#import":{}}}],["x5bfc;&#x5165;&#x5305;&#x91cd;&#x547d;&#x540d",{"_index":2168,"title":{},"body":{"basic/package.html#点操作":{}}}],["x5bfc;&#x5165;&#x591a;&#x4e2a",{"_index":2154,"title":{},"body":{"basic/package.html#import":{}}}],["x5bfc;&#x5165;&#x7684;&#x5305;&#x5fc5;&#x987b;&#x5728;&#x6587;&#x4ef6;&#x7684;&#x5934;&#x90e8;&#x663e;&#x5f0f;&#x58f0;&#x660e;&#xff0c;&#x8fd9;&#x6837;&#x7684;&#x8bdd;&#x7f16;&#x8bd1;&#x5668;&#x5c31;&#x6ca1;&#x6709;&#x5fc5;&#x8981;&#x8bfb;&#x53d6;&#x548c;&#x5206;&#x6790;&#x6574;&#x4e2a;&#x6e90;&#x6587;&#x4ef6;&#x6765;&#x5224;&#x65ad;&#x5305;&#x7684;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x3002",{"_index":2145,"title":{},"body":{"basic/package.html#包":{}}}],["x5bfc;&#x5165;&#x7684;&#x5305;&#xff0c;&#x5982",{"_index":2262,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5bfc;&#x5165;&#x8def;&#x5f84;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x7684;&#x540d;&#x79f0;&#x3002",{"_index":4100,"title":{},"body":{"basic/test.html#测试":{}}}],["x5bfc;&#x81f4;&#x7684;&#xff0c",{"_index":1556,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5bfc;&#x81f4;&#x7a0b;&#x5e8f;&#x7ed3;&#x675f;&#x8fd0;&#x884c;&#x7684;&#x9000;&#x51fa;&#x72b6;&#x6001;&#x7801;&#x4e00;&#x822c;&#x90fd;&#x4f1a;&#x662f",{"_index":672,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5bfc;&#x822a;&#x9879;&#x4e0b;&#x7ea7;&#x6587;&#x6863",{"_index":2605,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x5bfc;&#x822a;&#x9879;&#x7684;&#x6807;&#x7b7",{"_index":2604,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x5c01;&#x88c5",{"_index":1286,"title":{"basic/oop.html#封装":{}},"body":{}}],["x5c01;&#x88c5;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#xff0c;&#x5fc5;&#x987b;&#x5b9a;&#x4e49;&#x4e3a;&#x4e00;&#x4e2a",{"_index":1288,"title":{},"body":{"basic/oop.html#封装":{}}}],["x5c01;&#x88c5;&#x4e86",{"_index":2349,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5c01;&#x88c5;&#x4e86;&#x4e00;&#x5c42;&#x3002",{"_index":8369,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5c06",{"_index":1881,"title":{},"body":{"basic/slice.html#slice":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/text/unicode.html#2-5-3-utf16-包":{},"standards/data/container.html#堆":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#Closer":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#WriteString-函数":{},"standards/net/http.html#Response":{},"standards/net/http.html#HTTP-Server":{}}}],["x5c06;&#x4e00;&#x6bb5;&#x6587;&#x672c;&#x8f93;&#x51fa;&#x5230;&#x6807;&#x51c6;&#x8f93;&#x51fa;&#xff1a",{"_index":6907,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x5c06;&#x4e4b;&#x79f0;&#x4e3a",{"_index":6428,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c06;&#x4f1a;&#x5220;&#x9664;&#x6240;&#x6709;&#x7684;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c;&#x7f13;&#x5b58;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8fd9;&#x6837;&#x505a;&#x80af;&#x5b9a;&#x4e0d;&#x4f1a;&#x5220;&#x9664;&#x4efb;&#x4f55;&#x6784;&#x5efa;&#x7ed3;&#x679c;&#x7f13;&#x5b58;&#x3002",{"_index":4168,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x5c06;&#x4f1a;&#x5bfc;&#x81f4",{"_index":4172,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x5c06;&#x4f1a;&#x662f",{"_index":5482,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x5c06;&#x4f1a;&#x88ab;&#x7f6e;&#x4e3a",{"_index":1361,"title":{},"body":{"basic/constant.html#iota":{}}}],["x5c06;&#x4f1a;&#x8f93;&#x51fa",{"_index":3532,"title":{},"body":{"standards/time.html#Time":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5c06;&#x4f1a;&#x8f93;&#x51fa;[1",{"_index":9263,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5c06;&#x4f1a;&#x8f93;&#x51fa;[6",{"_index":9265,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5c06;&#x518d;&#x6b21;&#x8fdb;&#x5165",{"_index":6616,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c06;&#x5b57;&#x7b26;&#x4e32",{"_index":5965,"title":{},"body":{"standards/text/strings.html#修改字符串":{}}}],["x5c06;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x7684",{"_index":5956,"title":{},"body":{"standards/text/strings.html#大小写转换":{}}}],["x5c06;&#x5c0f;&#x4e8e;&#x53f7;&#x4fee;&#x6539;&#x4e3a;&#x5927;&#x4e8e;&#x53f7",{"_index":9227,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x5c06;&#x6570;&#x636e",{"_index":2890,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5c06;&#x6570;&#x636e;&#x5199;&#x5165",{"_index":6903,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x5c06;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x6570;&#x636e;&#x5168;&#x90e8;&#x8bfb;&#x53d6;&#xff08;&#x663e;&#x793a;&#x5728;&#x6807;&#x51c6;&#x8f93;&#x51fa;&#xff09;&#xff1a",{"_index":6896,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x5c06;&#x662f;&#x4e00;&#x4e2a;&#x7f16;&#x8bd1;&#x9519;&#x8bef;&#x3002",{"_index":2907,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5c06;&#x6839;&#x8282;&#x70b9;&#x6700;&#x5927;&#x7684;&#x5806;&#x53eb;&#x505a;&#x6700;&#x5927;&#x5806;&#x6216;&#x5927;&#x6839;&#x5806;&#xff0c;&#x6839;&#x8282;&#x70b9;&#x6700;&#x5c0f;&#x7684;&#x5806;&#x53eb;&#x505a;&#x6700;&#x5c0f;&#x5806;&#x6216;&#x5c0f;&#x6839;&#x5806;&#x3002",{"_index":5298,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x5c06;&#x7533;&#x8bf7;&#x5230;&#x7684;&#x5927;&#x5757;&#x5185;&#x5b58;&#x6309;&#x7167;&#x7279;&#x5b9a;&#x5927;&#x5c0f;&#x5207;&#x5206;&#x6210;&#x5c0f;&#x5757;&#xff0c;&#x591f;&#x6210;&#x94fe;&#x8868;&#x3002",{"_index":385,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x5c06;&#x8282;&#x70b9;&#x653e;&#x5230;&#x4f18;&#x5148;&#x7ea7;&#x961f;&#x5217;&#x4e2d",{"_index":5327,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x5c06;&#x83b7;&#x5f97;&#x8d44;&#x6e90;&#x5f00;&#x59cb;&#x6267;&#x884c;&#x3001;&#x54ea;&#x4e2a",{"_index":6404,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c06;&#x88ab;&#x8fd4;&#x56de;&#x3002",{"_index":6891,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x5c06;&#x89e3;&#x7ed1",{"_index":6582,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c06;&#x8be5;&#x5b57;&#x8282;&#x5199;&#x5165",{"_index":6949,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x5c06;&#x8bf7;&#x6c42;&#x7684;&#x4e3b;&#x4f53;&#x4f5c;&#x4e3a",{"_index":8801,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5c06;&#x8c03;&#x7528;&#x94fe;&#x63a5;&#x5668;&#x5728;&#x5f53;&#x524d;&#x76ee;&#x5f55;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#xff0c;&#x4ee5;&#x5bfc;&#x5165;&#x8def;&#x5f84;&#x7684;&#x6700;&#x540e;&#x4e00;&#x6bb5;&#x4f5c;&#x4e3a;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#x7684;&#x540d;&#x5b57;&#x3002",{"_index":2732,"title":{},"body":{"commands/build.html#工具":{}}}],["x5c06;&#x8fd9;&#x4e2a;http&#x9519;&#x8bef;&#x8fd4;&#x56de;&#x7ed9;&#x8c03;&#x7528;&#x8005",{"_index":619,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x5c06;&#x8fde;&#x7eed;&#x7684;&#x591a;&#x4e2a;&#x8def;&#x5f84;&#x5206;&#x9694;&#x7b26;&#x66ff;&#x6362;&#x4e3a;&#x5355;&#x4e2a;&#x8def;&#x5f84;&#x5206;&#x9694;&#x7b26",{"_index":5711,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x5c06;&#x957f;&#x65f6;&#x95f4;&#x672a;&#x5904;&#x7406;&#x7684",{"_index":6564,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c0f;&#x4e8e",{"_index":8099,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5c0f;&#x65f6;&#x3002",{"_index":3505,"title":{},"body":{"standards/time.html#Time":{}}}],["x5c0f;&#xff0c;&#x8fd4;&#x56de;&#x7684",{"_index":5534,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x5c1d;&#x8bd5;&#x6bd4;&#x8f83",{"_index":5042,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x5c1d;&#x8bd5;&#x8fd4;&#x56de;&#x5355;&#x72ec;&#x7684;&#x884c;&#xff0c;&#x4e0d;&#x5305;&#x62ec;&#x884c;&#x5c3e;&#x7684;&#x6362;&#x884c;&#x7b26",{"_index":5477,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x5c1d;&#x8bd5;&#x8fdb;&#x884c;&#x5220;&#x9664;&#xff0c;&#x5982;&#x679c;&#x6210;&#x529f;&#x6216;&#x8fd4;&#x56de",{"_index":7657,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x5c24;&#x5176;&#x662f;&#xff0c;&#x6309;&#x7167",{"_index":8843,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5c31",{"_index":9098,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x5c31;&#x4f1a",{"_index":6861,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x5c31;&#x4f1a;&#x5b8c;&#x6210;&#x3002;&#x5e76;&#x884c;&#x8c03;&#x7528",{"_index":7037,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x5c31;&#x4f1a;&#x5f15;&#x53d1",{"_index":407,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x5c31;&#x4f1a;&#x76f4;&#x63a5;&#x8fd4;&#x56de;&#x3002;&#x8fd9;&#x4e5f;&#x521d;&#x6b65;&#x4fdd;&#x8bc1;&#x4e86;&#x201c",{"_index":8140,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5c31;&#x4f1a;&#x7ee7;&#x7eed;&#x6267;&#x884c;&#x540e;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4e86;&#x3002",{"_index":7944,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5c31;&#x4f1a;&#x88ab;&#x76d1;&#x63a7;&#x7ebf;&#x7a0b;&#x62a2;&#x8d70;&#xff0c;&#x5e76;&#x4e14;&#x65b0;&#x5efa;&#x4e00;&#x4e2a",{"_index":6509,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c31;&#x4f1a;&#x8fd4;&#x56d",{"_index":7084,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x5c31;&#x4f1a;&#x8fd4;&#x56de;&#x8fd9;&#x4e2a;&#x9519;&#x8bef;&#xff1b",{"_index":4895,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x5c31;&#x4f1a;&#x963b;&#x585e;&#x5728;&#x8c03;&#x7528;&#x8fd9",{"_index":7940,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5c31;&#x4f1a;&#x963b;&#x585e;&#x5f53;&#x524d",{"_index":2918,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5c31;&#x50cf",{"_index":7104,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x5c31;&#x50cf;&#x6307;&#x9488;&#x4e00;&#x6837;&#x3002;&#x5b83;&#x5e95;&#x5c42;&#x7684;&#x6570;&#x636e;&#x7ed3;&#x6784;&#x662f",{"_index":1397,"title":{},"body":{"basic/map.html#map":{}}}],["x5c31;&#x5df2;&#x7ecf;&#x4e0e;&#x51fd;&#x6570;&#x5916;&#x7684;&#x90a3;&#x4e2a;&#x503c;&#x6beb;&#x65e0;&#x5173;&#x7cfb;&#x4e86;&#x3002",{"_index":8012,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5c31;&#x5f00;&#x542f;&#x4e00;&#x4e2a;&#x534f;&#x7a0b",{"_index":9018,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5c31;&#x662f",{"_index":508,"title":{},"body":{"advance/gc.html#垃圾回收":{},"concurrent/sync_lock.html#sync-Once":{},"standards/net/http.html#HTTP-Server":{}}}],["x5c31;&#x662f;&#x4e00;&#x4e2a;&#x6307;&#x9488;&#xff0c",{"_index":1684,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x5c31;&#x662f;&#x5199;&#x5165;&#x7aef;&#x4f20;&#x9012;&#x7684",{"_index":7017,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x5c31;&#x662f;&#x51fd;&#x6570;&#x6700;&#x7ec8;&#x7684;&#x8fd4;&#x56de;&#x503c",{"_index":3188,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5c31;&#x662f;&#x5305;&#x540d;&#x3002;&#x4e09;&#x79cd;&#x60c5;&#x51b5;&#x4f8b;&#x5916;&#xff1a",{"_index":2195,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5c31;&#x662f;&#x53d6;&#x53d8;&#x91cf",{"_index":1682,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x5c31;&#x662f;&#x53d8;&#x91cf;&#x7684;&#x503c;&#xff0c",{"_index":302,"title":{},"body":{"index.html#类型断言":{}}}],["x5c31;&#x662f;&#x8bfb;&#x53d6;&#x7aef;&#x4f20;&#x9012;&#x7684",{"_index":7022,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x5c31;&#x662f;&#x8d4b;&#x503c;&#x64cd;&#x4f5c",{"_index":2421,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x5c31;&#x662f;&#x8dd1;&#x5728",{"_index":6482,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c31;&#x662f;&#x8fd9;&#x4e2a;&#x7528;&#x9014;&#xff1a",{"_index":5703,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x5c31;&#x662f;&#x8fd9;&#x4e2a;&#x795e;&#x79d8;&#x7684;&#x672a;&#x77e5;&#x7c7b;&#x578b;&#xff0c;&#x5176",{"_index":293,"title":{},"body":{"index.html#类型断言":{}}}],["x5c31;&#x6d3e;&#x4e0a;&#x7528;&#x573a;&#x4e86;&#x3002;&#x5b83;&#x5305;&#x88c5;&#x4e00;&#x4e2a",{"_index":4789,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x5c3d;&#x91cf;&#x4e0d;&#x4f7f;&#x7528;&#x6b63;&#x5219;&#xff0c;&#x5426;&#x5219;&#x4f1a;&#x5f71;&#x54cd;&#x6027;&#x80fd;&#x3002",{"_index":5943,"title":{},"body":{"standards/text/strings.html#字符串替换":{}}}],["x5c3d;&#x91cf;&#x4e0d;&#x8981;&#x5411;&#x539f;&#x5b50;&#x503c;&#x4e2d;&#x5b58;&#x50a8;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x3002;&#x56e0;&#x4e3a;&#x8fd9;&#x5f88;&#x5bb9;&#x6613;&#x9020;&#x6210;&#x5b89;&#x5168;&#x6f0f;&#x6d1e;&#x3002",{"_index":8048,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x5c3d;&#x91cf;&#x4e0d;&#x8981;&#x5728",{"_index":8091,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5c3d;&#x91cf;&#x628a",{"_index":739,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x5c40;&#x90e8;&#x53d8;&#x91cf",{"_index":2247,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5c40;&#x90e8;&#x53d8;&#x91cf;&#xff08;&#x5305;&#x62ec;&#x51fd;&#x6570;&#x7684;&#x53c2;&#x6570;&#x548c;&#x8fd4;&#x56de;&#x503c;&#x4e5f;&#x662f;&#x5c40;&#x90e8;&#x53d8;&#x91cf;&#xff09;&#x7684;&#x751f;&#x547d;&#x5468;&#x671f;&#x5219;&#x662f;&#x52a8;&#x6001;&#x7684;&#xff1a;&#x6bcf;&#x6b21;&#x4ece;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x53d8;&#x91cf;&#x7684;&#x58f0;&#x660e;&#x8bed;&#x53e5;&#x5f00;&#x59cb;&#xff0c",{"_index":319,"title":{},"body":{"index.html#类型断言":{}}}],["x5c5e;&#x3002",{"_index":1303,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x5c5e;&#x4e8",{"_index":1222,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x672c;&#x8eab;&#x4e5f;&#x6709;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x60c5;&#x51b5;&#xff0c;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x201c;&#x5c4f;&#x853d;&#x201d;&#x73b0;&#x8c61;&#x4f1a;&#x4ee5;&#x5d4c;&#x5165;&#x7684;&#x5c42;&#x7ea7;&#x4e3a;&#x4f9d;&#x636e;&#xff0c;&#x5d4c;&#x5165;&#x5c42;&#x7ea7;&#x8d8a;&#x6df1;&#x7684;&#x5b57;&#x6bb5;&#x6216;&#x65b9;&#x6cd5;&#x8d8a;&#x53ef;&#x80fd;&#x88ab;&#x201c;&#x5c4f;&#x853d;&#x201d;&#x3002",{"_index":2110,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5d4c;&#x5165;&#x63a5;&#x53e3;&#x7c7b;&#x578b",{"_index":2082,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5d4c;&#x5165;&#x7ed3;&#x6784;&#x4f53;&#x6269;&#x5c55;&#x7c7b;&#x578b",{"_index":1259,"title":{"basic/oop.html#嵌入结构体扩展类型":{}},"body":{}}],["x5de5;&#x4f5c;&#x533a",{"_index":931,"title":{"basic/env_config.html#工作区":{}},"body":{}}],["x5de5;&#x4f5c;&#x533a;&#x7684;&#x76ee;&#x5f55;&#x7ed3;&#x6784;&#xff1a",{"_index":945,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x5de5;&#x4f5c;&#x6765;&#x8bf4;&#x8fd8;&#x662f;&#x53ef;&#x4ee5;&#x63a5;&#x53d7;&#x7684;&#x3002",{"_index":8415,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x5de5;&#x5177",{"_index":2715,"title":{"commands/build.html#工具":{}},"body":{}}],["x5de5;&#x5177;&#x6240;&#x9700;&#x7684;&#x5185;&#x5b58;&#x5730;&#x5740;&#xff0c;&#x8fd9;&#x4e9b;&#x5185;&#x5b58;&#x5730;&#x5740;&#x4f1a;&#x4ee5;&#x5341;&#x516d;&#x8fdb;&#x5236;&#x7684;&#x5f62;&#x5f0f;&#x5c55;&#x73b0;&#x51fa;&#x6765;&#x3002",{"_index":4304,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5de5;&#x5177;&#x94fe;&#x6e90;&#x7801;&#x4e2d;&#xff08",{"_index":4828,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x5de6;&#x8fb9;&#x53d8;&#x91cf;&#x7684;&#x6570;&#x76ee;&#x5fc5;&#x987b;&#x548c;&#x53f3;&#x8fb9;&#x4e00;&#x81f4;&#xff0c;&#x51fd;&#x6570;&#x4e00;&#x822c;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":2434,"title":{},"body":{"basic/var.html#赋值":{}}}],["x5dee;&#x522b;&#x5f88;&#x5927;&#x3002",{"_index":5618,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x5df2;&#x5b58;&#x5728;&#x4e8e",{"_index":3815,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5df2;&#x5b58;&#x5728;&#x7684;&#x5185;&#x5bb9;&#x4e0d;&#x53ef;&#x53d8;&#xff0c;&#x4f46;&#x53ef;&#x4ee5;&#x62fc;&#x63a5;&#x66f4;&#x591a;&#x7684;&#x5185;&#x5bb9;&#xff1b",{"_index":3804,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5df2;&#x7ecf;&#x5347;&#x5e8f;&#x6392;&#x5e8f",{"_index":9271,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5df2;&#x7ecf;&#x5347;&#x5e8f;&#x6392;&#x5e8f;&#x7684;&#x96c6;&#x5408",{"_index":9244,"title":{},"body":{"standards/data/sort.html#Search":{}}}],["x5df2;&#x7ecf;&#x5b58;&#x5728;&#xff0c;&#x5219;&#x66ff;&#x6362;&#x5b83;&#x3002;&#x6ce8;&#x610f;&#xff0c;&#x53ef;&#x80fd;&#x4f1a;&#x6709;&#x4e00;&#x4e9b;&#x4e2a;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7279;&#x5b9a;&#x7684;&#x9650;&#x5236;&#x3002",{"_index":7611,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x5df2;&#x7ecf;&#x5b9e;&#x73b0;&#x4e86",{"_index":9221,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x5df2;&#x7ecf;&#x652f;&#x6301",{"_index":956,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x5df2;&#x7ecf;&#x652f;&#x6301;&#x7684;&#x5185;&#x90e8;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x6392;&#x5e8f",{"_index":9249,"title":{"standards/data/sort.html#已经支持的内部数据类型排序":{}},"body":{}}],["x5df2;&#x7ecf;&#x9000;&#x51fa",{"_index":8095,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5df2;&#x8bfb;&#x8ba1;&#x6570",{"_index":3874,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5df2;&#x8bfb;&#x8ba1;&#x6570;&#x4e5f;&#x4ee3;&#x8868;&#x7740;&#x4e0b;&#x4e00;&#x6b21;&#x8bfb;&#x53d6;&#x7684;&#x8d77;&#x59cb;&#x7d22;&#x5f15;&#x4f4d;&#x7f6e;&#x3002",{"_index":3855,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5e03;&#x5c14;&#x503c;&#xff0c;&#x8868;&#x793a;&#x662f;&#x5426;&#x64cd;&#x4f5c",{"_index":1413,"title":{},"body":{"basic/map.html#map":{}}}],["x5e03;&#x5c14;&#x5360;&#x4f4d;&#x7b26",{"_index":4671,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5e03;&#x5c14;&#x578b;&#x3001;&#x6570;&#x5b57;&#x7c7b;&#x578b;&#x548c;&#x5b57;&#x7b26;&#x4e32;&#x7b49;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x90fd;&#x662f;&#x53ef;&#x6bd4;&#x8f83;&#x7684;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#x4e24;&#x4e2a;&#x76f8;&#x540c;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x53ef;&#x4ee5;&#x7528",{"_index":1802,"title":{},"body":{"basic/operator.html#关系运算符":{}}}],["x5e03;&#x5c14;&#x7c7b;&#x578b",{"_index":3727,"title":{"basic/basic_data.html#布尔类型":{}},"body":{}}],["x5e03;&#x5c14;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x53ea;&#x6709;&#x4e24;&#x79cd;&#xff1a",{"_index":3728,"title":{},"body":{"basic/basic_data.html#布尔类型":{}}}],["x5e03;&#x5c14;&#x7c7b;&#x578b;&#xff1a",{"_index":2403,"title":{},"body":{"basic/var.html#变量":{}}}],["x5e03;&#x5c14;&#x8868;&#x8fbe;&#x5f0f",{"_index":1038,"title":{},"body":{"basic/flow.html#if":{}}}],["x5e26;&#x6709",{"_index":1120,"title":{},"body":{"basic/flow.html#for":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x5e26;&#x6765;&#x4e86;&#x7f16;&#x7a0b;&#x7684;&#x65b9;&#x4fbf;&#x4f46;&#x540c;&#x65f6;&#x4e5f;&#x589e;&#x52a0;&#x4e86;&#x8fd0;&#x884c;&#x65f6;&#x5f00;&#x9500;&#xff0c;&#x4f7f;&#x7528;&#x4e0d;&#x5f53;&#x751a;&#x81f3;&#x4f1a;&#x4e25;&#x91cd;&#x5f71;&#x54cd;&#x7a0b;&#x5e8f;&#x7684;&#x6027;&#x80fd;&#x3002;&#x56e0;&#x6b64;&#x6027;&#x80fd",{"_index":8308,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5e26;&#x6765;&#x989d;&#x5916;&#x7684;&#x8d1f;&#x62c5;&#xff0c;&#x6240;&#x4ee5;&#x6027;&#x80fd;&#x6bd4;&#x8f83;&#x5dee;&#x3002",{"_index":3749,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5e26;&#x7f13;&#x5b58",{"_index":2937,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5e26;&#x7f13;&#x5b58;&#x7684",{"_index":2938,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5e38;&#x7528",{"_index":1003,"title":{},"body":{"basic/env_config.html#开发工具":{}}}],["x5e38;&#x7528;&#x65b9;&#x6cd5",{"_index":3488,"title":{},"body":{"standards/time.html#Time":{},"standards/time.html#定时器":{}}}],["x5e38;&#x7ed3;&#x675f",{"_index":670,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5e38;&#x89c1;&#x7684;&#x8d4b;&#x503c;&#x7684;&#x65b9;&#x5f0f;&#xff1a",{"_index":2425,"title":{},"body":{"basic/var.html#赋值":{}}}],["x5e38;&#x89c4;&#x6587;&#x4ef6;&#xff0c;&#x5219;&#x662f;&#x6587;&#x4ef6;&#x5b57;&#x8282;&#x6570;&#xff1b;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#xff0c;&#x5219;&#x662f;&#x94fe;&#x63a5;&#x6240;&#x6307;&#x8def;&#x5f84;&#x540d;&#x7684;&#x957f;&#x5ea6;&#xff0c;&#x5b57;&#x8282;&#x4e3a;&#x5355;&#x4f4d;&#xff1b;&#x5bf9;&#x4e8e;&#x5171;&#x4eab;&#x5185;&#x5b58;&#x5bf9;&#x8c61;&#xff0c;&#x5219;&#x662f;&#x5bf9;&#x8c61;&#x5927;&#x5c0f",{"_index":7523,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5e38;&#x91cf",{"_index":1341,"title":{"basic/constant.html#常量":{}},"body":{}}],["x5e38;&#x91cf;&#x540d;&#x5b57",{"_index":1344,"title":{},"body":{"basic/constant.html#常量":{}}}],["x5e38;&#x91cf;&#x7ec4;&#x4e2d;&#xff0c;&#x5982;&#x679c;&#x4e0d;&#x6307;&#x5b9a;&#x7c7b;&#x578b;&#x548c;&#x521d;&#x59cb;&#x503c;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x548c;&#x4e0a;&#x4e00;&#x884c;&#x975e;&#x7a7a;&#x5e38;&#x91cf;&#x53f3;&#x503c;&#x76f8;&#x540c",{"_index":1354,"title":{},"body":{"basic/constant.html#常量":{}}}],["x5e38;&#x91cf;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x503c;&#x5728",{"_index":1351,"title":{},"body":{"basic/constant.html#常量":{}}}],["x5e42;&#x6b21;&#x51fd;&#x6570",{"_index":6079,"title":{"standards/data/math.html#幂次函数":{}},"body":{}}],["x5e72;&#x9884;&#x3002",{"_index":6319,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5e73;&#x53f0;&#x673a;&#x5668;&#x7684;&#x5b57;&#x5927;&#x5c0f;&#x3002",{"_index":3708,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5e73;&#x53f0;&#x7684;&#x3002",{"_index":5811,"title":{},"body":{"standards/os/filepath.html#Windows-起作用的函数":{}}}],["x5e73;&#x65b9;&#x6839",{"_index":6083,"title":{},"body":{"standards/data/math.html#幂次函数":{}}}],["x5e74",{"_index":3492,"title":{},"body":{"standards/time.html#Time":{}}}],["x5e74;&#x53d1;&#x5e03;&#x7684",{"_index":8334,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5e76;&#x4e0d;&#x4fdd;&#x7559",{"_index":6494,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e76;&#x4e0d;&#x5c5",{"_index":1771,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x5e76;&#x4e0d;&#x662f;&#x5b9e;&#x9645;&#x7684;&#x6570;&#x636e;&#x5e93;&#x8fde;&#x63a5;&#xff0c;&#x56e0;&#x6b64;&#xff0c",{"_index":4465,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5e76;&#x4e0d;&#x662f;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#x3002;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x5728;&#x540c;&#x4e00;&#x65f6;&#x95f4;&#x6bb5;&#x5185;&#xff0c;&#x8ba9;&#x4e0d;&#x540c",{"_index":8330,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5e76;&#x4e0d;&#x662f;&#xff0c;&#x6240;&#x4ee5;&#x5c3d;&#x7ba1",{"_index":1271,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x5e76;&#x4e14",{"_index":1565,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5e76;&#x4e14;&#x63d0;&#x4f9b;&#x7684",{"_index":9256,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x5e76;&#x4e14;&#xff0c;&#x662f;&#x5728;&#x51fd;&#x6570;&#x5916;&#x5b9a;&#x4e49;&#x7684;&#x540d;&#x5b57;&#xff0c;&#x5982;&#x679c;&#x4ee5;&#x5927;&#x5199;&#x5b57;&#x6bcd;&#x5f00;&#x5934;&#xff0c;&#x90a3;&#x4e48;&#x4f1a;&#x88ab;&#x5bfc;&#x51fa;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x5728;&#x5305;&#x7684;&#x5916;&#x90e8;&#x4e5f;&#x53ef;&#x4ee5;&#x8bbf;&#x95ee;&#xff0c;&#x6240;&#x4ee5;&#x5b9a;&#x4e49;&#x540d;&#x5b57;&#x65f6;&#xff0c;&#x8981;&#x6ce8;&#x610f;&#x5927;&#x5c0f;&#x5199;&#x3002",{"_index":225,"title":{},"body":{"index.html#命名":{}}}],["x5e76;&#x4ee5",{"_index":4142,"title":{},"body":{"basic/test.html#示例函数":{},"standards/data/big.html#big":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{}}}],["x5e76;&#x4f7f;&#x5b83;&#x518d;&#x6b21;&#x6267;&#x884c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x3002",{"_index":2978,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5e76;&#x518d;&#x6b21;&#x8c03;&#x7528",{"_index":7630,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x5e76;&#x53d1",{"_index":6166,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5e76;&#x53d1;&#x4f7f;&#x7528;&#xff0c;&#x56e0;&#x6b64;&#xff0c;&#x7a0b;&#x5e8f;&#x4e2d;&#x53ea;&#x9700;&#x8981;&#x62e5;&#x6709;&#x4e00;&#x4e2a;&#x5168;&#x5c40;&#x7684;&#x5b9e;&#x4f8b;&#x5373;&#x53ef;&#xff1a",{"_index":4452,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5e76;&#x53d1;&#x5355;&#x5143;&#x95f4;&#x901a;&#x4fe1;&#x56f0;&#x96be;&#xff0c;&#x6613;&#x9519;&#xff1a;&#x591a;&#x4e2a",{"_index":6421,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e76;&#x53d1;&#x548c;&#x5e76;&#x884c",{"_index":6165,"title":{"concurrent/goroutine.html#并发和并行":{}},"body":{}}],["x5e76;&#x53d1;&#x5730;&#x8c03;&#x7528;&#xff0c;&#x6240;&#x4ee5;&#x5b83;&#x7528;&#x5230;&#x7684",{"_index":6371,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5e76;&#x53d1;&#x5b89;&#x5168",{"_index":2874,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x5185;&#x90e8;&#x4f7f;&#x7528;&#x7684;&#x5b58;&#x50a8;&#x4ecb;&#x8d28;&#x6b63;&#x662f;&#x539f;&#x751f;&#x5b57;&#x5178;&#xff0c;&#x53c8;&#x56e0;&#x4e3a;&#x5b83;&#x4f7f;&#x7528;&#x7684;&#x539f;&#x751f;&#x5b57;&#x5178;&#x952e;&#x7c7b;&#x578b;&#x4e5f;&#x662f;&#x53ef;&#x4ee5;&#x5305;&#x7f57;&#x4e07;&#x8c61;&#x7684",{"_index":8340,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x5982;&#x4f55;&#x505a;&#x5230;&#x5c3d;&#x91cf;&#x907f;&#x514d;&#x4f7f;&#x7528;&#x9501",{"_index":8355,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5e76;&#x53d1;&#x7684;&#x6d4b;&#x8bd5;&#x4f1a;&#x8ba9;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x7684;&#x7ed3;&#x679c;&#x5b58;&#x5728;&#x504f;&#x5dee;&#xff0c;&#x6240;&#x4ee5;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x4e00;&#x822c;&#x90fd;&#x662f;&#x4e32;&#x884c;&#x8fdb;&#x884c;&#x7684",{"_index":4162,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x5e76;&#x53d1;&#x8bbf;&#x95ee;&#x540c;&#x4e00;&#x53d8;&#x91cf;&#xff0c;&#x4e14;&#x81f3;&#x5c11;&#x5176;&#x4e2d;&#x7684;&#x4e00;&#x4e2a;&#x662f;&#x5199;&#x64cd;&#x4f5c;&#x7684;&#x65f6;&#x5019;&#x5c31;&#x4f1a;&#x53d1;&#x751f;&#x6570;&#x636e;&#x7ade;&#x4e89;&#x3002",{"_index":7804,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x5e76;&#x56de;&#x5230",{"_index":6492,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e76;&#x628a",{"_index":2587,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x5e76;&#x628a;&#x6301;&#x6709;&#x76f8;&#x5e94;&#x6307;&#x9488;&#x503c;&#x7684",{"_index":3797,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5e76;&#x6307;&#x5411",{"_index":1482,"title":{},"body":{"basic/map.html#map":{}}}],["x5e76;&#x6ca1;&#x6709;&#x65f6;&#x95f4;&#x7247;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x53ea;&#x662f;&#x5728;&#x76ee;&#x6807",{"_index":6517,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e76;&#x6ca1;&#x6709;&#x8f93;&#x51fa",{"_index":1581,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5e76;&#x6dfb;&#x52a0;&#x73af;&#x5883;&#x53d8;&#x91cf",{"_index":924,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x5e76;&#x884c",{"_index":6172,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5e76;&#x8bfb;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x7684;&#x5185;&#x5bb9;&#xff0c;&#x7136;&#x540e;&#x8fd4;&#x56de;&#x6307;&#x5411;&#x8be5",{"_index":5997,"title":{},"body":{"standards/text/strings.html#从字符串中读取内容":{}}}],["x5e76;&#x8f93;&#x51fa;&#x65e5;&#x5fd7;&#x4fe1;&#x606f;&#x3002",{"_index":637,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5e76;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#xff1a",{"_index":5955,"title":{},"body":{"standards/text/strings.html#重复字符串":{}}}],["x5e76;&#x8fd4;&#x56de;&#x5728",{"_index":8870,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x5e76;&#x901a;&#x77e5",{"_index":6544,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e76;&#x975",{"_index":3480,"title":{},"body":{"standards/time.html#Time":{}}}],["x5e76;&#x975e;&#x4e00;&#x4e2a;&#x5b9e;&#x9645;&#x7684;&#x5230;&#x6570;&#x636e;&#x5e93;&#x7684;&#x8fde;&#x63a5;&#xff0c;&#x800c;&#x4e14;&#x53ef;&#x4ee5;&#x88ab;&#x591a;&#x4e2a",{"_index":4451,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x5e8f;&#x5217;&#x5316",{"_index":1537,"title":{"basic/json.html#序列化":{}},"body":{}}],["x5e8f;&#x7684;&#x8fd0;&#x884c;&#x51c6;&#x5907;&#x5de5;&#x4f5c;&#x5b8c;&#x6210;&#x540e;&#x88ab;&#x81ea;&#x52a8;&#x5730;&#x542f;&#x7528;&#xff0c;&#x5e76;&#x4e0d;&#x9700;&#x8981;&#x6211;&#x4eec;&#x505a;&#x4efb;&#x4f55;&#x624b;&#x52a8;&#x7684;&#x64cd;&#x4f5c;&#x3002",{"_index":6256,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5e93;&#x5bf9;&#x8fd9;&#x4e9b;&#x529f;&#x80fd;&#x8fdb;&#x884c;&#x4e86;&#x62bd;&#x8c61;&#xff0c;&#x901a;&#x8fc7;&#x7edf;&#x4e00;&#x7684;&#x63a5;&#x53e3;&#x5bf9;&#x8f93;&#x5165;&#x8f93;&#x51fa;&#x8bbe;&#x5907;&#x8fdb;&#x884c;&#x64cd;&#x4f5c;&#x3002",{"_index":6782,"title":{},"body":{"standards/io/io.html#io":{}}}],["x5e93;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#xff0c;&#x5e93;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x662f;&#x4e0d;&#x80fd;&#x88ab;&#x76f4;&#x63a5;&#x8fd0;&#x884c;&#x7684;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#xff0c;&#x5b83;&#x4ec5;&#x7528;&#x4e8e;&#x5b58;&#x653e;&#x7a0b;&#x5e8f;&#x5b9e;&#x4f53;&#xff0c;&#x8fd9;&#x4e9b;&#x7a0b;&#x5e8f;&#x5b9e;&#x4f53;&#x53ef;&#x4ee5;&#x88ab;&#x5176;&#x4ed6;&#x4ee3;&#x7801;&#x4f7f;&#x7528",{"_index":190,"title":{},"body":{"index.html#三种文件":{}}}],["x5e94;&#x5f53;&#x65e2;&#x4e0d;&#x5f71;&#x54cd;&#x504f;&#x79fb;&#x91cf;&#x4e5f;&#x4e0d;&#x88ab;&#x5b83;&#x6240;&#x5f71;&#x54cd;&#x3002",{"_index":6864,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x5e94;&#x7528;&#x4e8e;&#x7ba1;&#x9053;&#x3001;fifo&#x3001;socket",{"_index":7476,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5e94;&#x8be5;&#x505c;&#x6b62;&#x6267;&#x884c;&#x8ba9;&#x51fa;&#x8d44;&#x6e90;&#x3001;&#x54ea;&#x4e2a",{"_index":6405,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e94;&#x8be5;&#x662f",{"_index":3443,"title":{},"body":{"standards/time.html#时区":{}}}],["x5e94;&#x8be5;&#x88ab;&#x5524;&#x9192;&#x6062;&#x590d;&#x6267;&#x884c;&#x7b49;&#x3002",{"_index":6406,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e95;&#x5c42;&#x6570;&#x636e;&#x6765;&#x6e90;&#xff08;&#x53ef;&#x4ee5;&#x8fd4;&#x56d",{"_index":7511,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5e95;&#x5c42;&#x6570;&#x636e;&#x7684",{"_index":7513,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5e95;&#x5c42;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x53ea;&#x80fd;&#x662f;&#x57fa;&#x7840;&#x7c7b;&#x578b;&#xff08;&#x5e03;&#x5c14;&#x578b;&#x3001;&#x6570;&#x503c;&#x578b;&#x548c;&#x5b57;&#x7b26;&#x4e32;&#x578b;&#xff09",{"_index":1343,"title":{},"body":{"basic/constant.html#常量":{}}}],["x5e95;&#x5c42;&#x7684",{"_index":5515,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x5e95;&#x5c42;&#x7c7b;&#x578b",{"_index":275,"title":{},"body":{"index.html#自定义类型":{}}}],["x5e95;&#x5c42;&#x8c03;&#x7528;&#x7684;&#x662f",{"_index":7432,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5efa;&#x4e00;&#x4e2a;&#x7b26;&#x53f7;&#x94fe;&#x63a5",{"_index":5732,"title":{},"body":{"standards/os/filepath.html#符号链接指向的路径名":{}}}],["x5efa;&#x7acb;&#x4e86;&#x4e00;&#x4e2a;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60;&#xff0c;&#x5b58;&#x653e;&#x7740;&#x8fd9;&#x4e9b;&#x5bf9;&#x8c61;&#xff0c",{"_index":8313,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5efa;&#x8bae;&#x4f7f;&#x7528;&#x6307;&#x9488;&#x4f5c;&#x4e3a;&#x65b9;&#x6cd5;&#xff08;method&#xff1a;printmethodpointer&#xff09;&#x7684;&#x63a5;&#x6536;&#x8005;&#xff08;receiver&#xff1a;*mypoint&#xff09;&#xff0c;&#x4e00;&#x662f;&#x53ef;&#x4ee5;&#x4fee;&#x6539;&#x63a5;&#x6536;&#x8005;&#x7684;&#x503c;&#xff0c;&#x4e8c;&#x662f;&#x53ef;&#x4ee5;&#x907f;&#x514d;&#x5927;&#x5bf9;&#x8c61;&#x7684;&#x590d;&#x5236",{"_index":1747,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5efa;&#x8bae;&#x8bfb;&#x53d6;&#x4e00;&#x884c;&#x4f7f;&#x7528;&#x4e0b;&#x9762;&#x7684;&#x65b9;&#x5f0f;&#xff1a",{"_index":5488,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x5efa;&#x8bae;&#x8bfb;&#x8005;&#x9605;&#x8bfb;&#x4e0b",{"_index":7644,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x5f00;&#x4e86;&#x4e00;&#x6761;&#x540e;&#x53f0;&#x7ebf;&#x7a0b;&#xff0c;&#x8fd0;&#x884c;&#x4e00;&#x4e2a",{"_index":6547,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5f00;&#x53d1;&#x5de5;&#x5177",{"_index":1002,"title":{"basic/env_config.html#开发工具":{}},"body":{}}],["x5f00;&#x542f;&#x7f16;&#x8bd1;&#x7684;&#x65f6;&#x5019;&#x81ea;&#x52a8;&#x68c0;&#x6d4b;&#x6570;&#x636e;&#x7ade;&#x4e89;&#x7684;&#x60c5;&#x51b5;&#xff0c;&#x76ee;&#x524d;&#x53ea;&#x652f;&#x6301;64&#x4f4d;&#x7684;&#x673a;&#x5668",{"_index":2743,"title":{},"body":{"commands/build.html#工具":{}}}],["x5f00;&#x5934",{"_index":3773,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5f00;&#x5934;&#x7684;&#x5341;&#x516d;&#x8fdb;&#x5236;&#x6570;&#x8868;&#x793a",{"_index":4743,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x5f00;&#x5934;&#x7684;&#x6e90;&#x6587;&#x4ef6;&#x4f1a;&#x88ab;&#x6784;&#x5efa;&#x5de5;&#x5177;&#x5ffd;&#x7565",{"_index":2201,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5f00;&#x5934;&#x952e;&#x540d;&#x5bf9;&#x5e94;&#x7684;&#x503c;&#x7528;&#x4e8e;&#x63a7;&#x5236",{"_index":1563,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5f00;&#x5934;&#xff0c;&#x53ef;&#x4ee5;&#x5305;&#x542b;&#x5b57;&#x6bcd;&#xff0c;&#x6570;&#x5b57;&#x6216;&#x8005",{"_index":219,"title":{},"body":{"index.html#命名":{}}}],["x5f00;&#x5934;&#xff1a",{"_index":5923,"title":{},"body":{"standards/text/strings.html#前缀和后缀":{}}}],["x5f00;&#x59cb;&#x540e;&#x7684",{"_index":6994,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x5f00;&#x59cb;&#x7684;&#x90e8;&#x5206;&#xff0c;&#x5305;&#x62ec",{"_index":5653,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x5f00;&#x59cb;&#xff0c",{"_index":9034,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5f00;&#x59cb;&#xff1b;&#x5728",{"_index":5662,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x5f02;&#x5e38",{"_index":630,"title":{"basic/error.html#Panic-异常":{}},"body":{}}],["x5f02;&#x5e38;&#x3002",{"_index":632,"title":{},"body":{"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{}}}],["x5f02;&#x5e38;&#x53d1;&#x751f;&#x65f6;&#xff0c;&#x7a0b;&#x5e8f;&#x4f1a;&#x4e2d;&#x65ad;&#x8fd0;&#x884c;&#xff0c;&#x5e76;&#x7acb;&#x5373;&#x6267;&#x884c;&#x5728;&#x8be5",{"_index":634,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5f02;&#x5e38;&#xff0c;&#x6740;&#x6389;&#x6574;&#x4e2a;&#x8fdb;&#x7a0b;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":698,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x5f02;&#x6b65;&#x5e76;&#x53d1",{"_index":6296,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5f0f",{"_index":4216,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x5f15;&#x53d1",{"_index":720,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x5f15;&#x7528;&#x7c7b;&#x578b",{"_index":3134,"title":{},"body":{"basic/function.html#参数":{}}}],["x5f15;&#x7528;&#x7c7b;&#x578b;&#xff0c;&#x6307;&#x9488;&#x3001;&#x5207;&#x7247;&#x3001;&#x5b57;&#x5178;&#x3001;&#x51fd;&#x6570;&#x3001;&#x901a;&#x9053",{"_index":184,"title":{},"body":{"index.html#数据类型":{}}}],["x5f15;&#x7528;/&#x6307;&#x9488",{"_index":1722,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5f15;&#x7ed3;&#x679c;&#x503c;&#x7684;&#x53d6;&#x5740;&#x64cd;&#x4f5c;&#x90fd;&#x662f;&#x4e0d;&#x5b89;&#x5168;&#x7684;&#x3002;&#x53e6;&#x5916;&#xff0c;&#x83b7;&#x53d6;&#x7531;&#x5b57;&#x9762;&#x91cf;&#x6216;&#x6807;&#x8bc6;&#x7b26;&#x4ee3;&#x8868;&#x7684;&#x51fd;&#x6570;&#x6216;&#x65b9;&#x6cd5;&#x7684;&#x5730;&#x5740;&#x663e;&#x7136;&#x4e5f;&#x662f;&#x4e0d;&#x5b89;&#x5168;&#x7684;&#x3002",{"_index":1775,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x5f20;&#x4e09",{"_index":5324,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x5f3a;&#x5236;&#x4f7f;&#x7528;&#x663e;&#x793a;&#x7c7b;&#x578b;&#x8f6c;&#x6362",{"_index":241,"title":{},"body":{"index.html#类型转换":{}}}],["x5f52;&#x4e3a;&#x534f;&#x7a0b;&#x5e76;&#x4e0d;&#x5408;&#x9002;&#x3002;go",{"_index":6195,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5f53",{"_index":716,"title":{},"body":{"basic/error.html#Recover-捕获异常":{},"basic/flow.html#for":{},"standards/time.html#定时器":{},"standards/text/strconv.html#字符串转为整型":{},"standards/text/strings.html#分割字符串":{},"concurrent/goroutine.html#goroutine-1":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/os/os.html#文件-I-O":{}}}],["x5f53;&#x4e00;&#x4e2a",{"_index":2953,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5f53;&#x4e00;&#x4e2a;&#x6307;&#x9488;&#x88ab;&#x5b9a;&#x4e49;&#x540e;&#x6ca1;&#x6709;&#x5206;&#x914d;&#x5230;&#x4efb;&#x4f55;&#x53d8;&#x91cf;&#x65f6;&#xff0c;&#x5b83;&#x7684;&#x503c;&#x4e3a",{"_index":1694,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x5f53;&#x4e14;&#x4ec5;&#x5f53",{"_index":7073,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x5f53;&#x4f5c;&#x8868;&#x5355;&#x89e3;&#x6790;&#xff0c;&#x5e76;&#x5c06;&#x7ed3;&#x679c;&#x65e2;&#x66f4;&#x65b0;&#x5230",{"_index":8792,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5f53;&#x4f60;&#x5e7f;&#x6cdb;&#x4f7f;&#x7528;&#x4e00;&#x4e2a;&#x81ea;&#x5b9a;&#x4e49;&#x7c7b;&#x578b;&#x65f6;&#xff0c;&#x6700;&#x597d;&#x4e3a;&#x5b83;&#x5b9a;&#x4e49",{"_index":1314,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x5f53;&#x4f7f;&#x7528",{"_index":8766,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5f53;&#x505a;&#x6d41",{"_index":8785,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x5f53;&#x505a;&#x9519;&#x8bef;&#x6765;&#x62a5;&#x544a;&#x3002",{"_index":7062,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x5f53;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#x53d1;&#x751f;&#x53d8;&#x5316;&#x65f6;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x88ab;&#x7528;&#x6765;&#x901a;&#x77e5;&#x88ab;&#x4e92;&#x65a5;&#x9501;&#x963b;&#x585e;&#x7684;&#x7ebf;&#x7a0b",{"_index":7893,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5f53;&#x51fd;&#x6570;&#x8c03;&#x7528;&#x8fd4;&#x56de;&#x9519;&#x8bef;&#x65f6;&#xff0c;&#x6700;&#x5e38;&#x7528;&#x7684;&#x5904;&#x7406;&#x65b9;&#x5f0f;&#x662f",{"_index":616,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x5f53;&#x524d;&#x4f4d;&#x7f6e;&#x524d",{"_index":7470,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5f53;&#x524d;&#x504f;&#x79fb;&#x91cf;&#x3002",{"_index":7419,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5f53;&#x524d;&#x5de5;&#x4f5c;&#x76ee;&#x5f55",{"_index":5658,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x5f53;&#x524d;&#x7684;&#x6d41;&#x7a0b;&#x5c31;&#x4f1a;&#x88ab;&#x4e00;&#x76f4;&#x201c;&#x963b;&#x585e;&#x201d;&#x5728;&#x8fd9;&#x91cc;&#x3002",{"_index":8028,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x5f53;&#x524d;&#x7f13;&#x5b58;&#x4e2d;&#x7684;&#x5b57;&#x8282;&#x6570",{"_index":5514,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x5f53;&#x6211;&#x4eec;&#x4ec5;&#x58f0;&#x660e;&#x800c;&#x4e0d;&#x521d;&#x59cb;&#x5316;&#x4e00;&#x4e2a;&#x5b57;&#x5178;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x7684;&#x503c;&#x4f1a;&#x662f",{"_index":1465,"title":{},"body":{"basic/map.html#map":{}}}],["x5f53;&#x6211;&#x4eec;&#x53ea;&#x58f0;&#x660e;&#x8be5;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf;&#x4f46;&#x6ca1",{"_index":2986,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5f53;&#x6211;&#x4eec;&#x5e76;&#x4e0d;&#x60f3;&#x5c06;&#x5185;&#x90e8;&#x7684;&#x5b50;&#x5305;&#x7ed3;&#x6784;&#x66b4;&#x9732;&#x51fa;&#x53bb;&#x3002;&#x540c;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x80fd;&#x8fd8;&#x5e0c;&#x671b;&#x5728;&#x5185;&#x90e8;&#x5b50;&#x5305;&#x4e4b;&#x95f4;&#x5171;&#x4eab;&#x4e00;&#x4e9b;&#x901a;&#x7528;&#x7684;&#x5904;&#x7406;&#x5305;&#x65f6;&#x3002",{"_index":2833,"title":{},"body":{"commands/build.html#工具":{}}}],["x5f53;&#x6211;&#x4eec;&#x60f3;&#x83b7;&#x53d6;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x8fd8;&#x9700;&#x8981;&#x8c03;&#x7528",{"_index":4275,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5f53;&#x6211;&#x4eec;&#x60f3;&#x901a;&#x8fc7;&#x6a21;&#x677f;&#x5316;&#x7684;&#x65b9;&#x5f0f;&#x751f;&#x6210;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#xff0c;&#x5e76;&#x5f97;&#x5230;&#x9519;&#x8bef;&#x503c;&#x65f6;&#xff0c",{"_index":2351,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5f53;&#x6211;&#x4eec;&#x9700;&#x8981;&#x83b7;&#x53d6;&#x963b;&#x585e;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x9700;&#x8981;&#x5148;&#x8c03;&#x7528",{"_index":4291,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5f53;&#x6587;&#x4ef6",{"_index":6935,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x5f53;&#x6709;&#x591a;&#x4e2a",{"_index":953,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x5f53;&#x6761;&#x4ef6;&#x6ee1;&#x8db3;&#x65f6;&#xff0c",{"_index":1068,"title":{},"body":{"basic/flow.html#select":{}}}],["x5f53;&#x7136;&#x8fd9;&#x91cc;&#x662f;&#x7ed9;&#x6587;&#x4ef6;&#x8bbe;&#x7f6e;&#x4e86",{"_index":7580,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x5f53;&#x7a0b;&#x5e8f;&#x6267;&#x884c;&#x5230;&#x4e00;&#x6761",{"_index":6264,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5f53;&#x7cfb;&#x7edf;&#x6709;&#x591a;&#x4e2a",{"_index":6173,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5f53;&#x8be5;&#x503c;&#x4e3a",{"_index":4305,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5f53;&#x8c03;&#x7528;&#x51fd;&#x6570;&#x65f6;&#xff0c;&#x51fd;&#x6570;&#x7684;&#x5f62;&#x53c2;&#x4f1a;&#x88ab;&#x8d4b;&#x503c;&#xff0c",{"_index":789,"title":{},"body":{"basic/array.html#数组传入函数":{}}}],["x5f53;&#x963b;&#x585e;&#x5728",{"_index":6606,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5f62;&#x5f0f;&#x53c2;&#x6570;&#x5217;&#x8868",{"_index":3111,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x5f62;&#x5f0f;&#x8bbf;&#x95ee;&#x3002",{"_index":2192,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5f62;&#x5f0f;&#x8f6c;&#x6362",{"_index":695,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5f62;&#x5f0f;&#x8fd4;&#x56de;&#x5176;&#x52a8;&#x6001;&#x503c;&#xff1a",{"_index":5037,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x5f62;&#x5f0f;&#x8fd4;&#x56de;&#x5176;&#x52a8;&#x6001;&#x7c7b;&#x578b;&#xff1a",{"_index":5031,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["x5f71;&#x54cd;&#x6027;&#x80fd;&#xff09;&#xff0c;&#x6709;&#x4e24;&#x79cd;&#x529e;&#x6cd5;&#xff1a",{"_index":7429,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x5f80;&#x5806;&#x91cc;&#x9762;&#x63d2;&#x5165;&#x5185;&#x5bb9",{"_index":5307,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x5f80;&#x5f80;&#x4f1a;&#x3001;&#x6bd4;&#x65b0;&#x957f;&#x5ea6;&#x5927;&#x4e00;&#x4e9b;&#xff0c;&#x5f53;&#x7136;&#xff0c;&#x76f8;&#x7b49;&#x4e5f;&#x662f;&#x53ef;&#x80fd;&#x7684;&#x3002",{"_index":1935,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x5f80;&#x5f80;&#x8fd8;&#x6ca1;&#x6709;&#x83b7;&#x5f97;&#x8fd0;&#x884c;&#x7684;&#x673a;&#x4f1a;&#x3002;&#x4f46;&#x662f;&#x5982;&#x679c;&#x6709;&#x673a;&#x4f1a;&#x8fd0;&#x884c;&#xff0c;&#x6253;&#x5370;&#x7684;&#x7ed3;&#x679c;&#x662f;&#x4ec0;&#x4e48;&#xff0c",{"_index":6300,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5f80;&#x6587;&#x4ef6;&#x4e2d;&#x5199;&#x5165",{"_index":6880,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x5f88;&#x591a;&#x65f6;&#x5019;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x4e00;&#x6b21;&#x6027;&#x8bfb;&#x53d6",{"_index":4803,"title":{},"body":{"standards/io/ioutil.html#ReadAll-函数":{}}}],["x5f88;&#x660e;&#x663e;&#xff0c;&#x8c03;&#x7528",{"_index":7489,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["x5f88;&#x6709;&#x5fc5;&#x8981;&#x3002;&#x5176;&#x4e2d;&#x7684;&#x9053;&#x7406;&#x4f60;&#x53ef;&#x4ee5;&#x5bf9;&#x7167;&#x4e00;&#x4e0b;&#x8bfb;&#x5199;&#x9501;&#x3002;&#x4e3a;&#x4ec0;&#x4e48;&#x5728;&#x8bfb;&#x5199;&#x9501;&#x4fdd;&#x62a4;&#x4e0b;&#x7684;&#x5199;&#x64cd;&#x4f5c;&#x548c;&#x8bfb;&#x64cd;&#x4f5c;&#x4e4b;&#x95f4;&#x662f;&#x4e92;&#x65a5;&#x7684;&#xff1f;&#x8fd9;&#x662f;&#x4e3a;&#x4e86;&#x9632;&#x6b62;&#x8bfb;&#x64cd;&#x4f5c;&#x8bfb;&#x5230;&#x6ca1;&#x6709",{"_index":8036,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x5f97;&#x5230",{"_index":3497,"title":{},"body":{"standards/time.html#Time":{}}}],["x5f97;&#x5230;&#x4e00;&#x4e2a",{"_index":1468,"title":{},"body":{"basic/map.html#map":{}}}],["x5f97;&#x5230;&#x5305;&#x542b;&#x8be5;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x7684",{"_index":2355,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5f97;&#x5230;&#x65b0;&#x7684",{"_index":7112,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x5f97;&#x5230;&#x80af;&#x5b9a;&#x7ed3;&#x679c;&#x540e;&#xff0c;&#x901a;&#x8fc7",{"_index":3045,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5f97;&#x5230;&#xff0c;&#x56e0;&#x4e3a;&#x6709;&#x4f20;&#x9012",{"_index":9022,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5faa;&#x73af;&#x3002;&#x8fd9;&#x5c31;&#x76f8;&#x5f53;&#x4e8e;&#xff0c;&#x53ea;&#x8981;&#x6761;&#x4ef6;&#x672a;&#x88ab;&#x6ee1;&#x8db3;&#xff0c",{"_index":8027,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x5faa;&#x73af;&#x53ef;&#x76f4;&#x63a5;&#x5728",{"_index":2908,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5faa;&#x73af;&#x6216;&#x8df3;&#x51fa",{"_index":1109,"title":{},"body":{"basic/flow.html#for":{}}}],["x5faa;&#x73af;&#x63a7;&#x5236;&#x8bed;&#x53e5;&#xff1a",{"_index":1107,"title":{},"body":{"basic/flow.html#for":{}}}],["x5faa;&#x73af;&#x7684;&#x673a;&#x5236;&#x5927;&#x81f4;&#x662f;&#x4ece;&#x5404;&#x79cd;&#x961f;&#x5217;&#x3001;p",{"_index":6486,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5faa;&#x73af;&#x7684;&#x6e05;&#x9664;&#x5728",{"_index":2785,"title":{},"body":{"commands/build.html#工具":{}}}],["x5faa;&#x73af;&#xff1b",{"_index":6485,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5fc5;&#x987b;&#x548c",{"_index":5753,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x5fc5;&#x987b;&#x63d0;&#x4f9b;&#x8bc1;&#x4e66;&#x6587;&#x4ef6;&#x548c;&#x5bf9;&#x5e94;&#x7684;&#x79c1;&#x94a5;&#x6587;&#x4ef6;&#x3002;&#x5982;&#x679c;&#x8bc1;&#x4e66;&#x662f;&#x7531",{"_index":8930,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x5fc5;&#x987b;&#x662f;&#x4e00;&#x4e2a;&#x901a;&#x4fe1;&#x64cd;&#x4f5c;&#xff0c;&#x8981;&#x4e48;&#x662f;&#x53d1;&#x9001;&#x8981;&#x4e48;&#x662f;&#x63a5;&#x6536;&#x3002",{"_index":1067,"title":{},"body":{"basic/flow.html#select":{}}}],["x5fc5;&#x987b;&#x6709",{"_index":2158,"title":{},"body":{"basic/package.html#main":{}}}],["x5fc5;&#x987b;&#x6709;&#xff0c;&#x5426;&#x5219;&#x4f1a;&#x88ab;&#x7406;&#x89e3;&#x4e3a",{"_index":1233,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5fc5;&#x987b;&#x914d;&#x7f6e;&#x4e00;&#x4e2a;&#x73af;&#x5883;&#x53d8;&#x91cf",{"_index":939,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x600e;&#x6837;&#x4f30;&#x7b97;&#x5207;&#x7247;&#x5bb9;&#x91cf;&#x7684;&#x589e;&#x957f",{"_index":1920,"title":{"basic/slice.html#怎样估算切片容量的增长":{}},"body":{}}],["x600e;&#x6837;&#x624d;&#x80fd;&#x8ba9;&#x4e3b",{"_index":6320,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x600e;&#x6837;&#x8ba9",{"_index":685,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x600e;&#x6837;&#x8ba9;&#x542f;&#x7528;&#x7684;&#x591a;&#x4e2a",{"_index":6340,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x600e;&#x6837;&#x901a;&#x8fc7",{"_index":8265,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6027;&#x80fd;&#x5206;&#x6790",{"_index":4233,"title":{"basic/test.html#性能分析":{}},"body":{}}],["x6027;&#x80fd;&#x5dee;&#x4e9b;&#x53ef;&#x4ee5;&#x9884;&#x89c1;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x63a5;&#x6536;&#x7684;&#x662f",{"_index":4967,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x4e2d;&#x7684;&#x8ba1;&#x65f6;&#x5668",{"_index":4228,"title":{"basic/test.html#性能测试函数中的计时器":{}},"body":{}}],["x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x7684;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c",{"_index":4175,"title":{"basic/test.html#性能测试的测试结果":{}},"body":{}}],["x603b;&#x5f00;&#x652f",{"_index":2375,"title":{},"body":{"basic/interface.html#接口":{}}}],["x603b;&#x6253;&#x5370;&#x6570;&#x503c;&#x7684;&#x6b63;&#x8d1f;&#x53f7;&#xff1b;&#x5bf9;&#x4e8e;%q&#xff08;%+q&#xff09;&#x4fdd;&#x8bc1;&#x53ea;&#x8f93;&#x51fa",{"_index":4705,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x603b;&#x662f;&#x4ece",{"_index":1900,"title":{},"body":{"basic/slice.html#append-和-copy":{}}}],["x603b;&#x662f;&#x4f1a;&#x6309;&#x7167;&#x5148;&#x5165;&#x5148;&#x51fa;&#x7684;&#x987a;&#x5e8f;&#xff0c;&#x5f88;&#x5feb;&#x5730;&#x7531;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x5185;&#x90e8;&#x7684;&#x8c03;&#x5ea6;&#x5668;&#x5b89;&#x6392;&#x8fd0;&#x884c;&#x3002",{"_index":6282,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x603b;&#x662f;&#x4f1a;&#x88ab;&#x4f18;&#x5148;&#x590d;&#x7528;&#x3002",{"_index":6274,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x603b;&#x662f;&#x53ef;&#x7528;&#x7684;&#x3002",{"_index":8938,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x603b;&#x662f;&#x6210;&#x529f;&#x3002",{"_index":7505,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x603b;&#x662f;&#x8fd4;&#x56de;&#x5339;&#x914d;&#x8be5;&#x8bf7;&#x6c42;&#x7684;&#x7684;&#x5df2;&#x6ce8;&#x518c;&#x6a21;&#x5f0f;&#xff1b;&#x5728;&#x5185;&#x5efa;&#x91cd;&#x5b9a;&#x5411",{"_index":8952,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x603b;&#x7ed3;&#x4e0b;&#xff0c;http",{"_index":9052,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x60c5;&#x51b5;&#x4e0b;&#x7684;&#x8c03;&#x5ea6",{"_index":6572,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x610f;&#x5473;&#x7740;&#xff1a",{"_index":4182,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6210;&#x4e00;&#x4e2a",{"_index":714,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x6210;&#x4e3a;&#x201c;&#x60ac;&#x7a7a;&#x94fe;&#x63a5;&#x201d;&#xff0c;&#x5176;&#x4ed6;&#x7cfb;&#x7edf",{"_index":7617,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6210;&#x4e3a;&#x4e86",{"_index":8991,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6210;&#x529f",{"_index":1414,"title":{},"body":{"basic/map.html#map":{}}}],["x6210;&#x529f;&#x4f20;&#x8f93;&#x4e4b;&#x540e;&#xff0c;&#x4e24;&#x4e2a",{"_index":2935,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6210;&#x529f;&#x7684",{"_index":7055,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x6210;&#x5458;&#x3002",{"_index":1582,"title":{},"body":{"basic/json.html#序列化":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x6210;&#x5458;&#x5bf9;&#x5e94;&#x5230",{"_index":1571,"title":{},"body":{"basic/json.html#序列化":{}}}],["x6210;&#x5458;&#x7684",{"_index":1574,"title":{},"body":{"basic/json.html#序列化":{}}}],["x6210;&#x7ee9",{"_index":9219,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x6211;&#x4eec;&#x518d;&#x770b;&#x4e0b;&#x9762;&#x4ee3;&#x7801;&#xff1a",{"_index":9054,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5",{"_index":7825,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5bb9;&#x91cf;&#x53ea;&#x6709",{"_index":7816,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5229;&#x7528",{"_index":3014,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x628a;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60;&#x5f53;&#x4f5c;&#x9488;&#x5bf9;&#x67d0;&#x79cd;&#x6570;&#x636e;&#x7684;&#x7f13;&#x5b58;&#x6765;&#x7528",{"_index":8286,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x9009;&#x7528;&#x53e6;&#x5916;&#x4e00;&#x4e2a;&#x540c;&#x6b65;&#x5de5;&#x5177;&#xff0c;&#x5373;&#xff1a",{"_index":8070,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x4e3a;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x7f16;&#x5199;&#x540d;&#x4e3a",{"_index":1293,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8be5;&#x63a5;&#x53e3;&#x5c06;&#x6570;&#x636e;&#x5199;&#x5165;&#x5230;&#x6570;&#x636e;&#x6d41;&#x7684;&#x7279;&#x5b9a;&#x504f;&#x79fb;&#x91cf;&#x4e4b;&#x540e;&#x3002",{"_index":6876,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8c03;&#x7528;&#x5b83;&#xff0c;&#x4ea7;&#x751f;&#x4e00;&#x4e2a;&#x4f1a;&#x643a;&#x5e26;&#x989d;&#x5916;&#x6570;&#x636e;&#x7684",{"_index":8237,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6211;&#x4eec;&#x5411;&#x539f;&#x5b50;&#x503c;&#x5b58;&#x50a8;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x503c;&#xff0c;&#x51b3;&#x5b9a;&#x4e86;&#x5b83;&#x4eca;&#x540e;&#x80fd;&#x4e14;&#x53ea;&#x80fd;&#x5b58;&#x50a8;&#x54ea;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x3002",{"_index":8047,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x6211;&#x4eec;&#x5728",{"_index":3792,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6211;&#x4eec;&#x5b89;&#x88c5;&#x597d",{"_index":937,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x6211;&#x4eec;&#x5b8c;&#x5168;&#x53ef;&#x4ee5;&#x6839;&#x636e;&#x60c5;&#x51b5;&#x6765;&#x81ea;&#x5b9a;&#x4e49;&#x6211;&#x4eec;&#x7684",{"_index":9062,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6211;&#x4eec;&#x77e5;&#x9053;&#xff0c",{"_index":9077,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x6211;&#x4eec;&#x7edd;&#x5bf9;&#x4e0d;&#x80fd;&#x5e26;&#x7740;&#x4efb;&#x4f55;&#x5b9e;&#x9645;&#x7c7b;&#x578b;&#x4e3a;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#x3001;&#x5b57;&#x5178;&#x7c7b;&#x578b;&#x6216;&#x5207;&#x7247;&#x7c7b;&#x578b;&#x7684;&#x952e;&#x503c;&#x53bb;&#x64cd;&#x4f5c;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178",{"_index":8342,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x6211;&#x4eec;&#x8fd8;&#x53ef;&#x4ee5;&#x8fdb;&#x4e00;&#x6b65;&#x5730;&#x62c6;&#x5206;&#xff0c;&#x628a;&#x6bcf;&#x4e2a;&#x5b57;&#x7b26;&#x7684",{"_index":3966,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6211;&#x4eec;&#x90fd;&#x5f3a;&#x70c8;&#x5efa;&#x8bae;&#x7528;&#x6237;&#x5728;&#x4e00;&#x4e2a",{"_index":2230,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x6211;&#x4eec;&#x90fd;&#x77e5;&#x9053;&#xff0c",{"_index":3925,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6211;&#x7684;2&#x8fb9;&#x6709;&#x7a7a;&#x683c",{"_index":3780,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6216",{"_index":996,"title":{},"body":{"basic/env_config.html#Go-Module":{},"basic/map.html#map":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体比较":{},"basic/package.html#包声明":{},"basic/var.html#赋值":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"basic/test.html#测试":{},"basic/test.html#测试函数":{},"standards/data/big.html#big":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html#占位符":{},"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/io/bufio.html#bufio-Writer":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#规整化路径":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{}}}],["x6216;&#x53d1;&#x751f;&#x9519;&#x8bef;&#x3002;&#x5176;&#x8fd4;&#x56de;&#x503c",{"_index":6888,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x6216;&#x53d1;&#x751f;&#x9519;&#x8bef;&#x3002;&#x5b83;&#x8fd4;&#x56de;&#x590d;&#x5236;&#x7684;&#x5b57;&#x8282;&#x6570;&#xff0c;&#x5982;&#x679c;&#x6709;&#x9519;&#x8bef;&#x7684;&#x8bdd;&#xff0c;&#x8fd8;&#x4f1a;&#x8fd4;&#x56de;&#x5728;&#x590d;&#x5236;&#x65f6;&#x9047;&#x5230;&#x7684;&#x7b2c;&#x4e00",{"_index":7053,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x6216;&#x591a;&#x4e2a;&#x975e;&#x8def;&#x5f84;&#x5206;&#x9694;&#x7b26;&#x7684;&#x5b57;&#x7b26",{"_index":5739,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x6216;&#x5e76;&#x884c;&#x8c03;&#x7528",{"_index":7038,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x6216;&#x65b0;&#x5f00;&#x4e00;&#x4e2a;&#x8fde;&#x63a5;&#x6765;&#x670d;&#x52a1;&#xff0c;&#x56e0;&#x6b64;&#xff0c;&#x4f60;&#x7684;&#x4ee3;&#x7801;&#x4e2d;&#x4e0d;&#x9700;&#x8981;&#x91cd;&#x8bd5;&#x7684;&#x903b;&#x8f91;&#x3002",{"_index":4507,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x6216;&#x8005",{"_index":197,"title":{},"body":{"index.html#package":{},"index.html#类型断言":{},"basic/error.html#error-类型":{},"basic/env_config.html#Go-Module":{},"basic/oop.html#方法":{},"basic/package.html#包":{},"basic/package.html#main":{},"basic/var.html#变量":{},"theme/theme-usage.html#Quick-Start":{},"standards/data/big.html#big":{},"standards/io/bufio.html#bufio-Reader":{},"standards/text/strings.html#从字符串中读取内容":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#竞争检查器":{},"standards/net/http.html#Request":{}}}],["x6216;&#x8005;&#x8bf4;&#x662f",{"_index":6425,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6216;&#x8005;&#x8bf4;&#x66f4;&#x52a0;&#x5bbd;&#x677e;&#x7684;&#x505a;&#x6cd5;&#x3002",{"_index":8033,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x6216;&#x8fd4;&#x56de;&#x503c;&#x662f;&#x76f8;&#x5bf9;&#x8def;&#x5f84;&#xff0c;&#x5219;&#x662f;&#x76f8;&#x5bf9;&#x4e8e;&#x8fdb;&#x7a0b;&#x5f53;&#x524d;&#x5de5;&#x4f5c;&#x76ee;&#x5f55;&#x3002",{"_index":5726,"title":{},"body":{"standards/os/filepath.html#符号链接指向的路径名":{}}}],["x622a;&#x53d6;&#x51fd;&#x6570",{"_index":6127,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x622a;&#x53d6;&#x5207;&#x7247",{"_index":1903,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x622a;&#x65ad;&#x6587;&#x4ef6",{"_index":7478,"title":{"standards/os/os.html#截断文件":{}},"body":{}}],["x6237;&#x7aef;&#x4f1a;&#x63a5;&#x6536;&#x5230",{"_index":9048,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6240;&#x4ee5",{"_index":557,"title":{},"body":{"advance/gc.html#监控":{},"standards/net/http.html#HTTP-Server":{}}}],["x6240;&#x4ee5;&#x51fd;&#x6570;&#x53c2;&#x6570;&#x53d8;&#x91cf;&#x63a5;&#x6536;&#x7684;&#x662f;&#x4e00;&#x4e2a;&#x590d;&#x5236;&#x7684;&#x526f;&#x672c;&#xff0c;&#x5e76;&#x4e0d;&#x662f;&#x539f;&#x59cb;&#x8c03;&#x7528;&#x7684;&#x53d8;&#x91cf;&#x3002",{"_index":790,"title":{},"body":{"basic/array.html#数组传入函数":{}}}],["x6240;&#x4ee5;&#x53ef;&#x4ee5;&#x8c03;&#x7528",{"_index":9222,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x6240;&#x4ee5;&#x53ef;&#x80fd;&#x7684;&#x8bdd;&#xff0c;&#x5c06;&#x53d8;&#x91cf;&#x9650;&#x5b9a;&#x5728",{"_index":7850,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6240;&#x4ee5;&#x54ea;&#x4e2a",{"_index":6315,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6240;&#x4ee5;&#x6bcf;&#x4e2a",{"_index":2993,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6240;&#x4ee5;&#x8bf4;&#xff0c;&#x5982;&#x679c;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684",{"_index":7966,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6240;&#x4ee5;&#xff0c",{"_index":8121,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x6240;&#x4ee5;&#xff0c;&#x4e00;&#x65e6;&#x4f60;&#x51b3;&#x5b9a;&#x4e86;&#x8981;&#x5bf9;&#x4e00;&#x4e2a;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x8fdb;&#x884c;&#x4fdd;&#x62a4;&#xff0c;&#x90a3;&#x5c31;&#x8981;&#x505a;&#x5230;&#x5b8c;&#x5168;&#x7684;&#x4fdd;&#x62a4;&#x3002;&#x4e0d;&#x5b8c;&#x5168;&#x7684;&#x4fdd;&#x62a4;&#x57fa;&#x672c;&#x4e0a;&#x4e0e;&#x4e0d;&#x4fdd;&#x62a4;&#x6ca1;&#x6709;&#x4ec0;&#x4e48;&#x533a;&#x522b;&#x3002",{"_index":8039,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x6240;&#x4ee5;&#xff0c;&#x4e00;&#x822c;&#x7684;&#xff0c;&#x6211;&#x4eec;&#x5e94;&#x8be5;&#x603b;&#x662f;&#x4f7f;&#x7528",{"_index":3506,"title":{},"body":{"standards/time.html#Time":{}}}],["x6240;&#x4ee5;&#xff0c;&#x4f20;&#x5165;&#x503c;&#x672c;&#x8eab;&#x6ca1;&#x6709;&#x4efb;&#x4f55;&#x610f;&#x4e49;&#x3002",{"_index":8013,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x6240;&#x4ee5;&#xff0c;&#x5b9e;&#x9645;&#x5e94;&#x7528;&#x65f6;&#xff0c;&#x5e94;&#x8be5;&#x5728;&#x4e00;&#x4e2a",{"_index":4459,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x6240;&#x4ee5;&#xff0c;&#x5bf9",{"_index":9259,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x6240;&#x4ee5;&#xff0c;&#x901a;&#x5e38;&#x7684;&#x5199;&#x6cd5;&#x5982;&#x4e0b;&#xff1a",{"_index":7441,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6240;&#x521b;&#x5efa;&#x7684;&#x53ea;&#x662f;&#x8def;&#x5f84;&#x540d;&#x4e2d;&#x7684;&#x6700;&#x540e;&#x4e00;&#x90e8;&#x5206;&#xff0c;&#x5982;&#x679c;&#x7236;&#x76ee;&#x5f55;&#x4e0d;&#x5b58;&#x5728;&#xff0c;&#x521b;&#x5efa;&#x4f1a;&#x5931;&#x8d25;&#x3002",{"_index":7642,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6240;&#x547d;&#x540d;&#x7684;&#x6587;&#x4ef6;&#x6216;&#x76ee;&#x5f55;&#x5728;&#x8c03;&#x7528;&#x65f6;&#x65e0;&#x9700;&#x5b58;&#x5728;&#x3002;&#x56e0;&#x4e3a;&#x5373;&#x4fbf;&#x5f53;&#x65f6;&#x5b58;&#x5728;&#xff0c;&#x4e5f;&#x65e0;&#x6cd5;&#x963b;&#x6b62;&#x540e;&#x6765;&#x5c06;&#x5176;&#x5220;&#x9664;&#x3002;&#x8fd9;&#x65f6;&#xff0c",{"_index":7616,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6240;&#x5728;&#x7684",{"_index":2904,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6240;&#x6267;&#x884c;&#x7684;&#x6d41;&#x7a0b;&#xff0c",{"_index":7857,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6240;&#x6709",{"_index":6512,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6240;&#x6709;&#x4f20;&#x7ed9;&#x51fd;&#x6570;&#x7684;&#x53c2;&#x6570;&#x503c;&#x90fd;&#x4f1a;&#x88ab;&#x590d;&#x5236;&#xff0c;&#x51fd;&#x6570;&#x5728;&#x5176;&#x5185;&#x90e8;&#x4f7f;&#x7528;&#x7684;&#x5e76;&#x4e0d;&#x662f;&#x53c2;&#x6570;&#x503c;&#x7684;&#x539f;&#x503c;&#xff0c",{"_index":3219,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x6240;&#x6709;&#x547d;&#x540d;&#x53ea;&#x80fd;&#x4ee5;&#x5b57;&#x6bcd;&#x6216;&#x8005",{"_index":218,"title":{},"body":{"index.html#命名":{}}}],["x6240;&#x6709;&#x7684",{"_index":6433,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6240;&#x6709;&#x7684;&#x6784;&#x5efa;&#xff0c;&#x90fd;&#x4e0d;&#x4f7f;&#x7528",{"_index":967,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6240;&#x6709;&#x7684;&#x6784;&#x5efa;&#xff0c;&#x90fd;&#x4f7f;&#x7528",{"_index":966,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6240;&#x6709;&#x76f8;&#x5173;&#x7684;&#x73af;&#x5883;&#x53d8;&#x91cf;&#x3002",{"_index":2844,"title":{},"body":{"commands/build.html#工具":{}}}],["x6240;&#x8c13;&#x4e2d;&#x95f4;&#x4ef6;&#xff0c;&#x5c31;&#x662f;&#x8fde;&#x63a5;&#x4e0a;&#x4e0b;&#x7ea7;&#x4e0d;&#x540c;&#x529f;&#x80fd;&#x7684;&#x51fd;&#x6570;&#x6216;&#x8005;&#x8f6f;&#x4ef6;&#xff0c;&#x901a;&#x5e38;&#x8fdb;&#x884c;&#x4e00;&#x4e9b;&#x5305;&#x88f9;&#x51fd;&#x6570;&#x7684;&#x884c;&#x4e3a;&#xff0c;&#x4e3a;&#x88ab;&#x5305;&#x88f9;&#x51fd;&#x6570;&#x63d0;&#x4f9b;&#x6dfb;&#x52a0;&#x4e00;&#x4e9b;&#x529f;&#x80fd;&#x6216;&#x884c;&#x4e3a;&#x3002;&#x524d;&#x6587;&#x7684",{"_index":9097,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x6240;&#x8c13;&#x7684",{"_index":7872,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6240;&#x8c13;&#x7684;&#x4ea4;&#x6362;&#x6307;&#x7684;&#x662f;&#xff0c;&#x628a;&#x65b0;&#x503c;&#x8d4b;&#x7ed9;&#x53d8;&#x91cf;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x53d8;&#x91cf;&#x7684;&#x65e7;&#x503c",{"_index":8022,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x6240;&#x9700;&#x5b57;&#x8282;&#x6570",{"_index":3917,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x624d;&#x4f1a;&#x8c03;&#x7528",{"_index":2905,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6253;&#x5370",{"_index":2038,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x6253;&#x5370;&#x51fa;&#x6765;&#x6211;&#x4eec;&#x6b63;&#x5728;&#x7f16;&#x8bd1;&#x7684;&#x5305;&#x540d",{"_index":2744,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x51fa;&#x6765;&#x6267;&#x884c;&#x7684;&#x547d;&#x4ee4;&#xff0c;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x548c",{"_index":2746,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x51fa;&#x6765;&#x6267;&#x884c;&#x7684;&#x8be6;&#x7ec6;&#x547d;&#x4ee4;&#xff0c;&#x5176;&#x5b9e;&#x5c31;&#x662f",{"_index":2787,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x51fa;&#x6765;&#x7f16;&#x8bd1;&#x65f6;&#x5019;&#x7684;&#x4e34;&#x65f6;&#x6587;&#x4ef6;&#x5939;&#x540d;&#x79f0;&#xff0c;&#x5e76;&#x4e14;&#x5982;&#x679c;&#x5df2;&#x7ecf;&#x5b58;&#x5728;&#x7684;&#x8bdd;&#x5c31;&#x4e0d;&#x8981;&#x5220;&#x9664",{"_index":2745,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x51fa;http",{"_index":8907,"title":{},"body":{"standards/net/http.html#client":{}}}],["x6253;&#x5370;&#x5b50;&#x5207;&#x7247;&#x4ece;&#x7d22;&#x5f15",{"_index":1905,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x6253;&#x5370;&#x6240;&#x6709;&#x7684;&#x8bed;&#x6cd5;&#x9519;&#x8bef;&#x5230;&#x6807;&#x51c6;&#x8f93;&#x51fa;&#x3002;&#x5982;&#x679c;&#x4e0d;&#x4f7f;&#x7528;&#x6b64;&#x6807;&#x8bb0;&#xff0c;&#x5219;&#x53ea;&#x4f1a;&#x6253;&#x5370;&#x4e0d;&#x540c;&#x884c;&#x7684;&#x524d;10&#x4e2a;&#x9519;&#x8bef;&#x3002",{"_index":2798,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x6392;&#x5e8f;&#x540e;&#x7684",{"_index":9225,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x6253;&#x5370;&#x6587;&#x6863;&#x3002",{"_index":2809,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x672a;&#x6392;&#x5e8f;&#x7684",{"_index":9220,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x6253;&#x5370;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c;&#x3002;&#x8fd9;&#x5c31;&#x662f;&#x901a;&#x5e38;&#x60c5;&#x51b5;&#x4e0b;&#x7684;&#x4e3b;&#x8981;&#x6d4b;&#x8bd5;&#x6d41;&#x7a0b;&#x3002",{"_index":4156,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x6253;&#x5370;&#x7684;&#x5185;&#x5bb9;&#x4f1a;&#x662f",{"_index":1090,"title":{},"body":{"basic/flow.html#for":{}}}],["x6253;&#x5370;&#x7684;&#x6267;&#x884c;&#x7248;&#x672c",{"_index":2788,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x9519;&#x8bef;&#x65e5;&#x5fd7;&#x3002",{"_index":4109,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x6253;&#x5f00",{"_index":928,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x6253;&#x5f00;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#xff0c;&#x4e00;&#x822c;&#x901a;&#x8fc7",{"_index":7402,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6253;&#x5f00;&#x6587;&#x4ef6",{"_index":6877,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x6253;&#x5f00;&#x6587;&#x4ef6;&#x65f6;&#x6307;&#x5b9a",{"_index":7430,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6253;&#x5f00;&#x6587;&#x4ef6;&#x7528;&#x4e8e;&#x540c;&#x6b65",{"_index":7354,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6253;&#x5f00;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x5373;&#x5b50;&#x8fdb;&#x7a0b;&#x4e0d;&#x4f1a;&#x91cd;&#x7528;&#x8be5;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x3002",{"_index":7361,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6253;&#x5f00;&#x76ee;&#x5f55;&#xff0c;&#x9012;&#x5f52;&#x8bfb;&#x53d6;&#x76ee;&#x5f55;&#x4e2d;&#x5185;&#x5bb9;&#xff0c;&#x6267;&#x884c;&#x5220;&#x9664;&#x64cd;&#x4f5c;&#x3002",{"_index":7662,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6267;&#x884c",{"_index":2243,"title":{},"body":{"basic/package.html#初始化包":{},"concurrent/sync_lock.html#同步锁":{},"standards/net/http.html#中间件-Middleware":{}}}],["x6267;&#x884c;&#x201c;&#x9996;&#x6b21;&#x88ab;&#x8c03;&#x7528;&#x65f6;&#x4f20;&#x5165;&#x7684;&#x201d;&#x90a3;&#x4e2a;&#x51fd;&#x6570;&#xff0c;&#x5e76;&#x4e14;&#x4e4b;&#x540e;&#x4e0d;&#x4f1a;&#x518d;&#x6267;&#x884c;&#x4efb;&#x4f55;&#x53c2;&#x6570;&#x51fd;&#x6570",{"_index":8120,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x6267;&#x884c;&#x4e4b;&#x524d;&#x548c;&#x4e4b;&#x540e;&#xff0c",{"_index":4482,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x6267;&#x884c;&#x5176;&#x4ed6;&#x4efb;&#x52a1;&#xff0c;m",{"_index":6510,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6267;&#x884c;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x800c;&#x5411;&#x961f;&#x5217;&#x63d2;&#x5165;&#x5143;&#x7d20;&#x3002",{"_index":2949,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6267;&#x884c;&#x5b8c;&#x4f1a;&#x81ea;&#x52a8;&#x4e2d;&#x65ad",{"_index":1041,"title":{},"body":{"basic/flow.html#switch":{}}}],["x6267;&#x884c;&#x5b8c;&#x6bd5",{"_index":9113,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x6267;&#x884c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x800c;&#x91ca;&#x653e;&#x4e86;&#x65b0;&#x7684;&#x961f;&#x5217;&#x7a7a;&#x95f4;&#x3002",{"_index":2946,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6267;&#x884c;&#x7684;&#x5b9e;&#x9645;&#x6548;&#x679c;&#xff0c;&#x53ea;&#x4e0d;&#x8fc7;&#x7b80;&#x5355;&#x58f0;&#x660e;&#x4e86;&#x4e00;&#x4e2a;&#x7ed3;&#x6784;&#x4f53",{"_index":9056,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6267;&#x884c;&#x8c03;&#x5ea6;&#x3002",{"_index":6545,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6267;&#x884c;&#xff1a",{"_index":7070,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x6269;&#x5bb9;&#x65b9;&#x6cd5",{"_index":3829,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x626b;&#x63cf;&#x548c;&#x6807;&#x8bb0;&#x5b8c;&#x6210;&#x540e;&#xff0c;&#x53ea;&#x5269;&#x4e0b;&#x767d;&#x8272;&#xff08;&#x5f85;&#x56de;&#x6536;&#xff09;&#x548c;&#x9ed1;&#x8272;&#xff08;&#x6d3b;&#x8dc3;&#x5bf9;&#x8c61;&#xff09;&#x7684;&#x5bf9;&#x8c61;&#xff0c;&#x6e05;&#x7406;&#x64cd;&#x4f5c;&#x5c06;&#x767d;&#x8272;&#x5bf9;&#x8c61;&#x5185;&#x5b58;&#x56de;&#x6536;&#x3002",{"_index":520,"title":{},"body":{"advance/gc.html#三色标记和写屏障":{}}}],["x6279;&#x91cf;&#x58f0;&#x660e;&#x591a;&#x4e2a;&#x5e38;&#x91cf",{"_index":1350,"title":{},"body":{"basic/constant.html#常量":{}}}],["x628a;&#x6240;&#x6709;&#x7684;&#x7ebf;&#x7a0b;&#x5168;&#x90e8;&#x51bb;&#x7ed3;&#x6389;&#xff0c;&#x610f;&#x5473;&#x7740;&#x2f64;&#x6237;&#x903b;&#x8f91;&#x90fd;&#x662f;&#x6682;&#x505c;&#x7684;&#xff0c;&#x6240;&#x6709;&#x7684;&#x2f64;&#x6237;&#x5bf9;&#x8c61;&#x90fd;&#x4e0d;&#x4f1a;&#x88ab;&#x4fee;&#x6539;&#x4e86",{"_index":509,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x628a;&#x6539;&#x5199;&#x540e;&#x7684;&#x5185;&#x5bb9;&#x76f4;&#x63a5;&#x5199;&#x5165;&#x5230;&#x6587;&#x4ef6;&#x4e2d;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x4f5c;&#x4e3a;&#x7ed3;&#x679c;&#x6253;&#x5370;&#x5230;&#x6807;&#x51c6;&#x8f93;&#x51fa;&#x3002",{"_index":2793,"title":{},"body":{"commands/build.html#工具":{}}}],["x628a;&#x8c03;&#x7528;&#x5b83;&#x7684",{"_index":7934,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x628a;&#x9700;&#x8981;&#x6267;&#x884c;&#x7684;&#x6e05;&#x9664;&#x547d;&#x4ee4;&#x6253;&#x5370;&#x51fa;&#x6765;&#xff0c;&#x4f46;&#x662f;&#x4e0d;&#x6267;&#x884c;&#xff0c;&#x8fd9;&#x6837;&#x5c31;&#x53ef;&#x4ee5;&#x5f88;&#x5bb9;&#x6613;&#x7684;&#x77e5;&#x9053;&#x5e95;&#x5c42;&#x662f;&#x5982;&#x4f55;&#x8fd0;&#x884c;&#x7684",{"_index":2784,"title":{},"body":{"commands/build.html#工具":{}}}],["x628a;&#x9700;&#x8981;&#x6267;&#x884c;&#x7684;&#x7f16;&#x8bd1;&#x547d;&#x4ee4;&#x6253;&#x5370;&#x51fa;&#x6765;&#xff0c;&#x4f46;&#x662f;&#x4e0d;&#x6267;&#x884c;&#xff0c;&#x8fd9;&#x6837;&#x5c31;&#x53ef;&#x4ee5;&#x5f88;&#x5bb9;&#x6613;&#x7684;&#x77e5;&#x9053;&#x5e95;&#x5c42;&#x662f;&#x5982;&#x4f55;&#x8fd0;&#x884c;&#x7684",{"_index":2741,"title":{},"body":{"commands/build.html#工具":{}}}],["x629b;&#x51fa;&#x7684",{"_index":650,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x62a2;&#x5360;&#x5f0f;&#x8c03;&#x5ea6",{"_index":6516,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x62a2;&#x5360;&#x5f0f;&#x8c03;&#x5ea6;&#x53ef;&#x4ee5;&#x89e3;&#x51b3;&#x8fd9;&#x79cd;&#x95ee;&#x9898;&#xff0c;&#x5728;&#x62a2;&#x5360;&#x5f0f;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x5982;&#x679c;&#x4e00;&#x4e2a",{"_index":6539,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x62a2;&#x8d70;&#x4e86;)&#xff0c",{"_index":6596,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x62a5;&#x6587;&#x4f53",{"_index":8744,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x62a5;&#x6587;&#x5934",{"_index":8743,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x62a5;&#x6587;&#x7f16;&#x7801",{"_index":8858,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x62a5;&#x6587;&#x957f;&#x5ea6",{"_index":8745,"title":{},"body":{"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["x62e5;&#x6709;&#x7684",{"_index":1426,"title":{},"body":{"basic/map.html#map":{}}}],["x62e5;&#x6709;&#x7c7b;&#x4f3c;c&#x8bed;&#x8a00;&#x7684;&#x6307;&#x9488;&#x8fd9;&#x4e2a;&#x76f8;&#x5bf9;&#x53e4;&#x8001;&#x7684;&#x7279;&#x6027;&#x3002;&#x4f46;&#x4e0d;&#x540c;&#x4e8",{"_index":1706,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x62f7;&#x8d1d;&#x5207;&#x7247",{"_index":1897,"title":{},"body":{"basic/slice.html#append-和-copy":{}}}],["x62fc;&#x63a5;&#x5b57;&#x7b26;&#x4e32;&#xff0c",{"_index":3754,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x62fc;&#x63a5;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5185;&#x90e8;&#x4f7f;&#x7528",{"_index":3750,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x62fc;&#x63a5;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5982",{"_index":3746,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x62fc;&#x63a5;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x6bd4;&#x8f83;&#x7406;&#x60f3;&#xff0c;&#x53ef;&#x4ee5;&#x5f53;&#x6210;&#x53ef;&#x53d8;&#x5b57;&#x7b26;&#x4f7f;&#x7528;&#xff0c;&#x5bf9;&#x5185;&#x5b58;&#x7684;&#x589e;&#x957f;&#x4e5f;&#x6709;&#x4f18;&#x5316;&#xff0c;&#x5982;&#x679c;&#x80fd;&#x9884;&#x4f30;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x957f;&#x5ea6;&#xff0c;&#x8fd8;&#x53ef",{"_index":3757,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x62fc;&#x63a5;&#x65b9;&#x6cd5",{"_index":3821,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6307;&#x5411",{"_index":7599,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6307;&#x5411;&#x6307;&#x9488",{"_index":1698,"title":{},"body":{"basic/pointer.html#指向指针的指针":{}}}],["x6307;&#x5411;&#x6307;&#x9488;&#x7684;&#x6307;&#x9488",{"_index":1696,"title":{"basic/pointer.html#指向指针的指针":{}},"body":{}}],["x6307;&#x5411;&#x6307;&#x9488;&#x7684;&#x6307;&#x9488;&#x53d8;&#x91cf",{"_index":1701,"title":{},"body":{"basic/pointer.html#指向指针的指针":{}}}],["x6307;&#x5b9a;&#x4e86;&#x6587;&#x4ef6;&#x7684;&#x6a21;&#x5f0f;&#x548c;&#x6743;&#x9650;&#x4f4d;&#xff0c;&#x7c7b;&#x578b;&#x662f",{"_index":7362,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6307;&#x5b9a;&#x5143;&#x7d20;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x503c;&#xff0c;&#x5176;&#x4e2d",{"_index":8809,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x6307;&#x5b9a;&#x5305",{"_index":2810,"title":{},"body":{"commands/build.html#工具":{}}}],["x6307;&#x5b9a;&#x5305;&#x6210;&#x5458",{"_index":2811,"title":{},"body":{"commands/build.html#工具":{}}}],["x6307;&#x5b9a;&#x53ef;&#x4ee5;&#x5e76;&#x884c;&#x53ef;&#x8fd0;&#x884c;&#x7684;&#x7f16;&#x8bd1;&#x6570;&#x76ee;&#xff0c;&#x9ed8;&#x8ba4;&#x662f;cpu&#x6570;&#x76e",{"_index":2742,"title":{},"body":{"commands/build.html#工具":{}}}],["x6307;&#x5b9a;&#x5bb9;&#x91cf",{"_index":1893,"title":{},"body":{"basic/slice.html#slice":{}}}],["x6307;&#x5b9a;&#x7684;&#x4f4d;&#x7f6e;&#x5f00;&#x59cb;&#x8bfb;&#xff0c;&#x4e14",{"_index":7417,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6307;&#x5b9a;&#x7684;&#x5730;&#x5740;&#xff08;&#x6587;&#x4ef6",{"_index":5797,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x6307;&#x5b9a;&#x7684;&#x5bf9;&#x8c61;&#x4e0d",{"_index":7653,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6307;&#x5b9a;&#x7684;&#x6587;&#x4ef6;&#x4e2d;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#x5e76;&#x8fd4;&#x56de;&#x6587;&#x4ef6;&#x7684;&#x5185;&#x5bb9;&#x3002;&#x6210;&#x529f;&#x7684;&#x8c03;&#x7528;&#x8fd4;&#x56de;&#x7684",{"_index":4815,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x6307;&#x5b9a;&#x7684;&#x6587;&#x4ef6;&#x5bf9;&#x8c61;&#x7684;&#x8bbf;&#x95ee;&#x65f6;&#x95f4;&#x548c;&#x4fee;&#x6539;&#x65f6;&#x95f4;&#xff0c;&#x7c7b;&#x4f3c",{"_index":7535,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6307;&#x5b9a;&#x7684;&#x6587;&#x4ef6;&#x6216;&#x76ee;&#x5f55;&#x3002;&#x5982;&#x679c;&#x51fa;&#x9519;&#xff0c;&#x4f1a;&#x8fd4;&#x56d",{"_index":7602,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6307;&#x5b9a;&#x7684;&#x6587;&#x4ef6;&#x6216;&#x76ee;&#x5f55;&#x65f6;&#x51fa;&#x73b0;&#x4e86;&#x95ee;&#x9898;&#xff0c;&#x4f20;&#x5165;&#x7684;&#x53c2;&#x6570",{"_index":5800,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x6307;&#x5b9a;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x6216;&#x76ee;&#x5f55;&#x53ca;&#x5b83;&#x5305;&#x542b;&#x7684;&#x4efb;&#x4f55;&#x4e0b;&#x7ea7;&#x5bf9;&#x8c61;&#x3002;&#x5b83;&#x4f1a;&#x5c1d;&#x8bd5;&#x5220;&#x9664;&#x6240;&#x6709;&#x4e1c;&#x897f;&#xff0c;&#x9664;&#x975e;&#x9047;&#x5230;&#x9519;&#x8bef;&#x5e76;&#x8fd4;&#x56de;&#x3002;&#x5982;&#x679c",{"_index":7652,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6307;&#x5b9a;&#x7684;&#x6743;&#x9650;&#x8fdb;&#x884c;&#x521b;&#x5efa;&#x4e00;&#x4e2a;,&#x6587;&#x4ef6;&#x5b58;&#x5728;&#x65f6;&#x4f1a;&#x5148;&#x6e05;&#x7a7a;&#x6587;&#x4ef6;&#x5185;&#x5bb9;&#x3002",{"_index":4822,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x6307;&#x5b9a;&#x7684;&#x6a21;&#x5f0f;&#xff08;&#x5982",{"_index":7340,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6307;&#x5b9a;&#x7684;&#x76ee;&#x5f55;&#x4e0b;&#x7684;&#x6587;&#x4ef6;&#x6811;&#xff0c;&#x5bf9;&#x6bcf;&#x4e00;&#x4e2a;&#x8be5;&#x6587;&#x4ef6;&#x6811;&#x4e2d;&#x7684;&#x76ee;&#x5f55;&#x548c;&#x6587;&#x4ef6;&#x90fd;&#x4f1a;&#x8c03;&#x7528",{"_index":5776,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x6307;&#x5b9a;&#x7684;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#x6307;&#x5411;&#x7684;&#x6587;&#x4ef6;&#x7684;&#x8def;&#x5f84;&#x3002;&#x5982;&#x679c;&#x51fa;&#x9519;&#xff0c;&#x4f1a;&#x8fd4;&#x56d",{"_index":7622,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6307;&#x5b9a;&#x76f8;&#x5e94;&#x7684;&#x7f16;&#x8bd1;&#x5668;&#xff0c;gccgo&#x8fd8;&#x662f;gc",{"_index":2751,"title":{},"body":{"commands/build.html#工具":{}}}],["x6307;&#x5b9a;&#x8f93;&#x51fa;&#x7684;&#x6587;&#x4ef6;&#x540d;&#xff0c;&#x53ef;&#x4ee5;&#x5e26;&#x4e0a;&#x8def;&#x5f84;&#xff0c;&#x4f8b;&#x5982",{"_index":2738,"title":{},"body":{"commands/build.html#工具":{}}}],["x6307;&#x5b9a;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x662f;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#x6216;&#x76f8;&#x5bf9;&#x8def;&#x5f84;&#xff08;&#x76f8;&#x5bf9;&#x4e8e;&#x8fdb;&#x7a0b;&#x5f53;&#x524d;&#x5de5;&#x4f5c;&#x76ee;&#x5f55;&#xff09;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x662f;&#x4e00;&#x4e2a;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#xff08;&#x4f1a;&#x5bf9;&#x5176;&#x8fdb;&#x884c;&#x89e3;&#x5f15;&#x7528;&#xff09;&#x3002",{"_index":7344,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6307;&#x6570;&#x51fd;&#x6570",{"_index":6088,"title":{},"body":{"standards/data/math.html#幂次函数":{}}}],["x6307;&#x793a",{"_index":5734,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x6307;&#x9488",{"_index":1676,"title":{"basic/pointer.html#指针":{}},"body":{"basic/pointer.html#指向指针的指针":{},"standards/io/fmt.html#占位符":{}}}],["x6307;&#x9488;&#x4e5f;&#x79f0;&#x4e3a;&#x7a7a;&#x6307;&#x9488;&#x3002",{"_index":1695,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x6307;&#x9488;&#x53d8;&#x91cf",{"_index":1700,"title":{},"body":{"basic/pointer.html#指向指针的指针":{}}}],["x6307;&#x9488;&#x53d8;&#x91cf;&#x3002",{"_index":8974,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6307;&#x9488;&#x548c;&#x5185;&#x5b58;&#x5730;&#x5740;&#x4e0d;&#x80fd;&#x6df7;&#x4e3a;&#x4e00;&#x8c08",{"_index":1677,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x6307;&#x9488;&#x5f02;&#x5e38",{"_index":1484,"title":{},"body":{"basic/map.html#map":{}}}],["x6307;&#x9488;&#x5f02;&#x5e38;&#xff0c;&#x8fd9;&#x5c06;&#x5bfc;&#x81f4;&#x7a0b;&#x5e8f;&#x7ec8;&#x6b62;&#x8fd0;&#x884c;&#x3002;&#x6240;&#x4ee5;&#x4e0d;&#x5e94;&#x8be5;&#x521d;&#x59cb;&#x5316;&#x4e00;&#x4e2a;&#x7a7a;&#x7684",{"_index":1469,"title":{},"body":{"basic/map.html#map":{}}}],["x6307;&#x9488;&#x65b9;&#x6cd5;&#xff0c;&#x5c31;&#x662f;&#x63a5;&#x6536;&#x8005;&#x7c7b;&#x578b;&#x662f;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":1258,"title":{},"body":{"basic/oop.html#方法":{}}}],["x6307;&#x9488;&#x7684;&#x6570;&#x7ec4;&#x4e86;&#x3002",{"_index":5232,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x6307;&#x9488;&#x7c7b;&#x578b;&#x7684;&#x6210;&#x5458;&#xff0c;&#x8fd9;&#x53ef;&#x4ee5;&#x8ba9;&#x6211;&#x4eec;&#x521b;&#x5efa;&#x9012;&#x5f52;&#x7684;&#x6570;&#x636e;&#x7ed3;&#x6784;&#xff0c;&#x6bd4;&#x5982;&#x94fe;&#x8868;&#x548c;&#x6811;&#x7ed3;&#x6784;&#x7b49;&#xff1a",{"_index":2050,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x6309;&#x5e74;&#x9f84;&#x5347;&#x5e8f;&#x6392;&#x5e8f",{"_index":9306,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x6309;&#x7167",{"_index":8753,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x6309;&#x7167;&#x4e00;&#x5b9a;&#x7b97;&#x6cd5;&#x653e;&#x5230;&#x201c;cpu&#x201d;&#x4e0a;&#x6267;&#x884c;&#x7684;&#x7a0b;&#x5e8f;&#x5c31;&#x53eb;&#x505a",{"_index":6437,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6309;&#x7167;&#x4e00;&#x5b9a;&#x7b97;&#x6cd5;&#x653e;&#x5230;&#x4e0d;&#x540c;&#x7684;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7ebf;&#x7a0b;&#x4e2d;&#x53bb;&#x6267;&#x884c",{"_index":6466,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6309;&#x7167;&#x4e00;&#x5b9a;&#x7b97;&#x6cd5;&#x8c03;&#x5ea6;&#x5230",{"_index":6452,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6309;&#x7167;&#x6307;&#x5b9a;&#x683c;&#x5f0f;&#x5316;&#x6587;&#x672c;&#x8f93;&#x51fa;&#x5185;&#x5bb9",{"_index":4641,"title":{},"body":{"standards/io/fmt.html#Print":{}}}],["x6309;&#x7167;&#x65e2;&#x5b9a;&#x7684;&#x987a;&#x5e8f;&#x8fd0;&#x884c",{"_index":6341,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6309;&#x7279;&#x5b9a;&#x5927;&#x5c0f;&#x5207;&#x5206;&#x6210;&#x591a;&#x4e2a;&#x5c0f;&#x5757;&#xff0c;&#x6bcf;&#x4e2a;&#x5c0f;&#x5757;&#x53ef;&#x5b58;&#x50a8;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#x3002",{"_index":400,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x6355;&#x83b7;&#x5f02;&#x5e38",{"_index":696,"title":{"basic/error.html#Recover-捕获异常":{}},"body":{}}],["x6392;&#x5e8f;&#x4e0e;&#x67e5;&#x627",{"_index":9285,"title":{"standards/data/sort.html#interface-排序与查找":{}},"body":{}}],["x6392;&#x5e8f;&#x76f8;&#x5173;&#x7684;&#x4e09;&#x4e2a;&#x51fd;&#x6570;&#x90fd;&#x63a5;&#x6536",{"_index":9294,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x63a5;&#x4e0b;&#x6765;&#x548c;&#x7ed3;&#x6784;&#x4f53",{"_index":9002,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x63a5;&#x53d7",{"_index":4972,"title":{},"body":{"standards/text/strconv.html#字符串和布尔值之间的转换":{},"standards/net/http.html#HTTP-Server":{}}}],["x63a5;&#x53d7;&#x4e00;&#x4e2a;&#x503c",{"_index":2891,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x63a5;&#x53d7;&#x4efb;&#x610f;&#x7684",{"_index":5030,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{}}}],["x63a5;&#x53d7;&#x7684;&#x503c;&#x4f1a;&#x88ab;&#x4e22;&#x5f03",{"_index":2894,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x63a5;&#x53e3",{"_index":2317,"title":{"basic/interface.html#接口":{}},"body":{"basic/interface.html#接口":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#Reverse":{}}}],["x63a5;&#x53e3;&#x3002",{"_index":1544,"title":{},"body":{"basic/json.html#序列化":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Closer":{},"standards/net/http.html#HTTP-Server":{}}}],["x63a5;&#x53e3;&#x3002;&#x7ed3;&#x6784;&#x5b9a;&#x4e49;&#x5982;&#x4e0b;&#xff1a",{"_index":6978,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x63a5;&#x53e3;&#x4f7f;&#x5f97;&#x53ef;&#x4ee5;&#x4ece;&#x6307;&#x5b9a;&#x504f;&#x79fb;&#x91cf;&#x5904;&#x5f00;&#x59cb;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#x3002",{"_index":6868,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x63a5;&#x53e3;&#x53d8;&#x91cf;&#x4e5f;&#x662f",{"_index":9000,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x63a5;&#x53e3;&#x53ea;&#x6709;&#x5f53;&#x6709;&#x4e24;&#x4e2a;&#x6216;&#x4e24;&#x4e2a;&#x4ee5;&#x4e0a;&#x7684;&#x5177;&#x4f53;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x4ee5;&#x76f8;&#x540c;&#x7684;&#x65b9;&#x5f0f;&#x8fdb;&#x884c;&#x5904;&#x7406;&#x65f6;&#x624d;&#x9700;&#x8981",{"_index":2320,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x540d",{"_index":2327,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x548c",{"_index":6966,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x63a5;&#x53e3;&#x5982;&#x4e0b;&#xff1a",{"_index":7506,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x63a5;&#x53e3;&#x6216",{"_index":6837,"title":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}},"body":{}}],["x63a5;&#x53e3;&#x6216;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#xff08;&#x5305;&#x62ec",{"_index":2405,"title":{},"body":{"basic/var.html#变量":{}}}],["x63a5;&#x53e3;&#x65b9;&#x6cd5;&#x6211;&#x4eec;&#x719f;&#x6089;&#x7684;&#x4e3a",{"_index":9105,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x63a5;&#x53e3;&#x662f",{"_index":8962,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x63a5;&#x53e3;&#x66f4;&#x7075;&#x6d3b;&#xff0c;&#x53ef;&#x4ee5;&#x66f4;&#x597d;&#x7684;&#x63a7;&#x5236;&#x8bfb;&#x5199;&#x6570;&#x636e;&#x6d41;&#x7684;&#x4f4d;&#x7f6e;&#x3002",{"_index":6920,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x63a5;&#x53e3;&#x6709;&#x4e9b;&#x7c7b;&#x4f3c;&#xff0c",{"_index":6918,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x63a5;&#x53e3;&#x6765;&#x8bbe;&#x7f6",{"_index":3759,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x63a5;&#x53e3;&#x6ca1;&#x6cd5;&#x76f4;&#x63a5;&#x8fd4;&#x56de;&#x7684;&#x4fe1;&#x606f;&#xff0c;&#x6bd4;&#x5982;&#x60f3;&#x83b7;&#x53d6;&#x6587;&#x4ef6;&#x7684;&#x4e0a;&#x6b21;&#x8bbf;&#x95ee;&#x65f6;&#x95f4;&#xff0c;&#x793a;&#x4f8b;&#x5982;&#x4e0b;&#xff1a",{"_index":7532,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x63a5;&#x53e3;&#x7684;&#x4e09;&#x4e2a;&#x65b9;&#x6cd5;&#x3002",{"_index":9207,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x63a5;&#x53e3;&#x7684;&#x4e09;&#x4e2a;&#x65b9;&#x6cd5;&#xff1a",{"_index":9210,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x63a5;&#x53e3;&#x7684;&#x5b9e;&#x9645;&#x7528;&#x9014",{"_index":2360,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":9239,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x63a5;&#x53e3;&#x7684;&#x7c7b;&#x578b",{"_index":6838,"title":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}},"body":{}}],["x63a5;&#x53e3;&#x7684;&#x7c7b;&#x578b;&#xff1a",{"_index":6846,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["x63a5;&#x53e3;&#x7684;&#x7ec4;&#x5408;&#x3002",{"_index":6973,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x63a5;&#x53e3;&#x7684;&#x8bf4;&#x660e;&#xff0c;&#x5728",{"_index":6822,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x63a5;&#x53e3;&#x7684;&#x96f6;&#x503c;&#x5c31;&#x662f;&#x5b83;&#x7684;&#x7c7b;&#x578b;&#x548c;&#x503c;&#x7684;&#x90e8;&#x5206;&#x90fd;&#x662f",{"_index":2321,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x7aef;&#x5f00;&#x59cb;&#x963b;&#x585e;5&#x79d2;&#x949f",{"_index":7026,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x63a5;&#x53e3;&#x7c7b",{"_index":2379,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x7c7b;&#x578b",{"_index":185,"title":{},"body":{"index.html#数据类型":{}}}],["x63a5;&#x53e3;&#x7c7b;&#x578b;&#x4e5f;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x7ec4;&#x5408;&#x5df2;&#x6709;&#x7684;&#x63a5;&#x53e3;&#x6765;&#x5b9a;&#x4e49;&#xff1a",{"_index":2332,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x7c7b;&#x578b;&#xff0c;&#x6574;&#x4e2a",{"_index":9231,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x63a5;&#x53e3;&#x83b7;&#x53d6;&#x3002;&#x51fd;&#x6570",{"_index":7494,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x63a5;&#x53e3;&#x8bfb;&#x53d6;&#x6587;&#x672c",{"_index":4656,"title":{},"body":{"standards/io/fmt.html#Scan":{}}}],["x63a5;&#x53e3;&#xff09;&#x3002",{"_index":6902,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x63a5;&#x53e3;&#xff0c",{"_index":6954,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x63a5;&#x53e3;&#xff0c;&#x4f8b;&#x5982;&#xff1a",{"_index":9292,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x63a5;&#x53e3;&#xff0c;&#x5176;&#x590d",{"_index":7065,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x63a5;&#x53e3;&#xff0c;&#x5176;&#x590d;&#x5236;&#x64cd;&#x4f5c;&#x53ef;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":7063,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x63a5;&#x53e3;&#xff0c;&#x5219;&#x8f6c;&#x6362;&#xff0c;&#x5426;&#x5219;&#x901a",{"_index":4800,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x63a5;&#x53e3;&#xff0c;&#x5373;&#x53ef;&#x901a;&#x8fc7",{"_index":9287,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x63a5;&#x53e3;&#xff0c;&#x590d;&#x5236;&#x64cd;&#x4f5c;&#x4e5f;&#x5c31;&#x4f1a;&#x4f7f;&#x7528;&#x5b83;&#x6765;&#x5b9e;&#x73b0;&#x3002",{"_index":7075,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x63a5;&#x53e3;&#xff0c;&#x6700;&#x540e;&#x7684;&#x6267;&#x884c;&#x8005;&#x662f;&#x7cfb;&#x7edf;&#xff1b;&#x534f;&#x7a0b;&#x7684;&#x64cd;&#x4f5c;&#x6267;&#x884c;&#x8005;&#x5219;&#x662f;&#x7528;&#x6237;&#x81ea;&#x8eab;&#x7a0b;&#x5e8f;&#x3002",{"_index":6193,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x63a5;&#x53e3;&#xff0c;&#x7528;&#x4e8e;&#x5f00;&#x53d1;&#x8005;&#x5b9e;&#x73b0;&#x81ea;&#x5df1;&#x7684",{"_index":9073,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x63a5;&#x53e3;&#xff1a",{"_index":6784,"title":{},"body":{"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x63a5;&#x53e3;&#xff1f",{"_index":6840,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["x63a5;&#x6536;&#x4e00;&#x4e2a;&#x7684;&#x5fc5;&#x5907;&#x53c2;&#x6570;&#xff0c;&#x4e4b",{"_index":3144,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x63a5;&#x6536;&#x6570;&#x636e;&#xff0c;&#x5f53",{"_index":2910,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x63a5;&#x6536;&#x7aef;&#x5f00;&#x59cb;&#x63a5;&#x53d7",{"_index":7027,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x63a5;&#x6c60;&#x3002;&#x76f8;&#x5173;&#x65b9;&#x6cd5;&#x7684;&#x5904;&#x7406;&#x8bf4;&#x660e;&#xff08;&#x5047;&#x8bb",{"_index":4487,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x63a5;&#x7740;&#x6211;&#x4eec;&#x770b;&#x770b",{"_index":8985,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x63a7;&#x5236;&#x8bed;&#x53e5",{"_index":1037,"title":{"basic/flow.html#控制语句":{}},"body":{}}],["x63a7;&#x5236;&#x8fd4;&#x56de;&#x7684;&#x7ed3;&#x679c;&#x4e2d;&#x7684",{"_index":5987,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x63a7;&#x5236;&#x8fde;&#x63a5;&#x6c60",{"_index":4508,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x63a8;&#x5230;&#x4e00;&#x4e2a;&#x5f88;&#x5927;&#x7684;&#x503c;&#x3002",{"_index":554,"title":{},"body":{"advance/gc.html#监控":{}}}],["x63cf;&#x8ff0",{"_index":2035,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x63d0;&#x4ea4;&#x8868;&#x5355",{"_index":8736,"title":{},"body":{"standards/net/http.html#http":{}}}],["x63d0;&#x4f9b",{"_index":4149,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x63d0;&#x4f9b;&#x4e86",{"_index":4805,"title":{},"body":{"standards/io/ioutil.html#ReadAll-函数":{},"standards/net/http.html#自定义处理器":{}}}],["x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":3405,"title":{},"body":{"standards/time.html#time":{}}}],["x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e9b;&#x5e38;&#x7528;&#x3001;&#x65b9;&#x4fbf;&#x7684",{"_index":4783,"title":{},"body":{"standards/io/ioutil.html#ioutil":{}}}],["x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e9b;&#x7c7b;&#x578b;&#xff1a",{"_index":4432,"title":{},"body":{"standards/database/sql.html#类型":{}}}],["x63d0;&#x4f9b;&#x4e86;&#x64cd;&#x4f5c",{"_index":4427,"title":{},"body":{"standards/database/sql.html#sql":{}}}],["x63d0;&#x4f9b;&#x5207;&#x5206;&#x597d;&#x7684;&#x540e;&#x5907",{"_index":420,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x63d0;&#x4f9b;&#x7684",{"_index":9311,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x63d0;&#x4f9b;&#x7684;&#x5b89;&#x5168;&#x4fdd;&#x62a4;&#x3002",{"_index":8059,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x63d0;&#x4f9b;&#x7684;&#x65b9;&#x6cd5",{"_index":5304,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x63d0;&#x4f9b;&#x7684;&#x65b9;&#x6cd5;&#x6709",{"_index":5269,"title":{},"body":{"standards/data/container.html#环":{}}}],["x63d0;&#x4f9b;&#x7684;&#x9519;&#x8bef;&#x673a;&#x5236;&#xff0c;&#x800c;&#x4e0d;&#x662f",{"_index":642,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x63d2;&#x5165",{"_index":5282,"title":{},"body":{"standards/data/container.html#环":{}}}],["x63d2;&#x5165;&#x5230",{"_index":5280,"title":{},"body":{"standards/data/container.html#环":{}}}],["x641c;&#x7d22;&#x3002",{"_index":2143,"title":{},"body":{"basic/package.html#包":{}}}],["x642d;&#x5efa;&#x3002",{"_index":2576,"title":{},"body":{"theme/theme-usage.html#使用文档主题":{}}}],["x643a;&#x5e26;&#x4e00;&#x4e2a;&#x504f;&#x79fb;&#x91cf;&#x4ece;&#x8f93;&#x5165;&#x6e90;&#x8bfb;&#x53d6;&#xff0c",{"_index":6863,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x643a;&#x5e26;&#x4e00;&#x4e2a;&#x504f;&#x79fb;&#x91cf;&#x5199;&#x5165;&#x5230;&#x76ee;&#x6807;&#x4e2d;&#xff0c",{"_index":6874,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x6444;&#x6c0f;&#x6e29;&#x5ea6",{"_index":277,"title":{},"body":{"index.html#自定义类型":{}}}],["x64a4;&#x9500;&#x4fe1;&#x53f7;&#x662f;&#x5982;&#x4f55;&#x5728;&#x4e0a;&#x4e0b;&#x6587;&#x6811;&#x4e2d;&#x4f20;&#x64ad;&#x7684",{"_index":8254,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x64cd;&#x4f5c",{"_index":5273,"title":{},"body":{"standards/data/container.html#环":{},"standards/os/os.html#文件-I-O":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x64cd;&#x4f5c;&#x3001;&#x6ca1;&#x6709;&#x963b;&#x585e;&#x5728;&#x4e00",{"_index":6521,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x3002;&#x5982;&#x679c;&#x5e0c;&#x671b;&#x7acb;&#x523b;&#x5c06;&#x6570;&#x636e;&#x5199;&#x5165;&#x78c1;&#x76d8;&#xff08;&#x4e00;&#x822c;&#x573a;&#x666f;&#x4e0d;&#x5efa;&#x8bae;&#x8fd9;&#x4e48;&#x505a;&#xff0c;&#x56e0;&#x4e3a;&#x4f1a",{"_index":7428,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x64cd;&#x4f5c;&#x4e00;&#x4e2a;&#x3002",{"_index":7105,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x64cd;&#x4f5c;&#x4e0a;&#x65f6;&#xff0c;g",{"_index":6575,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x4e0a;&#xff0c;&#x90a3;&#x4e48",{"_index":6522,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x4e0a;&#xff0c;&#x90a3;&#x4e48;&#x4e0d;&#x5149",{"_index":6592,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x51fd;&#x6570;&#x3002",{"_index":4784,"title":{},"body":{"standards/io/ioutil.html#ioutil":{}}}],["x64cd;&#x4f5c;&#x53d8;&#x91cf",{"_index":6368,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x64cd;&#x4f5c;&#x53ef;&#x4ee5;&#x4e0d;&#x505c;&#x5730;&#x68c0;&#x67e5;&#x67d0;&#x4e2a;&#x9700;&#x8981;&#x6ee1;&#x8db3;&#x7684;&#x6761;&#x4ef6;&#xff0c;&#x4e00;&#x65e6;&#x6761;&#x4ef6;&#x6ee1;&#x8db3;&#x5c31;&#x9000;&#x51fa",{"_index":8026,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x64cd;&#x4f5c;&#x5b8c;&#x6210;&#xff0c",{"_index":6585,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x6216",{"_index":6574,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x65f6;&#xff0c",{"_index":5486,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x64cd;&#x4f5c;&#x7528;&#x9014;&#x8981;&#x66f4;&#x5e7f;&#x6cdb;&#x4e00;&#x4e9b;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x5b83;&#x4e0",{"_index":8023,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x64cd;&#x4f5c;&#x7684;&#x5047;&#x8bbe;&#x5f80;&#x5f80;&#x662f;&#xff1a;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x72b6;&#x6001;&#x7684;&#x6539;&#x53d8;&#x5e76;&#x4e0d;&#x9891;&#x7e41;&#xff0c;&#x6216;&#x8005;&#xff0c;&#x5b83;&#x7684;&#x72b6;&#x6001;&#x603b;&#x4f1a;&#x53d8;&#x6210;&#x671f;&#x671b;&#x7684;&#x90a3;&#x6837;&#x3002;&#x8fd9;&#x662f;&#x4e00;&#x79cd;&#x66f4;&#x52a0;&#x4e50;&#x89c2;&#xff0c",{"_index":8032,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x64cd;&#x4f5c;&#x7b26;&#x6765;&#x6307;&#x5b9a;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x5185;&#x90e8;&#x4f1a;&#x7ed9",{"_index":7358,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x64cd;&#x4f5c;&#x7b26;&#x8bbf;&#x95ee;&#x7ed3;&#x6784;&#x4f53;&#x6210;&#x5458",{"_index":2034,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x4e2d;&#x4e00;&#x822c;&#x90fd;&#x4f1a;&#x63d0;&#x4f9b;&#x4e34;&#x65f6;&#x76ee;&#x5f55;&#xff0c;&#x6bd4;&#x5982",{"_index":4824,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x5bf9;&#x8fdb;&#x7a0b;&#x3001;&#x7ebf;&#x7a0b;&#x7684;&#x8c03;&#x5ea6;&#x662f;&#x6307;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x8c03;&#x5ea6;&#x5668;&#x5c06;&#x7cfb;&#x7edf;&#x4e2d;&#x7684;&#x591a;&#x4e2a;&#x7ebf;&#x7a0b;&#x6309;&#x7167;&#x4e00;&#x5b9a;&#x7b97;&#x6cd5;&#x8c03;&#x5ea6;&#x5230;&#x7269;&#x7406",{"_index":6407,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x5c42;&#x9762;&#xff0c;thread",{"_index":6455,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x91cd;&#x5199;&#xff0c;&#x56e0;&#x6b64;&#x8bb8;&#x591a;&#x7684;&#x5ba2;&#x6237;&#x7aef;&#x4f1a;&#x9009;&#x62e9",{"_index":5444,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x64cd;&#x4f5c;&#xff0c",{"_index":6549,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["x64cd;&#x4f5c;&#xff1b",{"_index":5919,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x652f;&#x6301;&#x63a5;&#x53e3;&#x6570;&#x636e;&#x7c7b;&#x578b;&#xff0c;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x662f;&#x4e00;&#x79cd;&#x62bd;&#x8c61;&#x7684;&#x7c7b;&#x578b;&#x3002;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x5177;&#x4f53;&#x63cf;&#x8ff0;&#x4e86;&#x4e00;&#x7cfb;&#x5217;&#x65b9;&#x6cd5;&#x7684;&#x96c6;&#x5408;&#xff0c;&#x4efb;&#x4f55;&#x5176;&#x4ed6;&#x7c7b;&#x578b;&#x53ea;&#x8981;&#x5b9e;&#x73b0;&#x4e86;&#x8fd9;&#x4e9b;&#x65b9;&#x6cd5;&#x5c31;&#x662f;&#x5b9",{"_index":2318,"title":{},"body":{"basic/interface.html#接口":{}}}],["x652f;&#x6301;&#x8c03;&#x8bd5;&#x6a21;&#x5f0f;&#xff0c;&#x5199;&#x5165;&#x76f8;&#x5e94;&#x7684;cpufile&#x5230;&#x6307;&#x5b9a;&#x7684;&#x6587;&#x4ef6",{"_index":2799,"title":{},"body":{"commands/build.html#工具":{}}}],["x652f;&#x6301;&#x904d;&#x5386;&#x6570;&#x7ec4;&#xff0c;&#x5207;&#x7247;&#xff0c;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5b57;&#x5178;&#xff0c;&#x901a;&#x9053;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x7d22;&#x5f15;&#x548c;&#x952e;&#x503c;&#x3002",{"_index":1081,"title":{},"body":{"basic/flow.html#for":{}}}],["x652f;&#x6301;&#x9762;&#x5411;&#x5bf9;&#x8c61;&#x7f16;&#x7a0b;&#x3002",{"_index":1214,"title":{},"body":{"basic/oop.html#面向对象":{}}}],["x6536;&#x5230;&#x5b57;&#x8282",{"_index":7028,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x6536;&#x56de;&#x56e0",{"_index":6568,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6536;&#x901a;&#x9053;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8fd9;&#x4e2a;&#x63a5;&#x6536;&#x901a;&#x9053;&#x7684;&#x7528;&#x9014;&#x5e76;&#x4e0d;&#x662f;&#x4f20;&#x9012;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x800c;&#x662f",{"_index":8246,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6539;&#x53d8;&#x4f1a;&#x4f53;&#x73b0;&#x5728",{"_index":1755,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x6539;&#x53d8;&#x6587;&#x4ef6;&#x65f6;&#x95f4;&#x6233",{"_index":7533,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6539;&#x53d8;&#x6587;&#x4ef6;&#x7684;&#x5c5e;&#x4e3b;&#x548c;&#x5c5e;&#x7ec4;&#xff0c;go",{"_index":7546,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6539;&#x9020;&#x7248;&#x672c;&#xff1a",{"_index":8090,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x653e;&#x56de;&#x7ba1;&#x7406;&#x6570;&#x7ec4;&#x3002;&#x53e6;&#x5916;&#xff0c;&#x5206;&#x914d;&#x5668;&#x8fd8;&#x4f1a;&#x628a;&#x76f8;&#x90bb;&#x7684;&#x7a7a;&#x95f2;&#x7684",{"_index":411,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x653e;&#x5728;&#x9519;&#x8bef;&#x68c0;&#x67e5;&#x4e4b;&#x540",{"_index":6939,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x6570",{"_index":5141,"title":{},"body":{"standards/text/unicode.html#utf8-包":{}}}],["x6570;&#x503c;&#x5bf9;&#x5e94;&#x7684",{"_index":4731,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x6570;&#x503c;&#x7c7b;&#x578b",{"_index":3702,"title":{"basic/basic_data.html#数值类型":{}},"body":{}}],["x6570;&#x503c;&#x7c7b;&#x578b;&#xff1a",{"_index":2402,"title":{},"body":{"basic/var.html#变量":{}}}],["x6570;&#x636e",{"_index":179,"title":{},"body":{"index.html#Golang-介绍":{},"standards/data/sort.html#数据集合排序":{}}}],["x6570;&#x636e;&#x5b58;&#x50a8;&#x4e2d;&#x4ecb;&#xff0c;&#x5b83;&#x4ecb;&#x4e8e;&#x5e95;&#x5c42;&#x8bfb;&#x53d6;&#x5668;&#x4e0e;&#x8bfb;&#x53d6;&#x65b9;&#x6cd5;&#x53ca;&#x5176;&#x8c03;&#x7528;&#x65b9;&#x4e4b;&#x95f4",{"_index":5409,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x6570;&#x636e;&#x5e93;&#x7684;&#x901a;&#x7528;&#x63a5;&#x53e3;&#xff0c;&#x4f46",{"_index":4428,"title":{},"body":{"standards/database/sql.html#sql":{}}}],["x6570;&#x636e;&#x6ca1;&#x6709;&#x88ab;&#x63a5;&#x6536;&#x800c;&#x88ab;&#x5361;&#x4f4f;&#x3002;&#x6cc4;&#x6f0f;&#x7684",{"_index":6400,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6570;&#x636e;&#x6d41;&#xff1b;&#x6216;&#x8005;&#x540c;&#x65f6;&#x9700;&#x8981",{"_index":6996,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x6570;&#x636e;&#x7684;&#x952e;&#x503c;&#x4f1a;&#x7ecf;&#x8fc7",{"_index":8914,"title":{},"body":{"standards/net/http.html#client":{}}}],["x6570;&#x636e;&#x7c7b;&#x578b",{"_index":180,"title":{"index.html#数据类型":{}},"body":{}}],["x6570;&#x636e;&#x96c6;&#x5408;&#x5b9e;&#x73b0;&#x4e86;&#x8fd9;&#x4e09;&#x4e2a;&#x65b9;&#x6cd5;&#x540e;&#xff0c;&#x5373;&#x53ef;&#x8c03;&#x7528;&#x8be5;&#x5305;&#x7684",{"_index":9211,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x6570;&#x636e;&#x96c6;&#x5408;&#x6392;&#x5e8f",{"_index":9208,"title":{"standards/data/sort.html#数据集合排序":{}},"body":{}}],["x6570;&#x636e;&#xff09;&#xff0c;&#x9700;&#x8981;&#x81ea;&#x5df1;&#x5c01;&#x88c5;&#xff0c;&#x8c03;&#x7528",{"_index":7434,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6570;&#x7ec4",{"_index":764,"title":{"basic/array.html#数组":{}},"body":{}}],["x6570;&#x7ec4;&#x3001;slic",{"_index":2429,"title":{},"body":{"basic/var.html#赋值":{}}}],["x6570;&#x7ec4;&#x4e4b;&#x95f4",{"_index":5108,"title":{},"body":{"standards/text/unicode.html#unicode":{}}}],["x6570;&#x7ec4;&#x4f20;&#x5165;&#x51fd;&#x6570",{"_index":788,"title":{"basic/array.html#数组传入函数":{}},"body":{}}],["x6570;&#x7ec4;&#x662f;&#x4e00;&#x4e2a;&#x7531;&#x56fa;&#x5b9a;&#x957f;&#x5ea6;&#x7684;&#x6307;&#x5b9a;&#x7c7b;&#x578b;&#x5143;&#x7d20;&#x7ec4;&#x6210;&#x7684;&#x5e8f;&#x5217;&#x3002;&#x6570;&#x7ec4;&#x7684;&#x957f;&#x5ea6;&#x5728;&#x7f16;&#x8bd1;&#x9636;&#x6bb5;&#x786e;&#x5b9a;&#x3002",{"_index":765,"title":{},"body":{"basic/array.html#数组":{}}}],["x6570;&#x8fdb;&#x884c;&#x8ba1;&#x7b97;&#x65f6;&#xff0c;&#x5982;&#x679c;&#x5bf9;&#x7cbe;&#x5ea6;&#x6ca1;&#x6709;&#x8981;&#x6c42;&#xff0c",{"_index":4356,"title":{},"body":{"standards/data/big.html#big":{}}}],["x6570;&#x91cf",{"_index":4208,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6570;&#x91cf;&#x4e3a",{"_index":4191,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6570;&#x91cf;&#x76f8;&#x5f53;&#x4e8e;&#x53ef;&#x4ee5;&#x540c;&#x65f6;&#x8fd0;&#x884c",{"_index":4194,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6570;&#x91cf;&#xff08;&#x8fd9;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8c03;&#x7528;&#x8868;&#x8fb",{"_index":4215,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x6570;&#x91cf;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x5728;&#x8fd0;&#x884c",{"_index":4205,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6574;&#x5206;&#xff08;&#x5411;&#x4e0b;&#x53d6;&#x6574;&#xff09",{"_index":3529,"title":{},"body":{"standards/time.html#Time":{}}}],["x6574;&#x5206;&#xff08;&#x6700;&#x63a5;&#x8fd1;&#xff09",{"_index":3530,"title":{},"body":{"standards/time.html#Time":{}}}],["x6574;&#x578b",{"_index":3703,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x6574;&#x578b;&#x8f6c;&#x4e3a;&#x5b57;&#x7b26;&#x4e32",{"_index":4953,"title":{"standards/text/strconv.html#整型转为字符串":{}},"body":{}}],["x6574;&#x6570;&#x5360;&#x4f4d;&#x7b26",{"_index":4675,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x6574;&#x70b9;&#xff08;&#x5411;&#x4e0b;&#x53d6;&#x6574;&#xff09",{"_index":3527,"title":{},"body":{"standards/time.html#Time":{}}}],["x6574;&#x70b9;&#xff08;&#x6700;&#x63a5;&#x8fd1;&#xff09",{"_index":3528,"title":{},"body":{"standards/time.html#Time":{}}}],["x6587;&#x4ef6",{"_index":6929,"title":{"standards/os/os.html#文件-I-O":{}},"body":{"standards/io/io.html#Closer":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{}}}],["x6587;&#x4ef6;&#x3002;&#x8fd9;&#x4e2a",{"_index":2590,"title":{},"body":{"theme/theme-usage.html#Index":{}}}],["x6587;&#x4ef6;&#x4e2d;&#x3002",{"_index":1000,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6587;&#x4ef6;&#x4e2d;&#x5b9a;&#x4e49;&#x4e86;&#x4e00;&#x4e2a;&#x975e;&#x5e38;&#x91cd;&#x8981;&#x7684;&#x63a5;&#x53e3;&#xff1a",{"_index":8918,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6587;&#x4ef6;&#x4e2d;&#x5b9a;&#x4e49;&#x4e86;&#x5982;&#x4e0b;&#x51fd;&#x6570;&#xff1a",{"_index":4638,"title":{},"body":{"standards/io/fmt.html#fmt-包":{},"standards/io/fmt.html#Scan":{}}}],["x6587;&#x4ef6;&#x4e2d;&#x7684",{"_index":3556,"title":{},"body":{"standards/time.html#定时器":{},"standards/database/sql.html#sql-DB-的使用":{}}}],["x6587;&#x4ef6;&#x4e2d;&#xff0c;&#x5f53;&#x6587;&#x4ef6;&#x4e0d;&#x5b58;&#x5728;&#x65f6;&#x4f1a;&#x6839;&#x636",{"_index":4821,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x6587;&#x4ef6;&#x4e2d;&#xff0c;&#x5fc5;&#x987b;&#x548c",{"_index":3554,"title":{},"body":{"standards/time.html#定时器":{}}}],["x6587;&#x4ef6;&#x4e2d;&#xff0c;&#x6709;&#x4e09;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x51fd;&#x6570;&#xff1a",{"_index":4081,"title":{},"body":{"basic/test.html#测试":{}}}],["x6587;&#x4ef6;&#x4f1a;&#x5b89;&#x88c5;&#x5728",{"_index":920,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x6587;&#x4ef6;&#x540d;.go",{"_index":2790,"title":{},"body":{"commands/build.html#工具":{}}}],["x6587;&#x4ef6;&#x548c;&#x4e00;&#x4e2a",{"_index":5729,"title":{},"body":{"standards/os/filepath.html#符号链接指向的路径名":{}}}],["x6587;&#x4ef6;&#x5c31;&#x662f;&#x6587;&#x6863;&#x9996;&#x9875;&#x3002",{"_index":2591,"title":{},"body":{"theme/theme-usage.html#Index":{}}}],["x6587;&#x4ef6;&#x5c5e;&#x4e3b",{"_index":7541,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6587;&#x4ef6;&#x5c5e;&#x4e3b;&#xff0c;&#x7528;&#x6237",{"_index":7519,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6587;&#x4ef6;&#x5c5e;&#x4e8e;&#x54ea;&#x4e2a;&#x5305;&#xff08;&#x7c7b;&#x4f3c;&#x5176;&#x4ed6;&#x8bed;&#x8a00;&#x7684",{"_index":196,"title":{},"body":{"index.html#package":{}}}],["x6587;&#x4ef6;&#x5c5e;&#x6027",{"_index":7491,"title":{"standards/os/os.html#文件属性":{}},"body":{}}],["x6587;&#x4ef6;&#x5c5e;&#x6027;&#xff0c;&#x4e5f;&#x5373;&#x6587;&#x4ef6;&#x5143;&#x6570;&#x636e;&#x3002;&#x5728",{"_index":7492,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6587;&#x4ef6;&#x5c5e;&#x7ec4;&#xff0c;&#x7ec4",{"_index":7520,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6587;&#x4ef6;&#x5f00;&#x59cb;&#x5904",{"_index":7467,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6587;&#x4ef6;&#x6253;&#x5f00;&#x65f6;&#xff0c;&#x4f1a;&#x5c06;&#x6587;&#x4ef6;&#x504f;&#x79fb;&#x91cf;&#x8bbe;&#x7f6e;&#x4e3a;&#x6307;&#x5411;&#x6587;&#x4ef6;&#x5f00;&#x59cb;&#xff0c;&#x4ee5;&#x540e;&#x6bcf;&#x6b21",{"_index":7451,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6587;&#x4ef6;&#x6269;&#x5c55;&#x540d;&#x3002;&#x6269;&#x5c55;&#x540d;&#x662f;&#x8def;&#x5f84;&#x4e2d;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x4ec",{"_index":5652,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x6587;&#x4ef6;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5b57;&#x8282",{"_index":7469,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6587;&#x4ef6;&#x6743;&#x9650",{"_index":7550,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6587;&#x4ef6;&#x6811;&#x4e2d;&#x7684;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#xff08;&#x5feb;&#x6377;&#x65b9;&#x5f0f;&#xff09;&#x6587;&#x4ef6;&#x5305;&#x542b;&#x7684;&#x8def;&#x5f84;&#x3002",{"_index":5782,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x6587;&#x4ef6;&#x6839;&#x636e;&#x6587;&#x4ef6;&#x540d;&#x6392;&#x5e8f;&#xff0c;&#x7136;&#x540e;&#x4f9d;&#x6b21;&#x8c03;&#x7528;&#x7f16;&#x8bd1;&#x5668;&#x7f16;&#x8bd1;&#x3002",{"_index":2215,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x6587;&#x4ef6;&#x72b6;&#x6001;&#x53d1;&#x751f;&#x6539;&#x53d8;&#x7684;&#x4e0a;&#x6b21;&#x65f6;&#x95f4",{"_index":7529,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6587;&#x4ef6;&#x7684;&#x4fee;&#x6539;&#x65f6;&#x95f4",{"_index":7510,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6587;&#x4ef6;&#x7684;&#x5185;&#x5bb9;&#x50cf;&#x4e0b;&#x9762;&#x8fd9;&#x6837;&#xff1a",{"_index":1001,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6587;&#x4ef6;&#x7684;&#x540d;&#x5b57;&#xff08;&#x4e0d;&#x542b;&#x6269;&#x5c55;&#x540d;&#xff09",{"_index":7507,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6587;&#x4ef6;&#x7684;&#x6a21;&#x5f0f;&#x4f4d",{"_index":7509,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6587;&#x4ef6;&#x7cfb;&#x7edf;&#x4e2d;&#xff0c;&#x76ee;&#x5f55;&#x7684;&#x5b58;&#x50a8;&#x65b9;&#x5f0f;&#x7c7b;&#x4f3c;&#x4e8e;&#x666e;&#x901a;&#x6587;&#x4ef6;&#x3002;&#x76ee;&#x5f55;&#x548c;&#x666e;&#x901a;&#x6587;&#x4ef6;&#x7684;&#x533a;&#x522b;&#x6709;&#x4e8c;&#xff1a",{"_index":7583,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6587;&#x4ef6;&#x7ed3;&#x5c3e;&#x5904;&#x7684;&#x4e0b",{"_index":7472,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6587;&#x4ef6;&#x7ed3;&#x5c3e;&#x5904;&#x7684;&#x4e0b;&#x4e00;&#x4e2a;&#x5b57;&#x8282",{"_index":7468,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6587;&#x4ef6;&#x7ed3;&#x5c3e;&#x9519;&#x8bef",{"_index":626,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x6587;&#x4ef6;&#x8def;&#x5f84;&#x5339;&#x914d",{"_index":5733,"title":{"standards/os/filepath.html#文件路径匹配":{}},"body":{}}],["x6587;&#x4ef6;&#x91cc;&#x3002;&#x5982;&#x679c;&#x5fc5;&#x8981;&#xff0c",{"_index":8806,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x6587;&#x4ef6;&#xff09;&#x3002;&#x7528;&#x4e8e;&#x6682;&#x505c;&#x5f53;&#x524d",{"_index":3581,"title":{},"body":{"standards/time.html#定时器":{}}}],["x6587;&#x4ef6;&#xff0c;&#x4f8b;&#x5982;&#xff1a",{"_index":2593,"title":{},"body":{"theme/theme-usage.html#添加文档":{}}}],["x6587;&#x4ef6;&#xff0c;&#x540c;&#x65f6;&#x5728;&#x6587;&#x4ef6;&#x548c;&#x5c4f;&#x5e55;&#x4e2d;&#x90fd;&#x8f93;&#x51fa;&#xff1a",{"_index":7125,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x6587;&#x672c;&#x3002",{"_index":3733,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65ad;&#x5f00;&#x5b83;&#x4e0e;&#x5176;&#x7236;&#x503c;&#x4e4b;&#x95f4;&#x7684;&#x5173;&#x8054;&#x3002",{"_index":8262,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x65ad;&#x8a00;&#x64cd;&#x4f5c;&#x5c31;&#x662f;&#x7528;&#x6765",{"_index":294,"title":{},"body":{"index.html#类型断言":{}}}],["x65ad;&#x8a00;&#xff0c;&#x987e;&#x540d;&#x601d;&#x4e49;&#x5c31;&#x662f;&#x679c;&#x65ad;&#x7684;&#x53bb;&#x731c;&#x6d4b;&#x4e00;&#x4e2a;&#x672a;&#x77e5;&#x7684;&#x4e8b;&#x7269;&#x3002;&#x5728",{"_index":291,"title":{},"body":{"index.html#类型断言":{}}}],["x65b0;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf",{"_index":3915,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b0;&#x5bb9;&#x91cf;&#x57fa;&#x51c6;&#x4f1a;&#x88ab;&#x8c03;&#x6574;&#xff08;&#x4e0d;&#x65ad;&#x5730;&#x4e0",{"_index":1933,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x65b9",{"_index":4222,"title":{},"body":{"basic/test.html#parallel-标记":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x65b9;&#x5411;&#x4e0a;&#x53ef;&#x4ee5;&#x8868;&#x793a;&#x7684;&#x6700;&#x63a5;&#x8fd1;&#x7684;&#x6570;&#x503c;&#xff0c;&#x82e5",{"_index":6124,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x65b9;&#x5411;&#x622a;&#x65ad;&#x4f59;&#x6570;&#x3002",{"_index":1798,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x65b9;&#x6cd5",{"_index":1215,"title":{"basic/oop.html#方法":{},"basic/oop.html#String-方法":{}},"body":{"basic/oop.html#String-方法":{},"standards/time.html#Time":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/net/http.html#HTTP-Server":{}}}],["x65b9;&#x6cd5;&#x3001",{"_index":5495,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x65b9;&#x6cd5;&#x3002",{"_index":1315,"title":{},"body":{"basic/oop.html#String-方法":{},"basic/interface.html#接口":{},"standards/log.html#分类":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/io/io.html#LimitedReader-类型":{},"standards/os/os.html#文件-I-O":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"standards/net/http.html#HTTP-Server":{}}}],["x65b9;&#x6cd5;&#x3002;&#x53ef;&#x662f",{"_index":3897,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x3002;&#x6ce8;&#x610f;&#xff0c;&#x8fd9;&#x4e2a",{"_index":7919,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x4e00;&#x6837;&#xff0c",{"_index":3877,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x4e0d;&#x4f1a;&#x8fd4;&#x56d",{"_index":6895,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x65b9;&#x6cd5;&#x4e0d;&#x5148;&#x89e3;&#x9501;&#x4e92;&#x65a5;&#x9501;&#x7684;&#x8bdd;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x53ea;&#x4f1a;&#x9020;&#x6210;&#x4e24;&#x79cd;&#x540e;&#x679c;&#xff1a;&#x4e0d;&#x662f;&#x5f53;&#x524d;&#x7684;&#x7a0b;&#x5e8f;&#x56e0",{"_index":7967,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x4e0d;&#x9700",{"_index":1295,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x65b9;&#x6cd5;&#x4e2d;&#x624d;&#x4f1a;&#x88ab;&#x8d4b;&#x4e88;&#x6709;&#x610f;&#x4e49;&#x7684;&#x503c;&#x3002;&#x5728;&#x5176;&#x4ed6;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x5b83;&#x90fd;&#x4f1a;&#x88ab;&#x7f6e;&#x4e3a",{"_index":5424,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x65b9;&#x6cd5;&#x4e2d;&#xff0c;&#x4f1a;&#x521d;&#x59cb;&#x5316;&#x76d1;&#x542c;&#x5730;&#x5740",{"_index":9014,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x65b9;&#x6cd5;&#x4e2d;&#xff0c;&#x6709;&#x4e00;&#x4e2a;&#x5185;&#x90e8;&#x51fd;&#x6570",{"_index":9279,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x65b9;&#x6cd5;&#x4e3b;&#x8981;&#x505a;&#x4e86;&#x56db;&#x4ef6;&#x4e8b;&#x3002",{"_index":7933,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x4e4b;&#x4e2d;&#x3002",{"_index":9020,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x65b9;&#x6cd5;&#x4e4b;&#x524d;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x5148",{"_index":7948,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x79f0",{"_index":3828,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x4e5f;&#x5c31;&#x662f;&#x5b9e;&#x73b0;&#x4e86",{"_index":8995,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x65b9;&#x6cd5;&#x4ece",{"_index":7404,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x65b9;&#x6cd5;&#x4ee5;&#x6709;&#x7ebf;&#x683c;&#x5f0f;&#x5c06",{"_index":8825,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x65b9;&#x6cd5;&#x4f1a;&#x628a;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x4e2d;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x589e;&#x52a0",{"_index":3833,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x4f1a;&#x663e;&#x5f0f;&#x6dfb;&#x52a0",{"_index":8834,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x65b9;&#x6cd5;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x4e3a",{"_index":8244,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x65b9;&#x6cd5;&#x4f1a;&#x8fd4;&#x56de;&#x7684;&#x90a3;&#x4e2a;&#x901a;&#x9053;&#x3002",{"_index":8260,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x65b9;&#x6cd5;&#x4f7f;&#x7528;&#x4e86;&#x8be5",{"_index":9257,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x65b9;&#x6cd5;&#x5199;&#x8fdb;&#x5199;&#x5165;&#x5668;&#x7684;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x4ec5;&#x4f1a;&#x5305;&#x542b",{"_index":4303,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65b9;&#x6cd5;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x5728;&#x6307;&#x5b9a;&#x7684;&#x5143;&#x7d20;&#x4e4b;&#x524d;&#x548c;&#x4e4b;&#x540e;&#x63d2;&#x5165;&#x65b0;&#x5143;&#x7d20;&#x3002",{"_index":5248,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x65b9;&#x6cd5;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x5bf9;&#x5176;&#x4e2d;&#x5199;&#x9501;&#x7684;&#x9501;&#x5b9a;&#x548c;&#x89e3;&#x9501;&#xff0c;&#x5b83;&#x4eec;&#x4e0",{"_index":7907,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x5bf9;&#x5199;&#x9501;&#x8fdb;&#x884c",{"_index":7835,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x65b9;&#x6cd5;&#x5219;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x5728;&#x94fe;&#x8868;&#x7684;&#x6700;&#x524d;&#x7aef;&#x548c;&#x6700;&#x540e;&#x7aef;&#x63d2;&#x5165;&#x65b0;&#x5143;&#x7d20;&#x3002",{"_index":5249,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x65b9;&#x6cd5;&#x5219;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x5bf9;&#x8bfb;&#x9501;&#x8fdb;&#x884c;&#x9501;&#x5b9a;&#x548c;&#x89e3;&#x9501;&#x3002",{"_index":7837,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x65b9;&#x6cd5;&#x5373;&#x53ef;&#x3002",{"_index":9075,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x65b9;&#x6cd5;&#x53d1;&#x9001;&#x8bf7;&#x6c42",{"_index":8901,"title":{},"body":{"standards/net/http.html#client":{}}}],["x65b9;&#x6cd5;&#x53d1;&#x9001;&#x8fd9;&#x4e2a",{"_index":8894,"title":{},"body":{"standards/net/http.html#client":{}}}],["x65b9;&#x6cd5;&#x53ea;&#x4f1a;&#x5728;&#x53c2;&#x6570;&#x51fd;&#x6570;&#x6267;&#x884c;&#x7ed3;&#x675f;&#x4e4b;&#x540e;&#x628a",{"_index":8143,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x53ea;&#x63a5;&#x53d7;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#xff0c;&#x8fd9;&#x4e2a;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x662f",{"_index":8117,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x8fd9;&#x4e00;&#x9700;&#x6c42;&#x3002",{"_index":7914,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x7ed9;&#x51fa;&#x5185;&#x5bb9;&#x957f;&#x5ea6;&#x7684;&#x503c;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x7528;&#x5185;&#x5bb9;&#x957f;&#x5ea6;&#x51cf;&#x53bb;&#x672a;&#x8bfb;&#x90e8;&#x5206;&#x7684;&#x957f;&#x5ea6;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x5f88;&#x65b9;&#x4fbf;&#x5730;&#x5f97",{"_index":3893,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x53ef;&#x80fd;&#x4f1a;&#x4ece;&#x5f53;&#x524d;&#x7684;&#x6c60;&#x4e2d;&#x5220;&#x9664;&#x6389;&#x4efb;&#x4f55;&#x4e00;&#x4e2a;&#x503c;&#xff0c;&#x7136;&#x540e;&#x628a;&#x8fd9;&#x4e2a;&#x503c;&#x4f5c;&#x4e3a;&#x7ed3;&#x679c;&#x8fd4;&#x56de;&#x3002;&#x5982;&#x679c;&#x6b64;&#x65f6;&#x5f53;&#x524d;&#x7684;&#x6c60;&#x4e2d;&#x6ca1;&#x6709;&#x4efb;&#x4f55;&#x503c;&#xff0c",{"_index":8294,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x65b9;&#x6cd5;&#x540d",{"_index":1217,"title":{},"body":{"basic/oop.html#方法":{},"basic/interface.html#接口":{}}}],["x65b9;&#x6cd5;&#x540d;1",{"_index":2329,"title":{},"body":{"basic/interface.html#接口":{}}}],["x65b9;&#x6cd5;&#x540d;2",{"_index":2331,"title":{},"body":{"basic/interface.html#接口":{}}}],["x65b9;&#x6cd5;&#x548c",{"_index":3921,"title":{},"body":{"basic/basic_data.html#字符串":{},"standards/data/container.html#链表":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x5565;&#x4e5f;&#x4e0d;&#x505a;&#xff0c;&#x53ea;&#x662f;&#x8fd4;&#x56d",{"_index":4792,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x65b9;&#x6cd5;&#x5728;&#x4e00;&#x5f00;&#x59cb;&#x5c31;&#x4f1a;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":8137,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x5728;&#x4e92;&#x65a5;&#x9501;&#x5df2;&#x7ecf;&#x9501;&#x5b9a;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x963b;&#x585e;&#x4e86;&#x5f53;&#x524d;&#x7684",{"_index":7953,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x5728;&#x529f;&#x80fd;&#x65b9;&#x9762;&#x7684;&#x4e24;&#x4e2a;&#x7279;&#x70b9",{"_index":8142,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x5728;&#x53c2;&#x6570;&#x51fd;&#x6570;&#x6267;&#x884c;&#x7ed3;&#x675f;&#x540e;&#xff0c;&#x5bf9",{"_index":8148,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x5728;&#x8fd9;&#x91cc;&#x610f;&#x5473;&#x7684;&#x662f;&#xff1a;&#x6301;&#x6709;&#x4fe1;&#x7bb1;&#x4e0a;&#x7684;&#x9501;&#xff0c;&#x5e76;&#x4e14;&#x6709;&#x6253;&#x5f00;&#x4fe1;&#x7bb1;&#x7684;&#x6743;&#x5229;&#xff0c",{"_index":7920,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x5728;&#x963b;&#x585e;&#x5f53;&#x524d;&#x7684",{"_index":7946,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x58f0;&#x660e;&#xff1a",{"_index":1216,"title":{},"body":{"basic/oop.html#方法":{}}}],["x65b9;&#x6cd5;&#x5982;&#x679c;&#x5230;&#x4e86;&#x6700;&#x540e;&#xff0c;&#x4ecd;&#x7136;&#x65e0;&#x6cd5;&#x83b7;&#x53d6;&#x5230;&#x4e00;&#x4e2a;&#x503c;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x4f1a;&#x8c03;&#x7528;&#x8be5;&#x51fd;&#x6570;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x7684;&#x7ed3",{"_index":8301,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x65b9;&#x6cd5;&#x5982;&#x679c;&#x8fd4;&#x56de;&#x7684",{"_index":5500,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x65b9;&#x6cd5;&#x5b9a;&#x4e49;&#x5982;&#x4e0b;&#xff1a",{"_index":9213,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x65b9;&#x6cd5;&#x5b9e;&#x73b0",{"_index":2330,"title":{},"body":{"basic/interface.html#接口":{}}}],["x65b9;&#x6cd5;&#x5bf9;&#x8f93;&#x51fa;&#x8fdb;&#x683c;&#x5f0f;&#x5316;&#xff0c",{"_index":2515,"title":{},"body":{"standards/log.html#分类":{}}}],["x65b9;&#x6cd5;&#x5c06;&#x7f13;&#x5b58;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x6570;&#x636e;&#x5199;&#x5165;&#x5e95;&#x5c42;&#x7684",{"_index":5525,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x65b9;&#x6cd5;&#x5c31;&#x4e00;&#x5b9a;&#x4f1a;&#x88ab;&#x8c03;&#x7528",{"_index":5549,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x65b9;&#x6cd5;&#x5c31;&#x53ef;&#x4ee5;&#x505a;&#x5230;&#x3002",{"_index":3827,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x5c31;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x8fd9;&#x4e00;&#x6b65;&#x9aa4;&#x3002",{"_index":7927,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x5c31;&#x76f8;&#x5f53;&#x4e8e;&#x5176;&#x4ed6;&#x7c7b;&#x578b;&#x503c;&#x7684",{"_index":2359,"title":{},"body":{"basic/interface.html#接口":{}}}],["x65b9;&#x6cd5;&#x5f97;&#x5230;&#x7684;&#x7ed3;&#x679c;&#x503c",{"_index":3931,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x603b;&#x4f1a;&#x4ece;&#x901a;&#x77e5;&#x961f;&#x5217;&#x7684;&#x961f;&#x9996;&#x5f00;&#x59cb;&#x67e5;&#x627e;&#x53ef;&#x88ab",{"_index":7987,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x603b;&#x4f1a;&#x628a;&#x5f53;&#x524d;&#x7684",{"_index":7985,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x60df;&#x4e00;&#x7684;&#x53c2;&#x6570;&#x5c31;&#x662f;&#x5f85;&#x6392;&#x5e8f;&#x7684;&#x6570;&#x636e;&#x96c6;&#x5408;&#x3002",{"_index":9214,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x65b9;&#x6cd5;&#x6210",{"_index":1312,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x65b9;&#x6cd5;&#x62e5;&#x6709;&#x5d4c;&#x5165;&#x7684",{"_index":9236,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x65b9;&#x6cd5;&#x63a7;&#x5236;&#x3002",{"_index":4450,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x65b9;&#x6cd5;&#x63d0;&#x4f9b",{"_index":3460,"title":{},"body":{"standards/time.html#Time":{}}}],["x65b9;&#x6cd5;&#x63d0;&#x4f9b;&#x7684;&#x662f;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#xff0c;&#x4e5f;&#x4e0d;&#x662f;&#x5185;&#x5bb9;&#x957f;&#x5ea6;&#x3002",{"_index":3898,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x65f6;&#xff0c;&#x4f1a;&#x76f4;&#x63a5;&#x8c03;&#x7528;&#x8be5;&#x65b9;&#x6cd5;&#xff0c;&#x5426;&#x5219;&#x6267;&#x884c",{"_index":7101,"title":{},"body":{"standards/io/io.html#WriteString-函数":{}}}],["x65b9;&#x6cd5;&#x65f6;&#xff0c;&#x5c31;&#x4f1a;&#x5f15;&#x53d1;&#x4e00;&#x4e2a;&#x4e0d;&#x53ef;&#x6062;&#x590d;&#x7684",{"_index":7950,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x662f;&#x7528;&#x4e8e;&#x8bbe;&#x7f6e;&#x504f;&#x79fb;&#x91cf;&#x7684;&#xff0c;&#x8fd9;&#x6837;&#x53ef;&#x4ee5;&#x4ece;&#x67d0;&#x4e2a;&#x7279;&#x5b9a;&#x4f4d;&#x7f6e;&#x5f00;&#x59cb;&#x64cd;&#x4f5c;&#x6570;&#x636e;&#x6d41;&#x3002;&#x542c;&#x8d77;&#x6765;&#x548c",{"_index":6917,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x65b9;&#x6cd5;&#x6700;&#x540e;&#x7684;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x83b7;&#x53d6;&#x624b;&#x6bb5;&#x3002",{"_index":8300,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x65b9;&#x6cd5;&#x6709;&#x4e24;&#x4e2a;&#x53c2;&#x6570;&#xff0c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x5c31;&#x662f;&#x6211;&#x4eec;&#x521a;&#x521a;&#x63d0;&#x5230;&#x7684;&#x5199;&#x5165;&#x5668;&#xff0c;&#x5b83;&#x662f",{"_index":4297,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65b9;&#x6cd5;&#x6709;&#x54ea;&#x4e9b;&#x5f02;&#x540c",{"_index":7982,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x6709;&#x65f6;&#x5019;&#x4f1a;&#x5728;&#x628a;&#x6570;&#x636e;&#x5199;&#x8fdb;&#x7f13;&#x51b2;&#x533a;&#x4e4b;&#x540e;&#xff0c;&#x8c03;&#x7528",{"_index":5543,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x65b9;&#x6cd5;&#x6709;&#x70b9;&#x7279;&#x6b8a;&#x3002",{"_index":4500,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x65b9;&#x6cd5;&#x6765;&#x589e;&#x52a0;&#xff0c;&#x6216;&#x8005;&#x51cf;&#x5c11;&#x8fd9;&#x4e2a;&#x8ba1;&#x6570;&#x5668;&#x7684;&#x503c",{"_index":8079,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x65b9;&#x6cd5;&#x6784;&#x9020;&#x3002",{"_index":4372,"title":{},"body":{"standards/data/big.html#big":{}}}],["x65b9;&#x6cd5;&#x7528;&#x4e8e;&#x683c;&#x5f0f;&#x5316;&#x7684;&#x5c5e;&#x6027;&#x7f29;&#x5199;&#x3002",{"_index":7366,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x65b9;&#x6cd5;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x653e;&#x5728;&#x4e0d;&#x540c;&#x7684",{"_index":8109,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x65b9;&#x6cd5;&#x7684;&#x529f;&#x80fd;&#x662f;&#xff0c;&#x963b;&#x585e;&#x5f53;&#x524d;&#x7684",{"_index":8088,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x65b9;&#x6cd5;&#x7684;&#x540c;&#x65f6;&#xff0c;&#x4e3a;&#x4e86;&#x589e;&#x5927;&#x5176;&#x8ba1;&#x6570;&#x5668;&#x7684;&#x503c;&#xff0c;&#x800c;&#x5e76;&#x53d1;&#x5730;&#x8c03;&#x7528;&#x8be5;&#x503c;&#x7684",{"_index":8159,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x65b9;&#x6cd5;&#x7684;&#x610f;&#x601d;&#x662f;&#xff1a;&#x5c06;&#x4e0a;&#x4e00;&#x6b21",{"_index":6955,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x65b9;&#x6cd5;&#x7684;&#x63a5;&#x6536;&#x8005;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x662f;&#x67d0;&#x4e2a;&#x81ea;&#x5b9a;&#x4e49;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#xff0c;&#x800c;&#x4e14;&#x4e0d;&#x80fd;&#x662f;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x6216;&#x63a5;&#x53e3;&#x7684;&#x6307;&#x9488;&#x7c7b;&#x578b",{"_index":1256,"title":{},"body":{"basic/oop.html#方法":{}}}],["x65b9;&#x6cd5;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x5b83;&#x4f1a;&#x5bfc;&#x81f4;&#x610f;&#x6599;&#x4e4b;&#x5916;&#x7684;&#x9519;&#x8bef",{"_index":1317,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x65b9;&#x6cd5;&#x7684;&#x884c;&#x4e3a;&#x4e0e;&#x4e4b;&#x7c7b;&#x4f3c;&#x3002",{"_index":5545,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x65b9;&#x6cd5;&#x7684;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x7528",{"_index":7972,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x7684;&#x8c03;&#x7528;&#x3002",{"_index":1265,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x65b9;&#x6cd5;&#x7684;&#x8c03;&#x7528;&#x653e;&#x5728",{"_index":6933,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x65b9;&#x6cd5;&#x7684;&#x8c03;&#x7528;&#x65b9;&#x3002",{"_index":8303,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x65b9;&#x6cd5;&#x7684;&#x901a;&#x77e5;&#x800c;&#x88ab;&#x5524;&#x9192;&#x7684",{"_index":7990,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x7684;&#x90a3;&#x884c;&#x4ee3;&#x7801;&#x4e0a;&#x3002",{"_index":7941,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x7684;&#x90a3;&#x884c;&#x4ee3;&#x7801;&#x4e0a;&#x3002;&#x76f4;&#x5230;&#x8be5;&#x4e92;&#x65a5;&#x9501;&#x7684",{"_index":7859,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x65b9;&#x6cd5;&#x7684;&#x9996;&#x6b21;&#x8c03;&#x7528;&#x5b8c;&#x6210;&#xff0c;&#x5b83;&#x7684;&#x503c;&#x5c31;&#x4f1a;&#x4ec",{"_index":8131,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x7684;&#xff0c;&#x800c;&#x6709;&#x4e86",{"_index":8994,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x65b9;&#x6cd5;&#x76f8;&#x53cd;&#x7684;&#x884c;&#x4e3a",{"_index":9237,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x65b9;&#x6cd5;&#x7c7b;&#x4f3c;&#xff0c;&#x4f46;&#x662f;&#x8be5;&#x65b9;&#x6cd5;&#x5199;&#x7684",{"_index":8840,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x65b9;&#x6cd5;&#x7ed9;&#x4e00;&#x4e2a;&#x65f6;&#x95f4;&#x70b9;&#x52a0;&#x4e0a;&#x4e00;&#x4e2a;&#x65f6;&#x95f4;&#x6bb5;&#xff0c;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x65b0;&#x7684",{"_index":3456,"title":{},"body":{"standards/time.html#Time":{}}}],["x65b9;&#x6cd5;&#x83b7;&#x53d6;&#x5199;&#x5165;&#x5f53;&#x524d;&#x7f13;&#x5b58;&#x4e2d;&#x7684;&#x5b57;&#x8282;&#x6570;&#xff08;&#x5b57;&#x6bb5",{"_index":5524,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x65b9;&#x6cd5;&#x83b7;&#x53d6;&#x5230;&#x7684;&#x662f",{"_index":7116,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x65b9;&#x6cd5;&#x83b7;&#x53d6;&#x6240;&#x6709",{"_index":7120,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x65b9;&#x6cd5;&#x83b7;&#x53d6;&#x7f13;&#x5b58;&#x4e2d;&#x8fd8;&#x672a;&#x4f7f;&#x7528;&#x7684;&#x5b57;&#x8282;&#x6570;&#xff08;&#x7f13;&#x5b58;&#x5927;&#x5c0f",{"_index":5521,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x65b9;&#x6cd5;&#x88ab;&#x6267;&#x884c;&#x671f;&#x95f4;&#xff0c;&#x8de8;&#x8d8a;&#x4e86;&#x4e24;&#x4e2a;&#x8ba1;&#x6570;&#x5468;&#x671f;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x4f1a;&#x5f15;&#x53d1;&#x4e00;&#x4e2a",{"_index":8106,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x65b9;&#x6cd5;&#x88ab;&#x8c03;&#x7528;&#x4e86;&#xff0c;&#x8fde;&#x63a5;&#x624d;&#x4f1a;&#x8fd4;&#x56de;&#x7ed9;&#x8fde;&#x63a5;&#x6c60;&#x3002",{"_index":4495,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x65b9;&#x6cd5;&#x88ab;&#x8c03;&#x7528;&#x65f6;&#xff0c;&#x8be5;&#x8fde;&#x63a5;&#x4f1a;&#x8fd4;&#x56de;&#x7ed9;&#x8fde;&#x63a5;&#x6c60;&#x3002",{"_index":4498,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x65b9;&#x6cd5;&#x88ab;&#x8c03;&#x7528;&#x65f6;&#xff0c;&#x8fde;&#x63a5;&#x4f1a;&#x8fd4;&#x56de;&#x7ed9;&#x8fde;&#x63a5;&#x6c60;&#x3002",{"_index":4497,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x65b9;&#x6cd5;&#x88ab;&#x8c03;&#x7528;&#x7684;&#x6b21;&#x6570;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8be5;&#x5b57;&#x6bb5;&#x7684;&#x503c",{"_index":8128,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x88ab;&#x8c03;&#x7528;&#xff0c;&#x5e76;&#x4e14;&#x8fd9;&#x91cc;&#x7684;&#x9501;&#x5b9a;&#x64cd;&#x4f5c;&#x6210;&#x529f;&#x5b8c;&#x6210;&#xff0c;&#x540e;&#x7eed;&#x7684;&#x4ee3;&#x7801",{"_index":7860,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x65b9;&#x6cd5;&#x8981;&#x8fd9;&#x4e48;&#x505a;&#x5462;&#xff1f;&#x4f60;&#x53ef;&#x4ee5;&#x60f3;&#x8c61;&#x4e00;&#x4e0b;&#xff0c;&#x5982;&#x679c",{"_index":7952,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x8ba9;&#x4e24;&#x4e2a;&#x65f6;&#x95f4;&#x70b9;&#x76f8;&#x51cf;&#xff0c",{"_index":3453,"title":{},"body":{"standards/time.html#Time":{}}}],["x65b9;&#x6cd5;&#x8bbe;&#x7f6e;&#x76d1;&#x542c;&#x3002",{"_index":9016,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x65b9;&#x6cd5;&#x8bfb;&#x53d6;&#x5355;&#x4e2a",{"_index":6968,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x65b9;&#x6cd5;&#x8c03;&#x7528;&#x7684;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x5c31;&#x4f1a;&#x88ab",{"_index":4225,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x65b9;&#x6cd5;&#x8f93;&#x51fa;&#x7684;&#x8fd9;&#x4e9b;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x5c31;&#x662f;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8bfb;&#x61c2",{"_index":4311,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65b9;&#x6cd5;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x6307;&#x5b9a;&#x65f6;&#x533a;&#xff08;&#x4f46;&#x6307;&#x5411;&#x540c;&#x4e00;&#x65f6;&#x95f4;&#x70b9;&#xff09;&#x7684",{"_index":3466,"title":{},"body":{"standards/time.html#Time":{}}}],["x65b9;&#x6cd5;&#x8fd4;&#x56de;&#x7684;&#x4e5f;&#x662f;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x4e2d;&#x672a;&#x88ab;&#x8bfb;&#x53d6;&#x90e8;&#x5206;&#x7684;&#x957f;&#x5ea6;&#xff0c",{"_index":3878,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x8fd4;&#x56de;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x53d8;&#x4e3a;&#x4e86",{"_index":3885,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x8fd9;&#x91cc;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x81ea;&#x5df1;&#x8c03;&#x7528;&#x81ea;&#x5df1;&#xff09;&#xff0c;&#x628a",{"_index":9044,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x65b9;&#x6cd5;&#x8fdb;&#x884c;&#x6392;&#x5e8f;&#x3002",{"_index":9212,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x65b9;&#x6cd5;&#x8fdb;&#x884c;&#x6bd4;&#x8f83;&#x3002;sub",{"_index":3452,"title":{},"body":{"standards/time.html#Time":{}}}],["x65b9;&#x6cd5;&#x90fd;&#x53ef;&#x80fd;&#x4f1a;&#x9020;&#x6210;&#x5185;&#x5bb9;&#x7684;&#x6cc4;&#x9732",{"_index":3922,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x90fd;&#x662f;&#x88ab;&#x7528;&#x6765;&#x53d1;&#x9001;&#x901a;&#x77e5;&#x7684;&#xff0c;&#x4e0d;&#x540c;&#x7684;&#x662f;&#xff0c;&#x524d;&#x8005;&#x7684;&#x901a;&#x77e5;&#x53ea;&#x4f1a;&#x5524;&#x9192;&#x4e00;&#x4e2a;&#x56e0;&#x6b64;&#x800c;&#x7b49;&#x5f85;&#x7684",{"_index":7983,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x90fd;&#x6709;&#x53ef;&#x80fd;&#x4f1a;&#x9020;&#x6210;&#x5185;&#x5bb9;&#x6cc4;&#x9732;&#x3002;&#x8fd9;&#x4e3b;&#x8981;&#x662f;&#x56e0;&#x4e3a;&#x5b83;&#x4eec;&#x5728;&#x6b63;&#x5e38;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#x90fd;&#x4f1a;&#x8fd4;&#x56de;&#x76f4;&#x63a5;&#x57fa;&#x4e8e;&#x7f13;&#x51b2;&#x533a;&#x7684;&#x5b57;&#x8282;&#x5207;&#x7247;&#xff0c",{"_index":5496,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x65b9;&#x6cd5;&#x91cc;&#x9762;&#x8c03;&#x7528;&#x6d89;&#x53ca",{"_index":1316,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x65b9;&#x6cd5;&#xff08;&#x975e",{"_index":7046,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x65b9;&#x6cd5;&#xff09;&#x7684;&#x4f7f;&#x7528;&#xff0c;&#x793a;&#x4f8b;&#xff1a",{"_index":7109,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x65b9;&#x6cd5;&#xff0c",{"_index":4295,"title":{},"body":{"basic/test.html#性能分析":{},"standards/net/http.html#client":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x6267;&#x884c;&#x6211;&#x4eec;&#x7684",{"_index":9041,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x4ee5;&#x4fbf;&#x4e3a;&#x540e;&#x7eed;&#x7684;&#x65b0;&#x6570;&#x636e;&#x817e;&#x51fa;&#x7a7a;&#x95f4;&#x3002",{"_index":5544,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x628a;&#x7ed9;&#x5b9a;&#x7684;&#x5143;&#x7d20;&#x79fb;&#x52a8;&#x5230;&#x94fe;&#x8868;&#x7684;&#x6700;&#x524d;&#x7aef;&#x548c;&#x6700;&#x540e;&#x7aef;&#x3002",{"_index":5243,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5305;&#x88c5;&#x4e86",{"_index":9255,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5373;&#x5b9e;&#x73b0",{"_index":9032,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x53ea;&#x4f1a;&#x6267;&#x884c;&#x9996;&#x6b21;&#x88ab;&#x8c03;&#x7528;&#x65f6;&#x4f20;&#x5165;&#x7684;&#x51fd;&#x6570;&#x201d;&#x3002",{"_index":8141,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x53ef;&#x4ee5;&#x5141;&#x8bb8;&#x5c06;&#x6570;&#x636e;&#x6309",{"_index":9228,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x540e;&#x8005;&#x4f1a;&#x628a",{"_index":9084,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x540e;&#x8005;&#x53ef;&#x4ee5;&#x806a;&#x660e;&#x53c8;&#x65b9;&#x4fbf;&#x7684;&#x8c03;&#x7528;&#x6211;&#x4eec;&#x6700;&#x521d;&#x63d0;&#x4f9b;&#x7684;&#x51fd;&#x6570;&#x5185;&#x5bb9;&#x3002",{"_index":9095,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x56e0;&#x6b64;&#x4ee3;&#x7801;&#x4e2d;&#x7684",{"_index":9081,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5b83;&#x4eec;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x628a;&#x7ed9;&#x5b9a;&#x7684;&#x5143;&#x7d20;&#x79fb;&#x52a8;&#x5230;&#x53e6;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x7684;&#x524d;&#x9762;&#x548c;&#x540e;&#x9762;&#x3002",{"_index":5242,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5b83;&#x5b9e;&#x9645;&#x662f;&#x5bf9",{"_index":7425,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5e76;&#x518d;&#x6b21;&#x88ab;&#x963b;&#x585e;&#x3002",{"_index":7965,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5e76;&#x5c06;&#x7ed3;&#x679c;&#x7684",{"_index":5472,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5e76;&#x7ee7;&#x7eed;&#x7b49;&#x5f85;&#x4e0b;&#x6b21;&#x901a;&#x77e5;&#x7684;&#x5230;&#x6765;&#x3002",{"_index":7980,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5f97;&#x5230;&#x786e;&#x5207;&#x7684;&#x5224;&#x65ad;&#x7ed3;&#x679c;&#x3002",{"_index":8354,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x7528;&#x4e8e;&#x5173;&#x95ed;&#x6570;&#x636e;&#x6d41;&#x3002",{"_index":6928,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x7528;&#x4e8e;&#x5bf9;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x4e2d;&#x8ba1;&#x6570;&#x5668",{"_index":8082,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x80fd;&#x904d;&#x5386;&#x4e00;&#x904d;&#x73af;&#xff0c;&#x5bf9;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x6267;&#x884c",{"_index":5267,"title":{},"body":{"standards/data/container.html#环":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x8fd9;&#x91cc;&#x6ca1;&#x6709;&#x76f4;&#x63a5;&#x4f20;&#x9012",{"_index":9011,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x5f88;&#x53ef;&#x80fd;&#x4f1a;&#x5f15;&#x53d1",{"_index":8160,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x90fd;&#x4f1a;&#x5728;&#x53d1;&#x73b0;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x7684;&#x53ef;&#x5199;&#x7a7a;&#x95f4;&#x4e0d;&#x8db3;&#x4ee5;&#x5bb9;&#x7eb3;&#x65b0;&#x7684;&#x5b57;&#x8282;&#xff0c;&#x6216",{"_index":5546,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x65b9;&#x6cd5;&#xff1a",{"_index":7410,"title":{},"body":{"standards/os/os.html#文件-I-O":{},"standards/net/http.html#HTTP-Server":{},"standards/data/sort.html#数据集合排序":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x65b9;&#x6cd5;&#xff1f",{"_index":7932,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x9762;&#x975e;&#x5e38;&#x7684;&#x76f8;&#x4f3c;&#x3002;&#x5355;&#x4ece;&#x5b83;&#x4eec;&#x63d0;&#x4f9b;&#x7684;&#x51fd;&#x6570;&#x7684;&#x6570;&#x91cf;&#x548c;&#x529f;&#x80fd;&#x4e0a;&#x8bb2;&#xff0c;&#x5dee;&#x522b;&#x5fae;&#x4e4e;&#x5176;&#x5fae;&#x3002",{"_index":3859,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65e0;&#x5c0f;&#x6570;&#x90e8;&#x5206;&#x7684;&#xff0c;&#x6307;&#x6570;&#x4e3a;&#x4e8c;&#x7684;&#x5e42;&#x7684;&#x79d1;&#x5b66;&#x8ba1;&#x6570;&#x6cd5;&#xff0c;&#x4e0",{"_index":4689,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x65e0;&#x5c0f;&#x6570;&#x90e8;&#x5206;&#xff0c;&#x4e24;&#x4f4d;&#x6307;&#x6570;&#x7684;&#x79d1;&#x5b66;&#x8ba1;&#x6570;&#x6cd5",{"_index":4736,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x65e0;&#x6548;&#xff09;&#xff0c;&#x5bf9;&#x4e8",{"_index":4986,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x65e0;&#x6548;&#xff1a",{"_index":5433,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x65e0;&#x6cd5;&#x63a5;&#x6536;&#x4e86;&#x3002;&#x8fd9;&#x65f6;&#x5019;&#x5c31;&#x9700;&#x8981;&#x4f7f;&#x7528",{"_index":3000,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x65e0;&#x6cd5;&#x786e;&#x5b9a;&#x65f6;&#xff0c;&#x4f7f;&#x7528",{"_index":1255,"title":{},"body":{"basic/oop.html#方法":{}}}],["x65e0;&#x6cd5;&#x8131;&#x79bb",{"_index":977,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x65e0;&#x6cd5;&#x8868;&#x793a;&#x4e3a;&#x76f8;&#x5bf9",{"_index":5675,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x65e0;&#x6cd5;&#x89e3;&#x9501;&#xff0c;&#x522b;&#x7684",{"_index":7961,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65e0;&#x6cd5;&#x89e6;&#x53d1;&#xff0c;&#x5927;&#x91cf;&#x767d;&#x8272;&#x5bf9;&#x8c61;&#x4e0d;&#x80fd;&#x88ab;&#x56de;&#x6536;&#xff0c;&#x6700;&#x7ec8;&#x9020;&#x6210;&#x5185;&#x5b58;&#x6cc4;&#x9732;&#x3002",{"_index":556,"title":{},"body":{"advance/gc.html#监控":{}}}],["x65e0;&#x7a77;&#x503c",{"_index":6093,"title":{},"body":{"standards/data/math.html#特殊函数":{}}}],["x65e0;&#x7b26;&#x53f7;&#x6574;&#x578b;&#x8f6c;&#x5b57;&#x7b26;&#x4e32",{"_index":4956,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x65e0;&#x7f13;&#x5b58",{"_index":2923,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x65e0;&#x8bba",{"_index":4979,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x65e0;&#x8bba;&#x4efb;&#x4f55;&#x65f6;&#x5019;&#xff0c;&#x53ea;&#x8981;&#x6709;&#x4e24;&#x4e2a;&#x4ee5;&#x4e0a",{"_index":7803,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x65e0;&#x8bba;&#x51fd;&#x6570;&#x662f;&#x5426;&#x51fa;&#x9519",{"_index":3176,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x65e0;&#x8bba;&#x51fd;&#x6570;&#x7ed3;&#x675f;&#x6267;&#x884c;&#x7684;&#x539f;&#x56e0;&#x662f;&#x4ec0;&#x4e48;&#xff0c;&#x5176;&#x4e2d;&#x7684",{"_index":734,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x65e0;&#x8bba;&#x6211;&#x518d;&#x5bf9",{"_index":8057,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x65e0;&#x9700;&#x5bf9;&#x5176;&#x6240;&#x64cd;&#x4f5c;&#x7684;&#x6587;&#x4ef6;&#x672c;&#x8eab;&#x62e5;&#x6709;&#x4efb;&#x4f55;&#x6743;&#x9650;&#xff0c;&#x4f46;&#x9488;&#x5bf9;&#x6307;&#x5b9a",{"_index":7503,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x65e0;&#x9700;&#x663e;&#x5f0f;&#x5730;&#x8c03;&#x7528;&#x5b83;&#x7684",{"_index":1309,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x65e0;&#x9700;&#x7ed1;&#x5b9a",{"_index":6552,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x65e2;&#x53ef;&#x4ee5;&#x91cd;&#x547d;&#x540d;&#x6587;&#x4ef6;&#xff0c;&#x53c8;&#x53ef;&#x4ee5;&#x5c06;&#x6587;&#x4ef6;&#x79fb;&#x81f3;&#x540c;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#x7cfb;&#x7edf;&#x4e2d;&#x7684;&#x53e6;&#x4e00;&#x4e2a;&#x76ee;&#x5f55;&#x3002;&#x8be5;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x65e2;&#x53ef;&#x4ee5;&#x7528;&#x4e8e;&#x6587;&#x4ef6;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x7528;&#x4e8e;&#x76ee;&#x5f55;&#x3002;&#x76f8;&#x5173;&#x7ec6;&#x8282;&#xff0c",{"_index":7607,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x65e2;&#x7136",{"_index":8132,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65e2;&#x80fd;&#x6253;&#x5f00;&#x4e00;&#x4e2a;&#x5df2;&#x7ecf;&#x5b58;&#x5728;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x4e5f;&#x80fd;&#x521b;&#x5efa;&#x5e76;&#x6253;&#x5f00;&#x4e00;&#x4e2a;&#x65b0;&#x6587;&#x4ef6;&#x3002",{"_index":7336,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x65e5",{"_index":3517,"title":{},"body":{"standards/time.html#Time":{}}}],["x65e5;&#x3002",{"_index":3494,"title":{},"body":{"standards/time.html#Time":{}}}],["x65e5;&#x5fd7;&#x5185;&#x5bb9",{"_index":2493,"title":{},"body":{"standards/log.html#Logger":{}}}],["x65e5;&#x5fd7;&#x524d;&#x7f00",{"_index":2489,"title":{},"body":{"standards/log.html#Logger":{}}}],["x65e7;&#x7684;gotest&#x6587;&#x4ef6;&#xff0c;&#x7531;makefiles&#x9057;&#x7559",{"_index":2773,"title":{},"body":{"commands/build.html#工具":{}}}],["x65e7;&#x7684;object&#x76ee;&#x5f55;&#xff0c;&#x7531;makefiles&#x9057;&#x7559",{"_index":2771,"title":{},"body":{"commands/build.html#工具":{}}}],["x65e7;&#x7684;test&#x76ee;&#x5f55;&#xff0c;&#x7531;makefiles&#x9057;&#x7559",{"_index":2772,"title":{},"body":{"commands/build.html#工具":{}}}],["x65e7;&#x7684;test&#x8bb0;&#x5f55;&#xff0c;&#x7531;makefiles&#x9057;&#x7559",{"_index":2774,"title":{},"body":{"commands/build.html#工具":{}}}],["x65f6",{"_index":7074,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x65f6;&#x4e0d;&#x4f1a;&#x88ab;&#x6784;&#x5efa;&#x6210;&#x5305;&#x7684;&#x4e00;&#x90e8;&#x5206;&#xff0c",{"_index":4078,"title":{},"body":{"basic/test.html#测试":{}}}],["x65f6;&#x4f1a;&#x8c03;&#x7528",{"_index":700,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x65f6;&#x4f7f;&#x7528;&#xff0c;&#x6bd4;&#x5982;&#x6211;&#x4eec;&#x8981;&#x5c06",{"_index":257,"title":{},"body":{"index.html#类型转换":{}}}],["x65f6;&#x533a",{"_index":3419,"title":{"standards/time.html#时区":{}},"body":{}}],["x65f6;&#x533a;&#x3002",{"_index":3428,"title":{},"body":{"standards/time.html#时区":{}}}],["x65f6;&#x533a;&#x4fe1;&#x606f;&#x53ea;&#x662f;&#x4f1a;&#x6539;&#x53d8;&#x5176;&#x8868;&#x793a;&#xff1b;&#x4e0d;&#x4f1a;&#x4fee;&#x6539;&#x88ab;&#x8868",{"_index":3468,"title":{},"body":{"standards/time.html#Time":{}}}],["x65f6;&#x533a;&#x6570;&#x636e;&#x5e93;&#x91cc;&#x6709;&#x8bb0;&#x5f55;&#x7684;&#x5730;&#x70b9;&#x540d;&#xff08;&#x8be5;&#x6570;&#x636e;&#x5e93;&#x8bb0;&#x5f55;&#x4e86;&#x5730;&#x70b9;&#x548c;&#x5bf9;&#x5e94;&#x7684;&#x65f6;&#x533a;&#xff09;&#xff0c;&#x5982",{"_index":3444,"title":{},"body":{"standards/time.html#时区":{}}}],["x65f6;&#x53d8;&#x91cf;&#x6765;&#x5b58;&#x653e;&#x4e2d;&#x95f4;&#x7ed3;&#x679c;&#xff0c;&#x6240;&#x4ee5;&#x8fd0;&#x7b97;&#x53ef;&#x4ee5;&#x88ab;&#x94fe;&#x5f0f;&#x5730;&#x8c03;&#x7528;&#xff0c;&#x5e76;&#x8282;&#x7701;&#x5185;&#x5b58;&#x3002",{"_index":4382,"title":{},"body":{"standards/data/big.html#big":{}}}],["x65f6;&#x5c06;&#x8868;&#x793a;&#x4e00;&#x76f4;&#x5230",{"_index":1886,"title":{},"body":{"basic/slice.html#slice":{}}}],["x65f6;&#x5c06;&#x8868;&#x793a;&#x4ec",{"_index":1888,"title":{},"body":{"basic/slice.html#slice":{}}}],["x65f6;&#x624d;&#x4f1a;&#x62a5;&#x9519;&#x3002",{"_index":4471,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x65f6;&#x662f;&#x76f8;&#x7b49;&#x7684;&#x3002",{"_index":1693,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x65f6;&#x7684;&#x6982;&#x8981;&#x4fe1;&#x606f;&#xff0c",{"_index":4307,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65f6;&#x901a;&#x8fc7;&#x7b2c;&#x4e8c;&#x4e2a;&#x53c2;&#x6570;&#x6307;&#x5b9a;&#x961f;&#x5217;&#x7684;&#x6700;&#x5927;&#x5bb9;&#x91cf;&#x3002",{"_index":2940,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x65f6;&#x9047;&#x5230;&#x7684;&#x9519;&#x8bef;&#x90fd;&#x4f1a;&#x4f20;&#x9012;&#x7ed9",{"_index":5779,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x65f6;&#x949f;&#x548c",{"_index":6288,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x65f6;&#x95f4",{"_index":2503,"title":{},"body":{"standards/log.html#Logger":{}}}],["x65f6;&#x95f4;&#x5355;&#x4f4d;&#x5230;&#x66f4;&#x4f4e;&#x7684;&#x7cbe;&#x786e;&#x5ea6;&#x3002;&#x5982;&#x679c;&#x51fa;&#x9519;&#xff0c;&#x4f1a;&#x8fd4;&#x56d",{"_index":7537,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x65f6;&#x95f4;&#x6233;&#x3002",{"_index":3486,"title":{},"body":{"standards/time.html#Time":{}}}],["x65f6;&#x95f4;&#x6233;&#x751f;&#x6210",{"_index":3495,"title":{},"body":{"standards/time.html#Time":{}}}],["x65f6;&#x95f4;&#x6233;&#x7684;&#x7eb3;&#x79d2;&#x8868;&#x793a;&#xff1b",{"_index":3499,"title":{},"body":{"standards/time.html#Time":{}}}],["x65f6;&#x95f4;&#x6233;&#xff0c;&#x5b9e;&#x9645;&#x4e0a;&#xff0c;&#x52a0;&#x4e0a;&#x7684",{"_index":3481,"title":{},"body":{"standards/time.html#Time":{}}}],["x65f6;&#x95f4;&#x6233;&#xff1b",{"_index":3498,"title":{},"body":{"standards/time.html#Time":{}}}],["x65f6;&#x95f4;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":4136,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x65f6;&#xff09;&#xff0c",{"_index":7047,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x65f6;&#xff0c;&#x53e6;&#x4e00;&#x4e2a",{"_index":7848,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x65f6;&#xff0c;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x627e;&#x5230;&#x5927;&#x5c0f;&#x5408;&#x9002;&#x7684;&#xff0c;&#x90a3;&#x4e48;&#x4f1a;&#x9009;&#x62e9;&#x9875;&#x6570;&#x66f4;&#x591a;&#x7684",{"_index":405,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x65f6;&#xff0c;&#x5b83;&#x5c31;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":6857,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x65f6;&#xff0c;&#x5df2;&#x7ecf;&#x4ecb;&#x7ecd;&#x4e86",{"_index":7647,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x65f6;&#xff0c;&#x5e94;&#x8be5;&#x8868;&#x793a",{"_index":4930,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x65f6;&#xff0c;&#x5f97;&#x5230;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x662f;&#x65e0;&#x6cd5;&#x901a;&#x8fc7",{"_index":4995,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x65f6;&#xff0c;&#x624d;&#x6709",{"_index":7087,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x65f6;&#xff0c;&#x672c;&#x65b9;&#x6cd5;&#x603b;&#x662f;&#x4f1a;&#x8fd4;&#x56de;&#x9519;&#x8bef;&#xff1b;&#x5982;&#x679c;&#x662f;&#x56e0;&#x4e3a;&#x5230;&#x8fbe;&#x6587;&#x4ef6;&#x7ed3;&#x5c3e;&#xff0c;&#x8fd4;&#x56de;&#x503c",{"_index":7414,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x65f6;&#xff0c;&#x76f8;&#x5e94;&#x7684;&#x5305;&#x540d;&#x3001;&#x51fd;&#x6570;&#x540d;&#x3001;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x8def;&#x5f84;&#x3001;&#x4ee3;&#x7801;&#x884c;&#x53f7;&#x7b49;&#x4fe1;&#x606f;&#x5c31;&#x90fd;&#x4f1a;&#x4f5c;&#x4e3a;&#x6ce8;&#x91ca;&#x88ab;&#x52a0;&#x5165;&#x8fdb;&#x53bb;&#x3002;&#x53e6;&#x5916;&#xff0c",{"_index":4306,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65f6;&#xff0c;&#x8868;&#x793a;&#x8fd4;&#x56de;&#x7684",{"_index":5991,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x65f6;&#xff0c;&#x8fd4;&#x56de;&#x6240;&#x6709;&#x7684;&#x5b50;&#x5b57;&#x7b26;&#x4e32",{"_index":5989,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x65f6;&#xff0c;&#x8fd4;&#x56de;&#x7684;&#x7ed3;&#x679c;&#x662f",{"_index":5990,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x65f6;&#xff0c;&#x901a;&#x8fc7",{"_index":4302,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65f6;&#xff0c;&#x901a;&#x8fc7;&#x8bfb;&#x53d6",{"_index":3431,"title":{},"body":{"standards/time.html#时区":{}}}],["x65f6;&#xff0c;&#x90a3;&#x4e2a;&#x5f53;&#x6b21;&#x8fed;&#x4ee3;&#x7684;&#x5e8f;&#x53f7;&#x3002",{"_index":6389,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x65f6;&#xff0c;&#x9996;&#x5148;&#x8ba1;&#x7b97;&#x51fa;&#x6240;&#x6709;&#x53f3;&#x503c;&#xff0c;&#x7136;&#x540e;&#x518d;&#x4f9d;&#x6b21;&#x8d4b;&#x503c;&#xff1a",{"_index":2441,"title":{},"body":{"basic/var.html#赋值":{}}}],["x65f6;&#xff0c;&#x9ed8;&#x8ba4;&#x4f1a;&#x5c06",{"_index":954,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x65f6;&#xff0c;go",{"_index":1930,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x65f6;&#xff0c;locat",{"_index":3471,"title":{},"body":{"standards/time.html#Time":{}}}],["x65f6;,&#x6bcf;&#x4e2a",{"_index":6174,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x662f",{"_index":303,"title":{},"body":{"index.html#类型断言":{},"index.html#编码":{},"advance/gc.html#何时触发-GC":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/map.html#map":{},"concurrent/channel.html#channel":{},"standards/time.html#时区":{},"standards/time.html#Time":{},"basic/basic_data.html#字符串":{},"basic/test.html#基准测试":{},"standards/data/big.html#big":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/text/strconv.html#字符串转为整型":{},"standards/io/bufio.html#bufio-Reader":{},"standards/os/filepath.html#filepath":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Closer":{},"standards/net/http.html#HTTP-Server":{}}}],["x662f;&#x4e00;&#x4e2a",{"_index":6975,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{},"standards/net/http.html#HTTP-Server":{}}}],["x662f;&#x4e00;&#x4e2a;&#x4fe1;&#x7bb1;&#xff0c;&#x5982;&#x679c;&#x5728;&#x653e;&#x7f6e;&#x7684;&#x65f6;&#x5019;&#x53d1;&#x73b0;&#x4fe1;&#x7bb1;&#x91cc;&#x8fd8;&#x6709;&#x672a;&#x88ab;&#x53d6;&#x8d70;&#x7684;&#x60c5;&#x62a5;&#xff0c;&#x90a3;&#x5c31;&#x4e0d;&#x518d;&#x653e;&#x7f6e;&#xff0c;&#x800c;&#x5148;&#x8fd4;&#x56de;&#x3002;&#x53e6;&#x4e00;&#x65b9;&#x9762;&#xff0c;&#x5982;&#x679c;&#x4f60;&#x5728;&#x83b7;&#x53d6;&#x7684;&#x65f6;&#x5019;&#x53d1;&#x73b0;&#x4fe1",{"_index":7917,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x662f;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#xff0c;&#x800c;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x7684",{"_index":8987,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x662f;&#x4e00;&#x4e2a;&#x5207;&#x7247;,&#x90a3;&#x4e48;&#x8fed;&#x4ee3;&#x53d8;&#x91cf;&#x5c31;&#x53ef;&#x4ee5",{"_index":1105,"title":{},"body":{"basic/flow.html#for":{}}}],["x662f;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x5207;&#x7247;&#x3002;&#x6211;&#x4eec;&#x6253;&#x5370;&#x770b;&#x4e00;&#x4e0b;&#xff1a",{"_index":210,"title":{},"body":{"index.html#os-Args":{}}}],["x662f;&#x4e00;&#x4e2a;&#x5e95;&#x5c42;&#x7684;&#x539f;&#x59cb;&#x884c;&#x8bfb;&#x53d6;&#x547d;&#x4ee4;&#x3002;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":5473,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x662f;&#x4e00;&#x4e2a;&#x63a5;&#x53e3;&#xff0c",{"_index":9104,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x662f;&#x4e00;&#x4e2a;&#x6570;&#x636e;&#x5e93;&#x53e5;&#x67c4;&#xff0c;&#x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x5177;&#x6709;&#x96f6;&#x5230;&#x591a;&#x4e2a;&#x5e95;&#x5c42;&#x8fde;&#x63a5;&#x7684;&#x8fde;&#x63a5;&#x6c60;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x5b89;&#x5168;&#x7684;&#x88ab;&#x591a;&#x4e2a",{"_index":4441,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x662f;&#x4e00;&#x4e2a;&#x65e0;&#x5e8f;&#x7684",{"_index":1393,"title":{},"body":{"basic/map.html#map":{}}}],["x662f;&#x4e00;&#x4e2a;&#x66f4;&#x4e00;&#x822c;&#x6027;&#x7684;&#x6587;&#x4ef6;&#x6253;&#x5f00;&#x51fd;&#x6570;&#xff0c;&#x5927;&#x591a;&#x6570;&#x8c03;&#x7528;&#x8005;&#x90fd;&#x5e94;&#x7528",{"_index":7337,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x662f;&#x4e00;&#x4e2a;&#x7279;&#x6b8a;&#x7684;&#x5305;&#xff0c",{"_index":2155,"title":{},"body":{"basic/package.html#main":{}}}],["x662f;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x4e3a",{"_index":7901,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x662f;&#x4e00;&#x4e2a;&#x9ed1;&#x767d;&#x7535;&#x5f71;&#xff0c",{"_index":1580,"title":{},"body":{"basic/json.html#序列化":{}}}],["x662f;&#x4e00;&#x6b21;&#x6027;&#x7684;&#xff0c;&#x6240;&#x4ee5",{"_index":3568,"title":{},"body":{"standards/time.html#定时器":{}}}],["x662f;&#x4e00;&#x79cd;&#x53ef;&#x53d8;&#x5bbd;&#x7684;&#x7f16;&#x7801;&#x65b9;&#x6848",{"_index":364,"title":{},"body":{"index.html#编码":{}}}],["x662f;&#x4e00;&#x7ec4",{"_index":2323,"title":{},"body":{"basic/interface.html#接口":{}}}],["x662f;&#x4e0d;&#x4e00;&#x6837;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#xff0c;&#x4f46;&#x662f;&#x53ef;&#x4ee5;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a",{"_index":2378,"title":{},"body":{"basic/interface.html#接口":{}}}],["x662f;&#x4e0d;&#x5b89;&#x5168;&#x7684;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x5728;&#x591a;&#x5e76;&#x53d1;&#x73af;&#x5883;&#x4e0b;&#xff0c;&#x4e0d;&#x80fd;&#x4f9d;&#x8d56;&#x5176;&#x7ed3;&#x679c;&#x3002",{"_index":5498,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x662f;&#x4e2a;&#x672a;&#x77e5;&#x7c7b;&#x578b;&#xff0c;&#x5728;&#x7f16;&#x8bd1;&#x65f6;&#x65e0;&#x6cd5;&#x786e;&#x5b9a;&#xff0c;&#x6240;&#x4ee5;&#x7c7b;&#x578b;&#x65ad;&#x8a00;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x786e;&#x5b9a;&#x3002",{"_index":298,"title":{},"body":{"index.html#类型断言":{}}}],["x662f;&#x4e3a;&#x4e86;&#x6807;&#x8bc6;&#x8be5;&#x6570;&#x636e;&#x5df2;&#x7ecf;&#x51fa;&#x4e86;&#x4f18;&#x5148;&#x7ea7;&#x961f;&#x5217;&#x4e86",{"_index":5319,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x662f;&#x4ece",{"_index":3483,"title":{},"body":{"standards/time.html#Time":{}}}],["x662f;&#x503c;&#xff0c;&#x90a3;&#x4e48;&#x6309;&#x7167;&#x4f20;&#x503c;&#x7684;&#x65b9;&#x5f0f",{"_index":1740,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x662f;&#x5168;&#x5c40;&#x4f5c;&#x7528;&#x57df",{"_index":2260,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x662f;&#x5176;&#x4ed6",{"_index":717,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x662f;&#x5206;&#x53f7",{"_index":950,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x662f;&#x5207;&#x7247;&#x7684;&#x4e0b;&#x6807;&#xff0c;&#x5f53",{"_index":1092,"title":{},"body":{"basic/flow.html#for":{}}}],["x662f;&#x52a8;&#x6001;&#x7684;&#xff0c",{"_index":1865,"title":{},"body":{"basic/slice.html#slice":{}}}],["x662f;&#x53d6;&#x5730;&#x5740;&#x64cd;&#x4f5c;&#xff0c",{"_index":1681,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x662f;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x4f7f;&#x7528",{"_index":2368,"title":{},"body":{"basic/interface.html#接口":{}}}],["x662f;&#x5426",{"_index":5129,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x4ee5",{"_index":5922,"title":{},"body":{"standards/text/strings.html#前缀和后缀":{}}}],["x662f;&#x5426;&#x5305;&#x542b",{"_index":3768,"title":{},"body":{"basic/basic_data.html#字符串":{},"standards/text/strings.html#判断是否包含字符串":{}}}],["x662f;&#x5426;&#x53ef;&#x6253;&#x5370;&#x5b57;&#x7b26",{"_index":5126,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x548c",{"_index":5735,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x662f;&#x5426;&#x56fe;&#x5f62;&#x5b57;&#x7b26",{"_index":5119,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x5728;&#x5df2;&#x7ecf;&#x5347;&#x5e8f;&#x6392;&#x597d;&#x7684;&#x5207;&#x7247",{"_index":9243,"title":{},"body":{"standards/data/sort.html#Search":{}}}],["x662f;&#x5426;&#x5927;&#x5199;&#x5b57;&#x7b26",{"_index":5130,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x5b57;&#x6bcd",{"_index":5120,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x5b58;&#x5728;&#x6307;&#x5b9a;&#x5143;&#x7d20;&#xff0c;&#x4e3e;&#x4e2a;&#x6817;&#x5b50;&#xff1a",{"_index":9308,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x662f;&#x5426;&#x5b58;&#x5728;&#x67d0;&#x4e2a;&#x5b57;&#x7b26;&#x6216;&#x5b50;&#x4e32;&#xff1b",{"_index":5909,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x662f;&#x5426;&#x5c0f;&#x5199;&#x5b57;&#x7b26",{"_index":5121,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x5df2;&#x7ecf;&#x5728;&#x8fd0;&#x884c;&#x4e86;&#x3002",{"_index":6325,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x662f;&#x5426;&#x5df2;&#x7ecf;&#x6267;&#x884c;&#x3002",{"_index":7849,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x662f;&#x5426;&#x5e94;&#x8be5;&#x88ab;&#x6062;&#x590d;&#x3002",{"_index":705,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x662f;&#x5426;&#x63a7;&#x5236;&#x5b57;&#x7b26",{"_index":5117,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x6570;&#x5b57;&#x5b57;&#x7b26;&#xff0c;&#x6bd4;&#x5982;&#x7f57;&#x9a6c;&#x6570;&#x5b57;&#x2167;&#x4e5f;&#x662f;&#x6570;&#x5b57;&#x5b57;&#x7b26",{"_index":5123,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x662f",{"_index":5124,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x662f;&#x65e0;&#x7a77;&#x503c",{"_index":6094,"title":{},"body":{"standards/data/math.html#特殊函数":{}}}],["x662f;&#x5426;&#x6807;&#x70b9;&#x7b26;&#x53f7",{"_index":5127,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x6b63;&#x65e0;&#x7a77",{"_index":6092,"title":{},"body":{"standards/data/math.html#特殊函数":{}}}],["x662f;&#x5426;&#x7a7a;&#x683c",{"_index":5128,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x7b26;&#x53f7;&#x5b57;&#x7b26",{"_index":5122,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5426;&#x8fd0;&#x884c;&#x4e86;&#x8f83;&#x957f;&#x65f6;&#x95f4;&#x3002;&#x8be5",{"_index":6551,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x662f;&#x5426;&#x963f;&#x62c9;&#x4f2f;&#x6570;&#x5b57;&#x5b57;&#x7b26;&#xff0c;&#x5373",{"_index":5118,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x662f;&#x5728;&#x8c03;&#x5ea6;&#x5668;&#x521d;&#x59cb;&#x5316;&#x9636;&#x6bb5;&#x521b;&#x5efa;&#x7684;&#xff0c;&#x867d;&#x7136;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":6513,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x662f;&#x5982;&#x4f55;&#x505a;&#x5230;&#x8868;&#x793a;&#x672c;&#x5730;&#x65f6;&#x533a;&#x7684;&#xff1f",{"_index":3429,"title":{},"body":{"standards/time.html#时区":{}}}],["x662f;&#x5bf9",{"_index":7437,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x662f;&#x5bf9;&#x5e94;&#x7684;&#x5c01;&#x88c5;&#x51fd;&#x6570;&#x3002",{"_index":7609,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x662f;&#x5bf9;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x4e00;&#x4e2a;&#x8fde;&#x7eed;&#x7247;&#x6bb5;&#x7684;&#x5f15;&#x7528;&#xff0c;&#x6240;&#x4ee5;&#x5207;&#x7247;&#x662f;&#x4e00;&#x4e2a;&#x5f15;&#x7528;&#x7c7b;&#x578b",{"_index":1868,"title":{},"body":{"basic/slice.html#slice":{}}}],["x662f;&#x5bf9;&#x8f93;&#x5165;&#x8f93;&#x51fa;&#x8bbe;&#x5907;&#x7684;&#x62bd;&#x8c61;&#x3002",{"_index":6781,"title":{},"body":{"standards/io/io.html#io":{}}}],["x662f;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x7684;&#x3002",{"_index":3866,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x662f;&#x5f15;&#x7528;&#x7c7b;&#x578b",{"_index":1395,"title":{},"body":{"basic/map.html#map":{}}}],["x662f;&#x5fc5;&#x987b;&#x7684;&#xff0c;&#x5982;&#x679c;&#x6ca1;&#x6709;&#xff0c;&#x90a3;&#x5c31;&#x662f;&#x5207;&#x7247;&#x4e86;&#x3002",{"_index":782,"title":{},"body":{"basic/array.html#数组":{}}}],["x662f;&#x6307",{"_index":5439,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x662f;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x8fd8;&#x662f;&#x975e;&#x6307;&#x9488;&#x7c7b;&#x578b;&#xff0c;&#x90fd;&#x662f;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x6307;&#x9488;/&#x975e;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x8fdb;&#x884c;&#x8c03;&#x7528;&#x7684;&#xff0c;&#x7f16;&#x8bd1;&#x5668;&#x4f1a;&#x5e2e;&#x4f60;&#x505a;&#x7c7b;&#x578b;&#x8f6c;&#x6362",{"_index":1242,"title":{},"body":{"basic/oop.html#方法":{}}}],["x662f;&#x6309;&#x7167",{"_index":8841,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x662f;&#x6570;&#x7ec4;&#x7684;&#x957f;&#x5ea6;&#x5e76;&#x4e14;&#x4e5f;&#x662f;&#x5207;&#x7247;&#x7684;&#x521d;&#x59cb;&#x957f;&#x5ea6",{"_index":1891,"title":{},"body":{"basic/slice.html#slice":{}}}],["x662f;&#x65ad;&#x8a00;&#x7684;&#x7c7b;&#x578b;&#x3002",{"_index":307,"title":{},"body":{"index.html#类型断言":{}}}],["x662f;&#x65e0;&#x5e8f;&#x7684;&#xff0c;&#x6bcf;&#x6b21;&#x6253;&#x5370;&#x51fa;&#x6765;&#x7684",{"_index":1416,"title":{},"body":{"basic/map.html#map":{}}}],["x662f;&#x6700;&#x5c11;&#x8bfb;&#x53d6",{"_index":7096,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x662f;&#x6ca1;&#x6709;&#x53c2;&#x6570;&#x4e5f;&#x6ca1;&#x6709;&#x8fd4;&#x56de;&#x503c;&#x7684;&#x51fd;&#x6570;&#x7c7b;&#x578b",{"_index":3165,"title":{},"body":{"basic/function.html#闭包":{}}}],["x662f;&#x6d3b;&#x8dc3;&#x5bf9;&#x8c61;&#x603b;&#x91cf;&#x3002",{"_index":547,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x662f;&#x7531;&#x8c03;&#x5ea6;&#x5668;&#x6309;&#x9700;&#x521b;&#x5efa;&#x7684",{"_index":6506,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x662f;&#x7a7a;&#x767d;&#x6807;&#x8bc6;&#x7b26;&#xff0c;&#x4e0d;&#x80fd;&#x88ab;&#x8bbf;&#x95ee;&#x3002",{"_index":2178,"title":{},"body":{"basic/package.html#点操作":{}}}],["x662f;&#x7a7a;&#x7684;&#x8bdd;&#xff0c;&#x5219;&#x4f7f;&#x7528",{"_index":8928,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x662f;&#x7a7a;&#x7684;&#xff0c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x5c06;&#x963b;&#x585e;&#x76f4;&#x5230;&#x6709;&#x53e6;&#x4e00;&#x4e2a",{"_index":2948,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x662f;&#x7ba1;&#x9053;&#x7684;&#x5199;&#x5165;&#x7aef;&#x3002;&#x5b83;&#x5b9e;&#x73b0;&#x4e86",{"_index":7019,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x662f;&#x7ba1;&#x9053;&#x7684;&#x8bfb;&#x53d6;&#x7aef;&#x3002;&#x5b83;&#x5b9e;&#x73b0;&#x4e86",{"_index":7013,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x662f;&#x82f1;&#x6587;&#x201c;american",{"_index":327,"title":{},"body":{"index.html#编码":{}}}],["x662f;&#x88ab",{"_index":3551,"title":{},"body":{"standards/time.html#定时器":{}}}],["x662f;&#x88ab;&#x62a2;&#x5360;&#x8c03;&#x5ea6;&#x7684;&#x3002",{"_index":6527,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x662f;&#x89e3;&#x6790;&#x6240;&#x6709;&#x7684;&#x5305;&#x5f15;&#x7528;&#xff0c;&#x7136;&#x540e;&#x5728",{"_index":973,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x662f;&#x8be5;&#x8282;&#x70b9;&#x5728;&#x5806;&#x4e2d;&#x7684;&#x4f4d;&#x7f6",{"_index":5315,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x662f;&#x91cd;&#x7f6e;&#x4e0a;&#x4e00;&#x6b21;&#x7684",{"_index":6959,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x662f;&#x9488;&#x5bf9;&#x5185;&#x5b58;&#x7684;&#xff0c;&#x5e76;&#x4e0d;&#x4f1a;&#x81ea;&#x52a8;&#x56de;&#x6536;&#x8d44;&#x6e90;&#xff0c;&#x5982;&#x679c;&#x4e0d;&#x5173;&#x95ed;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#xff0c",{"_index":7439,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x662f;&#x9519;&#x8bef;&#x7684;&#xff0c",{"_index":4468,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x662f;&#x975e;&#x7ebf;&#x7a0b;&#x5b89;&#x5168;&#xff0c;&#x6027;&#x80fd;&#x4e0a;&#x548c",{"_index":3763,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x662f;&#xff1a",{"_index":7579,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x662f;handlerfunc&#x7c7b;&#x578b;&#xff0c;&#x800c;&#x4ed6;&#x7684",{"_index":9043,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x663e;&#x5f0f;&#x5730;&#x5173;&#x95ed;&#x4fe1;&#x9053",{"_index":2922,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x663e;&#x7136;&#xff0c;&#x5f53",{"_index":3799,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x663e;&#x793a;&#x5f53;&#x524d;&#x65e5;&#x671f;&#xff08;&#x5f53;&#x524d;&#x65f6;&#x533a;&#xff09",{"_index":2498,"title":{},"body":{"standards/log.html#Logger":{}}}],["x663e;&#x793a;&#x5f53;&#x524d;&#x65f6;&#x95f4;&#xff08;&#x5f53;&#x524d;&#x65f6;&#x533a;&#xff09",{"_index":2499,"title":{},"body":{"standards/log.html#Logger":{}}}],["x663e;&#x793a;&#x5f53;&#x524d;&#x65f6;&#x95f4;&#xff08;&#x5fae;&#x79d2;&#xff09",{"_index":2500,"title":{},"body":{"standards/log.html#Logger":{}}}],["x663e;&#x793a;&#x6587;&#x4ef6;&#x65f6;&#xff0c;&#x4f1a;&#x5728;&#x5176;&#x4ed6;&#x7528;&#x6237;&#x6267;&#x884c;&#x6743;&#x9650;&#x5b57;&#x6bb5;&#x4e0a;&#x770b;&#x5230;&#x5b57",{"_index":7572,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x663e;&#x793a;&#x683c;&#x5f0f;&#x5316;&#x524d;&#x540e;&#x7684;diff&#x800c;&#x4e0d;&#x662f;&#x5199;&#x5165;&#x6587;&#x4ef6;&#xff0c;&#x9ed8;&#x8ba4;&#x662f",{"_index":2797,"title":{},"body":{"commands/build.html#工具":{}}}],["x663e;&#x793a;&#x90a3;&#x4e9b;&#x9700;&#x8981;&#x683c;&#x5f0f;&#x5316;&#x7684;&#x6587;&#x4ef6",{"_index":2792,"title":{},"body":{"commands/build.html#工具":{}}}],["x666e;&#x901a",{"_index":1058,"title":{},"body":{"basic/flow.html#switch":{}}}],["x666e;&#x901a;&#x5360;&#x4f4d;&#x7b26",{"_index":4659,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x666e;&#x901a;&#x6316;&#x6398;&#x673a;&#x5458;&#x5de5",{"_index":2372,"title":{},"body":{"basic/interface.html#接口":{}}}],["x666e;&#x901a;&#x6587;&#x4ef6;&#x8fd4;&#x56de;&#x503c;&#x8868;&#x793a;&#x5176;&#x5927;&#x5c0f;&#xff1b;&#x5176;&#x4ed6;&#x6587;&#x4ef6;&#x7684;&#x8fd4;&#x56de;&#x503c;&#x542b;&#x4e49;&#x5404;&#x7cfb;&#x7edf;&#x4e0d;&#x540c",{"_index":7508,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x666e;&#x901a;&#x8f93;&#x51fa;&#xff0c;&#x4e0d;&#x5e26;&#x6362;&#x884c;&#x7b26",{"_index":4639,"title":{},"body":{"standards/io/fmt.html#Print":{}}}],["x6682;&#x505c;&#x67d0;&#x4e2a;&#x8fdb;&#x7a0b;&#xff08",{"_index":3412,"title":{},"body":{"standards/time.html#time":{}}}],["x6682;&#x505c;&#xff0c;&#x91ca;&#x653e;&#x7ebf;&#x7a0b;&#x53bb;&#x6267;&#x884c;&#x5176;&#x4ed6;&#x4efb;&#x52a1;&#x3002",{"_index":6393,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x66f4;&#x50cf;&#x662f;&#x591a;&#x7ebf;&#x7a0b;&#x548c;&#x534f;&#x7a0b;&#x7684;&#x7ed3;&#x5408;&#x4f53;&#x3002",{"_index":6198,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x66f4;&#x5177;&#x4f53;&#x5730;&#x8bf4;&#xff0c",{"_index":8292,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x66f4;&#x591a",{"_index":2140,"title":{},"body":{"basic/package.html#包":{}}}],["x66f4;&#x591a;http.server&#x7684;&#x5b57;&#x6bb5;&#x53ef;&#x4ee5;&#x6839;&#x636e;&#x60c5;&#x51b5;&#x521d;&#x59cb;&#x5316",{"_index":9061,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x66f4;&#x597d;&#x7684;&#x505a;&#x6cd5;&#x662f;&#xff0c;&#x628a;&#x9488;&#x5bf9;&#x540c;&#x4e00;&#x4e2a;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x7684;&#x8fd9;&#x51e0;&#x79cd;&#x64cd;&#x4f5c;&#x90fd;&#x96c6;&#x4e2d;&#x8d77;&#x6765;&#xff0c;&#x7136;&#x540e;&#x7edf;&#x4e00;&#x5730;&#x7f16;&#x5199;&#x68c0;&#x67e5;&#x4ee3;&#x7801;&#x3002;&#x9664;&#x6b64;&#x4e4b;&#x5916;&#xff0c;&#x628a;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x5c01;&#x88c5;&#x5728;&#x4e00",{"_index":8348,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x66f4;&#x5bb9;&#x6613;&#x7406;&#x89e3;&#x548c;&#x8bb0;&#x5fc6;&#xff1b",{"_index":3514,"title":{},"body":{"standards/time.html#Time":{}}}],["x66f4;&#x6539;&#x6587;&#x4ef6;&#x540d",{"_index":7605,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x66f4;&#x65b0",{"_index":5331,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x66f4;&#x65b0;&#x4fee;&#x6539;&#x4e86;&#x4f18;&#x5148;&#x7ea7;&#x548c;&#x503c;&#x7684",{"_index":5320,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x66f4;&#x65b0;&#x5168;&#x90e8;&#x5df2;&#x7ecf;&#x662f;&#x6700;&#x65b0;&#x7684;&#x5305;&#x7684;&#xff0c;&#x4f46;&#x662f;&#x5bf9;&#x6807;&#x51c6;&#x5305;&#x4e0d;&#x9002;&#x7528",{"_index":2740,"title":{},"body":{"commands/build.html#工具":{}}}],["x66f4;&#x65b0;&#x5230",{"_index":8793,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x66f4;&#x6613;&#x7528;&#x3001;&#x66f4;&#x9ad8;&#x6548;&#x3001;&#x66f4;&#x8f7b;&#x4fbf;&#x3002;&#x6211;&#x4eec;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x7684",{"_index":6204,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x66ff;&#x6362;&#x4e3a",{"_index":5719,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x66ff;&#x6362;&#x4e3a;&#x5b57;&#x7b26;&#x4e32",{"_index":5947,"title":{},"body":{"standards/text/strings.html#字符串替换":{}}}],["x6700;&#x4e45;&#x7684;&#x64cd;&#x4f5c;&#xff0c;&#x4f8b;&#x5982;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x3001;&#x7ba1;&#x9053;&#x53d1;&#x9001;&#x548c;&#x63a5;&#x6536;&#xff0c;&#x8fd8;&#x6709;&#x83b7;&#x53d6;&#x9501;&#x7b49;&#x3002",{"_index":4139,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x6700;&#x5339;&#x914d;&#x7684;&#x6a21;&#x5f0f;&#x7684;&#x5904;&#x7406;&#x5668;&#x8fdb;&#x884c;&#x540e;&#x7eed;&#x64cd;&#x4f5c;&#x3002",{"_index":8942,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6700;&#x540e;&#x4e00;&#x4e2a;&#x4f8b;&#x5b50;&#x5728;&#x6587;&#x4ef6;&#x4e2d;&#x4f1a;&#x4ea7;&#x751f;&#x201c;&#x7a7a;&#x6d1e;&#x201d;&#x3002",{"_index":7473,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6700;&#x540e;&#x4e00;&#x4e2a;&#x5143;&#x7d20",{"_index":5252,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x6700;&#x540e;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x7684;&#x4e0b;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#xff08;&#x5373;&#x63d2;&#x5165;&#x524d;&#xff0c",{"_index":5284,"title":{},"body":{"standards/data/container.html#环":{}}}],["x6700;&#x540e;&#x4e00;&#x4e2a;&#x8fd0;&#x884c;&#x5b8c;&#x6bd5;&#xff0c;&#x6240;&#x4ee5;&#x8fd8;&#x9700;&#x8981;&#x52a0;&#x4e00;&#x884c;&#x4ee3;&#x7801;&#x3002;&#x4e0d;&#x8fc7;&#x65e2;&#x7136;&#x6709;&#x4e86",{"_index":6391,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6700;&#x540e;&#xff0c",{"_index":8392,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x6700;&#x591a",{"_index":4504,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x6700;&#x5927",{"_index":4193,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6700;&#x597d;&#x4f20;&#x5165",{"_index":693,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x6700;&#x7b80;&#x5355;&#x3001;&#x6709;&#x6548;&#x7684;&#x65b9;&#x5f0f;&#x5c31;&#x662f;&#x8ba9;&#x6bcf;&#x4e00;&#x4e2a;&#x4e92;&#x65a5;&#x9501;&#x90fd;&#x53ea;&#x4fdd;&#x62a4;&#x4e00;&#x4e2a;&#x4e34;&#x754c;&#x533a;&#x6216;&#x4e00;&#x7ec4;&#x76f8;&#x5173;&#x4e34;&#x754c;&#x533a",{"_index":7889,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6700;&#x7b80;&#x5355;&#x7684;&#x65b9;&#x6cd5;&#x5c31;&#x662f;&#x8c03;&#x7528",{"_index":2346,"title":{},"body":{"basic/interface.html#接口":{}}}],["x6700;&#x7ec8;&#x90fd;&#x662f;&#x901a;&#x8fc7",{"_index":6980,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x6700;&#x91cd;&#x8981;&#x7684;&#x4f4d;&#x3002;&#x53e6;&#x5916",{"_index":7391,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6700;&#x91cd;&#x8981;&#x7684;&#x662f;&#x4e24;&#x4e2a;&#x63a5;&#x53e3;&#xff1a",{"_index":6783,"title":{},"body":{"standards/io/io.html#io":{}}}],["x6708",{"_index":3493,"title":{},"body":{"standards/time.html#Time":{}}}],["x6709;&#x4e00;&#x4e2a",{"_index":3872,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6709;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x662f",{"_index":1266,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x6709;&#x4e09;&#x79cd;&#x7c7b;&#x578b",{"_index":965,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6709;&#x4e24;&#x4e2a;&#x6bd4;&#x8f83;&#x6df7;&#x6dc6;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x5c31;&#x662f;&#x957f;&#x5ea6;&#x548c;&#x5bb9;&#x91cf;&#x3002;&#x8fd9;&#x4e2a;&#x957f;&#x5ea6;&#x8ddf;&#x6570;&#x7ec4;&#x7684;&#x957f;&#x5ea6;&#x662f;&#x4e00;&#x4e2a;&#x6982;&#x5ff5;&#xff0c;&#x5373;&#x5728;&#x5185;&#x5b58;&#x4e2d;&#x8fdb;&#x884c;&#x4e86;&#x521d;&#x59cb;&#x5316;&#x5b9e;&#x9645;&#x5b58;&#x5728;&#x7684;&#x5143;&#x7d20;&#x7684;&#x4e2a;&#x6570;&#x3002;&#x4f55;&#x8c13;&#x5bb9;&#x91cf;&#xff1f",{"_index":1943,"title":{},"body":{"basic/slice.html#长度和容量":{}}}],["x6709;&#x4e24;&#x4e2a;&#xff0c;&#x53f3;&#x8fb9;&#x7684;&#x8fed;&#x4ee3;&#x53d8;&#x91cf;&#x4ee3;&#x8868;&#x5f53;&#x6b21;&#x8fed;&#x4ee3;&#x5bf9;&#x5e94;&#x7684;&#x67d0;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x800c;&#x5de6;&#x8fb9;&#x7684;&#x8fed;&#x4ee3;&#x53d8;&#x91cf;&#x5219;&#x4ee3;&#x8868;&#x8be5;&#x5143;&#x7d20;&#x503c;&#x5728;&#x5207;&#x7247;&#x4e2d;&#x7684;&#x7d22;&#x5f15;&#x503c;&#x3002",{"_index":1106,"title":{},"body":{"basic/flow.html#for":{}}}],["x6709;&#x4e24;&#x79cd;&#x60c5;&#x51b5;&#xff1a",{"_index":2731,"title":{},"body":{"commands/build.html#工具":{}}}],["x6709;&#x4e24;&#x79cd;&#x7c7b;&#x578b;&#xff1a",{"_index":2603,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x6709;&#x4e9b;&#x60c5;&#x51b5;&#x4e0b;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5305;&#x91cd;&#x547d;&#x540d;&#xff1a",{"_index":2173,"title":{},"body":{"basic/package.html#点操作":{}}}],["x6709;&#x4ec0;&#x4e48;&#x4e0d;&#x540c",{"_index":6223,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6709;&#x5173;&#x4e86;&#x3002",{"_index":9003,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6709;&#x5185;&#x90e8;&#x7f13;&#x5b58;&#xff0c;&#x5373;&#x5199;&#x5165;&#x5fc5;&#x987b;&#x5728;&#x8bfb;&#x53d6;&#x5b8c;&#x6210;&#x524d;&#x5b8c;&#x6210;&#x3002;&#x4efb;&#x4f55;&#x5728;&#x5199;&#x5165;&#x65f6;&#x9047;&#x5230;&#x7684;&#x9519;&#x8bef;&#x90fd;&#x5c06;&#x4f5c;&#x4e3a;&#x8bfb;&#x53d6;&#x9519;&#x8bef;&#x8fd4;&#x56de;&#x3002",{"_index":7133,"title":{},"body":{"standards/io/io.html#TeeReader-函数":{}}}],["x6709;&#x53ef;&#x80fd;&#x662f",{"_index":6825,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x6709;&#x540d;&#x8fd4;&#x56de;&#x503c",{"_index":3121,"title":{},"body":{"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{}}}],["x6709;&#x591a;&#x5927;&#xff0c;&#x90fd;&#x53ea;&#x4f1a;&#x6709;&#x4e00;&#x4e2a;&#x526f;&#x672c;&#x3002",{"_index":1399,"title":{},"body":{"basic/map.html#map":{}}}],["x6709;&#x5b57;&#x7b26;&#x4e32",{"_index":5950,"title":{},"body":{"standards/text/strings.html#字符串替换":{}}}],["x6709;&#x5c0f;&#x6570;&#x70b9;&#x800c;&#x65e0;&#x6307;&#x6570;&#xff0c;&#x4f8b;&#x5982",{"_index":4692,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x6709;&#x5c0f;&#x6570;&#x90e8;&#x5206;&#xff0c;&#x65e0;&#x6307;&#x6570;&#x90e8;&#x5206",{"_index":4738,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x6709;&#x65f6;&#x5019;&#x6211;&#x4eec;&#x9700;&#x8981;&#x4f20;&#x9012;&#x4e00;&#x4e2a",{"_index":4785,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x6709;&#x65f6;&#x5019;&#xff0c;&#x6211;&#x4eec;&#x5e0c;&#x671b;&#x901a;&#x8fc7;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#xff0c;&#x80fd;&#x83b7;&#x53d6;&#x5176;&#x6240;&#x6307;&#x5411;&#x7684;&#x8def;&#x5f84;&#x540d;&#x3002;&#x7cfb;&#x7edf;&#x8c03;&#x7528",{"_index":7619,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6709;&#x65f6;&#x95f4;&#x4e0a;&#x7684;&#x91cd;&#x53e0;&#xff08;&#x5b8f;&#x89c2;&#x4e0a;&#x662f;&#x540c;&#x65f6;&#x7684;&#xff0c;&#x5fae;&#x89c2;&#x4ecd;&#x662f;&#x987a;&#x5e8f;&#x6267;&#x884c;&#xff09;,&#x8fd9;&#x6837;&#x770b;&#x8d77;&#x6765;&#x591a;&#x4e2a;&#x4efb;&#x52a1;&#x50cf;&#x662f;&#x540c;&#x65f6;&#x6267;&#x884c;&#xff0c;&#x8fd9;&#x5c31;&#x662f",{"_index":6171,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x6709;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x5206;&#x5272",{"_index":5700,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x6709;&#x66f4;&#x516c;&#x5e73;&#x7684;&#x8fd0;&#x884c;&#x673a;&#x4f1a;&#x3002",{"_index":6314,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6709;&#x6ca1;&#x6709;&#x6ce8;&#x610f;&#x5230;&#xff0c",{"_index":1552,"title":{},"body":{"basic/json.html#序列化":{}}}],["x6709;&#x7528",{"_index":2987,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6709;&#x7740",{"_index":1272,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x6709;&#x7b26;&#x53f7;&#x6574;&#x578b;&#x8f6c;&#x5b57;&#x7b26;&#x4e32",{"_index":4957,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x6709;&#x84dd;&#x7fd4;&#x6280;&#x6821;&#x8bc1;&#x7684;&#x5458;&#x5de5",{"_index":2373,"title":{},"body":{"basic/interface.html#接口":{}}}],["x6709;&#x8fd4;&#x56de;&#x503c;&#x7684;&#x51fd;&#x6570;&#x5176;&#x5b9e;&#x53ef;&#x4ee5;&#x4e0d;&#x52a0;&#x62ec;&#x53f7;&#xff0c;&#x4f46;&#x662f;&#x52a0;&#x62ec;&#x53f7;&#x7684;&#x8bdd;&#xff0c;&#x8bed;&#x4e49;&#x6e05;&#x6670",{"_index":271,"title":{},"body":{"index.html#类型转换":{}}}],["x670d;&#x52a1;&#x5668;&#x3002;&#x6211;&#x4eec;&#x901a;&#x8fc7",{"_index":8971,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x670d;&#x52a1;&#x5668;&#x4e2d;&#x7b2c;&#x4e8c;&#x884c;&#x4ee3;&#x7801;&#xff1a",{"_index":9009,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x670d;&#x52a1;&#x5668;&#x548c",{"_index":8725,"title":{},"body":{"standards/net/http.html#http":{}}}],["x670d;&#x52a1;&#x5c31;&#x4e0d;&#x518d;&#x662f",{"_index":9087,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x670d;&#x52a1;&#x6267;&#x884c;&#x5b8c;&#x6210;&#x3002",{"_index":9051,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x670d;&#x52a1;&#x63d0;&#x4f9b;&#x53ef;&#x4ee5;&#x76f8;&#x4e92;&#x4ea4;&#x53c9;&#x5f15;&#x7528;&#x7684",{"_index":2814,"title":{},"body":{"commands/build.html#工具":{}}}],["x670d;&#x52a1;&#x6574;&#x4e2a;&#x8fc7;&#x7a0b;&#x5927;&#x6982;&#x662f;&#x8fd9;&#x6837;&#xff1a",{"_index":9053,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x670d;&#x52a1;&#x662f;&#x901a;&#x8fc7;&#x5b9e;&#x73b0",{"_index":8967,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x670d;&#x52a1;&#x7aef",{"_index":8734,"title":{},"body":{"standards/net/http.html#http":{}}}],["x670d;&#x52a1;&#xff1a",{"_index":2819,"title":{},"body":{"commands/build.html#工具":{}}}],["x672a;&#x547d;&#x540d;&#x7c7b;&#x578b",{"_index":286,"title":{"index.html#未命名类型":{}},"body":{"index.html#未命名类型":{}}}],["x672a;&#x5bfc;&#x51fa;&#x7684;&#x6210;&#x5458",{"_index":2043,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x672a;&#x6392;&#x5e8f;&#x7684;&#x5207;&#x7247;&#x6570;&#x636",{"_index":9262,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x672c;&#x5730;&#x961f;&#x5217;&#x6216;&#x8005;&#x5168;&#x5c40;&#x961f;&#x5217;&#xff0c;&#x7b49;&#x5f85;&#x5de5;&#x4f5c;&#x7ebf;&#x7a0b;&#x8c03;&#x5ea6;&#x3002",{"_index":6473,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x672c;&#x6587;&#x6863;&#x4f7f;&#x7528",{"_index":2575,"title":{},"body":{"theme/theme-usage.html#使用文档主题":{}}}],["x672c;&#x65b9;&#x6cd5;&#x5c06;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x5185;&#x5efa;&#x7684",{"_index":8955,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x672c;&#x8d28;&#x4e0a;&#x53ef;&#x4ee5;&#x7406;&#x89e3;&#x4e3a;&#x9996;&#x5148;&#x7b2c;&#x4e00;&#x6b65;&#x662f;&#x901a;&#x8fc7;&#x6e90;&#x7801;&#x5de5;&#x5177",{"_index":2724,"title":{},"body":{"commands/build.html#工具":{}}}],["x672c;&#x8eab;&#x867d;&#x7136;&#x4e5f;&#x7528;&#x5230;&#x4e86;&#x9501;&#xff0c;&#x4f46;&#x662f;&#xff0c;&#x5b83;&#x5176;&#x5b9e;&#x5728;&#x5c3d;&#x53ef;&#x80fd;&#x5730;&#x907f;&#x514d;&#x4f7f;&#x7528;&#x9501;&#x3002",{"_index":8337,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x673a;&#x5236",{"_index":959,"title":{},"body":{"basic/env_config.html#Go-Module":{},"basic/map.html#map":{}}}],["x673a;&#x5236;&#xff09;&#x3002;&#x968f;&#x540e;&#xff0c;&#x7a0b;&#x5e8f;&#x5d29;&#x6e83",{"_index":636,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x673a;&#x5236;&#xff0c;&#x4e0d;&#x5728",{"_index":970,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x673a;&#x5236;&#xff0c;&#x800c;&#x662f;&#x4f7f;&#x7528",{"_index":968,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6743;&#x5a01;&#x673a;&#x6784;&#x7b7e;&#x53d1;&#x7684;&#xff0c",{"_index":8931,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6743;&#x9650",{"_index":7375,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6743;&#x9650;&#x4f4d;&#xff08;&#x7528;&#x4e8e;&#x901a;&#x8fc7",{"_index":7385,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6743;&#x9650;&#xff08;&#x6240;&#x6709;&#x4eba;&#x90fd;&#x53ef;&#x8bfb;&#x3001;&#x5199;&#x3001;&#x8fd0;&#x884c;&#xff09;&#x3002",{"_index":7393,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6743;&#x9650;&#xff09;&#xff0c;&#x4e14;&#x5bf9;&#x6587;&#x4ef6;&#x62e5;&#x6709;&#x5199;&#x6743;&#x9650;&#x3002",{"_index":7487,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["x674e;&#x56db",{"_index":5329,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x675c;&#x7edd;&#x5bf9;&#x540c;&#x4e00;&#x4e2a",{"_index":8111,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x675f;&#x5f53;&#x524d;&#x7684",{"_index":3037,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf",{"_index":7890,"title":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x5728;&#x8fd9;&#x91cc;&#x7684;&#x6700;&#x5927;&#x4f18;&#x52bf;&#x5c31;&#x662f;&#x5728;&#x6548;&#x7387;&#x65b9;&#x9762;&#x7684;&#x63d0;&#x5347;&#x3002;&#x5f53;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#x4e0d;&#x6ee1;&#x8db3;&#x6761;&#x4ef6;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x60f3;&#x64cd;&#x4f5c;&#x5b83;&#x7684;&#x7ebf;&#x7a0b;&#x518d;&#x4e5f;&#x4e0d;&#x7528;&#x5faa;&#x73af;&#x5f80;&#x590d;&#x5730;&#x505a;&#x68c0;&#x67e5;&#x4e86;&#xff0c",{"_index":7894,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x600e;&#x6837;&#x4e0e;&#x4e92;&#x65a5;&#x9501;&#x914d;&#x5408;&#x4f7f;&#x7528",{"_index":7896,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x63d0;&#x4f9b;&#x7684;&#x65b9;&#x6cd5;&#x6709;&#x4e09;&#x4e2a;&#xff1a;&#x7b49;&#x5f85;&#x901a;&#x77e5;&#xff08;wait&#xff09;&#x3001;&#x5355;&#x53d1;&#x901a;&#x77e5;&#xff08;signal&#xff09;&#x548c;&#x5e7f;&#x64ad;&#x901a;&#x77e5;&#xff08;broadcast&#xff09;&#x3002;&#x6211;&#x4eec;&#x5728;&#x5229;&#x7528;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7b49;&#x5f85;&#x901a;&#x77e5;&#x7684;&#x65f6;&#x5019;&#xff0c",{"_index":7898,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x662f;&#x57fa;&#x4e8e;&#x4e92;&#x65a5;&#x9501;&#x7684;&#xff0c;&#x5b83;&#x5fc5;&#x987b;&#x6709;&#x4e92;&#x65a5;&#x9501;&#x7684;&#x652f;&#x6491;&#x624d;&#x80fd;&#x53d1;&#x6325;&#x4f5c;&#x7528;&#x3002;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x5e76;&#x4e0d;&#x662f;&#x88ab;&#x7528;&#x6765;&#x4fdd;&#x62a4;&#x4e34;&#x754c;&#x533a;&#x548c;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#xff0c;&#x5b83;&#x662f;&#x7528;&#x4e8e;&#x534f;&#x8c03;&#x60f3;&#x8981;&#x8bbf;&#x95ee;&#x5171;&#x4eab",{"_index":7891,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684",{"_index":7979,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684;&#x521d;&#x59cb;&#x5316;&#x79bb;&#x4e0d;&#x5f00;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x5e76;&#x4e14;&#x5b83;&#x7684;&#x65b9;&#x6cd5;&#x6709;&#x7684;&#x4e5f;&#x662f;&#x57fa;&#x4e8e;&#x4e92;&#x65a5;&#x9501;&#x7684;&#x3002",{"_index":7897,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6761;&#x76ee;&#x4e2d;&#xff0c;&#x4f1a;&#x5c06;&#x76ee;&#x5f55;&#x6807;&#x8bb0;&#x4e3a;&#x4e00;&#x79cd;&#x4e0d;&#x540c;&#x7684;&#x6587;&#x4ef6;&#x7c7b;&#x578b;&#x3002",{"_index":7585,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6765",{"_index":7826,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6765;&#x4e00;&#x6b21;&#x8bfb;&#x53d6;&#x6216;&#x5199;&#x5165;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#xff1a",{"_index":6943,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x6765;&#x4ee3;&#x66ff;&#x3002",{"_index":5445,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x6765;&#x4ee3;&#x66ff;&#x8fd9;&#x4e2a;&#x65b9;&#x6cd5;&#x3002",{"_index":5476,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x6765;&#x4fdd;&#x5b58;&#x548c;&#x7ba1;&#x7406;&#x5185;&#x5bb9;&#x3002",{"_index":3761,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6765;&#x4fdd;&#x8bc1;&#x6700;&#x591a;&#x53ea;&#x6709;&#x4e00;&#x4e2a",{"_index":7817,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6765;&#x505c;&#x6b62;&#x5b9a;&#x65f6;&#x5668;&#x3002",{"_index":3578,"title":{},"body":{"standards/time.html#定时器":{}}}],["x6765;&#x5171;&#x4eab;&#x6570;&#x636",{"_index":7810,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x6765;&#x53cd;&#x5e94;&#x65b0;&#x7684;&#x5269;&#x4f59;&#x6570;&#x91cf;&#x3002",{"_index":7003,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["x6765;&#x56de;&#x5207;&#x6362;&#x4efb;&#x52a1;&#x6267;&#x884c;(&#x5728;&#x67d0;&#x6bb5;&#x5f88;&#x77ed;&#x65f6;&#x95f4;&#x5185;&#x6267;&#x884c;&#x7a0b;&#x5e8f",{"_index":6168,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x6765;&#x5904;&#x7406;&#x3002",{"_index":8786,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x6765;&#x5904;&#x7406;&#x63a5;&#x4e0b;&#x6765;&#x8fde;&#x63a5;&#x7684;&#x8bf7;&#x6c42",{"_index":8927,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6765;&#x5b9a;&#x4e49;&#x5bf9;&#x8c61;&#x7684;&#x4e00;&#x7ec4;&#x884c;&#x4e3a;&#x3002",{"_index":2325,"title":{},"body":{"basic/interface.html#接口":{}}}],["x6765;&#x5b9e;&#x73b0;&#x6210;&#x7ee9;&#x5347;&#x5e8f;&#x6392;&#x5e8f;&#xff1a",{"_index":9241,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x6765;&#x5b9e;&#x73b0;&#x7684",{"_index":4913,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x6765;&#x5b9e;&#x73b0;&#x7684;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x6211;&#x4eec;&#x5148;&#x6765;&#x770b;&#x770b",{"_index":5428,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x6765;&#x5e94;&#x7b54;&#x3002;&#x5b9e;&#x9645;&#x4e0a;&#x5c31;&#x662f;&#x5b9e;&#x73b0;&#x4e86;&#x5bf9;&#x67d0;&#x4e2a;&#x7aef;&#x53e3;&#x8fdb;&#x884c;&#x76d1;&#x542c;&#xff0c;&#x7136;&#x540e;&#x521b;&#x5efa;&#x76f8;&#x5e94;&#x7684;&#x8fde;&#x63a5;&#x3002",{"_index":8935,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6765;&#x6253;&#x65ad;&#x53e6;&#x4e00;&#x4e2a;&#x7684;&#x6267;&#x884c;&#xff0c;&#x4f46;&#x662f;&#x4e4b;&#x540e;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x4e00;&#x79cd;&#x65b9;&#x5f0f;&#x6765;&#x5b9e;&#x73b0;&#x8fd9;&#x4e2a;&#x76ee;&#x7684;&#xff0c;&#x901a;&#x8fc7",{"_index":6215,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6765;&#x63a7;&#x5236;&#x662f;&#x5426;&#x542f;&#x7528;&#xff0c",{"_index":964,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6765;&#x6784;&#x5efa;&#x9879;&#x76ee;&#xff0c",{"_index":976,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6765;&#x6784;&#x9020;&#x7684;&#xff0c;&#x5176;&#x4e2d",{"_index":4370,"title":{},"body":{"standards/data/big.html#big":{}}}],["x6765;&#x770b;&#x8fd9;&#x4e9b;&#x5b57;&#x6bb5;&#xff1a",{"_index":3558,"title":{},"body":{"standards/time.html#定时器":{}}}],["x6765;&#x7ec4;&#x7ec7;&#x3002",{"_index":200,"title":{},"body":{"index.html#package":{}}}],["x6765;&#x8868;&#x793a;&#x5730;&#x533a;&#x76f8;&#x5173;&#x7684;&#x65f6;&#x533a;&#xff0c;&#x4e00;&#x4e2a",{"_index":3421,"title":{},"body":{"standards/time.html#时区":{}}}],["x6765;&#x8868;&#x793a;&#x8fd9;&#x4e2a;&#x529f;&#x80fd;&#x7684;&#x5b57;&#x7b26;&#x96c6;&#x3002;&#x8fd9;&#x4e9b;&#x5b57;&#x7b26;&#x96c6;&#x90fd;&#x96c6;&#x4e2d;&#x5217;&#x8868;&#x5728",{"_index":5113,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x6765;&#x8981;&#x9ad8;&#x6548;&#x5f97;&#x591a;&#x3002",{"_index":8318,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x6765;&#x89e3;&#x6790;&#x65f6;&#x95f4;&#xff0c;&#x5e76;&#x7ed9;&#x7b2c;&#x4e09;&#x4e2a;&#x53c2;&#x6570;&#x4f20;&#x9012",{"_index":3507,"title":{},"body":{"standards/time.html#Time":{}}}],["x6765;&#x8bbe;&#x7f6e;&#x4e00;&#x4e2a;&#x6700;&#x5927",{"_index":4207,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6765;&#x8bbe;&#x7f6e;&#x8d85;&#x65f6;&#xff0c;&#x907f;&#x514d",{"_index":3015,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6765;&#x8bbe;&#x7f6e;&#xff0c;p",{"_index":6244,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6765;&#x8bbf;&#x95ee",{"_index":1408,"title":{},"body":{"basic/map.html#map":{}}}],["x6765;&#x8bbf;&#x95ee;&#x533f;&#x540d;&#x6210;&#x5458;&#x94fe;&#x4e2d;&#x5d4c;&#x5957;&#x7684",{"_index":2060,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x6765;&#x8bf4;&#x5c31;&#x662f",{"_index":679,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x6765;&#x8bf4;&#x90fd;&#x662f;&#x5b89;&#x5168;&#x7684;&#x3002;&#x4e00;&#x65e6;&#x7b49;&#x5f85;&#x7684",{"_index":7035,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x6765;&#x8fbe",{"_index":8968,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6765;&#x91ca;&#x653e;&#x76f8;&#x5173;&#x8d44;&#x6e90;&#x3002",{"_index":3588,"title":{},"body":{"standards/time.html#Ticker":{}}}],["x6784;&#x5efa",{"_index":8897,"title":{},"body":{"standards/net/http.html#client":{}}}],["x6784;&#x5efa;&#x5305",{"_index":2728,"title":{},"body":{"commands/build.html#工具":{}}}],["x6784;&#x6210;&#x5faa;&#x73af;&#xff0c;&#x8df3;&#x51fa;&#x5faa;&#x73af;&#x4f53;&#x7b49;&#x529f;&#x80fd;&#x3002;&#x4e0d;&#x63a8;&#x8350",{"_index":1113,"title":{},"body":{"basic/flow.html#for":{}}}],["x6784;&#x6210;&#x6267;&#x884c;&#x7ec4;&#x5408;&#x4f53;&#xff0c;&#x4f46;&#x4e24;&#x8005;&#x7684;&#x6570;&#x91cf;&#x5e76;&#x4e0d;&#x662f;&#x4e00;&#x4e00;&#x5bf9;&#x5e94;&#x7684;&#x3002;&#x4e00;&#x822c;&#x60c5;&#x51b5;&#x4e0b;&#xff0c",{"_index":6503,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6784;&#x9020;&#x51fa",{"_index":7686,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6784;&#x9020;&#x8def;&#x5f84;&#xff0c;&#x901a;&#x8fc7",{"_index":7685,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6784;&#x9020;revers",{"_index":2087,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x67b6;&#x6784;&#x3002",{"_index":414,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x67d0;&#x4e2a;&#x4e3b;&#x9898;&#x76f8;&#x5173;&#x7684;&#x6240;&#x6709;&#x5305",{"_index":2838,"title":{},"body":{"commands/build.html#工具":{}}}],["x67d0;&#x4e2a;&#x8fdb;&#x7a0b;&#x90fd;&#x4f1a;&#x6709;&#x5f53;&#x524d;&#x5de5;&#x4f5c;&#x76ee;&#x5f55;&#xff0c;&#x4e00;&#x822c;&#x7684;&#x76f8;&#x5bf9;&#x8def;&#x5f84;&#xff0c;&#x5c31;&#x662f;&#x9488;&#x5bf9;&#x8fdb;&#x7a0b",{"_index":5657,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x67e5;&#x627e;&#x5143;&#x7d20",{"_index":9317,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x67e5;&#x627e;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x503c;&#xff0c;&#x5931;&#x8d25;&#x65f6;&#x8fd4;&#x56de;&#x96f6;&#x503c",{"_index":2436,"title":{},"body":{"basic/var.html#赋值":{}}}],["x67e5;&#x627e;&#xff0c;&#x8fd4;&#x56de;&#x5e03;&#x5c14;&#x503c;&#x7c7b;&#x8868;&#x793a;&#x64cd;&#x4f5c;&#x662f;&#x5426;&#x6210;&#x529f",{"_index":2435,"title":{},"body":{"basic/var.html#赋值":{}}}],["x67e5;&#x770b",{"_index":2841,"title":{},"body":{"commands/build.html#工具":{}}}],["x67e5;&#x770b;&#x5305;&#x7684;&#x6570;&#x91cf;&#x3002",{"_index":2139,"title":{},"body":{"basic/package.html#包":{}}}],["x67e5;&#x770b;go&#x5f53;&#x524d;&#x7684;&#x7248;&#x672c",{"_index":2846,"title":{},"body":{"commands/build.html#工具":{}}}],["x67e5;&#x8be2;&#x5305",{"_index":2834,"title":{},"body":{"commands/build.html#工具":{}}}],["x67e5;&#x8be2;&#x5b57;&#x7b26;&#x4e32",{"_index":8796,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x6807;&#x51c6",{"_index":2504,"title":{},"body":{"standards/log.html#Logger":{}}}],["x6807;&#x51c6;&#x5e93",{"_index":9072,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x6807;&#x51c6;&#x5e93;&#x4e2d;&#x6709;&#x54ea;&#x4e9b;&#x7c7b;&#x578b;&#x5b9e;&#x73b0;&#x4e86",{"_index":6839,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["x6807;&#x51c6;&#x5e93;&#x5e76;&#x6ca1;&#x6709;&#x63d0;&#x4f9b;&#x5177;&#x4f53;&#x6570;&#x636e;&#x5e93;&#x7684;&#x5b9e;&#x73b0;&#xff0c;&#x9700;&#x8981;&#x7ed3;&#x5408;&#x7b2c;&#x4e09;&#x65b9;&#x7684;&#x9a71;&#x52a8;&#x6765;&#x4f7f;&#x7528;&#x8be5;&#x63a5;&#x53e3;&#x3002",{"_index":4429,"title":{},"body":{"standards/database/sql.html#sql":{}}}],["x6807;&#x51c6;&#x8f93;&#x5165;&#xff1b;1",{"_index":7327,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6807;&#x51c6;&#x8f93;&#x51fa;&#xff1b;2",{"_index":7328,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6807;&#x51c6;&#x9519;&#x8bef;&#x3002",{"_index":7329,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6807;&#x53f7;&#x3002",{"_index":7587,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6807;&#x8bb0",{"_index":4212,"title":{"basic/test.html#parallel-标记":{}},"body":{}}],["x6807;&#x8bb0;&#x503c;&#x51b3;&#x5b9a;&#x7684;&#x3002;&#x8981;&#x6ce8;&#x610f;&#xff0c;&#x540c;&#x4e00;&#x4e2a;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x7684;&#x591a;&#x6b21;&#x6267;&#x884c;&#x4e4b;&#x95f4;&#x4e00;&#x5b9a;&#x662f;&#x4e32;&#x884c;&#x7684;&#x3002",{"_index":4227,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x6807;&#x8bb0;&#x6e05;&#x626b;&#x7b97;&#x6cd5",{"_index":505,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x6807;&#x8bb0;&#xff0c",{"_index":4186,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6807;&#x8bc6;&#x7b26;&#x53ef;&#x4ee5;&#x8ba4;&#x4e3a;&#x662f",{"_index":1357,"title":{},"body":{"basic/constant.html#iota":{}}}],["x6807;&#x8bc6;&#x901a;&#x8fc7",{"_index":2494,"title":{},"body":{"standards/log.html#Logger":{}}}],["x6807;&#x8bc6;1",{"_index":2490,"title":{},"body":{"standards/log.html#Logger":{}}}],["x6807;&#x8bc6;2",{"_index":2491,"title":{},"body":{"standards/log.html#Logger":{}}}],["x6807;&#x8bc6;n",{"_index":2492,"title":{},"body":{"standards/log.html#Logger":{}}}],["x6811;&#x6839;&#xff08;&#x6216;&#x8005;&#x79f0;&#x4e0a;&#x4e0b;&#x6587;&#x6839;&#x8282;&#x70b9;&#xff09;&#x662f;&#x4e00;&#x4e2a;&#x5df2;&#x7ecf",{"_index":8210,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6837;&#x662f;&#x4e0d;&#x53ef;&#x6062;&#x590d;&#x7684;&#x3002",{"_index":7867,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6838;&#x5fc3;&#x7684;&#x60c5;&#x51b5;&#x4e0b",{"_index":8339,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x6838;&#x5fc3;&#xff0c;&#x4f46;&#x5b83;&#x5e76;&#x4e0d;&#x7b49;&#x540c",{"_index":4198,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6838;&#x5fc3;&#xff0c;&#x53ea;&#x662f",{"_index":4200,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6838;&#x6570",{"_index":6475,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6838;&#x6570;&#x76f8;&#x540c;&#xff0c;&#x53ef;&#x80fd;&#x66f4;&#x591a;&#x6216;&#x66f4;&#x5c11;&#x3002",{"_index":6505,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6839;&#x636e;&#x4e0d;&#x540c;&#x7684;&#x573a;&#x666f;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x80fd;&#x8981;&#x5bf9;&#x9519;&#x8bef;&#x505a;&#x4e9b;&#x7279;&#x6b8a;&#x5904;&#x7406;&#xff0c;&#x6bd4;&#x5982;&#x9519;&#x8bef;&#x91cd;&#x8bd5;&#x673a;&#x5236;&#xff0c;&#x6216;&#x8005;&#x6253;&#x5370;&#x9519;&#x8bef;&#x65e5;&#x5fd7;&#xff0c;&#x6216;&#x8005;&#x76f4;&#x63a5;&#x5ffd;&#x7565;&#x9519;&#x8bef;&#x3002",{"_index":625,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x6839;&#x636e;&#x5b9e;&#x9645;&#x60c5;&#x51b5;&#x91c7;&#x7528",{"_index":4739,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x6839;&#x636e;&#x60c5;&#x51b5;&#x9009;&#x62e9",{"_index":4693,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x6839;&#x636e;&#x6307;&#x5b9a;&#x7684",{"_index":8947,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6839;&#x636e;&#x683c;&#x5f0f;&#x5316;&#x6587;&#x672c;&#x8bfb;&#x53d6",{"_index":4652,"title":{},"body":{"standards/io/fmt.html#Scan":{}}}],["x6839;&#x7684;&#x5e42;&#x51fd;&#x6570",{"_index":6082,"title":{},"body":{"standards/data/math.html#幂次函数":{}}}],["x683c;&#x5f0f;&#x5316;&#x8f93;&#x51fa",{"_index":1549,"title":{},"body":{"basic/json.html#序列化":{}}}],["x683c;&#x5f0f;&#x5316;&#x8f93;&#x51fa;&#x7ed3;&#x6784",{"_index":4725,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x683c;&#x5f0f;&#x5982;&#x4e0b;&#xff1a",{"_index":7515,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x683c;&#x5f0f;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x4e00;&#x4e9b;&#x9884;&#x5b9a;&#x4e49;&#x7684;&#x683c;&#x5f0f;&#xff0c;&#x5982;&#xff1a",{"_index":3536,"title":{},"body":{"standards/time.html#Time":{}}}],["x68c0;&#x67e5",{"_index":7922,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["x68c0;&#x67e5;&#x662f;&#x5426;&#x662f;&#x6743;&#x9650;&#x7684;&#x95ee;&#x9898;&#x3002",{"_index":7556,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x68c0;&#x6d4b;&#x5728",{"_index":8811,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x6982;&#x8981;&#x4fe1;&#x606f;&#x8fdb;&#x884c;&#x91c7;&#x6837",{"_index":4256,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6982;&#x8981;&#x4fe1;&#x606f;&#x8fdb;&#x884c;&#x91c7;&#x6837;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x9700;&#x8981;&#x8c03;&#x7528;&#x8fd9;&#x4e2a;&#x4ee3;&#x7801;&#x5305;&#x4e2d",{"_index":4259,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6982;&#x8981;&#x6587;&#x4ef6;&#xff08;cpu",{"_index":4241,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6982;&#x8981;&#x6587;&#x4ef6;&#xff0c;&#x5176;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x6bb5;&#x72ec;&#x7acb;&#x7684;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x90fd;&#x8bb0;&#x5f55;&#x7740;&#xff0c;&#x5728;&#x8fdb;&#x884c;&#x67d0;&#x4e00;&#x6b21;&#x91c7;&#x6837;&#x7684;&#x90a3;&#x4e2a;&#x65f6;&#x523b;&#xff0c;cpu",{"_index":4246,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6a21;&#x5757;&#x4e2d;&#x5df2;&#x7ecf;&#x63d0;&#x4f9b;&#x4e86;&#x5982;&#x4e0b;&#x6807;&#x8bc6;&#xff0c;&#x591a;&#x4e2a;&#x6807;&#x8bc6;&#x901a;&#x8fc7",{"_index":2496,"title":{},"body":{"standards/log.html#Logger":{}}}],["x6a21;&#x5757;&#x4e2d;&#x65e5;&#x5fd7;&#x8f93;&#x51fa;&#x5206;&#x4e3a;&#x4e09;&#x7c7b;&#xff0c",{"_index":2507,"title":{},"body":{"standards/log.html#分类":{}}}],["x6a21;&#x5757;&#x7528;&#x4e8e;&#x5728;&#x7a0b;&#x5e8f;&#x4e2d;&#x8f93;&#x51fa;&#x65e5;&#x5fd7;&#x3002",{"_index":2477,"title":{},"body":{"standards/log.html#log":{}}}],["x6a21;&#x578b",{"_index":6470,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6a21;&#x578b;&#x3002",{"_index":2881,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6a21;&#x5f0f;&#x5b57;&#x7b26;&#x4e32",{"_index":5759,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x6a21;&#x5f0f;&#x7684",{"_index":8960,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6a21;&#x5f0f;&#xff0c;&#x5c31;&#x662f;&#x5728;&#x591a;&#x8fd4;&#x56de;&#x503c;&#x4e2d;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":1412,"title":{},"body":{"basic/map.html#map":{}}}],["x6a21;&#x62df",{"_index":8895,"title":{},"body":{"standards/net/http.html#client":{}}}],["x6a21;&#x62df;&#x8d85;&#x65f6;&#xff1a",{"_index":3571,"title":{},"body":{"standards/time.html#定时器":{}}}],["x6b21",{"_index":4505,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x6b21;&#x5b57;&#x7b26;&#x4e32",{"_index":5954,"title":{},"body":{"standards/text/strings.html#重复字符串":{}}}],["x6b21;&#x5e42",{"_index":6121,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x6b21;&#x7248;&#x672c;&#x53f7",{"_index":8855,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x6b21;&#x8c03;&#x7528;&#x4f1a;&#x8fd4;&#x56de;&#x4e0a;&#x4e00;&#x6b21;&#x8c03;&#x7528;&#x672a;&#x8bfb;&#x53d6;&#x7684;&#x5185;&#x5bb9;&#x7684;&#x4fe1;&#x606f;&#x3002",{"_index":7673,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6b63",{"_index":660,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x6b63;&#x5207;&#x51fd;&#x6570;&#xff0c;&#x53cd;&#x6b63;&#x5207;&#x51fd;&#x6570;&#xff0c;&#x53cc;&#x66f2;&#x6b63;&#x5207;&#xff0c;&#x53cd;&#x53cc;&#x66f2;&#x6b63;&#x5207",{"_index":6078,"title":{},"body":{"standards/data/math.html#三角函数":{}}}],["x6b63;&#x53f7;&#xff09;&#x3002;&#x6240;&#x4ee5;&#x8fd9;&#x91cc",{"_index":4946,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x6b63;&#x56e0;&#x4e3a;&#x5982;&#x6b64;&#xff0c;&#x5728",{"_index":8251,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6b63;&#x56e0;&#x4e3a;&#x5982;&#x6b64;&#xff0c;&#x6211;&#x5728;&#x8c03;&#x7528",{"_index":1306,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x6b63;&#x56e0;&#x4e3a;&#x5982;&#x6b64;&#xff0c;&#x6240;&#x6709;&#x7684",{"_index":8208,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6b63;&#x56e0;&#x4e3a;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x5b57;&#x6bb5;&#x548c;&#x65b9;&#x6cd5;&#x90fd;&#x53ef;&#x4ee5;&#x201c;&#x5ac1;&#x63a5;&#x201d;&#x5230;&#x88ab;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x4e0a;&#xff0c;&#x6240;&#x4ee5;&#x5373;&#x4f7f;&#x5728;&#x4e24;&#x4e2a;&#x540c;&#x540d;&#x7684;&#x6210;&#x5458;&#x4e00;&#x4e2a;&#x662f;&#x5b57;&#x6bb5;&#xff0c;&#x53e6;&#x4e00;&#x4e2a;&#x662f;&#x65b9;&#x6cd5;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x8fd9;&#x79cd;&#x201c;&#x5c4f;&#x853d;&#x201d;&#x73b0;&#x8c61;&#x4f9d;&#x7136;&#x4f1a;&#x5b58;&#x5728;&#x3002",{"_index":2108,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x6b63;&#x56e0;&#x4e3a;&#x662f",{"_index":7041,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x6b63;&#x5f26;&#x51fd;&#x6570;&#xff0c;&#x53cd;&#x6b63;&#x5f26;&#x51fd;&#x6570;&#xff0c;&#x53cc;&#x66f2;&#x6b63;&#x5f26;&#xff0c;&#x53cd;&#x53cc;&#x66f2;&#x6b63;&#x5f26",{"_index":6075,"title":{},"body":{"standards/data/math.html#三角函数":{}}}],["x6b63;&#x65e0;&#x7a77",{"_index":6091,"title":{},"body":{"standards/data/math.html#特殊函数":{}}}],["x6b63;&#x662f;&#x7531;&#x4e8e;&#x5df2;&#x4f7f;&#x7528;&#x7684",{"_index":3843,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6b63;&#x786e;&#x7684;&#x8bed;&#x6cd5",{"_index":2078,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x6b63;&#x786e;&#x8c03;&#x7528",{"_index":719,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x6b63;&#x8d1f;&#x5747;&#x53ef",{"_index":5287,"title":{},"body":{"standards/data/container.html#环":{}}}],["x6b64",{"_index":9025,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6b64;&#x5904;&#x7684;&#x64cd;&#x4f5c;&#x662f;&#x5b89;&#x5168;&#x7684;&#x3002",{"_index":8053,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x6b64;&#x5916;&#xff0c",{"_index":5649,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{},"standards/data/sort.html#Reverse":{}}}],["x6b64;&#x7c7b;&#x578b;&#x7684",{"_index":8087,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x6b64;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x76f8;&#x5f53;&#x4e8e;&#x4e00;&#x4e2a;&#x5bb9;&#x5668;&#xff0c;&#x53ef;&#x4ee5;&#x88ab;&#x7528;&#x6765;&#x201c;&#x539f;&#x5b50;&#x5730;&#x201d;&#x5b58;&#x50a8;&#x548c;&#x52a0;&#x8f7d;&#x4efb;&#x610f;&#x7684;&#x503c;&#x3002;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x3002",{"_index":8040,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x6b64;&#x884c;&#x4ee3;&#x7801;&#x6240;&#x5c5e;&#x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x968f;&#x5373;&#x7ec8;&#x6b62;&#x3002;&#x7d27;&#x63a5;&#x7740;&#xff0c;&#x63a7;&#x5236;&#x6743;&#x5e76;&#x4e0d;&#x4f1a;&#x5728;&#x6b64;&#x6709;&#x7247;&#x523b;&#x505c;&#x7559;&#xff0c;&#x5b83;&#x53c8;&#x4f1a;&#x7acb;&#x5373;&#x8f6c;&#x79fb;&#x81f3;&#x518d;&#x4e0a;&#x4e00;&#x7ea7;&#x7684;&#x8c03;&#x7528;&#x4ee3;&#x7801;&#x5904;&#x3002;&#x63a7;&#x5236;&#x6743;&#x5982;&#x6b64;&#x4e00;&#x7ea7;&#x4e00",{"_index":675,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x6b64;&#xff0c;&#x8fd9;&#x6bb5;&#x4ee3;&#x7801;&#x6253;&#x5370;&#x51fa;&#x7684;&#x7b2c;&#x4e8c;&#x884c;&#x5185;&#x5bb9;&#x5c31;&#x4f1a;&#x5982;&#x4e0b;&#x6240;&#x793a;&#xff1a",{"_index":3962,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6b64;&#xff0c;&#x8fde;&#x7eed;&#x7684",{"_index":7453,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6b7b;&#x9501",{"_index":7873,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6b8a;&#x7c7b;&#x578b;&#xff0c;&#x6765;&#x6807;&#x8bc6;&#x67d0;&#x4e2a",{"_index":704,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x6bb5;&#x53ea;&#x4f1a;&#x5728;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x7684",{"_index":5423,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x6bcd",{"_index":7573,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6bcf",{"_index":6556,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6bcf;&#x4e00;&#x4e2a",{"_index":3002,"title":{},"body":{"concurrent/channel.html#channel":{},"standards/time.html#Time":{}}}],["x6bcf;&#x4e2a;&#x5305;&#x5728;&#x89e3;&#x51b3;&#x4f9d;&#x8d56;&#x7684;&#x524d;&#x63d0;&#x4e0b;&#xff0c;&#x4ee5;&#x5bfc;&#x5165;&#x58f0;&#x660e;&#x7684;&#x987a;&#x5e8f;&#x521d;&#x59cb;&#x5316;&#xff0c;&#x6bcf;&#x4e2a;&#x5305;&#x53ea;&#x4f1a;&#x88ab;&#x521d;&#x59cb;&#x5316;&#x4e00;&#x6b21;&#x3002;&#x56e0;&#x6b64;&#xff0c;&#x5982;&#x679c;&#x4e00;&#x4e2a",{"_index":2216,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x6bcf;&#x4e2a;&#x5b57;&#x8282;&#x7528;&#x4e24;&#x5b57;&#x8282;&#x5341;&#x516d;&#x8fdb;&#x5236;&#x8868;&#x793a;&#xff0c;a",{"_index":4742,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x6bcf;&#x4e2a;&#x5bfc;&#x822a;&#x9879;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a",{"_index":2601,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x6bcf;&#x4e2a;&#x6587;&#x4ef6;&#x4ee5",{"_index":231,"title":{},"body":{"index.html#声明":{}}}],["x6bcf;&#x4e2a;&#x6587;&#x4ef6;&#x90fd;&#x6709;&#x4e00;&#x4e2a;&#x4e0e;&#x4e4b;&#x5173;&#x8054;&#x7684;&#x7528;&#x6237",{"_index":7542,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x6bcf;&#x6761",{"_index":6257,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6bcf;&#x6b21;&#x4ece;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7533;&#x8bf7;&#x4e00;&#x5927;&#x5757;&#x5185;&#x5b58;&#xff08;&#x5982",{"_index":383,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x6bcf;&#x9694",{"_index":560,"title":{},"body":{"advance/gc.html#监控":{}}}],["x6bcf;&#x9694;&#x4e00;&#x6bb5;&#x65f6;&#x95f4;&#x5c31;&#x4f1a;&#x68c0;&#x67e5",{"_index":435,"title":{},"body":{"advance/mm.html#释放":{}}}],["x6bd4",{"_index":6203,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6bd4;&#x5982",{"_index":1913,"title":{},"body":{"basic/slice.html#切片操作":{},"basic/package.html#点操作":{},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x6bd4;&#x5982;&#x4e4b;&#x524d;&#x7684;&#x9879;&#x76ee;&#x7684;&#x7ed3;&#x6784;&#x662f",{"_index":992,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6bd4;&#x5982;&#x5c06",{"_index":1569,"title":{},"body":{"basic/json.html#序列化":{}}}],["x6bd4;&#x5982;&#x63a7;&#x5236;&#x5b57;&#x7b26;&#x96c6;&#xff1a",{"_index":5115,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x6bd4;&#x5982;&#x6570;&#x7ec4;&#xff0c;&#x5207;&#x7247;&#xff0c;&#x5b57;&#x5178;&#xff0c;&#x901a;&#x9053;&#x7b49;&#x7c7b;&#x578b;&#x4e0e;&#x5185;&#x90e8;&#x5177;&#x4f53;&#x7684;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x548c;&#x957f;&#x5ea6;&#x7b49;&#x5c5e;&#x6027;&#x6709;&#x5173;&#xff0c;&#x6240;&#x4ee5;&#x53eb;&#x505a",{"_index":287,"title":{},"body":{"index.html#未命名类型":{}}}],["x6bd4;&#x5982;&#xff0c",{"_index":5542,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x6bd4;&#x5982;&#xff0c;&#x53ea;&#x5728",{"_index":4273,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6bd4;&#x5982;&#xff0c;&#x5728;&#x6807;&#x51c6;&#x5e93",{"_index":4793,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x6bd4;&#x5982;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4ece;&#x6807;&#x51c6;&#x8f93;&#x5165;&#x3001;&#x6587;&#x4ef6;&#x3001;&#x5b57;&#x7b26;&#x4e32;&#x7b49;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#xff0c;&#x793a;&#x4f8b;&#x4ee3;&#x7801;&#x5982;&#x4e0b;&#xff1a",{"_index":6814,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x6bd4;&#x5982;&#xff0c;&#x6709;&#x8fd9;&#x4e48;&#x4e2a;&#x9700;&#x6c42;&#xff1a;&#x83b7;&#x53d6;&#x5f53;&#x524d;&#x65f6;&#x95f4;&#x6574;&#x70b9;&#x7684",{"_index":3521,"title":{},"body":{"standards/time.html#Time":{}}}],["x6bd4;&#x5982;&#xff0c;&#x7ed9;&#x5b9a;&#x8def;&#x5f84;&#x540d",{"_index":5640,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x6bd4;&#x5982;&#xff1a",{"_index":1347,"title":{},"body":{"basic/constant.html#常量":{},"basic/var.html#声明一组变量":{}}}],["x6bd4;&#x8f83",{"_index":3470,"title":{},"body":{"standards/time.html#Time":{}}}],["x6bd4;&#x8f83;&#x5e76;&#x4ea4;&#x6362;&#x64cd;&#x4f5c;&#x4e0e;&#x4ea4;&#x6362;&#x64cd;&#x4f5c;&#x76f8;&#x6bd4;&#x6709;&#x4ec0;&#x4e48;&#x4e0d;&#x540c",{"_index":8018,"title":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}},"body":{}}],["x6bd4;&#x8f83;&#x5e76;&#x4ea4;&#x6362;&#x64cd;&#x4f5c;&#x5373",{"_index":8019,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x6bd4;&#x8f83;&#x7b80;&#x5355;&#x7684;&#x529e;&#x6cd5;&#x662f;&#x4f7f;&#x7528",{"_index":5039,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x6bd4;&#x8f83;&#x7b80;&#x6d01;&#x4f46;&#x662f;&#x5728;&#x4f7f;&#x7528;&#x65f6;&#x9700;&#x591a;&#x52a0;&#x5c0f;&#x5fc3;&#x3002",{"_index":5044,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x6bd4;&#x8f83;&#x8fd0;&#x7b97;&#x7b26;&#x6765;&#x6bd4;&#x8f83;&#x4e24;&#x4e2a;&#x6570;&#x7ec4;&#xff0c;&#x53ea;&#x6709;&#x5f53;&#x4e24;&#x4e2a;&#x6570;&#x7ec4;&#x7684;&#x6240;&#x6709;&#x5143;&#x7d20;&#x90fd;&#x662f;&#x76f8;&#x7b49;&#x7684;&#x65f6;&#x5019;&#x6570;&#x7ec4;&#x624d;&#x662f;&#x76f8;&#x7b49;&#x7684;&#x3002",{"_index":787,"title":{},"body":{"basic/array.html#二维数组":{}}}],["x6beb;&#x79d2;&#x201d",{"_index":6333,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6c42",{"_index":9313,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x6c42;&#x54c8;&#x5e0c;&#x548c;&#x5224;&#x7b49;&#x64cd;&#x4f5c;&#x7684;&#x901f;&#x5ea6;&#x8d8a;&#x5feb;&#xff0c;&#x5bf9;&#x5e94;&#x7684;&#x7c7b;&#x578b;&#x5c31;&#x8d8a;&#x9002;&#x5408;&#x4f5c;&#x4e3a;&#x952e;&#x7c7b;&#x578b;&#x3002",{"_index":1453,"title":{},"body":{"basic/map.html#map":{}}}],["x6c42;&#x5b50;&#x4e32;&#xff1b",{"_index":5908,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x6c42;&#x662f",{"_index":8864,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x6ca1;&#x6709;&#x50cf;&#x5176;&#x5b83;&#x8bed;&#x8a00;&#x90a3;&#x6837;&#x7528",{"_index":1229,"title":{},"body":{"basic/oop.html#方法":{}}}],["x6ca1;&#x6709;&#x5171;&#x4eab;&#x7684;&#x8def;&#x5f84;&#x5143;&#x7d20;&#x3002;&#x5982;&#x679c;&#x4e24;&#x4e2a;&#x53c2;&#x6570;&#x4e00;&#x4e2a;&#x662f;&#x76f8;&#x5bf9;&#x8def;&#x5f84;&#x800c;&#x53e6;&#x4e00;&#x4e2a;&#x662f;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#xff0c;&#x6216;&#x8005",{"_index":5674,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x6ca1;&#x6709;&#x51c6;&#x5907;&#x597d;&#x5199;&#x6216;&#x8005;&#x8bfb;&#x65f6;&#x3002",{"_index":3010,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6ca1;&#x6709;&#x51fd;&#x6570;&#x4f53;&#x7684;&#x51fd;&#x6570;&#x58f0;&#x660e;&#xff0c;&#x8fd9;&#x8868;&#x793a;&#x8be5;&#x51fd;&#x6570;&#x4e0d;&#x662f;&#x4ee5",{"_index":3136,"title":{},"body":{"basic/function.html#参数":{}}}],["x6ca1;&#x6709;&#x57fa;&#x4e8",{"_index":7666,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x6ca1;&#x6709;&#x6570;&#x636e;&#x4e86;&#xff0c;&#x90a3;&#x4e48",{"_index":2917,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6ca1;&#x6709;&#x6ca1;&#x6709;&#x4e86;&#x610f;&#x4e49;&#x3002;&#x770b;&#x4e0b;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff1a",{"_index":2370,"title":{},"body":{"basic/interface.html#接口":{}}}],["x6ca1;&#x6709;&#x6d88;&#x606f;&#x53d1;&#x8fc7;&#x6765;&#xff0c;&#x90a3;&#x4e48;&#x7a0b;&#x5e8f;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#xff0c;&#x7b2c;&#x4e8c;&#x4e2a",{"_index":2998,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6ca1;&#x6709;&#x7ee7;&#x627f;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x5b83;&#x6240;&#x505a;&#x7684;&#x662f;&#x901a;&#x8fc7;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x65b9;&#x5f0f;&#x5b9e;&#x73b0;&#x4e86;&#x7c7b;&#x578b;&#x4e4b;&#x95f4;&#x7684;&#x7ec4;&#x5408",{"_index":1276,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x6ca1;&#x6709;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x5c06;&#x4f1a;&#x6839;&#x636e;&#x7c7b;&#x578b;&#x521d;&#x59cb;&#x5316;&#x4e3a;&#x5bf9;&#x5e94;&#x7684;&#x96f6;&#x503c",{"_index":2399,"title":{},"body":{"basic/var.html#变量":{}}}],["x6ca1;&#x6709;&#x8fdb;&#x884c",{"_index":6519,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6cb8;&#x6c34;&#x6e29;&#x5ea6",{"_index":281,"title":{},"body":{"index.html#自定义类型":{}}}],["x6cc4;&#x6f0f",{"_index":6397,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6cc4;&#x6f0f;&#xff0c;&#x4f8b;&#x5982;&#x5f53;&#x4f7f;&#x7528;&#x4e86;&#x65e0;&#x7f13;&#x5b58;&#x7684",{"_index":6399,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6cd5;&#x3002",{"_index":4223,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x6cd5;&#x5b9e;&#x73b0;&#xff08;&#x7528;&#x7684;&#x662f",{"_index":6900,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x6cd5;&#x5c31;&#x90fd;&#x4f1a;&#x5f15;&#x53d1",{"_index":3841,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6ce8;&#x518c;&#x4e3a;&#x6307;&#x5b9a;&#x7684;&#x6a21;&#x5f0f",{"_index":8946,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6ce8;&#x518c;&#x4e3a;&#x6307;&#x5b9a;&#x7684;&#x6a21;&#x5f0f;&#xff0c;&#x5982;&#x679c;&#x8be5;&#x6a21;&#x5f0f;&#x5df2;&#x7ecf;&#x6709;&#x4e86",{"_index":8944,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6ce8;&#x610f",{"_index":4839,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{},"basic/reflect.html#reflect-ValueOf":{}}}],["x6ce8;&#x610f;&#x4e00;&#x4e0b;&#xff0c;&#x8fd9;&#x4e2a",{"_index":8218,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6ce8;&#x610f;&#x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4f1a;&#x62a5",{"_index":2913,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6ce8;&#x610f;&#x4e86;&#xff0c;&#x2019;&#x7231;&#x2019;&#x662f;&#x7531;&#x4e09;&#x4e2a;&#x5b57;&#x8282;&#x5171;&#x540c;&#x8868;&#x8fbe;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x7b2c;&#x56db;&#x4e2a",{"_index":1139,"title":{},"body":{"basic/flow.html#for":{}}}],["x6ce8;&#x610f;&#x4e8b;&#x9879",{"_index":7853,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6ce8;&#x610f;&#x533a;&#x5206",{"_index":5032,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["x6ce8;&#x610f;&#x6211;&#x7ed9;&#x4e88",{"_index":8184,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6ce8;&#x610f;&#x8be5;&#x51fd;&#x6570;&#x548c",{"_index":7093,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x6ce8;&#x610f;&#x8fd9;&#x4e2a;&#x63a5;&#x53e3;&#x7684;&#x6ce8;&#x91ca;&#xff1a",{"_index":8964,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x6ce8;&#x610f;&#xff0c",{"_index":313,"title":{},"body":{"index.html#类型断言":{},"concurrent/channel.html#channel":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/os/filepath.html#文件路径匹配":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x6ce8;&#x610f;&#xff0c;&#x4e0",{"_index":3875,"title":{},"body":{"basic/basic_data.html#字符串":{},"standards/os/filepath.html#路径的切分和拼接":{}}}],["x6ce8;&#x610f;&#xff0c;&#x53ea;&#x6709;&#x5bfc;&#x51fa;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x6210;&#x5458;&#x624d;&#x4f1a;&#x88ab;&#x7f16;&#x7801",{"_index":1583,"title":{},"body":{"basic/json.html#序列化":{}}}],["x6ce8;&#x610f;&#xff0c;&#x5982;&#x679c;&#x5b9e;&#x53c2;&#x662f",{"_index":3132,"title":{},"body":{"basic/function.html#参数":{}}}],["x6ce8;&#x610f;&#xff0c;&#x6211;&#x4eec;&#x901a;&#x8fc7",{"_index":4278,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6ce8;&#x610f;&#xff0c;&#x6b64;&#x5904;&#x7684;&#x64cd;&#x4f5c;&#x4e0d;&#x662f;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#xff01",{"_index":8049,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x6ce8;&#x610f;&#xff0c;&#x8fd9;&#x6837;&#x7684;&#x6307;&#x9488;&#x503c;&#x6307;&#x5411;&#x7684;&#x90fd;&#x4f1a;&#x662f;&#x540c;&#x4e00;&#x4e2a",{"_index":3850,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6ce8;&#x610f;&#xff0c;&#x8fd9;&#x79cd;&#x7531",{"_index":7884,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6ce8;&#x610f;&#xff0c;&#x8fd9;&#x91cc;&#x7684;&#x754c;&#x5b9a;&#x7b26;&#x53ef;&#x4ee5;&#x662f;&#x4efb;&#x610f;&#x7684;&#x5b57;&#x7b26;&#x3002;&#x540c;&#x65f6;&#xff0c;&#x8fd4;&#x56de;&#x7684;&#x7ed3;&#x679c;&#x662f;&#x5305;&#x542b;&#x754c;&#x5b9a;&#x7b26;&#x672c;&#x8eab;&#x7684;&#x3002",{"_index":5446,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x6ce8;&#x610f;&#xff0c;&#x8fd9;&#x91cc;&#x8bf4;&#x7684;&#x6587;&#x4ef6;&#x540d;&#xff0c;&#x5e76;&#x4e0d;&#x4e00;&#x5b9a;&#x5b58;&#x5728;&#xff0c;&#x6bd4;&#x5982",{"_index":7334,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x6ce8;&#x610f;&#xff0c;&#x91cd;&#x547d;&#x540d;&#x7684;&#x5305;&#x540d;&#x53ea;&#x5728;&#x5f53;&#x524d;&#x6e90;&#x6587;&#x4ef6;&#x6709;&#x6548;&#x3002",{"_index":2172,"title":{},"body":{"basic/package.html#点操作":{}}}],["x6ce8;&#x610f;&#xff1a",{"_index":6894,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/os/os.html#文件-I-O":{},"standards/net/http.html#HTTP-Server":{}}}],["x6ce8;&#x610f;&#xff1a;&#x51fd;&#x6570;&#x5185;&#x90e8;&#x5b9a;&#x4e49;&#x7684;&#xff0c;&#x53ea;&#x80fd;&#x5728;&#x51fd;&#x6570;&#x5185;&#x90e8;&#x4f7f;&#x7528;&#xff08;&#x51fd;&#x6570;&#x7ea7;&#xff09;&#xff0c;&#x5728;&#x51fd;&#x6570;&#x5916;&#x90e8;&#x5b9a;&#x4e49;&#x7684;&#xff08;&#x5305;&#x7ea7;&#xff09;&#xff0c;&#x53ef;&#x4ee5;&#x5728;&#x5f53;&#x524d;&#x5305;&#x7684;&#x6240;&#x6709;&#x6587;&#x4ef6;&#x4e2d;&#x662f;&#x4f7f;&#x7528;&#x3002",{"_index":224,"title":{},"body":{"index.html#命名":{}}}],["x6ce8;&#x610f;&#xff1a;&#x5982;&#x679c;&#x67d0;&#x4e2a;&#x8fde;&#x63a5;&#x6709;&#x95ee;&#x9898;&#xff08;broken",{"_index":4501,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x6ce8;&#x91ca",{"_index":201,"title":{"index.html#注释":{}},"body":{"commands/build.html#工具":{}}}],["x6ce8;&#x91ca;&#x4e2d;&#x51fd;&#x6570;&#x7684;&#x53c2;&#x6570;&#x6216;&#x5176;&#x5b83;&#x7684;&#x6807;&#x8bc6;&#x7b26;&#x5e76;&#x4e0d;&#x9700;&#x8981;&#x989d;&#x5916;&#x7684;&#x5f15;&#x53f7;&#x6216;&#x5176;&#x5b83;&#x6807;&#x8bb0;&#x6ce8;&#x660e;&#x3002;&#x4f8b;&#x5982",{"_index":2804,"title":{},"body":{"commands/build.html#工具":{}}}],["x6d41;&#x7684;&#x957f;&#x5ea6",{"_index":6984,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x6d41;&#x7a0b;&#x63a7;&#x5236;&#x8bed;&#x53e5",{"_index":172,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x6d4b;&#x8bd5",{"_index":4075,"title":{"basic/test.html#测试":{}},"body":{}}],["x6d4b;&#x8bd5;&#x51fd;&#x6570",{"_index":4103,"title":{"basic/test.html#测试函数":{}},"body":{}}],["x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x5fc5;&#x987b;&#x5bfc;&#x5165",{"_index":4104,"title":{},"body":{"basic/test.html#测试函数":{},"basic/test.html#基准测试":{}}}],["x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x6d4b;&#x8bd5;&#x7a0b;&#x5e8f;&#x7684;&#x4e00;&#x4e9b;&#x903b;&#x8f91;&#x884c;&#x4e3a;&#x662f;&#x5426;&#x6b63;&#x786e;&#x3002",{"_index":4082,"title":{},"body":{"basic/test.html#测试":{}}}],["x6d4b;&#x8bd5;&#x540d;&#x79f0;&#x53f3;&#x8fb9;&#x7684;&#x662f;&#x6267;&#x884c;&#x6b21;&#x6570;&#x3002",{"_index":4210,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6d4b;&#x8bd5;&#x6e90;&#x7801;&#x6587;&#x4ef6",{"_index":191,"title":{},"body":{"index.html#三种文件":{}}}],["x6d4b;&#x8bd5;&#x7684;&#x4e00;&#x90e8;&#x5206;&#x3002",{"_index":4080,"title":{},"body":{"basic/test.html#测试":{}}}],["x6d4b;&#x8bd5;&#x7ed3;&#x679c;&#xff0c;&#x91cd;&#x70b9;&#x5728;&#x5012;&#x6570;&#x7b2c;&#x4e09;&#x884c;&#x7684;&#x5185;&#x5bb9;&#x3002",{"_index":4188,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6d6e;&#x70b9;&#x6570",{"_index":3709,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x6d6e;&#x70b9;&#x6570;&#x548c;&#x590d;&#x6570;&#x7684;&#x7ec4;&#x6210;&#x90e8;&#x5206;&#xff08;&#x5b9e;&#x90e8;&#x548c;&#x865a;&#x90e8;&#xff09",{"_index":4688,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x6d6e;&#x70b9;&#x6570;&#x7cbe;&#x5ea6;&#x3002",{"_index":3716,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x6d88;&#x8017;&#x65f6;&#x95f4",{"_index":3542,"title":{},"body":{"standards/time.html#Time":{}}}],["x6d89;&#x53ca;&#x5230;&#x7684;&#x7f16;&#x7801;&#x8fdb;&#x884c;&#x4e86;&#x5206;&#x7c7b;&#xff0c;&#x4f7f;&#x7528;&#x7ed3;&#x6784",{"_index":5112,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x6df7;&#x5408",{"_index":2333,"title":{},"body":{"basic/interface.html#接口":{}}}],["x6df7;&#x5408;&#x7c7b;&#x578b;&#x8868;&#x8fbe;&#x5f0f;&#x5fc5;&#x987b;&#x4fdd;&#x8bc1;&#x7c7b;&#x578b;&#x4e00;&#x81f4",{"_index":244,"title":{},"body":{"index.html#类型转换":{}}}],["x6df7;&#x5408;&#x7c7b;&#x578b;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x4fdd;&#x6301;&#x4e00;&#x81f4",{"_index":260,"title":{},"body":{"index.html#类型转换":{}}}],["x6dfb;&#x52a0",{"_index":4119,"title":{},"body":{"basic/test.html#覆盖率":{},"standards/net/http.html#Request":{}}}],["x6dfb;&#x52a0;&#x5230;&#x901a;&#x77e5;&#x961f;&#x5217;&#x7684;&#x961f;&#x5c3e;&#xff0c;&#x800c;&#x5b83;&#x7684",{"_index":7986,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6dfb;&#x52a0;&#x5f62;&#x5982;&#x201c;a[b:len(a",{"_index":2794,"title":{},"body":{"commands/build.html#工具":{}}}],["x6dfb;&#x52a0;&#x6587;&#x6863",{"_index":2592,"title":{"theme/theme-usage.html#添加文档":{}},"body":{}}],["x6dfb;&#x52a0;&#x6ce8;&#x91ca;&#x3002;&#x4e00;&#x822c;&#x6211;&#x4eec;&#x4f1a;&#x5728;&#x5305;&#x58f0;&#x660e;&#x524d;&#x6dfb;&#x52a0;&#x6ce8;&#x91ca;&#xff0c;&#x6765;&#x5bf9;&#x6574;&#x4e2a;&#x5305;&#x6325;&#x7740;&#x7a0b;&#x5e8f;&#x505a;&#x6574;&#x4f53;&#x7684;&#x63cf;&#x8ff0;&#x3002",{"_index":203,"title":{},"body":{"index.html#注释":{}}}],["x6dfb;&#x52a0;&#x952",{"_index":1476,"title":{},"body":{"basic/map.html#map":{}}}],["x6e05;&#x9664;&#x5173;&#x8054;&#x7684;&#x5b89;&#x88c5;&#x7684;&#x5305;&#x548c;&#x53ef;&#x8fd0;&#x884c;&#x6587;&#x4ef6;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x901a;&#x8fc7",{"_index":2782,"title":{},"body":{"commands/build.html#工具":{}}}],["x6e10;&#x5730;&#x79ef;&#x7d2f;&#x548c;&#x5b8c;&#x5584;&#xff0c;&#x5e76;&#x4f1a;&#x5728;&#x7a0b;&#x5e8f;&#x7ec8;&#x6b62;&#x4e4b;&#x524d;&#x88ab;&#x6253;&#x5370;&#x51fa;&#x6765;&#x3002",{"_index":684,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x6e90;&#x7801;&#x6587;&#x4ef6;&#x6240;&#x5728;&#x7684;&#x76ee;&#x5f55;&#x76f8;&#x5bf9;&#x4e8",{"_index":2184,"title":{},"body":{"basic/package.html#点操作":{}}}],["x6e90;&#x7801;&#x76ee;&#x5f55",{"_index":946,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x6e90;&#x7801;&#xff1a",{"_index":5467,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x6ee1;&#x4e86;&#xff0c",{"_index":5450,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x70b9",{"_index":3518,"title":{},"body":{"standards/time.html#Time":{}}}],["x70b9;&#x64cd;&#x4f5c",{"_index":2165,"title":{"basic/package.html#点操作":{}},"body":{}}],["x70b9;&#x64cd;&#x4f5c;&#x7b26;&#x4e5f;&#x53ef;&#x4ee5;&#x548c;&#x6307;&#x5411;&#x7ed3;&#x6784;&#x4f53;&#x7684;&#x6307;&#x9488;&#x4e00;&#x8d77;&#x5de5;&#x4f5c",{"_index":2040,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7136;&#x540e;&#x53d1;&#x901a;&#x77e5;&#xff0c;&#x201c;&#x4fe1;&#x7bb1;&#x91cc;&#x5df2;&#x7ecf;&#x6709;&#x65b0;&#x60c5;&#x62a5;&#x4e86;&#x201d;&#xff0c;&#x6211;&#x4eec;&#x8c03;&#x7528",{"_index":7926,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7136;&#x540e;&#x5c06;&#x628a;&#x539f;&#x6709;&#x7684;&#x5143;&#x7d20;&#x548c;&#x65b0;&#x5143;&#x7d20;&#x4e00;&#x5e76;&#x62f7;&#x8d1d;&#x5230;&#x65b0;&#x5207;&#x7247;&#x4e2d",{"_index":1924,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x7136;&#x540e;&#x76f4;&#x63a5",{"_index":8778,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x7136;&#x540e;&#x8bbf;&#x95e",{"_index":2821,"title":{},"body":{"commands/build.html#工具":{}}}],["x7136;&#x540e;&#x8c03;&#x7528",{"_index":8926,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7136;&#x540e;&#x8d4b;&#x503c",{"_index":2443,"title":{},"body":{"basic/var.html#赋值":{}}}],["x7136;&#x540e;&#x8fd0;&#x884c;&#xff1a",{"_index":212,"title":{},"body":{"index.html#os-Args":{}}}],["x7136;&#x540e;&#xff0c;&#x5b83;&#x4f1a;&#x5411;&#x5b83;&#x7684;&#x6240;&#x6709;&#x5b50;&#x503c;&#xff08;&#x6216;&#x8005;&#x8bf4;&#x5b50;&#x8282;&#x70b9;&#xff09;&#x4f20;&#x8fbe;&#x64a4;&#x9500;&#x4fe1;&#x53f7;&#x3002;&#x8fd9;&#x4e9b;&#x5b50;&#x503c;&#x4f1a;&#x5982;&#x6cd5;&#x70ae;&#x5236;&#xff0c;&#x628a;&#x64a4;&#x9500;&#x4fe1;&#x53f7;&#x7ee7;&#x7eed;&#x4f20;&#x64ad;&#x4e0b;&#x53bb;&#x3002;&#x6700;&#x540e;&#xff0c;&#x8fd9;&#x4e2a",{"_index":8261,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7136;&#x800c;&#xff0c",{"_index":3895,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7136;&#x800c;&#xff0c;&#x5728;&#x8fd4;&#x56de;&#x9519;&#x8bef;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x901a;&#x8fc7;&#x6784;&#x9020;&#x4e00;&#x4e2a",{"_index":4899,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x7231;&#x597d;&#x8005",{"_index":1132,"title":{},"body":{"basic/flow.html#for":{},"basic/basic_data.html#字符串":{}}}],["x7231;&#x597d;&#x8005;&#x201d",{"_index":3958,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7248;&#x672c",{"_index":2845,"title":{},"body":{"commands/build.html#工具":{}}}],["x7248;&#x672c;&#x53f7",{"_index":8853,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x7269;&#x7406;&#x5185;&#x5b58;&#xff1b",{"_index":6561,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7279;&#x6b8a;&#x51fd;&#x6570",{"_index":6090,"title":{"standards/data/math.html#特殊函数":{}},"body":{}}],["x72b6;&#x6001;&#x3002;&#x5982;&#x679c;&#x6b64;&#x65f6;&#x6709",{"_index":6598,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x72b6;&#x6001;&#x3002;&#x5f53",{"_index":6584,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x72b6;&#x6001;&#x503c",{"_index":8904,"title":{},"body":{"standards/net/http.html#client":{}}}],["x72b6;&#x6001;&#x7801",{"_index":8852,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x72b6;&#x6001;&#xff0c;&#x8d85;&#x8fc7",{"_index":562,"title":{},"body":{"advance/gc.html#监控":{}}}],["x72b6;&#x6001;&#xff0c;&#x8fd9;&#x662f",{"_index":6495,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x72d7;&#x86cb",{"_index":5325,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x73af",{"_index":5261,"title":{"standards/data/container.html#环":{}},"body":{}}],["x73af;&#x5883;&#x4e0b;&#x4f7f;&#x7528",{"_index":4095,"title":{},"body":{"basic/test.html#测试":{}}}],["x73af;&#x5883;&#x53d8;&#x91cf",{"_index":932,"title":{},"body":{"basic/env_config.html#工作区":{},"standards/time.html#时区":{}}}],["x73af;&#x5883;&#x53d8;&#x91cf;&#x4e2d;&#x3002",{"_index":923,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x73af;&#x5883;&#x914d;&#x7f6",{"_index":914,"title":{"basic/env_config.html#Go-环境配置":{}},"body":{}}],["x73af;&#x7684;&#x7ed3;&#x6784;&#x6709;&#x70b9;&#x7279;&#x6b8a;&#xff0c;&#x73af;&#x7684;&#x5c3e;&#x90e8;&#x5c31;&#x662f;&#x5934;&#x90e8;&#xff0c;&#x6307;&#x5411;&#x73af;&#x5f62;&#x94fe;&#x8868;&#x4efb;&#x4e00;&#x5143;&#x7d20;&#x7684;&#x6307;&#x9488;&#x90fd;&#x53ef;&#x4ee5;&#x4f5c;&#x4e3a;&#x6574;&#x4e2a;&#x73af;&#x5f62;&#x94fe;&#x8868;&#x770b;&#x5f85;&#x3002",{"_index":5262,"title":{},"body":{"standards/data/container.html#环":{}}}],["x73b0;&#x4e86;&#x8fd9;&#x4e2a;&#x63a5;&#x53e3;&#xff0c;&#x65e0;&#x987b;&#x663e;&#x793a;&#x58f0;&#x660e;&#x3002",{"_index":2319,"title":{},"body":{"basic/interface.html#接口":{}}}],["x73b0;&#x5728",{"_index":8997,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7406;&#x60f3;&#x6a21;&#x5f0f;&#x3002",{"_index":6178,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x7406;&#x6240;&#x5f53;&#x7136;&#xff0c;&#x8fd9;&#x4e9b;&#x8f6c;&#x6362;&#x64cd;&#x4f5c;&#x80af;&#x5b9a;&#x90fd;&#x9700;&#x8981;&#x5728;&#x9501;&#x7684;&#x4fdd;&#x62a4;&#x4e0b;&#x8fdb;&#x884c;&#x3002",{"_index":8400,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x751f;&#x547d;&#x5468;&#x671f",{"_index":317,"title":{},"body":{"index.html#类型断言":{}}}],["x751f;&#x6210;&#x4e00;&#x4e2a",{"_index":3454,"title":{},"body":{"standards/time.html#Time":{}}}],["x751f;&#x7684",{"_index":4280,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7528",{"_index":641,"title":{},"body":{"basic/error.html#Panic-异常":{},"basic/basic_data.html#字符串":{},"standards/io/io.html#其他接口":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7528;&#x4e00;&#x4e2a;&#x6216;&#x591a;&#x4e2a;&#x8fde;&#x7eed;&#x7684;&#x7a7a;&#x683c;&#x5206;&#x9694;&#x5b57;&#x7b26;&#x4e32",{"_index":5970,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x7528;&#x4e2d;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":6795,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x7528;&#x4e8e",{"_index":173,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x4ece;&#x51fd;&#x6570;&#x8fd4;&#x56d",{"_index":165,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x540c;&#x6b65;&#x7684;&#x5185;&#x5b58;&#x7ba1;&#x9053;&#xff1a",{"_index":7030,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x7528;&#x4e8e;&#x521b;&#x5efa;&#x4e34;&#x65f6;&#x6587;&#x4ef6;&#x3002;&#x5982",{"_index":4834,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x7528;&#x4e8e;&#x5404;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x5185;&#x5b58;&#x5206;&#x914d",{"_index":234,"title":{},"body":{"index.html#make-和-new":{}}}],["x7528;&#x4e8e;&#x58f0;&#x660",{"_index":176,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x58f0;&#x660e;&#x81ea;&#x5b9a;&#x4e49;&#x7c7b;&#x578b",{"_index":175,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x5b9a;&#x4e49;&#x51fd;&#x6570;&#x548c;&#x65b9;&#x6cd5",{"_index":164,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x5b9a;&#x4e49;&#x62bd;&#x8c61;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":170,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x5b9a;&#x4e49;&#x63a5;&#x53e3",{"_index":169,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x5c06;&#x591a;&#x4e2a;&#x8def;&#x5f84;&#x62fc;&#x63a5;&#x8d77;&#x6765;&#xff0c;&#x4f1a;&#x6839;&#x636e;&#x60c5;&#x51b5;&#x6dfb;&#x52a0;&#x8def;&#x5f84;&#x5206;&#x9694;&#x7b26;&#x3002",{"_index":5695,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x7528;&#x4e8e;&#x5c06;&#x5b57;&#x7b26;&#x4e32",{"_index":5944,"title":{},"body":{"standards/text/strings.html#字符串替换":{}}}],["x7528;&#x4e8e;&#x5e76;&#x53d1",{"_index":167,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x6267;&#x884c",{"_index":7368,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7528;&#x4e8e;&#x6307;&#x5b9a;&#x6587;&#x4ef6;&#x7684;&#x8bbf;&#x95ee;&#x6a21;&#x5f0f;&#xff0c;&#x53ef;&#x7528;&#x7684;&#x503c;&#x5728",{"_index":7346,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7528;&#x4e8e;&#x6784;&#x9020",{"_index":4904,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x7528;&#x4e8e;&#x751f;&#x6210;&#x4e00;&#x4e2a",{"_index":5996,"title":{},"body":{"standards/text/strings.html#从字符串中读取内容":{}}}],["x7528;&#x4e8e;&#x7c7b;&#x4f3c;&#x6790;&#x6784;&#x51fd;&#x6570",{"_index":166,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x89e6;&#x53d1;&#x64a4;&#x9500;&#x4fe1;&#x53f7;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":8257,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7528;&#x4e8e;&#x8ba1;&#x7b97;&#x5b57;&#x7b26;&#x4e32",{"_index":5938,"title":{},"body":{"standards/text/strings.html#计算字符串出现次数":{}}}],["x7528;&#x4e8e;&#x8bfb;&#x53d6",{"_index":178,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x9009;&#x62e9;&#x4e0d;&#x540c;&#x7c7b;&#x578b;&#x7684;&#x901a;&#x8baf",{"_index":168,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x9012;&#x5f52;&#x521b;&#x5efa;&#x6240;&#x6709;&#x4e0d;&#x5b58;&#x5728;&#x7684;&#x76ee;&#x5f55;&#x3002",{"_index":7643,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7528;&#x4e8e;&#x91cd;&#x590d",{"_index":5953,"title":{},"body":{"standards/text/strings.html#重复字符串":{}}}],["x7528;&#x5206;&#x53f7;&#x5206;&#x9694;&#xff08",{"_index":8759,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x7528;&#x6237;&#x5c42;&#x8f7b;&#x91cf;&#x7ea7",{"_index":6424,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7528;&#x6765;&#x6307;&#x5b9a",{"_index":933,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7528;&#x6765;&#x79fb;&#x9664;&#x5f53;&#x524d;&#x6e90;&#x7801;&#x5305;&#x548c;&#x5173;&#x8054;&#x6e90;&#x7801;&#x5305;&#x91cc;&#x9762;&#x7f16;&#x8bd1;&#x751f;&#x6210;&#x7684;&#x6587;&#x4ef6;&#x3002;&#x6587;&#x4ef6;&#x5305;&#x62ec;&#xff1a",{"_index":2770,"title":{},"body":{"commands/build.html#工具":{}}}],["x7528;&#x70b9;&#x53f7",{"_index":2033,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7528;&#x76f8;&#x540c;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c",{"_index":6958,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x7531",{"_index":1542,"title":{},"body":{"basic/json.html#序列化":{},"commands/build.html#工具":{},"basic/test.html#parallel-标记":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html#sync-Map":{},"standards/net/http.html#HTTP-Server":{}}}],["x7531;&#x4e09;&#x4e2a;&#x90e8;&#x5206;&#x6784;&#x6210;&#xff1a;&#x6307;&#x9488;&#x3001;&#x957f;&#x5ea6;&#x548c;&#x5bb9;&#x91cf;&#x3002;&#x957f;&#x5ea6;&#x4e0d;&#x80fd;&#x8d85;&#x8fc7;&#x5bb9;&#x91cf;&#x3002",{"_index":1870,"title":{},"body":{"basic/slice.html#slice":{}}}],["x7531;&#x4e09;&#x79cd;&#x7ec4;&#x4ef6;&#x7ec4;&#x6210;&#xff1a",{"_index":415,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x7531;&#x4e8e",{"_index":638,"title":{},"body":{"basic/error.html#Panic-异常":{},"basic/function.html#关键字-defer":{},"basic/basic_data.html#字符串":{},"basic/test.html#go-test-命令执行的主要测试流程":{},"standards/database/sql.html#sql-DB-的使用":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#sync-Map":{}}}],["x7531;&#x4e8e;&#x5c06;&#x5b57;&#x7b26;&#x4e32;&#x8f6c;&#x4e3a;&#x5176;&#x4ed6;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x53ef;&#x80fd;&#x4f1a;&#x51fa;&#x9519;&#xff0c",{"_index":4888,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x7531;&#x4e8e;&#x6570;&#x7ec4;&#x662f;&#x503c;&#x7c7b;&#x578b;&#xff0c;&#x6240;&#x4ee5;&#x6bcf;&#x4e00;&#x6b21;&#x590d;&#x5236;&#x90fd;&#x4f1a;&#x62f7;&#x8d1d;&#x5b83;&#xff0c;&#x4ee5;&#x53ca;&#x5b83;&#x7684;&#x6240;&#x6709;&#x5143;&#x7d20;&#x503c;&#x3002",{"_index":3221,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x7531;&#x4e8e;&#x6d6e;&#x70b9;&#x6570;&#x6709;&#x7cbe;&#x5ea6;&#x7684;&#x95ee;&#x9898;&#xff0c;&#x7cbe;&#x5ea6;&#x4e0d;&#x4e00;&#x6837;&#xff0c",{"_index":4993,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x7531;&#x4e8e;&#x8be5;&#x7c7b;&#x578b;&#x6240;&#x652f;&#x6301;&#x7684;&#x64cd;&#x4f5c;&#xff0c;&#x524d;&#x9762;&#x90fd;&#x6709;&#x4ecb;&#x7ecd;&#xff0c;&#x56e0;&#x6b64;&#x4e0d;&#x63d0;&#x4f9b;&#x793a;&#x4f8b;&#x4ee3;&#x7801;&#x4e86;&#x3002",{"_index":6998,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x7531;&#x4e8e;&#x8fd9;&#x4e2a;&#x7c7b;&#x578b;&#x4e2d;&#x5305;&#x542b;&#x4e86;&#x4e00;&#x4e2a",{"_index":8115,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7531;&#x4e8e;&#x8fd9;&#x6837;&#x7684;&#x5b57;&#x8282;&#x5207;&#x7247;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8bf4;&#x5b83;&#x4e0",{"_index":3809,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7531;&#x4e8e;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x7ecf;&#x5e38;&#x662f;&#x4ee5;&#x94fe;&#x5f0f;&#x7ec4;&#x5408;&#x5728;&#x4e00;&#x8d77;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x4e2d;&#x5e94;&#x907f;&#x514d;&#x5927;&#x5199;&#x548c;&#x6362;&#x884c;&#x7b26;&#x3002",{"_index":622,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x7531;&#x4e8e;&#x9700;&#x8981;&#x989d;&#x5916;&#x7684;&#x8bb0;&#x5f55;&#xff0c;&#x56e0;&#x6b64;&#x6784;&#x5efa;&#x65f6;&#x52a0;&#x4e86;&#x7ade;&#x4e89;&#x68c0;&#x6d4b;&#x7684;&#x7a0b;&#x5e8f;&#x8dd1;&#x8d77;&#x6765;&#x4f1a;&#x6162;&#x4e00;&#x4e9b;&#xff0c;&#x4e14;&#x9700;&#x8981;&#x66f4;&#x5927;&#x7684;&#x5185;&#x5b58;&#xff0c;&#x5373;&#x4f7f;&#x662f;&#x8fd9;&#x6837;&#xff0c;&#x8fd9;&#x4e9b;&#x4ee3;&#x4ef7;&#x5bf9;&#x4e8e;&#x5f88;&#x591a;&#x751f;&#x4ea7;&#x73af;&#x5883;&#x7684",{"_index":8414,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x7531;&#x6807;&#x51c6;&#x5e93;&#x4e2d;&#x7684",{"_index":1540,"title":{},"body":{"basic/json.html#序列化":{}}}],["x7531;&#x6b64;&#x5f15;&#x53d1;&#x7684",{"_index":7958,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7531;go",{"_index":2776,"title":{},"body":{"commands/build.html#工具":{}}}],["x754c;&#x3002",{"_index":1298,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x754c;&#x5b9a;&#x7b26;&#x7684;&#x5185;&#x5bb9",{"_index":5465,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7684",{"_index":1226,"title":{},"body":{"basic/oop.html#方法":{},"basic/oop.html#String-方法":{},"basic/map.html#map":{},"basic/json.html#序列化":{},"basic/slice.html#切片操作":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/package.html#包声明":{},"concurrent/channel.html#channel":{},"standards/time.html#Time":{},"basic/basic_data.html#字符串":{},"basic/test.html#性能分析":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/fmt.html#占位符":{},"standards/io/ioutil.html#NopCloser-函数":{},"standards/data/container.html#堆":{},"standards/io/bufio.html#bufio-Reader":{},"standards/os/filepath.html#规整化路径":{},"standards/os/filepath.html#遍历目录":{},"standards/data/math.html#其他函数":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/io/io.html#其他接口":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#sync-Map":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#中间件-Middleware":{}}}],["x7684;&#x3002",{"_index":8272,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x3002;&#x5982;&#x679c;&#x5783;&#x573e;&#x56de;&#x6536;&#x5668;&#x60f3;&#x8981;&#x8fd0;&#x884c;&#x4e86;&#xff0c;&#x90a3;&#x4e48;&#x5b83;&#x5fc5;&#x987b;&#x5148;&#x901a;&#x77e5;&#x5176;&#x5b83;&#x7684",{"_index":6535,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x3002;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":8214,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x4e0d;&#x4e00;&#x81f4",{"_index":1746,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x4e24;&#x4e2a;&#x5b9e;&#x4f8b;&#xff1a",{"_index":3424,"title":{},"body":{"standards/time.html#时区":{}}}],["x7684;&#x4ee3;&#x4ef7;&#x4e5f;&#x4e0d;&#x5c0f;&#xff1b",{"_index":6420,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x4ee3;&#x4ef7;&#x5df2;&#x7ecf;&#x6bd4;&#x8fdb;&#x7a0b;&#x5c0f;&#x4e86;&#x5f88;&#x591a;&#x4e86;&#xff0c;&#x4f46;&#x6211;&#x4eec;&#x4f9d;&#x7136;&#x4e0d;&#x80fd;&#x5927;&#x91cf;&#x521b;&#x5efa",{"_index":6416,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x4ee5;&#x4e0b;&#x6587;&#x4ef6;&#x62f7;&#x8d1d;&#x5230;&#x9879;&#x76e",{"_index":2578,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x7684;&#x4efb;&#x52a1;&#xff1a",{"_index":6465,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x4f18;&#x5148;&#x7ea7",{"_index":5332,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x7684;&#x4f18;&#x5148;&#x7ea7;&#x6700;&#x4f4e;&#x3002",{"_index":1789,"title":{},"body":{"basic/operator.html#优先级":{}}}],["x7684;&#x4f18;&#x5148;&#x7ea7;&#x6700;&#x9ad8;&#xff0c",{"_index":1788,"title":{},"body":{"basic/operator.html#优先级":{}}}],["x7684;&#x4f4d;&#x6570;&#x548c;&#x6307;&#x6570",{"_index":6107,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x7684;&#x4f7f;&#x7528",{"_index":1898,"title":{"standards/database/sql.html#sql-DB-的使用":{}},"body":{"basic/slice.html#append-和-copy":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x7684;&#x4f7f;&#x7528;&#x4f8b;&#x5b50;&#xff08;file",{"_index":7465,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7684;&#x4f7f;&#x7528;&#x6709;&#x70b9;&#x590d;&#x6742;&#xff0c",{"_index":1732,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x4f7f;&#x7528;&#x6761;&#x4ef6;&#x4e3a;&#xff1a",{"_index":9269,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x7684;&#x503c",{"_index":1689,"title":{},"body":{"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{}}}],["x7684;&#x503c;&#x4e3a",{"_index":248,"title":{},"body":{"index.html#类型转换":{},"basic/test.html#性能分析":{},"standards/text/strconv.html#字符串转为整型":{}}}],["x7684;&#x503c;&#x4e5f;&#x53ef;&#x4ee5;&#x662f",{"_index":4314,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7684;&#x503c;&#x4e5f;&#x53ef;&#x4ee5;&#x7a0d;&#x7a0d;&#x5730;&#x6539;&#x53d8",{"_index":4170,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x7684;&#x503c;&#x505a;&#x600e;&#x6837;&#x7684;&#x4fee;&#x6539;&#xff0c;&#x90fd;&#x4e0d;&#x4f1a;&#x7834;&#x574f",{"_index":8058,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x7684;&#x503c;&#x5206;&#x522b;&#x662f;&#x4ec0;&#x4e48;&#xff1f",{"_index":4936,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x7684;&#x503c;&#x53ef;&#x4ee5;&#x5f88;&#x65b9;&#x4fbf;&#x7684;&#x4fee;&#x6539;&#xff0c;&#x901a;&#x8fc7",{"_index":1428,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x503c;&#x5e76;&#x590d;&#x5236;&#x7ed9;&#x53d8;&#x91cf;x",{"_index":2893,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x503c;&#x662f;&#x6587;&#x4ef6;&#x7684;&#x8def;&#x5f84;&#xff0c;&#x4f46;&#x6ce8;&#x610f;&#x6269;&#x5c55;&#x540d;&#x4e3a",{"_index":2607,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x7684;&#x503c;&#x76f8;&#x540c;&#x3002;&#x5982;&#x679c;&#x76f8;&#x540c;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x7acb",{"_index":6362,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x503c;&#x7b49;&#x4e8e",{"_index":1093,"title":{},"body":{"basic/flow.html#for":{}}}],["x7684;&#x503c;&#x8fdb;&#x884c;&#x51cf;&#x4e00;&#x64cd;&#x4f5c",{"_index":8083,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7684;&#x503c;&#xff09",{"_index":5523,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7684;&#x503c;&#xff0c;&#x5728",{"_index":6923,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x7684;&#x503c;&#xff1a",{"_index":4917,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x7684;&#x504f;&#x79fb;&#x91cf;&#x4e3a",{"_index":6909,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x7684;&#x5143;&#x7d20",{"_index":9202,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x7684;&#x5143;&#x7d20;&#x5c0f;&#x4e8e",{"_index":9198,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x7684;&#x5143;&#x7d20;&#x8d4b;&#x503c",{"_index":2430,"title":{},"body":{"basic/var.html#赋值":{}}}],["x7684;&#x5143;&#x7d20;&#xff0c;&#x5219;&#x8fd4;&#x56de",{"_index":9199,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x7684;&#x5168;&#x90e8;&#x4f5c;&#x4e3a;&#x6682;&#x5b58;&#x7a7a;&#x95f4;&#x3002;&#x82e5;&#x53ef;&#x8bfb;&#x53d6;&#x7684;&#x6570;&#x636e;&#x4e0d;&#x5230",{"_index":6860,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x7684;&#x5176;&#x4ed6;&#x65b9;&#x6cd5;&#xff1a",{"_index":5251,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x7684;&#x5177;&#x4f53;&#x5b9e;&#x73b0;&#x5728",{"_index":3476,"title":{},"body":{"standards/time.html#Time":{}}}],["x7684;&#x5185;&#x5b58;&#x5206;&#x914d;&#x5668;&#x91c7;&#x7528;&#x7684;&#x662f",{"_index":413,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x7684;&#x5185;&#x5b58;&#x5730;&#x5740;&#x3002;&#x63a5;&#x4e0b;&#x6765",{"_index":1687,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x7684;&#x5185;&#x5b58;&#x5730;&#x5740;&#xff0c;&#x90a3;&#x4e48",{"_index":1683,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x7684;&#x5185;&#x5bb9;&#x3002;&#x5728;&#x6240;&#x6709;&#x7684",{"_index":7121,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x7684;&#x5185;&#x5bb9;&#x5199;&#x5165",{"_index":7099,"title":{},"body":{"standards/io/io.html#WriteString-函数":{}}}],["x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x5728;&#x6b64;&#x65f6;&#x8fd8;&#x5171;&#x7528;&#x7740;&#x540c;&#x4e00;&#x4e2a;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#xff0c;&#x6240;&#x4ee5;&#xff0c;&#x6211;&#x53ea;&#x9700;&#x901a;&#x8fc7;&#x7b80;&#x5355;&#x7684;&#x518d;&#x5207;&#x7247;&#x64cd;&#x4f5c;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x5229;&#x7528;&#x8fd9;&#x4e2a",{"_index":3934,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5185;&#x5bb9;&#x653e;&#x5728;&#x7b2c;&#x4e00;&#x4e2a;&#x76ee;&#x5f55;&#x4e0b;&#x3002",{"_index":955,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7684;&#x5185;&#x5bb9;&#xff0c;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x6700;&#x591a;&#x6709",{"_index":7670,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7684;&#x5185;&#x90e8;&#x5b9e;&#x73b0;&#x6bd4;&#x8f83;&#x6709;&#x8da3;&#xff1a",{"_index":9232,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x7684;&#x5185;&#x90e8;&#x5b9e;&#x73b0;&#x903b;&#x8f91;&#x5982;&#x4e0b;&#xff1a",{"_index":7656,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7684;&#x5199;&#x5165;&#x3002;&#x5b83;&#x6ca1",{"_index":7132,"title":{},"body":{"standards/io/io.html#TeeReader-函数":{}}}],["x7684;&#x51fa;&#x73b0;&#x3002",{"_index":6810,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x7684;&#x51fd;&#x6570;&#x3002;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x5e94;&#x8be5;&#x5177;&#x6709;&#x4e0a",{"_index":8174,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x51fd;&#x6570;&#x5305;&#x88f9;&#x6210",{"_index":9100,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x7684;&#x51fd;&#x6570;&#x5373;&#x53ef;&#x3002",{"_index":9103,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x7684;&#x51fd;&#x6570;&#x7b7e;&#x540d;&#x521a;&#x597d;&#x7b26;&#x5408;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#x3002",{"_index":8988,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7684;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x6709;&#x4e24;&#x4e2a;&#x53c2;&#x6570;&#x548c;&#x4e00;&#x4e2a;&#x7ed3;&#x679c;&#xff0c;&#x90fd;&#x662f",{"_index":3156,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x7684;&#x51fd;&#x6570;&#xff0c;&#x5e76;&#x628a",{"_index":6357,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x51fd;&#x6570;&#xff0c;&#x8c03;&#x7528",{"_index":6490,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x51fd;&#x6570;&#xff1a",{"_index":5401,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{}}}],["x7684;&#x5206;&#x914d;&#x3002",{"_index":418,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x7684;&#x5207;&#x7247;&#x4f5c;&#x4e3a;&#x4e86;&#x65b0;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x7684;&#x7a97;&#x53e3;&#xff0c;&#x800c;&#x6ca1;&#x6709;&#x5bf9;&#x539f;&#x5207;&#x7247;&#x53ca;&#x5176;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x505a;&#x4efb;&#x4f55;&#x6539;&#x52a8;&#x3002",{"_index":1938,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x7684;&#x5217;&#x8868;&#x5206;&#x9694;&#x7b26;&#x8fde;&#x63a5;&#x8d77;&#x6765;&#xff09;&#xff0c",{"_index":5702,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x7684;&#x5217;&#x8868;&#xff0c;&#x4ee5;&#x4f9b;&#x547d;&#x4ee4;&#x5728;&#x591a;&#x6b21;&#x6d4b;&#x8bd5;&#x65f6;&#x4f7f;&#x7528;&#x3002",{"_index":4209,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7684;&#x5224;&#x65ad;&#x3002;&#x8fd9;&#x4e2a;&#x5305;&#x628a;&#x6240;&#x6709",{"_index":5111,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x7684;&#x522b;&#x540d",{"_index":3721,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x7684;&#x522b;&#x540d;&#xff09;&#x4e3a;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x7684;&#x5207;&#x7247;&#x6765;&#x8868;&#x793a;&#xff0c;&#x800c;&#x540e;&#x8005;&#x5219;&#x53ef;&#x4ee5;&#x7531;&#x4e00;&#x4e2a;&#x4ee5",{"_index":3945,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x529f;&#x80fd;&#x3002",{"_index":6997,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x7684;&#x529f;&#x80fd;&#x548c",{"_index":5610,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x7684;&#x5305;&#x7684;&#x51fd;&#x6570;&#x5c31;&#x6bd4;&#x8f83;&#x5c11;&#x4e86;&#x3002",{"_index":5143,"title":{},"body":{"standards/text/unicode.html#2-5-3-utf16-包":{}}}],["x7684;&#x533a;&#x522b",{"_index":972,"title":{},"body":{"basic/env_config.html#Go-Module":{},"standards/text/strings.html#分割字符串":{},"standards/os/os.html#文件-I-O":{}}}],["x7684;&#x533a;&#x522b;&#x4e00;&#x6837;&#x3002;&#x4e3a;&#x4e86;&#x65b9;&#x4fbf;&#xff0c;&#x8fd8;&#x63d0;&#x4f9b;&#x4e86",{"_index":7424,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7684;&#x533a;&#x522b;&#x540c",{"_index":7423,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7684;&#x533a;&#x522b;&#xff1a",{"_index":7094,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x7684;&#x53c2;&#x6570;&#x3002",{"_index":5794,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x7684;&#x53c2;&#x6570;&#xff0c",{"_index":4286,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7684;&#x53d8;&#x91cf;&#x7684;&#x503c;&#xff0c;&#x5e76;&#x5224;&#x65ad;&#x8be5;&#x503c;&#x662f;&#x5426;&#x4e0e;&#x53c2;&#x6570",{"_index":6361,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x53d8;&#x91cf;&#xff0c;&#x662f;&#x4e00;&#x4e2a;&#x8bfb;&#x5199;&#x9501;&#x3002;&#x57fa;&#x4e8e;&#x8fd9;&#x628a;&#x9501;&#xff0c;&#x6211;&#x8fd8;&#x521b;&#x5efa;&#x4e86;&#x4e24;&#x4e2a;&#x4ee3;&#x8868;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x540d;&#x5b57;&#x5206;&#x522b",{"_index":7902,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7684;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#xff0c;&#x5e76;&#x4e14;&#x6ca1;&#x6709;&#x88ab;&#x903b;&#x8f91;&#x5220;&#x9664;&#xff0c;&#x90a3;&#x4e48;&#x4fee;&#x6539;&#x5b83;&#x5e76;&#x4e0d;&#x4f1a;&#x4f7f;&#x7528;&#x5230;&#x9501;&#xff0c;&#x5bf9;&#x5176;&#x6027;&#x80fd;&#x7684;&#x5f71;&#x54cd;&#x5c31;&#x4f1a;&#x5f88;&#x5c0f;&#x3002",{"_index":8405,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7684;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x548c;&#x810f;&#x5b57;&#x5178;&#x4e2d;&#x7684;&#x952e;&#x503c;&#x5bf9;&#x96c6;&#x5408;&#x5e76;&#x4e0d;&#x662f;&#x5b9e;&#x65f6;&#x540c;&#x6b65;&#x7684;&#xff0c;&#x5b83;&#x4eec;&#x5728;&#x67d0;&#x4e9b;&#x65f6;&#x95f4;&#x6bb5;&#x5185;&#x53ef;&#x80fd;&#x4f1a;&#x6709;&#x4e0d;&#x540c",{"_index":8401,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7684;&#x540c;&#x4e00;&#x7ec4;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x7684;&#x9519;&#x8bef;&#x5728;&#x6784;&#x6210;&#x548c;&#x5904;&#x7406;&#x65b9;&#x5f0f;&#x4e0a;&#x662f;&#x76f8;&#x4f3c;&#x7684;&#x3002",{"_index":624,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x7684;&#x540c;&#x65f6;&#x963b;&#x585e",{"_index":8147,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7684;&#x542b;&#x4e49;&#x662f;&#xff0c;&#x8fd9;&#x662f;&#x4e00;&#x4e2a",{"_index":648,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x7684;&#x5462;&#xff1f",{"_index":6525,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x57fa;&#x672c;&#x7279;&#x5f81;&#xff1a;&#x975e;&#x5206;&#x4ee3;&#xff0c;&#x975e;&#x7d27;&#x7f29;&#xff0c;&#x5199;&#x5c4f;&#x969c;&#xff0c;&#x5e76;&#x53d1;&#x6807;&#x8bb0;&#x6e05;&#x7406;&#x3002",{"_index":512,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x7684;&#x58f0;&#x660e;&#x548c;&#x5b9a;&#x4e49;&#xff1a",{"_index":8986,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7684;&#x591a;&#x4e2a;&#x503c;&#xff0c;&#x8c03;&#x7528",{"_index":8777,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x7684;&#x5927;&#x5c0f;&#x4e0d;&#x662f;&#x56fa;&#x5b9a;&#x4e0d;&#x53d8;&#x7684;&#x3002;&#x5728;&#x83b7;&#x53d6;&#x95f2;&#x7f6",{"_index":404,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x7684;&#x5b50;&#x503c",{"_index":8231,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x5b50;&#x503c;&#x3002",{"_index":8238,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x5b50;&#x503c;&#x3002;&#x81f3;&#x4e8e",{"_index":8236,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x5b57;&#x5178;&#x4e0a;&#x505a;&#x4efb;&#x4f55;&#x64cd;&#x4f5c;&#x90fd;&#x4e0d;&#x4f1a;&#x5f15;&#x8d77;&#x9519;&#x8bef",{"_index":1473,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x5b57;&#x5178;&#x4e0a;&#x6267;&#x884c;&#x8bfb;&#x5199;&#x64cd;&#x4f5c;&#x4f1a;&#x6210;&#x529f;&#x5417",{"_index":1464,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x5b57;&#x5178;&#x4e2d",{"_index":1475,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x5b57;&#x5178;&#x503c;&#x6539;&#x4e3a",{"_index":1431,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x5b57;&#x7b26;&#x4e32;&#x662f;&#x7531;&#x5355;&#x4e2a;&#x5b57;&#x8282;&#x8fde;&#x63a5;&#x8d77;&#x6765;&#x7684;&#x3002;go",{"_index":3730,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x5b57;&#x8282;&#x4f7f",{"_index":3731,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#xff0c;&#x4ee5;&#x5404;&#x79cd;&#x5f62;&#x5f0f;&#x5bfc;&#x51fa;&#x5176;&#x4e2d;&#x7684;&#x5185;&#x5bb9;&#xff0c;&#x8fd8;&#x53ef;&#x4ee5;&#x987a;&#x5e8f;&#x5730;&#x8bfb;&#x53d6;&#x5176;&#x4e2d;&#x7684;&#x5b50;&#x5e8f;&#x5217;&#x3002",{"_index":3868,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#x6765;&#x521b;&#x5efa;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x3002",{"_index":3891,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5b57;&#x8282;&#x6570;&#xff0c;&#x5426;&#x5219;&#x8ba9",{"_index":3901,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5b57;&#x8282;&#x8fd8;&#x539f;&#xff0c;&#x4f7f;&#x5f97;&#x518d;&#x6b21;&#x8c03;&#x7528",{"_index":6956,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x7684;&#x5b58;&#x5728;&#x3002",{"_index":958,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x7684;&#x5b89;&#x88c5;&#x76ee;&#x5f55;&#xff08",{"_index":943,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7684;&#x5b89;&#x88c5;&#x76ee;&#x5f55;&#xff0c;go",{"_index":934,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7684;&#x5b9a;&#x4e49;&#x5982;&#x4e0b;&#xff1a",{"_index":5783,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x7684;&#x5b9a;&#x4f4d;&#x4e0d;&#x662f;&#x505a;&#x7c7b;&#x4f3c;&#x8fde;&#x63a5;&#x6c60;&#x7684;&#x4e1c;&#x897f;&#xff0c;&#x5b83;&#x7684;&#x7528;&#x9014;&#x4ec5;&#x4ec5;&#x662f;&#x589e;&#x52a0",{"_index":8305,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7684;&#x5b9e;&#x4f8b",{"_index":6817,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x7684;&#x5b9e;&#x4f8b;&#x3002;&#x8fd9;&#x4e09;&#x4e2a;&#x51fd;&#x6570;&#x5bf9;&#x5e94;&#x4e09;&#x4e2a;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#xff1a",{"_index":7496,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x7684;&#x5b9e;&#x4f8b;&#x5fc5;&#x987b;&#x901a;&#x8fc7",{"_index":3547,"title":{},"body":{"standards/time.html#定时器":{}}}],["x7684;&#x5b9e;&#x4f8b;&#xff09;&#xff0c",{"_index":6844,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["x7684;&#x5b9e;&#x4f8b;&#xff0c;&#x6bd4;&#x5982;&#xff1a",{"_index":4787,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x7684;&#x5b9e;&#x4f8b;&#xff0c;&#x800c;&#x6211;&#x4eec;&#x73b0;&#x5728;&#x6709;&#x4e00;&#x4e2a",{"_index":4786,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x7684;&#x5b9e;&#x73b0;&#x3002",{"_index":7624,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7684;&#x5b9e;&#x73b0;&#x4e2d;&#xff0c;&#x5982;&#x679c;&#x5b57;&#x7b26;&#x4e32;&#x8868;&#x793a;&#x7684;&#x6574;&#x6570;&#x8d85;&#x8fc7;&#x4e86",{"_index":4937,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x7684;&#x5b9e;&#x73b0;&#x4f1a;&#x5148;&#x6267;&#x884c",{"_index":7593,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7684;&#x5b9e;&#x73b0;&#xff0c;&#x800c;&#x662f",{"_index":9299,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x7684;&#x5bf9;&#x5e94;&#x7684",{"_index":1814,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x7684;&#x5bf9;&#x8c61;&#x662f",{"_index":4488,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x7684;&#x5c01;&#x88c5;&#x3002",{"_index":7426,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7684;&#x5c01;&#x88c5;&#x3002;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x662f;&#x8d44;&#x6e90;&#xff0c;go",{"_index":7438,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7684;&#x5c01;&#x88c5;&#x51fd;&#x6570;&#x662f",{"_index":7621,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7684;&#x5c3e;&#x90e8;&#x5f00;&#x59cb;&#x8ffd;&#x52a0;&#x6570;&#x636e;&#x3002;&#x6bd4;&#x5982;&#x4e0b;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff1a",{"_index":1901,"title":{},"body":{"basic/slice.html#append-和-copy":{}}}],["x7684;&#x5e38;&#x89c1;&#x7528;&#x6cd5;&#xff0c;&#x662f;&#x8bfb;&#x53d6;&#x67d0;&#x4e2a;&#x76ee;&#x5f55;&#x4e0b;&#x6240;&#x6709;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x6bd4;&#x5982;&#x5199;&#x5355;&#x5143;&#x6d4b;&#x8bd5;&#x65f6;&#xff0c;&#x8bfb;&#x53d6",{"_index":5770,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x7684;&#x5e42;&#x51fd;&#x6570",{"_index":6081,"title":{},"body":{"standards/data/math.html#幂次函数":{}}}],["x7684;&#x5f15;&#x7528",{"_index":1880,"title":{},"body":{"basic/slice.html#slice":{},"standards/io/bufio.html#bufio-Reader":{}}}],["x7684;&#x5f15;&#x7528;&#xff0c;&#x5b83;&#x4e0d;&#x5b58;&#x50a8;&#x6570;&#x636e;&#xff0c;&#x53ea;&#x662f;&#x5bf9",{"_index":1752,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x5f62;&#x5f0f;&#x3002",{"_index":8877,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x7684;&#x5f62;&#x5f0f;&#x7684;&#x597d;&#x5904;&#x662f;&#x5728;&#x7f16;&#x8bd1;&#x8fc7;&#x7a0b;&#x4e2d;&#x53ef;&#x4ee5;&#x68c0;&#x67e5;&#x65b9;&#x6cd5;&#x7684;&#x9519;&#x8bef;&#xff0c;&#x800c;&#x65e0;&#x6cd5;&#x68c0;&#x67e5",{"_index":8824,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x7684;&#x60c5;&#x51b5;&#x3002;&#x5982;&#x679c;&#x901a;&#x9053;&#x5df2;&#x6ee1;&#xff0c;&#x90a3;&#x4e48;&#x5bf9;&#x5b83;&#x7684;&#x6240;&#x6709;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x90fd;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x901a;&#x9053;&#x4e2d;&#x6709;&#x5143;&#x7d20;&#x503c;&#x88ab;&#x63a5;&#x6536;&#x8d70;&#x3002;&#x76f8;&#x5bf9;&#x7684;&#xff0c;&#x5982;&#x679c;&#x901a;&#x9053;&#x5df2;&#x7a7a;&#xff0c",{"_index":2975,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x60c5;&#x51b5;&#x3002;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x5728;&#x51c6;&#x5907;&#x597d;&#x5143;&#x7d20;&#x503c;&#x7684;&#x526f;&#x672c;&#x4e4b;&#x540e;&#xff0c;&#x4e00;&#x5b9a;&#x4f1a;&#x5220;&#x9664;&#x6389;&#x901a;&#x9053;&#x4e2d;&#x7684;&#x539f;&#x503c;&#xff0c;&#x7edd;&#x4e0d;&#x4f1a;&#x51fa;&#x73b0;&#x901a;&#x9053;&#x4e2d;&#x4ecd;&#x6709;&#x6b8b;&#x7559;&#x7684;&#x60c5;&#x51b5;&#x3002",{"_index":2967,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x60c5;&#x51b5;&#x4e0b;&#x624d;&#x4f1a;&#x53bb;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684",{"_index":6272,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x5f53;&#x6b21;&#x8fd4;&#x56de;&#x7684",{"_index":6824,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x7684;&#x610f;&#x601d;&#x662f;&#xff1a;&#x4e0d;&#x9700;&#x8981;&#x6301;&#x4e45;&#x4f7f;&#x7528;&#x7684;&#x67d0;&#x4e00;&#x7c7b;&#x503c;&#x3002;&#x8fd9;&#x7c7b;&#x503c;&#x5bf9;&#x4e8e;&#x7a0b;&#x5e8f;&#x6765;&#x8bf4;&#x53ef;&#x6709;&#x53ef;&#x65e0;&#xff0c;&#x4f46;&#x5982;&#x679c;&#x6709;&#x7684;&#x8bdd;&#x4f1a;&#x660e;&#x663e;&#x66f4;&#x597d;&#x3002;&#x5b83;&#x4eec;&#x7684;&#x521b;&#x5efa;&#x548c;&#x9500;&#x6bc1;&#x53ef;&#x4ee5;&#x5728",{"_index":8284,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7684;&#x610f;&#x601d;&#xff0c",{"_index":5490,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7684;&#x6240;&#x6709",{"_index":1757,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x6267;&#x884c;&#x6808;&#x4e0a;&#x5e76;&#x6267;&#x884c",{"_index":6489,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6267;&#x884c;&#x9700;&#x8981",{"_index":6499,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6269;&#x5bb9;&#x7b56;&#x7565",{"_index":3899,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x62a2;&#x5360;&#xff0c;&#x53ea;&#x6709;&#x957f;&#x65f6;&#x95f4;&#x963b;&#x585e;&#x4e8e;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#xff0c;&#x6216;&#x8005;&#x8fd0;&#x884c;&#x4e86;&#x8f83;&#x957f;&#x65f6;&#x95f4;&#x624d;&#x4f1a;&#x88ab;&#x62a2;&#x5360;&#x3002;runtim",{"_index":6542,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6307",{"_index":1708,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x6307;&#x9488;&#x57fa;&#x672c;&#x5c31;&#x662f;&#x4e00;&#x79cd;&#x5f15;&#x7528;&#x3002",{"_index":1710,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x6307;&#x9488;&#xff0c;&#x4ece;&#x5176;&#x5b83;&#x7c7b;&#x578b;&#x8bfb;&#x53d6",{"_index":5998,"title":{},"body":{"standards/text/strings.html#从字符串中读取内容":{}}}],["x7684;&#x6307;&#x9488;&#xff0c;&#x53cd;&#x800c;&#x4f1a;&#x4ea7;&#x751f;&#x9519;&#x8bef",{"_index":1761,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x63a5",{"_index":8245,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#xff0c;&#x624d;&#x80fd;&#x591f;&#x8d77;&#x5230;&#x611f;&#x77e5;&#x64a4;&#x9500;&#x4fe1;&#x53f7;&#x7684;&#x4f5c;&#x7528;&#x3002",{"_index":8253,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x652f;&#x6301;&#x5305;&#x542b;&#x4e09;&#x4e2a;&#x5305",{"_index":5103,"title":{},"body":{"standards/text/unicode.html#unicode":{}}}],["x7684;&#x652f;&#x6301;&#xff0c;p",{"_index":6500,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6539;&#x52a8;&#x65e0;&#x6cd5;&#x4f5c;&#x7528;&#x5728;&#x5916;&#x90e8;&#x7684;&#x53d8;&#x91cf;&#x4e0a;&#xff0c;&#x4f8b;&#x5982;&#xff1a",{"_index":1742,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x6570;&#x91cf",{"_index":1427,"title":{},"body":{"basic/map.html#map":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6570;&#x91cf;&#x3002;&#x76f8;&#x5bf9;&#x5e94;&#x7684;&#xff0c;&#x8fd9;&#x4e2a;&#x7c7b;&#x578b;&#x7684",{"_index":8081,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7684;&#x6570;&#x91cf;&#x51b3;&#x5b9a;&#x4e86;&#x7cfb;&#x7edf;&#x5185;&#x6700;&#x5927;&#x53ef;&#x5e76;&#x884c;&#x7684",{"_index":6245,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6570;&#x91cf;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":6243,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6570;&#x91cf;&#x5c31;&#x589e;&#x52a0;&#x4e86;&#x3002",{"_index":6511,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6570;&#x91cf;&#x76f8;&#x540c;&#x3002",{"_index":8061,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7684;&#x6570;&#x91cf;&#x76f8;&#x5bf9;&#x6052;&#x5b9a;&#xff0c;&#x9ed8;&#x8ba4;&#x4e0",{"_index":6504,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6570;&#x91cf;&#xff0c",{"_index":6246,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6570;&#x91cf;&#xff0c;&#x4f46;&#x662f;&#x4ee3;&#x4ef7;&#x5f88;&#x5927;&#x3002",{"_index":6515,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6570;&#x91cf;&#xff0c;&#x90a3;&#x4e48;&#x4f7f;&#x7528",{"_index":8162,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x6574;&#x6570;&#x548c;&#x5c0f;&#x6570;&#x90e8;&#x5206",{"_index":6105,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x7684;&#x6574;&#x6570;&#x548c;&#x6709;&#x7406;&#x6570;&#xff0c;&#x5927;&#x591a;&#x6570;&#x60c5;&#x51b5;&#x4e0b;&#x5b83;&#x4eec;&#x4fee;&#x6539",{"_index":4379,"title":{},"body":{"standards/data/big.html#big":{}}}],["x7684;&#x6587;&#x4ef6;&#x5217;&#x8868;&#x6216;&#x8005",{"_index":5760,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x7684;&#x6587;&#x4ef6;&#x6a21;&#x5f0f;&#x5339;&#x914d;&#x3002;&#x6a21;&#x5f0f;&#x8bed;&#x6cd5;&#x5982;&#x4e0b;&#xff1a",{"_index":5736,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x7684;&#x6587;&#x4ef6;&#x771f;&#x5b9e;&#x4f4d;&#x7f6e;&#xff0c;&#x4f1a;&#x4ee5;&#x76f8;&#x5bf9;&#x4e8e;&#x6587;&#x4ef6;&#x5934;&#x90e8;&#x8d77;&#x59cb;&#x70b9;&#x7684;&#x6587;&#x4ef6;&#x5f53;&#x524d;&#x4f4d;&#x7f6e;&#x6765;&#x8868;&#x793a;&#x3002;&#x6587;&#x4ef6;&#x7b2c;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x7684;&#x504f;&#x79fb;&#x91cf;&#x4e3a",{"_index":7450,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7684;&#x6587;&#x6863;&#x6ce8;&#x91ca;&#xff1a",{"_index":2805,"title":{},"body":{"commands/build.html#工具":{}}}],["x7684;&#x65b0;&#x5185;&#x5bb9;&#x5c31;&#x88ab;&#x6cc4;&#x9732;&#x51fa;&#x6765;&#x4e86;&#x3002",{"_index":3937,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x65b9;&#x6cd5;&#xff0c;&#x5b83;&#x7684;&#x4e3b;&#x8981;&#x529f;&#x80fd;&#x662f;&#x628a;&#x76f8;&#x5e94;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x6682;&#x5b58;&#x7684;&#x6240;&#x6709;&#x6570;&#x636e;&#xff0c;&#x90fd;&#x5199;&#x5230;&#x5e95;&#x5c42;&#x5199;&#x5165;&#x5668;&#x4e2d;&#x3002;&#x6570;&#x636e;&#x4e00;&#x65e6;&#x88ab;&#x5199;&#x8fdb;&#x5e95;&#x5c42;&#x5199;&#x5165;&#x5668;&#xff0c",{"_index":5538,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7684;&#x65b9;&#x6cd5;&#xff0c;&#x6765;&#x81ea;&#x5b9a;&#x4e49;&#x8be5;&#x7c7b;&#x578b;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x8868;&#x793a;&#x5f62;&#x5f0f;&#x3002;&#x8fd9;&#x4e2a",{"_index":1294,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x7684;&#x65f6;&#x5019",{"_index":539,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x7684;&#x65f6;&#x5019;&#x4f7f;&#x7528;&#x7684;&#x90fd;&#x662f;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x3002;&#x8fd9;&#x662f;&#x7531;&#x4e8e",{"_index":6369,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x65f6;&#x5019;&#x6307;&#x5b9a;&#x4e86;&#x5bb9;&#x91cf;&#x53c2;&#x6570;&#xff0c;&#x90a3;&#x5185;&#x5b58;&#x7ba1;&#x7406;&#x5668;&#x4f1a;&#x6839;&#x636e;&#x6307;&#x5b9a;&#x7684;&#x5bb9;&#x91cf;&#x7684;&#x503c;&#x5148;&#x5212;&#x5206;&#x4e00;&#x5757;&#x5185;&#x5b58;&#x7a7a;&#x95f4;&#xff0c;&#x7136;&#x540e;&#x624d;&#x5728;&#x5176;&#x4e2d;&#x5b58;&#x653e;&#x6709;&#x6570;&#x7ec4;&#x5143;&#x7d20;&#xff0c",{"_index":1946,"title":{},"body":{"basic/slice.html#长度和容量":{}}}],["x7684;&#x65f6;&#x5019;&#x6ce8;&#x518c;&#x4e86;&#x4e00;&#x4e2a",{"_index":8323,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7684;&#x65f6;&#x5019;&#xff0c",{"_index":4310,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7684;&#x65f6;&#x5019;&#xff0c;&#x4e0e;&#x4e4b;&#x5bf9;&#x5e94;&#x7684;&#x662f;&#x5207;&#x7247;&#x4e2d;&#x7684;&#x7b2c",{"_index":1094,"title":{},"body":{"basic/flow.html#for":{}}}],["x7684;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x624d;&#x4f1a;&#x5728;&#x9501;&#x7684;&#x4fdd;&#x62a4;&#x4e0b;&#x53bb;&#x8bbf;&#x95ee;&#x810f;&#x5b57;&#x5178;&#x3002",{"_index":8384,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7684;&#x65f6;&#x5019;&#xff0c;&#x5c31;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x4e86;&#x3002",{"_index":8372,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7684;&#x65f6;&#x533a;&#x662f",{"_index":3501,"title":{},"body":{"standards/time.html#Time":{}}}],["x7684;&#x65f6;&#x95f4;&#x662f",{"_index":4963,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x7684;&#x662f;&#x901a;&#x8fc7",{"_index":3579,"title":{},"body":{"standards/time.html#定时器":{}}}],["x7684;&#x666e;&#x901a;&#x6587;&#x672c;&#x4e86;&#x3002",{"_index":4312,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5143;&#x7d20",{"_index":1887,"title":{},"body":{"basic/slice.html#slice":{}}}],["x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5b57;&#x6bb5;&#x8868;&#x793a;&#x5730;&#x70b9;&#x65f6;&#x533a;&#x4fe1;&#x606f;&#x3002;&#x672c;&#x7ae0;&#x540e;&#x9762;&#x4f1a;&#x4e13;&#x95e8;&#x4ecb;&#x7ecd;&#x3002",{"_index":3487,"title":{},"body":{"standards/time.html#Time":{}}}],["x7684;&#x6700;&#x540e;&#x4e00;&#x9053;&#x4fdd;&#x9669;&#xff0c;&#x5c31;&#x662f;&#x76d1;&#x63a7;&#x7ebf;&#x7a0b",{"_index":558,"title":{},"body":{"advance/gc.html#监控":{}}}],["x7684;&#x6700;&#x5927;&#x4e2a;&#x6570;&#x3002;&#x8fd9;&#x91cc;&#x7684;&#x903b;&#x8f91",{"_index":4196,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7684;&#x672c;&#x5730;&#x961f;&#x5217;&#x4e2d;&#x83b7;&#x53d6",{"_index":6487,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6743;&#x9650",{"_index":7377,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7684;&#x6784;&#x5efa;&#x5de5;&#x5177;&#x5bf9;&#x5305;&#x542b",{"_index":2823,"title":{},"body":{"commands/build.html#工具":{}}}],["x7684;&#x6807;&#x51c6;&#x5305;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":2138,"title":{},"body":{"basic/package.html#包":{}}}],["x7684;&#x6807;&#x51c6;&#x5e93;&#x4e5f;&#x5728;&#x8fd9;&#x4e2a;&#x4f4d;&#x7f6e;&#x3002;&#x76ee;&#x5f55;&#x7ed3;&#x6784;&#x4e0",{"_index":935,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7684;&#x6807;&#x51c6;&#x6a21;&#x5f0f;&#x6765;&#x6784;&#x5efa;&#x534f;&#x4f5c;&#x6d41;&#x7a0b;&#x3002;&#x5982;&#x679c;&#x5728;&#x8c03;&#x7528",{"_index":8157,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x6807;&#x5fd7;&#xff1b;&#x540e;&#x9762;&#x534a;&#x53e5;&#x7684;&#x610f;&#x601d;&#x662f;&#x5f53;&#x524d;&#x5806;&#x4e0a;&#x7684;&#x6d3b;&#x8dc3;&#x5bf9;&#x8c61;&#x5927;&#x4e8e;&#x6211;&#x4eec;&#x521d;&#x59cb;&#x5316;&#x65f6;&#x5019;&#x8bbe;&#x7f6e;&#x7684",{"_index":536,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x7684;&#x6807;&#x8bc6;&#x7b26;&#x4f5c;&#x7528;&#x57df;&#x662f;&#x57fa;&#x4e8e;&#x4ee3;&#x7801;&#x5757;&#x7684;&#x3002;&#x4ee3;&#x7801;&#x5757;&#x5c31;&#x662f;&#x5305;&#x88f9;&#x5728;&#x4e00;&#x5bf9;&#x5927;&#x62ec;&#x53f7;&#x5185;&#x90e8;&#x7684;&#x58f0;&#x660e;&#x548c;&#x8bed;&#x53e5;&#xff0c;&#x5e76;&#x4e14;&#x662f;&#x53ef;&#x5d4c;&#x5957;&#x7684;&#x3002;&#x4ee3;&#x7801;&#x5757;&#x5185;&#x90e8;&#x58f0;&#x660e;&#x7684;&#x540d;&#x5b57;&#x662f;&#x65e0;&#x6cd5",{"_index":2256,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x7684;&#x6807;&#x8bc6;&#xff0c;&#x7b49;&#x4ef7;&#x4e8",{"_index":2505,"title":{},"body":{"standards/log.html#Logger":{}}}],["x7684;&#x6982;&#x5ff5;&#x6765;&#x89e3;&#x51b3;&#x8fd9;&#x4e9b;&#x95ee;&#x9898;&#xff0c;go",{"_index":6427,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6d88;&#x606f;&#x5c31;&#x4e5f",{"_index":2999,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x6e90;&#x6587;&#x4ef6;&#x4e2d;&#x3002",{"_index":2808,"title":{},"body":{"commands/build.html#工具":{}}}],["x7684;&#x6e90;&#x7801;&#x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c;&#x5b83;&#x521b;&#x5efa;&#x4e86;&#x4e00;&#x4e2a",{"_index":9004,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7684;&#x6e90;&#x7801;&#xff0c;&#x4e86;&#x89e3;&#x5176;&#x5b9e;&#x73b0;&#x65b9;&#x5f0f;&#x3001;&#x6280;&#x5de7;&#x3002",{"_index":7645,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7684;&#x6e90;&#x7801;&#xff0c;&#x4f1a;&#x53d1;&#x73b0;&#x5176;&#x5b9e;&#x4e5f;&#x662f;&#x901a;&#x8fc7",{"_index":6899,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x7684;&#x7236;&#x76ee;&#x5f55;&#x8981;&#x6709;&#x6267;&#x884c;&#xff08;&#x641c;&#x7d22;&#xff09;&#x6743;&#x9650;&#x3002;&#x800c;&#x53ea;&#x8981",{"_index":7504,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x7684;&#x72b6;&#x6001;&#x4e0d;&#x53d8;&#xff0c;&#x5373;&#x4f7f;&#x5f53;&#x524d;&#x7684",{"_index":7963,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7684;&#x73af;&#x5883;&#x9700;&#x8981;&#x5f00;&#x542f",{"_index":980,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x7684;&#x73af;&#x5f62;&#x94fe;&#x8868",{"_index":5271,"title":{},"body":{"standards/data/container.html#环":{}}}],["x7684;&#x7528;&#x6cd5",{"_index":9064,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7684;&#x76ee;&#x7684;&#x3002",{"_index":7009,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["x7684;&#x76ee;&#x7684;&#xff1a",{"_index":9060,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7684;&#x76f8;&#x5bf9;&#x8def;&#x5f84;&#xff0c",{"_index":5672,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x7684;&#x786c;&#x94fe;&#x63a5;&#x3002;&#x5982;&#x679c;&#x51fa;&#x9519;&#xff0c;&#x4f1a;&#x8fd4;&#x56d",{"_index":7600,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7684;&#x7b26;&#x53f7",{"_index":6117,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x7684;&#x7b26;&#x53f7;&#x8fd4;&#x56de",{"_index":6116,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x7684;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#x3002;&#x5982;&#x679c;&#x51fa;&#x9519;&#xff0c;&#x4f1a;&#x8fd4;&#x56d",{"_index":7615,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x5f00;&#x59cb",{"_index":1889,"title":{},"body":{"basic/slice.html#slice":{}}}],["x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x7684;&#x7d22;&#x5f15;&#xff09;&#xff0c",{"_index":5930,"title":{},"body":{"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["x7684;&#x7b2c;&#x4e8c;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x6765;&#x5224;&#x65ad;&#x901a;&#x9053;&#x662f;&#x5426;&#x5df2;&#x7ecf;&#x5173;&#x95ed;&#x3002;&#x4e00;&#x65e6;&#x53d1;&#x73b0;&#x67d0;&#x4e2a;&#x901a;&#x9053;&#x5173;&#x95ed;&#x4e86;&#xff0c;&#x6211;&#x4eec;&#x5c31;&#x5e94;&#x8be5;&#x53ca;&#x65f6;&#x5730;&#x5c4f;&#x853d;&#x6389;&#x5bf9;&#x5e94;&#x7684;&#x5206;&#x652f;&#x6216;&#x8005;&#x91c7;&#x53d6;&#x5176;&#x4ed6;&#x63aa;&#x65bd;&#x3002;&#x8fd9;&#x5bf9",{"_index":3027,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x7c7b",{"_index":4796,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x7684;&#x7c7b;&#x578b",{"_index":296,"title":{},"body":{"index.html#类型断言":{},"basic/oop.html#方法":{},"standards/os/filepath.html#遍历目录":{}}}],["x7684;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x88ab;&#x7528;&#x6765;&#x5b58;&#x50a8;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x3002",{"_index":8006,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x7684;&#x7c7b;&#x578b;&#xff1a",{"_index":6851,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{}}}],["x7684;&#x7ec4;&#x5408;&#xff0c;&#x6211;&#x4eec;&#x901a;&#x8fc7",{"_index":2324,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7684;&#x7ed3;&#x5c3e;&#xff0c;&#x8fd4;&#x56de;&#x503c",{"_index":7679,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7684;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x5c06;&#x4e0d;&#x80fd;&#x518d;&#x5305;&#x542b",{"_index":2047,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7684;&#x7ed3;&#x679c",{"_index":5436,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7684;&#x7ed3;&#x679c;&#x662f",{"_index":1796,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x7684;&#x7edd;&#x5bf9;&#x503c",{"_index":6086,"title":{},"body":{"standards/data/math.html#幂次函数":{}}}],["x7684;&#x7edd;&#x5bf9;&#x503c;&#x7684;&#x6574;&#x6570;&#x90e8;&#x5206",{"_index":6087,"title":{},"body":{"standards/data/math.html#幂次函数":{}}}],["x7684;&#x7f13;&#x5b58;&#x961f;&#x5217",{"_index":2942,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x7f16;&#x7a0b;&#x65b9;&#x6cd5;&#x80fd;&#x591f;&#x8ba9;&#x4e00;&#x4e2a",{"_index":6214,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x7f29;&#x5199;&#x3002",{"_index":345,"title":{},"body":{"index.html#编码":{}}}],["x7684;&#x7f29;&#x5199;&#xff09;&#xff0c",{"_index":6234,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x7f29;&#x5199;&#xff09;&#xff0c;&#x4ee3;&#x8868;&#x7684;&#x662f;&#x7cfb;&#x7edf;&#x7ea7;&#x7ebf;&#x7a0b;&#xff0c;&#x7531;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7ba1;&#x7406;&#x3002",{"_index":6250,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x7f29;&#x5199;&#xff09;&#xff0c;&#x4ee3;&#x8868;&#x7684;&#x662f;&#x7cfb;&#x7edf;&#x7ebf;&#x7a0b;&#x3002;g",{"_index":6481,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x7f29;&#x5199;&#xff09;&#xff0c;&#x662f;&#x8854;&#x63a5",{"_index":6237,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x7f29;&#x5199;&#xff0c;&#x4f46;&#x4e5f;&#x53ef;&#x4ee5;&#x4ee3;&#x8868",{"_index":348,"title":{},"body":{"index.html#编码":{}}}],["x7684;&#x80fd;&#x529b;&#x3002",{"_index":4202,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7684;&#x8303;&#x56f4;&#x5185;&#x3002",{"_index":254,"title":{},"body":{"index.html#类型转换":{}}}],["x7684;&#x8303;&#x56f4;&#x5185;&#xff0c;&#x8fd9;&#x4e24;&#x79cd;&#x7f16;&#x7801;&#x8868;&#x793a;&#x7684;&#x5b57;&#x7b26;&#x90fd;&#x662f;&#x76f8;&#x540c;&#x7684;&#x3002",{"_index":361,"title":{},"body":{"index.html#编码":{}}}],["x7684;&#x8303;&#x56f4;&#x8c03;&#x7528",{"_index":5532,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7684;&#x884c;&#x4e3a;&#x5219;&#x4f9d;&#x8d56;&#x4e8e;&#x64cd;&#x4f5c;&#x6570;&#x662f;&#x5426;&#x4e3a;&#x5168;&#x4e3a;&#x6574;&#x6570;&#xff0c;&#x6bd4;&#x5982",{"_index":1795,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x7684;&#x884c;&#x4e3a;&#x548c",{"_index":5628,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x7684;&#x89e3;&#x6784;&#x8d4b;&#x503c;&#x7684;&#x8bed;&#x6cd5",{"_index":3149,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x7684;&#x89e6;&#x53d1;&#x6761;&#x4ef6",{"_index":553,"title":{},"body":{"advance/gc.html#监控":{}}}],["x7684;&#x89e6;&#x53d1;&#x9608;&#x503c",{"_index":542,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x7684;&#x8bdd",{"_index":1812,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x7684;&#x8bed;&#x53e5;&#x4e4b;&#x540e;&#x7684;&#x6240;&#x6709;&#x8bed;&#x53e5;&#xff0c;&#x90fd;&#x4e0d;&#x4f1a;&#x6709;&#x4efb;&#x4f55;&#x6267;&#x884c;&#x673a;&#x4f1a",{"_index":741,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x7684;&#x8bed;&#x6cd5;&#x548c",{"_index":5762,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x7684;&#x8bed;&#x6cd5;&#x548c;&#x6570;&#x7ec4;&#x5f88;&#x50cf;&#xff0c;&#x7531;&#x4e8e;&#x6570;&#x7ec4;&#x957f;&#x5ea6;&#x662f;&#x56fa;&#x5b9a;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x4f7f;&#x7528",{"_index":1863,"title":{},"body":{"basic/slice.html#slice":{}}}],["x7684;&#x8bfb;&#x53d6;&#x540e;&#x5173;&#x95ed;&#x5b83;&#x3002;&#x8bfb;&#x53d6;&#x5b8c;&#x6bd5;&#x5e76;&#x5173;&#x95ed;&#x540e;&#xff0c;&#x5ba2;&#x6237;&#x7aef;&#x53ef;&#x4ee5",{"_index":8867,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x7684;&#x8bfb;&#x53d6;&#x90fd;&#x5339;&#x914d;&#x4e8e;&#x5bf9;&#x5e94;&#x7684;&#x5bf9",{"_index":7131,"title":{},"body":{"standards/io/io.html#TeeReader-函数":{}}}],["x7684;&#x8c03;&#x5ea6;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x4e00;&#x4e2a",{"_index":6238,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x8c03;&#x5ea6;&#x5168;&#x8981;&#x9760",{"_index":6441,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x8c03;&#x5ea6;&#x95ee;&#x9898;&#x5c31;&#x53d8;&#x6210;&#x4e86",{"_index":6450,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x8d1f;&#x62c5;&#x3002;&#x56e0;&#x4e3a",{"_index":8307,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7684;&#x8def;&#x5f84;&#xff0c;&#x5c06;&#x8fd4;&#x56de;&#x9519;&#x8bef;&#x3002",{"_index":5677,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x7684;&#x8eab;&#x4efd;&#x4fe1;&#x606f;&#x3002;&#x8bb0;&#x5f55;&#x4e0b;&#x6240;&#x6709;&#x7684;&#x540c;&#x6b65;&#x4e8b;&#x4ef6;&#xff0c;&#x6bd4;&#x5982",{"_index":8410,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x7684;&#x8f6c;&#x6362",{"_index":6097,"title":{},"body":{"standards/data/math.html#类型转化函数":{}}}],["x7684;&#x8f6c;&#x6362;&#x3002",{"_index":5109,"title":{},"body":{"standards/text/unicode.html#unicode":{}}}],["x7684;&#x8fd0;&#x884c;&#x73af;&#x5883;&#xff08;&#x5185;&#x6838;&#x7ebf;&#x7a0b;&#x548c;&#x4e0a;&#x4e0b;&#x6587;&#xff09;&#x3002",{"_index":6502,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x8fd0;&#x884c;&#x7ed3;&#x675f;&#x3002;&#x66f4;&#x5177;&#x4f53;&#x5730;&#x8bf4;&#x5c31;&#x662f;&#xff1a;&#x8ba9;&#x5176;&#x4ed6;&#x7684",{"_index":8063,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7684;&#x8fd4;&#x56de;&#x503c",{"_index":5469,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7684;&#x8fde;&#x63a5;&#x3002",{"_index":4520,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x7684;&#x8fde;&#x63a5;&#xff0c;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x670d;&#x52a1;&#x534f;&#x7a0b;&#x3002;&#x8be5;&#x670d;&#x52a1;&#x534f;&#x7a0b;&#x8bfb;&#x53d6;&#x8bf7;&#x6c42;&#x7136;&#x540e;&#x8c03;&#x7528",{"_index":8934,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7684;&#x8fed;&#x4ee3;&#x987a;&#x5e8f;&#x662f;&#x4e0d;&#x786e;&#x5b9a;&#x7684;&#x3002;&#x53ef;&#x4ee5;&#x5148;&#x4f7f;&#x7528",{"_index":1439,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x901a;&#x4fe1;&#x6765;&#x8ba9;&#x4e00;&#x4e2a",{"_index":6217,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x901a;&#x9053;&#xff0c;&#x4e0d;&#x8bba;&#x5b83;&#x7684;&#x5177;&#x4f53;&#x7c7b;&#x578b;&#x662f;&#x4ec0;&#x4e48;&#xff0c;&#x5bf9;&#x5b83;&#x7684;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x548c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x90fd;&#x4f1a;&#x6c38;&#x4e45;&#x5730;&#x5904;&#x4e8e;&#x963b;&#x585e;&#x72b6;&#x6001",{"_index":2983,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x903b;&#x8f91",{"_index":4195,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7684;&#x90a3;&#x4e2a;&#x503c;&#xff0c;&#x6240;&#x4ee5;&#x9700;&#x8981;&#x7684;&#x4ecd;&#x7136;&#x662f;&#x6307;&#x5411;&#x8fd9;&#x4e2a;&#x6307;&#x9488;&#x503c;&#x7684;&#x6307;&#x9488;&#x3002",{"_index":8015,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x7684;&#x91cd;&#x8bd5;&#xff0c;&#x4ece;&#x8fde;&#x63a5;&#x6c60;&#x4e2d;&#x83b7;&#x53d6",{"_index":4506,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x7684;&#x9519",{"_index":7677,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7684;&#x9519;&#x8bef;&#x3002",{"_index":6833,"title":{},"body":{"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/os/os.html#文件-I-O":{},"standards/net/http.html#Request":{}}}],["x7684;&#x9519;&#x8bef;&#x503c;&#x3002;&#x5982;&#x679c;&#x5728;&#x5230;&#x8fbe;&#x7ed3;&#x5c3e;&#x524d;&#x9047;&#x5230;&#x9519;&#x8bef;&#xff0c;&#x4f1a;&#x8fd4;&#x56de;&#x4e4b;&#x524d;&#x6210;&#x529f;&#x8bfb;&#x53d6;&#x7684;&#x540d;&#x5b57;&#x6784;&#x6210;&#x7684;&#x5207;&#x7247;&#x548c;&#x8be5;&#x9519;&#x8bef;&#x3002",{"_index":7683,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7684;&#x9519;&#x8bef;&#x6765;&#x89e3;&#x91ca;&#x4e3a;&#x4ec0;&#x4e48;&#x6ca1;&#x6709;&#x8fd4;&#x56de;&#x66f4;&#x591a;&#x7684;&#x5b57;&#x8282;&#x3002",{"_index":6858,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x7684;&#x9519;&#x8bef;&#xff09",{"_index":988,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x7684;&#x952e;&#x503c;&#x5bf9;&#x3002",{"_index":8869,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x7684;&#x952e;&#x548c;&#x5143;&#x7d20;&#x7684;&#x6700;&#x5927;&#x4e0d;&#x540c;&#x5728;&#x4e8e;&#xff0c;&#x524d;&#x8005;&#x7684;&#x7c7b;&#x578b;&#x662f;&#x53d7;&#x9650;&#x7684;&#xff0c;&#x800c;&#x540e;&#x8005;&#x5374;&#x53ef;&#x4ee5;&#x662f;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x3002",{"_index":1442,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x952e;&#x7c7b;&#x578b;&#x4e0d;&#x53ef;&#x4ee5;&#x662f;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#x3001;&#x5b57;&#x5178;&#x7c7b;&#x578b;&#x548c;&#x5207;&#x7247;&#x7c7b;&#x578b",{"_index":1443,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x952e;&#x7c7b;&#x578b;&#x4e0d;&#x80fd;&#x662f;&#x54ea;&#x4e9b;&#x7c7b;&#x578b",{"_index":1441,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x957f;&#x5ea6;&#x4e3a",{"_index":5975,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x7684;&#x957f;&#x5ea6;&#x662f;&#x4e0d;&#x56fa;&#x5b9a;&#x7684;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x548c",{"_index":1421,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x957f;&#x5ea6;&#x7684;&#x51fd;&#x6570;&#xff1a",{"_index":5139,"title":{},"body":{"standards/text/unicode.html#utf8-包":{}}}],["x7684;&#x957f;&#x5ea6;&#xff0c",{"_index":7085,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x7684;&#x95f2",{"_index":4448,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x7684;&#x961f;&#x5217;&#x4e2d;&#x3002;&#x8fd9;&#x7c7b;&#x961f;&#x5217;&#x4e2d;&#x7684",{"_index":6281,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x961f;&#x5217;&#x4e2d;&#x83b7;&#x53d6;&#x4e00;&#x4e2a",{"_index":6269,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x961f;&#x5217;&#x4e2d;&#xff0c;&#x7ed1;&#x5b9a;&#x4e00;&#x4e2a",{"_index":6589,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x96c6;&#x5408;&#x800c;&#x8a00;&#x7684;&#x3002",{"_index":8366,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7684;&#x96f6;&#x503c;&#x662f",{"_index":2886,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x9879;&#x76ee;&#x6784;&#x5efa;&#xff0c;&#x5176;&#x4e3b;&#x8981;&#x662f;&#x901a;&#x8fc7",{"_index":961,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x7684;&#x9a71;&#x52a8;&#xff1a",{"_index":4431,"title":{},"body":{"standards/database/sql.html#sql":{}}}],["x7684;&#xff0c;&#x56e0;&#x6b64;&#x4e0d;&#x80fd;&#x5728;&#x4e00;&#x4e2a",{"_index":7043,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x7684;&#xff0c;&#x6240;&#x6709;&#x7684;&#x7a7a;&#x5b57;&#x7b26;&#x4e32;&#x5143;&#x7d20;&#x4f1a;&#x88ab;&#x5ffd;&#x7565;&#x3002",{"_index":5697,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x7684;&#xff0c;&#x8fd9;&#x4e5f;&#x662f",{"_index":2875,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#xff0c;&#x90a3;&#x4e48;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x7684;&#x53d8;&#x91cf",{"_index":2369,"title":{},"body":{"basic/interface.html#接口":{}}}],["x76d1;&#x542c",{"_index":8925,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x76d1;&#x542c;&#x5f00;&#x542f;&#x4e4b;&#x540e;&#xff0c;&#x4e00;&#x65e6;&#x5ba2;&#x6237;&#x7aef;&#x8bf7;&#x6c42;&#x8fc7;&#x6765;&#xff0c;go",{"_index":9017,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x76d1;&#x63a7",{"_index":551,"title":{"advance/gc.html#监控":{}},"body":{}}],["x76d1;&#x63a7;&#x7ebf;&#x7a0b",{"_index":434,"title":{},"body":{"advance/mm.html#释放":{}}}],["x76ee;&#x3002",{"_index":1301,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x76ee;&#x5f55",{"_index":2580,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{},"standards/os/filepath.html#遍历目录":{},"standards/os/os.html#文件-I-O":{}}}],["x76ee;&#x5f55;&#x3002",{"_index":2737,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x3002;&#x5b89;&#x88c5;&#x5b8c;&#x6210;&#x540e;&#x9ed8;&#x8ba4;&#x4f1a;&#x5c06",{"_index":921,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x4f1a;&#x6709",{"_index":2720,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x521b;&#x5efa",{"_index":2589,"title":{},"body":{"theme/theme-usage.html#Index":{},"theme/theme-usage.html#添加文档":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x53ef;&#x4ee5;&#x770b;&#x5230",{"_index":2722,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x5bf9",{"_index":5731,"title":{},"body":{"standards/os/filepath.html#符号链接指向的路径名":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x6240;&#x6709;&#x6d4b;&#x8bd5;&#x6570;&#x636e;&#xff1a",{"_index":5771,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x7684",{"_index":2595,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x76ee;&#x5f55;&#x4e0b;&#xff0c;&#x4f8b;&#x5982",{"_index":2579,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x76ee;&#x5f55;&#x4e0b;&#xff0c;&#x76ee;&#x5f55;&#x8def;&#x5f84;&#x548c",{"_index":2735,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#x4e0e;&#x94fe;&#x63a5",{"_index":7582,"title":{"standards/os/os.html#目录与链接":{}},"body":{}}],["x76ee;&#x5f55;&#x5c31;&#x8bb",{"_index":7566,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x76ee;&#x5f55;&#x5fc5;&#x987b;&#x4e3a;&#x7a7a;&#x3002;&#x4e3a;&#x4e86;&#x65b9;&#x4fbf;&#x4f7f;&#x7528;&#xff0c;go",{"_index":7649,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x76ee;&#x5f55;&#x662f;&#x7ecf;&#x7279;&#x6b8a;&#x7ec4;&#x7ec7;&#x800c;&#x6210;&#x7684;&#x6587;&#x4ef6;&#x3002;&#x672c;&#x8d28;&#x4e0a;&#x8bf4;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x8868;&#x683c;&#xff0c;&#x5305;&#x542b;&#x6587;&#x4ef6;&#x540d;&#x548c",{"_index":7586,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x76ee;&#x5f55;&#x6709;&#x540c;&#x4e00;&#x4e2a;&#x7236;&#x76ee;&#x5f55;&#x7684;&#x5305;&#x6240;&#x5bfc;&#x5165;&#x3002;&#x5982;&#xff1a",{"_index":2827,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#x6dfb;&#x52a0;&#x5230",{"_index":922,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x76ee;&#x5f55;&#x7684;&#x76f8;&#x5bf9;&#x8def;&#x5f84;&#x5c31;&#x662f;&#x5b83;&#x7684;&#x4ee3;&#x7801;&#x5305;&#x5bfc;&#x5165;&#x8def;&#x5f84;&#xff0c;&#x800c;&#x5b9e;&#x9645;&#x4f7f;&#x7528;&#x5176;&#x7a0b;&#x5e8f;&#x5b9e;&#x4f53;&#x65f6;&#x7ed9;&#x5b9a;&#x7684;&#x9650;&#x5b9a;&#x7b26;&#x8981;&#x4e0e;&#x5b83",{"_index":2185,"title":{},"body":{"basic/package.html#点操作":{}}}],["x76ee;&#x5f55;&#x8def;&#x5f84;&#x5bf9;&#x5e94;&#xff0c;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#x88ab;&#x4fdd;&#x5b58;&#x5230",{"_index":2736,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#x90fd;&#x4f1a;&#x8c03;&#x7528",{"_index":5785,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x76ee;&#x5f55;&#xff08;&#x901a;&#x8fc7",{"_index":4826,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x76ee;&#x5f55;&#xff09;&#x7684;&#x6587;&#x4ef6;&#x4fe1;&#x606f;&#xff0c;&#x7c7b;&#x578b;&#x4e3a",{"_index":5798,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x76ee;&#x5f55;&#xff0c",{"_index":2768,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#xff0c;&#x5728",{"_index":5730,"title":{},"body":{"standards/os/filepath.html#符号链接指向的路径名":{}}}],["x76f4;&#x5230;&#x4fe1;&#x9053;&#x5173;&#x95ed;&#xff0c;&#x6240;&#x4ee5;&#x5bfc",{"_index":2919,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x76f4;&#x5230;&#x6301;&#x6709;&#x8fd9;&#x4e2a;&#x9501;&#x7684",{"_index":7823,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x76f4;&#x5230;&#x81f3;&#x5c11;&#x6709;&#x4e00;&#x4e2a",{"_index":3024,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x76f4;&#x5230;&#x8be5;&#x53d8;&#x91cf;&#x4e0d;&#x518d;&#x88ab;&#x5f15;&#x7528;&#x4e3a;&#x6b62;&#xff0c;&#x7136;&#x540e;&#x53d8;&#x91cf;&#x7684;&#x5b58;&#x50a8;&#x7a7a;&#x95f4;&#x53ef;&#x80fd;&#x88ab;&#x56de;&#x6536;&#x3002",{"_index":320,"title":{},"body":{"index.html#类型断言":{}}}],["x76f4;&#x63a5;&#x521d;&#x59cb;&#x5316;&#x5207;&#x7247;&#xff0c",{"_index":1874,"title":{},"body":{"basic/slice.html#slice":{}}}],["x76f4;&#x63a5;&#x5c06;&#x5185;&#x5bb9;&#x8f93;&#x51fa;&#xff08;&#x5199;&#x5165",{"_index":7068,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x76f4;&#x63a5;&#x8f93;&#x51fa;&#x5b57;&#x7b26;&#x4e32;&#x6216;&#x8005",{"_index":4740,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x76f4;&#x63a5;&#x8fd4;&#x56d",{"_index":4976,"title":{},"body":{"standards/text/strconv.html#字符串和布尔值之间的转换":{}}}],["x76f4;&#x63a5;&#x8fd4;&#x56de;&#xff0c;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#x4e5f;&#x4e0d;&#x9700;&#x8981;&#x7528;&#x5230;&#x9501;&#x3002",{"_index":8387,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x76f8;&#x4e58;&#xff09;&#xff0c;&#x76f4;&#x5230;&#x7ed3;&#x679c;&#x4e0d;&#x5c0f;&#x4e8e;&#x539f;&#x957f;&#x5ea6;&#x4e0e;&#x8981;&#x8ffd;&#x52a0;&#x7684;&#x5143;&#x7d20;&#x6570;&#x91cf;&#x4e4b;&#x548c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x65b0;&#x957f;&#x5ea6;&#xff09;&#x3002;&#x6700;&#x7ec8;&#xff0c;&#x65b0;&#x5bb9;&#x91cf",{"_index":1934,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x76f8;&#x5173;&#x51fd;&#x6570;&#x6216;&#x65b9;&#x6cd5",{"_index":7554,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x76f8;&#x5173;&#x51fd;&#x6570;&#x7c7b;&#x4f3c;&#x3002",{"_index":7549,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x76f8;&#x5173;&#x73af;&#x5883;&#x53d8;&#x91cf",{"_index":2842,"title":{},"body":{"commands/build.html#工具":{}}}],["x76f8;&#x53cd;&#xff0c;&#x5982;&#x679c",{"_index":2947,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x76f8;&#x540c;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x8d4b;&#x4e88;&#x516b;&#x8fdb;&#x5236;&#x6570;&#x503c;&#x3002;&#x6ce8;&#x610f;&#xff0c",{"_index":7637,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x76f8;&#x5bf9;&#x4e8e",{"_index":5671,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x76f8;&#x5bf9;&#x5e94;&#x7684;&#x4e09;&#x4e2a;&#x65b9;&#x6cd5;&#xff1a",{"_index":9276,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x76f8;&#x5bf9;&#x5e94;&#x7684;&#xff0c",{"_index":8385,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x76f8;&#x5bf9;&#x8def;&#x5f84;&#x5230;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#x7684;&#x8f6c;&#x53d8;&#xff0c;&#x9700;&#x8981;&#x7ecf;&#x8fc7;&#x8def;&#x5f84;&#x7684;&#x62fc;&#x63a5;&#x3002",{"_index":5694,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x76f8;&#x5bf9;&#x8def;&#x5f84;&#x548c;&#x7edd;&#x5bf9;&#x8def;&#x5f84",{"_index":5656,"title":{"standards/os/filepath.html#相对路径和绝对路径":{}},"body":{}}],["x76f8;&#x5dee;&#x65e0;&#x51e0;&#x3002",{"_index":3764,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x76f8;&#x5e94;&#x503c;&#x7684",{"_index":4667,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x76f8;&#x5e94;&#x503c;&#x7684;&#x7c7b;&#x578b;&#x7684",{"_index":4669,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x76f8;&#x5e94;&#x503c;&#x7684;&#x9ed8;&#x8ba4;&#x683c;&#x5f0f;&#x3002",{"_index":4663,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x76f8;&#x5e94;&#x7684",{"_index":1818,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x76f8;&#x5e94;&#x7684;&#xff0c",{"_index":4833,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x76f8;&#x5e94;unicode&#x7801;&#x70b9;&#x6240;&#x8868;&#x793a;&#x7684;&#x5b57;&#x7b26",{"_index":4678,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x76f8;&#x5f53;&#x4e8e",{"_index":1078,"title":{},"body":{"basic/flow.html#for":{},"standards/data/math.html#幂次函数":{}}}],["x76f8;&#x5f53;&#x4e8e;&#x91cd;&#x65b0;&#x5b9a;&#x4e49;&#x5e76;&#x521d;&#x59cb;&#x5316;&#x4e86;&#x540c;&#x540d;&#x7684;&#x5c40;&#x90e8;&#x53d8;&#x91cf",{"_index":2414,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x76f8;&#x6bd4",{"_index":1703,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x76f8;&#x6bd4;&#x6570;&#x7ec4;&#x4f1a;&#x66f4;&#x7075;&#x6d3b;&#xff0c",{"_index":1864,"title":{},"body":{"basic/slice.html#slice":{}}}],["x7701;&#x7565;&#x53f7;&#xff0c;&#x8868;&#x793a;&#x6570;&#x7ec4;&#x7684;&#x957f;&#x5ea6;&#x662f;&#x6839;&#x636e;&#x521d;&#x59cb;&#x5316;&#x503c;&#x7684;&#x4e2a;&#x6570;&#x6765;&#x8ba1;&#x7b97",{"_index":780,"title":{},"body":{"basic/array.html#数组":{}}}],["x770b;&#x4f5c;&#x4e00;&#x4e2a;&#x57fa;&#x7c7b;&#xff0c;&#x800c",{"_index":1262,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x770b;&#x4f5c;&#x5176;&#x5b50;&#x7c7b;&#x6216;&#x8005;&#x7ee7;&#x627f;&#x7c7b;&#x3002",{"_index":1263,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x770b;&#x5230;&#x7684",{"_index":7578,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x7801;&#x5305",{"_index":7995,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x7801;&#x70b9;&#x3002",{"_index":3723,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x7801;&#x70b9;&#xff0c;&#x8fd4;&#x56de;&#x5199;&#x5165;&#x7684;&#x5b57;&#x8282;&#x6570;&#xff08;&#x7801;&#x70b9;&#x5360;&#x7528;&#x7684;&#x5b57;&#x8282;&#xff09;&#xff0c;&#x5185;&#x90e8;&#x5b9e;&#x73b0;&#x4f1a;&#x6839;&#x636e;&#x5f53;&#x524d",{"_index":5531,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x786c;&#x94fe;&#x63a5;&#x6570",{"_index":7518,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x786c;&#x94fe;&#x63a5;&#x662f;&#x9488;&#x5bf9;&#x6587;&#x4ef6;&#x800c;&#x8a00;&#x7684;&#xff0c;&#x76ee;&#x5f55;&#x4e0d;&#x5141;&#x8bb8;&#x521b;&#x5efa;&#x786c;&#x94fe;&#x63a5;&#x3002",{"_index":7589,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x786e;&#x4fdd;&#x9879;&#x76ee;&#x76ee;&#x5f55;&#x4e0d;&#x5728",{"_index":982,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x793a;&#x4f8b;&#x51fd;&#x6570",{"_index":4141,"title":{"basic/test.html#示例函数":{}},"body":{}}],["x793a;&#x4f8b;&#x51fd;&#x6570;&#x5c06;&#x662f",{"_index":4146,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x793a;&#x4f8b;&#x51fd;&#x6570;&#xff0c;&#x63d0;&#x4f9b;&#x4e00;&#x4e2a;&#x7531;&#x7f16;&#x8bd1;&#x5668;&#x4fdd;&#x8bc1;&#x6b63;&#x786e;&#x6027;&#x7684;&#x793a;&#x4f8b;&#x6587;&#x6863;&#x3002",{"_index":4086,"title":{},"body":{"basic/test.html#测试":{}}}],["x793a;&#x4f8b;&#xff0c;&#x8ba1;&#x7b97;&#x51fd;&#x6570;&#x6267;&#x884c;&#x65f6;&#x95f4;&#xff1a",{"_index":3539,"title":{},"body":{"standards/time.html#Time":{}}}],["x793a;&#x4f8b;&#xff1a",{"_index":3538,"title":{},"body":{"standards/time.html#Time":{},"standards/data/big.html#big":{},"standards/io/fmt.html#占位符":{},"standards/data/container.html#链表":{},"standards/data/container.html#环":{},"standards/data/container.html#堆":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#JOIN":{},"standards/text/strings.html#分割字符串":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x793a;&#x4f8b;1&#x3002",{"_index":3880,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x793a;&#x4f8b;2&#x3002",{"_index":3881,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x793a;&#x7684;&#x65f6;&#x95f4;&#x70b9;&#xff0c;&#x56e0;&#x6b64;&#x4e5f;&#x4e0d;&#x4f1a;&#x5f71;&#x54cd;&#x5176;&#x8ba1;&#x7b97;&#x3002",{"_index":3469,"title":{},"body":{"standards/time.html#Time":{}}}],["x7981;&#x6b62;&#x5305;&#x7684;&#x5faa;&#x73af;&#x4f9d;&#x8d56;&#xff0c;&#x6bcf;&#x4e2a;&#x5305;&#x53ef;&#x4ee5;&#x88ab;&#x72ec;&#x7acb;&#x7f16;&#x8bd1;&#xff0c;&#x800c;&#x4e14;&#x5f88;&#x53ef;&#x80fd;&#x662f;&#x88ab;&#x5e76;&#x53d1;&#x7f16;&#x8bd1;&#x3002",{"_index":2146,"title":{},"body":{"basic/package.html#包":{}}}],["x79cd;&#x3002",{"_index":1304,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x79cd;&#x6807;&#x51c6;&#x63cf;&#x8ff0;&#x7b26;&#xff1a",{"_index":7332,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x79cd;&#x6807;&#x51c6;&#x7684;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#xff1a;0",{"_index":7326,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x79d1;&#x3002",{"_index":1302,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x79d1;&#x5b66;&#x8ba1;&#x6570;&#x6cd5;&#xff0c;",{"_index":4737,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x79d1;&#x5b66;&#x8ba1;&#x6570;&#x6cd5;&#xff0c;&#x4f8b;&#x5982",{"_index":4691,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x79d2",{"_index":3520,"title":{},"body":{"standards/time.html#Time":{}}}],["x79f0;&#x4e3a;&#x7528;&#x6237;&#x7ea7;&#x7684",{"_index":7878,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x79fb;&#x52a8",{"_index":5285,"title":{},"body":{"standards/data/container.html#环":{}}}],["x79fb;&#x52a8;&#x6587;&#x4ef6",{"_index":7381,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7a0b",{"_index":6255,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x4e2d;&#x5b58;&#x5728;&#x8fc7;&#x591a;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x62fc;&#x63a5;&#x64cd;&#x4f5c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x4f1a;&#x5bf9;&#x5185;&#x5b58;&#x7684;&#x5206;&#x914d;&#x4ea7;&#x751f;&#x975e;&#x5e38;&#x5927;&#x7684;&#x538b;&#x529b",{"_index":3800,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7a0b;&#x5e8f;&#x4e2d;&#x5e94;&#x4f7f;&#x7528",{"_index":3448,"title":{},"body":{"standards/time.html#Time":{}}}],["x7a0b;&#x5e8f;&#x4e2d;&#x7684;&#x4e00;&#x4e2a",{"_index":4253,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7a0b;&#x5e8f;&#x4e2d;&#xff0c;&#x9664;&#x4e86;&#x7528;&#x6237;&#x4ee3;&#x7801;&#xff0c;&#x5269;&#x4e0b;&#x7684;&#x5c31;&#x662f",{"_index":6448,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x4ece;&#x6807;&#x51c6;&#x8f93;&#x5165;&#x63a5;&#x6536;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#xff08;ascii",{"_index":6947,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x7a0b;&#x5e8f;&#x4f1a;&#x7acb;&#x5373;&#x7ed3;&#x675f;&#x8fd0;&#x884c;&#x3002;&#x90a3;&#x4e48;&#xff0c;&#x5982;&#x679c;&#x8fd9;&#x6837;&#x7684;&#x8bdd;&#xff0c;&#x8fd8;&#x4f1a;&#x6709;&#x4efb;&#x4f55;&#x5185;&#x5bb9;&#x88ab;&#x6253;&#x5370;&#x51fa;&#x6765;&#x5417;&#xff1f",{"_index":6307,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x5185",{"_index":6443,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x5728;&#x4f7f;&#x7528;&#x5b8c;&#x56de;&#x590d;&#x540e;&#x5fc5;&#x987b;&#x5173;&#x95ed;&#x56de;&#x590d;&#x7684;&#x4e3b;&#x4f53",{"_index":8912,"title":{},"body":{"standards/net/http.html#client":{}}}],["x7a0b;&#x5e8f;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x4e5f;&#x603b;&#x4f1a;&#x6709;&#x4e00;&#x4e2a;&#x4e3b",{"_index":6252,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x5728;&#x8fd0;&#x884c;&#x671f;&#x95f4;&#x7684;&#x5806;&#x5185;&#x5b58;&#x4f7f;&#x7528;&#x60c5;&#x51b5;&#x3002;&#x8bbe;&#x5b9a;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x91c7;&#x6837;&#x9891;&#x7387;&#x7684;&#x65b9;&#x6cd5;&#x5f88;&#x7b80;&#x5355;&#xff0c",{"_index":4263,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7a0b;&#x5e8f;&#x5b8c;&#x5168;&#x4e0d;&#x4f1a;&#x7b49;&#x5f85",{"_index":6293,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x5bf9",{"_index":4255,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7a0b;&#x5e8f;&#x5bf9;&#x4e8e;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x6765;&#x8bf4;&#x53ea;&#x662f;&#x4e00;&#x4e2a;&#x7528;&#x6237;&#x5c42;&#x7a0b;&#x5e8f;&#xff0c;&#x5bf9;&#x4e8e;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x800c;&#x8a00;&#xff0c;&#x5b83;&#x7684;&#x773c;&#x4e2d;&#x53ea;&#x6709",{"_index":6438,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x5c31;&#x4f1a;&#x7ed3;&#x675f;&#x8fd0;&#x884c;&#xff0c;&#x65e0;&#x8bba;&#x5176;&#x4ed6;&#x7684",{"_index":6324,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x5c42;&#x9762;&#xff0c;&#x5404;&#x4e2a",{"_index":6459,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x5f00;&#x59cb;&#x6267;&#x884c;&#x65f6;&#x6309;&#x7167;&#x5b83;&#x4eec;&#x58f0;&#x660e;&#x7684;&#x987a;&#x5e8f;&#x81ea;&#x52a8;&#x8c03;&#x7528;&#x3002",{"_index":2226,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x7a0b;&#x5e8f;&#x662f;&#x7528;&#x6237;&#x5c42;&#x7a0b;&#x5e8f;&#xff0c;&#x5b83;&#x672c;&#x8eab;&#x6574;&#x4f53;&#x662f;&#x8fd0;&#x884c;&#x5728;&#x4e00;&#x4e2a;&#x6216;&#x591a;&#x4e2a;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7ebf;&#x7a0b;&#x4e0a;&#x7684;&#xff0c;&#x56e0;&#x6b64",{"_index":6462,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x6765;&#x8bf4;&#x7684;&#x3002;&#x6211;&#x4eec;&#x5728;&#x5927;&#x591a;&#x6570;&#x65f6;&#x5019;&#x90fd;&#x4e0d;&#x4f1a;&#x6709;&#x660e;&#x663e;&#x7684;&#x611f;&#x89c9;&#x3002",{"_index":6289,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x4e00;&#x7cfb;&#x5217;&#x72b6;&#x6001;&#xff0c;&#x4e8e;&#x662f;&#x5f15;&#x5165;&#x4e86;&#x8fdb;&#x7a0b;&#x8fd9;&#x4e2a;&#x6982;&#x5ff5;&#xff0c;&#x7528;&#x4ee5;&#x5212;&#x5206;&#x597d;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x65f6;&#x6240;&#x9700;&#x8981;&#x7684;&#x8d44;&#x6e90;&#x3002;&#x56e0;&#x6b64;&#x8fdb;&#x7a0b;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x65f6;&#x5019;&#x7684;&#x6240;&#x9700;&#x8981;&#x7684;&#x57fa;&#x672c;&#x8d44;&#x6e90;&#x5355",{"_index":6182,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x521d;&#x59cb;&#x5316;&#x548c;&#x6267;&#x884c;&#x90fd;&#x8d77;&#x59cb;&#x4e8",{"_index":2232,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x521d;&#x59cb;&#x5316;&#x8fc7;&#x7a0b;&#x4e2d;&#xff0c;runtim",{"_index":6546,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x547d;&#x4ee4;&#x884c;&#x53c2;&#x6570;&#x53ef;&#x4f7f;&#x7528",{"_index":208,"title":{},"body":{"index.html#os-Args":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x8fd0;&#x884c;&#x8fc7;&#x7a0b;&#x4e2d;&#x81f3;&#x5173;&#x91cd;&#x8981;&#x3002",{"_index":6555,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x7ed3;&#x675f;&#x65f6;&#x5173;&#x95",{"_index":8902,"title":{},"body":{"standards/net/http.html#client":{}}}],["x7a7a",{"_index":2336,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7a7a;&#x63a5;&#x53e3;&#x7c7b;&#x578b",{"_index":2334,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7a7a;&#x6807;&#x8bc6;&#x7b26",{"_index":213,"title":{"index.html#空标识符":{}},"body":{}}],["x7acb;&#x5373;&#x7ec8;&#x6b62;&#x5f53;&#x524d;&#x4efb;&#x52a1;&#xff0c;runtim",{"_index":6394,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7acb;&#x5373;&#x8c03;&#x7528",{"_index":8199,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7acb;&#x65b9;&#x6839;&#x51fd;&#x6570",{"_index":6080,"title":{},"body":{"standards/data/math.html#幂次函数":{}}}],["x7ade;&#x4e89;&#x68c0;&#x67e5;&#x5668",{"_index":8406,"title":{"concurrent/sync_lock.html#竞争检查器":{}},"body":{}}],["x7ade;&#x4e89;&#x7684",{"_index":6456,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7b26;&#x4e32;&#x5230;&#x5e95;&#x662f;&#x7ecf;&#x8fc7;&#x622a;&#x65ad;&#x5904;&#x7406;&#xff0c;&#x8fd8;&#x662f;&#x6070;&#x5de7;&#x5c06",{"_index":7628,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7b26;&#x4e32;&#x7c7b;&#x578b;&#xff0c;&#x7531;&#x4e8e;&#x5b83;&#x7684;&#x5bbd;&#x5ea6;&#x662f;&#x4e0d;&#x5b9a;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x8981;&#x770b;&#x5b83;&#x7684;&#x503c;&#x7684;&#x5177;&#x4f53;&#x957f;&#x5ea6;&#xff0c;&#x957f;&#x5ea6;&#x8d8a;&#x77ed;&#x6c42;&#x54c8;&#x5e0c;&#x8d8a;&#x5feb;&#x3002",{"_index":1457,"title":{},"body":{"basic/map.html#map":{}}}],["x7b26;&#x4e32;&#xff0c;&#x9700;&#x8981;&#x91cd;&#x65b0;&#x5206;&#x914d;&#x5185;&#x5b58;&#xff0c;&#x4f1a;&#x7ed9;&#x5185;&#x5b58;&#x5206;&#x914d;&#x548c",{"_index":3748,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7b26;&#x53f7;&#x94fe;&#x63a5;&#x6307;&#x5411;&#x7684;&#x8def;&#x5f84;&#x540d",{"_index":5724,"title":{"standards/os/filepath.html#符号链接指向的路径名":{}},"body":{}}],["x7b26;&#x53f7;&#x94fe;&#x63a5;&#xff08;&#x4e0d;&#x662f;&#x5feb;&#x6377;&#x65b9;&#x5f0f;&#x6587;&#x4ef6;&#xff09",{"_index":7370,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7b2c;&#x4e00;&#x4e2a;&#x5143;&#x7d20",{"_index":5253,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x7b2c;&#x4e00;&#x4e2a;&#x521d;&#x59cb;&#x5316",{"_index":2213,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x7b2c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x5982;&#x679c;&#x4e3a;&#x7a7a;&#xff0c;&#x8868;&#x660e;&#x5728;&#x7cfb;&#x7edf;&#x9ed8;&#x8ba4;&#x7684;&#x4e34;&#x65f6;&#x76ee;&#x5f55;&#xff08",{"_index":4831,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x7b2c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x662f;&#x8f93;&#x5165;&#x6d6e;&#x70b9;&#x6570",{"_index":4982,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x7b2c;&#x4e00;&#x4e2a;&#x6807;&#x8bb0;&#x53ca;&#x5176;&#x503c;&#x4e3a",{"_index":4176,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7b2c;&#x4e00;&#x884c;&#x662f",{"_index":647,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x7b2c;&#x4e00;&#x884c;&#x7d22;&#x5f15;&#x4e3a",{"_index":784,"title":{},"body":{"basic/array.html#二维数组":{}}}],["x7b2c;&#x4e00;&#x884c;&#x901a;&#x5e38;&#x662f;&#x6458;&#x8981;&#x8bf4;&#x660e;&#xff0c;&#x4ee5;&#x88ab;&#x6ce8;&#x91ca;&#x8005;&#x7684;&#x540d;&#x5b57;&#x5f00;&#x5934;&#x3002",{"_index":2803,"title":{},"body":{"commands/build.html#工具":{}}}],["x7b2c;&#x4e09;&#x4e2a;&#x521d;&#x59cb;&#x5316",{"_index":2209,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x7b2c;&#x4e09;&#x884c;&#x7d22;&#x5f15;&#x4e3a",{"_index":786,"title":{},"body":{"basic/array.html#二维数组":{}}}],["x7b2c;&#x4e8c;&#x4e2a;&#x521d;&#x59cb;&#x5316",{"_index":2210,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x7b2c;&#x4e8c;&#x4e2a;&#x5faa;&#x73af;&#x53d8;&#x91cf;&#x53ef;&#x4ee5;&#x5ffd;&#x7565;&#xff0c;&#x4f46;&#x662f;&#x7b2c;&#x4e00;&#x4e2a;&#x53d8;&#x91cf;&#x8981;&#x5ffd;&#x7565;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x7a7a;&#x6807;&#x8bc6;&#x7b26",{"_index":1079,"title":{},"body":{"basic/flow.html#for":{}}}],["x7b2c;&#x4e8c;&#x4e2a;&#x662f;&#x6d6e;&#x70b9;&#x6570;&#x7684;&#x663e;&#x793a;&#x683c;&#x5f0f;&#xff08;&#x53ef;&#x4ee5;&#x662f",{"_index":4983,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x7b2c;&#x4e8c;&#x4e2a;&#x6807;&#x8bb0;&#x53ca;&#x5176;&#x503c;&#x662f",{"_index":4180,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7b2c;&#x4e8c;&#x7c7b;&#x8d1d;&#x585e;&#x5c14;&#x51fd;&#x6570",{"_index":6112,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x7b2c;&#x4e8c;&#x884c;&#x7d22;&#x5f15;&#x4e3a",{"_index":785,"title":{},"body":{"basic/array.html#二维数组":{}}}],["x7b49;&#x3002",{"_index":4439,"title":{},"body":{"standards/database/sql.html#类型":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/net/http.html#Request":{}}}],["x7b49;&#x3002;&#x4e3a;&#x4ec0;&#x4e48;&#x91c7;&#x7528;&#x8fd9;&#x79cd;&#x5f62;&#x5f0f;&#xff1f",{"_index":3511,"title":{},"body":{"standards/time.html#Time":{}}}],["x7b49;&#x3002;&#x8fd9;&#x4e9b;&#x7c7b;&#x578b;&#x7684;&#x5185;&#x5b58;&#x5360;&#x7528;&#x5c0f;&#xff0c;&#x5bb9;&#x6613;&#x56de;&#x6536;&#xff0c;&#x57fa;&#x672c;&#x4e0a;&#x5b83;&#x4eec;&#x7684;&#x503c;&#x548c;&#x6307;&#x9488;&#x5360;&#x7528;&#x7684;&#x7a7a;&#x95f4;&#x5dee;&#x4e0d;&#x591a;&#xff0c;&#x56e0;&#x6b64;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x590d;&#x5236;&#xff0c",{"_index":1717,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7b49;&#x4e8e",{"_index":5685,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{},"standards/data/math.html#其他函数":{}}}],["x7b49;&#x4ef7;&#x3002",{"_index":5983,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x7b49;&#x4ef7;&#x4e8",{"_index":2431,"title":{},"body":{"basic/var.html#赋值":{},"standards/os/os.html#文件属性":{}}}],["x7b49;&#x5176;&#x4ed6;&#x5c5e;&#x6027;&#x3002",{"_index":2600,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x7b49;&#x5305;&#x63d0;&#x4f9b;&#x652f;&#x6301;&#xff0c",{"_index":1541,"title":{},"body":{"basic/json.html#序列化":{}}}],["x7b49;&#x540c;&#x6b65;&#x5b57;&#x6bb5;&#xff0c;&#x4f7f;&#x7528",{"_index":1253,"title":{},"body":{"basic/oop.html#方法":{}}}],["x7b49;&#x5b57;&#x7b26;&#x4e32;&#xff1b",{"_index":4973,"title":{},"body":{"standards/text/strconv.html#字符串和布尔值之间的转换":{}}}],["x7b49;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x7684;&#x8bed;&#x8a00;&#xff0c;golang",{"_index":1705,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7b49;&#x5f85;&#x5176;&#x4ed6",{"_index":6321,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7b49;&#x64cd;&#x4f5c;&#x65f6;&#x624d;&#x4f1a;&#x89e6;&#x53d1;&#x5207;&#x6362;&#x3002",{"_index":6533,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7b49;&#x65b9;&#x6cd5;&#x3002",{"_index":8884,"title":{},"body":{"standards/net/http.html#client":{}}}],["x7b49;&#x65b9;&#x6cd5;&#x4e00;&#x81f4;&#xff1a",{"_index":8888,"title":{},"body":{"standards/net/http.html#client":{}}}],["x7b49;&#x65b9;&#x6cd5;&#xff0c",{"_index":3464,"title":{},"body":{"standards/time.html#Time":{}}}],["x7b49;&#x7684;&#x5e76;&#x53d1;&#x5b9e;&#x73b0;&#x5c31;&#x662f;&#x57fa",{"_index":6409,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7b49;&#x7684;&#x8bbe;&#x5b9a;&#xff0c;&#x4e0a;&#x9762;&#x63d0;&#x4f9b;&#x7684;&#x65b9;&#x6cd5;&#x5c31;&#x4e0d;&#x80fd;&#x6ee1;&#x8db3;&#x9700;&#x6c42;&#x4e86;&#x3002;&#x5c31;&#x9700;&#x8981;&#x4f7f;&#x7528",{"_index":8891,"title":{},"body":{"standards/net/http.html#client":{}}}],["x7b49;&#x7b49;&#x7684;&#x8c03;&#x7528;&#x3002",{"_index":8413,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x7b49;&#x7c7b;&#x578b;&#xff08",{"_index":3133,"title":{},"body":{"basic/function.html#参数":{}}}],["x7b49;&#x7cfb;&#x7edf",{"_index":7319,"title":{},"body":{"standards/os/os.html#os":{}}}],["x7b49;&#x9700;&#x8981;&#x624b;&#x52a8;&#x5173;&#x95ed;&#x7684;&#x8d44;&#x6e90;&#x90fd;&#x5b9e;&#x73b0;&#x4e86",{"_index":6931,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x7b49;&#xff09",{"_index":8828,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x7b49;&#xff09;&#x3001",{"_index":7339,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7b49;&#xff09;&#x6253;&#x5f00;&#x6307;&#x5b9a;&#x540d;&#x79f0;&#x7684;&#x6587;&#x4ef6;&#x3002;&#x5982;&#x679c;&#x64cd;&#x4f5c;&#x6210;&#x529f;&#xff0c;&#x8fd4;&#x56de;&#x7684;&#x6587;&#x4ef6;&#x5bf9;&#x8c61;&#x53ef;&#x7528;&#x4e8",{"_index":7341,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7b54;&#x6848;&#x662f;&#xff1a;&#x539f;&#x6570;&#x7ec4;&#x4e0d;&#x4f1a;&#x6539;&#x53d8;&#x3002;&#x4e3a;&#x4ec0;&#x4e48;&#x5462;&#xff1f;&#x539f;&#x56e0;&#x662f;&#xff0c",{"_index":3218,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x7b54;&#x6848;&#x662f;&#xff1a;g",{"_index":6526,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7b7e;&#x540d;&#x7684;&#x51fd;&#x6570;&#x90fd;&#x80fd;&#x8f6c;&#x5316;&#x4e3a;&#x4e00;&#x4e2a",{"_index":9092,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x7b80;&#x5316;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x4ee3;&#x7801",{"_index":2796,"title":{},"body":{"commands/build.html#工具":{}}}],["x7b80;&#x5355;&#x5730;&#x5728",{"_index":3034,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7b80;&#x5355;&#x6765;&#x8bf4;&#xff0c;&#x4e00;&#x4e2a",{"_index":6498,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7b80;&#x5355;&#x6765;&#x8bf4;&#xff0c;&#x9762;&#x5411;&#x5bf9;&#x8c61;&#x7f16;&#x7a0b;&#x4e2d;&#x7684;&#x7ee7;&#x627f;&#xff0c;&#x5176;&#x5b9e;&#x662f;&#x901a;&#x8fc7;&#x727a;&#x7272;&#x4e00;&#x5b9a;&#x7684;&#x4ee3;&#x7801;&#x7b80;&#x6d01;&#x6027;&#x6765;&#x6362;&#x53d6;&#x53ef;&#x6269;&#x5c55;&#x6027;&#xff0c;&#x800c;&#x4e14;&#x8fd9;&#x79cd;&#x53ef;&#x6269;&#x5c55;&#x6027;&#x662f;&#x901a;&#x8fc7;&#x4fb5;&#x5165;&#x7684;&#x65b9;&#x5f0f;&#x6765;&#x5b9e;&#x73b0;&#x7684;&#x3002",{"_index":1278,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x7b80;&#x5355;&#x7684;&#x8bf4;&#xff0c",{"_index":2322,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7b80;&#x5355;&#x793a;&#x4f8b;&#x4ee3;&#x7801;&#x5982;&#x4e0b;&#xff1a",{"_index":6869,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x7b80;&#x5f0f;&#x58f0;&#x660e;&#x4e00;&#x4e2a",{"_index":8896,"title":{},"body":{"standards/net/http.html#client":{}}}],["x7b80;&#x77ed;&#x5199;&#x6cd5",{"_index":1234,"title":{},"body":{"basic/oop.html#方法":{}}}],["x7b80;&#x77ed;&#x58f0;&#x660",{"_index":2410,"title":{"basic/var.html#简短声明":{}},"body":{}}],["x7b80;&#x77ed;&#x58f0;&#x660e;&#xff0c;&#x5e76;&#x4e0d;&#x603b;&#x662f;&#x91cd;&#x65b0;&#x5b9a;&#x4e49;&#x6bd4;&#x53d8;&#x91cf;&#xff0c;&#x8981;&#x907f;&#x514d;&#x91cd;&#x65b0;&#x5b9a;&#x4e49;&#xff0c;&#x9996;&#x5148;&#x8981;&#x5728;&#x540c;&#x4e00;&#x4e2a;&#x4f5c;&#x7528;&#x57df;&#x4e2d;&#xff0c;&#x81f3;&#x5c11;&#x6709;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x53d8;&#x91cf;&#x88ab;&#x5b9a;&#x4e49;&#xff1a",{"_index":2418,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x7b97;&#x672f;&#x8fd0;&#x7b97;&#x7b26",{"_index":1790,"title":{"basic/operator.html#算术运算符":{}},"body":{}}],["x7b97;&#x8d77;&#x7684;&#x79d2;&#x6570;&#xff0c",{"_index":3484,"title":{},"body":{"standards/time.html#Time":{}}}],["x7bb1;&#x91cc;&#x6ca1;&#x6709;&#x60c5;&#x62a5;&#xff0c;&#x90a3;&#x4e5f;&#x53ea;&#x80fd;&#x5148;&#x56de;&#x53bb;&#x4e86;&#x3002",{"_index":7918,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7c7b",{"_index":6426,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7c7b;&#x4f3c;&#x3002",{"_index":936,"title":{},"body":{"basic/env_config.html#工作区":{},"standards/io/io.html#其他接口":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x7c7b;&#x4f3c;&#x3002;go",{"_index":2135,"title":{},"body":{"basic/package.html#包":{}}}],["x7c7b;&#x4f3c;&#x4e8e;&#x7528;&#x4e8e;&#x901a;&#x4fe1;&#x7684",{"_index":1065,"title":{},"body":{"basic/flow.html#select":{}}}],["x7c7b;&#x4f3c;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x8fd8;&#x6709;&#x989d;&#x5916;&#x4e00;&#x4e9b;&#x548c;&#x6027;&#x80fd;&#x6d4b;&#x91cf;&#x76f8;&#x5173;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":4126,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x7c7b;&#x4f3c;&#x7684;&#xff0c;&#x5305;&#x542b;&#x4e09;&#x4e2a;&#x51fd;&#x6570;&#xff1a",{"_index":4978,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x7c7b;&#x4f3c;&#x7684;&#xff0c;&#x7531;&#x4e8e;&#x6211;&#x4eec;&#x540c;&#x6837;&#x53ef;&#x4ee5;&#x50cf;&#x8bbf;&#x95ee;&#x88ab;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#x90a3;&#x6837;&#xff0c;&#x76f4;&#x63a5;&#x8bbf;&#x95ee;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x6240;&#x4ee5",{"_index":2105,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x7c7b;&#x4f3c;&#xff0c;&#x533a;&#x522b;&#x5728;&#x4e8e;&#x5982;&#x679c;&#x6587;&#x4ef6;&#x662f;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#xff0c;&#x90a3;&#x4e48;&#x6240;&#x8fd4;&#x56de;&#x7684;&#x4fe1;&#x606f;&#x9488;&#x5bf9;&#x7684;&#x662f;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#x81ea;&#x8eab;&#xff08;&#x800c;&#x975e;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#x6240;&#x6307;&#x5411;&#x7684;&#x6587;&#x4ef6;&#xff09;&#x3002",{"_index":7499,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x7c7b;&#x4f3c;&#xff0c;&#x533a;&#x522b;&#x662f;&#xff1a",{"_index":3582,"title":{},"body":{"standards/time.html#Ticker":{}}}],["x7c7b;&#x4f3c;&#xff0c;&#x53ea;&#x662f",{"_index":6967,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x7c7b;&#x4f3c;&#xff1a",{"_index":9275,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x7c7b;&#x578b",{"_index":611,"title":{"basic/error.html#error-类型":{},"standards/database/sql.html#类型":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"concurrent/sync_lock.html#context-Context-类型":{}},"body":{"basic/oop.html#方法":{},"basic/constant.html#常量":{},"basic/slice.html#slice":{},"basic/struct.html#结构体":{},"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#赋值":{},"concurrent/channel.html#channel":{},"basic/basic_data.html#字符串":{},"standards/data/big.html#big":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x3002",{"_index":3171,"title":{},"body":{"basic/function.html#错误":{},"standards/data/container.html#链表":{},"standards/io/bufio.html#bufio-Reader":{}}}],["x7c7b;&#x578b;&#x3002;&#x5b83;&#x6bd4;&#x901a;&#x9053;&#x66f4;&#x52a0;&#x9002;&#x5408;&#x5b9e;&#x73b0;&#x8fd9;&#x79cd;&#x4e00;&#x5bf9;&#x591a;&#x7684",{"_index":8071,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7c7b;&#x578b;&#x3002;&#x65e0;&#x8bba;&#x662f;&#x5b58;&#x3001;&#x53d6;&#x8fd8;&#x662f;&#x5220;&#xff0c;&#x90fd;&#x5e94;&#x8be5;&#x5982;&#x6b64",{"_index":8347,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7c7b;&#x578b;&#x3002;&#x6839;&#x636e",{"_index":6821,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x7c7b;&#x578b;&#x3002;&#x8fd9;&#x5f88;&#x6709;&#x7528;&#xff0c;&#x56e0;&#x4e3a",{"_index":9093,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x7c7b;&#x578b;&#x4e00;&#x6837;&#xff0c",{"_index":8113,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#x4e0d;&#x88ab;&#x5c40;&#x9650;&#x4e8e;&#x5e38;&#x91cf;&#x6216;&#x6574;&#x6570;&#xff0c;&#x4f46;&#x5fc5;&#x987b;&#x662f;&#x76f8;&#x540c;&#x7684;&#x7c7b;&#x578b;&#x3002",{"_index":1043,"title":{},"body":{"basic/flow.html#switch":{}}}],["x7c7b;&#x578b;&#x4e2d;&#x7684",{"_index":7834,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x7c7b;&#x578b;&#x4e2d;&#x8fd8;&#x6709;&#x4e00;&#x4e2a;&#x540d;&#x53eb",{"_index":8125,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#x4e4b;&#x95f4;&#x7684;&#x7ec4;&#x5408;&#x91c7;&#x7528;&#x7684;&#x662f;&#x975e;&#x58f0;&#x660e;&#x7684;&#x65b9;&#x5f0f;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x9700;&#x8981;&#x663e;&#x5f0f;&#x5730;&#x58f0;&#x660e;&#x67d0;&#x4e2a;&#x7c7b;&#x578b;&#x5b9e;&#x73b0;&#x4e86;&#x67d0;&#x4e2a;&#x63a5;&#x53e3;&#xff0c;&#x6216;&#x8005;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x7ee7;&#x627f;&#x4e86;&#x53e6;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x3002",{"_index":1279,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x7c7b;&#x578b;&#x4e5f;&#x5c5",{"_index":8281,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x4ee3;&#x8868;&#x4e86;&#x4e00;&#x4e2a;&#x6570;&#x636e;&#x5e93;&#x3002;&#x5b83;&#x5e76",{"_index":4433,"title":{},"body":{"standards/database/sql.html#类型":{}}}],["x7c7b;&#x578b;&#x4f1a;&#x8fd4",{"_index":4897,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x7c7b;&#x578b;&#x4f5c;&#x4e3a;&#x5b9e;&#x73b0;&#x5de5;&#x5177;&#xff0c;&#x5b9e;&#x73b0",{"_index":8173,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x503c;&#x4e2d;&#x7684;&#x7f13;&#x51b2;&#x533a;&#x7684;&#x4f5c;&#x7528",{"_index":5407,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7c7b;&#x578b;&#x503c;&#x4e2d;&#x7f13;&#x51b2;&#x7684;&#x6570;&#x636e;&#x4ec0;&#x4e48;&#x65f6;&#x5019;&#x4f1a;&#x88ab;&#x5199;&#x5230;&#x5b83;&#x7684;&#x5e95;&#x5c42;&#x5199;&#x5165;&#x5668",{"_index":5536,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7c7b;&#x578b;&#x503c;&#x4e2d;&#x8ba1;&#x6570;&#x5668;&#x7684;&#x503c;&#x53ef;&#x4ee5;&#x5c0f;&#x4e8",{"_index":8096,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7c7b;&#x578b;&#x503c;&#x53ef;&#x4ee5;&#x88ab;&#x591a;&#x4e2a",{"_index":3449,"title":{},"body":{"standards/time.html#Time":{}}}],["x7c7b;&#x578b;&#x503c;&#x6765;&#x4fdd;&#x5b58;&#x548c;&#x4f20;&#x9012;&#x65f6;&#x95f4;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x6307;&#x9488;&#x3002",{"_index":3447,"title":{},"body":{"standards/time.html#Time":{}}}],["x7c7b;&#x578b;&#x503c;&#x7684",{"_index":2358,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7c7b;&#x578b;&#x503c;&#xff08;&#x4ee3;&#x8868;&#x65f6;&#x95f4;&#x6bb5;&#xff09;&#x3002;add",{"_index":3455,"title":{},"body":{"standards/time.html#Time":{}}}],["x7c7b;&#x578b;&#x503c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0",{"_index":5540,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7c7b;&#x578b;&#x503c;&#xff0c;&#x6700;&#x540e;&#x8fd4;&#x56de;&#x8be5;&#x503c",{"_index":2356,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7c7b;&#x578b;&#x51fd;&#x6570;&#x53ef;&#x4ee5;&#x51b3;&#x5b9a;&#x5982;&#x4f55;&#x53bb;&#x5904;&#x7406;&#x8be5;&#x9519;&#x8bef",{"_index":5802,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x7c7b;&#x578b;&#x5374;&#x6ca1;&#x6709;&#x8fd9;&#x6837;&#x4e00;&#x4e2a;&#x65b9;&#x6cd5;&#xff0c;&#x5b83;&#x53ea;&#x6709",{"_index":3896,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x53c2;&#x6570",{"_index":3116,"title":{},"body":{"basic/function.html#声明函数":{},"basic/test.html#性能分析":{}}}],["x7c7b;&#x578b;&#x53ca",{"_index":9273,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x7c7b;&#x578b;&#x53d8;&#x91cf;&#xff0c",{"_index":9001,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7c7b;&#x578b;&#x53ea;&#x6709;&#x4e24;&#x4e2a;&#x65b9;&#x6cd5;&#x2014;&#x2014",{"_index":8287,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x53ef;&#x4ee5;&#x88ab;&#x79f0;&#x4e3a;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60;&#xff0c;&#x5b83;&#x7684;&#x503c;&#x53ef;&#x4ee5;&#x88ab;&#x7528;&#x6765;&#x5b58;&#x50a8;&#x4e34;&#x65f6;&#x7684;&#x5bf9;&#x8c61;&#x3002;&#x4e0",{"_index":8279,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x53ef;&#x80fd;&#x662f",{"_index":613,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x7c7b;&#x578b;&#x540c;&#x6837;&#x662f;&#x4f7f;&#x7528;&#x5b57;&#x8282;&#x5207;&#x7247;&#x4f5c;&#x4e3a;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x3002;&#x5e76;&#x4e14;&#xff0c;&#x4e0",{"_index":3870,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x540d;&#x5b57",{"_index":274,"title":{},"body":{"index.html#自定义类型":{}}}],["x7c7b;&#x578b;&#x540d;(&#x8868;&#x8fbe;&#x5f0f",{"_index":246,"title":{},"body":{"index.html#类型转换":{}}}],["x7c7b;&#x578b;&#x540e;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x7b2c;&#x4e8c;&#x4e2a;&#x503c;&#x662f;&#x4e00;&#x4e2a;&#x5e03;&#x5c14;&#x503c;&#xff0c;&#x82e5;&#x4e3a",{"_index":310,"title":{},"body":{"index.html#类型断言":{}}}],["x7c7b;&#x578b;&#x5462",{"_index":8135,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#x548c",{"_index":9250,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x7c7b;&#x578b;&#x5728;&#x5185;&#x90e8;&#x4f7f;&#x7528;&#x4e86",{"_index":8356,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7c7b;&#x578b;&#x5b9a;&#x4e49;&#x4e86",{"_index":9254,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x7c7b;&#x578b;&#x5b9a;&#x4e49;&#x7684",{"_index":9278,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x7c7b;&#x578b;&#x5bf9;&#x8c61;&#x4e2d;&#x7684;&#x5c5e;&#x6027",{"_index":1228,"title":{},"body":{"basic/oop.html#方法":{}}}],["x7c7b;&#x578b;&#x5bf9;&#x8c61;&#x4e2d;&#x7684;&#x65b9;&#x6cd5",{"_index":1223,"title":{},"body":{"basic/oop.html#方法":{}}}],["x7c7b;&#x578b;&#x5c5e;&#x4e8e;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#xff0c;&#x800c;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x5c5e;&#x4e8e;&#x503c;&#x7c7b;&#x578b;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x590d;&#x5236;&#x8be5;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x4f1a;&#x4ea7;&#x751f;&#x4e00;&#x4e2a;&#x5b8c;&#x5168;&#x5206;&#x79bb;&#x7684;&#x65b0;&#x503c;&#x3002;&#x8fd9;&#x4e2a;&#x65b0;&#x503c;&#x76f8;&#x5f53;&#x4e8e;&#x88ab",{"_index":8044,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x7c7b;&#x578b;&#x5e76;&#x4e0d;&#x662f;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x7684;&#x3002;&#x53ea;&#x80fd;&#x5229;&#x7528",{"_index":7904,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7c7b;&#x578b;&#x6216",{"_index":4698,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x7c7b;&#x578b;&#x6240;&#x5360;&#x7684;&#x4f4d;&#x6570;&#x3002",{"_index":4934,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x7c7b;&#x578b;&#x62e5;&#x6709;&#x4e09;&#x4e2a;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#xff1a",{"_index":8075,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7c7b;&#x578b;&#x63d0;&#x4f9b;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x51fd;&#x6570;&#x7b7e;&#x540d;&#xff1a",{"_index":7098,"title":{},"body":{"standards/io/io.html#WriteString-函数":{}}}],["x7c7b;&#x578b;&#x6570;&#x636e",{"_index":177,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7c7b;&#x578b;&#x6574;&#x6570;&#x3002;&#x800c;&#x5927;&#x6709;&#x7406;&#x6570;&#x662f;&#x901a;&#x8fc7",{"_index":4371,"title":{},"body":{"standards/data/big.html#big":{}}}],["x7c7b;&#x578b;&#x65ad;&#x8a00",{"_index":290,"title":{"index.html#类型断言":{}},"body":{}}],["x7c7b;&#x578b;&#x65f6;&#x3002",{"_index":259,"title":{},"body":{"index.html#类型转换":{}}}],["x7c7b;&#x578b;&#x65f6;&#x95f4;&#x70b9;&#x3002",{"_index":3457,"title":{},"body":{"standards/time.html#Time":{}}}],["x7c7b;&#x578b;&#x65f6;&#xff0c",{"_index":712,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x7c7b;&#x578b;&#x6620;&#x5c04;&#x67d0;&#x4e2a;&#x65f6;&#x533a;&#x7684;&#x65f6;&#x95f4;&#xff0c;utc",{"_index":3417,"title":{},"body":{"standards/time.html#time":{}}}],["x7c7b;&#x578b;&#x662f",{"_index":1685,"title":{},"body":{"basic/pointer.html#指针":{},"standards/net/http.html#HTTP-Server":{}}}],["x7c7b;&#x578b;&#x662f;&#x4e3a;&#x4e86;&#x9ad8;&#x6548;&#x8bfb;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#x800c;&#x5b58;&#x5728;&#x7684;&#x3002;&#x53ef;&#x4ee5;&#x8ba9;&#x6211;&#x4eec;&#x5f88;&#x65b9;&#x4fbf;&#x5730;&#x8bfb;&#x53d6;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x7684;&#x5185;&#x5bb9;&#x3002;&#x5728;&#x8bfb;&#x53d6;&#x7684;&#x8fc7;&#x7a0b;&#x4e2d;&#xff0c",{"_index":3852,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x662f;&#x5185;&#x7f6e;&#x7684;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x3002",{"_index":612,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x7c7b;&#x578b;&#x6709;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":5537,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7c7b;&#x578b;&#x6709;&#x8fd9;&#x4e48;&#x51e0;&#x4e2a;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#xff1a",{"_index":4229,"title":{},"body":{"basic/test.html#性能测试函数中的计时器":{}}}],["x7c7b;&#x578b;&#x7684",{"_index":3876,"title":{},"body":{"basic/basic_data.html#字符串":{},"basic/test.html#基准测试":{},"standards/text/strconv.html#转换错误处理":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x7684;&#x3002",{"_index":3157,"title":{},"body":{"basic/function.html#函数作为参数":{},"basic/test.html#性能分析":{}}}],["x7c7b;&#x578b;&#x7684;&#x3002;&#x7b80;&#x79f0;&#x5b83;&#x4e3a",{"_index":8362,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7c7b;&#x578b;&#x7684;&#x3002;&#x800c;&#x53e6;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x5219;&#x662f;&#x4ee3;&#x8868;&#x4e86;&#x6982;&#x8981;&#x4fe1;&#x606f",{"_index":4298,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7c7b;&#x578b;&#x7684;&#x4e00;&#x4e2a;&#x503c;&#x9700;&#x8981;&#x5360;&#x7528;&#x7684;&#x5b57;&#x8282;&#x6570;&#x90fd;&#x662f",{"_index":1459,"title":{},"body":{"basic/map.html#map":{}}}],["x7c7b;&#x578b;&#x7684;&#x4e34",{"_index":4381,"title":{},"body":{"standards/data/big.html#big":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c",{"_index":3118,"title":{},"body":{"basic/function.html#声明函数":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x3002",{"_index":8291,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x4f1a;&#x7531;&#x56db;&#x4e2a;&#x5b57;&#x8282;&#x5bbd;&#x5ea6;&#x7684;&#x7a7a;&#x95f4;&#x6765;&#x5b58;&#x50a8;&#x3002;&#x5b83;&#x7684;&#x5b58;&#x50a8;&#x7a7a;&#x95f4;&#x603b;&#x662f;&#x80fd;&#x591f;&#x5b58;&#x4e0b;&#x4e00",{"_index":3951,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x5728;&#x5e95;&#x5c42;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x4e00;&#x4e2a",{"_index":3952,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x5728;&#x5e95;&#x5c42;&#x600e;&#x6837;&#x88ab;&#x8868;&#x8fb",{"_index":3938,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x5728;&#x5e95;&#x5c42;&#x90fd;&#x662f;&#x7531;&#x4e00;&#x4e2a",{"_index":3964,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x65e2;&#x53ef;&#x4ee5;&#x88ab;&#x62c6;&#x5206;&#x4e3a;&#x4e00;&#x4e2a;&#x5305;&#x542b;&#x591a;&#x4e2a;&#x5b57;&#x7b26;&#x7684;&#x5e8f;&#x5217;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x62c6;&#x5206;&#x4e3a;&#x4e00;&#x4e2a;&#x5305;&#x542b;&#x591a;&#x4e2a;&#x5b57;&#x8282;&#x7684;&#x5e8f;&#x5217;&#x3002",{"_index":3942,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x662f;&#x4e0d;&#x53ef;&#x53d8;&#x7684;&#x3002;&#x5982;&#x679c;&#x6211;&#x4eec;&#x60f3;&#x83b7;&#x5f97;&#x4e00;&#x4e2a;&#x4e0d;&#x4e00;&#x6837;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x53ea;&#x80fd;&#x57fa;&#x4e8e;&#x539f;&#x5b57;&#x7b26;&#x4e32;&#x8fdb;&#x884c;&#x88c1;&#x526a;&#x3001;&#x62fc;&#x63a5;&#x7b49;&#x64cd;&#x4f5c;&#xff0c",{"_index":3783,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x662f;&#x7531;&#x4e00;&#x7cfb;&#x5217;&#x76f8;&#x5bf9;&#x5e94;&#x7684",{"_index":3939,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x6709;&#x54ea;&#x4e9b;&#x4f18;&#x52bf",{"_index":3803,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x7684;&#x8bdd;&#xff0c;&#x5176;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#xff08;&#x4e0d;&#x8bba;&#x662f;&#x82f1;&#x6587;&#x5b57;&#x7b26;&#x8fd8;&#x662f;&#x4e2d;&#x6587;&#x5b57;&#x7b26;&#xff09;&#x5c31;&#x90fd;&#x4f1a;&#x72ec;&#x7acb;&#x6210;&#x4e3a;&#x4e00",{"_index":3960,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0",{"_index":8204,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x539f;&#x5b50;&#x503c;&#xff09;&#x88ab;&#x771f;&#x6b63;&#x4f7f;&#x7528;&#xff0c;&#x5b83;&#x5c31;&#x4e0d;&#x5e94;&#x8be5;&#x518d;&#x88ab;&#x590d;&#x5236;&#x4e86;&#x3002;&#x53ea;&#x8981;&#x7528;&#x5b83;&#x6765;&#x5b58;&#x50a8;&#x503c;&#x4e86;&#xff0c;&#x5c31;&#x76f8;&#x5f53;&#x4e8e;&#x5f00;&#x59cb;&#x771f;&#x6b63;&#x4f7f;&#x7528;&#x4e86;&#x3002",{"_index":8043,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;profile&#x503c;&#xff09;&#x3002;&#x5728;&#x8fd9;&#x4e4b;&#x540e;&#xff0c;&#x6211;&#x4eec;&#x8fd8;&#x9700;&#x8981;&#x8c03;&#x7528;&#x8fd9;&#x4e2a",{"_index":4294,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff09;&#xff0c;&#x7136;&#x540e;&#x518d;&#x8c03;&#x7528;&#x8fd9;&#x4e2a;&#x503c;&#x7684",{"_index":8353,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff0c;&#x662f;&#x56e0;&#x4e3a",{"_index":252,"title":{},"body":{"index.html#类型转换":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff0c;&#x7136;&#x540e;&#x518d;&#x628a;&#x540e;&#x8005;&#x5c01;&#x88c5;&#xff0c;&#x5e76;&#x50a8;&#x5b58;&#x5728;&#x5176;&#x4e2d;&#x7684;&#x539f;&#x751f;&#x5b57;&#x5178;&#x4e2d;&#x3002;&#x5982;&#x6b64;&#x4e00;&#x6765;&#xff0c;&#x5728;&#x53d8;&#x66f4;&#x67d0;&#x4e2a;&#x952e;&#x6240;&#x5bf9;&#x5e94;&#x7684;&#x503c",{"_index":8371,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7c7b;&#x578b;&#x7684;&#x5143;&#x7d20;&#x503c;&#x3002;&#x56e0",{"_index":3961,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x539f;&#x59cb;&#x6570;&#x636e",{"_index":5305,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570",{"_index":3831,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570;&#x3002",{"_index":3161,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570;&#x4e4b;&#x5916;&#xff0c;&#x8fd8;&#x5e94;&#x8be5;&#x6709;&#x4e00;&#x4e2a",{"_index":3160,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570;&#x58f0;&#x660e",{"_index":4107,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570;&#xff1b",{"_index":8289,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf;&#xff1a",{"_index":4890,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x7c7b;&#x578b;&#x7684;&#x58f0;&#x660e;&#x8bb2;&#x8d77;&#x3002;&#x8fd9;&#x4e2a;&#x63a5;&#x53e3;&#x4e2d;&#x6709;&#x4e24;&#x4e2a;&#x65b9;&#x6cd5;&#x4e0e;&#x201c;&#x64a4;&#x9500;&#x201d;&#x606f;&#x606f;&#x76f8;&#x5173;&#x3002",{"_index":8243,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5",{"_index":5517,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#x3002",{"_index":8126,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#x3002;&#x5b83;&#x7684;&#x503c;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x5728;&#x4ece;&#x5e95;&#x5c42;&#x8bfb;&#x53d6;&#x5668;&#x83b7;&#x5f97;&#x6570;&#x636e;&#x65f6;&#x53d1;&#x751f;&#x7684;&#x9519;&#x8bef;&#x3002;&#x8fd9;&#x91cc;&#x7684;&#x503c;&#x5728;&#x88ab;&#x8bfb;&#x53d6;&#x6216;&#x5ffd;&#x7565;&#x4e4b;&#x540e;&#xff0c;&#x8be5;&#x5b57;&#x6bb5;&#x4f1a;&#x88ab;&#x7f6e;&#x4e3a",{"_index":5419,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#x3002;&#x5b83;&#x7684;&#x503c;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x5728;&#x5411;&#x5e95;&#x5c42;&#x5199;&#x5165;&#x5668;&#x5199;&#x6570;&#x636e;&#x65f6;&#x53d1;&#x751f;&#x7684;&#x9519;&#x8bef;&#x3002",{"_index":5518,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#x6765;&#x6301;&#x6709;&#x90a3;&#x4e2a;&#x6307;&#x5411;&#x4e86;&#x5e95;&#x5c42;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#x7684;&#x6307;&#x9488;&#x503c;&#x7684;&#x3002",{"_index":3812,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x4ee3;&#x8868;&#x5bf9;&#x7f13;&#x51b2;&#x533a;&#x8fdb;&#x884c;&#x4e0b;&#x4e00;&#x6b21;&#x5199;&#x5165;&#x65f6;&#x7684;&#x5f00;&#x59cb;&#x7d22;&#x5f15;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x79f0;&#x4e4b;&#x4e3a;&#x5df2;&#x5199;&#x8ba1;&#x6570;&#x3002",{"_index":5418,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x4ee3;&#x8868;&#x5bf9;&#x7f13;&#x51b2;&#x533a;&#x8fdb;&#x884c;&#x4e0b;&#x4e00;&#x6b21;&#x8bfb;&#x53d6;&#x65f6;&#x7684;&#x5f00;&#x59cb;&#x7d22;&#x5f15;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x79f0;&#x5b83;&#x4e3a;&#x5df2;&#x8bfb;&#x8ba1;&#x6570;&#x3002",{"_index":5417,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x4ee3;&#x8868;&#x5e95;&#x5c42;&#x5199;&#x5165;&#x5668;&#x3002",{"_index":5520,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x4ee3;&#x8868;&#x5e95;&#x5c42;&#x8bfb;&#x53d6;&#x5668;&#x3002;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x7684;&#x6570;&#x636e;&#x5c31;&#x662f;&#x4ece;&#x8fd9;&#x91cc;&#x62f7;&#x8d1d;&#x6765;&#x7684;&#x3002",{"_index":5416,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x4ee3;&#x8868;&#x7f13;&#x51b2;&#x533a;&#x3002;&#x5728;&#x521d;&#x59cb;&#x5316;&#x4e4b;&#x540e;&#xff0c;&#x5b83;&#x7684;&#x957f;&#x5ea6;&#x4f1a;&#x4fdd;&#x6301;&#x4e0d;&#x53d8;&#x3002",{"_index":5519,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x5373;&#x5b57;&#x8282;&#x5207;&#x7247;&#xff0c;&#x4ee3;&#x8868;&#x7f13;&#x51b2;&#x533a;&#x3002;&#x867d;&#x7136;&#x5b83;&#x662f;&#x5207;&#x7247;&#x7c7b;&#x578b;&#x7684;&#xff0c;&#x4f46;&#x662f;&#x5176;&#x957f;&#x5ea6;&#x5374;&#x4f1a;&#x5728;&#x521d;&#x59cb;&#x5316;&#x7684;&#x65f6;&#x5019;&#x6307;&#x5b9a;&#xff0c;&#x5e76;&#x5728;&#x4e4b;&#x540e;&#x4fdd;&#x6301;&#x4e0d;&#x53d8;&#x3002",{"_index":5415,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x6240;&#x4ee5;&#xff0c;&#x590d;&#x5236;&#x8be5;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x4e5f;&#x4f1a;&#x5bfc;&#x81f4;&#x529f;&#x80fd;&#x7684;&#x5931;&#x6548;&#x3002",{"_index":8116,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x7528;&#x4e8e;&#x4ee3;&#x8868;&#x5df2;&#x8bfb;&#x5b57;&#x8282;&#x7684;&#x8ba1;&#x6570;&#xff0c;&#x53ef;&#x4ee5;&#x7b80;&#x79f0;&#x4e3a",{"_index":3873,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x7528;&#x4e8e;&#x8bb0;&#x5f55;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x88ab;&#x8bfb;&#x53d6;&#x7684",{"_index":5421,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x7528;&#x4e8e;&#x8bb0;&#x5f55;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x88ab;&#x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#x3002;&#x8bfb;&#x56de;&#x9000;&#x65f6;&#x4f1a;&#x7528;&#x5230;&#x5b83;&#x7684;&#x503c;&#x3002",{"_index":5420,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7c7b;&#x578b;&#x7684;&#x5bbd;&#x5ea6;&#x662f;&#x6307;&#x5b83;&#x7684;&#x5355;&#x4e2a;&#x503c;&#x9700;&#x8981;&#x5360;&#x7528;&#x7684;&#x5b57;&#x8282;&#x6570;&#x3002;&#x6bd4;&#x5982;&#xff0c",{"_index":1458,"title":{},"body":{"basic/map.html#map":{}}}],["x7c7b;&#x578b;&#x7684;&#x5bfc;&#x822a;&#x9879;&#x7684",{"_index":2606,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x7c7b;&#x578b;&#x7684;&#x6210;&#x5458;&#xff0c;&#x8bb0;&#x5f55;&#x5177;&#x4f53;&#x7684;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#xff0c;&#x5305;&#x7684;&#x5b9e;&#x73b0;&#x4e2d;&#xff0c;&#x5b9a;&#x4e49;&#x4e86;&#x4e24;&#x4e2a;&#x4fbf;&#x6377;&#x51fd;&#x6570;&#xff0c",{"_index":4903,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x7c7b;&#x578b;&#x7684;&#x6210;&#x5458;&#xff1a;&#x56e0;&#x4e3a;&#x4e00;&#x4e2a;&#x805a;&#x5408;&#x7684;&#x503c;&#x4e0d;&#x80fd;&#x5305;&#x542b;&#x5b83;&#x81ea;&#x8eab;&#x3002;&#xff08;&#x8be5;&#x9650;&#x5236;&#x540c;&#x6837;&#x9002;&#x5e94;&#x4e8e;&#x6570;&#x7ec4;&#x3002;&#xff09",{"_index":2048,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7c7b;&#x578b;&#x7684;&#x64a4;&#x9500;&#x51fd;&#x6570;&#xff08;&#x7531;&#x53d8;&#x91cf",{"_index":8182,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x7528;&#x9014;&#x4e3b;&#x8981;&#x662f;&#x4f5c;&#x4e3a;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x7684;&#x7f13;&#x51b2;&#x533a;&#x3002",{"_index":3865,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x7ea6;&#x675f",{"_index":3837,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x7ed3;&#x679c;&#x58f0;&#x660",{"_index":1297,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x7c7b;&#x578b;&#x7684;&#x9519;&#x8bef;&#x3002",{"_index":7601,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7c7b;&#x578b;&#x7684;&#x9519;&#x8bef;&#x3002;&#x5728",{"_index":7538,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x7c7b;&#x578b;&#x7684;&#x9519;&#x8bef;&#x3002;&#x5982;&#x679c;&#x76ee;&#x5f55;&#x4e0d;&#x4e3a;&#x7a7a;&#xff0c",{"_index":7603,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7c7b;&#x578b;&#x7684;&#x9519;&#x8bef;&#x3002;&#x6211;&#x4eec;&#x770b;&#x770b",{"_index":7623,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7c7b;&#x578b;&#x7684;&#x9519;&#x8bef;&#x503c;&#xff0c;&#x6216;&#x8005;&#x5176;&#x4ed6;&#x7684;&#x53ef;&#x4ee5;&#x88ab;&#x6709;&#x6548;&#x5e8f;&#x5217;&#x5316;&#x7684;&#x503c;&#x3002;&#x8fd9;&#x91cc;&#x7684;&#x201c;&#x6709;&#x6548;&#x5e8f;&#x5217;&#x5316;&#x201d;&#x6307;&#x7684;&#x662f;&#xff0c;&#x53ef;&#x4ee5;&#x66f4;&#x6613;&#x8bfb;&#x5730;&#x53bb;&#x8868;&#x793a",{"_index":694,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x7c7b;&#x578b;&#x7c7b;&#x4f3c;&#xff0c",{"_index":3871,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x867d;&#x7136;&#x662f;&#x6307;&#x9488;&#x7c7b;&#x578b;&#xff0c;&#x4f46;&#x662f;&#x90a3;&#x4e9b;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x8981;&#x64cd;&#x4f5c;&#x7684;&#x662f;&#x8fd9;&#x4e2a;&#x6307;&#x9488;&#x503c;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x5b83;&#x6307;&#x5411",{"_index":8014,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x7c7b;&#x578b;&#x88ab;&#x5d4c;&#x5165;&#x5230;&#x4e86",{"_index":2070,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x7c7b;&#x578b;&#x8bfb;&#x53d6;&#x65b9;&#x6cd5",{"_index":5425,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7c7b;&#x578b;&#x8f6c;&#x5316;&#x51fd;&#x6570",{"_index":6096,"title":{"standards/data/math.html#类型转化函数":{}},"body":{}}],["x7c7b;&#x578b;&#x8f6c;&#x6362",{"_index":240,"title":{"index.html#类型转换":{}},"body":{"basic/interface.html#接口":{}}}],["x7c7b;&#x578b;&#x8f6c;&#x6362;&#x5728;&#x7f16;&#x8bd1;&#x671f;&#x5b8c;&#x6210;&#xff0c;&#x5305;&#x62ec;&#x5f3a;&#x5236;&#x8f6c;&#x6362;&#x548c;&#x9690;&#x5f0f;&#x8f6c;&#x6362",{"_index":243,"title":{},"body":{"index.html#类型转换":{}}}],["x7c7b;&#x578b;&#x8f6c;&#x6362;&#x7528;&#x4e8e;&#x5c06;&#x4e00;&#x79cd;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf;&#x8f6c;&#x6362;&#x4e3a;&#x53e6;&#x5916;&#x4e00;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf;&#xff1a",{"_index":245,"title":{},"body":{"index.html#类型转换":{}}}],["x7c7b;&#x578b;&#x8fd9;&#x6837;&#x7684;&#x5927",{"_index":4355,"title":{},"body":{"standards/data/big.html#big":{}}}],["x7c7b;&#x578b;&#x8fdb;&#x884c;&#x6d6e;&#x70b9;&#x8fd0;&#x7b97;&#xff0c;&#x8fd4;&#x56de;&#x7ed3;&#x679c;&#x5c06;&#x7cbe;&#x786e;&#x5230",{"_index":4353,"title":{},"body":{"standards/data/big.html#big":{}}}],["x7c7b;&#x578b;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0",{"_index":8073,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#xff09;&#x4e5f;&#x5c5e;&#x4e8e;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#xff0c;&#x540c;&#x6837;&#x4e5f;&#x662f;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x548c;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#x3002",{"_index":8114,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#xff09;&#x662f;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x7684;&#xff0c;&#x4e5f;&#x662f;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#x3002",{"_index":8074,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7c7b;&#x578b;&#xff0c",{"_index":305,"title":{},"body":{"index.html#类型断言":{}}}],["x7c7b;&#x578b;&#xff0c;&#x4e0d;&#x540c;&#x7cfb;&#x7edf;&#x80fd;&#x8868;&#x793a;&#x7684;&#x8303;&#x56f4;&#x662f;&#x4e0d;&#x4e00;&#x6837;&#x7684;&#xff0c;&#x76ee;&#x524d;&#x7684;&#x5b9e;&#x73b0;&#x662f;&#xff0c;32",{"_index":4926,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x7c7b;&#x578b;&#xff0c;&#x4f46;&#x662f;&#x8fd9;&#x91cc;&#x7684",{"_index":1267,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x7c7b;&#x578b;&#xff0c;&#x518d;&#x4e3a;&#x5176;&#x5b9e;&#x73b0",{"_index":9291,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x7c7b;&#x578b;&#xff0c;&#x5e76;&#x4e14;&#x5b9e;&#x73b0;&#x4e86",{"_index":9253,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x7c7b;&#x578b;&#xff0c;&#x6211;&#x4eec;&#x79f0",{"_index":8992,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7c7b;&#x578b;&#xff0c;&#x8be5;&#x5305;&#x5e76;&#x672a;&#x63d0;&#x4f9b;&#x8fdb;&#x884c;&#x539f;&#x5b50;&#x52a0;&#x6cd5;&#x64cd;&#x4f5c;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":8004,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x7c7b;&#x578b;&#xff1a",{"_index":9258,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x7c7b;&#xff0c;&#x4f46",{"_index":1270,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x7cbe;&#x786e;&#x5730;&#x4ec",{"_index":7088,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x7cfb;&#x5217;&#x51fd;&#x6570;&#x53ef;&#x4ee5;&#x5220;&#x9664;&#x5b57;&#x7b26;&#x4e32;&#x9996;&#x5c3e;&#x7684;&#x8fde;&#x7eed;&#x591a;&#x4f59;&#x5b57;&#x7b26;&#xff0c;&#x5305;&#x62ec;&#xff1a",{"_index":5960,"title":{},"body":{"standards/text/strings.html#修改字符串":{}}}],["x7cfb;&#x7edf;&#x662f;&#x5192;&#x53f7",{"_index":952,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528",{"_index":7606,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#x3002",{"_index":7597,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#x3002;&#xff08",{"_index":7435,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#x5173;&#x95ed;&#x4e00;&#x4e2a;&#x6253;&#x5f00;&#x7684;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#xff0c;&#x5e76;&#x5c06;&#x5176;&#x91ca;&#x653e;&#x56de;&#x8c03;&#x7528;&#x8fdb;&#x7a0b;&#xff0c;&#x4f9b;&#x8be5;&#x8fdb;&#x7a0b;&#x7ee7;&#x7eed;&#x4f7f;&#x7528;&#x3002;&#x5f53;&#x8fdb;&#x7a0b;&#x7ec8;&#x6b62;&#x65f6;&#xff0c;&#x5c06;&#x81ea;&#x52a8;&#x5173;&#x95ed;&#x5176;&#x5df2;&#x6253;&#x5f00;&#x7684;&#x6240;&#x6709;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x3002",{"_index":7436,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x76ee;&#x5f55;&#xff0c;go",{"_index":7632,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#x5c06;&#x6587;&#x4ef6;&#x5927;&#x5c0f;&#x8bbe;&#x7f6e;&#x4e3a",{"_index":7479,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#x65e0;&#x975e;&#x5206;&#x8fa8;&#x6240;&#x8fd4;&#x56de;&#x7684;&#x5b57",{"_index":7627,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#x7528;&#x4e8e;&#x4e3a;&#x6307;&#x5b9a;&#x8def;&#x5f84;&#x540d;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#xff08;&#x60f3;&#x8981;&#x79fb;&#x9664;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#xff0c;&#x4f7f;&#x7528",{"_index":7613,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#x7528;&#x4e8e;&#x521b;&#x5efa;&#x548c;&#x79fb;&#x9664;&#xff08;&#x786c;&#xff09;&#x94fe;&#x63a5;&#x3002;go",{"_index":7590,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#x79fb;&#x9664;&#x4e00;&#x4e2a;&#x6307;&#x5b9a;&#x7684;&#x76ee;&#x5f55;&#xff0c;&#x76ee;&#x5f55;&#x53ef;&#x4ee5;&#x662f;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#x6216;&#x76f8;&#x5bf9;&#x8def;&#x5f84;&#x3002;&#x5728;&#x8bb2;&#x89e3",{"_index":7646,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#xff0c;&#x5982;&#x679c;&#x8981;&#x79fb;&#x9664;&#x7684;&#x662f;&#x76ee;&#x5f55;&#xff0c;&#x5219",{"_index":7594,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#xff0c;&#x8fd9;&#x4f1a;&#x5c06;&#x6570;&#x636e;&#x548c;&#x5143;&#x6570;&#x636e;&#x90fd;&#x5237;&#x5230;&#x78c1;&#x76d8;&#xff1b;&#x5982;&#x679c;&#x53ea;&#x60f3;&#x5237;&#x6570;&#x636e;&#x5230;&#x78c1;&#x76d8;&#xff08;&#x6bd4;&#x5982;&#xff0c;&#x6587;&#x4ef6;&#x5927;&#x5c0f;&#x6ca1;&#x53d8;&#xff0c;&#x53ea;&#x662f;&#x53d8;&#x4e86;&#x6587;&#x4ef6",{"_index":7433,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7cfb;&#x7edf;&#x8c03;&#x7528;&#xff1b;&#x4f46",{"_index":7592,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x7ea7;&#x5730;&#x6cbf;&#x7740;&#x8c03;&#x7528;&#x6808;&#x7684;&#x53cd;&#x65b9;&#x5411;&#x4f20;&#x64ad;&#x81f3;&#x9876;&#x7aef;&#xff0c",{"_index":676,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x7eb2;&#x3002",{"_index":1300,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x7eb3;&#x79d2",{"_index":3415,"title":{},"body":{"standards/time.html#time":{}}}],["x7eb3;&#x79d2;&#xff0c;&#x5b9a;&#x65f6;&#x5668;&#x5c31;&#x4f1a;&#x89e6;&#x53d1;&#x4e00;&#x6b21;&#x3002",{"_index":3586,"title":{},"body":{"standards/time.html#Ticker":{}}}],["x7eb5;&#x89c2",{"_index":6380,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7ebf;&#x7a0b",{"_index":6184,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x7ec4;&#x5408;&#x8d77;&#x6765;&#xff0c;&#x5e76;&#x4e0d;&#x80fd;&#x901a;&#x8fc7;&#x8c03;&#x7528;&#x4e00;&#x6b21",{"_index":7119,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x7ec4;&#x5408;&#xff1a",{"_index":2497,"title":{},"body":{"standards/log.html#Logger":{}}}],["x7ec4;&#x88c5;&#x5b57;&#x7b26;&#x4e32",{"_index":3778,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7ec8;&#x7aef;&#x3002",{"_index":7477,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7ecf;&#x5386;&#x7684;&#x79d2;&#x6570;&#x3002;&#x4e5f;&#x5c31;&#x662f",{"_index":3482,"title":{},"body":{"standards/time.html#Time":{}}}],["x7ed1;&#x5b9a;&#x4e4b;&#x540e;&#xff0c;&#x5c31;&#x5f62;&#x6210;&#x4e86;&#x4e00;&#x4e2a",{"_index":6501,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7ed3;&#x51b0;&#x70b9;&#x6e29;&#x5ea6",{"_index":280,"title":{},"body":{"index.html#自定义类型":{}}}],["x7ed3;&#x5408;&#xff0c;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x7528;&#x901a;&#x4fe1;&#x4ee3;&#x66ff;&#x5171;&#x4eab;&#x5185;&#x5b58;&#x7684",{"_index":2880,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7ed3;&#x5c3",{"_index":3774,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7ed3;&#x5c3e;&#x3002;&#x591a;&#x4e2a;&#x8bed;&#x53e5;&#x5199;&#x5728;&#x540c;&#x4e00;&#x884c;&#xff0c;&#x5219;&#x5fc5;&#x987b;&#x4f7f;&#x7528",{"_index":206,"title":{},"body":{"index.html#行分隔符":{}}}],["x7ed3;&#x5c3e;&#xff0c",{"_index":5627,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x7ed3;&#x5c3e;&#xff0c;&#x90a3;&#x4e48;&#x8fd4;&#x56de;&#x7684",{"_index":5459,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7ed3;&#x5c3e;&#xff1a",{"_index":5924,"title":{},"body":{"standards/text/strings.html#前缀和后缀":{}}}],["x7ed3;&#x675f;&#x65f6;&#x95f4",{"_index":3541,"title":{},"body":{"standards/time.html#Time":{}}}],["x7ed3;&#x675f;&#x8fd0;&#x884c;&#x5462;&#xff1f",{"_index":6328,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7ed3;&#x675f;&#xff0c",{"_index":7036,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x7ed3;&#x6784",{"_index":7514,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x7ed3;&#x6784;&#x4e2d;&#xff0c;&#x901a;&#x8fc7",{"_index":7323,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x7ed3;&#x6784;&#x4f53",{"_index":2026,"title":{"basic/struct.html#结构体":{}},"body":{}}],["x7ed3;&#x6784;&#x4f53;&#x3002;&#x4f46;&#x662f",{"_index":2073,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x7ed3;&#x6784;&#x4f53;&#x5185;&#x5d4c;&#x4e86;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":2089,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x7ed3;&#x6784;&#x4f53;&#x521d;&#x59cb;&#x5316;&#x4e00;&#x4e2a",{"_index":8898,"title":{},"body":{"standards/net/http.html#client":{}}}],["x7ed3;&#x6784;&#x4f53;&#x53ea;&#x6709;&#x9996;&#x5b57;&#x6bcd;&#x5927;&#x5c0f",{"_index":8921,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7ed3;&#x6784;&#x4f53;&#x5b57;&#x6bb5;&#x8d4b;&#x503c",{"_index":2428,"title":{},"body":{"basic/var.html#赋值":{}}}],["x7ed3;&#x6784;&#x4f53;&#x5b57;&#x9762;&#x503c",{"_index":2051,"title":{"basic/struct.html#结构体字面值":{}},"body":{}}],["x7ed3;&#x6784;&#x4f53;&#x5b57;&#x9762;&#x503c;&#x53ef;&#x4ee5;&#x6307;&#x5b9a;&#x6bcf;&#x4e2a;&#x6210;&#x5458;&#x7684;&#x503c",{"_index":2052,"title":{},"body":{"basic/struct.html#结构体字面值":{}}}],["x7ed3;&#x6784;&#x4f53;&#x5b57;&#x9762;&#x503c;&#x5e76;&#x6ca1;&#x6709;&#x7b80;&#x77ed;&#x8868;&#x793a;&#x533f;&#x540d;&#x6210;&#x5458;&#x7684;&#x8bed;&#x6cd5",{"_index":2074,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x7ed3;&#x6784;&#x4f53;&#x5b9a;&#x4e49;&#x9700;&#x8981;&#x4f7f;&#x7528",{"_index":2028,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7ed3;&#x6784;&#x4f53;&#x5d4c;&#x5165",{"_index":2056,"title":{"basic/struct.html#结构体嵌入-匿名成员":{}},"body":{}}],["x7ed3;&#x6784;&#x4f53;&#x662f;&#x5b8c;&#x5168;&#x4e24;&#x56de;&#x4e8b;&#x3002",{"_index":8924,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x7ed3;&#x6784;&#x4f53;&#x662f;&#x7531;&#x4e00;&#x7cfb;&#x5217;&#x5177;&#x6709;&#x76f8;&#x540c;&#x7c7b;&#x578b;&#x6216;&#x4e0d;&#x540c;&#x7c7b;&#x578b;&#x7684;&#x6570;&#x636e;&#x6784;&#x6210;&#x7684;&#x6570;&#x636e;&#x96c6;&#x5408;&#x3002",{"_index":2027,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7ed3;&#x6784;&#x4f53;&#x6bd4;&#x8f83",{"_index":2053,"title":{"basic/struct.html#结构体比较":{}},"body":{}}],["x7ed3;&#x6784;&#x4f53;&#x7684;&#x6210;&#x5458",{"_index":1558,"title":{},"body":{"basic/json.html#序列化":{}}}],["x7ed3;&#x6784;&#x4f53;&#xff0c",{"_index":2071,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x7ed3;&#x6784;&#x5c01;&#x88c5;&#x4e86;&#x4e00;&#x4e2a",{"_index":5510,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7ed3;&#x6784;&#x7684",{"_index":3479,"title":{},"body":{"standards/time.html#Time":{}}}],["x7ed3;&#x6784;&#x7684;&#x5b9a;&#x4e49;&#x5982;&#x4e0b;&#xff1a",{"_index":4901,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x7ed3;&#x6784;&#x7c7b;&#x578b;&#x7684",{"_index":9235,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x7ed3;&#x6784;&#x7c7b;&#x578b;&#xff0c;&#x5d4c;&#x5165",{"_index":9234,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x7ed3;&#x679c",{"_index":1813,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x7ed3;&#x679c;&#x503c;&#x62ff;&#x5230",{"_index":3935,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7ed3;&#x679c;&#x6dfb;&#x52a0;&#x5230;&#x4efb;&#x52a1;&#x961f;&#x5217;&#xff1b",{"_index":6565,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7ed3;&#x679c;&#x90fd;&#x662f",{"_index":1793,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x7ed3;&#x679c;&#xff1a;1.223e+03",{"_index":4991,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x7ed3;&#x679c;&#xff1a;1.22e+03",{"_index":4992,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x7ed9",{"_index":8751,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x7ed9;&#x4e86;&#x8bed;&#x6cd5;&#x7cd6;&#xff0c;&#x51cf;&#x5c11;&#x4e86;&#x9ebb;&#x70e6;&#xff0c;&#x4f46;&#x662f;&#x4e5f;&#x5bfc;&#x81f4;&#x4e86",{"_index":1745,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7edd;&#x5927;&#x591a;&#x6570;&#x88ab;&#x89c6;&#x4e3a",{"_index":1767,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x7edd;&#x5bf9;&#x503c;&#x51fd;&#x6570",{"_index":6099,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x7edd;&#x5bf9;&#x8def;&#x5f84;&#xff0c;&#x5728",{"_index":5660,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x7edd;&#x5bf9;&#x96f6;&#x5ea6",{"_index":279,"title":{},"body":{"index.html#自定义类型":{}}}],["x7ee7;&#x7eed;&#x6267;&#x884c;&#x3002",{"_index":6590,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7f13;&#x51b2;&#x533a;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x4e00;&#x4e2a",{"_index":5408,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7f13;&#x51b2;&#x533a;&#x7684;&#x597d;&#x5904;&#x662f;&#xff0c;&#x53ef;&#x4ee5;&#x5728;&#x5927;&#x591a;&#x6570;&#x7684;&#x65f6;&#x5019;&#x964d;&#x4f4e;&#x8bfb;&#x53d6;&#x65b9;&#x6cd5;&#x7684;&#x6267;&#x884c;&#x65f6;&#x95f4;&#x3002",{"_index":5413,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x7f13;&#x51b2;&#x901a;&#x9053",{"_index":2974,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7f13;&#x5b58",{"_index":5513,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x7f13;&#x5b58;&#x5bf9;&#x8c61;&#x7684;&#x671f;&#x9650;&#x662f;&#x5f88;&#x8be1;&#x5f02;&#x7684;&#xff0c;&#x5148;&#x770b;&#x4e00;&#x4e0b",{"_index":8319,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7f13;&#x5b58;&#x7684;&#x671f;&#x9650;&#x53ea;&#x662f;&#x4e24;&#x6b21;gc&#x4e4b;&#x95f4;&#x8fd9;&#x6bb5;&#x65f6;&#x95f4",{"_index":8328,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7f16;&#x5199",{"_index":3158,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x7f16;&#x5199;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x8981;&#x786e;&#x4fdd;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x5bf9;&#x95ee;&#x9898;&#x7ec6;&#x8282;&#x7684;&#x63cf;&#x8ff0;&#x662f;&#x8be6;&#x5c3d;&#x7684;&#x3002;&#x5c24;&#x5176;&#x662f;&#x8981;&#x6ce8;&#x610f;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x8868;&#x8fbe;&#x7684;&#x4e00;&#x81f4;&#x6027;&#xff0c;&#x5373;&#x76f8;&#x540c;&#x7684;&#x51fd;&#x6570;&#x6216;&#x540c;&#x5305;&#x5185",{"_index":623,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x7f16;&#x7801",{"_index":321,"title":{"index.html#编码":{}},"body":{"index.html#编码":{},"basic/flow.html#for":{}}}],["x7f16;&#x7801;&#x503c",{"_index":3953,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x503c;&#x3002",{"_index":370,"title":{},"body":{"index.html#编码":{},"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x503c;&#x4ee3;&#x8868;&#x7684;&#x90a3;&#x4e2a",{"_index":1130,"title":{},"body":{"basic/flow.html#for":{}}}],["x7f16;&#x7801;&#x503c;&#x6765;&#x8868;&#x8fbe;&#x7684;&#x3002",{"_index":3941,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x503c;&#x6765;&#x8868;&#x8fbe;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x6362;&#x4e00;&#x79cd;&#x65b9;&#x5f0f;&#x6765;&#x5c55;&#x73b0;&#x8fd9;&#x4e2a;&#x5b57;&#x7b26;&#x5e8f;&#x5217;&#xff1a",{"_index":3965,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x503c;&#x90fd;&#x62c6;&#x6210;&#x76f8;&#x5e94;&#x7684;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x3002;&#x4e0a;&#x8ff0;&#x4ee3;&#x7801;&#x4e2d;&#x7684;&#x7b2c;&#x4e94;&#x884c;&#x5c31;&#x662f;&#x8fd9;&#x4e48;&#x505a;&#x7684;&#x3002;&#x5b83;&#x4f1a;&#x5f97;&#x5230;&#x5982;&#x4e0b;&#x7684;&#x8f93;&#x51fa;&#xff1a",{"_index":3967,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x503c;&#xff0c;&#x6216;&#x8005;&#x8bf4;&#x6bcf;&#x4e00;&#x4e2a",{"_index":1125,"title":{},"body":{"basic/flow.html#for":{}}}],["x7f16;&#x7801;&#x5219;&#x5c06;&#x6b64;&#x4f4d;&#x4e5f;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x5b57;&#x7b26;&#x3002;ascii",{"_index":332,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x540e;&#x4f5c;&#x4e3a;&#x8bf7;&#x6c42;&#x7684",{"_index":8915,"title":{},"body":{"standards/net/http.html#client":{}}}],["x7f16;&#x7801;&#x548c;&#x89e3;&#x7801",{"_index":5142,"title":{},"body":{"standards/text/unicode.html#utf8-包":{}}}],["x7f16;&#x7801;&#x5b57;&#x7b26",{"_index":4732,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x7f16;&#x7801;&#x5bf9;&#x8c61",{"_index":1588,"title":{},"body":{"basic/json.html#序列化":{}}}],["x7f16;&#x7801;&#x5f62;&#x5f0f;&#xff08;&#x5982;&#x5b57;&#x7b26",{"_index":4717,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x7f16;&#x7801;&#x652f;&#x6301;&#x7684;&#x53ef;&#x6253;&#x5370;&#x5b57;&#x7b26;&#x548c;&#x63a7;&#x5236;&#x5b57;&#x7b26;&#x7684;&#x96c6;&#x5408;&#x4e5f;&#x88ab;&#x53eb;&#x505a",{"_index":333,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x65b9;&#x6848;&#x4f7f;&#x7528;&#x5355;&#x4e2a;&#x5b57;&#x8282;&#xff08;byte&#xff09;&#x7684;&#x4e8c;&#x8fdb;&#x5236;&#x6570;&#x6765;&#x7f16;&#x7801;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x3002;&#x6807;&#x51c6;&#x7684",{"_index":329,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x662f;&#x5b8c;&#x5168;&#x517c;&#x5bb9;&#x7684;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x5728",{"_index":360,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x6807;&#x8bc6",{"_index":3732,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x683c;&#x5f0f;&#x7684;&#x4e00;&#x4e2a;&#x5de8;&#x5927;&#x4f18;&#x52bf;&#x3002",{"_index":363,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x683c;&#x5f0f;&#x8fdb;&#x884c;&#x5b58;&#x50a8;&#x3002;&#x5982;&#x679c;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x4e2d;&#x51fa;&#x73b0;&#x4e86;&#x975",{"_index":323,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x7528;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x7684;&#x6700;&#x9ad8;&#x6bd4;&#x7279;&#xff08;bit&#xff09;&#x4f4d;&#x4f5c;&#x4e3a;&#x5947;&#x5076;&#x6821;&#x9a8c;&#x4f4d;&#xff0c",{"_index":330,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x7684;&#x51fd;&#x6570;&#xff1a",{"_index":5138,"title":{},"body":{"standards/text/unicode.html#utf8-包":{}}}],["x7f16;&#x7801;&#x7684;&#x5b57;&#x7b26;&#x3002",{"_index":4706,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x7f16;&#x7801;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x800c",{"_index":3863,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x7684;&#x5b57;&#x7b26;&#xff0c;&#x90a3;&#x4e48;&#x5728;&#x6784;&#x5efa;&#x3001;&#x5b89;&#x88c5;&#x4ee5;&#x53ca;&#x8fd0;&#x884c;&#x7684;&#x65f6;&#x5019;&#xff0c",{"_index":324,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x89c4;&#x8303;&#x4e2d;&#xff0c;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x80fd;&#x4e14;&#x53ea;&#x80fd;&#x7531;&#x4e0e;&#x5b83;&#x5bf9;&#x5e94;&#x7684;&#x90a3;&#x4e2a;&#x4ee3;&#x7801;&#x70b9;&#x8868;&#x793a;&#x3002",{"_index":342,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x89c4;&#x8303;&#x63d0;&#x4f9b;&#x4e86;&#x4e09;&#x79cd;&#x4e0d;&#x540c;&#x7684;&#x7f16;&#x7801;&#x683c;&#x5f0f;&#xff0c;&#x5373;&#xff1a",{"_index":343,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x89c4;&#x8303;&#x901a;&#x5e38;&#x4f7f;&#x7528;&#x5341;&#x516d;&#x8fdb;&#x5236;&#x8868;&#x793a;&#x6cd5;&#x6765;&#x8868;&#x793a",{"_index":338,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x89c4;&#x8303;&#xff0c;&#x5b9e;&#x9645;&#x4e0a;&#x662f;&#x53e6;&#x4e00;&#x4e2a;&#x66f4;&#x52a0;&#x901a;&#x7528;&#x7684;&#x3001;&#x9488;&#x5bf9;&#x4e66;&#x9762;&#x5b57;&#x7b26;&#x548c;&#x6587;&#x672c;&#x7684;&#x5b57;&#x7b26;&#x7f16;&#x7801;&#x6807;&#x51c6;&#x3002;&#x5b83;&#x4e3a;&#x4e16;&#x754c;&#x4e0a;&#x73b0;&#x5b58;&#x7684;&#x6240;&#x6709;&#x81ea;&#x7136;&#x8bed;&#x8a00;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#xff0c",{"_index":335,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x96c6;&#x3002",{"_index":334,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#xff0c;&#x8fd9;&#x91cc;&#x7684;&#x4ee3;&#x7801;&#x53ea;&#x662f;&#x4e00;&#x4e2a;&#x793a;&#x4f8b;&#xff09;&#xff1a",{"_index":6922,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x7f16;&#x8bd1;&#x4e00;&#x4e2a;&#x5305;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x7f16;&#x8bd1;&#x5668;&#x53ea;&#x9700;&#x8bfb;&#x53d6;&#x6bcf;&#x4e2a;&#x5bfc;&#x5165;&#x5305;&#x7684;&#x76ee;&#x6807;&#x6587;&#x4ef6;&#xff0c;&#x800c;&#x4e0d;&#x9700;&#x8981;&#x904d;&#x5386;&#x6240;&#x6709;&#x4f9d;&#x8d56;&#x7684;&#x7684;&#x6587;&#x4ef6",{"_index":2149,"title":{},"body":{"basic/package.html#包":{}}}],["x7f16;&#x8bd1;&#x4f1a;&#x5931;&#x8d25;&#x3002",{"_index":2152,"title":{},"body":{"basic/package.html#import":{}}}],["x7f16;&#x8bd1;&#x540e;&#x5305;&#x7684;&#x76ee;&#x6807;&#x6587;&#x4ef6;&#x4e0d;&#x4ec5;&#x4ec5;&#x8bb0;&#x5f55;&#x5305;&#x672c;&#x8eab;&#x7684;&#x5bfc;&#x51fa;&#x4fe1;&#x606f;&#xff0c;&#x540c;&#x65f6;&#x8fd8;&#x8bb0;&#x5f55;&#x4e86;&#x5305;&#x7684;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x3002",{"_index":2147,"title":{},"body":{"basic/package.html#包":{}}}],["x7f16;&#x8bd1;&#x5668;&#x4f1a;&#x9690;&#x5f0f;&#x5730;&#x5e2e;&#x6211;&#x4eec;&#x7528;&amp;p&#x53bb;&#x8c03;&#x7528;scaleby&#x8fd9;&#x4e2a;&#x65b9;&#x6cd5;&#x3002;&#x8fd9;&#x79cd;&#x7b80;&#x5199;&#x65b9;&#x6cd5;&#x53ea;&#x9002;&#x7528;&#x4e8e;&#x201c;&#x53d8;&#x91cf;&#x201d",{"_index":1235,"title":{},"body":{"basic/oop.html#方法":{}}}],["x7f16;&#x8bd1;&#x671f;&#x8ba1;&#x7b97",{"_index":1352,"title":{},"body":{"basic/constant.html#常量":{}}}],["x7f3a;&#x7701",{"_index":1885,"title":{},"body":{"basic/slice.html#slice":{}}}],["x7f6e;&#x4e3a",{"_index":5318,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x7f6e;&#x4e86",{"_index":7567,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x7f6e;&#x8fde;&#x63a5;&#x6c60;&#x4e2d;&#x3002;&#x8fde;&#x63a5;&#x6c60;&#x7684;&#x5927;&#x5c0f;&#x53ef;&#x4ee5;&#x7528",{"_index":4449,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x800c",{"_index":346,"title":{},"body":{"index.html#编码":{},"basic/oop.html#String-方法":{},"basic/pointer.html#为什么需要指针":{},"standards/data/container.html#链表":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"standards/net/http.html#HTTP-Server":{}}}],["x800c;&#x4e0d;&#x662f",{"_index":3485,"title":{},"body":{"standards/time.html#Time":{},"standards/io/ioutil.html#ReadAll-函数":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["x800c;&#x4e0d;&#x662f;&#x5176;&#x4e2d;&#x5df2;&#x5b58;&#x5185;&#x5bb9;&#x7684;&#x603b;&#x957f;&#x5ea6;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x5185;&#x5bb9;&#x957f;&#x5ea6;&#xff09;&#x3002",{"_index":3879,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x800c;&#x4e0d;&#x662f;&#x9501;&#x4e0a;&#x8fd9;&#x4e2a;&#x9501;&#x3002",{"_index":7921,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x800c;&#x4e0d;&#x8fd4;&#x56de;&#x9519;&#x8bef;&#x3002",{"_index":7655,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x800c;&#x539f;&#x5148",{"_index":6925,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x800c;&#x540e;&#x8005;&#x5219;&#x88ab;&#x7528;&#x4e8e;&#x4ece;&#x5f53;&#x524d;&#x7684;&#x6c60;&#x4e2d;&#x83b7;&#x53d6;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#xff0c;&#x5b83;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":8290,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x800c;&#x540e;&#x8005;&#x7684;&#x901a;&#x77e5;&#x5374;&#x4f1a;&#x5524;&#x9192;&#x6240;&#x6709;&#x4e3a;&#x6b64;&#x7b49;&#x5f85;&#x7684",{"_index":7984,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x800c;&#x5728",{"_index":1729,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x800c;&#x5d29;&#x6e83;&#xff0c;&#x5c31;&#x662f;&#x76f8;&#x5173;&#x7684",{"_index":7968,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x800c;&#x6211;&#x4eec",{"_index":9008,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x800c;&#x6269;&#x5c55;&#x7684",{"_index":331,"title":{},"body":{"index.html#编码":{}}}],["x800c;&#x662f",{"_index":8008,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x800c;&#x662f;&#x5b83;&#x7684;&#x526f;&#x672c",{"_index":3220,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x800c;&#x82e5;&#x201c;&#x7761;&#x7720;&#x201d;&#x592a;&#x957f;&#x5219;&#x7eaf;&#x5c5e;&#x6d6a;&#x8d39;&#x65f6;&#x95f4;&#xff0c;&#x8fd9;&#x4e2a;&#x65f6;&#x95f4;&#x5c31;&#x592a;&#x96be;&#x628a;&#x63e1;&#x4e86;&#x3002",{"_index":6337,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x800c;&#x8a00;&#x7684;&#x3002;&#x5f53;&#x7136;&#xff0c;&#x53ef;&#x4ee5;&#x9488;&#x5bf9;&#x67d0;&#x4e2a;&#x76ee;&#x5f55;&#x6307;&#x5b9a;&#x76f8;&#x5bf9;&#x8def;&#x5f84;&#x3002",{"_index":5659,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x800c;&#x9009;&#x62e9;&#x8fd9;&#x4e2a;&#x65f6;&#x95f4;&#x70b9;&#xff0c;&#x4e5f;&#x662f;&#x51fa;&#x4e8e;&#x597d;&#x8bb0;&#x7684;&#x8003;&#x8651;&#xff0c;&#x5b98;&#x65b9;&#x7684;&#x4f8b;&#x5b50;&#xff1a",{"_index":3515,"title":{},"body":{"standards/time.html#Time":{}}}],["x800c;&#x975e",{"_index":4816,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x8054;&#x7cfb;&#x4e0a;&#x4e86;&#xff0c",{"_index":8999,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x80fd;&#x505a;&#x5230;&#xff0c;go",{"_index":7620,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x80fd;&#x591f;&#x4f7f;&#x7528;&#xff0c;&#x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#xff0c",{"_index":8937,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x80fd;&#x591f;&#x5904;&#x7406;&#x6240;&#x6709;&#x7684;&#x6587;&#x4ef6;&#x8def;&#x5f84;&#xff0c;&#x4e0d;&#x7ba1;&#x662f;&#x4ec0;&#x4e48;&#x7cfb;&#x7edf;&#x3002;&#x6ce8;&#x610f;&#xff0c;&#x8def;&#x5f84;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x5e76;&#x4e0d;&#x4f1a;&#x6821;&#x9a8c;&#x8def;&#x5f84;&#x662f;&#x5426;&#x771f;&#x5b9e;&#x5b58;&#x5728;&#x3002",{"_index":5622,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x80fd;&#x591f;&#x8868;&#x793a;&#x7684;&#x6700;&#x5927;&#x6216;&#x6700;&#x5c0f;&#x503c;&#x3002",{"_index":4941,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x80fd;&#x628a;&#x7b7e;&#x540d;&#x4e3a",{"_index":9099,"title":{},"body":{"standards/net/http.html#中间件-Middleware":{}}}],["x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x547d;&#x4ee4;&#x4f1a;&#x4e32;&#x884c;&#x5730;&#x6267;&#x884c;&#x5b83;&#x4eec",{"_index":4220,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x80fd;&#x8868;&#x793a;&#x7684;&#x6700;&#x5927;&#x6570;&#x503c;&#xff0c;&#x5927;&#x7ea6;&#x662f",{"_index":3713,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x810f;&#x5b57;&#x5178",{"_index":8378,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x810f;&#x5b57;&#x5178;&#x548c;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x5982;&#x679c;&#x90fd;&#x5b58;&#x6709;&#x540c;&#x4e00;&#x4e2a;&#x952e;&#x503c;&#x5bf9;&#xff0c;&#x90a3;&#x4e48;&#x8fd9;&#x91cc;&#x7684;&#x4e24;&#x4e2a;&#x952e;&#x6307;&#x7684;&#x80af;&#x5b9a;&#x662f;&#x540c;&#x4e00;&#x4e2a;&#x57fa;&#x672c;&#x503c;&#xff0c;&#x5bf9;&#x4e8e;&#x4e24;&#x4e2a;&#x503c;&#x6765;&#x8bf4;&#x4e5f;&#x662f;&#x5982;&#x6b64;&#x3002;&#x6b63;&#x5982;&#x524d;&#x6587;&#x6240;&#x8ff0;&#xff0c",{"_index":8379,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x810f;&#x5b57;&#x5178;&#x76f4;&#x63a5;&#x4f5c;&#x4e3a;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#xff0c;&#x4fdd;&#x5b58;&#x5728;&#x5b83;&#x7684",{"_index":8396,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x81ea",{"_index":7061,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x81ea;&#x51cf",{"_index":1800,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x81ea;&#x52a8;&#x5783;&#x573e;&#x56de;&#x6536",{"_index":524,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x81ea;&#x589e;&#xff0c",{"_index":1799,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x81ea;&#x5b9a;&#x4e49;&#x5904;&#x7406;&#x5668",{"_index":9070,"title":{"standards/net/http.html#自定义处理器":{}},"body":{}}],["x81ea;&#x5b9a;&#x4e49;&#x65f6;&#x95f4;&#x683c;&#x5f0f;&#x5316;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x4f8b;&#x5982;&#xff1a",{"_index":3531,"title":{},"body":{"standards/time.html#Time":{}}}],["x81ea;&#x5b9a;&#x4e49;&#x7684",{"_index":9071,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["x81ea;&#x5b9a;&#x4e49;&#x7c7b;&#x578b",{"_index":272,"title":{"index.html#自定义类型":{}},"body":{}}],["x81ea;&#x5b9a;&#x4e49;&#x7c7b;&#x578b;&#x867d;&#x7136;&#x7f6e;&#x9876;&#x4e86;&#x5e95;&#x5c42;&#x7c7b;&#x578b;&#xff0c;&#x4f46;&#x662f;&#x53ea;&#x662f;&#x5e95;&#x5c42;&#x6570;&#x636e;&#x7ed3;&#x6784;&#x76f8;&#x540c;&#xff0c;&#x4e0d;&#x4f1a;&#x7ee7;&#x627f;&#x5e95;&#x5c42;&#x7c7b;&#x578b;&#x7684;&#x5176;&#x4ed6;&#x4fe1;&#x606f;&#xff0c;&#x6bd4;&#x5982;&#xff08;&#x65b9;&#x6cd5;&#xff09;&#x3002",{"_index":282,"title":{},"body":{"index.html#自定义类型":{}}}],["x81ea;&#x5b9a;&#x4e49;&#x7c7b;&#x578b;&#xff0c;&#x4e00;&#x822c;&#x51fa;&#x73b0;&#x5728;&#x5305;&#x4e00;&#x7ea7;&#xff0c;&#x4e0e;&#x53d8;&#x91cf;&#x4e00;&#x6837;&#xff0c;&#x5982;&#x679c;&#x7c7b;&#x578b;&#x540d;&#x5b57;&#x7684;&#x9996;&#x5b57;&#x6bcd;&#x662f;&#x5927;&#x5199;&#xff0c;&#x5219;&#x5728;&#x5305;&#x5916;&#x90e8;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#xff1a",{"_index":273,"title":{},"body":{"index.html#自定义类型":{}}}],["x81ea;&#x5df1;&#x5b8c;&#x6210;&#xff0c;&#x5b9e;&#x73b0",{"_index":6442,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x81ea;&#x884c;&#x7ed3;&#x675f;&#x6267;&#x884c;&#x3002",{"_index":6220,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x81ea;&#x884c;&#x8c03;&#x7528",{"_index":8807,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x81ea;&#x8eab;&#x3002;&#x6240;&#x6709;&#x8bbf;&#x95ee;&#x6587;&#x4ef6",{"_index":5778,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x81f3;&#x4e8e;&#x6807;&#x51c6;&#x5de5;&#x5177;&#xff0c;&#x4e3b;&#x8981;&#x6709",{"_index":4237,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x81f4;&#x4e86;&#x6b7b;&#x9501",{"_index":2920,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x81f4;&#x5185;&#x5b58;&#x6ea2;&#x51fa;&#x3002",{"_index":1323,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x8282;&#x6570;&#x7ec4;&#x7684;&#x60c5;&#x51b5;&#x3002;&#x8fd9;&#x6837;&#x4e5f;&#x5c31;&#x907f;&#x514d;&#x4e86;&#x591a;&#x4e2a;&#x540c;&#x6e90;&#x7684",{"_index":3846,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8282;&#x6570;&#xff0c;&#x90a3;&#x4e48;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#x5c31;&#x4f1a;&#x901a;&#x8fc7;&#x5207;&#x7247;&#x64cd;&#x4f5c;&#x5bf9;&#x539f;&#x6709;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x957f;&#x5ea6;&#x8fdb;&#x884c;&#x6269;&#x5145;&#xff0c;&#x5c31;&#x50cf;&#x4e0b;&#x9762;&#x8fd9;&#x6837;&#xff1a",{"_index":3907,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8282;&#x70b9;&#x53f7",{"_index":7516,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x8282;&#x70b9;&#xff0c;&#x5219;&#x6b64;&#x5b57;&#x6bb5;&#x5305;&#x542b;&#x4e3b;&#x3001;&#x8f85",{"_index":7522,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x8282;&#x7701;&#x5185;&#x5b58",{"_index":1728,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x82e5",{"_index":6802,"title":{},"body":{"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x82e5;&#x6587;&#x4ef6;&#x540d;&#x4e3a;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#xff0c;&#x90a3;&#x4e48;&#x8c03;&#x7528;&#x5c06;&#x5bf9;&#x5176;&#x8fdb;&#x884c;&#x89e3;&#x5f15;&#x7528;&#x3002",{"_index":7488,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["x82e5;&#x6ca1;&#x6709;&#x8bfb;&#x53d6;&#x5230;&#x5b57;&#x8282;&#xff0c;&#x9519;&#x8bef;&#x5c31;&#x53ea;&#x662f",{"_index":7080,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x82e5;&#x88ab;&#x5199;&#x533a;&#x57df;&#x6ca1;&#x6709;&#x91cd;&#x53e0;&#xff0c;&#x53ef;&#x5bf9;&#x76f8;&#x540c;&#x7684;&#x76ee;&#x6807;&#x5e76;&#x884c;&#x6267;&#x884c",{"_index":6875,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x82e5;&#x8fd9;&#x4e00;&#x6b65;&#x4f18;&#x5316;&#x672a;&#x80fd;&#x8fbe;&#x6210;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x5f53;&#x524d;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x5c0f;&#x4e8e;&#x65b0;&#x957f;&#x5ea6;&#x7684;&#x4e8c;&#x500d;&#xff0c;&#x90a3;&#x4e48;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#x5c31;&#x53ea;&#x80fd;&#x518d;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff0c;&#x5e76;&#x628a;&#x539f;&#x6709;&#x5bb9;&#x5668",{"_index":3913,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x83b7;&#x53d6",{"_index":1420,"title":{},"body":{"basic/map.html#map":{},"basic/pointer.html#指向指针的指针":{},"basic/basic_data.html#字符串":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/data/math.html#其他函数":{},"standards/os/os.html#目录与链接":{}}}],["x83b7;&#x53d6;&#x5012;&#x6570;&#x7b2c;&#x4e8c;&#x4e2a;&#x5b57;&#x7b26;&#xff08;&#x9700;&#x8981;&#x8003;&#x8651",{"_index":6921,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x83b7;&#x53d6;&#x5207;&#x7247;&#x957f;&#x5ea6;&#x3002",{"_index":1894,"title":{},"body":{"basic/slice.html#len-和-cap":{}}}],["x83b7;&#x53d6;&#x5230;&#x963b;&#x585e;&#x6982;&#x8981;&#x4fe1;&#x606f",{"_index":4284,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x83b7;&#x53d6;&#x5305;&#x5b8c;&#x6574;&#x7684;&#x5143;&#x4fe1;&#x606f",{"_index":2839,"title":{},"body":{"commands/build.html#工具":{}}}],["x83b7;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#x957f;&#x5ea6",{"_index":3769,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x83b7;&#x53d6;&#x5b57;&#x7b26;&#x5728;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x4f4d;&#x7f6",{"_index":3770,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x83b7;&#x53d6;&#x5f53;&#x524d;&#x65f6;&#x95f4;&#x3002",{"_index":3407,"title":{},"body":{"standards/time.html#time":{}}}],["x83b7;&#x53d6;&#x6570;&#x7ec4;&#x957f;&#x5ea6;&#x3002;&#x901a;&#x8fc7;&#x4e0b;&#x6807;&#x8bbf;&#x95ee;&#x5143;&#x7d20;&#xff1a",{"_index":770,"title":{},"body":{"basic/array.html#数组":{}}}],["x83b7;&#x53d6;&#x65f6;&#x95f4;&#x7684;&#x4e00;&#x90e8;&#x5206;&#x3002",{"_index":3408,"title":{},"body":{"standards/time.html#time":{}}}],["x83b7;&#x53d6;&#x67d0;&#x4e2a;&#x5b50;&#x5b57;&#x4e32;&#x5728;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x7684;&#x4f4d;&#x7f6e;&#xff08;&#x7d22;&#x5f15;&#xff09",{"_index":5926,"title":{"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}},"body":{}}],["x83b7;&#x53d6;&#x67d0;&#x4e2a;&#x7d22;&#x5f15;&#x4f4d;&#x7f6e;&#x7684;&#x5b57;&#x8282;&#x503c;&#xff0c;&#x5b57;&#x7b26;&#x4e32;&#x662f;&#x4e0d;&#x53ef;&#x4fee;&#x6539;&#x7684;&#xff0c;&#x4e0d;&#x80fd;&#x4f7f;&#x7528",{"_index":3739,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x83b7;&#x53d6;&#x6e90;&#x7801",{"_index":2577,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x83b7;&#x53d6;&#x73af;&#x5f62;&#x94fe;&#x8868;&#x957f;&#x5ea6",{"_index":5274,"title":{},"body":{"standards/data/container.html#环":{}}}],["x83b7;&#x53d6;&#x7684;&#x961f;&#x5217;&#x4e2d;&#x7b2c;&#x4e00;&#x4e2a;&#x503c;&#x3002;&#x5728;&#x67e5;&#x8be2;&#x8fc7;&#x7a0b;&#x4e2d",{"_index":8773,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x83b7;&#x53d6;&#x7c7b;&#x578b;&#x4f4d;&#xff09",{"_index":7386,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x83b7;&#x53d6;&#x7c7b;&#x578b;&#x4f4d;&#xff09;&#xff0c;&#x5bf9;&#x666e;&#x901a;&#x6587;&#x4ef6;&#xff0c;&#x6240;&#x6709;&#x8fd9;&#x4e9b;&#x4f4d;&#x90fd;&#x4e0d;&#x5e94;&#x88ab;&#x8bbe;&#x7f6",{"_index":7383,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x83b7;&#x53d6;&#x7c7b;&#x578b;&#x4fe1;&#x606f;&#x3002",{"_index":5029,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["x83b7;&#x53d6;&#xff0c;&#x800c;&#x5fc5;&#x987b;&#x901a;&#x8fc7",{"_index":1419,"title":{},"body":{"basic/map.html#map":{}}}],["x83b7;&#x53d6;&#xff1b;&#x5728;&#x4f7f;&#x7528;&#x8fc7;&#x7a0b;&#x4e2d;&#x5229;&#x7528",{"_index":8821,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x83b7;&#x5f97;&#x3002",{"_index":3548,"title":{},"body":{"standards/time.html#定时器":{}}}],["x83b7;&#x5f97;&#x7279;&#x5b9a;&#x65f6;&#x533a;&#x7684;&#x5b9e;&#x4f8b",{"_index":3436,"title":{},"body":{"standards/time.html#时区":{}}}],["x83b7;&#x5f97;&#x7684",{"_index":3927,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x83b7;&#x5f97;&#x8fd9;&#x4e2a;&#x9501;&#xff0c;&#x518d;&#x6709",{"_index":7821,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x83b7;&#x5f97;&#xff09;&#x3002",{"_index":4217,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x85aa;&#x8d44;&#x8ba1;&#x7b97;&#x5668;&#x63a5;&#x53e3",{"_index":2371,"title":{},"body":{"basic/interface.html#接口":{}}}],["x867d;&#x7136;&#x8c8c",{"_index":1268,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x867d;&#x7136;&#x8fd9;&#x4f1a;&#x5f88;&#x5feb;&#xff0c;&#x4f46;&#x662f;&#x7531;&#x4e8e;&#x4e0a;&#x9762;&#x6240;&#x8bf4;&#x7684;&#x90a3;&#x4e9b;&#x51c6;&#x5907;&#x5de5;&#x4f5c;&#x8fd8;&#x662f;&#x4e0d;&#x53ef;&#x907f;&#x514d;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x8017;&#x65f6;&#x8fd8;&#x662f;&#x5b58;&#x5728;&#x7684;&#x3002",{"_index":6283,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x884c",{"_index":9040,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x884c;&#x5206;&#x9694;&#x7b26",{"_index":204,"title":{"index.html#行分隔符":{}},"body":{}}],["x884c;&#x52a0",{"_index":1363,"title":{},"body":{"basic/constant.html#iota":{}}}],["x884c;&#x5b8c;&#x6bd5;&#x201d;&#x7684;&#x529f;&#x80fd;&#x3002",{"_index":8203,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x884c;&#x6392;&#x5e8f;&#x3002",{"_index":9195,"title":{},"body":{"standards/data/sort.html#sort":{}}}],["x884c;&#x6570;&#x636e;&#x5e93;&#x64cd;&#x4f5c;&#x7684;&#x5730;&#x65b9;&#x4f7f;&#x7528;&#x3002",{"_index":4463,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x884c;&#xff09;&#x3002;&#x65e0;&#x8bba;&#x4f55;&#x79cd;&#x60c5;&#x51b5;&#xff0c",{"_index":8847,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8868;&#x5355;&#x4fe1;&#x606f",{"_index":8749,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8868;&#x660e;&#x4e86;&#x8fd9;&#x4e2a",{"_index":656,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8868;&#x660e;&#x6211;&#x7684;&#x8fd9;&#x4e2a;&#x7a0b;&#x5e8f;&#x662f;&#x4ee5;&#x9000;&#x51fa;&#x72b6;&#x6001;&#x7801;2&#x7ed3;&#x675f;&#x8fd0;&#x884c;&#x7684;&#x3002",{"_index":667,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8868;&#x660e;&#x9700;&#x8981;&#x6267;&#x884c;&#x4efb;&#x610f;&#x540d;&#x79f0;&#x7684;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002",{"_index":4179,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x8868;&#x660e;&#xff0c;&#x7531;&#x4e8e;&#x6d4b;&#x8bd5;&#x4ee3;&#x7801;&#x4e0e;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x90fd;&#x6ca1;&#x6709;&#x4efb;&#x4f55;&#x53d8;&#x52a8;&#xff0c;&#x6240;&#x4ee5",{"_index":4164,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x8868;&#x683c;&#x9a71;&#x52a8;&#x6d4b;&#x8bd5;&#x5728;&#x6211;&#x4eec;&#x8981;&#x521b;&#x5efa;&#x4e00;&#x7cfb;&#x5217;&#x76f8;&#x540c;&#x6d4b;&#x8bd5;&#x65b9;&#x5f0f;&#x7684;&#x6d4b;&#x8bd5;&#x7528;&#x4f8b;&#x65f6;&#x5f88;&#x6709;&#x7528;&#x3002;&#x4f8b;&#x5982",{"_index":4112,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x8868;&#x793a",{"_index":3712,"title":{},"body":{"basic/basic_data.html#数值类型":{},"standards/io/fmt.html#占位符":{},"standards/text/strconv.html#转换错误处理":{},"standards/text/strconv.html#字符串转为整型":{}}}],["x8868;&#x793a;&#x4e00;&#x4e2a;&#x53ea;&#x53d1;&#x9001",{"_index":2956,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x793a;&#x4e00;&#x4e2a;&#x53ea;&#x63a5;&#x6536",{"_index":2958,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x793a;&#x5b57;&#x7b26;&#x4e32",{"_index":5931,"title":{},"body":{"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["x8868;&#x793a;&#x6210;&#x529f;&#x3002",{"_index":614,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x8868;&#x793a;&#x64cd;&#x4f5c;&#x7ed3;&#x679c;&#xff0c;&#x662f;&#x4e00;&#x4e2a;&#x5e03;&#x5c14;&#x503c;&#x3002",{"_index":1410,"title":{},"body":{"basic/map.html#map":{}}}],["x8868;&#x793a;&#x6587;&#x4ef6;&#x5177;&#x6709;&#x5176;&#x521b;&#x5efa;&#x8005;&#x7528;&#x6237",{"_index":7374,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8868;&#x793a;&#x6587;&#x4ef6;&#x5177;&#x6709;&#x5176;&#x521b;&#x5efa;&#x8005;&#x7ec4",{"_index":7376,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8868;&#x793a;&#x662f;&#x5207;&#x7247;&#x7c7b;&#x578b;&#xff0c;{1,2,3",{"_index":1875,"title":{},"body":{"basic/slice.html#slice":{}}}],["x8868;&#x793a;&#x6709;&#x6548;&#x6570;&#x5b57;&#xff08;&#x5bf9",{"_index":4984,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x8868;&#x793a;&#x6bcf;&#x95f4;&#x9694",{"_index":3585,"title":{},"body":{"standards/time.html#Ticker":{}}}],["x8868;&#x793a;&#x7684;&#x5143;&#x7d20;&#xff09",{"_index":5278,"title":{},"body":{"standards/data/container.html#环":{}}}],["x8868;&#x793a;&#x7684;&#x6570;&#x636e;&#x6d41;&#x7684;&#x4e00;&#x90e8;&#x5206;&#xff1a;&#x4ec",{"_index":6993,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x8868;&#x793a;&#x7684;&#x65f6;&#x95f4;&#x5230;&#x65f6;&#xff0c;&#x4f1a;&#x5f80",{"_index":3559,"title":{},"body":{"standards/time.html#定时器":{}}}],["x8868;&#x793a;&#x7684;&#x65f6;&#x95f4;&#x662f;&#x5426;&#x662f",{"_index":3490,"title":{},"body":{"standards/time.html#Time":{}}}],["x8868;&#x793a;&#x7684;&#x65f6;&#x95f4;&#x662f;&#x7eb3;&#x79d2;&#x65f6;&#x95f4;&#xff0c;&#x6b63;&#x5e38;&#x901a;&#x8fc7",{"_index":3561,"title":{},"body":{"standards/time.html#定时器":{}}}],["x8868;&#x793a;&#x7684;&#x662f;&#x6574;&#x6570;&#x53d6;&#x503c;&#x8303;&#x56f4;&#xff0c;&#x6216;&#x8005;&#x8bf4;&#x6574;&#x6570;&#x7684;&#x5177;&#x4f53;&#x7c7b;&#x578b;&#x3002;&#x53d6;&#x503c",{"_index":4923,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x8868;&#x793a;&#x76f8;&#x5bf9",{"_index":6912,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x8868;&#x793a;&#x76f8;&#x5bf9;&#x4e8e;&#x5176;&#x7ed3;&#x5c3e;&#x5904",{"_index":6914,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x8868;&#x793a;&#x76f8;&#x5bf9;&#x4e8e;&#x6587;&#x4ef6;&#x7684;&#x8d77;&#x59cb;&#x5904;&#xff0c;1",{"_index":6911,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x8868;&#x793a;&#x8bed;&#x6cd5;&#x9519;&#x8bef;&#xff0c;&#x6bd4;&#x5982;&#x5c06",{"_index":4896,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x8868;&#x793a;&#x8bfb;&#x53d6;&#x6307;&#x9488;&#x6307;&#x5411;&#x7684;&#x53d8;&#x91cf;&#x7684;&#x503c;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x53d8;&#x91cf",{"_index":1688,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x8868;&#x793a;&#x901a;&#x7528;&#x534f;&#x8c03;&#x4e16;&#x754c;&#x65f6;&#x95f4;&#x3002",{"_index":3418,"title":{},"body":{"standards/time.html#time":{}}}],["x8868;&#x8fbe;&#x5f0f",{"_index":1345,"title":{},"body":{"basic/constant.html#常量":{},"basic/operator.html#位运算符":{},"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x3002",{"_index":1084,"title":{},"body":{"basic/flow.html#for":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x4e2d;&#x7684;&#x5b50;&#x8868;&#x8fbe;&#x5f0f;&#x7ed3;&#x679c;&#x503c;&#x5b58",{"_index":1055,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x4e2d;&#x90fd;&#x53ea;&#x80fd;&#x5305;&#x542b;&#x64cd;&#x4f5c;&#x901a;&#x9053;&#x7684;&#x8868;&#x8fbe;&#x5f0f",{"_index":2994,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x4e2d;&#xff0c;&#x90fd;&#x4f1a;&#x662f;&#x8fd9;&#x6837;&#x7684;&#x7ed3;&#x679c;&#x3002",{"_index":1057,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x53ea;&#x4f1a;&#x5728",{"_index":1085,"title":{},"body":{"basic/flow.html#for":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x5404;&#x6c42;&#x503c;&#x4e00;&#x6b21;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x5982;&#x679c;&#x6211;&#x4eec;&#x60f3;&#x8fde;&#x7eed;&#x6216;&#x5b9a;&#x65f6;&#x5730;&#x64cd;&#x4f5c;&#x5176;&#x4e2d;&#x7684;&#x901a;&#x9053;&#x7684;&#x8bdd;&#xff0c;&#x5c31;&#x5f80;&#x5f80;&#x9700;&#x8981",{"_index":3030,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x6ee1;&#x8db3;&#x6761;&#x4ef6;&#x4e3a;&#x6b62;&#x3002",{"_index":3025,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x6240;&#x6709;&#x5b50;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x90fd;&#x662f;&#x8981;&#x4e0",{"_index":1045,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x6c42;&#x503c;&#x7ed3;&#x679c;&#x4f1a;&#x88ab;&#x590d;&#x5236;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x88ab;&#x8fed;&#x4ee3;&#x7684;&#x5bf9;&#x8c61;&#x662f",{"_index":1088,"title":{},"body":{"basic/flow.html#for":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x5224;&#x7b49;&#x7684;&#xff0c;&#x56e0;&#x6b64;&#x5b83;&#x4eec;&#x7684;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x76f8",{"_index":1046,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x53ef;&#x4ee5;&#x662f;&#x6570;&#x7ec4;&#x3001;&#x6570;&#x7ec4;&#x7684;&#x6307;&#x9488;&#x3001",{"_index":1103,"title":{},"body":{"basic/flow.html#for":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x76f8;&#x7b49;&#xff0c;&#x90a3;&#x4e48;&#x4f4d;&#x7f6e;&#x9760;&#x4e0a;&#x7684",{"_index":1063,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x7c7b;&#x578b;&#x3002",{"_index":1048,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7ed3;&#x679c;&#x503c;&#x7684;&#x526f;&#x672c;&#x800c;&#x4e0d;&#x662f;&#x539f;&#x503c;&#x3002",{"_index":1089,"title":{},"body":{"basic/flow.html#for":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x90fd;&#x6ca1;&#x6709;&#x6ee1;&#x8db3;&#x6c42;&#x503c;&#x6761;&#x4ef6;&#xff0c;&#x90a3;&#x4e48",{"_index":3022,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x9762;&#x4e0a;&#x770b;&#xff0c;&#x6307;&#x9488;&#x53c2;&#x6570;&#x6027;&#x80fd;&#x4f1a;&#x66f4;&#x597d;&#xff0c;&#x4f46;&#x662f;&#x8981;&#x6ce8;&#x610f;&#x88ab;&#x590d;&#x5236;&#x7684;&#x6307;&#x9488;&#x4f1a;&#x5ef6;&#x957f;&#x76ee;&#x6807;&#x5bf9;&#x8c61;&#x7684;&#x751f;&#x547d;&#x5468;&#x671f;&#xff0c;&#x8fd8;&#x53ef;&#x80fd;&#x5bfc;&#x81f4;&#x5b83;&#x88ab;&#x5206;&#x914d;&#x5230;&#x5806;&#x4e0a;&#xff0c;&#x5176;&#x6027;&#x80fd;&#x6d88;&#x8017;&#x8981;&#x52a0;&#x4e0a;&#x5806;&#x5185;&#x5b58;&#x5206;&#x914d;&#x548c",{"_index":3138,"title":{},"body":{"basic/function.html#参数":{}}}],["x88ab;&#x4fee;&#x6539;&#x5b8c;&#x7684;&#x503c;&#xff0c;&#x5bf9;&#x5417;&#xff1f",{"_index":8037,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x88ab;&#x5173;&#x95ed;&#x5e76;&#x4e14;&#x6ca1;&#x6709;&#x503c;&#x53ef;&#x63a5;&#x6536;&#x65f6",{"_index":2911,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x88ab;&#x5220;&#x9664;&#x7684;&#x5143;&#x7d20;&#x7ec4;&#x6210;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x73af;&#x5f62;&#x94fe;&#x8868;&#xff0c;&#x8fd4;&#x56de;&#x503c;&#x4e3a;&#x8be5;&#x73af;&#x5f62;&#x94fe;&#x8868;&#x7684;&#x6307;&#x9488;&#xff08;&#x5373;&#x5220;&#x9664;&#x524d;&#xff0c",{"_index":5277,"title":{},"body":{"standards/data/container.html#环":{}}}],["x88ab;&#x5916;&#x90e8;&#x5757;&#x8bbf;&#x95ee;&#x7684;&#x3002",{"_index":2257,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x88ab;&#x5b58;&#x5728;&#x4e86",{"_index":8360,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x88ab;&#x5b9a;&#x4e49;&#x4e3a;&#x4ec",{"_index":7058,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x88ab;&#x5bfc;&#x5165;&#x7684;&#x5305;&#x90fd;&#x52a0;&#x8f7d;&#x5b8c;&#x6bd5;&#x4e86;&#xff0c;&#x5c31;&#x4f1a;&#x5f00;&#x59cb;&#x5bf9",{"_index":2239,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x88ab;&#x5f15;&#x53d1;&#x5230;&#x7a0b;&#x5e8f;&#x7ec8;&#x6b62;&#x8fd0;&#x884c;&#x7684;&#x5927;&#x81f4;&#x8fc7;&#x7a0b;&#x662f;&#x4ec0;&#x4e48",{"_index":674,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x88ab;&#x5f15;&#x53d1;&#x65f6;&#x6b63;&#x5728;&#x6267;&#x884c;&#x3002;&#x542b;&#x4e86;&#x6b64;&#x884c;&#x4ee3;&#x7801;&#x5728;&#x5176;&#x6240;&#x5c5e;&#x7684;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x884c;&#x6570;&#xff0c",{"_index":664,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x88ab;&#x5f15;&#x53d1;&#x7684;&#x65f6;&#x5019;&#x6b63;&#x5728;&#x8fd0;&#x884c;&#x3002;&#x8fd9;&#x91cc;&#x7684",{"_index":654,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x88ab;&#x6c38;&#x8fdc;&#x5361;&#x4f4f;&#xff0c;&#x5c31;&#x4f1a;&#x5bfc;&#x81f4",{"_index":6398,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x88ab;&#x79f0;&#x4e3a;&#x5355;&#x4e2a;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x7684;&#x540d;&#x79f0;&#xff0c;&#x5b83;&#x8868;&#x793a;&#x547d;&#x4ee4;&#x6267;&#x884c;&#x4e86;&#x6027;&#x80fd;&#x6d4b;&#x8bd5",{"_index":4189,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x88ab;&#x79f0;&#x4e3a;&#x7a7a;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x6ca1;&#x6709;&#x4efb;&#x4f55;&#x65b9;&#x6cd5;&#x3002;&#x6240;&#x6709;&#x7684;&#x7c7b;&#x578b;&#x90fd;&#x5b9e;&#x73b0;&#x4e86;&#x7a7a",{"_index":2335,"title":{},"body":{"basic/interface.html#接口":{}}}],["x88ab;&#x7f16;&#x8bd1;&#x7684;&#x5305;&#x4f1a;&#x88ab;&#x4fdd;&#x5b58;&#x5230",{"_index":2734,"title":{},"body":{"commands/build.html#工具":{}}}],["x88ab;&#x89c6;&#x4e3a;&#x5bf9;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x5199;&#x64cd;&#x4f5c;&#x3002",{"_index":7909,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x88ab;&#x8fd1;&#x4f3c;&#x7684;&#x8868;&#x793a;&#x3002",{"_index":4358,"title":{},"body":{"standards/data/big.html#big":{}}}],["x88ab;&#x963b;&#x585e;&#x5728;&#x67d0;&#x4e2a",{"_index":6573,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x88c1;&#x526a",{"_index":408,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x8981;&#x4efb;&#x4f55;&#x53c2;&#x6570;&#x58f0;&#x660e;&#xff0c;&#x4f46;&#x9700;&#x8981;&#x6709;&#x4e00;&#x4e2a",{"_index":1296,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x8981;&#x4fee;&#x6539;&#x5b9e;&#x4f8b;&#x72b6;&#x6001;&#xff0c;&#x7528",{"_index":1245,"title":{},"body":{"basic/oop.html#方法":{}}}],["x8981;&#x5148;&#x521d;&#x59cb;&#x5316;&#x4e00;&#x4e2a",{"_index":8882,"title":{},"body":{"standards/net/http.html#client":{}}}],["x8981;&#x53bb;&#x6267;&#x884c;&#xff0c",{"_index":6603,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8981;&#x53d1;&#x9001;&#x7684;&#x6570;&#x636e;&#x7684;&#x7c7b;&#x578b;&#x3002;&#x7b2c;&#x4e8c;&#x4e2a;&#x53c2;&#x6570;&#x4ee3;&#x8868;&#x521b;&#x5efa;&#x4e00;&#x5e26;&#x7f13;&#x5b58;&#x7684",{"_index":2884,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8981;&#x5b9e;&#x73b0;&#x4e0b;&#x9762;&#x7684;&#x65b9;&#x6cd5;&#xff1a",{"_index":5303,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x8981;&#x6253;&#x5f00;&#x7684;&#x6587;&#x4ef6;&#x7531;&#x53c2;&#x6570",{"_index":7343,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8981;&#x6587;&#x4ef6;&#xff08;block",{"_index":4244,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8981;&#x6c42;&#x9ad8;&#x7684;&#x573a;&#x666f;&#x4e0d;&#x80fd;&#x4efb;&#x610f;&#x4ea7;&#x751f;&#x592a;&#x591a;&#x7684;&#x5783;&#x573e;&#x3002;&#x5982;&#x4f55;&#x89e3;&#x51b3;&#x5462;&#xff1f;&#x90a3;&#x5c31;&#x662f;&#x8981;&#x91cd;&#x7528;&#x5bf9;&#x8c61;&#x4e86;&#x3002",{"_index":8309,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8981;&#x6ce8;&#x610f;&#xff0c;&#x6211;&#x4eec;&#x8981",{"_index":738,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x8981;&#x7ade;&#x4e89;&#x7684",{"_index":6460,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8981;&#x8f6c;&#x6362;&#x4e3a;&#x6307;&#x9488;&#x7c7b;&#x578b;&#xff0c;&#x6216;&#x8005;&#x5355;&#x5411",{"_index":266,"title":{},"body":{"index.html#类型转换":{}}}],["x8981;&#x9009;&#x62e9;&#x6b63;&#x786e;&#x7684;&#x65b9;&#x5f0f;&#x3002",{"_index":5035,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["x8986;&#x76d6;&#x6240;&#x6709",{"_index":7384,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8986;&#x76d6;&#x6240;&#x6709;&#x7c7b;&#x578b;&#x4f4d;&#xff08;&#x7528;&#x4e8e;&#x901a;&#x8fc7",{"_index":7382,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8986;&#x76d6;&#x7387",{"_index":4114,"title":{"basic/test.html#覆盖率":{}},"body":{}}],["x89c2;&#x5bdf;&#x51fd;&#x6570;&#x7684;&#x8fd4;&#x56de;&#x503c",{"_index":3186,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x89c4;&#x6574;&#x5316;&#x8def;&#x5f84",{"_index":5707,"title":{"standards/os/filepath.html#规整化路径":{}},"body":{}}],["x89c6;&#x4e3a;&#x5e94;&#x62a5;&#x544a;&#x7684;&#x9519;&#x8bef;&#x3002",{"_index":4819,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x89e3;&#x6790",{"_index":8787,"title":{},"body":{"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["x89e3;&#x6790;&#x3002",{"_index":8802,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x89e3;&#x6790;&#x51fa;&#x6765;&#x7684;&#x65f6;&#x533a;&#x5374;&#x662f",{"_index":3502,"title":{},"body":{"standards/time.html#Time":{}}}],["x89e3;&#x6790;&#x8def;&#x5f84;&#x540d;&#x5b57;&#x7b26;&#x4e32",{"_index":5623,"title":{"standards/os/filepath.html#解析路径名字符串":{}},"body":{}}],["x89e3;&#x7801;&#x64cd;&#x4f5c;&#xff0c;&#x4f7f;&#x7528",{"_index":1584,"title":{},"body":{"basic/json.html#序列化":{}}}],["x89e3;&#x9501;&#x201c;&#x8bfb;&#x5199;&#x9501;&#x4e2d;&#x672a;&#x88ab;&#x9501;&#x5b9a;&#x7684;&#x5199;&#x9501;&#x201d;&#xff0c;&#x4f1a;&#x7acb;&#x5373;&#x5f15;&#x53d1",{"_index":7865,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x89e3;&#x9501;&#x5f53;&#x524d;&#x7684;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x57fa;&#x4e8e;&#x7684;&#x90a3;&#x4e2a;&#x4e92;&#x65a5;&#x9501;&#x3002",{"_index":7937,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x89e6;&#x53d1;&#x5185;&#x5b58;&#x5206;&#x914d;&#x5668;&#x7684;&#x56de;&#x6536;&#x64cd;&#x4f5c;&#x3002",{"_index":393,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x89e6;&#x53d1;&#x6761;&#x4ef6",{"_index":534,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x89e6;&#x53d1;&#x6761;&#x4ef6;&#x3002",{"_index":527,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x89e6;&#x53d1;&#x6761;&#x4ef6;&#x4e3b;&#x8981;&#x5173;&#x6ce8;&#x4e0b;&#x9762;&#x4ee3;&#x7801;&#x4e2d;&#x7684;&#x4e2d;&#x95f4;&#x90e8;&#x5206;&#xff1a",{"_index":535,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x89e6;&#x53d1;&#x9608;&#x503c;&#x3002",{"_index":537,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x89e6;&#x53d1;&#x9608;&#x503c;&#x7b49;&#x4e8",{"_index":545,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x8ba1;&#x6570;&#x5fc5;&#x987b;&#x663e;&#x793a;&#x6062;&#x590d",{"_index":1367,"title":{},"body":{"basic/constant.html#iota":{}}}],["x8ba1;&#x7b97",{"_index":5268,"title":{},"body":{"standards/data/container.html#环":{}}}],["x8ba1;&#x7b97;&#x5207;&#x7247;&#x7684;&#x6700;&#x5927;&#x5bb9;&#x91cf",{"_index":1895,"title":{},"body":{"basic/slice.html#len-和-cap":{}}}],["x8ba1;&#x7b97;&#x5b57;&#x7b26;&#x4e32;&#x51fa;&#x73b0;&#x6b21;&#x6570",{"_index":5937,"title":{"standards/text/strings.html#计算字符串出现次数":{}},"body":{}}],["x8ba1;&#x7b97;&#x76f4;&#x89d2;&#x4e09;&#x89d2;&#x5f62;&#x7684;&#x659c;&#x8fb9;&#x957f",{"_index":6095,"title":{},"body":{"standards/data/math.html#特殊函数":{}}}],["x8ba9",{"_index":8990,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8ba9;&#x4e3b",{"_index":6330,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8ba9;&#x5f53;&#x524d;&#x7684",{"_index":7938,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8ba9;&#x8c03;&#x7528;&#x65b9;&#x53bb;&#x611f;&#x77e5;&#x201c;&#x64a4;&#x9500;&#x201d;&#x5f53;&#x524d;context&#x503c;&#x7684;&#x90a3;&#x4e2a;&#x4fe1;&#x53f7",{"_index":8247,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8bb0;&#x5f55;&#x4f55;&#x65f6;&#x8fdb;&#x5165;&#x548c;&#x9000;&#x51fa;&#x51fd;&#x6570",{"_index":3183,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bbe;&#x4e3a",{"_index":2586,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x8bbe;&#x5907",{"_index":7371,"title":{},"body":{"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{}}}],["x8bbe;&#x5b9a;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x91c7;&#x6837;&#x9891;&#x7387",{"_index":4261,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bbe;&#x5b9a;&#x7684",{"_index":8872,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x8bbe;&#x7f6",{"_index":2596,"title":{},"body":{"theme/theme-usage.html#Sidebar":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{}}}],["x8bbe;&#x7f6e;&#x4e0b;&#x4e00;&#x6b21",{"_index":6908,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x8bbe;&#x7f6e;&#x4e0b;&#x4e00;&#x6b21;&#x8bfb;/&#x5199;&#x7684;&#x4f4d;&#x7f6e;&#x3002",{"_index":7456,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8bbe;&#x7f6e;&#x4e3a",{"_index":6982,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x8bbe;&#x7f6e;&#x4e86",{"_index":776,"title":{},"body":{"basic/array.html#数组":{}}}],["x8bbe;&#x7f6e;&#x5728;&#x7f16;&#x8bd1;&#x7684;&#x65f6;&#x5019;&#x53ef;&#x4ee5;&#x9002;&#x914d;&#x7684;&#x90a3;&#x4e9b;tag&#xff0c;&#x8be6;&#x7ec6;&#x7684;tag&#x9650;&#x5236;&#x53c2;&#x8003;&#x91cc;&#x9762;&#x7684",{"_index":2761,"title":{},"body":{"commands/build.html#工具":{}}}],["x8bbe;&#x7f6e;&#x6210;&#x7279",{"_index":703,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x8bbe;&#x7f6e;&#x73af;&#x5883;&#x53d8;&#x91cf",{"_index":4169,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x8bbe;&#x7f6e;&#x8fde;&#x63a5;&#x6c60;&#x4e2d;&#x6700;&#x591a;&#x4fdd;&#x5b58;&#x6253;&#x5f00;&#x591a;&#x5c11;&#x4e2a;&#x6570;&#x636e;&#x5e93;&#x8fde;&#x63a5;&#x3002;&#x6ce8;&#x610f;&#xff0c;&#x5b83;&#x5305;&#x62ec;&#x5728;&#x4f7f;&#x7528;&#x7684;&#x548c;&#x7a7a;&#x95f2;&#x7684;&#x3002;&#x5982;&#x679c;&#x67d0;&#x4e2a;&#x65b9;&#x6cd5;&#x8c03;&#x7528;&#x9700;&#x8981;&#x4e00;&#x4e2a;&#x8fde;&#x63a5;&#xff0c",{"_index":4511,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x8bbe;&#x7f6e;&#x8fde;&#x63a5;&#x6c60;&#x4e2d;&#x80fd;&#x591f;&#x4fdd;&#x6301;&#x7684;&#x6700;&#x5927;&#x7a7a;&#x95f2;&#x8fde;&#x63a5;&#x7684;&#x6570;&#x91cf;&#x3002",{"_index":4514,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x8bbe;&#x8ba1;&#x6210;&#x62a2;&#x5360;&#x5f0f;&#x7684;&#x3002;&#x7528;&#x6237;&#x8d1f;&#x8d23;&#x8ba9;&#x5404;&#x4e2a",{"_index":6529,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8bbf;&#x95ee;&#x3002",{"_index":209,"title":{},"body":{"index.html#os-Args":{}}}],["x8bbf;&#x95ee;&#x53d8;&#x91cf;&#xff0c;&#x5c3d;&#x91cf;&#x628a;&#x53d8;&#x91cf;&#x9650;&#x5b9a;&#x5728;&#x4e86;&#x4e00;&#x4e2a;&#x5355;&#x72ec;&#x7684",{"_index":7808,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x8bbf;&#x95ee;&#x8fd9;&#x4e2a;&#x52a0;&#x9501;&#x7684;&#x53d8;&#x91cf;&#x5c31;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#xff0c",{"_index":7822,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bc1;&#x4e66;&#x3002",{"_index":8933,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8be5",{"_index":1221,"title":{},"body":{"basic/oop.html#方法":{},"basic/basic_data.html#字符串":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x8be5;&#x503c;&#x7684",{"_index":8158,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8be5;&#x51fd;&#x6570;&#x4e0",{"_index":8839,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8be5;&#x51fd;&#x6570;&#x4f1a;&#x8c03;&#x7528",{"_index":8772,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8be5;&#x51fd;&#x6570;&#x5224;&#x65ad",{"_index":9307,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x8be5;&#x51fd;&#x6570;&#x603b;&#x662f;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":8949,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8be5;&#x51fd;&#x6570;&#x6210;&#x529f;&#x8c03;&#x7528;&#x540e;&#x4f1a;&#x8fd4;&#x56d",{"_index":4808,"title":{},"body":{"standards/io/ioutil.html#ReadAll-函数":{}}}],["x8be5;&#x51fd;&#x6570;&#x63a7;&#x5236;&#x662f;&#x5426",{"_index":8936,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8be5;&#x51fd;&#x6570;&#x7528;&#x4e8e;&#x5c06;&#x6700;&#x63a5;&#x8fd1;&#x8bf7;&#x6c42",{"_index":8959,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8be5;&#x51fd;&#x6570;&#xff1b;&#x5426;&#x5219;&#xff0c;&#x4f1a;&#x6253;&#x5f00;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x8fde;&#x63a5;&#x3002;&#x5f53;&#x8be5;&#x51fd;&#x6570;&#x7ed3;&#x675f;&#x65f6;&#xff0c;&#x8be5;&#x8fde;&#x63a5;&#x8981;&#x4e48;&#x8fd4;&#x56de;&#x7ed9;&#x8fde;&#x63a5;&#x6c60;&#xff0c;&#x8981;&#x4e48;&#x4f20;&#x9012;&#x7ed9;&#x67d0;&#x4e2a;&#x9700;&#x8981;&#x8be5;&#x8fde;&#x63a5;&#x7684;&#x5bf9;&#x8c61;&#xff0c;&#x77e5;&#x9053;&#x8be5;&#x5bf9;&#x8c61;&#x5b8c;&#x6210;&#x65f6;&#xff0c;&#x8fde;&#x63a5;&#x624d;&#x4f1a;&#x8fd4;&#x56de;&#x7ed9;&#x8fd",{"_index":4486,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x8be5;&#x5305;&#x5b9e;&#x73b0;&#x4e86;&#x4e09;&#x4e2a;&#x590d;&#x6742;&#x7684;&#x6570;&#x636e;&#x7ed3;&#x6784;&#xff1a;&#x94fe;&#x8868;&#xff0c;&#x73af;&#xff0c;&#x5806;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#x4f7f;&#x7528;&#x8fd9;&#x4e09;&#x4e2a;&#x6570;&#x636e;&#x7ed3;&#x6784;&#x7684;&#x65f6;&#x5019;&#x4e0d;&#x9700;&#x8981;&#x518d;&#x4ece;&#x5934;&#x5f00;&#x59cb;&#x5199;&#x7b97;&#x6cd5;&#x4e86;&#x3002",{"_index":5229,"title":{},"body":{"standards/data/container.html#container":{}}}],["x8be5;&#x5305;&#x8fd8;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x5224;&#x65ad;&#x6570;&#x636e;&#x96c6;&#x5408;&#x662f;&#x5426;&#x5df2;&#x7ecf;&#x6392;&#x597d;&#x987a;&#x5e8f;&#xff0c;&#x8be5;&#x65b9;&#x6cd5;&#x7684;&#x5185;&#x90e8;&#x5b9e;&#x73b0;&#x4f9d;&#x8d56;&#x4e8e;&#x6211;&#x4eec;&#x81ea;&#x5df1;&#x5b9e;&#x73b0;&#x7684",{"_index":9215,"title":{},"body":{"standards/data/sort.html#数据集合排序":{}}}],["x8be5;&#x63a5;&#x53e3;&#x6bd4;&#x8f83;&#x7b80;&#x5355;&#xff0c;&#x53ea;&#x6709;&#x4e00;&#x4e2a",{"_index":6927,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x8be5;&#x65b9;&#x6cd5;&#x5c31;&#x4f1a;&#x628a;&#x5b83;&#x4eec;&#x4ece;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x5220;&#x9664;&#x6389;&#x3002",{"_index":5539,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x8be5;&#x65b9;&#x6cd5;&#x7684;&#x53c2;&#x6570;&#x548c;&#x8fd4;&#x56de;&#x503c;&#x7c7b;&#x578b;&#x4e0",{"_index":5461,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x8be5;&#x662f;&#x6307;&#x9488;&#x8fd8;&#x662f;&#x975e;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x65f6;&#xff0c;&#x4f60;&#x9700;&#x8981;&#x8003;&#x8651;&#xff1a",{"_index":1244,"title":{},"body":{"basic/oop.html#方法":{}}}],["x8be5;&#x6807;&#x8bb0;&#x7684;&#x4f5c;&#x7528;&#x662f;&#xff1a;&#x8bbe;&#x7f6e;&#x540c;&#x4e00;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#x4e2d;&#x7684;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x7684;&#x6700;&#x5927;&#x5e76;&#x53d1;&#x6267;&#x884c;&#x6570;&#x3002",{"_index":4213,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x8be5;&#x6807;&#x8bb0;&#x7684;&#x9ed8;&#x8ba4;&#x503c;&#x662f;&#x6d4b;&#x8bd5;&#x8fd0;&#x884c;&#x65f6;&#x7684;&#x6700;&#x5927",{"_index":4214,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x8be5;&#x7c7b;&#x578b;&#x6700;&#x7ec8;&#x7684",{"_index":6979,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x8be5;&#x7c7b;&#x578b;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#x6d41;&#x4e2d;&#x90e8;&#x5206;&#x6570;&#x636e;&#x3002",{"_index":6985,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x8be5;&#x7ed3;&#x6784;&#x8bb0;&#x5f55;&#x4e86;&#x8f6c;&#x6362;&#x8fc7;&#x7a0b;&#x4e2d;&#x53d1;&#x751f;&#x7684;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x3002;&#x8be5;&#x7ed3;&#x6784;&#x4e0d;&#x4ec5;&#x5305;&#x542b;&#x4e86;&#x4e00;&#x4e2a",{"_index":4902,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{}}}],["x8be5;&#x8bed;&#x6cd5;&#x8fd4;&#x56de;&#x4e24;&#x4e2a;&#x53c2;&#x6570;&#xff0c;&#x7b2c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x662f",{"_index":308,"title":{},"body":{"index.html#类型断言":{}}}],["x8be6;&#x60c5;&#x4e2d;&#x90fd;&#x6709;&#x4ec0;&#x4e48",{"_index":646,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8be6;&#x60c5;&#x4f1a;&#x88ab;&#x9010",{"_index":683,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8be6;&#x7ec6;&#x7a0b;&#x5ea6;&#x7684",{"_index":4299,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x53e5",{"_index":1110,"title":{},"body":{"basic/flow.html#for":{},"basic/struct.html#结构体":{}}}],["x8bed;&#x53e5;&#x3002;&#x6bcf;&#x4e2a",{"_index":1066,"title":{},"body":{"basic/flow.html#select":{}}}],["x8bed;&#x53e5;&#x3002;&#x8fd9;&#x6761",{"_index":8186,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8bed;&#x53e5;&#x4e00;&#x822c;&#x88ab;&#x7528;&#x4e8e;&#x5904;&#x7406;&#x6210;&#x5bf9;&#x7684;&#x64cd;&#x4f5c;&#xff0c;&#x5982;&#x6253;&#x5f00;&#x3001;&#x5173;&#x95ed;&#x3001;&#x8fde;&#x63a5;&#x3001;&#x65ad;&#x5f00;&#x8fde;&#x63a5;&#x3001;&#x52a0;&#x9501;&#x3001;&#x91ca;&#x653e;&#x9501;&#x3002;&#x56e0;&#x4e3a",{"_index":3179,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#x4e00;&#x822c;&#x90fd;&#x4f1a;&#x643a;&#x5e26;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x8c03;&#x7528;&#xff0c;&#x8fd9;&#x4e2a;&#x88ab;&#x8c03;&#x7528;&#x7684;&#x51fd;&#x6570;&#x5e38;&#x5e38;&#x88ab;&#x79f0;&#x4e3a",{"_index":6258,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x4e0d;&#x5141;&#x8bb8",{"_index":1054,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8bed;&#x53e5;&#x4e0d;&#x884c;&#x5417;&#xff1f",{"_index":7973,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8bed;&#x53e5;&#x4e2d;&#x3002",{"_index":6934,"title":{},"body":{"standards/io/io.html#Closer":{}}}],["x8bed;&#x53e5;&#x4e2d;&#x5d4c;&#x5165",{"_index":3032,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x4e2d;&#x7684",{"_index":8025,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x8bed;&#x53e5;&#x4e2d;&#x7684;&#x3002;&#x56e0;&#x6b64;&#xff0c;&#x4e0d;&#x8bba;&#x53c2;&#x6570",{"_index":8150,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x8bed;&#x53e5;&#x4e2d;&#x7684;&#x90a3;&#x4e2a",{"_index":6343,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x4e4b;&#x540e;&#xff0c",{"_index":6305,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x4ea7;&#x751f;&#x4f5c;&#x7528;&#x3002;&#x8fd9;&#x79cd;&#x9519;&#x8bef;&#x7684;&#x7528;&#x6cd5;&#x53ef;&#x80fd;&#x4f1a;&#x8ba9;&#x8fd9;&#x4e2a",{"_index":3039,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x4f1a",{"_index":8187,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8bed;&#x53e5;&#x4f1a;&#x5148;&#x628a;&#x88ab;&#x904d;&#x5386;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x503c;&#x62c6;&#x6210;&#x4e00;&#x4e2a",{"_index":1121,"title":{},"body":{"basic/flow.html#for":{}}}],["x8bed;&#x53e5;&#x5199;&#x5728;&#x51fd;&#x6570;&#x4f53;&#x7684;&#x5f00;&#x59cb;&#x5904;&#xff0c;&#x56e0;&#x4e3a;&#x5728;&#x5f15;&#x53d1",{"_index":740,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x8bed;&#x53e5;&#x52a0",{"_index":8031,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x8bed;&#x53e5;&#x5373;&#x662f;&#x6700;&#x540e;&#x4e00;&#x6761;&#x8bed;&#x53e5;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x5728;&#x6267;&#x884c;&#x5b8c;&#x8fd9;&#x6761",{"_index":6304,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x5374;&#x53ef;&#x4ee5;&#x505a;&#x591a;&#x6b21;&#x68c0;&#x67e5;&#xff0c;&#x76f4;&#x5230;&#x8fd9;&#x4e2a;&#x72b6;&#x6001;&#x6539;&#x53d8;&#x4e3a;&#x6b62;&#x3002",{"_index":7975,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8bed;&#x53e5;&#x53ea;&#x4f1a;&#x5bf9;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#x68c0;&#x67e5;&#x4e00;&#x6b21;&#xff0c;&#x800c",{"_index":7974,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8bed;&#x53e5;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x5019;&#x9009;&#x5206;&#x652f;&#xff0c;&#x6211;&#x5728;&#x5176;&#x4e2d;&#x5229;&#x7528;&#x63a5;&#x6536;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7b2c;&#x4e8c;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x5bf9",{"_index":3043,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x53ea;&#x80fd;&#x5bf9;&#x5176;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a",{"_index":3029,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x53ef;&#x4ee5;&#x4e3a;&#x4e24;&#x4e2a;&#x8fed;&#x4ee3;&#x53d8;&#x91cf;&#x8d4b;&#x503c;&#x3002;&#x5982;&#x679c;&#x5b58;&#x5728;&#x4e24;&#x4e2a;&#x8fed;&#x4ee3;&#x53d8;&#x91cf;&#xff0c;&#x90a3;&#x4e48;&#x8d4b;&#x7ed9;&#x7b2c;&#x4e00;&#x4e2a;&#x53d8;&#x91cf;&#x7684;&#x503c;&#x5c31;&#x5c06;&#x4f1a;&#x662f;&#x5f53;&#x524d;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x4e2d;&#x7684;&#x67d0;&#x4e2a",{"_index":1128,"title":{},"body":{"basic/flow.html#for":{}}}],["x8bed;&#x53e5;&#x540e;&#xff0c;&#x4f1a",{"_index":8198,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8bed;&#x53e5;&#x548c",{"_index":6383,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x5728",{"_index":1051,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8bed;&#x53e5;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":2029,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x8bed;&#x53e5;&#x5b9a;&#x4e49;&#x4e86;&#x7ed3;&#x6784;&#x4f53;&#x7684;&#x540d;&#x79f0;&#xff1a",{"_index":2030,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x8bed;&#x53e5;&#x5c31;&#x4e0d;&#x80fd;&#x901a;&#x8fc7;&#x7f16;&#x8bd1;&#x3002",{"_index":1050,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8bed;&#x53e5;&#x5c31;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#x3002",{"_index":3023,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x5f00;&#x59cb;&#x6267;&#x884c;&#x65f6;&#x88ab;&#x6c42;&#x503c;&#x4e00;&#x6b21;&#xff0c;&#x65e0;&#x8bba;&#x540e;&#x8fb9;&#x4f1a;&#x6709;&#x591a;&#x5c11;&#x6b21;&#x8fed;&#x4ee3",{"_index":1086,"title":{},"body":{"basic/flow.html#for":{}}}],["x8bed;&#x53e5;&#x6240;&#x5c5e;&#x7684;&#x51fd;&#x6570;&#x662f;&#x5bf9;&#x5e94;&#x7684;&#xff0c;&#x5e76;&#x4e14;&#xff0c;&#x5b83;&#x662f;&#x5148;&#x8fdb;&#x540e;&#x51fa;&#xff08;filo&#xff09;&#x7684;&#xff0c;&#x76f8;&#x5f53;&#x4e8e;&#x4e00;&#x4e2a;&#x6808;&#x3002",{"_index":3203,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#x65e0;&#x4f11;&#x6b62;&#x5730;&#x8fd0;&#x884c;&#x4e0b;&#x53bb",{"_index":3040,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x662f;&#x4e13;&#x4e3a;&#x901a;&#x9053;&#x800c;&#x8bbe;&#x8ba1;&#x7684;&#xff0c",{"_index":2992,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x672c;&#x8eab;&#x6267;&#x884c;&#x5b8c;&#x6bd5;&#xff0c;go",{"_index":6292,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x6765;&#x5305;&#x88f9;&#x8c03;&#x7528;&#x5176",{"_index":7971,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8bed;&#x53e5;&#x6bcf;&#x6b21;&#x6267;&#x884c;&#x7684;&#x65f6;&#x5019;&#xff0c;go",{"_index":3199,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#x7684;&#x51fa;&#x73b0;&#x987a;&#x5e8f;&#xff08;&#x66f4;&#x4e25;&#x8c28;&#x5730;&#x8bf4;&#xff0c;&#x662f;&#x6267;&#x884c;&#x987a;&#x5e8f;&#xff09;&#x5b8c;&#x5168;&#x76f8;&#x53cd",{"_index":3198,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#x7684;&#x51fd;&#x6570;&#x6267;&#x884c;&#x5b8c;&#x6bd5;&#x65f6;&#xff08",{"_index":3175,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#x7684;&#x5206;&#x652f;&#x4e2d;&#x4f7f;&#x7528",{"_index":3035,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x7684;&#x6267;&#x884c;&#x3002",{"_index":3047,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x7684;&#x6267;&#x884c;&#x65f6;&#x95f4",{"_index":6286,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x7684;&#x6267;&#x884c;&#xff0c;&#x800c;&#x5e76;&#x4e0d;&#x4f1a;&#x5bf9;&#x5916;&#x5c42;&#x7684",{"_index":3038,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x7684;&#x65b9;&#x5f0f;&#x5b9e;&#x73b0;&#x3002;&#x4f46;&#x8fd9;&#x65f6;&#x8981;&#x6ce8;&#x610f;&#xff0c",{"_index":3033,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x7684;&#x65f6;&#x5019;&#xff0c",{"_index":6265,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x9700;&#x8981;&#x6ce8;&#x610f;&#x7684;&#x4e8b;&#x60c5",{"_index":3017,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x8fed;&#x4ee3;&#x8fd0;&#x884c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5176;&#x4e2d;&#x7684;&#x90a3;&#x6761",{"_index":6303,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x7acb;&#x5373;&#x7ed3;&#x675f;&#x5f53;&#x524d",{"_index":3046,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x8054;&#x7528;&#x5c31;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x4e00;&#x79cd;&#x7b80;&#x6613;&#x7684;&#x81ea;&#x65cb;&#x9501;&#xff08;spinlock&#xff09;&#x3002",{"_index":8024,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x8bed;&#x53e5;&#x88ab;&#x6267;&#x884c;&#x65f6;&#xff0c;&#x6211;&#x4eec",{"_index":6348,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x88ab;&#x6267;&#x884c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5728",{"_index":1100,"title":{},"body":{"basic/flow.html#for":{}}}],["x8bed;&#x53e5;&#x88ab;&#x6267;&#x884c;&#x7684;&#x65f6;&#x95f4;&#x4e0d;&#x540c",{"_index":6263,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x8c03;&#x7528",{"_index":732,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x8bed;&#x53e5;&#x8c03;&#x7528;&#x5b83;&#x3002",{"_index":8086,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x8bed;&#x53e5;&#x904d;&#x5386;&#x5b57;&#x7b26;&#x4e32;&#x503c;&#x7684;&#x65f6;&#x5019;&#x5e94;&#x8be5;&#x6ce8;&#x610f",{"_index":1119,"title":{},"body":{"basic/flow.html#for":{}}}],["x8bed;&#x53e5;&#x90fd;&#x4e0d;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#x3002;&#x5982;&#x679c;&#x90a3;&#x51e0;&#x4e2a;&#x8868;&#x8fbe;&#x5f0f;&#x90fd;&#x963b;&#x585e;&#x4e86;&#xff0c;&#x6216;&#x8005",{"_index":3019,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#xff0c",{"_index":8411,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x8bed;&#x53e5;&#xff0c;&#x4f60;&#x8981;&#x660e;&#x767d;&#x5176;&#x4e2d;&#x7684",{"_index":1044,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8bed;&#x53e5;&#xff0c;&#x53ea;&#x80fd;&#x7ed3",{"_index":3036,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#xff0c;&#x90a3;&#x4e48;&#x90a3;&#x51e0;&#x4e2a",{"_index":3194,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#xff1b;&#x907f;&#x514d;&#x91cd;&#x590d;&#x9501;&#x5b9a;&#x3002",{"_index":7863,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bed;&#x6cd5;&#x4e0d;&#x80fd;&#x5728",{"_index":314,"title":{},"body":{"index.html#类型断言":{}}}],["x8bed;&#x6cd5;&#x5b89;&#x5168;&#x5730;&#x8f6c;&#x4e49",{"_index":4683,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8bed;&#x6cd5;&#x8868;&#x793a",{"_index":4668,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8bed;&#x8a00",{"_index":2036,"title":{},"body":{"basic/struct.html#结构体":{},"standards/os/os.html#文件属性":{}}}],["x8bed;&#x8a00;&#x4e00;&#x5b9a;&#x4f1a;&#x751f;&#x6210;&#x65b0;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#xff0c;&#x4f46;&#x662f;&#x5b83;&#x4e5f;&#x540c;&#x65f6;&#x751f;&#x6210;&#x4e86;&#x65b0;&#x7684;&#x5207;&#x7247;&#x3002;&#x5b83;&#x662f;&#x628a;&#x65b0",{"_index":1937,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x8bed;&#x8a00;&#x4e0d;&#x4f46;&#x6709;&#x7740;&#x72ec;&#x7279;&#x7684;&#x5e76;&#x53d1;&#x7f16;&#x7a0b;&#x6a21;&#x578b;&#xff0c;&#x4ee5;&#x53ca;&#x7528;&#x6237;&#x7ea7;&#x7ebf;&#x7a0b",{"_index":6226,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x4e0d;&#x652f;&#x6301;&#x8fd0;&#x7b97;&#x7b26;&#x91cd;&#x8f7d;&#xff0c;&#x6240;&#x4ee5;&#x6240;&#x6709;&#x5927;&#x6570;&#x5b57;&#x7c7b;&#x578b;&#x90fd;&#x6709;&#x50cf;&#x662f",{"_index":4376,"title":{},"body":{"standards/data/big.html#big":{}}}],["x8bed;&#x8a00;&#x4e2d",{"_index":1275,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x8bed;&#x8a00;&#x4e2d;&#x4f7f;&#x7528;&#x7684;&#x5783;&#x573e;&#x56de;&#x6536;&#x4f7f;&#x7528;&#x7684;&#x662f",{"_index":504,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x8bed;&#x8a00;&#x4e2d;&#x63d0;&#x4f9b;&#x4e86",{"_index":4360,"title":{},"body":{"standards/data/big.html#big":{}}}],["x8bed;&#x8a00;&#x4e2d;&#x7684",{"_index":1570,"title":{},"body":{"basic/json.html#序列化":{},"standards/data/big.html#big":{},"standards/net/http.html#HTTP-Server":{}}}],["x8bed;&#x8a00;&#x4e2d;&#x76f8;&#x5e94;&#x7684;&#x5305;&#x88c5;&#x51fd;&#x6570;&#x662f",{"_index":7481,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["x8bed;&#x8a00;&#x4e2d;&#xff0c",{"_index":292,"title":{},"body":{"index.html#类型断言":{},"basic/error.html#Panic-异常":{},"basic/oop.html#String-方法":{},"basic/basic_data.html#字符串":{}}}],["x8bed;&#x8a00;&#x4e2d;&#xff0c;&#x4f60;&#x9700;&#x8981;&#x5c06;&#x6574;&#x578b;&#x8f6c;&#x4e3a;&#x5b57;&#x7b26;&#x4e32;&#x7c7b;&#x578b;&#xff0c;&#x7136;&#x540e;&#x624d;&#x80fd;&#x8fdb;&#x884c;&#x8fde;&#x63a5;&#x3002",{"_index":4955,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x8bed;&#x8a00;&#x4e2d;&#xff0c;&#x7528;&#x4e8e;&#x5206;&#x6790;&#x7a0b;&#x5e8f;&#x6027;&#x80fd;&#x7684;&#x6982;&#x8981;&#x6587;&#x4ef6;&#x6709;&#x4e09;&#x79cd;&#xff0c;&#x5206;&#x522b;&#x662f;&#xff1a",{"_index":4240,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x4e3a;&#x7a0b;&#x5e8f;&#x5f00;&#x53d1;&#x8005;&#x4eec;&#x63d0;&#x4f9b;&#x4e86;&#x4e30;&#x5bcc;&#x7684;&#x6027;&#x80fd;&#x5206;&#x6790",{"_index":4234,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x4f1a;&#x5148;&#x62ff;&#x5230;&#x5bf9;&#x5e94;&#x7684;&#x961f;&#x5217;&#xff0c;&#x7136;&#x540e;&#x4ece;&#x8be5;&#x961f;&#x5217;&#x4e2d;&#x4e00;&#x4e2a;&#x4e00;&#x4e2a;&#x5730;&#x53d6;&#x51fa",{"_index":3206,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x8a00;&#x4f1a;&#x628a;&#x5b83;&#x643a;&#x5e26;&#x7684",{"_index":3200,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x8a00;&#x4f1a;&#x628a;&#x6240;&#x6709;&#x88ab;&#x62fc;&#x63a5;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x4f9d;&#x6b21;&#x62f7;&#x8d1d;&#x5230;&#x4e00;&#x4e2a;&#x5d2d;&#x65b0;&#x4e14;&#x8db3;&#x591f;&#x5927;&#x7684;&#x8fde;&#x7eed;&#x5185;&#x5b58;&#x7a7a;&#x95f4;&#x4e2d;&#xff0c",{"_index":3796,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8bed;&#x8a00;&#x4f1a;&#x6839;&#x636e;&#x5143;&#x7d20;&#x7684;&#x4e2a;&#x6570;&#x6765;&#x8bbe;&#x7f6e;&#x6570;&#x7ec4;&#x7684;&#x5927;&#x5c0f;&#x3002",{"_index":778,"title":{},"body":{"basic/array.html#数组":{}}}],["x8bed;&#x8a00;&#x4f7f;&#x7528",{"_index":3420,"title":{},"body":{"standards/time.html#时区":{}}}],["x8bed;&#x8a00;&#x4f7f;&#x7528;&#x7684;&#x662f",{"_index":3125,"title":{},"body":{"basic/function.html#参数":{}}}],["x8bed;&#x8a00;&#x5305;&#x4e2d;&#x7684",{"_index":7812,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bed;&#x8a00;&#x53ef;&#x4ee5;&#x8f7b;&#x800c;&#x6613;&#x4e3e;&#x5730;&#x901a;&#x8fc7;&#x5d4c;&#x5165",{"_index":1284,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x8bed;&#x8a00;&#x5728;&#x8bed;&#x8a00;&#x5c42;&#x9762;&#x4e0a;&#x652f;&#x6301;&#x4e86;&#x5e76;&#x53d1;&#xff0c;&#x7b80;&#x5355;&#x5c06",{"_index":6194,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x5b98;&#x65b9;&#x7ec8;&#x4e8e;&#x5728",{"_index":8333,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8bed;&#x8a00;&#x5c06;&#x4f1a;&#x4ee5;&#x539f;&#x5bb9;&#x91cf;&#x7684",{"_index":1931,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x8bed;&#x8a00;&#x5c31;&#x4f1a;&#x60f3;&#x529e;&#x6cd5;&#x6269;&#x5bb9;&#x3002;&#x4f46;&#x5b83;&#x5e76;&#x4e0d;&#x4f1a;&#x6539;&#x53d8;&#x539f;&#x6765;&#x7684;&#x5207;&#x7247;&#xff0c;&#x800c;&#x662f;&#x4f1a;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x5bb9;&#x91cf;&#x66f4;&#x5927;&#x7684;&#x5207;&#x7247;&#xff0c",{"_index":1923,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x8bed;&#x8a00;&#x5e76;&#x4e0d;&#x4f1a;&#x53bb;&#x4fdd;&#x8bc1;&#x8fd9;&#x4e9b",{"_index":6308,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x5f00;&#x6e90;&#x5305;&#xff0c;&#x53ef;&#x4ee5;&#x5728",{"_index":2141,"title":{},"body":{"basic/package.html#包":{}}}],["x8bed;&#x8a00;&#x624d;&#x80fd;&#x4fdd;&#x8bc1;&#x6bcf;&#x4e2a",{"_index":6345,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x63d0;&#x4f9b;&#x7684;&#x4e0d;&#x540c;&#x5bfb;&#x5e38;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x5d4c;&#x5165;&#x673a;&#x5236;&#x8ba9;&#x4e00;&#x4e2a;&#x547d;&#x540d;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x5305;&#x542b;&#x53e6;&#x4e00;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x7684;&#x533f;&#x540d;&#x6210;&#x5458;&#xff0c",{"_index":2058,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x8bed;&#x8a00;&#x63d0;&#x4f9b;&#x7684;&#x65b9;&#x5f0f;&#x8fdb;&#x884c;&#x4e86;&#x4eba;&#x4e3a",{"_index":6318,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x63d0;&#x4f9b;&#x7684;&#x8fdb;&#x884c;&#x5927;&#x6570;&#x64cd;&#x4f5c;&#x7684;&#x6807;&#x51c6;&#x5e93;&#xff0c;&#x5b9e;&#x73b0;&#x4e86;&#x4efb;&#x610f;&#x7cbe;&#x5ea6;&#x7b97;&#x672f;&#xff08;&#x5927;&#x6570;&#xff09;&#x3002",{"_index":4352,"title":{},"body":{"standards/data/big.html#big":{}}}],["x8bed;&#x8a00;&#x652f;&#x6301;&#x533f;&#x540d;&#x51fd;&#x6570;&#xff0c;&#x53ef;&#x4f5c;&#x4e3a;&#x95ed;&#x5305;&#x3002",{"_index":3163,"title":{},"body":{"basic/function.html#闭包":{}}}],["x8bed;&#x8a00;&#x652f;&#x6301;&#x591a;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x5256;&#x6790;&#x6027;&#x80fd;&#x5206;&#x6790;&#xff1a",{"_index":4134,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x8bed;&#x8a00;&#x6559;&#x7a0b",{"_index":2037,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x8bed;&#x8a00;&#x662f;&#x7528;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x5b9e;&#x73b0;&#x4e86;&#x7ee7;&#x627f;&#x5417",{"_index":1274,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x8bed;&#x8a00;&#x6700;&#x91cd;&#x8981;&#x7684;&#x7f16;&#x7a0b;&#x7406;&#x5ff5;&#x3002",{"_index":2872,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x8a00;&#x6709;&#x4e00;&#x4e2a;&#x7279;&#x6027;&#x53ef;&#x4ee5",{"_index":2062,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x8bed;&#x8a00;&#x6709;&#x8d85;&#x8fc7",{"_index":2136,"title":{},"body":{"basic/package.html#包":{}}}],["x8bed;&#x8a00;&#x6807;&#x51c6;&#x5e93;&#x4e2d;&#x6700;&#x91cd;&#x8981;&#x7684;&#x90a3;&#x51e0;&#x4e2a;&#x540c;&#x6b65;&#x5de5;&#x5177;&#xff0c;&#x8fd9;&#x5305;&#x62ec",{"_index":8277,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8bed;&#x8a00;&#x6807;&#x51c6;&#x5e93;&#x4e2d;&#x7684;&#x8fd8;&#x6709;&#x53e6;&#x4e00;&#x4e2a;&#x540c;&#x6b65;&#x5de5;&#x5177;&#xff1a",{"_index":8278,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8bed;&#x8a00;&#x6807;&#x51c6;&#xff0c;&#x5404;&#x4e2a;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x63d0;&#x4f9b;&#x7684;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x5374;&#x4e0d;&#x5c3d;&#x76f8;&#x540c;&#x3002;go",{"_index":7665,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x8bed;&#x8a00;&#x7279;&#x6709;&#x7684;&#x4e00;&#x4e2a;&#x57fa;&#x672c;&#x6570;&#x636e;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x7684;&#x4e00;&#x4e2a;&#x503c;&#x5c31;&#x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#xff0c;&#x5373;&#xff1a;&#x4e00;&#x4e2a",{"_index":3947,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8bed;&#x8a00;&#x7684;&#x4ee3;&#x7801;&#x5c31;&#x662f;&#x901a;&#x8fc7;&#x8fd9;&#x4e2a",{"_index":199,"title":{},"body":{"index.html#package":{}}}],["x8bed;&#x8a00;&#x7684;&#x4ee3;&#x7801;&#x65f6;&#xff0c;&#x6bcf;&#x4e2a;&#x6587;&#x4ef6;&#x7684;&#x5934;&#x90e8;&#x90fd;&#x6709;&#x4e00;&#x884c",{"_index":193,"title":{},"body":{"index.html#package":{}}}],["x8bed;&#x8a00;&#x7684;&#x5305;&#x4e0e;&#x5176;&#x4ed6;&#x8bed;&#x8a00;&#x7684",{"_index":2134,"title":{},"body":{"basic/package.html#包":{}}}],["x8bed;&#x8a00;&#x7684;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x5f53;&#x7136;&#x662f;&#x57fa;&#x4e8",{"_index":7993,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x8bed;&#x8a00;&#x7684;&#x56db;&#x7c7b;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":181,"title":{},"body":{"index.html#数据类型":{}}}],["x8bed;&#x8a00;&#x7684;&#x5f88;&#x591a;&#x540c;&#x6b65;&#x5de5;&#x5177;&#x4e00;&#x6837;&#xff0c",{"_index":8280,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8bed;&#x8a00;&#x7684;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x5fc5;&#x987b;&#x4f7f;&#x7528",{"_index":322,"title":{},"body":{"index.html#编码":{}}}],["x8bed;&#x8a00;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x8fd8;&#x53ef;&#x4ee5;&#x5d4c;&#x5165;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x3002",{"_index":2083,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x8bed;&#x8a00;&#x7684;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x5c31;&#x4f1a;&#x7acb;&#x5373;&#x629b;&#x51fa;&#x4e00;&#x4e2a",{"_index":1478,"title":{},"body":{"basic/map.html#map":{}}}],["x8bed;&#x8a00;&#x7684;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#xff09;&#x53ea;&#x4f1a;&#x6267;&#x884c;&#x5bf9;&#x540c;&#x4e00;&#x4e2a;&#x901a",{"_index":2964,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x8a00;&#x7684;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#xff0c;&#x4f1a;&#x5148;&#x8bd5;&#x56fe;&#x4ece;&#x67d0;&#x4e2a",{"_index":6267,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x7ed3;&#x6784;&#x4f53;&#x6210;&#x5458;&#x4e3a;&#x7a7a;&#x6216;&#x96f6;&#x503c;&#x65f6;&#x4e0d;&#x751f;&#x6210",{"_index":1577,"title":{},"body":{"basic/json.html#序列化":{}}}],["x8bed;&#x8a00;&#x7f16;&#x8bd1;&#x5668;&#x662f;&#x65e0;&#x6cd5;&#x5728;&#x7f16;&#x8bd1;&#x671f;&#x5bf9;&#x5b83;&#x4eec;&#x8fdb;&#x884c;&#x68c0;&#x67e5;&#x7684;&#xff0c;&#x4e0d;&#x6b63;&#x786e;&#x7684;&#x952e;&#x503c;&#x5b9e;&#x9645;&#x7c7b",{"_index":8344,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8bed;&#x8a00;&#x7f16;&#x8bd1;&#x901f;&#x5ea6;&#x5f88;&#x5feb;&#xff0c;&#x4e3b;&#x8981;&#x4f9d;&#x8d56;&#x4e0b;&#x9762;&#x4e09;&#x70b9;&#xff1a",{"_index":2144,"title":{},"body":{"basic/package.html#包":{}}}],["x8bed;&#x8a00;&#x81ea;&#x5e26;&#x7684;&#x3001;&#x552f;&#x4e00;&#x4e00;&#x4e2a;&#x53ef;&#x4ee5;&#x6ee1;&#x8db3;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x6027;&#x7684;&#x7c7b;&#x578b",{"_index":2876,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x8a00;&#x81ea;&#x5e26;&#x7684;&#x5b57;&#x5178;&#x7c7b;&#x578b",{"_index":8329,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8bed;&#x8a00;&#x8868;&#x793a",{"_index":4730,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8bed;&#x8a00;&#x8868;&#x793a;&#x65b9;&#x6cd5",{"_index":4727,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8bed;&#x8a00;&#x89c4;&#x8303;&#x89c4;&#x5b9a;&#xff0c",{"_index":2065,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x8bed;&#x8a00;&#x89c4;&#x8303;&#x89c4;&#x5b9a;&#xff0c;&#x5728",{"_index":1445,"title":{},"body":{"basic/map.html#map":{}}}],["x8bed;&#x8a00;&#x8c03;&#x5ea6;&#x5668;&#x7684;&#x77ed;&#x6682;&#x505c;&#x987f;&#x3002",{"_index":4283,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x4f1a;&#x7528;&#x8fd9;&#x4e2a",{"_index":6277,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x5185;&#x90e8;&#x7684;&#x4e00;&#x4e2a;&#x6982;&#x5ff5;&#xff0c;&#x4ee3;&#x8868;&#x7740;&#x5b83;&#x540c;&#x65f6;&#x8fd0;&#x884c",{"_index":4201,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x5c06;&#x4f1a;&#x5b8c;&#x5168;&#x505c;&#x6b62;&#x5bf9;&#x963b;&#x585e;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x91c7;&#x6837;&#x3002",{"_index":4290,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x5c31",{"_index":4267,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x6536;&#x56de;&#x3002",{"_index":681,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x662f;&#x4e0d;&#x5141;&#x8bb8;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x51fa;&#x73b0;&#x7684;&#xff0c;&#x53ea;&#x8981;&#x5b83;&#x53d1;&#x73b0;&#x6240;&#x6709;&#x7684;&#x7528;&#x6237;&#x7ea7",{"_index":7880,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x7684;&#x91c7;&#x6837;&#x5de5;&#x4f5c;&#xff0c;&#x9020;&#x6210;&#x4e0d;&#x826f;&#x5f71;&#x54cd",{"_index":4272,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x81ea;&#x884c;&#x629b;&#x51fa;&#x7684",{"_index":7885,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bed;&#x8a00;&#x90fd;&#x6709;&#x4e00;&#x5957;&#x7b97;&#x6cd5;&#x4e0e;&#x4e4b;&#x5bf9;&#x5e94;&#x3002;&#x8fd9;&#x5957;&#x7b97;&#x6cd5;&#x4e2d;&#x5c31;&#x5305;&#x542b;&#x4e86;&#x54c8;&#x5e0c;&#x548c;&#x5224;&#x7b49;&#x3002",{"_index":1455,"title":{},"body":{"basic/map.html#map":{}}}],["x8bed;&#x8a00;&#x91cc;&#x9762;&#x6709;&#x4e00;&#x4e2a;&#x8bed;&#x6cd5;&#xff0c;&#x53ef;&#x4ee5;&#x76f4;&#x63a5",{"_index":299,"title":{},"body":{"index.html#类型断言":{}}}],["x8bed;&#x8a00;&#x975e;&#x5e38;&#x7b80;&#x5355;&#xff0c;&#x53ea;&#x6709",{"_index":159,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x8bed;&#x8a00;&#xff0c;&#x800c;&#x662f;&#x81ea;&#x5df1;&#x901a;&#x8fc7;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x5b9e;&#x73b0",{"_index":7667,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x8bed;&#x8a00;&#xff0c;golang",{"_index":1707,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x8bef;&#x5dee;&#x51fd;&#x6570",{"_index":6114,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x8bef;&#x8bf4;&#x660e;&#x539f;&#x56e0;&#x3002;&#x5982;&#x679c;&#x5230;&#x8fbe;&#x4e86;&#x76ee;&#x5f55",{"_index":7678,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x8bf4;&#x660e",{"_index":4660,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8bf4;&#x660e;&#xff1a",{"_index":7431,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8bf4;&#x90fd;&#x6ca1;&#x6709;&#x6ee1;&#x8db3;&#x6c42;&#x503c;&#x7684;&#x6761;&#x4ef6;&#xff0c;&#x90a3;&#x4e48;&#x9ed8;&#x8ba4;&#x5206;&#x652f;&#x5c31;&#x4f1a;&#x88ab;&#x9009;&#x4e2d;&#x5e76;&#x6267;&#x884c;&#x3002",{"_index":3020,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bf7;&#x67e5;&#x9605;&#x76f8;&#x5173;&#x8d44;&#x6599;&#x3002",{"_index":7608,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x8bf7;&#x6c42",{"_index":8808,"title":{},"body":{"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{}}}],["x8bf7;&#x6c42;&#x3002",{"_index":8865,"title":{},"body":{"standards/net/http.html#Response":{},"standards/net/http.html#client":{}}}],["x8bf7;&#x6c42;&#x3002;&#x6ca1;&#x9519;&#xff0c;&#x6700;&#x7ec8;&#x6211;&#x4eec;&#x7684",{"_index":8966,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8bf7;&#x6c42;&#x4e3b;&#x4f53;&#x8981;&#x4f18;&#x5148;&#x4e8",{"_index":8795,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8bf7;&#x6c42;&#x5176;&#x5b83;&#x7684",{"_index":6218,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bf7;&#x6c42;&#x5199;&#x5165",{"_index":8826,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8bf7;&#x6c42;&#x591a;&#x8def;&#x590d;&#x7528;&#x5668;&#xff0c;&#x5b83;&#x5c06;&#x6bcf;&#x4e00;&#x4e2a;&#x8bf7;&#x6c42;&#x7684",{"_index":8940,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8bf7;&#x6c42;&#x5bf9;&#x8c61",{"_index":8728,"title":{},"body":{"standards/net/http.html#http":{},"standards/net/http.html#Response":{}}}],["x8bf7;&#x6c42;&#x5bf9;&#x8c61;&#xff1a",{"_index":8740,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8bf7;&#x6c42;&#x62a5;&#x6587;&#x7684;&#x62bd;&#x8c61;&#x3002;&#x5305;&#x62ec;&#x8d77;&#x59cb;&#x884c",{"_index":8738,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8bf7;&#x6c42;&#x7684;&#x6574;&#x4e2a;&#x4e3b;&#x4f53;&#x90fd;&#x4f1a;&#x88ab;&#x89e3;&#x6790;&#xff0c;&#x5f97;&#x5230;&#x7684;&#x6587;&#x4ef6;&#x8bb0;&#x5f55;&#x6700;&#x591a",{"_index":8803,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8bf7;&#x6c42;&#x95ee;&#x9898;&#x53ef;&#x4ee5;&#x89e3;&#x51b3;&#x76f8;&#x5bf9;&#x91cd;&#x5b9a;&#x5411;&#x7684;&#x95ee;&#x9898;&#xff0c;&#x5982;&#x679c;&#x8be5;&#x503c;&#x4e3a",{"_index":8874,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x8bf7;&#x6c42;&#xff0c",{"_index":8790,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8bf7;&#x6c42;&#xff0c;&#x8be5;&#x51fd;&#x6570;&#x5c06;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":8780,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8bf7;&#x8bb0;&#x4f4f;&#xff0c",{"_index":6290,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bfb;&#x5199;&#x6a21;&#x5f0f;&#x6253;&#x5f00;&#x6587;&#x4ef6",{"_index":7350,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8bfb;&#x5199;&#x901a;&#x9053;&#x6216;&#x8005;&#x4e3b;&#x52a8;&#x8ba9;&#x51fa",{"_index":6532,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8bfb;&#x5199;&#x9501",{"_index":7828,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8bfb;&#x5199;&#x9501;&#x662f;&#x628a;&#x5bf9;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x201c;&#x8bfb;&#x64cd;&#x4f5c;&#x201d;&#x548c;&#x201c;&#x5199;&#x64cd;&#x4f5c;&#x201d;&#x533a;&#x522b;&#x5bf9;&#x5f85;&#x4e86;&#x3002;&#x5b83;&#x53ef;&#x4ee5;&#x5bf9;&#x8fd9;&#x4e24;&#x79cd;&#x64cd;&#x4f5c;&#x65bd;&#x52a0;&#x4e0d;&#x540c;&#x7a0b;&#x5ea6;&#x7684;&#x4fdd;&#x62a4",{"_index":7832,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bfb;&#x5199;&#x9501;&#xff08;&#x591a;&#x8bfb;&#x5355;&#x5199;&#x9501;&#xff09;&#x3002",{"_index":7831,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bfb;&#x53d6;&#x4f46;&#x5c06;&#x8fd4;&#x56de;&#x7684;&#x6570;&#x636e;&#x91cf;&#x9650;&#x5236;&#x4e3a",{"_index":7000,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["x8bfb;&#x53d6;&#x5185;&#x5bb9;&#x540e;&#xff0c;&#x4f1a;&#x81ea;&#x52a8;&#x5199;&#x5165;&#x5230",{"_index":7135,"title":{},"body":{"standards/io/io.html#TeeReader-函数":{}}}],["x8bfb;&#x53d6;&#x5185;&#x5bb9;&#x65f6;&#x4e0d;&#x5173;&#x6ce8;&#x6362;&#x884c",{"_index":4650,"title":{},"body":{"standards/io/fmt.html#Scan":{}}}],["x8bfb;&#x53d6;&#x5230",{"_index":7077,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x8bfb;&#x53d6;&#x5230;&#x6362;&#x884c;&#x65f6;&#x505c;&#x6b62;&#xff0c;&#x5e76;&#x8981;&#x6c42;&#x4e00;&#x6b21;&#x63d0;&#x4f9b;&#x4e00;&#x884c;&#x6240;&#x6709;&#x6761;&#x76e",{"_index":4651,"title":{},"body":{"standards/io/fmt.html#Scan":{}}}],["x8bfb;&#x53d6;&#x53d8;&#x91cf;&#xff0c;&#x90a3;&#x4e48;&#x662f;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#xff0c;&#x8fd9;&#x4e2a;&#x65f6;&#x5019;&#x4f7f;&#x7528",{"_index":7829,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bfb;&#x53d6;&#x5e76;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":8859,"title":{},"body":{"standards/net/http.html#Response":{}}}],["x8bfb;&#x53d6;&#x6574;&#x4e2a;&#x6587;&#x4ef6;&#x7684;&#x5185;&#x5bb9;&#xff0c",{"_index":4812,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x8bfb;&#x53d6;&#x6574;&#x4e2a;&#x6587;&#x4ef6;&#xff0c;&#x5b83;&#x4e0d;&#x4f1a;&#x5c06;&#x8bfb;&#x53d6;&#x8fd4;&#x56de;&#x7684",{"_index":4818,"title":{},"body":{"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{}}}],["x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#xff1a;%c\\n",{"_index":6945,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x8bfb;&#x53d6;&#x76ee;&#x5f55",{"_index":7669,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x8bfb;&#x53d6;&#x76f4;&#x5230",{"_index":7059,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["x8bfb;&#x53d6;&#x8be5;&#x5b57;&#x8282;&#x3002",{"_index":6951,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x8bfb;&#x6216;&#x5199;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#xff1a",{"_index":6941,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x8bfb;&#x6ee1",{"_index":7095,"title":{},"body":{"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{}}}],["x8bfb;&#x76ee;&#x5f55",{"_index":7663,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x8c03;&#x5ea6;&#x4f1a;&#x6d88;&#x8017;&#x4e00;&#x5927;&#x5806;&#x8d44;&#x6e90;&#xff0c;&#x56e0;&#x6b64;&#x5f15;&#x5165;&#x4e86;&#x7ebf;&#x7a0b;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x7ebf;&#x7a0b;&#x672c;&#x8eab;&#x51e0;&#x4e4e;&#x4e0d;&#x5360;&#x6709;&#x8d44;&#x6e90;&#xff0c;&#x4ed6;&#x4eec;&#x5171;&#x4eab;&#x8fdb;&#x7a0b;&#x91cc;&#x7684;&#x8d44;&#x6e90;&#xff0c;&#x5185;&#x6838;&#x8c03;&#x5ea6;&#x8d77;&#x6765;&#x4e0d",{"_index":6187,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x8c03;&#x5ea6;&#x5668",{"_index":6229,"title":{"concurrent/goroutine.html#Goroutine-调度器":{}},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8c03;&#x5ea6;&#x5668;&#x7684;&#x4e3b;&#x8981;&#x6709",{"_index":6230,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8c03;&#x5ea6;&#x7684;&#x5207;&#x6362;&#x4e5f;&#x4e0d;&#x7528;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x5185;&#x6838;&#x5c42;&#x5b8c;&#x6210;&#xff0c;&#x4ee3;&#x4ef7;&#x5f88;&#x4f4",{"_index":6432,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8c03;&#x5ea6;&#x7684;&#x57fa;&#x7840;&#x3002",{"_index":6497,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8c03;&#x5ea6;&#xff0c;&#x53c8;&#x56e0;&#x4e3a;&#x8c03;&#x5ea6;&#x5668;&#x5f88;&#x53ef;&#x80fd;&#x4f1a;&#x5728",{"_index":6312,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8c03;&#x7528",{"_index":1319,"title":{},"body":{"basic/oop.html#String-方法":{},"commands/build.html#工具":{},"concurrent/channel.html#channel":{},"basic/function.html#可变参数":{},"basic/test.html#性能分析":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#目录与链接":{}}}],["x8c03;&#x7528;&#x3002",{"_index":6866,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x8c03;&#x7528;&#x4e0a;&#x8ff0;&#x65b9;&#x6cd5;&#x628a;&#x65b0;&#x7684;&#x5185;&#x5bb9;&#x62fc;&#x63a5;&#x5230;&#x5df2;&#x5b58;&#x5728;&#x7684;&#x5185;&#x5bb9;&#x7684;&#x5c3e;&#x90e8;&#xff08;&#x4e5f;&#x5c31;&#x662f;&#x53f3;&#x8fb9;&#xff09;&#x3002;&#x8fd9;&#x65f6;&#xff0c;&#x5982;&#x6709;&#x5fc5;&#x8981;&#xff0c",{"_index":3822,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8c03;&#x7528;&#x4e4b;&#x524d;&#x5fc5;&#x987b;&#x8c03;&#x7528;&#x4e86",{"_index":6961,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x8c03;&#x7528;&#x4e86",{"_index":5471,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/net/http.html#HTTP-Server":{}}}],["x8c03;&#x7528;&#x540e;&#xff0c;g",{"_index":6609,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8c03;&#x7528;&#x5c06;&#x6309;&#x987a;&#x5e8f;&#x9012;&#x8fdb;&#xff0c;&#x5bf9;&#x6587;&#x4ef6;&#x8fdb;&#x884c;&#x64cd;&#x4f5c;&#x3002",{"_index":7454,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8c03;&#x7528;&#x5c06;&#x81ea;&#x52a8;&#x5bf9;&#x5176;&#x8fdb;&#x884c;&#x8c03;&#x6574;&#xff0c;&#x4ee5;&#x6307;&#x5411;&#x5df2;&#x8bfb;&#x6216;&#x5df2;&#x5199;&#x6570;&#x636e;&#x540e;&#x7684;&#x4e0b;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x3002;&#x56e0",{"_index":7452,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8c03;&#x7528;&#x6210;&#x529f;&#x5e76;&#x4e0d;&#x80fd;&#x4fdd;&#x8bc1;&#x6570;&#x636e;&#x5df2;&#x7ecf;&#x5199;&#x5165;&#x78c1;&#x76d8;&#xff0c;&#x56e0;&#x4e3a;&#x5185;&#x6838;&#x4f1a;&#x7f13;&#x5b58;&#x78c1;&#x76d8;&#x7684",{"_index":7427,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8c03;&#x7528;&#x6210;&#x529f;&#xff08;&#x8bfb;&#x53d6;&#x6240;&#x6709;&#x5185;&#x5bb9;&#x76f4;&#x5230;&#x7ed3;&#x5c3e;&#xff09;&#xff0c",{"_index":7681,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x8c03;&#x7528;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x65b9;&#x6cd5",{"_index":1232,"title":{},"body":{"basic/oop.html#方法":{}}}],["x8c03;&#x7528;&#x65b9;&#x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x4fee;&#x6539;&#x5bf9;&#x8c61;&#x7684;&#x53d8;&#x91cf;&#x503c",{"_index":1290,"title":{},"body":{"basic/oop.html#封装":{}}}],["x8c03;&#x7528;&#x65f6;&#x4f1a;&#x4ea7;&#x751f;&#x4e00;&#x6b21;&#x62f7;&#x8d1d;&#x3002",{"_index":1249,"title":{},"body":{"basic/oop.html#方法":{}}}],["x8c03;&#x7528;&#x8005;&#x5728;&#x8003;&#x8651;&#x9519;&#x8bef;&#x4e4b;&#x524d;&#x5e94;&#x5f53;&#x9996;&#x5148;&#x5904;&#x7406;&#x8fd4;&#x56de;&#x7684;&#x6570;&#x636e;&#x3002;&#x8fd9;&#x6837;&#x505a;&#x53ef;&#x4ee5;&#x6b63;&#x786e;&#x5730;&#x5904;&#x7406;&#x5728;&#x8bfb;&#x53d6;&#x4e00;&#x4e9b;&#x5b57;&#x8282;&#x540e;&#x4ea7;&#x751f;&#x7684",{"_index":6808,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x8c03;&#x7528;&#x81ea;&#x5df1",{"_index":9037,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8c03;&#x7528;&#x8bd5;&#x56fe;&#x5bf9;&#x5176;&#x8fdb;&#x884c;&#x89e3;&#x5f15;&#x7528;&#x64cd;&#x4f5c;&#x90fd;&#x5c06;&#x9519;&#x8bef;&#xff08;&#x901a;&#x5e38;&#x9519;&#x8bef;&#x53f7;&#x662f",{"_index":7618,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x8d1f;&#x53f7;&#xff1b;0",{"_index":4945,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x8d1f;&#x8d23;&#x5bf9",{"_index":6402,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d44;&#x6e90;&#x3002",{"_index":421,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x8d44;&#x6e90;&#x4e0a;&#x8fd0;&#x884c",{"_index":6453,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d44;&#x6e90;&#x5c31;&#x662f;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7ebf;&#x7a0b",{"_index":6464,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d44;&#x6e90;&#x662f;&#x4ec0;&#x4e48;&#x5462;&#xff1f",{"_index":6461,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d44;&#x6e90;&#x662f;&#x771f;&#x5b9e;&#x7684;&#x7269;&#x7406",{"_index":6457,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d44;&#x6e90;&#x7684;&#x90a3;&#x4e9b;&#x7ebf;&#x7a0b;&#x7684;&#x3002",{"_index":7892,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8d44;&#x6e90;&#x90fd;&#x4f1a;&#x88ab;&#x91ca;&#x653e;&#x3002",{"_index":3181,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8d44;&#x6e90;&#xff0c;&#x540c;&#x65f6;&#x8fdb;&#x884c;&#xff0c;&#x79f0;&#x4e3a",{"_index":6176,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x8d44;&#x6e90;&#xff0c;&#x8fd9;&#x4e2a;&#x4efb;&#x52a1;&#x5c31;&#x843d;&#x5230;&#x4e86",{"_index":6445,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d4b;&#x503c",{"_index":2424,"title":{"basic/var.html#赋值":{}},"body":{}}],["x8d4b;&#x503c;&#x3002",{"_index":3562,"title":{},"body":{"standards/time.html#定时器":{}}}],["x8d4b;&#x503c;&#x8fd0;&#x7b97;&#x7b26",{"_index":1820,"title":{"basic/operator.html#赋值运算符":{}},"body":{}}],["x8d77;&#x4f5c;&#x7528;&#x7684;&#x51fd;&#x6570",{"_index":5808,"title":{"standards/os/filepath.html#Windows-起作用的函数":{}},"body":{}}],["x8d77;&#x5199;&#x5165;&#x63d0;&#x524d;&#x505c;&#x6b62;&#x7684;&#x9519;&#x8bef;&#x3002;&#x82e5",{"_index":6831,"title":{},"body":{"standards/io/io.html#Writer":{}}}],["x8d77;&#x521d;&#x6240;&#x6709;&#x5bf9;&#x8c61;&#x90fd;&#x662f;&#x767d;&#x8272;&#x3002",{"_index":515,"title":{},"body":{"advance/gc.html#三色标记和写屏障":{}}}],["x8d77;&#x59cb;&#x65f6;&#x95f4",{"_index":3540,"title":{},"body":{"standards/time.html#Time":{}}}],["x8d85;&#x65f6",{"_index":3013,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8ddf",{"_index":5483,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x8def;&#x5f84;&#x4ee5",{"_index":5626,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x8def;&#x5f84;&#x540d;&#x5143;&#x7d20",{"_index":5716,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x8def;&#x5f84;&#x540d;&#x5143;&#x7d20;&#xff08;&#x4ee3;&#x8868;&#x5f53;&#x524d;&#x76ee;&#x5f55;&#xff09",{"_index":5713,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x8def;&#x5f84;&#x540d;&#x5143;&#x7d20;&#xff08;&#x4ee3;&#x8868;&#x7236;&#x76ee;&#x5f55;&#xff09;&#x548c;&#x5b83;&#x524d;&#x9762;&#x7684;&#x975",{"_index":5715,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x8def;&#x5f84;&#x540d;&#x5143;&#x7d20;&#xff0c;&#x5373;&#x5c06;&#x8def;&#x5f84;&#x5f00;&#x59cb;&#x5904;&#x7684",{"_index":5718,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x8def;&#x5f84;&#x662f;&#x7528;&#x6765;&#x6307;&#x5b9a;&#x5f53;&#x524d;&#x5de5;&#x4f5c;&#x76ee;&#x5f55;&#x7684;&#x3002",{"_index":941,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x8def;&#x5f84;&#x7684;&#x5207;&#x5206;&#x548c;&#x62fc;&#x63a5",{"_index":5678,"title":{"standards/os/filepath.html#路径的切分和拼接":{}},"body":{}}],["x8df3;&#x51fa;&#x5faa;&#x73af;&#x3002",{"_index":2912,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8df3;&#x8fc7;&#x8fed;&#x4ee3",{"_index":1115,"title":{},"body":{"basic/flow.html#for":{}}}],["x8f6c;&#x4e3a",{"_index":4894,"title":{},"body":{"standards/text/strconv.html#转换错误处理":{},"standards/io/bufio.html#bufio-Reader":{}}}],["x8f6c;&#x4e3a;&#x65e0;&#x7b26;&#x53f7;&#x6574;&#x578b",{"_index":4911,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x8f6c;&#x4e3a;&#x6709;&#x7b26;&#x53f7;&#x6574;&#x578b",{"_index":4910,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x8f6c;&#x5316;&#x4e3a",{"_index":309,"title":{},"body":{"index.html#类型断言":{}}}],["x8f6c;&#x5316;&#x4e3a;&#x5341;&#x516d;&#x8fdb;&#x5236;&#x5e76;&#x9644;&#x4e0a;&#x5355;&#x5f15;&#x53f7",{"_index":4733,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8f6c;&#x6362;&#x4e3a",{"_index":251,"title":{},"body":{"index.html#类型转换":{}}}],["x8f6c;&#x6362;&#x4e3a;&#x5b57;&#x8282;&#x6d41;&#x3002;&#x800c;&#x5728",{"_index":4309,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8f6c;&#x6362;&#x4e3a;&#x76f8;&#x5e94",{"_index":3535,"title":{},"body":{"standards/time.html#Time":{}}}],["x8f6c;&#x6362;&#x683c;&#x5f0f;&#x3002",{"_index":351,"title":{},"body":{"index.html#编码":{}}}],["x8f6c;&#x6362;&#x683c;&#x5f0f;&#x4e00;&#x81f4;&#x3002;&#x4f8b;&#x5982",{"_index":4690,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8f6c;&#x6362;&#x9519;&#x8bef;&#x5904;&#x7406",{"_index":4886,"title":{"standards/text/strconv.html#转换错误处理":{}},"body":{}}],["x8f91;&#x5220;&#x9664;&#x7684;&#x952e;&#x503c;&#x5bf9;&#x6c38;&#x8fdc;&#x4f1a;&#x88ab;&#x65e0;&#x89c6;&#x3002",{"_index":8391,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8f93;&#x5165",{"_index":929,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x8f93;&#x51fa",{"_index":3189,"title":{},"body":{"basic/function.html#关键字-defer":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html#占位符":{}}}],["x8f93;&#x51fa;%",{"_index":4696,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8f93;&#x51fa;%b",{"_index":4676,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8f93;&#x51fa;%p",{"_index":4702,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8f93;&#x51fa;%t",{"_index":4672,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8f93;&#x51fa;%v",{"_index":4662,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8f93;&#x51fa;&#x503c;&#x7684",{"_index":4726,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8f93;&#x51fa;&#x503c;&#x7684;&#x7c7b;&#x578b;&#x7684",{"_index":4729,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8f93;&#x51fa;&#x5185;&#x5bb9;&#x5230;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5e76;&#x8fd4;&#x56d",{"_index":4649,"title":{},"body":{"standards/io/fmt.html#Print":{}}}],["x8f93;&#x51fa;&#x5185;&#x5bb9;&#x5230;&#x6307;&#x5b9a;&#x7684",{"_index":4648,"title":{},"body":{"standards/io/fmt.html#Print":{}}}],["x8f93;&#x51fa;&#x5185;&#x5bb9;&#x5230;&#x6807;&#x51c6;&#x8f93;&#x51fa",{"_index":4647,"title":{},"body":{"standards/io/fmt.html#Print":{}}}],["x8f93;&#x51fa;&#x5185;&#x5bb9;&#x65f6;&#x4f1a;&#x52a0;&#x4e0a;&#x6362;&#x884c;&#x7b26",{"_index":4640,"title":{},"body":{"standards/io/fmt.html#Print":{}}}],["x8f93;&#x51fa;&#x5b57;&#x7b26;&#x4e32;&#x8868;&#x793a;&#xff08;str",{"_index":4697,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["x8f93;&#x51fa;&#x7ed3;&#x679c;&#xff1a",{"_index":5333,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x8f93;&#x51fa;&#xff1a",{"_index":1551,"title":{},"body":{"basic/json.html#序列化":{},"standards/text/strings.html#前缀和后缀":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#计算字符串出现次数":{},"standards/text/strings.html#字符串替换":{},"standards/text/strings.html#重复字符串":{},"standards/text/strings.html#大小写转换":{},"standards/text/strings.html#修改字符串":{},"standards/text/strings.html#JOIN":{},"standards/data/sort.html#数据集合排序":{}}}],["x8fc1;&#x79fb;&#x5230",{"_index":989,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x8fc7",{"_index":4801,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["x8fc7;&#x4efb;&#x4f55;&#x7684;&#x7f13;&#x5b58;&#x6570;&#x636e;&#xff0c;&#x800c;&#x771f;&#x6b63;&#x5730;&#x6267;&#x884c;&#x64cd;&#x4f5c;&#x5e76;&#x91cd;&#x65b0;&#x751f;&#x6210;&#x6240;&#x6709;&#x7ed3;&#x679c;&#xff0c;&#x7136;&#x540e;&#x518d;&#x53bb;&#x68c0;&#x67e5;&#x65b0;&#x7684;&#x7ed3;&#x679c;&#x4e0e;&#x73b0;&#x6709;&#x7684;&#x7f13;&#x5b58;&#x6570;&#x636e;&#x662f;&#x5426;&#x4e00;&#x81f4;&#x3002",{"_index":4174,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x8fc7;&#x6ee4;&#x3002;&#x6587;&#x4ef6;&#x662f;&#x6309;&#x5b57;&#x5178;&#x987a;&#x5e8f;&#x904d;&#x5386;&#x7684;&#xff0c;&#x8fd9;&#x8ba9;&#x8f93;&#x51fa;&#x66f4;&#x6f02;&#x4eae;&#xff0c;&#x4f46;&#x4e5f;&#x5bfc;&#x81f4;&#x5904;&#x7406;&#x975e;&#x5e38;&#x5927;&#x7684;&#x76ee;&#x5f55;&#x65f6;&#x6548;&#x7387;&#x4f1a;&#x964d;&#x4f4e;&#x3002",{"_index":5780,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["x8fc7;&#x7a0b;&#x4e2d;&#x9700;&#x8981;&#x6ce8;&#x610f;&#x7684;&#x51e0;&#x70b9;&#xff1a",{"_index":1415,"title":{},"body":{"basic/map.html#map":{}}}],["x8fd0;&#x7b97;&#x7b26",{"_index":1785,"title":{"basic/operator.html#运算符":{}},"body":{}}],["x8fd0;&#x7b97;&#x7b26;&#x8fdb;&#x884c;&#x6bd4;&#x8f83;&#x3002",{"_index":2055,"title":{},"body":{"basic/struct.html#结构体比较":{}}}],["x8fd0;&#x7b97;&#x7b26;&#xff09;&#x3002",{"_index":1806,"title":{},"body":{"basic/operator.html#逻辑运算符":{}}}],["x8fd0;&#x7b97;&#x7b26;&#xff0c;&#x4e00;&#x4e2a;&#x5de6;&#x5c16;&#x62ec;&#x53f7;&#x7d27;&#x63a5;&#x7740;&#x4e00;&#x4e2a;&#x51cf;&#x53f7;&#x5f62;&#x8c61;&#x5730;&#x4ee3;&#x8868;&#x4e86;&#x5143;&#x7d20;&#x503c;&#x7684;&#x4f20;&#x8f93;&#x65b9;&#x5411;&#xff1a",{"_index":2888,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8fd0;&#x884c",{"_index":2762,"title":{},"body":{"commands/build.html#工具":{},"basic/function.html#关键字-defer":{},"basic/test.html#覆盖率":{},"basic/test.html#功能测试的测试结果":{}}}],["x8fd0;&#x884c;&#x4e00;&#x6b21;&#xff0c",{"_index":6557,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd0;&#x884c;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5",{"_index":4127,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x8fd0;&#x884c;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x9700;&#x8981;&#x4f7f;&#x7528",{"_index":4128,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x8fd0;&#x884c;&#x5b8c;&#x6bd5;&#x4e4b;&#x540e;&#xff0c;&#x518d;&#x8ba9;&#x4e3b",{"_index":6327,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8fd0;&#x884c;&#x5b8c;&#x6bd5;&#xff0c",{"_index":6336,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8fd0;&#x884c;&#x65f6;&#x9519;&#x8bef;&#x4f1a;&#x5f15;&#x8d77",{"_index":631,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8fd0;&#x884c;&#x65f6;&#x95f4;&#x8fc7;&#x957f;&#xff0c;&#x5b83;&#x5c31;&#x4f1a;&#x88ab;&#x5265;&#x593a;&#x8fd0;&#x884c;&#x6743;&#x3002;go",{"_index":6540,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd0;&#x884c;&#xff0c;&#x5982",{"_index":4091,"title":{},"body":{"basic/test.html#测试":{}}}],["x8fd0;&#x884c;&#xff0c;&#x90a3;&#x4e48",{"_index":6581,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd4",{"_index":5454,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x8fd4;&#x56de",{"_index":4940,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#路径的切分和拼接":{},"standards/os/filepath.html#文件路径匹配":{},"standards/os/filepath.html#遍历目录":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/net/http.html#Request":{},"standards/net/http.html#Response":{}}}],["x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":3117,"title":{},"body":{"basic/function.html#声明函数":{},"standards/io/io.html#SectionReader-类型":{},"standards/io/io.html#TeeReader-函数":{}}}],["x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x51fd;&#x6570",{"_index":3164,"title":{},"body":{"basic/function.html#闭包":{}}}],["x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x5e03;&#x5c14;&#x503c;&#x8bf4;&#x660e;&#x8be5;&#x9519;&#x8bef;&#x662f;&#x5426;&#x8868;&#x793a;&#x56e0;&#x6743;&#x9650;&#x4e0d;&#x8db3;&#x8981;&#x6c42;&#x88ab;&#x62d2;&#x7edd;&#x3002",{"_index":7557,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x7528;&#x6765;&#x5904;&#x7406;&#x7ed9;&#x5b9a;&#x8bf7;&#x6c42;&#x7684",{"_index":8948,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x7a7a;&#x5207;&#x7247;&#xff0c;&#x5b83;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x975",{"_index":7676,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x8fd4;&#x56de;&#x4e0b;&#x4e00;&#x4e2a;&#x5143;&#x7d20",{"_index":5288,"title":{},"body":{"standards/data/container.html#环":{}}}],["x8fd4;&#x56de;&#x503c;&#x5217;&#x8868",{"_index":3112,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x8fd4;&#x56de;&#x503c;&#x6ee1;&#x8db3",{"_index":5689,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x8fd4;&#x56de;&#x521d;&#x59cb;&#x5316;&#x540e;&#x7684;&#xff08;&#x975e;&#x96f6;&#xff09;&#x503c;&#xff0c",{"_index":235,"title":{},"body":{"index.html#make-和-new":{}}}],["x8fd4;&#x56de;&#x524d;&#x4e00;&#x4e2a;&#x5143;&#x7d20",{"_index":5289,"title":{},"body":{"standards/data/container.html#环":{}}}],["x8fd4;&#x56de;&#x53c2;&#x6570",{"_index":6122,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x8fd4;&#x56de;&#x591a;&#x4e2a;&#x7c7b;&#x578b;&#x7684;&#x503c",{"_index":3120,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x8fd4;&#x56de;&#x5b57;&#x7b26;&#x4e32",{"_index":5927,"title":{},"body":{"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{}}}],["x8fd4;&#x56de;&#x6307;&#x9488",{"_index":236,"title":{},"body":{"index.html#make-和-new":{}}}],["x8fd4;&#x56de;&#x65b0;&#x7684;&#x504f;&#x79fb;&#x91cf;&#x548c;&#x4e00;&#x4e2a;&#x9519;&#x8bef;&#xff0c;&#x5982;&#x679c;&#x6709;&#x7684;&#x8bdd;&#x3002",{"_index":6915,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["x8fd4;&#x56de;&#x65b0;&#x7684;&#x504f;&#x79fb;&#x91cf;&#xff08;&#x76f8;&#x5bf9;&#x5f00;&#x5934;&#xff09;&#x548c;&#x53ef;&#x80fd;&#x7684;&#x9519;&#x8bef;&#x3002",{"_index":7462,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8fd4;&#x56de;&#x65b0;&#x7684;&#x5b9e;&#x73b0",{"_index":9238,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x8fd4;&#x56de;&#x7684",{"_index":5438,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{},"standards/os/os.html#文件-I-O":{}}}],["x8fd4;&#x56de;&#x7684;&#x4e00;&#x4e2a",{"_index":9230,"title":{},"body":{"standards/data/sort.html#Reverse":{}}}],["x8fd4;&#x56de;&#x7684;&#x6570;&#x636e;&#x4f1a;&#x88ab;&#x4e0b;&#x6b21;&#x7684",{"_index":5443,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x8fd4;&#x56de;&#x7684;&#x662f",{"_index":4949,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x8fd4;&#x56de;&#x7684;&#x672c;&#x8eab;&#x662f;&#x4e2a;&#x5f15;&#x7528;&#xff0c;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x7528;&#x6765;&#x64cd;&#x4f5c",{"_index":1759,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x8fd4;&#x56de;&#x7684;&#x7ed3;&#x679c",{"_index":5457,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x8fd4;&#x56de;&#x7684;&#x7ed3;&#x679c;&#x548c;&#x4e0a;&#x4e00;&#x6b21;&#x8c03",{"_index":6957,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x8fd4;&#x56de;&#x7684;&#x8def;&#x5f84;&#x53ea;&#x6709;&#x5176;&#x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x6839;&#x5730;&#x5740;&#x65f6;&#x624d;&#x4ee5;&#x8def;&#x5f84;&#x5206;&#x9694;&#x7b26;&#x7ed3;&#x5c3e;&#xff0c;&#x5982",{"_index":5721,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["x8fd4;&#x56de;&#x76f8;&#x5e94;&#x7684",{"_index":8816,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8fd4;&#x56de;&#x7b26;&#x5408;&#x6761;&#x4ef6;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#xff0c;&#x5982;&#x679c;&#x6709;&#x5fc5;&#x8981;&#x7684;&#x8bdd;&#xff0c",{"_index":8771,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8fd4;&#x56de;&#x7c7b;&#x578b",{"_index":1218,"title":{},"body":{"basic/oop.html#方法":{},"basic/interface.html#接口":{}}}],["x8fd4;&#x56de;&#x7ed9;&#x8c03;&#x7528;&#x8005;&#x3002",{"_index":715,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x8fd4;&#x56de;&#x8be5;&#x8bf7;&#x6c42;&#x7684;&#x6240;&#x6709",{"_index":8763,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8fd4;&#x56de;&#x8def;&#x5f84;&#x4e2d;&#x9664;&#x53bb;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x8def;&#x5f84;&#x5143;&#x7d20;&#x7684;&#x90e8;&#x5206;&#xff0c;&#x5373;&#x8be5;&#x8def;&#x5f84;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x6240;&#x5728;&#x7684;&#x76ee;&#x5f55;&#x3002;&#x5728;&#x4f7f;&#x7528",{"_index":5630,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["x8fd4;&#x56de;&#x8def;&#x5f84;&#x662f;&#x5426;&#x662f;&#x4e00;&#x4e2a;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#x3002;&#x800c",{"_index":5664,"title":{},"body":{"standards/os/filepath.html#相对路径和绝对路径":{}}}],["x8fd4;&#x56de;&#x8f6c;&#x6362;&#x540e;&#x7684;&#x5e03;&#x5c14;&#x503c",{"_index":4975,"title":{},"body":{"standards/text/strconv.html#字符串和布尔值之间的转换":{}}}],["x8fd4;&#x56de;&#x9519;&#x8bef;&#xff1a",{"_index":7445,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8fd4;&#x56de;&#xff0c",{"_index":6804,"title":{},"body":{"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x8fd8;&#x4f1a;&#x5c06",{"_index":8791,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8fd8;&#x539f;&#x7684;&#x3002",{"_index":4996,"title":{},"body":{"standards/text/strconv.html#字符串和浮点数之间的转换":{}}}],["x8fd8;&#x53ea;&#x662f;&#x5f15;&#x5165;&#x4e86;&#x4e00;&#x4e9b;&#x5f88;&#x521d;&#x7ea7",{"_index":6541,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd8;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x7c7b;&#x4f3c",{"_index":3148,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x8fd8;&#x53ef;&#x4ee5;&#x6307;&#x5b9a",{"_index":9063,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8fd8;&#x53ef;&#x80fd;&#x662f",{"_index":7842,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8fd8;&#x5b9a;&#x4e49;&#x4e86;&#x51e0;&#x4e2a;&#x65b9;&#x6cd5;&#xff0c;&#x7528;&#x4e8e;&#x5224;&#x65ad;&#x6587;&#x4ef6;&#x7c7b;&#x578b;&#x7684",{"_index":7394,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x8fd8;&#x5e26;&#x4e86;&#x4e00;&#x4e2a;&#x989d;&#x5916;&#x7684",{"_index":1575,"title":{},"body":{"basic/json.html#序列化":{}}}],["x8fd8;&#x662f;&#x6765;&#x770b;&#x6e90;&#x4ee3;&#x7801;&#xff1a",{"_index":9023,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8fd8;&#x6709;&#x4e00;&#x4e2a",{"_index":3892,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fd8;&#x672a;&#x6267;&#x884c;&#xff0c",{"_index":8094,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x8fd8;&#x672a;&#x89e6;&#x53d1;&#x65f6;&#x8fd4;&#x56d",{"_index":3572,"title":{},"body":{"standards/time.html#定时器":{}}}],["x8fd8;&#x8bb0;&#x5f97;&#x5417;&#xff1f;&#x6211;&#x4eec;&#x53ef;&#x80fd;&#x4f1a;&#x56e0;&#x4e3a;&#x901a;&#x9053;&#x5173;&#x95ed;&#x4e86;&#xff0c;&#x800c;&#x76f4;&#x63a5;&#x4ece;&#x901a;&#x9053;&#x63a5;&#x6536;&#x5230;&#x4e00;&#x4e2a;&#x5176;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x7684;&#x96f6;&#x503c;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x5728;&#x5f88;&#x591a;&#x65f6;&#x5019;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x901a;&#x8fc7;&#x63a5;&#x6536;&#x8868;&#x8fbe;&#x5f0f",{"_index":3026,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8fd9",{"_index":7911,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8fd9;&#x4e09;&#x4e2a;&#x51fd;&#x6570;&#x7684;&#x533a;&#x522b;&#xff1a",{"_index":7497,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x8fd9;&#x4e0d;&#x4f46;&#x4f1a;&#x8ba9;&#x4f60;&#x7684;&#x7a0b;&#x5e8f;&#x53d8;&#x6162;&#xff0c;&#x8fd8;&#x4f1a;&#x5927;&#x5927;&#x589e;&#x52a0;&#x6b7b;&#x9501;&#xff08",{"_index":7870,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8fd9;&#x4e24;&#x4e2a;&#x3002;&#x5b83;&#x4eec;&#x53ef;&#x4ee5;&#x89e3;&#x6790;&#x6982;&#x8981;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x4fe1;&#x606f;&#xff0c;&#x5e76;&#x4ee5;&#x4eba;&#x7c7b;&#x6613;&#x8bfb;&#x7684;&#x65b9;&#x5f0f;&#x628a;&#x8fd9;&#x4e9b",{"_index":4238,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8fd9;&#x4e24;&#x4e2a;&#x51fd;&#x6570;&#x901a;&#x8fc7;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x53c2;&#x6570",{"_index":5986,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x8fd9;&#x4e24;&#x4e2a;&#x5b57;&#x5178;&#x5728;&#x5b58;&#x50a8;&#x952e;&#x548c;&#x503c;&#x7684;&#x65f6;&#x5019;&#x90fd;&#x53ea;&#x4f1a;&#x5b58;&#x5165;&#x5b83;&#x4eec;&#x7684;&#x67d0;&#x4e2a;&#x6307;&#x9488;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x57fa;&#x672c;&#x503c;&#x3002",{"_index":8380,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8fd9;&#x4e24;&#x4e2a;&#x63a5;&#x53e3;&#x5b9e;&#x73b0;&#x4e86",{"_index":6885,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["x8fd9;&#x4e24;&#x4e2a;&#x6807;&#x8bb0;&#x7684;&#x503c;&#x90fd;&#x662f;&#x6b63;&#x5219;&#x8868;&#x8fbe;&#x5f0f;&#x3002;&#x5b9e;&#x9645;&#x4e0a;&#xff0c;&#x5b83;&#x4eec;&#x53ea;&#x80fd;&#x4ee5;&#x6b63;&#x5219;&#x8868;&#x8fbe;&#x5f0f;&#x4e3a;&#x503c;&#x3002;&#x6b64;&#x5916;&#xff0c;&#x5982;&#x679c;&#x8fd0;&#x884c",{"_index":4184,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x8fd9;&#x4e2a",{"_index":3576,"title":{},"body":{"standards/time.html#定时器":{},"standards/net/http.html#HTTP-Server":{}}}],["x8fd9;&#x4e2a;&#x4f4d;&#x7f6e;&#x4e0a;&#x7684;&#x53c2;&#x6570;&#x5bf9;&#x5e94;&#x7684;&#x90fd;&#x662f;&#x5b83;&#x4eec;&#x5c06;&#x4f1a;&#x4ea7;&#x751f",{"_index":8228,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8fd9;&#x4e2a;&#x5185;&#x5d4c;&#x7c7b;&#x578b;&#xff0c;&#x6211;&#x4eec;&#x4e5f;&#x5fc5;&#x987b;&#x8981;&#x663e;&#x5f0f;&#x4f20;&#x5165",{"_index":1273,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x662f",{"_index":8299,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8fd9;&#x4e2a;&#x51fd;&#x6570;&#xff0c;&#x7528;&#x6765;&#x4ec",{"_index":4806,"title":{},"body":{"standards/io/ioutil.html#ReadAll-函数":{}}}],["x8fd9;&#x4e2a;&#x53c2;&#x6570;&#x7684;&#x542b;&#x4e49;&#x662f;&#xff0c;&#x53ea;&#x8981;&#x53d1;&#x73b0;&#x4e00;&#x4e2a;&#x963b;&#x585e;&#x4e8b;&#x4ef6;&#x7684;&#x6301;&#x7eed;&#x65f6;&#x95f4;&#x8fbe;&#x5230;&#x4e86;&#x591a;&#x5c11;&#x4e2a;&#x7eb3;&#x79d2;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x5bf9;&#x5176;&#x8fdb;&#x884c;&#x91c7;&#x6837;&#x3002;&#x5982;&#x679c;&#x8fd9;&#x4e2a;&#x53c2;&#x6570;&#x7684;&#x503c;&#x5c0f;&#x4e8e;&#x6216;&#x7b49;&#x4e8e;0&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x610f",{"_index":4288,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8fd9;&#x4e2a;&#x53d8;&#x91cf;&#x7684;&#x542b;&#x4e49;&#x662f;&#xff0c;&#x5e73;&#x5747;&#x6bcf;&#x5206;&#x914d;&#x591a;&#x5c11;&#x4e2a;&#x5b57;&#x8282;&#xff0c;&#x5c31;&#x5bf9;&#x5806;&#x5185;&#x5b58;&#x7684;&#x4f7f;&#x7528;&#x60c5;&#x51b5;&#x8fdb;&#x884c;&#x4e00;&#x6b21;&#x91c7;&#x6837;&#x3002;&#x5982;&#x679c;&#x628a;&#x8be5;&#x53d8;&#x91cf;&#x7684;&#x503c;&#x8bbe;&#x4e3a;0&#xff0c;&#x90a3;&#x4e48;&#xff0c;go",{"_index":4266,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8fd9;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x4e86;&#x3002;&#x6ca1;&#x9519;&#xff0c;&#x8fd9;&#x662f;&#x56fa;&#x5b9a;&#x5199;&#x6cd5;&#xff0c;&#x7c7b;&#x4f3c;&#x4e8e;&#x5176;&#x4ed6;&#x8bed;&#x8a00;&#x4e2d",{"_index":3510,"title":{},"body":{"standards/time.html#Time":{}}}],["x8fd9;&#x4e2a;&#x5e8f;&#x53f7;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x542f;&#x7528",{"_index":6388,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8fd9;&#x4e2a;&#x6307;&#x9488;&#x4fdd;&#x5b58;&#x4e86;&#x53d8;&#x91cf",{"_index":1686,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x8fd9;&#x4e2a;&#x63a5;&#x53e3;&#x5185;&#x5d4c;&#x4e86",{"_index":5301,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x8fd9;&#x4e2a;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#xff0c;&#x5e76;&#x4e14;&#x4ec5;&#x5b9e;&#x73b0;&#x67d0;&#x4e2a;&#x6307;&#x5b9a;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x800c;&#x4e0d;&#x9700;&#x8981;&#x5b9e;&#x73b0;&#x8fd9;&#x4e2a;&#x63a5;&#x53e3;&#x4e0b;&#x7684;&#x6240;&#x6709;&#x65b9;&#x6cd5",{"_index":2097,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x8fd9;&#x4e2a;&#x65b9;&#x6cd5;&#x800c",{"_index":8822,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8fd9;&#x4e2a;&#x65f6;&#x5019;&#x4f53;&#x73b0;&#x51fa;&#x4e86;&#x63a5;&#x53e3;&#x7684;&#x4f5c;&#x7528;&#xff0c",{"_index":2377,"title":{},"body":{"basic/interface.html#接口":{}}}],["x8fd9;&#x4e2a;&#x65f6;&#x5019;&#xff0c;&#x8fd9;&#x4e9b;&#x5305;&#x542b;&#x4e86",{"_index":4224,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x8fd9;&#x4e2a;&#x6e90;&#x7801;&#x91cc;&#x9762;&#x3002",{"_index":5114,"title":{},"body":{"standards/text/unicode.html#unicode-包":{}}}],["x8fd9;&#x4e2a;&#x70b9;&#x64cd;&#x4f5c;&#x7684;&#x542b;&#x4e49;&#x5c31;&#x662f;&#x8fd9;&#x4e2a;&#x5305;&#x5bfc;&#x5165;&#x4e4b;&#x540e;&#x5728;&#x4f60;&#x8c03;&#x7528;&#x8fd9;&#x4e2a;&#x5305;&#x7684;&#x51fd;&#x6570;&#x65f6;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x7701;&#x7565;&#x524d;&#x7f00;&#x7684;&#x5305;&#x540d;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x524d;&#x9762;&#x4f60;&#x8c03;&#x7528;&#x7684",{"_index":2166,"title":{},"body":{"basic/package.html#点操作":{}}}],["x8fd9;&#x4e2a;&#x7c7b;&#x578b;&#x7684",{"_index":8293,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8fd9;&#x4e2a;&#x7c7b;&#x578b;&#x7684;&#x4f5c;&#x7528;&#x662f;&#xff1a;&#x65b9;&#x4fbf;&#x91cd;&#x590d;&#x64cd;&#x4f5c;&#x67d0;&#x4e00;&#x6bb5",{"_index":6995,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["x8fd9;&#x4e2a;&#x9501;&#x3002",{"_index":7824,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8fd9;&#x4e2a;&#x961f;&#x5217;&#x4e0e;&#x8be5",{"_index":3202,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8fd9;&#x4e5f;&#x662f",{"_index":362,"title":{},"body":{"index.html#编码":{}}}],["x8fd9;&#x4e9b;&#x51fd;&#x6570;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x90fd;&#x662f",{"_index":8225,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8fd9;&#x4e9b;&#x51fd;&#x6570;&#x9488;&#x5bf9;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x5e76;&#x4e0d;&#x591a;&#x3002;&#x5bf9;&#x8fd9;&#x4e9b;&#x7c7b;&#x578b;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#xff0c",{"_index":8000,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x8fd9;&#x4e9b;&#x53d8;&#x91cf;&#x7684;&#x5177;&#x4f53;&#x7c7b;&#x578b;&#x3002;&#x5f25;&#x8865;&#x4e86;&#x9759;&#x6001;&#x8bed;&#x8a00;&#x5728;&#x52a8;&#x6001;&#x884c;&#x4e3a;&#x4e0a;&#x7684;&#x4e00;&#x4e9b;&#x4e0d;&#x8db3;&#x3002",{"_index":5028,"title":{},"body":{"basic/reflect.html#反射":{}}}],["x8fd9;&#x4e9b;&#x5b57;&#x6bb5;&#x7528;&#x4e8e;&#x8bb0;&#x5f55;&#xff1a;&#x5f53;&#x524d;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x5728;&#x5f53;&#x6b21;&#x6267;&#x884c;&#x8fc7;&#x7a0b;&#x4e2d;&#x8017;&#x8d39;&#x7684;&#x65f6;&#x95f4;&#x3001;&#x5206;&#x914d;&#x7684;&#x5806;&#x5185;&#x5b58;&#x7684;&#x5b57;&#x8282;&#x6570;&#x4ee5;&#x53ca;&#x5206;&#x914d;&#x6b21;&#x6570;&#x3002",{"_index":4232,"title":{},"body":{"basic/test.html#性能测试函数中的计时器":{}}}],["x8fd9;&#x4e9b;&#x63a5;&#x53e3;&#x662f;&#x4e0a;&#x9762;&#x4ecb;&#x7ecd;&#x7684;&#x63a5;&#x53e3;&#x7684;&#x4e24;&#x4e2a;&#x6216;&#x4e09;&#x4e2a;&#x7ec4;&#x5408;&#x800c;&#x6210;&#x7684;&#x65b0;&#x63a5;&#x53e3;&#x3002",{"_index":6972,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x8fd9;&#x4e9b;&#x63a5;&#x53e3;&#x7684;&#x4f5c;&#x7528;&#x662f;&#xff1a;&#x6709;&#x4e9b;&#x65f6;&#x5019;&#x540c;&#x65f6;&#x9700;&#x8981;&#x67d0;&#x4e24;&#x4e2a;&#x63a5;&#x53e3;&#x7684;&#x6240;&#x6709;&#x529f;&#x80fd;&#xff0c;&#x5373;&#x5fc5;&#x987b;&#x540c;&#x65f6;&#x5b9e;&#x73b0;&#x4e86;&#x67d0;&#x4e24;&#x4e2a;&#x63a5;&#x53e3;&#x7684;&#x7c7b;&#x578b;&#x624d;&#x80fd;&#x591f;&#x88ab;&#x4f20;&#x5165;&#x4f7f;&#x7528;&#x3002",{"_index":6974,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x8fd9;&#x4e9b;&#x952e;&#x503c;&#x7684;&#x5b9e;&#x9645;&#x7c7b;&#x578b;&#x53ea;&#x6709;&#x5728;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x671f;&#x95f4;&#x624d;&#x80fd;&#x591f;&#x786e;&#x5b9a;&#xff0c;&#x6240;&#x4ee5",{"_index":8343,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8fd9;&#x53eb;&#x505a",{"_index":1411,"title":{},"body":{"basic/map.html#map":{}}}],["x8fd9;&#x53ef;&#x4ee5;&#x7528;&#x4e8e;&#x8861;&#x91cf;&#x54ea;&#x4e9b;&#x662f;&#x88ab;&#x9891;&#x7e41;&#x6267;&#x884c;&#x7684;&#x70ed;&#x70b9;&#x4ee3;&#x7801;&#x3002",{"_index":4122,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["x8fd9;&#x5728;&#x6548;&#x679c;&#x4e0a;&#x4e0e;&#x4e92;&#x65a5;&#x9501;&#x6709;&#x4e9b;&#x7c7b;&#x4f3c;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x5b83;&#x4eec;&#x7684;&#x9002;&#x7528;&#x573a;&#x666f;&#x662f;&#x4e0d;&#x540c;&#x7684;&#x3002;&#x6211;&#x4eec;&#x5728;&#x4f7f;&#x7528;&#x4e92;&#x65a5;&#x9501;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x603b;&#x662f;&#x5047;&#x8bbe;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#x4f1a;&#x88ab;&#x5176;&#x4ed6",{"_index":8029,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x8fd9;&#x5957;&#x673a;&#x5236;&#xff0c;&#x5373;&#x4fbf;&#x6709",{"_index":6414,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd9;&#x65f6;&#x5019;&#xff0c;&#x88ab;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x4e5f;&#x5c31;&#x81ea;&#x7136;&#x800c;&#x7136;&#x5730;&#x5b9e;&#x73b0;&#x4e86;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x6240;&#x5b9e;&#x73b0;&#x7684;&#x63a5;&#x53e3;&#x3002;&#x518d;&#x8005;&#xff0c;&#x7ec4;&#x5408;&#x8981;&#x6bd4;&#x7ee7;&#x627f;&#x66f4;&#x52a0;&#x7b80;&#x6d01;&#x548c;&#x6e05;&#x6670;&#xff0c;go",{"_index":1283,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x8fd9;&#x662f;&#x4e3a;&#x4e86;&#x65b9;&#x4fbf;&#x5199;&#x5165",{"_index":7097,"title":{},"body":{"standards/io/io.html#WriteString-函数":{}}}],["x8fd9;&#x662f;&#x4f5c;&#x4e3a",{"_index":2871,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8fd9;&#x6837;&#x5c31;&#x53ef;&#x4ee5;&#x5728;&#x4efb;&#x610f;&#x76ee;&#x5f55;&#x6267;&#x884c;&#x7f16;&#x8bd1;&#x597d;&#x7684;&#x547d;&#x4ee4;&#x3002",{"_index":2769,"title":{},"body":{"commands/build.html#工具":{}}}],["x8fd9;&#x6837;&#x5c31;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x7b80;&#x5355;&#x7684;&#x70b9;&#x8fd0;&#x7b97;&#x7b26",{"_index":2059,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x8fd9;&#x6837;&#x7684",{"_index":1127,"title":{},"body":{"basic/flow.html#for":{}}}],["x8fd9;&#x6837;&#x7684;&#x5206;&#x6570;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x65e0;&#x7406;&#x6570;&#x6216",{"_index":4365,"title":{},"body":{"standards/data/big.html#big":{}}}],["x8fd9;&#x6837;&#x7684;&#x590d;&#x7528;&#x9884;&#x8ba1;&#x53ef;&#x4ee5;&#x81f3;&#x5c11;&#x8282;&#x7701;&#x6389;&#x4e00;&#x6b21;&#x540e;&#x7eed;&#x7684;&#x6269;&#x5bb9;&#x6240;&#x5e26;&#x6765;&#x7684;&#x5185;&#x5b58;&#x5206;&#x914d;&#xff0c;&#x4ee5;&#x53ca;&#x82e5;&#x5e72;&#x5b57;&#x8282;&#x7684;&#x62f7;&#x8d1d;&#x3002",{"_index":3912,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fd9;&#x6837;&#x7684;&#x65b9;&#x6cd5;&#x3002;&#x5b83;&#x4eec;&#x4f5c;&#x7528",{"_index":4377,"title":{},"body":{"standards/data/big.html#big":{}}}],["x8fd9;&#x6837;&#x7684;&#x7b2c;&#x4e09;&#x65b9;&#x5e93;&#x5e2e;&#x5fd9;&#xff0c;&#x5199;&#x8d77;&#x8fd9;&#x6837;&#x7684;&#x7a0b;&#x5e8f;&#x4e5f;&#x662f;&#x5f88;&#x4e0d;&#x6613;&#x7684",{"_index":6415,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd9;&#x6bb5;&#x4ee3;&#x7801;&#x7684;&#x7ed3;&#x679c;&#x8ddf;&#x9884;&#x671f;&#x7684;&#x4e0d;&#x4e00;&#x6837;&#x3002;&#x539f;&#x56e0;&#x662f",{"_index":3500,"title":{},"body":{"standards/time.html#Time":{}}}],["x8fd9;&#x6bb5;&#x7a0b;&#x5e8f;&#x6267;&#x884c;&#x540e;&#x5728;&#x751f;&#x6210",{"_index":7124,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["x8fd9;&#x76f8;&#x5f53;&#x4e8e;&#x81ea;&#x8eab;&#x7684;&#x8c03;&#x7528",{"_index":8996,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8fd9;&#x79cd;&#x529f;&#x80fd;&#x7684;&#x5b9e;&#x73b0;&#x5176;&#x5b9e;&#x633a;&#x7b80;&#x5355;&#xff0c;&#x65e0;&#x975e;&#x662f;&#x5728",{"_index":7137,"title":{},"body":{"standards/io/io.html#TeeReader-函数":{}}}],["x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4f1a;&#x5728;&#x91cd;&#x5efa;&#x810f;&#x5b57;&#x5178;&#x4ee5;&#x540e;&#x7684;&#x4e00;&#x6bb5;&#x65f6;&#x95f4;&#x5185;&#x51fa;&#x73b0;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8fc7;&#x4e0d;&#x4e86;&#x591a;&#x4e45;&#xff0c;&#x5b83;&#x4eec;&#x5c31;&#x4f1a;&#x88ab;&#x771f;&#x6b63;&#x5220;&#x9664;&#x6389;&#x3002;&#x5728;&#x67e5;&#x627e;&#x548c;&#x904d;&#x5386;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5df2;&#x88ab;&#x903b",{"_index":8390,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x662f;&#x5f88;&#x6709;&#x53ef;&#x80fd;&#x53d1;&#x751f;&#x7684;&#x3002",{"_index":7981,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8fd9;&#x79cd;&#x65b9;&#x5f0f;&#x5f15;&#x5165;&#x9a71;&#x52a8;&#x5305;&#x3002;&#x7b2c;&#x4e8c;&#x4e2a;&#x53c2;&#x6570;&#x662f",{"_index":4477,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x8fd9;&#x79cd;&#x65b9;&#x5f0f;&#x6539;&#x53d8;&#x5b57;&#x7b26;&#x4e32",{"_index":3740,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fd9;&#x79cd;&#x673a;&#x5236;&#xff0c",{"_index":792,"title":{},"body":{"basic/array.html#数组传入函数":{}}}],["x8fd9;&#x79cd;&#x7c7b;&#x578b;&#x8f6c;&#x6362;&#x4e3b;&#x8981;&#x5728",{"_index":255,"title":{},"body":{"index.html#类型转换":{}}}],["x8fd9;&#x79cd;&#x7ed3;&#x679c;&#xff0c;&#x5728;&#x4e00;&#x4e2a",{"_index":7844,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8fd9;&#x8868;&#x793a;&#x6240;&#x6709;&#x7684",{"_index":8757,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x8fd9;&#x91cc",{"_index":2142,"title":{},"body":{"basic/package.html#包":{}}}],["x8fd9;&#x91cc;&#x4e4b;&#x6240;&#x4ee5;&#x7528;&#x5faa;&#x73af;&#xff0c;&#x662f;&#x56e0;&#x4e3a;&#x6211;&#x4eec;&#x6ca1;&#x6cd5;&#x77e5;&#x9053;&#x6587;&#x4ef6;&#x7684;&#x8def;&#x5f84;&#x5230;&#x5e95;&#x591a;&#x957f;&#xff0c;&#x5982;&#x679c",{"_index":7625,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x8fd9;&#x91cc;&#x4ecb;&#x7ecd;&#x662f;&#x5e94;&#x7528;&#x4e8e;&#x6587;&#x4ef6;&#x548c;&#x76ee;&#x5f55;&#x7684;&#x6743;&#x9650;&#x65b9;&#x6848;&#xff0c;&#x5c3d;&#x7ba1;&#x6b64;&#x5904;&#x8ba8;&#x8bba;&#x7684;&#x6743;&#x9650;&#x4e3b;&#x8981;&#x662f;&#x9488;&#x5bf9;&#x666e;&#x901a;&#x6587;&#x4ef6;&#x548c;&#x76ee;&#x5f55;&#xff0c;&#x4f46;&#x5176;&#x89c4;&#x5219;&#x53ef;&#x9002;&#x7528;&#x4e8e;&#x6240;&#x6709;&#x6587;&#x4ef6;&#x7c7b;&#x578b;&#xff0c;&#x5305;&#x62ec;&#x8bbe;&#x5907;&#x6587;&#x4ef6;&#x3001;fifo",{"_index":7551,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["x8fd9;&#x91cc;&#x4f1a;&#x5f15;&#x53d1",{"_index":1451,"title":{},"body":{"basic/map.html#map":{}}}],["x8fd9;&#x91cc;&#x5206;&#x53d1;&#x5b50;&#x4efb;&#x52a1;&#x7684",{"_index":8195,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8fd9;&#x91cc;&#x5c31;&#x5f00;&#x59cb;&#x5904;&#x7406",{"_index":9029,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8fd9;&#x91cc;&#x628a",{"_index":5468,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x8fd9;&#x91cc;&#x7528;&#x7684;&#x662f;&#x5c0f;&#x4e8e;&#x53f7;&#xff0c;&#x751f;&#x6210;&#x7684;&#x662f;&#x6700;&#x5c0f;&#x5806",{"_index":5317,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x8fd9;&#x91cc;&#x7684",{"_index":1224,"title":{},"body":{"basic/oop.html#方法":{}}}],["x8fd9;&#x91cc;&#x7684;&#x6700;&#x5916;&#x5c42;&#x51fd;&#x6570;&#x6307;&#x7684;&#x662f;go&#x51fd;&#x6570;&#xff0c;&#x5bf9;&#x4e8e;&#x4e3b",{"_index":678,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8fd9;&#x91cc;&#x7684;&#x81ea;&#x52a8;&#x6269;&#x5bb9;&#x7b56;&#x7565;&#x4e0e;&#x5207;&#x7247;&#x7684;&#x6269;&#x5bb9;&#x7b56;&#x7565;&#x4e00;&#x81f4;&#x3002",{"_index":3824,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fd9;&#x91cc;&#x9700;&#x8981",{"_index":4838,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["x8fd9;&#x9700;&#x8981;&#x4ece",{"_index":8242,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8fd9;&#x9700;&#x8981;&#x7528;&#x5230",{"_index":4257,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8fdb;&#x5236;&#x3002",{"_index":4922,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x8fdb;&#x5236;&#xff0c;&#x53d6;&#x503c;&#x4e3a",{"_index":4914,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x8fdb;&#x5236;&#xff1b",{"_index":4919,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x8fdb;&#x5236;&#xff1b;&#x5426;&#x5219;&#x5c31;&#x662f",{"_index":4921,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x8fdb;&#x7a0b",{"_index":6179,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x8fdb;&#x884c",{"_index":2439,"title":{},"body":{"basic/var.html#赋值":{},"standards/data/container.html#环":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fdb;&#x884c;&#x201c;&#x8c03;&#x5ea6;&#x201d;&#x3002;&#x8c03;&#x5ea6;&#x672c;&#x8d28;&#x4e0a;&#x5c31;&#x662f;&#x51b3;&#x5b9a;&#x4f55;&#x65f6;&#x54ea;&#x4e2a",{"_index":6403,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fdb;&#x884c;&#x5206;&#x5272;&#xff0c;&#x8fd4;&#x56de",{"_index":5979,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["x8fdb;&#x884c;&#x521d;&#x59cb;&#x5316;&#xff0c;&#x751f;&#x6210;&#x5c0f;&#x6839;&#x5806;&#xff08;&#x6216;&#x5927;&#x6839;&#x5806;&#xff09",{"_index":5306,"title":{},"body":{"standards/data/container.html#堆":{}}}],["x8fdb;&#x884c;&#x5904;&#x7406",{"_index":9028,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x8fdb;&#x884c;&#x5b57;&#x7b26;&#x4e32;&#x62fc;&#x63a5;&#x7684;&#x65f6;&#x5019;&#xff0c;go",{"_index":3795,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fdb;&#x884c;&#x5b57;&#x7b26;&#x4e32;&#x6bd4;&#x8f83;&#x3002",{"_index":3765,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fdb;&#x884c;&#x6309;&#x4f4d;&#x6216;&#x64cd;&#x4f5c;&#x5f97;&#x5230;&#x7684;&#x7ed3;&#x679c;&#x662f",{"_index":1098,"title":{},"body":{"basic/flow.html#for":{}}}],["x8fdb;&#x884c;&#x6392;&#x5e8f;&#x3002",{"_index":9303,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["x8fdb;&#x884c;&#x63cf;&#x8ff0;&#x3002;&#x56e0;&#x6b64;&#xff0c;&#x4fee;&#x6539",{"_index":1753,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x8fdb;&#x884c;&#x6bd4;&#x8f83;&#x3002",{"_index":1803,"title":{},"body":{"basic/operator.html#关系运算符":{}}}],["x8fdb;&#x884c;&#x8f6c;&#x6362",{"_index":5144,"title":{},"body":{"standards/text/unicode.html#2-5-3-utf16-包":{}}}],["x8fdb;&#x884c;&#x914d;&#x7f6e;&#xff0c;&#x7136;&#x540e;&#x518d;&#x4f7f;&#x7528",{"_index":8893,"title":{},"body":{"standards/net/http.html#client":{}}}],["x8fde;&#x63a5;&#x5230",{"_index":7032,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["x8fde;&#x63a5;&#x6c60;&#x7684;&#x5de5;&#x4f5c;&#x539f;&#x7406",{"_index":4480,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x8fde;&#x63a5;&#x6c60;&#x7684;&#x5de5;&#x4f5c;&#x65b9;&#x5f0f;&#xff1a;&#x5f53;&#x8c03;&#x7528;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#xff0c;&#x9700;&#x8981;&#x8bbf;&#x95ee;&#x6570;&#x636e;&#x5e93;&#x65f6;&#xff0c;&#x8be5;&#x51fd;&#x6570;&#x4f1a;&#x8bf7;&#x6c42;&#x4ece;&#x8fde;&#x63a5;&#x6c60;&#x4e2d;&#x83b7;&#x53d6;&#x4e00;&#x4e2a;&#x8fde;&#x63a5;&#xff0c;&#x5982;&#x679c;&#x8fde;&#x63a5;&#x6c60;&#x4e2d;&#x5b58;&#x5728;&#x4e00;&#x4e2a;&#x7a7a;&#x95f2;&#x8fde;&#x63a5;&#xff0c;&#x5b83;&#x4f1a;&#x5c06;&#x8be5;&#x7a7a;&#x95f2;&#x8fde;&#x63a5;&#x7ed9",{"_index":4485,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x8fde;&#x63a5;&#x8d77;&#x6765;&#xff1b",{"_index":5915,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x8ffd;&#x52a0;&#x5230;&#x67d0;&#x4e2a;&#x5b58;&#x653e;&#x53ef;&#x8fd0;&#x884c;&#x7684",{"_index":6280,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x9000;&#x51fa;&#x5d4c;&#x5957;&#x5faa;&#x73af;&#xff1a",{"_index":3041,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9002;&#x65f6;&#x5730;&#x4e0e",{"_index":6241,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x9009;&#x62e9;&#x7528;&#x7b80;&#x77ed;&#x540d;&#x79f0;&#x91cd;&#x547d;&#x540d;&#x5bfc;&#x5165;&#x5305;&#x65f6;&#x5019;&#x6700;&#x597d;&#x7edf;&#x4e00;&#xff0c;&#x4ee5;&#x907f;&#x514d;&#x5305;&#x540d;&#x6df7;&#x4e71;&#x3002",{"_index":2176,"title":{},"body":{"basic/package.html#点操作":{}}}],["x9009;&#x9879;&#xff0c;&#x8868;&#x793a;&#x5f53",{"_index":1576,"title":{},"body":{"basic/json.html#序列化":{}}}],["x901a;&#x5e38;&#x4e00;&#x884c;&#x5bf9;&#x5e94;&#x4e00;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x6210;&#x5458;&#xff0c;&#x6210;&#x5458;&#x7684;&#x540d;&#x5b57;&#x5728;&#x524d;&#x7c7b;&#x578b;&#x5728;&#x540e;&#xff0c;&#x4e0d;&#x8fc7;&#x5982;&#x679c;&#x76f8;&#x90bb;&#x7684;&#x6210;&#x5458;&#x7c7b;&#x578b;&#x5982;&#x679c;&#x76f8;&#x540c;&#x7684;&#x8bdd;&#x53ef;&#x4ee5;&#x88ab;&#x5408;&#x5e76;&#x5230;&#x4e00;&#x884c",{"_index":2045,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x901a;&#x5e38;&#x60c5;&#x51b5;&#x4e0b;&#x5e94;&#x8be5;&#x603b;&#x662f;&#x4f7f;&#x7528",{"_index":5613,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["x901a;&#x5e38;&#x60c5;&#x51b5;&#x4e0b;&#xff0c",{"_index":4453,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x901a;&#x5e38;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x53ea;&#x8981;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x7684;&#x53ef;&#x5199;&#x7a7a;&#x95f4;&#x65e0;&#x6cd5;&#x5bb9;&#x7eb3;&#x9700;&#x8981;&#x5199;&#x5165;&#x7684;&#x65b0;&#x6570;&#x636e;&#xff0c",{"_index":5548,"title":{},"body":{"standards/io/bufio.html#bufio-Writer":{}}}],["x901a;&#x5e38;&#x88ab;&#x547d;&#x540d;&#x4e3a",{"_index":3169,"title":{},"body":{"basic/function.html#错误":{}}}],["x901a;&#x5e38;&#xff0c;&#x4e0d;&#x4f1a;&#x53bb;&#x68c0;&#x67e5",{"_index":7448,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x901a;&#x8baf",{"_index":174,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x901a;&#x8fc7",{"_index":2478,"title":{},"body":{"standards/log.html#Logger":{},"concurrent/channel.html#channel":{},"standards/time.html#Time":{},"standards/time.html#定时器":{},"standards/database/sql.html#sql-DB-的使用":{},"standards/io/io.html#其他接口":{},"standards/net/http.html#HTTP-Server":{}}}],["x901a;&#x8fc7;&#x5207;&#x7247;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x8bbf;&#x95ee;&#x548c;&#x64cd;&#x7eb5;&#x5b83;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x3002;&#x4e0d;&#x8bba;&#x8fd9;&#x4e2a;&#x5207;&#x7247;&#x662f;&#x57fa;&#x4e8e;&#x67d0;&#x4e2a;&#x6570;&#x7ec4;&#x5f97;&#x6765;&#x7684;&#xff0c;&#x8fd8;&#x662f;&#x901a;&#x8fc7;&#x5bf9;&#x53e6;&#x4e00;&#x4e2a;&#x5207;&#x7247;&#x505a;&#x5207;&#x7247;&#x64cd;&#x4f5c",{"_index":3926,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x901a;&#x8fc7;&#x5728",{"_index":3031,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x901a;&#x8fc7;&#x5b9a;&#x4e49;&#x5408;&#x9002;&#x7684;go&#x8bed;&#x8a00;&#x6570;&#x636e;&#x7ed3;&#x6784;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x9009;&#x62e9;&#x6027;&#x5730;&#x89e3;&#x7801;json&#x4e2d;&#x611f;&#x5174;&#x8da3;&#x7684;&#x6210;&#x5458;&#x3002",{"_index":1585,"title":{},"body":{"basic/json.html#序列化":{}}}],["x901a;&#x8fc7;&#x6307;&#x9488;&#x95f4;&#x63a5;&#x8d4b;&#x503c",{"_index":2427,"title":{},"body":{"basic/var.html#赋值":{}}}],["x901a;&#x8fc7;&#x67d0;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x5c06",{"_index":5914,"title":{},"body":{"standards/text/strings.html#strings":{}}}],["x901a;&#x8fc7;&#x7d22;&#x5f15;&#x4e0b;&#x6807",{"_index":1407,"title":{},"body":{"basic/map.html#map":{}}}],["x901a;&#x8fc7;&#x8be5;&#x7c7b;&#x578b;&#x53ef;&#x4ee5;&#x8fbe;&#x5230",{"_index":7007,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":2211,"title":{},"body":{"basic/package.html#初始化包":{},"standards/io/bufio.html#ReadWriter":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x901a;&#x8fc7;&#x8fd9;&#x79cd;&#x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x8ba9",{"_index":2095,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x901a;&#x9053;&#x662f;&#x5426;&#x5df2;&#x5173;&#x95ed;&#x505a;&#x4e86;&#x5224;&#x65ad;&#xff0c;&#x5e76;&#x5728",{"_index":3044,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x901a;&#x9053;&#x7684;&#x53d1;&#x9001;&#x548c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x7684;&#x7279;&#x6027",{"_index":2962,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x901a;&#x9053;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x662f",{"_index":2873,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x903b;&#x8f91;&#x8fd0;&#x7b97;&#x7b26",{"_index":1804,"title":{"basic/operator.html#逻辑运算符":{}},"body":{}}],["x9047;&#x5230;&#x9700;&#x8981;&#x5c06;&#x5b57;&#x7b26;&#x4e32;&#x548c;&#x6574;&#x578b;&#x8fde;&#x63a5;&#x8d77;&#x6765;&#xff0c;&#x5728",{"_index":4954,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x904d;&#x5386",{"_index":1437,"title":{},"body":{"basic/map.html#map":{}}}],["x904d;&#x5386;&#x73af;&#x5f62;&#x94fe;&#x8868;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#x5143;&#x7d20",{"_index":5272,"title":{},"body":{"standards/data/container.html#环":{}}}],["x904d;&#x5386;&#x76ee;&#x5f55",{"_index":5772,"title":{"standards/os/filepath.html#遍历目录":{}},"body":{}}],["x9053;&#x5173;&#x95ed;&#x662f;&#x4e0d;&#x4f1a;&#x7ed3;&#x675f;&#x8bfb;&#x53d6;&#x7684;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x5982;&#x679c",{"_index":2916,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9053;&#x7684;&#x4efb;&#x610f;&#x4e2a;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x4e2d;&#x7684;&#x67d0;&#x4e00;&#x4e2a;&#x3002;&#x76f4;&#x5230;&#x8fd9;&#x4e2a;&#x5143;&#x7d20;&#x503c;&#x88ab;&#x5b8c;&#x5168;&#x590d;&#x5236;&#x8fdb;&#x8be5;&#x901a;&#x9053;&#x4e4b;&#x540e;&#xff0c;&#x5176;&#x4ed6;&#x9488;&#x5bf9;&#x8be5;&#x901a;&#x9053;&#x7684;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x624d;&#x53ef;&#x80fd;&#x88ab;&#x6267;&#x884c;&#x3002",{"_index":2965,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x907f;&#x514d;&#x4ece;&#x591a;&#x4e2a",{"_index":7807,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x907f;&#x514d;&#x590d;&#x5236;&#x64cd;&#x4f5c",{"_index":1727,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x907f;&#x514d;&#x6570;&#x636e;&#x7ade;&#x4e89;&#x7684;&#x4e09;&#x79cd;&#x65b9;&#x5f0f;&#xff1a",{"_index":7805,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x90a3;&#x4e2a;&#x4f5c;&#x4e3a;&#x7a0b;&#x5e8f;&#x5165;&#x53e3;&#x7684",{"_index":6261,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x90a3;&#x4e3a;&#x4ec0;&#x4e48;&#x8981;&#x505a;&#x591a;&#x6b21;&#x68c0;&#x67e5;&#x5462;&#xff1f",{"_index":7976,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x90a3;&#x4e48;&#x4e5f;&#x5c31;&#x53ef;&#x4ee5;&#x8fd4;&#x56de;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x3002",{"_index":2342,"title":{},"body":{"basic/interface.html#接口":{}}}],["x90a3;&#x4e48;&#x53c8;&#x7531;&#x8c01;&#x6765;&#x89e3;&#x9501;&#x5462;&#xff1f;&#x522b;&#x7684",{"_index":7954,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x90a3;&#x4e48;&#x5728",{"_index":2218,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x90a3;&#x4e48;&#x5b83;&#x53ea;&#x4f1a;&#x88ab;&#x5bfc;&#x5165;&#x4e00;&#x6b21;&#xff08;&#x4f8b;&#x5982;&#x5f88;&#x591a;&#x5305;&#x53ef;&#x80fd;&#x90fd;&#x4f1a;&#x7528;&#x5230",{"_index":2235,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x90a3;&#x4e48;&#x5bf9;&#x5b83;&#x7684;&#x6240;&#x6709;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x90fd;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x901a;&#x9053;&#x4e2d;&#x6709;&#x65b0;&#x7684;&#x5143;&#x7d20;&#x503c;&#x51fa;&#x73b0;&#x3002;&#x8fd9;&#x65f6;&#xff0c;&#x901a;&#x9053;&#x4f1a;&#x901a;&#x77e5;&#x6700;&#x65e9;&#x7b49;&#x5f85;&#x7684;&#x90a3;&#x4e2a;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x6240;&#x5728;&#x7684",{"_index":2976,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x90a3;&#x4e48;&#x5c31;&#x4f1a;&#x4f7f;&#x5b83;&#x6267;&#x884c;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002",{"_index":4187,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x90a3;&#x4e48;&#x5c31;&#x4f1a;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0",{"_index":6604,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x90a3;&#x4e48;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x4e2d;&#x7684;&#x90a3;&#x4e2a;&#x5b57;&#x6bb5;&#x4e00;&#x5b9a;&#x4f1a;&#x88ab;&#x201c;&#x5c4f;&#x853d;&#x201d",{"_index":2107,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x90a3;&#x4e48;&#x8fd9;&#x4e2a;&#x65b9;&#x6cd5;&#x5c31;&#x4f1a;&#x4f7f;&#x7528;&#x5f53;&#x524d;&#x6c60;&#x7684",{"_index":8295,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x90a3;&#x4e48;&#xff0c;&#x600e;&#x6837;&#x624d;&#x80fd;&#x505a;&#x5230;&#x7b49;&#x5176;&#x4ed6;&#x7684",{"_index":6326,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x90a3;&#x4e48;&#xff0c;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#x5c31;&#x4f1a;&#x590d;&#x7528;&#x73b0;&#x6709;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff0c;&#x5e76;&#x628a;&#x5bb9;&#x5668;&#x4e2d;&#x7684;&#x672a;&#x8bfb;&#x5185;&#x5bb9;&#x62f7;&#x8d1d;&#x5230;&#x5b83;&#x7684;&#x5934;&#x90e8;&#x4f4d;&#x7f6e;&#x3002;&#x8fd9;&#x4e5f;&#x610f;&#x5473;&#x7740;&#x5176;&#x4e2d;&#x7684;&#x5df2;&#x8bfb;&#x5185;&#x5bb9;&#xff0c;&#x5c06;&#x4f1a;&#x5168;&#x90e8;&#x88ab;&#x672a;&#x8bfb;&#x5185;&#x5bb9;&#x548c",{"_index":3910,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x90a3;&#x4e48;&#xff0c;&#x8fd9;&#x4e24;&#x79cd;&#x65b9;&#x5f0f;&#x6211;&#x4eec;&#x8be5;&#x600e;&#x4e48;&#x9009;&#x62e9;&#x5462;&#xff1f;&#x6211;&#x4eec;&#x4e3b;&#x8981;&#x6765;&#x8003;&#x5bdf;&#x4e00;&#x4e0b;&#x6027;&#x80fd;&#x3002",{"_index":4962,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x90fd",{"_index":6964,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["x90fd;&#x4e00;&#x6837;&#x3002",{"_index":5462,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x90fd;&#x4e0d;&#x80fd;&#x591f;&#x9a6c;&#x4e0a;&#x88ab;&#x5904;&#x7406;&#x65f6;&#x7a0b;&#x5e8f;&#x9700;&#x8981;&#x6267;&#x884c;&#x54ea;&#x4e9b;&#x903b;&#x8f91",{"_index":3012,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x90fd;&#x4f1a;&#x4e0d;&#x4e00;&#x6837",{"_index":1417,"title":{},"body":{"basic/map.html#map":{}}}],["x90fd;&#x4f1a;&#x4f7f;&#x7528",{"_index":8848,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x90fd;&#x4f1a;&#x8003;&#x8651;&#x8be5;&#x4fe1;&#x606f;&#x3002;local&#x3001;utc",{"_index":3465,"title":{},"body":{"standards/time.html#Time":{}}}],["x90fd;&#x4f1a;&#x88ab;&#x6253;&#x65ad;&#xff0c;&#x7a0b;&#x5e8f;&#x9000;&#x51fa",{"_index":6211,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x90fd;&#x505c;&#x4e0b;&#x6765;&#x4e86;&#xff0c;&#x53ea;&#x6709;&#x5176;&#x4e2d;&#x4e00;&#x4e2a;&#x6ca1;&#x6709;&#x505c;&#xff0c;&#x90a3;&#x4e48;&#x5783;&#x573e;&#x56de;&#x6536;&#x5c31;&#x4f1a;&#x4e00;&#x76f4;&#x7b49;&#x5f85;&#x7740;&#x6ca1;&#x6709;&#x505c;&#x7684;&#x90a3;&#x4e00;&#x4e2a;&#x3002",{"_index":6538,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x90fd;&#x5177;&#x6709;&#x4e00;&#x4e2a;&#x5730;&#x70b9;&#x4fe1;&#x606f;&#xff08;&#x5373;&#x5bf9;&#x5e94;&#x5730;&#x70b9;&#x7684;&#x65f6;&#x533a;&#x4fe1;&#x606f;&#xff09;&#xff0c;&#x5f53;&#x8ba1;&#x7b97;&#x65f6;&#x95f4;&#x7684;&#x8868;&#x793a;&#x683c;&#x5f0f;&#x65f6;&#xff0c;&#x5982",{"_index":3462,"title":{},"body":{"standards/time.html#Time":{}}}],["x90fd;&#x5199;&#x5728;&#x540c;&#x4e00;&#x884c",{"_index":8758,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x90fd;&#x53ea;&#x80fd;&#x653e;&#x5728;&#x53d8;&#x91cf;&#x540d;,&#x5982",{"_index":211,"title":{},"body":{"index.html#os-Args":{}}}],["x90fd;&#x53ef;&#x4ee5;&#x62ff;&#x5230;&#x4e00;&#x4e2a;&#x552f;&#x4e00;&#x7684;&#x6574;&#x6570;&#x3002;&#x8fd9;&#x91cc;&#x6709;&#x70b9;&#x50cf",{"_index":6346,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x90fd;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x4f7f;&#x7528;&#xff0c;&#x4e0d;&#x7528;&#x8003;&#x8651;&#x662f;&#x503c;&#x8fd8;&#x662f;&#x6307;&#x9488",{"_index":1733,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x90fd;&#x5411;&#x8fd9;&#x4e2a;&#x901a;&#x9053;&#x53d1;&#x9001;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x5e76;&#x4e14;&#xff0c;&#x8ba9;&#x4e3b",{"_index":8065,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x90fd;&#x548c;&#x6211;&#x4eec;&#x7684",{"_index":8998,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x90fd;&#x5904;&#x4e8e;&#x7b49;&#x5f85;&#x72b6;&#x6001;&#xff0c;&#x5c31;&#x4f1a;&#x81ea;&#x884c;&#x629b;&#x51fa;&#x4e00;&#x4e2a;&#x5e26;&#x6709;&#x5982;&#x4e0b",{"_index":7881,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x90fd;&#x5c06;&#x66f4;&#x65b0",{"_index":7002,"title":{},"body":{"standards/io/io.html#LimitedReader-类型":{}}}],["x90fd;&#x5c5e;&#x4e8e;&#x81f4;&#x547d;&#x9519;&#x8bef;&#xff0c;&#x90fd;&#x662f;&#x65e0;&#x6cd5;&#x88ab;&#x6062;&#x590d;&#x7684;&#xff0c;&#x8c03;&#x7528",{"_index":7886,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x90fd;&#x5df2;&#x7ecf;&#x88ab;&#x963b;&#x585e;&#x3002;&#x8fd9;&#x4e9b",{"_index":7876,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x90fd;&#x5e94;&#x8be5;&#x8fd4;&#x56d",{"_index":6807,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x90fd;&#x8bbe;&#x5b9a;&#x4e86;&#x4e00;&#x4e2a;&#x552f;&#x4e00;&#x7684;&#x4e8c;&#x8fdb;&#x5236;&#x7f16;&#x7801",{"_index":336,"title":{},"body":{"index.html#编码":{}}}],["x90fd;&#x9700;&#x8981;&#x8bbf;&#x95ee;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x4f7f;&#x7528;&#x4e92;&#x65a5;&#x6761;&#x4ef6;&#x6765;&#x8bbf;&#x95ee;&#x3002",{"_index":7852,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x914d;&#x5408;&#x4f7f;&#x7528;&#xff0c;&#x6587;&#x4ef6;&#x5fc5;&#x987b;&#x4e0d;&#x5b58;&#x5728",{"_index":7353,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x914d;&#x7f6e;&#x4ee3;&#x7406",{"_index":986,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x91ca;&#x653",{"_index":433,"title":{"advance/mm.html#释放":{}},"body":{}}],["x91ca;&#x653e;&#x95f2;&#x7f6e;&#x8d85;&#x8fc7",{"_index":6559,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x91cc;&#x505a;&#x7f51;&#x7edc;&#x591a;&#x8def;&#x590d;&#x7528;&#xff0c;&#x5373;&#xff1a",{"_index":6413,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x91cc;&#x7684;&#x95f2;&#x7f6e;&#x5185;&#x5b58;&#x5757;&#xff0c;&#x5982;&#x679c;&#x95f2;&#x7f6e;&#x65f6;&#x95f4;&#x8d85;&#x8fc7;&#x9608;&#x503c;&#xff0c;&#x5219;&#x91ca;&#x653e;&#x5176;&#x5173;&#x8054;&#x7684;&#x7269;&#x7406;&#x5185;&#x5b58;&#x3002",{"_index":436,"title":{},"body":{"advance/mm.html#释放":{}}}],["x91cc;&#x9762;&#x53ef;&#x4ee5;&#x5199;&#x4efb;&#x610f;&#x591a;&#x4e2a",{"_index":2228,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x91cc;&#x9762;&#x62ff;&#xff0c;&#x5982;&#x679c;&#x62ff;&#x4e0d;&#x5230;&#x5c31;&#x5206;&#x914d;&#x4e00;&#x4efd;&#x3002;&#x8fd9;&#x6bd4;&#x8d77;&#x4e0d;&#x505c;&#x751f;&#x6210;&#x65b0;&#x7684",{"_index":8316,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x91cc;&#x9762;&#x7684;&#x4e00;&#x6bb5;&#x5b9e;&#x73b0;&#x4ee3;&#x7801;&#xff1a",{"_index":8320,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x91cc;&#x9762;&#x7684;&#x51fd;&#x6570;&#x5c31;&#x6709;&#x4e00;&#x4e9b;&#x5b57;&#x8282;&#x548c;&#x5b57;&#x7b26;&#x7684;&#x8f6c;&#x6362;&#x3002",{"_index":5136,"title":{},"body":{"standards/text/unicode.html#utf8-包":{}}}],["x91cc;&#x9762;&#x7684;&#x6240;&#x6709;&#x7f13;&#x5b58;&#x7684;&#x5bf9;&#x8c61;&#xff0c;&#x8be5;&#x51fd;&#x6570;&#x6ce8;&#x518c;&#x8fdb;&#x53bb",{"_index":8325,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x91cd;&#x5199",{"_index":2100,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x91cd;&#x5199;(overrid",{"_index":2086,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x91cd;&#x590d",{"_index":518,"title":{},"body":{"advance/gc.html#三色标记和写屏障":{}}}],["x91cd;&#x590d;&#x5b57;&#x7b26;&#x4e32",{"_index":5952,"title":{"standards/text/strings.html#重复字符串":{}},"body":{}}],["x91cd;&#x5b9a;&#x5411;&#x5230;&#x5176;&#x89c4;&#x8303",{"_index":8951,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x9488;&#x5bf9",{"_index":2973,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9488;&#x5bf9;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x91c7;&#x6837;&#x4f1a;&#x6309;&#x7167;&#x4e00;&#x5b9a;&#x6bd4;&#x4f8b;&#x6536;&#x96c6",{"_index":4262,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x9488;&#x662f;&#x5355;&#x72ec;&#x7684;&#x7c7b;&#x578b;&#xff0c;&#x800c;&#x4e14;&#x4e5f;&#x4e0d;&#x80fd;&#x5bf9;&#x6307;&#x9488;&#x505a;&#x6574;&#x6570;&#x8fd0;&#x7b97;&#x3002;&#x4ece;&#x8fd9;&#x4e00;&#x70b9;&#x770b;&#xff0c;golang",{"_index":1709,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x94fe;&#x8868",{"_index":5230,"title":{"standards/data/container.html#链表":{}},"body":{}}],["x94fe;&#x8868;&#x521d;&#x59cb;&#x5316",{"_index":5254,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x94fe;&#x8868;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x6709",{"_index":5231,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x94fe;&#x8868;&#x7684;&#x6839;&#x5143;&#x7d20",{"_index":5239,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x94fe;&#x8868;&#x7684;&#x957f;&#x5ea6",{"_index":5240,"title":{},"body":{"standards/data/container.html#链表":{}}}],["x9501;&#x5b9a;&#x548c;&#x89e3;&#x9501;&#xff0c;&#x800c;&#x5b83;&#x7684",{"_index":7836,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x9501;&#x5b9a;&#x90a3;&#x4e2a;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x5426;&#x5219;&#x5728;&#x8c03;&#x7528;&#x8fd9;&#x4e2a",{"_index":7949,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x9501;&#xff0c;&#x4fdd;&#x8bc1;&#x5728;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x4e4b;&#x540e;&#x6216;&#x8005;&#x53d1;&#x751f;&#x9519;&#x8bef;&#x8fd4;&#x56de;&#x65f6;&#x4e00;&#x5b9a;&#x4f1a;&#x6267;&#x884c",{"_index":7827,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x9519;&#x8bef",{"_index":263,"title":{"basic/error.html#错误":{},"basic/function.html#错误":{}},"body":{"index.html#类型转换":{}}}],["x9519;&#x8bef;&#x3002",{"_index":7635,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x9519;&#x8bef;&#x3002;&#x552f;&#x4e00;&#x7684;&#x9519;&#x8bef;&#x548c",{"_index":5766,"title":{},"body":{"standards/os/filepath.html#文件路径匹配":{}}}],["x9519;&#x8bef;&#x3002;&#x5f53;&#x4e14;&#x4ec5;&#x5f53;&#x8fd4;&#x56de;&#x7684;&#x7ed3;&#x679c;&#xff08",{"_index":5452,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x9519;&#x8bef;&#x5904;&#x7406",{"_index":615,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x9519;&#x8bef;&#x5904;&#x7406;&#xff0c;&#x4e00;&#x822c;&#x4f1a;&#x963b;&#x6b62;&#x7a0b;&#x5e8f;&#x5f80;&#x4e0b;&#x6267;&#x884c",{"_index":7442,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x9519;&#x8bef;&#xff0c",{"_index":2423,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x9519;&#x8bef;&#xff0c;&#x540c;&#x65f6;&#x5141;&#x8bb8",{"_index":6809,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x9519;&#x8bef;&#xff1a;cannot",{"_index":284,"title":{},"body":{"index.html#自定义类型":{}}}],["x9519;&#x8bef;&#xff1a;invalid",{"_index":285,"title":{},"body":{"index.html#自定义类型":{}}}],["x9519;&#x8bef;,&#x6216;&#x5728;&#x4e0b;&#x4e00;&#x6b21;&#x7684;&#x8c03;&#x7528;&#x4e2d;&#x8fd4;&#x56de;&#x8fd9;&#x4e2a;&#x9519;&#x8bef;&#xff08;&#x4e14",{"_index":6796,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["x952e;&#x503c;&#x5bf9",{"_index":8899,"title":{},"body":{"standards/net/http.html#client":{}}}],["x952e;&#x503c;&#x5bf9;&#x5e8f;&#x5217;&#xff1b;&#x56e0;&#x4e3a;&#x503c;&#x4e2d;&#x542b;&#x4e49;&#x53cc;&#x5f15;&#x53f7;&#x5b57;&#x7b26;&#xff0c",{"_index":1560,"title":{},"body":{"basic/json.html#序列化":{}}}],["x952e;&#x7684;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x662f;&#x53ef;&#x5224;&#x7b49",{"_index":8271,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x952e;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x4e4b;&#x95f4;&#x5fc5;&#x987b;&#x53ef;&#x4ee5;&#x65bd;&#x52a0;&#x64cd;&#x4f5c;&#x7b26",{"_index":1446,"title":{},"body":{"basic/map.html#map":{}}}],["x952e;&#x7c7b;&#x578b;]&#x503c;&#x7c7b;&#x578b",{"_index":1404,"title":{},"body":{"basic/map.html#map":{}}}],["x957f;&#x5ea6;&#x4e0d;&#x591f;&#xff0c;&#x6587;&#x4ef6;&#x540d;&#x4f1a;&#x88ab;&#x622a;&#x65ad;&#xff0c;&#x800c",{"_index":7626,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["x957f;&#x5ea6;&#x53ef;&#x4ee5;&#x589e;&#x52a0;&#x4e5f;&#x53ef;&#x4ee5;&#x51cf;&#x5c11;&#x3002;&#x8fd8;&#x6709;&#x4e00;&#x70b9;&#x4e0e;&#x6570;&#x7ec4;&#x4e0d;&#x540c;&#xff0c;&#x5207;&#x7247;&#x4e0d;&#x9700;&#x8981;&#x8bf4;&#x660e;&#x957f;&#x5ea6;&#x3002",{"_index":1866,"title":{},"body":{"basic/slice.html#slice":{}}}],["x957f;&#x5ea6;&#x548c;&#x5bb9;&#x91cf",{"_index":1942,"title":{"basic/slice.html#长度和容量":{}},"body":{}}],["x957f;&#x5ea6;&#x5c0f;&#x4e8",{"_index":5501,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x957f;&#x5ea6;&#xff0c;err",{"_index":5506,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["x957f;&#x65f6;&#x95f4;&#x963b;&#x585e;&#x7684",{"_index":6569,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x957f;&#x671f;&#x8fd0;&#x884c;&#x7684;&#x670d;&#x52a1;&#x53ef;&#x80fd;&#x4f1a;&#x628a;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x8017;&#x5c3d;&#x3002",{"_index":7440,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["x95e8;&#x3002",{"_index":1299,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x95ed;&#x5305",{"_index":3162,"title":{"basic/function.html#闭包":{}},"body":{"basic/function.html#闭包":{}}}],["x95ee;&#x9898;&#x662f;&#x6211;&#x4eec;&#x8ba9;&#x4e3b",{"_index":6334,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x95f4;&#x7684;&#x7b49;&#x5f85;&#x65f6;&#x95f4;&#x3002;&#x8003;&#x8651;&#x4e00;&#x79cd;&#x5f88;&#x6781;&#x7aef;&#x7684;&#x60c5;&#x51b5;&#xff0c;&#x6240;&#x6709;&#x7684",{"_index":6537,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x9608;&#x503c;&#x3002",{"_index":523,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x961f;&#x5217;&#x4e2d;&#x7684",{"_index":6586,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x961f;&#x5217;&#x4e2d;&#xff0c;&#x800c",{"_index":6577,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x961f;&#x5217;&#xff08",{"_index":6477,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x9636",{"_index":6113,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x9636;&#x8d1d;&#x585e;&#x5c14;&#x51fd;&#x6570",{"_index":6111,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["x963b;&#x585e;&#x4e8b;&#x4ef6;&#x3002",{"_index":4254,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x963b;&#x585e;&#x5256;&#x6790;&#x5219;&#x8bb0;&#x5f55;&#x963b;&#x585",{"_index":4138,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x963b;&#x585e;&#x60c5;&#x51b5;&#x4e0b;&#x7684;&#x8c03;&#x5ea6",{"_index":6591,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x963b;&#x585e;&#x6216",{"_index":6571,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x963b;&#x585e;&#x6982;&#x8981;&#x6587;&#x4ef6;&#xff0c;&#x5176;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x6bb5;&#x6982;&#x8981;&#x4fe1;&#x606f;&#xff0c;&#x90fd;&#x4ee3;&#x8868;&#x7740",{"_index":4252,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x963b;&#x585e;&#x7684;&#x60c5;&#x51b5;&#xff1a",{"_index":3016,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x53e6;&#x4e00;&#x4e2a",{"_index":2929,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x963b;&#x585e;,&#x76f4;&#x5230;&#x6240;&#x6709;&#x6570;&#x636e;&#x90fd;&#x53ef;&#x7528;&#x6216;&#x4e00;&#x4e2a;&#x9519;&#x8bef;&#x53d1;&#x751f;&#x3002",{"_index":6862,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["x963b;&#x6b62;&#x4e86;&#x5916;&#x90e8;&#x8c03;&#x7528;&#x65b9;&#x5bf9;&#x5bf9;&#x8c61;&#x5185;&#x90e8;&#x7684;&#x503c;&#x4efb;&#x610f;&#x5730;&#x8fdb;&#x884c;&#x4fee;&#x6539;&#x3002",{"_index":1292,"title":{},"body":{"basic/oop.html#封装":{}}}],["x9645;&#x9700;&#x8981;&#x7684;&#x7c7b;&#x578b;&#x3002",{"_index":4952,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["x9664;&#x4e86",{"_index":1821,"title":{},"body":{"basic/operator.html#赋值运算符":{},"basic/basic_data.html#字符串":{},"standards/os/os.html#文件属性":{}}}],["x9664;&#x4e86;&#x4f7f;&#x7528;&#x4e0a;&#x8ff0;&#x65b9;&#x6cd5;&#x5c06;&#x6574;&#x6570;&#x8f6c;&#x4e3a;&#x5b57;&#x7b26;&#x4e32;&#x5916;&#xff0c;&#x7ecf;&#x5e38;&#x89c1;&#x5230;&#x6709;&#x4eba;&#x4f7f;&#x7528",{"_index":4960,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["x9664;&#x4e86;&#x57fa;&#x7840;&#x7684",{"_index":2513,"title":{},"body":{"standards/log.html#分类":{}}}],["x9664;&#x4e86;&#x6dfb;&#x52a0;&#x952",{"_index":1471,"title":{},"body":{"basic/map.html#map":{}}}],["x9664;&#x6b64;&#x4e4b;&#x5916;&#xff0c",{"_index":4313,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x9664;&#x6b64;&#x4e4b;&#x5916;&#xff0c;&#x8fd8;&#x6709;&#x4e00;&#x4e2a;&#x7ec6;&#x8282;&#x9700;&#x8981;&#x6ce8;&#x610f;&#xff0c;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x548c;&#x810f;&#x5b57;&#x5178;&#x4e4b;&#x95f4;&#x662f;&#x4f1a;&#x4e92;&#x76f8;&#x8f6c;&#x6362;&#x7684;&#x3002;&#x5728;&#x810f;&#x5b57;&#x5178;&#x4e2d;&#x67e5;&#x627e;&#x952e;&#x503c;&#x5bf9;&#x6b21;&#x6570;&#x8db3;&#x591f;&#x591a;&#x7684;&#x65f6;&#x5019;&#xff0c",{"_index":8395,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x9664;&#x975e;&#x7a0b;&#x5e8f;&#x7ec8;&#x6b62;&#x524d;&#x5b9a;&#x65f6;&#x5668;&#x4e00;&#x76f4;&#x9700;&#x8981;&#x89e6;&#x53d1;&#xff0c;&#x5426;&#x5219;&#xff0c;&#x4e0d;&#x9700;&#x8981;&#x65f6;&#x5e94;&#x8be5;&#x8c03;&#x7528",{"_index":3587,"title":{},"body":{"standards/time.html#Ticker":{}}}],["x968f;&#x540e;&#xff0c;&#x7a0b;&#x5e8f;&#x5d29;&#x6e83;&#x5e76;&#x7ec8;&#x6b62;&#x8fd0;&#x884c;&#xff0c;&#x627f;&#x8f7d;&#x7a0b;&#x5e8f;&#x8fd9;&#x6b21;&#x8fd0;&#x884c;&#x7684;&#x8fdb;&#x7a0b;&#x4e5f;&#x4f1a;&#x968f;&#x4e4b;&#x6b7b;&#x4ea1;&#x5e76;&#x6d88;&#x5931;&#x3002;&#x4e0e;&#x6b64;&#x540c;&#x65f6;&#xff0c;&#x5728;&#x8fd9;&#x4e2a;&#x63a7;&#x5236;&#x6743;&#x4f20;&#x64ad;&#x7684;&#x8fc7;&#x7a0b;&#x4e2d;&#xff0c;pan",{"_index":682,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x968f;&#x673a",{"_index":3007,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9690;&#x85cf;&#x5b9e;&#x73b0;&#x7684;&#x7ec6;&#x8282;&#xff0c;&#x9632;&#x6b62;&#x8c03;&#x7528;&#x65b9;&#x4f9d;&#x8d56;&#x90a3;&#x4e9b;&#x53ef;&#x80fd;&#x53d8;&#x5316;&#x7684;&#x5177;&#x4f53;&#x5b9e;&#x73b0;&#xff0c;&#x8fd9;&#x6837;&#x4f7f;&#x8bbe;&#x8ba1;&#x5305;&#x7684;&#x7a0b;&#x5e8f;&#x5458;&#x5728;&#x4e0d;&#x7834;&#x574f;&#x5bf9;&#x5916;&#x7684;api&#x60c5;&#x51b5;&#x4e0b;&#x80fd;&#x5f97;&#x5230;&#x66f4;&#x5927;&#x7684;&#x81ea;&#x7531;&#x3002",{"_index":1291,"title":{},"body":{"basic/oop.html#封装":{}}}],["x96f6;&#x503c;&#x4ee3;&#x8868;&#x65f6;&#x95f4;&#x70b9",{"_index":3458,"title":{},"body":{"standards/time.html#Time":{}}}],["x9700;&#x8981;&#x5728;&#x5b83;&#x57fa;&#x4e8e;&#x7684;&#x90a3;&#x4e2a;&#x4e92;&#x65a5;&#x9501;&#x4fdd;&#x62a4;&#x4e0b;&#x8fdb;&#x884c;&#x3002;&#x800c;&#x5728;&#x8fdb;&#x884c;&#x5355;&#x53d1;&#x901a;&#x77e5;&#x6216;&#x5e7f;&#x64ad;&#x901a;&#x77e5;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5374;&#x662f;&#x6070;&#x6070;&#x76f8;&#x53cd;&#x7684;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x9700;&#x8981;&#x5728;&#x5bf9;&#x5e94;&#x7684;&#x4e92;&#x65a5;&#x9501;&#x89e3;&#x9501;&#x4e4b;&#x540",{"_index":7899,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x9700;&#x8981;&#x63a5;&#x53d7;&#x6d88;&#x606f;&#xff0c;&#x5982;&#x679c;&#x7b2c;&#x4e00;&#x4e2a",{"_index":2997,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9700;&#x8981;&#x6539;&#x53d8;&#x53c2;&#x6570;&#x7684;&#x503c",{"_index":1726,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x9759;&#x6001;&#x7ad9;&#x70b9",{"_index":9115,"title":{"standards/net/http.html#静态站点":{}},"body":{}}],["x975e",{"_index":6800,"title":{},"body":{"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#其他接口":{},"standards/os/os.html#文件-I-O":{},"standards/net/http.html#HTTP-Server":{}}}],["x975e;&#x672c;&#x5730;&#x53d8;&#x91cf",{"_index":6372,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x975e;&#x7a7a;&#x65f6;&#xff0c;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x603b;&#x662f",{"_index":5690,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["x975e;&#x7f13;&#x51b2;&#x901a;&#x9053",{"_index":2980,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9762",{"_index":8175,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x9762;&#x5411;&#x5bf9;&#x8c61",{"_index":1213,"title":{"basic/oop.html#面向对象":{}},"body":{}}],["x9875",{"_index":397,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x9875;&#x9762;&#xff0c;godoc&#x7684",{"_index":2815,"title":{},"body":{"commands/build.html#工具":{}}}],["x9879;&#x76ee",{"_index":990,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x987a;&#x5e8f;&#x9010;&#x4e2a;&#x8fdb;&#x884c;&#xff0c;&#x8fd9;&#x4f1a;&#x8ba9;&#x6211;&#x4eec;&#x611f;&#x89c9;&#x5230;&#x5b83;&#x662f;&#x5728;&#x5b8c;&#x5168;&#x4e32;&#x884c;&#x5730;&#x6267;&#x884c;&#x6d4b;&#x8bd5;&#x6d41;&#x7a0b;&#x3002",{"_index":4161,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x9891;&#x7e41;&#x5730;&#x6539;&#x53d8;&#x3002",{"_index":8030,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x9996;&#x5148;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x7a0d;&#x5fae;&#x6539;&#x9020;&#x4e00;&#x4e0b",{"_index":6342,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x9996;&#x5b57;&#x6bcd;&#x5927;&#x5199;&#xff09;&#x4f7f;&#x7528",{"_index":2254,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x9996;&#x5c3e;&#x7684",{"_index":5966,"title":{},"body":{"standards/text/strings.html#修改字符串":{}}}],["x9a8c;&#x8bc1",{"_index":4516,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x9ad8;&#x4e8",{"_index":8775,"title":{},"body":{"standards/net/http.html#Request":{}}}],["x9ad8;&#x7684;&#x590d;&#x5236;&#x64cd;&#x4f5c;&#xff0c;&#x5e76;&#x4e14;&#x8282;&#x7701;&#x5185;&#x5b58;&#xff0c;&#x63d0;&#x9ad8;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x6548;&#x7387;&#x3002",{"_index":1724,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x9ed8;&#x8ba4;&#x4e0a;&#x9650;&#x4e3a",{"_index":1909,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x9ed8;&#x8ba4;&#x4e0b;&#x9650;&#x4e3a",{"_index":1908,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["x9ed8;&#x8ba4;&#x4e3a",{"_index":6430,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x9ed8;&#x8ba4;&#x503c;&#x662f",{"_index":4515,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["x9ed8;&#x8ba4;&#x503c;&#x662f;&#x7a7a;&#x7684;&#x3002",{"_index":4130,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x9ed8;&#x8ba4;&#x5305;&#x540d;&#x4e00;&#x822c;&#x91c7;&#x7528;&#x5bfc;&#x5165;&#x8def;&#x5f84;&#x540d;&#x7684;&#x6700;&#x540e;&#x4e00;&#x6bb5;&#xff0c;&#x6bd4;&#x5982",{"_index":2194,"title":{},"body":{"basic/package.html#包声明":{}}}],["x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b",{"_index":919,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#x662f",{"_index":9033,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6570;&#x7ec4;&#x7684;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x90fd;&#x88ab;&#x521d;&#x59cb;&#x5316;&#x4e3a;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x5bf9;&#x5e94;&#x7684;&#x96f6;&#x503c;&#x3002",{"_index":771,"title":{},"body":{"basic/array.html#数组":{}}}],["x9ed8;&#x8ba4;&#x662f",{"_index":546,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["x:0",{"_index":7706,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["x:1",{"_index":7705,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["x\\n",{"_index":3696,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"standards/io/fmt.html":{},"standards/io/fmt.html#占位符":{}}}],["x]\\n",{"_index":1023,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["xe9;t&#xe9",{"_index":4113,"title":{},"body":{"basic/test.html#测试函数":{}}}],["xff01",{"_index":2990,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff08",{"_index":3944,"title":{},"body":{"basic/basic_data.html#字符串":{},"standards/os/filepath.html#遍历目录":{},"standards/io/io.html#Reader":{},"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["xff08;&#x4e0d;&#x63a8;&#x8350;&#x4f7f;&#x7528;&#xff09;&#x3002",{"_index":207,"title":{},"body":{"index.html#行分隔符":{}}}],["xff08;&#x4e0d;&#x8981;&#x901a;&#x8fc7;&#x5171;&#x4eab;&#x5185;&#x5b58;&#x6765;&#x901a;&#x4fe1;&#xff0c;&#x800c;&#x5e94;&#x8be5;&#x901a;&#x8fc7;&#x901a;&#x4fe1;&#x6765;&#x5171;&#x4eab;&#x5185;&#x5b58;&#x3002;&#xff09",{"_index":2870,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff08;&#x4e5f;&#x5c31;&#x662f",{"_index":690,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["xff08;&#x4e5f;&#x5c31;&#x662f;&#x4e34;&#x754c;&#x533a;&#x4e2d;&#x7684;&#x4ee3;&#x7801;&#xff09;&#x624d;&#x4f1a;&#x5f00;&#x59cb;&#x6267;&#x884c;&#x3002;&#x8fd9;&#x4e5f;&#x6b63;&#x662f;&#x4e92;&#x65a5;&#x9501;&#x80fd;&#x591f;&#x4fdd;&#x62a4;&#x4e34;&#x754c;&#x533a;&#x7684;&#x539f;&#x56e0;&#x6240;&#x5728;&#x3002",{"_index":7861,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff08;&#x4e5f;&#x5c31;&#x662f;&#x5f53;&#x524d;&#x7684",{"_index":7935,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0",{"_index":8123,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["xff08;&#x4f1a;&#x8986;&#x76d6;&#x8be5;&#x4f4d;&#x7f6e;&#x7684;&#x5185;&#x5bb9;&#xff09;&#x3002",{"_index":6884,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["xff08;&#x4f4d;&#x6e05;&#x7a7a",{"_index":1808,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["xff08;&#x4f5c;&#x4e3a;&#x503c;&#x4f7f;&#x7528;&#xff09;&#x4ee5;&#x53ca;&#x663e;&#x793a;&#x548c;&#x6d4b;&#x91cf;&#x65f6;&#x95f4;&#x548c;&#x65e5;&#x671f;&#x7684;&#x529f;&#x80fd;&#x51fd;&#x6570;&#xff0c;&#x6bd4;&#x5982;&#xff1a",{"_index":3406,"title":{},"body":{"standards/time.html#time":{}}}],["xff08;&#x5047;&#x8bbe;&#x8def;&#x5f84;&#x5206;&#x9694;&#x7b26;&#x662f",{"_index":5720,"title":{},"body":{"standards/os/filepath.html#规整化路径":{},"standards/os/filepath.html#文件路径匹配":{}}}],["xff08;&#x5176;&#x4ed6;&#x8bed;&#x8a00;&#x5176;&#x5b9e;&#x662f;&#x9690;&#x5f0f;&#x7684;&#x4f20;&#x9012;&#x6307;&#x9488;&#xff09;&#x3002",{"_index":794,"title":{},"body":{"basic/array.html#数组传入函数":{}}}],["xff08;&#x5176;&#x5b9e;&#x5c31;&#x662f",{"_index":8977,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff08;&#x5206;&#x5b50;&#xff09",{"_index":4373,"title":{},"body":{"standards/data/big.html#big":{}}}],["xff08;&#x5206;&#x6bcd;&#xff09;&#x90fd;&#x662f",{"_index":4374,"title":{},"body":{"standards/data/big.html#big":{}}}],["xff08;&#x5230;&#x8fbe;&#x6307;&#x5b9a;&#x65f6;&#x95f4;&#x89e6;&#x53d1;&#x4e14;&#x53ea;&#x89e6;&#x53d1;&#x4e00;&#x6b21;&#xff09",{"_index":3545,"title":{},"body":{"standards/time.html#定时器":{}}}],["xff08;&#x5305;&#x62ec;&#x534f;&#x8bae;&#x548c;&#x4e3b;&#x673a;&#x540d;&#xff09;&#x6765;&#x521d;&#x59cb;&#x5316;&#x8bf7;&#x6c42;&#x7684;&#x7b2c;1&#x884c;&#xff08",{"_index":8846,"title":{},"body":{"standards/net/http.html#Request":{}}}],["xff08;&#x5305;&#x62ec;&#x754c;&#x5b9a;&#x7b26;&#xff09",{"_index":5466,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff08;&#x5373;&#x53cd;&#x5f15;&#x53f7;&#x56f4;&#x7ed5;&#x7684;&#xff09;&#x5b57;&#x7b26;&#x4e32;&#xff1b;&#x5982;&#x679c;&#x662f;&#x53ef;&#x6253;&#x5370;&#x5b57;&#x7b26;&#xff0c;%u&#xff08;%#u&#xff09;&#x4f1a;&#x5199;&#x51fa;&#x8be5;&#x5b57;&#x7b26;&#x7684",{"_index":4716,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["xff08;&#x5373;&#x8c03;&#x7528",{"_index":7015,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["xff08;&#x53d6;&#x5730;&#x5740;&#x64cd;&#x4f5c;&#xff09;&#xff0c",{"_index":1828,"title":{},"body":{"basic/operator.html#其他运算符":{}}}],["xff08;&#x53ef;&#x4ee5;&#x8868;&#x793a;&#x4e3a",{"_index":4364,"title":{},"body":{"standards/data/big.html#big":{}}}],["xff08;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":3503,"title":{},"body":{"standards/time.html#Time":{}}}],["xff08;&#x540c;&#x540d;&#x53d8;&#x91cf;&#xff0c;&#x4e3b;&#x4f53;&#x7684;&#x503c;&#x5728;&#x67e5;&#x8be2;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x503c;&#x524d;&#x9762;&#xff09;&#x3002;&#x5982;&#x679c;&#x8bf7;&#x6c42;&#x7684;&#x4e3b;&#x4f53;&#x7684;&#x5927;&#x5c0f;&#x6ca1;&#x6709;&#x88ab",{"_index":8797,"title":{},"body":{"standards/net/http.html#Request":{}}}],["xff08;&#x591a;&#x8def;&#x590d;&#x7528;&#x5668;&#xff09;&#xff0c;&#x901a;&#x8fc7",{"_index":8975,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff08;&#x5982;&#x679c;&#x5728",{"_index":4094,"title":{},"body":{"basic/test.html#测试":{}}}],["xff08;&#x6307;&#x9488;&#x53d8;&#x91cf;&#xff09;&#x3002",{"_index":1829,"title":{},"body":{"basic/operator.html#其他运算符":{}}}],["xff08;&#x63a5;&#x53e3;&#xff09;&#xff0c;&#x4ed6;&#x4eec;&#x5f88;&#x76f8;&#x4f3c;&#xff0c;&#x5bb9;&#x6613;&#x6df7;&#x6dc6;&#x3002;&#x8bb0;&#x4f4f",{"_index":8981,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff08;&#x6bd4;&#x5982;&#x6267;&#x884c;&#x4e00;&#x4e9b;&#x5b88;&#x62a4;&#x4efb;&#x52a1;&#xff09;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x6709;&#x53ef;&#x80fd;&#x4f1a;&#x5bfc;&#x81f4;&#x76f8;&#x5173",{"_index":8146,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["xff08;&#x6ce8;&#x610f;&#x662f;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#xff09;&#xff0c;&#x7136;&#x540e;&#x518d;&#x8bd5;&#x56fe;&#x627e;&#x51fa;&#x8fd9;&#x4e2a;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x4e2d",{"_index":1123,"title":{},"body":{"basic/flow.html#for":{}}}],["xff08;&#x7528;&#x4e8e;&#x5c06;&#x8bf7;&#x6c42;&#x5199;&#x5165;&#x4e0b;&#x5c42",{"_index":8827,"title":{},"body":{"standards/net/http.html#Request":{}}}],["xff08;&#x7531;&#x53d8;&#x91cf",{"_index":8180,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff08;&#x76f8;&#x4e58;&#x540e;&#x518d;&#x8d4b;&#x503c;&#xff09;&#x7b49;&#x7b49;&#xff0c;&#x5176;&#x4ed6;&#x7684;&#x8d4b;&#x503c;&#x8fd0;&#x7b97;&#x7b26;&#x4e5f;&#x90fd;&#x662f",{"_index":1825,"title":{},"body":{"basic/operator.html#赋值运算符":{}}}],["xff08;&#x76f8;&#x51cf;&#x540e;&#x518d;&#x8d4b;&#x503c;&#xff09;&#xff0c",{"_index":1824,"title":{},"body":{"basic/operator.html#赋值运算符":{}}}],["xff08;&#x76f8;&#x52a0;&#x540e;&#x518d;&#x8d4b;&#x503c;&#xff09;&#xff0c",{"_index":1823,"title":{},"body":{"basic/operator.html#赋值运算符":{}}}],["xff08;&#x7a7a;&#x683c;&#xff09;&#x4e3a;&#x6570;&#x503c;&#x4e2d;&#x7701;&#x7565;&#x7684;&#x6b63;&#x8d1f;&#x53f7;&#x7559;&#x51fa;&#x7a7a;&#x767d;&#xff08",{"_index":4720,"title":{},"body":{"standards/io/fmt.html#占位符":{}}}],["xff08;&#x7b49;&#x4e8e;&#x7f13;&#x5b58;&#x5927;&#x5c0f;&#x7684;&#x90e8;&#x5206;&#xff09;&#x3002;&#x8be5;&#x884c;&#x5269;&#x4f59;&#x7684;&#x90e8;&#x5206;&#x5c31;&#x4f1a;&#x5728;&#x4e0b;&#x6b21;&#x8c03;&#x7528;&#x7684;&#x65f6;&#x5019;&#x8fd4;&#x56de;&#x3002;&#x5f53;&#x4e0b;&#x6b21;&#x8c03;&#x7528;&#x8fd4;&#x56de;&#x8be5;&#x884c;&#x5269;&#x4f59;&#x90e8;&#x5206;&#x65f6;&#xff0c",{"_index":5481,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff08;&#x88ab;&#x5bfc;&#x51fa;&#x540",{"_index":2253,"title":{},"body":{"basic/scope.html#作用域":{}}}],["xff08;&#x8fd9;&#x4e0e",{"_index":5642,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["xff08;&#x8fd9;&#x662f;&#x4e00;&#x4e2a;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#xff0c;&#x6307;&#x5411",{"_index":3432,"title":{},"body":{"standards/time.html#时区":{}}}],["xff08;&#x903b;&#x8f91",{"_index":1805,"title":{},"body":{"basic/operator.html#逻辑运算符":{}}}],["xff08;&#x95f4;&#x9694;&#x7279;&#x5b9a;&#x65f6;&#x95f4;&#x89e6;&#x53d1;&#xff09;&#x3002",{"_index":3546,"title":{},"body":{"standards/time.html#定时器":{}}}],["xff08;1",{"_index":4944,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["xff08;32k",{"_index":529,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["xff08;page&#xff09;&#x7ec4;&#x6210;&#x7684;&#x5927;&#x5757;&#x5185;&#x5b58;&#x3002",{"_index":398,"title":{},"body":{"advance/mm.html#内存块":{}}}],["xff08;unnam",{"_index":288,"title":{},"body":{"index.html#未命名类型":{}}}],["xff09",{"_index":4096,"title":{},"body":{"basic/test.html#测试":{},"standards/text/strconv.html#字符串和浮点数之间的转换":{},"standards/os/filepath.html#规整化路径":{},"standards/text/strings.html#分割字符串":{},"standards/io/io.html#Reader":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/os/os.html#文件-I-O":{}}}],["xff09;&#x3002",{"_index":198,"title":{},"body":{"index.html#package":{},"standards/database/sql.html#类型":{},"standards/io/ioutil.html#ReadDir-函数":{},"standards/os/filepath.html#文件路径匹配":{},"concurrent/goroutine.html#goroutine-1":{},"standards/os/os.html#目录与链接":{}}}],["xff09;&#x3002;&#x5982;&#x679c;&#x5728;&#x627e;&#x5230;&#x754c;&#x5b9a;&#x7b26;&#x4e4b;&#x524d;&#x7f13;&#x5b58;&#x5df2;&#x7ecf",{"_index":5449,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff09;&#x3002;&#x5982;&#x679c;&#x8def;&#x5f84;&#x4e2d;&#x6ca1;&#x6709;&#x8def;&#x5f84;&#x5206;&#x9694;&#x7b26;&#xff0c;&#x51fd;&#x6570;&#x8fd4;&#x56d",{"_index":5683,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["xff09;&#x3002;&#x8fd9;&#x4e9b;&#x7c7b;&#x578b;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x4efb;&#x610f;&#x4f4d;&#x7c7b;&#x578b;&#x7684;&#x6570;&#x5b57;&#xff0c;&#x53ea;&#x8981;&#x5185;&#x5b58;&#x8db3;&#x591f;&#x5927;&#x3002;&#x7f3a;&#x70b9;&#x662f;&#x66f4;&#x5927;&#x7684;&#x5185;&#x5b58",{"_index":4367,"title":{},"body":{"standards/data/big.html#big":{}}}],["xff09;&#x3002;&#x901a;&#x5e38",{"_index":3167,"title":{},"body":{"basic/function.html#错误":{}}}],["xff09;&#x3002;go",{"_index":7614,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["xff09;&#x4e00;&#x6837",{"_index":944,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["xff09;&#x4e2d;&#x521b;&#x5efa;&#x4e34;&#x65f6;&#x76ee;&#x5f55;&#xff1b;&#x7b2c;&#x4e8c;&#x4e2a;&#x53c2;&#x6570;&#x6307;&#x5b9a;&#x4e34;&#x65f6;&#x76ee;&#x5f55;&#x540d;&#x7684;&#x524d;&#x7f00;&#xff0c;&#x8be5;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x4e34;&#x65f6;&#x76ee;&#x5f55;&#x7684;&#x8def;&#x5f84;&#x3002",{"_index":4832,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["xff09;&#x4ee5;&#x53ca;&#x4efb",{"_index":6855,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["xff09;&#x4ee5;&#x53ca;&#x4efb;&#x4f55;&#x9047;&#x5230;&#x7684;&#x5f15",{"_index":6830,"title":{},"body":{"standards/io/io.html#Writer":{}}}],["xff09;&#x52a0;&#x5165;&#x5230;&#x5f53;&#x524d;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684;&#x901a;&#x77e5;&#x961f;&#x5217;&#x4e2d;&#x3002",{"_index":7936,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["xff09;&#x53ef;&#x4ee5;&#x662f;&#x6307;&#x9488;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x662f;&#x503c;&#xff0c;golang",{"_index":1738,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["xff09;&#x65f6;&#xff0c;&#x8fd9;&#x4e9b;&#x5b57;&#x8282;&#x4f1a",{"_index":5432,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff09;&#x6ca1;&#x6709;&#x4ee5;&#x754c;&#x5b9a;&#x7b26;&#x7ed3;&#x675f;&#x7684;&#x65f6;&#x5019;&#xff0c",{"_index":5453,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff09;&#x7684;&#x5185;&#x5b58;&#x5206;&#x914d;&#x3002",{"_index":233,"title":{},"body":{"index.html#make-和-new":{}}}],["xff09;&#x7c7b;&#x578b;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x4ece;&#x8bed;&#x6cd5;&#x4e0a;&#x8bb2;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x63a5;&#x53d7;&#x4efb;&#x4f55;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x3002",{"_index":691,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["xff09;&#x8fde;&#x63a5;&#x8d77;&#x6765;&#xff1a",{"_index":5969,"title":{},"body":{"standards/text/strings.html#JOIN":{}}}],["xff09;&#xff0c",{"_index":3177,"title":{},"body":{"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff09;&#xff0c;&#x4ee5;&#x53ca;&#x539f;&#x6765;&#x7684;&#x6570;&#x7ec4",{"_index":3214,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["xff09;&#xff0c;&#x4f1a;&#x62a5;&#x9519",{"_index":1916,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["xff09;&#xff0c;&#x5b83;&#x53ea;&#x6709;&#x5728;&#x627e;&#x4e0d;&#x5230;&#x7a7a;&#x95f2",{"_index":6271,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff09;&#xff0c;&#x5b83;&#x7ef4;&#x62a4;&#x4e86;&#x4e00;&#x4e2a",{"_index":6476,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["xff09;&#xff0c;&#x5b8c;&#x6210;&#x540e;&#x518d;&#x8f6c;&#x56de;&#x6765;&#x3002",{"_index":3742,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff09;&#xff0c;&#x5b9e;&#x53c2;&#x53ef;&#x80fd;&#x4f1a;&#x7531;&#x4e8e;&#x51fd;&#x6570;&#x7684;&#x95f4;&#x63a5;&#x5f15;&#x7528;&#x88ab;&#x4fee;&#x6539;&#x3002",{"_index":3135,"title":{},"body":{"basic/function.html#参数":{}}}],["xff09;&#xff0c;&#x63a5;&#x6536;&#x8005;&#xff08",{"_index":1737,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["xff09;&#xff0c;&#x7531;&#x51fd;&#x6570;&#x7684;&#x53c2;&#x6570;&#x7c7b;&#x578b;&#x6307;&#x5b9a;&#xff0c;&#x4f20;&#x5165;&#x7684;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x4e0d;&#x5bf9;&#x4f1a;&#x62a5;&#x9519;&#xff0c;&#x4f8b;&#x5982;&#xff1a",{"_index":1735,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["xff09;&#xff0c;&#x800c",{"_index":5644,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["xff09;&#xff0c;&#x901a;&#x8fc7",{"_index":4829,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["xff09;&#xff0c;&#x91cc;&#x9762;&#x5b58;&#x50a8",{"_index":6478,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["xff09;&#xff1a",{"_index":4489,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["xff0c",{"_index":222,"title":{},"body":{"index.html#命名":{},"basic/error.html#error-类型":{},"basic/env_config.html#工作区":{},"basic/oop.html#方法":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/json.html#序列化":{},"basic/pointer.html#指针":{},"basic/pointer.html#为什么需要指针":{},"basic/operator.html#优先级":{},"basic/operator.html#关系运算符":{},"basic/operator.html#逻辑运算符":{},"basic/operator.html#位运算符":{},"basic/package.html#点操作":{},"basic/interface.html#接口":{},"standards/log.html#Logger":{},"commands/build.html#工具":{},"concurrent/channel.html#channel":{},"basic/function.html#可变参数":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"standards/time.html#Ticker":{},"basic/basic_data.html#数值类型":{},"basic/reflect.html#reflect-ValueOf":{},"standards/data/container.html#链表":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#路径的切分和拼接":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"standards/os/os.html#文件-I-O":{},"standards/os/os.html#文件属性":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#竞争检查器":{},"standards/net/http.html#Request":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{}}}],["xff0c;&#x4e00;&#x822c;&#x7528;&#x4e8e;&#x5f3a;&#x8c03;&#x6570;&#x503c;&#x662f;&#x4e00;&#x4e2a;&#x539f;&#x59cb;&#x7684;&#x6570;&#x636e;&#x800c;&#x4e0d;&#x662f;&#x4e00;&#x4e2a;&#x5c0f;&#x7684;&#x6574;&#x6570;&#x3002",{"_index":3724,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x4e14;&#x4e0d;&#x80fd;&#x8fde;&#x7eed;&#x8c03",{"_index":6962,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["xff0c;&#x4e3a;&#x4ec0;&#x4e48;&#xff0c;&#x9996;&#x5148",{"_index":1091,"title":{},"body":{"basic/flow.html#for":{}}}],["xff0c;&#x4e4b;&#x540",{"_index":6881,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["xff0c;&#x4e5f;&#x5c31;&#x662f;&#x7f16;&#x7801;&#x64cd;&#x4f5c;&#xff1a",{"_index":1546,"title":{},"body":{"basic/json.html#序列化":{}}}],["xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x5982;&#x679c",{"_index":5456,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff0c;&#x4ee3;&#x8868;&#x5f53;&#x524d;&#x8def;&#x5f84;&#x3002",{"_index":5723,"title":{},"body":{"standards/os/filepath.html#规整化路径":{}}}],["xff0c;&#x4ee5;&#x514d",{"_index":8093,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["xff0c;&#x4ee5;&#x53ca",{"_index":8002,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["xff0c;&#x4ee5;&#x53ca;&#x6211;&#x4eec;&#x542f;&#x7528;&#x7684;&#x90a3;&#x4e9b",{"_index":7875,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff0c;&#x4f1a;&#x4f7f;&#x51fd;&#x6570;&#x6216;&#x65b9;&#x6cd5;&#x5ef6;&#x8fdf;&#x6267;&#x884c;&#xff0c;&#x76f4;&#x5230;&#x5305;&#x542b;&#x8be5",{"_index":3174,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["xff0c;&#x4f46",{"_index":5621,"title":{},"body":{"standards/os/filepath.html#filepath":{}}}],["xff0c;&#x4f46;&#x5728",{"_index":6458,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["xff0c;&#x4f46;&#x662f",{"_index":701,"title":{},"body":{"basic/error.html#Recover-捕获异常":{},"basic/operator.html#算术运算符":{}}}],["xff0c;&#x4f46;&#x662f;&#x4e0d;&#x80fd;&#x4fdd;&#x8bc1;&#x6253;&#x5370",{"_index":7847,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff0c;&#x4f60;&#x4f1a",{"_index":1467,"title":{},"body":{"basic/map.html#map":{}}}],["xff0c;&#x4f7f;&#x7528",{"_index":1401,"title":{},"body":{"basic/map.html#map":{}}}],["xff0c;&#x4f7f;&#x88ab;&#x8bf7;&#x6c42",{"_index":6219,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x4f8b;&#x5982;&#xff1a",{"_index":1550,"title":{},"body":{"basic/json.html#序列化":{}}}],["xff0c;&#x503c;&#x4e3a",{"_index":925,"title":{},"body":{"basic/env_config.html#安装":{}}}],["xff0c;&#x5176;&#x4e2d;&#x7684",{"_index":4098,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x5177;&#x4f53;&#x5b9e;&#x73b0;&#x662f",{"_index":7396,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["xff0c;&#x5177;&#x4f53;&#x7684;&#x8fde;&#x63a5;&#x5728;&#x5185;&#x90e8;&#x901a;&#x8fc7;&#x8fde;&#x63a5;&#x6c60;&#x6765;&#x7ba1;&#x7406;&#xff0c",{"_index":4435,"title":{},"body":{"standards/database/sql.html#类型":{}}}],["xff0c;&#x5185;&#x5bb9;&#x662f;&#xff1a",{"_index":6878,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["xff0c;&#x518d;&#x5e76;&#x53d1",{"_index":8155,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x51cf;&#x5c11;&#x590d;&#x5236;&#x6210;&#x672c;&#xff0c",{"_index":1248,"title":{},"body":{"basic/oop.html#方法":{}}}],["xff0c;&#x51fd;&#x6570;&#x539f;&#x578b;&#x5982;&#x4e0b;&#xff1a",{"_index":4909,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["xff0c;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x83b7;&#x53d6;&#x591a;&#x4e2a;&#x591a;&#x884c;&#x7ed3;&#x679c;&#x3001;&#x4e00;&#x884c;&#x7ed3;&#x679c;&#x548c;&#x4fee;&#x6539;&#x6570;&#x636e;&#x5e93;&#x5f71;&#x54cd;&#x7684;&#x884c;&#x6570;&#xff08;&#x6216;&#x5176;&#x8fd4;&#x56d",{"_index":4437,"title":{},"body":{"standards/database/sql.html#类型":{}}}],["xff0c;&#x5207;&#x7247;&#x6210;&#x5458;&#x4e3a;&#x76ee;&#x5f55;&#x4e2d;&#x6587;&#x4ef6;&#x5bf9;&#x8c61;&#x7684;&#x540d;&#x5b57;&#xff0c;&#x91c7;&#x7528;&#x76ee;&#x5f55;&#x987a;&#x5e8f;&#x3002;&#x5bf9;&#x672c;&#x51fd;&#x6570;&#x7684;&#x4e0b;&#x4e00",{"_index":7672,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["xff0c;&#x5219",{"_index":5687,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["xff0c;&#x5219;&#x4f1a;&#x4f18;&#x5148;&#x4f7f;&#x7528;&#x5b83;&#x3002",{"_index":3435,"title":{},"body":{"standards/time.html#时区":{}}}],["xff0c;&#x5219;&#x4f1a;&#x51fa;&#x9519",{"_index":8945,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x5219;&#x8fd4;&#x56de",{"_index":8875,"title":{},"body":{"standards/net/http.html#Response":{}}}],["xff0c;&#x524d;&#x8005;&#x662f;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x540e;&#x8005;&#x662f;&#x8bfb;&#x5199;&#x9501;&#x3002",{"_index":7814,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff0c;&#x5305;&#x542b;&#x4e86;&#x5728;&#x90a3;&#x65f6;&#x5176;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x672a;&#x8bfb;&#x5185;&#x5bb9;&#x3002",{"_index":3932,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x5305;&#x62ec",{"_index":5777,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["xff0c;&#x5373;&#x4e3a;&#x6267;&#x884c",{"_index":8196,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x5373;&#xff1a;&#x65e0;&#x53c2;&#x6570;&#x58f0;&#x660e;&#x548c;&#x7ed3;&#x679c;&#x58f0;&#x660e;&#x7684;&#x51fd;&#x6570;&#x3002;&#x8be5;&#x65b9;&#x6cd5;&#x7684;&#x529f;&#x80fd;&#x5e76",{"_index":8118,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["xff0c;&#x53e6;&#x5916;&#x8fd8;&#x6709;&#x4e00;&#x4e2a;&#x7ed3;&#x6784;&#x4f53",{"_index":8919,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x53ea;&#x6709;&#x5728;&#x5b9e;&#x9645;&#x64cd;&#x4f5c;&#x6570;&#x636e;&#x5e93;&#xff08;&#x67e5;&#x8be2;&#x3001;&#x66f4;&#x65b0;&#x7b49;&#xff09;&#x6216;&#x8c03;&#x7528",{"_index":4470,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["xff0c;&#x53ea;&#x6709;&#x6709;&#x4e86;&#x8fd9;&#x4e2a;&#x6807;&#x8bb0;&#xff0c;&#x547d;&#x4ee4;&#x624d;&#x4f1a;&#x8fdb;&#x884c;&#x6027;&#x80fd;&#x6d4b;&#x8bd5",{"_index":4177,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["xff0c;&#x53ef;&#x4ee5;&#x7b80;&#x5355;&#x7c97;&#x66b4;&#x7684",{"_index":6329,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x540c;&#x65f6;&#x4f1a",{"_index":4939,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["xff0c;&#x540c;&#x65f6;&#x8c03;&#x7528",{"_index":9015,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x540c;&#x65f6;&#x8fd4;&#x56de;&#x8be5;&#x884c;&#x7684;&#x5f00;&#x59cb;&#x90e8;&#x5206",{"_index":5480,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff0c;&#x540c;&#x65f6;&#xff0c;&#x5185;&#x5d4c;&#x4e86",{"_index":6977,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["xff0c;&#x5426;&#x5219",{"_index":1815,"title":{},"body":{"basic/operator.html#位运算符":{},"theme/theme-usage.html#Quick-Start":{}}}],["xff0c;&#x56e0;&#x4e3a",{"_index":2415,"title":{},"body":{"basic/var.html#简短声明":{},"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x56e0;&#x4e3a;&#x5185;&#x5b58;&#x5206;&#x914d;&#x5668;&#x7684;&#x6838;&#x5fc3;&#x662f",{"_index":427,"title":{},"body":{"advance/mm.html#回收":{}}}],["xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x4eec;&#x672c;&#x8eab;&#x5c31;&#x662f;&#x6307;&#x9488;&#x5305;&#x88c5;&#x7684;&#x3002",{"_index":1251,"title":{},"body":{"basic/oop.html#方法":{}}}],["xff0c;&#x56e0;&#x4e3a;&#x6574;&#x6570;&#x9664;&#x6cd5;&#x4f1a;&#x5411;&#x7740",{"_index":1797,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["xff0c;&#x56e0;&#x6b64;&#xff0c;&#x4ee3;&#x7801;&#x5185;&#x90e8;&#x8fdb;&#x884c;&#x4e86;&#x5224;&#x65ad;&#xff0c;&#x5982;&#x679c;&#x4f20;&#x9012;&#x7684",{"_index":4798,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["xff0c;&#x5728;&#x4e0b;&#x6b21;&#x6267;&#x884c",{"_index":5485,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff0c;&#x5728;&#x4e0b;&#x6b21;&#x8c03;&#x7528;&#x8bfb;&#x64cd;&#x4f5c;&#xff08",{"_index":5431,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff0c;&#x5728;&#x5176;&#x5185;&#x90e8;&#x4f1a;&#x5206;&#x522b;&#x8c03;&#x7528",{"_index":7915,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["xff0c;&#x5728;&#x591a;&#x4e2a",{"_index":1433,"title":{},"body":{"basic/map.html#map":{}}}],["xff0c;&#x5728;&#x786e;&#x5b9a;&#x8fd9;&#x4e2a",{"_index":2899,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff0c;&#x5728;&#x7b2c;&#x4e00;&#x4e2a;&#x58f0;&#x660e;&#x7684;&#x5e38;&#x91cf;&#x6240;&#x5728;&#x7684;&#x884c;&#xff0c",{"_index":1360,"title":{},"body":{"basic/constant.html#iota":{}}}],["xff0c;&#x5728;&#x7b2c;&#x4e8c;&#x6b21;&#x8c03;&#x7528;&#x8bfb;&#x64cd;&#x4f5c;&#x540e;&#xff0c;&#x5185;&#x5bb9;&#x53d1;&#x751f;&#x4e86;&#x53d8;&#x5316;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c",{"_index":5437,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff0c;&#x5982;&#x3002",{"_index":618,"title":{},"body":{"basic/error.html#error-类型":{}}}],["xff0c;&#x5982;&#x679c",{"_index":4915,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{},"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x53d1;&#x73b0;&#xff0c;&#x8fd4;&#x56d",{"_index":8762,"title":{},"body":{"standards/net/http.html#Request":{}}}],["xff0c;&#x5982;&#x6b64;&#x5c31;&#x5f97;&#x5230;&#x4e86;&#x5f53;&#x6b21;&#x8fed;&#x4ee3;&#x7684;&#x5e8f;&#x53f7;&#x3002;&#x4e4b;&#x540e;&#xff0c;&#x65e0;&#x8bba",{"_index":6351,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x5982;&#xff1a",{"_index":269,"title":{},"body":{"index.html#类型转换":{}}}],["xff0c;&#x5b83;&#x4e0d;&#x80fd;&#x901a;&#x8fc7",{"_index":1418,"title":{},"body":{"basic/map.html#map":{}}}],["xff0c;&#x5b83;&#x4e5f;&#x4f1a;&#x5728;&#x8c03;&#x7528;&#x8fc7;&#x7a0b;&#x4e2d;&#x4f7f;&#x7528",{"_index":6859,"title":{},"body":{"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["xff0c;&#x5b83;&#x4e5f;&#x4f1a;&#x5728;&#x8c03;&#x7528;&#x8fc7;&#x7a0b;&#x4e2d;&#x5360;&#x7528",{"_index":6788,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["xff0c;&#x5b83;&#x4ec5;&#x5206;&#x914d;&#x4e86;&#x5b57;&#x5178;&#x672c;&#x8eab;&#x9700;&#x8981;&#x7684;&#x5185;&#x5b58;&#xff0c;&#x4f46;&#x662f;&#x5e76;&#x6ca1;&#x6709;&#x4e3a",{"_index":238,"title":{},"body":{"index.html#make-和-new":{}}}],["xff0c;&#x5b83;&#x4ece",{"_index":6986,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["xff0c;&#x5b83;&#x4eec;&#x5206;&#x522b;&#x5b9e;&#x73b0;&#x4e86",{"_index":6841,"title":{},"body":{"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["xff0c;&#x5b83;&#x4eec;&#x533a;&#x522b;&#xff0c;&#x4e00;&#x4e2a;&#x662f;&#x53d6;&#x6700;&#x63a5;&#x8fd1;&#x7684;&#xff0c;&#x4e00;&#x4e2a;&#x662f;&#x5411;&#x4e0b;&#x53d6;&#x6574;&#x3002",{"_index":3526,"title":{},"body":{"standards/time.html#Time":{}}}],["xff0c;&#x5b83;&#x4eec;&#x5bf9;&#x5e94;&#x7684;&#x6587;&#x4ef6;&#x540d;&#x5206;&#x522b;&#x662f;&#xff1a",{"_index":7333,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["xff0c;&#x5b83;&#x4f1a;&#x8bb0;&#x5f55;&#x5177;&#x4f53;&#x64cd;&#x4f5c;&#x3001;&#x6587;&#x4ef6;&#x8def;&#x5f84;&#x548c;&#x9519;&#x8bef;&#x539f;&#x56e0;&#x3002",{"_index":7397,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["xff0c;&#x5b83;&#x4f1a;&#x8fd4;&#x56de;&#x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#x6570;&#x3002;&#x5b83;&#x53ef;&#x80fd;&#x4f1a;&#x540c;&#x65f6;&#x5728;&#x672c;&#x6b21;&#x7684;&#x8c03",{"_index":6794,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["xff0c;&#x5b83;&#x5728;&#x5224;&#x65ad;&#x4e24;&#x4e2a;&#x53d8;&#x91cf;&#x662f;&#x5426;&#x76f8;&#x7b49;&#x65f6;&#x5341;&#x5206;&#x6709;&#x7528;&#x3002",{"_index":5040,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["xff0c;&#x5b83;&#x5b9e;&#x73b0;&#x4e86",{"_index":6901,"title":{},"body":{"standards/io/io.html#ReaderFrom-和-WriterTo":{}}}],["xff0c;&#x5b83;&#x5c06;&#x4ece",{"_index":7128,"title":{},"body":{"standards/io/io.html#TeeReader-函数":{}}}],["xff0c;&#x5b83;&#x5c31;&#x4f1a;&#x8fd4;&#x56de;&#x7f13;&#x5b58;&#x4e2d;&#x6240;&#x6709;&#x7684;&#x6570;&#x636e;&#x548c;&#x9519;&#x8bef;&#x672c;&#x8eab;&#xff08;&#x7ecf;&#x5e38;&#x662f",{"_index":5448,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff0c;&#x5b83;&#x5c31;&#x5fc5;&#x987b;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":6832,"title":{},"body":{"standards/io/io.html#Writer":{},"standards/io/io.html#ReaderAt-和-WriterAt":{}}}],["xff0c;&#x5b83;&#x63a5;&#x53d7;&#x4e00;&#x4e2a",{"_index":3830,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x5b83;&#x63d0;&#x4f9b;&#x7eb3;&#x79d2;&#x7ea7;&#x522b;&#x7684;&#x7cbe;&#x5ea6;&#x3002",{"_index":7540,"title":{},"body":{"standards/os/os.html#文件属性":{}}}],["xff0c;&#x5b83;&#x662f",{"_index":8212,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x5b83;&#x7684;&#x89e3;&#x91ca;&#x53d6;&#x51b3;&#x4e8",{"_index":6910,"title":{},"body":{"standards/io/io.html#Seeker":{}}}],["xff0c;&#x5b83;&#x8868;&#x793a;&#x6709;&#x4e00;&#x4e2a",{"_index":651,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["xff0c;&#x5b83;&#x8bfb;&#x53d6;&#x76ee;&#x5f55;&#x5e76;&#x8fd4;&#x56de;&#x6392;&#x597d;&#x5e8f;&#x7684;&#x6587;&#x4ef6;&#x548c;&#x5b50;&#x76ee;&#x5f55;&#x540d;&#xff08",{"_index":4811,"title":{},"body":{"standards/io/ioutil.html#ReadDir-函数":{}}}],["xff0c;&#x5b89;&#x88c5;/&#x91cd;&#x65b0;&#x5b89;&#x88c5;&#x8fd0;&#x884c;&#x6d4b;&#x8bd5;&#x6240;&#x9700;&#x7684;&#x4f9d;&#x8d56;&#x5305;&#xff0c;&#x4f46;&#x4e0d;&#x7f16;&#x8bd1;&#x548c;&#x8fd0;&#x884c;&#x6d4b;&#x8bd5;&#x4ee3;&#x7801;&#x3002",{"_index":4101,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x5b8c;&#x5168;&#x662f;&#x57fa;&#x4e8e;&#x5305;&#x4f9d;&#x8d56;&#x6027;&#x7684;&#x8003;&#x8651;&#xff0c",{"_index":9282,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["xff0c;&#x5b9a;&#x65f6;&#x5668;&#x65f6;&#x95f4;&#x5230;&#x65f6;&#xff0c;&#x4f1a;&#x8c03;&#x7528",{"_index":3564,"title":{},"body":{"standards/time.html#定时器":{}}}],["xff0c;&#x5b9e;&#x73b0;&#x4e86",{"_index":6976,"title":{},"body":{"standards/io/io.html#SectionReader-类型":{}}}],["xff0c;&#x5b9e;&#x9645;&#x4e0a;&#x662f",{"_index":8989,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x5bb9;&#x91cf;&#x4e3a",{"_index":2885,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff0c;&#x5bf9;&#x4e8e;&#x5176;&#x4e2d;&#x7684;&#x8bfb;&#x9501;&#x4e5f;&#x662f;&#x5982;&#x6b64;&#xff0c;&#x5e76;&#x4e14;&#x540c",{"_index":7866,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff0c;&#x5bf9;&#x5e94",{"_index":3715,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x5bf9;&#x5e94;&#x5173;&#x7cfb;&#xff1a",{"_index":2401,"title":{},"body":{"basic/var.html#变量":{}}}],["xff0c;&#x5c06",{"_index":409,"title":{},"body":{"advance/mm.html#内存块":{}}}],["xff0c;&#x5c06;&#x4f1a;&#x8df3;&#x8fc7;&#x8be5;&#x76ee;&#x5f55;&#x7684;&#x5185;&#x5bb9;&#x800c",{"_index":5806,"title":{},"body":{"standards/os/filepath.html#遍历目录":{}}}],["xff0c;&#x5c06;&#x5f97;&#x5230;&#x7684",{"_index":7684,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["xff0c;&#x5c06;&#x63a7;&#x5236;&#x8f6c;&#x79fb;&#x5230;&#x88ab;&#x6807;&#x8bb0;&#x7684;&#x8bed;&#x53e5;&#x3002;&#x901a;&#x5e38;&#x4e0e;&#x6761;&#x4ef6;&#x8bed;&#x53e5;&#x914d;&#x5408;&#x4f7f;&#x7528;&#x3002;&#x53ef;&#x7528;&#x6765;&#x5b9e;&#x73b0;&#x6761;&#x4ef6;&#x8f6c;&#x79fb;&#xff0c",{"_index":1112,"title":{},"body":{"basic/flow.html#for":{}}}],["xff0c;&#x5c31;&#x4f1a;&#x4f7f;&#x7f16;&#x8bd1;&#x5668;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x4f60;&#x7684;&#x5e94;&#x7528;&#x7684;&#x201c;&#x4fee;&#x6539;&#x201d;&#x7248;&#x3002",{"_index":8408,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["xff0c;&#x5c31;&#x53bb",{"_index":8315,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["xff0c;&#x5c31;&#x662f;&#x6709;&#x4e00;&#x5b9a;&#x98ce;&#x9669;&#x7684",{"_index":8165,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x5c31;&#x80af;&#x5b9a;&#x4e0d;&#x4f1a;&#x6709;&#x95ee;&#x9898;&#x3002",{"_index":8169,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x5c31;&#x88ab;&#x591a;&#x4e2a;&#x7528;&#x6237;&#x7ea7;&#x7ebf;&#x7a0b;&#x5171;&#x7528;&#x4e86;&#x3002;&#x56e0;&#x6b64;&#xff0c;&#x5bf9;&#x5b83;&#x7684;&#x64cd;&#x4f5c;&#x5c31;&#x4ea7;&#x751f;&#x4e86;&#x7ade;&#x6001;&#x6761;&#x4ef6;&#xff08;rac",{"_index":6373,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x5c3d;&#x91cf;&#x907f;&#x514d;&#x7a0b;&#x5e8f;&#x7684;&#x5d29;&#x6e83;&#x3002",{"_index":643,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["xff0c;&#x5e76;&#x4e14",{"_index":981,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["xff0c;&#x5e76;&#x4e14;&#x540c;&#x6837;&#x662f;&#x628a;&#x503c;&#x5148;&#x505a;&#x8f6c;&#x6362;&#x548c;&#x5c01;&#x88c5;&#x540e;&#x518d;&#x8fdb;&#x884c;&#x50a8;&#x5b58;&#x7684;&#x3002;&#x79f0;&#x4e3a",{"_index":8377,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["xff0c;&#x5e76;&#x4e14;&#x5b9e;&#x73b0",{"_index":2090,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["xff0c;&#x5e76;&#x4e14;&#x5f53;&#x65f6;&#x6240;&#x7528;&#x7684;&#x6700;&#x5927",{"_index":4190,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["xff0c;&#x5e76;&#x4e14;&#x9700;&#x8981;&#x4f20;&#x5165;&#x4e00;&#x4e2a;&#x6bd4;&#x8f83;&#x51fd;&#x6570;&#xff0c;&#x7528;&#x4e8e;&#x4e3a;&#x7a0b;&#x5e8f;&#x6bd4;&#x8f83;&#x4e24;&#x4e2a;&#x53d8;&#x91cf;&#x7684;&#x5927;&#x5c0f;&#xff0c;&#x56e0;&#x4e3a",{"_index":9295,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["xff0c;&#x5e76;&#x5c06",{"_index":3565,"title":{},"body":{"standards/time.html#定时器":{}}}],["xff0c;&#x5e76;&#x6839;&#x636e;&#x7c7b;&#x578b;&#x5b9a;&#x4e49",{"_index":2599,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["xff0c;&#x5e76;&#x68c0;&#x67e5",{"_index":710,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["xff0c;&#x5e76;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5982;&#x679c",{"_index":5948,"title":{},"body":{"standards/text/strings.html#字符串替换":{}}}],["xff0c;&#x5f53;&#x6211;&#x4eec;&#x4f20;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x503c;&#x5230;&#x88ab;&#x8c03;&#x7528;&#x51fd;&#x6570;&#x91cc;&#x9762;&#x65f6;&#xff0c;&#x5b9e;&#x9645;&#x4e0a;&#x662f;&#x4f20;&#x4e86;&#x8fd9;&#x4e2a;&#x503c;&#x7684;&#x4e00;&#x4efd",{"_index":3127,"title":{},"body":{"basic/function.html#参数":{}}}],["xff0c;&#x5f53;&#x7136;&#x4f1a;&#x6839;&#x636e;&#x76f8;&#x5e94;&#x7684;&#x6570;&#x636e;&#x4f38;&#x7f29;&#x3002;&#x4e5f;&#x6b63;&#x56e0;&#x4e3a;&#x5982;&#x6b64;&#xff0c;&#x53ef;&#x540c;&#x65f6;&#x8fd0;&#x884c;&#x6210;&#x5343",{"_index":6201,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x5f88;&#x4e11;&#x964b;&#x3002",{"_index":8069,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["xff0c;&#x5f88;&#x597d;&#x8bb0;&#xff1a;2006",{"_index":3516,"title":{},"body":{"standards/time.html#Time":{}}}],["xff0c;&#x5f97;&#x5230;&#x7684;&#x662f",{"_index":5982,"title":{},"body":{"standards/text/strings.html#分割字符串":{}}}],["xff0c;&#x5faa;&#x73af;&#x8bfb;&#x53d6;&#x65b0",{"_index":7113,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["xff0c;&#x60c5;&#x51b5;&#x8981;&#x7b80;&#x5355;&#x4e00;&#x4e9b;&#x3002;&#x65e0;&#x8bba;&#x662f;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x8fd8;&#x662f;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#xff0c;&#x4e00;&#x5f00;&#x59cb;&#x6267;&#x884c;&#x5c31;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x914d;&#x5bf9;&#x7684;&#x64cd;&#x4f5c;&#x4e5f;&#x5f00;&#x59cb;&#x6267;&#x884c;&#xff0c;&#x624d;&#x4f1a;&#x7ee7;&#x7eed;&#x4f20;&#x9012;&#x3002",{"_index":2981,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff0c;&#x60f3;&#x8981;&#x9002;&#x65f6;&#x5730;&#x4ece;&#x4fe1;&#x7bb1;&#x4e2d;&#x83b7;&#x53d6;&#x60c5;&#x62a5;&#xff0c;&#x7136;&#x540e;&#x901a;&#x77e5;&#x6211;&#x3002",{"_index":7929,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["xff0c;&#x6211;&#x4eec;&#x5728;&#x5ba2",{"_index":9047,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x6211;&#x4eec;&#x5f97;&#x5230",{"_index":9038,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x6216;&#x8005;&#x51fd;&#x6570;&#xff0c;&#x8981;&#x7ed9;&#x7c7b;&#x578b;&#x52a0;&#x4e0a",{"_index":267,"title":{},"body":{"index.html#类型转换":{}}}],["xff0c;&#x6216;&#x8005;&#x7ed1;&#x5b9a;&#x5230;&#x6587;&#x4ef6;&#x7684",{"_index":2484,"title":{},"body":{"standards/log.html#Logger":{}}}],["xff0c;&#x6240;&#x4ee5;&#x4e0b;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff0c",{"_index":2075,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["xff0c;&#x6240;&#x4ee5;&#x6027;&#x80fd;&#x4e00;&#x822c;&#x3002",{"_index":3753,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x628a",{"_index":9068,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x6240;&#x4ee5;&#x6253;&#x5370;&#x51fa;&#x6765;&#x7684;&#x7ed3;&#x679c;&#x5b8c;&#x5168;&#x4e0d;&#x540c;&#x3002",{"_index":2417,"title":{},"body":{"basic/var.html#简短声明":{}}}],["xff0c;&#x6240;&#x4ee5;&#x6700;&#x540e;&#x5b9e;&#x9645",{"_index":9035,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x6240;&#x4ee5;&#xff0c",{"_index":8341,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["xff0c;&#x624d;&#x662f;&#x53ef;&#x80fd;&#x4f1a;&#x51fa;&#x73b0;&#x5728;&#x63a5;&#x6536;&#x5668;&#x58f0;&#x660e;&#x91cc;&#x7684;&#x4e24;&#x79cd;&#x63a5;&#x6536;&#x5668;&#x3002;&#x6b64;&#x5916;&#xff0c;&#x4e3a;&#x4e86;&#x907f;&#x514d;&#x6b67;&#x4e49;&#xff0c;&#x5728;&#x58f0;&#x660e;&#x65b9;&#x6cd5;&#x65f6;&#xff0c",{"_index":1238,"title":{},"body":{"basic/oop.html#方法":{}}}],["xff0c;&#x6253;&#x5370;&#x6bcf;&#x4e2a;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x7684;&#x540d;&#x5b57;&#x548c;&#x8fd0;&#x884c;&#x65f6;&#x95f4;&#x3002",{"_index":4089,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x6307;&#x5b9a;&#x4e00;&#x4e2a;&#x6b63;&#x5219;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x53ea;&#x6709;&#x5339;&#x914d;&#x5230;&#x7684;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x540d;&#x624d;&#x4f1a;&#x88ab",{"_index":4090,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x6307;&#x5b9a;&#x7528;&#x4e8e;&#x8fd0;&#x884c;&#x6d4b;&#x8bd5;&#x7684;&#x53ef;&#x6267;&#x884c;&#x6587;&#x4ef6;&#x7684;&#x540d;&#x79f0;&#x3002;&#x8ffd;&#x52a0;&#x8be5;&#x6807;&#x8bb0;&#x4e0d;&#x4f1a;&#x5f71;&#x54cd;&#x6d4b;&#x8bd5;&#x4ee3;&#x7801;&#x7684;&#x8fd0;&#x884c;&#xff0c;&#x9664;&#x975e;&#x540c;&#x65f6;&#x8ffd;&#x52a0;&#x4e86;&#x6807;&#x8bb0",{"_index":4102,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x6307;&#x7684;&#x5c31;&#x662f;&#x5f53;&#x524d;&#x7a0b;&#x5e8f;&#x4e2d;&#x7684;&#x4e3b",{"_index":7874,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff0c;&#x6309;&#x987a;&#x5e8f;&#x505a;&#x4e86;&#x51e0;&#x4ef6;&#x4e8b;&#xff1a",{"_index":8973,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x63a5;&#x6536;&#x4e00;&#x4e2a",{"_index":4794,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["xff0c;&#x6587;&#x4ef6;&#x6a21;&#x5f0f;&#x4f4d;&#x5e38;&#x91cf;&#x5b9a;&#x4e49;&#x5728",{"_index":7363,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["xff0c;&#x65b9;&#x6cd5;&#x5185;&#x90e8;&#x5bf9",{"_index":1741,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["xff0c;&#x65e0;&#x7b26;&#x53f7",{"_index":3704,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x65e0;&#x7b26;&#x53f7;&#x6574;&#x578b;&#xff0c;&#x7528;&#x4e8e;&#x5b58;&#x653e;&#x4e00;&#x4e2a;&#x6307;&#x9488;&#xff0c;&#x6ca1;&#x6709;&#x6307;&#x5b9a;&#x5177;&#x4f53;&#x7684",{"_index":3725,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x65e0;&#x8bba;&#x662f;&#x5728;&#x6ce8;&#x518c;&#x8def;&#x7531;&#x8fd8;&#x662f;&#x63d0;&#x4f9b;&#x8bf7;&#x6c42;&#x670d;&#x52a1;&#x7684;&#x65f6;&#x5019;&#x3002",{"_index":9089,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["xff0c;&#x65e0;&#x9700;&#x4fee;&#x6539;&#x4f7f;&#x7528",{"_index":1246,"title":{},"body":{"basic/oop.html#方法":{}}}],["xff0c;&#x662f",{"_index":6820,"title":{},"body":{"standards/io/io.html#Reader":{}}}],["xff0c;&#x662f;&#x5bf9;&#x5e94;&#x6e90;&#x6587;&#x4ef6;&#x7ea7;&#x7684;&#x4f5c;&#x7528;&#x57df;&#xff0c;&#x53ea;&#x80fd;&#x5728;&#x5f53;&#x524d;&#x7684;&#x6e90;&#x6587;&#x4ef6;&#x4e2d;&#x8bbf;&#x95e",{"_index":2263,"title":{},"body":{"basic/scope.html#作用域":{}}}],["xff0c;&#x662f;&#x6709;&#x6761;&#x4ef6;&#x7684;&#x4ea4;&#x6362;&#x64cd;&#x4f5c;&#xff0c",{"_index":8020,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["xff0c;&#x6700;&#x540e",{"_index":8156,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x6700;&#x540e;&#x663e;&#x5f0f;&#x5730;&#x9000;&#x51fa;&#x5f53;&#x524d;&#x7684;&#x5faa;&#x73af;&#x3002;&#x5426;&#x5219;&#xff0c;&#x6211;&#x4eec;&#x5c31;&#x5148;&#x8ba9;&#x5f53;&#x524d;&#x7684",{"_index":6366,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x6709;&#x7b26;&#x53f7",{"_index":3706,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x672c;&#x65b9;&#x6cd5;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":7422,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["xff0c;&#x6765;&#x5f97;&#x5230",{"_index":7400,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["xff0c;&#x6bd4;&#x5982;&#x63a5;&#x6536;&#x8868;&#x8fbe;&#x5f0f;&#x3002",{"_index":2995,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff0c;&#x6bd4;&#x5982;&#xff1a",{"_index":216,"title":{},"body":{"index.html#空标识符":{},"basic/oop.html#String-方法":{}}}],["xff0c;&#x6d4b;&#x8bd5;&#x8986;&#x76d6;&#x7387;&#x3002",{"_index":4092,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x7136;&#x540e;&#x5728;&#x6bcf;&#x4e00;&#x4e2a;&#x6709;&#x5e38;&#x91cf;&#x58f0;&#x660e;&#x7684",{"_index":1362,"title":{},"body":{"basic/constant.html#iota":{}}}],["xff0c;&#x7136;&#x540e;&#x5c06;&#x7ed3;&#x679c;&#x8f6c;&#x4e3a;&#x5b9",{"_index":4951,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["xff0c;&#x7136;&#x540e;&#x6267",{"_index":9039,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x7136;&#x540e;&#x628a;&#x5b83;&#x4f20;&#x7ed9;&#x4e86;&#x51fd;&#x6570",{"_index":3211,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["xff0c;&#x7136;&#x540e;&#x901a;&#x8fc7",{"_index":7111,"title":{},"body":{"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["xff0c;&#x751f;&#x6210;&#x7528;&#x4e8e;&#x8fd0;&#x884c;&#x6d4b;&#x8bd5;&#x7684;&#x53ef;&#x6267;&#x884c;&#x6587;&#x4ef6;&#xff0c;&#x4f46;&#x4e0d;&#x6267;&#x884c;&#x5b83;&#x3002;&#x8fd9;&#x4e2a;&#x53ef;&#x6267;&#x884c;&#x6587;&#x4ef6;&#x4f1a;&#x88ab;&#x547d;&#x540d;&#x4e3a",{"_index":4097,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x7528;&#x4e8e;&#x4e2d;&#x65ad;&#x5f53;&#x524d",{"_index":1108,"title":{},"body":{"basic/flow.html#for":{}}}],["xff0c;&#x7528;&#x4e8e;&#x83b7;&#x53d6;&#x6743;&#x9650;&#x7684",{"_index":7395,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["xff0c;&#x7528;&#x4e8e;&#x89e3;&#x91ca;&#x4e3a;&#x5565;&#x4f1a;&#x5c0f;&#x4e8",{"_index":5503,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff0c;&#x7528;&#x5b8c;&#x4e86;&#x518d;&#x7b49;&#x5f85",{"_index":8317,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["xff0c;&#x76f4;&#x5230;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x4e2d;&#x7684;&#x8ba1;&#x6570;&#x5668;&#x5f52;&#x96f6",{"_index":8089,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["xff0c;&#x76f4;&#x5230;&#x5728",{"_index":7051,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["xff0c;&#x76f4;&#x63a5;&#x5b89;&#x88c5;&#x3002",{"_index":918,"title":{},"body":{"basic/env_config.html#安装":{}}}],["xff0c;&#x800c",{"_index":1320,"title":{},"body":{"basic/oop.html#String-方法":{},"standards/time.html#Time":{},"standards/os/filepath.html#解析路径名字符串":{},"standards/os/filepath.html#路径的切分和拼接":{}}}],["xff0c;&#x800c;&#x4e0d;&#x662f",{"_index":5441,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff0c;&#x800c;&#x4e0d;&#x662f;&#x76f4;&#x63a5;&#x4f7f;&#x7528",{"_index":9261,"title":{},"body":{"standards/data/sort.html#已经支持的内部数据类型排序":{}}}],["xff0c;&#x800c;&#x540d;&#x79f0;&#x90fd;&#x4e3a",{"_index":8226,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x800c;&#x5b9e;&#x9645;&#x4e0a;&#xff0c",{"_index":4795,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["xff0c;&#x800c;&#x662f",{"_index":9088,"title":{},"body":{"standards/net/http.html#自定义处理器":{}}}],["xff0c;&#x800c;&#x662f;&#x9ed8;&#x8ba4",{"_index":9012,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x800c;&#x76f8;&#x5e94;&#x7684",{"_index":4791,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["xff0c;&#x800c;&#x975e",{"_index":7056,"title":{},"body":{"standards/io/io.html#Copy-和-CopyN-函数":{}}}],["xff0c;&#x82e5;&#x62ff;&#x5230;&#x67d0;&#x503c;&#x7684;&#x6307;&#x9488;&#x53ef;&#x80fd;&#x4f1a;&#x7834;&#x574f;&#x7a0b;&#x5e8f;&#x7684;&#x4e00;&#x81f4;&#x6027;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x662f;&#x4e0d;&#x5b89;&#x5168;&#x7684;&#x3002;&#x7531;&#x4e8e;&#x5b57;&#x5178;&#x7684;&#x5185;&#x90e8;&#x673a;&#x5236;&#xff0c;&#x5bf9;&#x5b57;&#x5178;&#x7684;&#x7d22",{"_index":1774,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["xff0c;&#x8868;&#x793a;&#x4e0d;&#x5bf9;&#x7b26;&#x53f7;&#x94fe;&#x63a5;&#x89e3;&#x5f15;&#x7528;&#xff1b",{"_index":7661,"title":{},"body":{"standards/os/os.html#目录与链接":{}}}],["xff0c;&#x8868;&#x793a;&#x8be5;&#x51fd;&#x6570;&#x4f1a;&#x63a5;&#x6536;&#x4efb;&#x610f;&#x6570;&#x91cf;&#x7684;&#x8be5;&#x7c7b;&#x578b;&#x53c2;&#x6570;&#x3002",{"_index":3147,"title":{},"body":{"basic/function.html#可变参数":{}}}],["xff0c;&#x8981;&#x4fee;&#x6539;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5fc5;&#x987b;&#x5c06;&#x5176;&#x8f6c;&#x4e3a;&#x53ef;&#x53d8;&#x7c7b;&#x578b;&#xff08",{"_index":3741,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x8be5;&#x5207;&#x7247;&#x5f15;&#x7528;&#x7f13;&#x5b58;&#x4e2d;&#x524d",{"_index":5493,"title":{},"body":{"standards/io/bufio.html#bufio-Reader":{}}}],["xff0c;&#x8be5;&#x53c2;&#x6570;&#x7528;&#x4e8e;&#x4ee3;&#x8868;&#x5c06;&#x8981;&#x6269;&#x5145;&#x7684;&#x5b57;&#x8282;&#x6570;&#x91cf;&#x3002",{"_index":3832,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x8c03;&#x7528",{"_index":8929,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x8c03;&#x7528;&#x5c06;&#x4e22;&#x5f03;&#x8d85;&#x51fa;&#x90e8;&#x5206;&#xff0c;&#x82e5;&#x5c0f;&#x4e8e;&#x53c2;&#x6570",{"_index":7483,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["xff0c;&#x8c03;&#x7528;&#x5c06;&#x5728;&#x6587;&#x4ef6;&#x5c3e;&#x90e8;&#x6dfb;&#x52a0;&#x4e00;&#x7cfb;&#x5217;&#x7a7a;&#x5b57;&#x8282;&#x6216;&#x662f;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#x7a7a;&#x6d1e;&#x3002",{"_index":7484,"title":{},"body":{"standards/os/os.html#截断文件":{}}}],["xff0c;&#x8df3;&#x8fc7;&#x5f53;&#x524d;&#x5faa;&#xff0c;&#x7ee7;&#x7eed;&#x8fdb;&#x884c;&#x4e0b;&#x4e00;&#x8f6e;&#x5faa;&#x73af;&#x3002",{"_index":1111,"title":{},"body":{"basic/flow.html#for":{}}}],["xff0c;&#x8fd0;&#x884c;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x3002;&#x4f8b;&#x5982",{"_index":4093,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x8fd4;&#x56de",{"_index":1425,"title":{},"body":{"basic/map.html#map":{}}}],["xff0c;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":4790,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{}}}],["xff0c;&#x8fd4;&#x56de;&#x7684",{"_index":4445,"title":{},"body":{"standards/database/sql.html#sql-DB-的使用":{}}}],["xff0c;&#x8fd8;&#x62e5;&#x6709;&#x5f3a;&#x5927;&#x7684;&#x7528;&#x4e8e;&#x8c03;&#x5ea6",{"_index":6227,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x8fd9;&#x4e24;&#x4e2a;&#x51fd;&#x6570;&#x7684;&#x5b9e;&#x73b0;&#x3002",{"_index":7403,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["xff0c;&#x8fd9;&#x4e2a",{"_index":940,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["xff0c;&#x8fd9;&#x4e2a;&#x5c5e;&#x6027;&#x53ef;&#x4ee5;&#x5d4c;&#x5957;&#x5bfc;&#x822a;&#x9879;&#x3002",{"_index":2602,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["xff0c;&#x8fd9;&#x4e2a;&#x65b9;&#x6cd5;&#x5f88;&#x957f;&#xff0c;&#x91cc;&#x9762;&#x4e3b;&#x8981;&#x7684;&#x4e00;&#x53e5;&#xff1a",{"_index":9021,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x8fd9;&#x4e2a;&#x65f6;&#x5019",{"_index":4788,"title":{},"body":{"standards/io/ioutil.html#NopCloser-函数":{}}}],["xff0c;&#x8fd9;&#x4e2a;&#x6807;&#x8bb0;&#x7528;&#x4e8e;&#x8868;&#x660e;&#x9700;&#x8981;&#x6267;&#x884c;&#x54ea;&#x4e9b;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x8fd9;&#x540c;&#x6837;&#x4e5f;&#x662f;&#x4ee5;&#x51fd;&#x6570;&#x540d;&#x79f0;&#x4e3a;&#x4f9d;&#x636e;&#x7684;&#x3002;&#x8be5;&#x6807;&#x8bb0;&#x7684;&#x503c",{"_index":4181,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["xff0c;&#x8fd9;&#x4e2a;&#x9519;&#x8bef;&#x4ec",{"_index":8818,"title":{},"body":{"standards/net/http.html#Request":{}}}],["xff0c;&#x8fd9;&#x4e5f;&#x662f;&#x5b98;&#x65b9;&#x5e93;&#x63d0;&#x4f9b;&#x7684;&#x4e09;&#x4e2a;&#x67e5;&#x627e;&#x76f8;&#x5173;&#x51fd;&#x6570;&#x7684;&#x7684;&#x5199;&#x6cd5;&#x3002",{"_index":9315,"title":{},"body":{"standards/data/sort.html#interface-排序与查找":{}}}],["xff0c;&#x8fd9;&#x548c",{"_index":8920,"title":{},"body":{"standards/net/http.html#HTTP-Server":{}}}],["xff0c;&#x8fd9;&#x65f6;&#x5019;&#x53bb;&#x626b;&#x63cf;&#x80af;&#x5b9a;&#x662f;&#x5b89;&#x5168;&#x7684;&#xff0c",{"_index":510,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["xff0c;&#x8fd9;&#x662f;&#x4e3a;&#x4e86;&#x80fd;&#x591f;&#x5bb9;&#x7eb3;&#x6240;&#x6709;&#x7684;&#x6574;&#x578b;&#xff0c;&#x5728;&#x5b9e;&#x9645;&#x4f7f;&#x7528;&#x4e2d;&#xff0c;&#x53ef;&#x4ee5;&#x6839;&#x636e;&#x4f20;&#x9012;&#x7684",{"_index":4950,"title":{},"body":{"standards/text/strconv.html#字符串转为整型":{}}}],["xff0c;&#x8fd9;&#x662f;&#x53e6;&#x4e00;&#x79cd;&#x903b;&#x8f91;&#x5220;&#x9664;&#x7684;&#x65b9;&#x5f0f;&#x3002",{"_index":8394,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["xff0c;&#x8fd9;&#x662f;&#x56e0;&#x4e3a",{"_index":2925,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff0c;&#x8fd9;&#x662f;&#x963b;&#x585e;&#x5f0f;&#x7684;&#x3002",{"_index":550,"title":{},"body":{"advance/gc.html#何时触发-GC":{}}}],["xff0c;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#x5305;&#x540d;&#x662f",{"_index":2204,"title":{},"body":{"basic/package.html#包声明":{}}}],["xff0c;&#x8fd9;&#x79cd;&#x65b9;&#x5f0f;&#x521d;&#x59cb;&#x5316;&#x7684;&#x5207;&#x7247;&#x957f;&#x5ea6;&#x4e3a",{"_index":1914,"title":{},"body":{"basic/slice.html#切片操作":{}}}],["xff0c;&#x8fd9;&#x91cc",{"_index":301,"title":{},"body":{"index.html#类型断言":{}}}],["xff0c;&#x901a;&#x5e38;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x4e00;&#x4e2a",{"_index":3722,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x907f;&#x514d;&#x56e0;&#x4e3a;&#x590d;&#x5236;&#x9020;&#x6210;&#x9501;&#x64cd;&#x4f5c;&#x65e0;&#x6548;&#x3002",{"_index":1254,"title":{},"body":{"basic/oop.html#方法":{}}}],["xff0c;&#x907f;&#x514d;&#x7f16;&#x8bd1;&#x5668;&#x5206;&#x6790;&#x9519;&#x8bef",{"_index":268,"title":{},"body":{"index.html#类型转换":{}}}],["xff0c;&#x90a3;&#x4e48",{"_index":8815,"title":{},"body":{"standards/net/http.html#Request":{}}}],["xff0c;&#x90a3;&#x4e48;&#x5c31;&#x5728;&#x5524;&#x9192;&#x5b83;&#x4e4b;&#x540e;&#x91cd;&#x65b0;&#x9501;&#x5b9a;&#x5f53;&#x524d;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x57fa;&#x4e8e;&#x7684;&#x4e92;&#x65a5;&#x9501;&#x3002;&#x81ea;&#x6b64;&#x4e4b;&#x540e;&#xff0c;&#x5f53;&#x524d",{"_index":7943,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["xff0c;&#x90a3;&#x4e48;&#x8981;&#x5b9e;&#x73b0",{"_index":5302,"title":{},"body":{"standards/data/container.html#堆":{}}}],["xff0c;&#x90fd;&#x662f;&#x5982;&#x6b64;&#x3002",{"_index":3928,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x90fd;&#x6709;&#x826f;&#x597d;&#x7684;&#x652f;&#x6301;&#xff0c",{"_index":1539,"title":{},"body":{"basic/json.html#序列化":{}}}],["xff0c;&#x9488;&#x5bf9;&#x975e",{"_index":5810,"title":{},"body":{"standards/os/filepath.html#Windows-起作用的函数":{}}}],["xff0c;&#x9519;&#x8bef;&#x4e3a;&#xff1a",{"_index":6965,"title":{},"body":{"standards/io/io.html#其他接口":{}}}],["xff0c;&#x957f;&#x5ea6;&#x4e3a",{"_index":1872,"title":{},"body":{"basic/slice.html#slice":{}}}],["xff0c;&#x9700;&#x8981;&#x7684;&#x662f",{"_index":3523,"title":{},"body":{"standards/time.html#Time":{}}}],["xff0c;&#x9700;&#x8981;&#x8fdb;&#x884c;&#x53cd;&#x5c04;&#x7b49;&#x64cd;&#x4f5c;&#x3002;&#x5efa;&#x8bae;&#x4f7f;&#x7528",{"_index":4968,"title":{},"body":{"standards/text/strconv.html#整型转为字符串":{}}}],["xff0c;file",{"_index":5693,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["xff0c;go",{"_index":777,"title":{},"body":{"basic/array.html#数组":{},"basic/var.html#简短声明":{}}}],["xff0c;ieee",{"_index":3710,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;linux",{"_index":951,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["xff1a",{"_index":628,"title":{},"body":{"basic/error.html#error-类型":{},"basic/oop.html#封装":{},"basic/constant.html#常量":{},"basic/map.html#map":{},"basic/json.html#序列化":{},"basic/pointer.html#为什么需要指针":{},"basic/slice.html#slice":{},"theme/theme-usage.html#Quick-Start":{},"concurrent/channel.html#channel":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{},"standards/io/bufio.html#bufio-Reader":{},"standards/io/bufio.html#bufio-Writer":{},"standards/text/strings.html#判断是否包含字符串":{},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{},"standards/text/strings.html#字符串替换":{},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{},"standards/io/io.html#ReaderAt-和-WriterAt":{},"standards/io/io.html#ReaderFrom-和-WriterTo":{},"standards/io/io.html#Seeker":{},"standards/io/io.html#LimitedReader-类型":{},"standards/io/io.html#Copy-和-CopyN-函数":{},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{},"standards/os/os.html#目录与链接":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"standards/net/http.html#http":{},"standards/net/http.html#client":{},"standards/net/http.html#HTTP-Server":{},"standards/net/http.html#自定义处理器":{}}}],["xff1a;&#x4e3a;&#x6240;&#x6709",{"_index":419,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["xff1a;&#x521b;&#x5efa;&#x8005;&#x521b;&#x5efa;&#x7684;&#x4e34;&#x65f6;&#x6587;&#x4ef6;&#x548c;&#x4e34;&#x65f6;&#x76ee;&#x5f55;&#x8981;&#x8d1f;&#x8d23;&#x5220;&#x9664;&#x8fd9;&#x4e9b;&#x4e34;&#x65f6;&#x76ee;&#x5f55;&#x548c;&#x6587;&#x4ef6;&#x3002;&#x5982;&#x5220;&#x9664;&#x4e34;&#x65f6;&#x6587;&#x4ef6;&#xff1a",{"_index":4840,"title":{},"body":{"standards/io/ioutil.html#TempDir-和-TempFile-函数":{}}}],["xff1a;&#x524d;&#x8005;&#x4ece;&#x6587;&#x4ef6;&#x5f53;&#x524d;&#x504f;&#x79fb;&#x91cf;&#x5904;&#x8bfb;&#xff0c;&#x4e14;&#x4f1a;&#x6539;&#x53d8;&#x6587;&#x4ef6;&#x5f53;&#x524d;&#x7684;&#x504f;&#x79fb;&#x91cf;&#xff1b;&#x800c;&#x540e;&#x8005;&#x4ec",{"_index":7416,"title":{},"body":{"standards/os/os.html#文件-I-O":{}}}],["xff1a;&#x591a;&#x4e2a;&#x5730;&#x5740;&#x8fde;&#x7eed;&#x7684",{"_index":396,"title":{},"body":{"advance/mm.html#内存块":{}}}],["xff1a;&#x5982;&#x679c;&#x5bf9;&#x5e94",{"_index":1810,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["xff1a;&#x5c06",{"_index":399,"title":{},"body":{"advance/mm.html#内存块":{}}}],["xff1a;&#x65e5;&#x5fd7;&#x524d;&#x7f00;&#xff0c;&#x53ef;&#x4ee5;&#x662f;&#x4efb;&#x610f;&#x5b57;&#x7b26;&#x4e32;&#x3002",{"_index":2486,"title":{},"body":{"standards/log.html#Logger":{}}}],["xff1a;&#x65e5;&#x5fd7;&#x5305;&#x542b;&#x7684;&#x901a;&#x7528;&#x4fe1;&#x606f;&#x6807;&#x8bc6;&#x4f4d",{"_index":2487,"title":{},"body":{"standards/log.html#Logger":{}}}],["xff1a;&#x65e5;&#x5fd7;&#x8f93;&#x51fa;&#x7684",{"_index":2482,"title":{},"body":{"standards/log.html#Logger":{}}}],["xff1a;&#x7ba1;&#x7406;&#x95f2;&#x7f6e;&#x7684",{"_index":422,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["xff1a;&#x8fd0;&#x884c;&#x671f;&#x7684;&#x6bcf;&#x4e2a;&#x7ebf;&#x7a0b;&#x90fd;&#x4f1a;&#x7ed1;&#x5b9a;&#x4e00;&#x4e2a",{"_index":416,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["xff1b",{"_index":1087,"title":{},"body":{"basic/flow.html#for":{},"standards/time.html#时区":{},"basic/test.html#性能分析":{},"standards/io/bufio.html#bufio包中的数据类型":{},"standards/text/strings.html#strings":{},"standards/os/os.html#文件-I-O":{}}}],["xff1b;&#x5176;&#x4ed6;&#x4efb;&#x4f55;&#x60c5;&#x51b5;&#x4e0b;&#x90fd;&#x4e0d;&#x4f1a;&#x8fd4;&#x56de;&#x4ee5;&#x659c;&#x6760;&#x7ed3;&#x5c3e;&#x7684;&#x8def;&#x5f84;&#x3002",{"_index":5636,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["xff1b;&#x53cd;&#x4e4b;&#xff0c;&#x5982;&#x679c;&#x8def;&#x5f84;&#x4e2d;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x662f",{"_index":5686,"title":{},"body":{"standards/os/filepath.html#路径的切分和拼接":{}}}],["xff1b;&#x5426;&#x5219",{"_index":7018,"title":{},"body":{"standards/io/io.html#PipeReader-和-PipeWriter-类型":{}}}],["xff1b;&#x5982;&#x679c;&#x8def;&#x5f84;&#x662f;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x659c;&#x6746;&#x6784;&#x6210;&#x7684;&#xff0c;&#x4f1a;&#x8fd4;&#x56d",{"_index":5639,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["xff1b;&#x5982;&#x679c;&#x8def;&#x5f84;&#x7531",{"_index":5633,"title":{},"body":{"standards/os/filepath.html#解析路径名字符串":{}}}],["xff1b;&#x88ab;&#x4f20;&#x5165;&#x51fd;&#x6570;&#x7684;&#x53c2;&#x6570;&#x503c;&#x90fd;&#x4f1a;&#x88ab;&#x590d;&#x5236;&#xff0c;&#x50cf;&#x8fd9;&#x79cd;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x4e00;&#x65e6;&#x88ab;&#x4f20;&#x5165;&#x51fd;&#x6570;&#xff0c",{"_index":8011,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["xff1f",{"_index":6302,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-Once":{}}}],["xml",{"_index":1486,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["xx",{"_index":3640,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["xxx",{"_index":821,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["xxxxxx",{"_index":8567,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["xyz",{"_index":5902,"title":{},"body":{"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["x）打印字符串或切片时，在字节之间用空格隔开0",{"_index":4603,"title":{},"body":{"standards/io/fmt.html":{}}}],["y",{"_index":1173,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/struct.html":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#函数作为参数":{},"standards/time.html":{},"standards/time.html#Time":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{},"standards/data/math.html":{},"standards/data/math.html#幂次函数":{},"standards/data/math.html#其他函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"standards/data/sort.html":{}}}],["y&#xff0c;&#x5219;&#x8fd4;&#x56de",{"_index":6125,"title":{},"body":{"standards/data/math.html#其他函数":{}}}],["y&#xff0c;&#x8fd9;&#x91cc;&#x7684;&#x7b80;&#x77ed;&#x58f0;&#x660",{"_index":2420,"title":{},"body":{"basic/var.html#简短声明":{}}}],["y+3",{"_index":2394,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["y0(x",{"_index":6058,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["y1(x",{"_index":6059,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["y:0",{"_index":7704,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["y:1",{"_index":7707,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["yaml",{"_index":2132,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["yarn",{"_index":2534,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["year",{"_index":1495,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"standards/time.html":{},"standards/time.html#Time":{}}}],["yn(n",{"_index":6060,"title":{},"body":{"standards/data/math.html":{},"standards/data/math.html#其他函数":{}}}],["z",{"_index":1779,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{},"standards/time.html":{},"standards/time.html#时区":{},"standards/text/strings.html":{},"standards/text/strings.html#分割字符串":{}}}],["zappr.yaml",{"_index":2533,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["zero",{"_index":3271,"title":{},"body":{"standards/time.html":{},"standards/time.html#Time":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["zh",{"_index":8536,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}],["zh;q=0.8",{"_index":8538,"title":{},"body":{"standards/net/http.html":{},"standards/net/http.html#client":{}}}]],"pipeline":["stemmer"]},"store":{"index.html":{"title":"Golang 介绍","path":"\\golang-learn\\index.html","body":"Golang 介绍 Go 语言非常简单，只有 25 个关键字： var 和 const 声明变量和常量 package 和 import 声明所属包名和导入包。 func 用于定义函数和方法 return 用于从函数返回 defer 用于类似析构函数 go 用于并发 select 用于选择不同类型的通讯 interface 用于定义接口 struct 用于定义抽象数据类型 break 、 case 、 continue 、 for 、 fallthrough 、 else 、 if 、 switch 、 goto 、 default 流程控制语句 chan 用于 channel 通讯 type 用于声明自定义类型 map 用于声明 map 类型数据 range 用于读取 slice 、 map 、 channel 数据 数据类型 Go 语言的四类数据类型 基础类型，数值、字符串和布尔型 复合类型，数组和结构体 引用类型，指针、切片、字典、函数、通道 接口类型 三种文件 命令源码文件，如果一个源码文件声明属于 main 包，并且包含一个无参数声明且无结果声明的 main 函数，那么它就是命令源码文件。 库源码文件，库源码文件是不能被直接运行的源码文件，它仅用于存放程序实体，这些程序实体可以被其他代码使用 测试源码文件 package 在写 Go 语言的代码时，每个文件的头部都有一行 package 声明语句。比如 package main 。这个声明表示这个源 文件属于哪个包（类似其他语言的 modules 或者 libraries ）。 Go 语言的代码就是通过这个 package 来组织。 注释 使用 // 添加注释。一般我们会在包声明前添加注释，来对整个包挥着程序做整体的描述。 行分隔符 Go 中，一行代表一个语句结束，不需要以分号 ; 结尾。多个语句写在同一行，则必须使用 ; （不推荐使用）。 os.Args 程序的命令行参数可使用 os.Args 访问。 os.Args 是一个字符串的切片。我们打印看一下： 1 2 3 4 5 6 7 8 9 10 11 12 13 package main import ( \"fmt\" \"os\" ) // ++ 和 -- 都只能放在变量名,如 i ++ func main ()  for i := 1 ; i  len (os.Args); i ++  \tfmt.Println(os.Args[i])   然后运行： 1 go run args1.go arg1 arg2 arg3 空标识符 _ 代表空标识符， Go 不允许有无用的变量，空标识符可以作为忽略占位符 ，比如： 1 2 3 4 5 var s, sep string for _, arg := range os.Args[ 1 :]  \ts += sep + arg \tsep = \" \"  命名 所有命名只能以字母或者 _ 开头，可以包含字母，数字或者 _ 。区分大小写。 关键字不能定义变量名，如 func ， default 。 注意：函数内部定义的，只能在函数内部使用（函数级），在函数外部定义的（包级），可以在当前包的所有文件中是使用。 并且，是在函数外定义的名字，如果以大写字母开头，那么会被导出，也就是在包的外部也可以访问，所以定义名字时，要注意大小写。 声明 var 声明变量 const 声明常量 type 声明类型 func 声明函数 每个文件以 package 声明语句。比如 package main 。 make 和 new make 只能用于内建类型（ map 、 slice 和 channel ）的内存分配。 new 用于各种类型的内存分配 。 make 返回初始化后的（非零）值， new 返回指针 。 new 函数可以为引用类型分配内存，但这是不完整的创建。比如 map ，它仅分配了字典本身需要的内存，但是并没有为 字典内的健值对分配内存，因此无法正常工作 。 类型转换 Go 强制使用显示类型转换 。这样可以确定语句和表达式的明确含义。 类型转换在编译期完成，包括强制转换和隐式转换 。 1 2 3 a := 10 b := byte (a) c := a + int (b) // 混合类型表达式必须保证类型一致 类型转换用于将一种数据类型的变量转换为另外一种类型的变量： 1 类型名(表达式) 实例： 1 2 3 4 5 6 var sum int = 17 var count int = 5 var mean float32 mean = float32 (sum)/ float32 (count) fmt.Printf( \"mean 的值为: %f\\n\" ,mean) 对于整数类型值、整数常量之间的类型转换，原则上只要源值在目标类型的可表示范围内就是合法的。比如， uint8(255) 可以把无类型的常量 255 转换为 uint8 类型的值，是因为 255 在 [0, 255] 的范围内。 这种类型转换主要在 切换同一基础类型不同精度范围 时使用，比如我们要将 int 型转为 int64 类型时。 1 2 3 a := 100 b := byte (a) c := a + int (b) // 混合类型表达式，类型必须保持一致 在 Go 中，非布尔值不能当做 true/false 使用，这点和我常用的js不同： 1 2 3 4 5 x := 100 if x  // 错误 x 不是布尔值  如果 要转换为指针类型，或者单向 channel ，或者函数，要给类型加上 () ，避免编译器分析错误 ，如： 1 2 3 4 5 6 x := 100 (* int )(&amp;x) // *int 加括号，否则会被解析为*(int(&amp;x)) (- channel int )(c) ( func () ) (f) ( func () int ) (f) // 有返回值的函数其实可以不加括号，但是加括号的话，语义清晰 自定义类型 使用 type 自定义类型，一般出现在包一级，与变量一样，如果类型名字的首字母是大写，则在包外部也可以使用： 1 type 类型名字 底层类型 如不同温度单位分别定义为不同的类型： 1 2 3 4 5 6 7 8 9 10 11 12 type Celsius float64 // 摄氏温度 type Fahrenheit float64 // 华氏温度 const ( \tAbsoluteZeroC Celsius = -273.15 // 绝对零度 \tFreezingC Celsius = 0 // 结冰点温度 \tBoilingC Celsius = 100 // 沸水温度 ) func CToF (c Celsius) Fahrenheit  return Fahrenheit(c* 9 / 5 + 32 )  func FToC (f Fahrenheit) Celsius  return Celsius((f - 32 ) * 5 / 9 )  自定义类型虽然置顶了底层类型，但是只是底层数据结构相同，不会继承底层类型的其他信息，比如（方法）。 不能隐式转换，不能直接用于比较表达式 。 1 2 3 4 5 6 type data int var d data = 10 var x int = d // 错误：cannot use d (type data) as type int in assignment fmt.Println(d == x) // 错误：invalid operation: d == x (mismatched types data and int) 未命名类型 比如数组，切片，字典，通道等类型与内部具体的元素类型和长度等属性有关，所以叫做 未命名类型 （unnamed type）。 类型断言 断言，顾名思义就是果断的去猜测一个未知的事物。在 go 语言中， interface{} 就是这个神秘的未知类型，其 断言操作就是用来 判断 interface{} 的类型 。因为 interface{} 是个未知类型，在编译时无法确定，所以类型断言在运行时确定。 Go 语言里面有一个语法，可以直接 判断是否是该类型的变量： value, ok = x.(T) ，这里 value 就是变量的值， ok 是 一个 bool 类型， x 是 interface{} 变量， T 是断言的类型。 该语法返回两个参数，第一个参数是 x 转化为 T 类型后的变量，第二个值是一个布尔值，若为 true 则表示断言成功， false 则表示断言失败。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // comma-ok for index, element := range list  \t if value, ok := element.( int ); ok  \t\tfmt.Printf( \"list[%d] is an int and its value is %d\\n\" , index, value) \t else if value, ok := element.( string ); ok  \t\tfmt.Printf( \"list[%d] is a string and its value is %s\\n\" , index, value) \t else if value, ok := element.(Person); ok  \t\tfmt.Printf( \"list[%d] is a Person and its value is %s\\n\" , index, value) \t else  \t\tfmt.Printf( \"list[%d] is of a different type\\n\" , index) \t  // 或者 使用 switch for index, element := range list \t switch value := element.( type )  \t\t case int : \t\t\tfmt.Printf( \"list[%d] is an int and its value is %d\\n\" , index, value) \t\t case string : \t\t\tfmt.Printf( \"list[%d] is a string and its value is %s\\n\" , index, value) \t\t case Person: \t\t\tfmt.Printf( \"list[%d] is a Person and its value is %s\\n\" , index, value) \t\t default : \t\t\tfmt.Println( \"list[%d] is of a different type\" , index) \t  注意， x.(type) 语法不能在 switch 外的任何逻辑里面使用，如果你要在 switch 外面判断一个类型就使用 comma-ok 。 生命周期 对于在包一级声明的变量，它们的生命周期和程序的运行周期是一致的。 局部变量（包括函数的参数和返回值也是局部变量）的生命周期则是动态的：每次从创建一个新变量的声明语句开始， 直到该变量不再被引用为止，然后变量的存储空间可能被回收。 编码 Go 语言的源码文件必须使用 UTF-8 编码格式进行存储。如果源码文件中出现了非 UTF-8 编码的字符，那么在构建、安装以及运行的时候， go 命令就会报告错误“illegal UTF-8 encoding”。 ASCII 编码 ASCII 是英文“American Standard Code for Information Interchange”的缩写，中文译为美国信息交换标准代码。 ASCII 编码方案使用单个字节（byte）的二进制数来编码一个字符。标准的 ASCII 编码用一个字节的最高比特（bit）位作为奇偶校验位， 而扩展的 ASCII 编码则将此位也用于表示字符。ASCII 编码支持的可打印字符和控制字符的集合也被叫做 ASCII 编码集。 unicode 编码 unicode 编码规范，实际上是另一个更加通用的、针对书面字符和文本的字符编码标准。它为世界上现存的所有自然语言中的每一个字符， 都设定了一个唯一的二进制编码 。它定义了不同自然语言的文本数据在国际间交换的统一方式，并为全球化软件创建了一个重要的基础。 Unicode 编码规范通常使用十六进制表示法来表示 Unicode 代码点的整数值，并使用“U+”作为前缀。比如，英文字母字符“a”的 Unicode 代码点是 U+0061 。在 Unicode 编码规范中，一个字符能且只能由与它对应的那个代码点表示。 Unicode 编码规范提供了三种不同的编码格式，即： UTF-8 、 UTF-16 和 UTF-32 。其中的 UTF 是 UCS Transformation Format 的缩写。 而 UCS 又是 Universal Character Set 的缩写，但也可以代表 Unicode Character Set。所以，UTF 也可以被翻译为 Unicode 转换格式。 它代表的是字符与字节序列之间的转换方式。 在这几种编码格式的名称中， “-”右边的整数的含义是，以多少个比特位作为一个编码单元 。以 UTF-8 为例，它会以 8 个比特，也就是一个字节， 作为一个编码单元。它与标准的 ASCII 编码是完全兼容的。也就是说，在 [0x00, 0x7F] 的范围内，这两种编码表示的字符都是相同的。 这也是 UTF-8 编码格式的一个巨大优势。 UTF-8 是一种可变宽的编码方案 。换句话说， 它会用一个或多个字节的二进制数来表示某个字符，最多使用四个字节 。比如，对于一个英文字符， 它仅用一个字节的二进制数就可以表示，而对于一个中文字符，它需要使用三个字节才能够表示。不论怎样，一个受支持的字符总是可以由 UTF-8 编码 为一个字节序列。以下会简称后者为 UTF-8 编码值。"},"index.html#Golang-介绍":{"title":"Golang &#x4ECB;&#x7ECD;","path":"\\golang-learn\\index.html#Golang-介绍","body":"Go &#x8BED;&#x8A00;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x6709; 25 &#x4E2A;&#x5173;&#x952E;&#x5B57;&#xFF1A; var &#x548C; const &#x58F0;&#x660E;&#x53D8;&#x91CF;&#x548C;&#x5E38;&#x91CF; package &#x548C; import &#x58F0;&#x660E;&#x6240;&#x5C5E;&#x5305;&#x540D;&#x548C;&#x5BFC;&#x5165;&#x5305;&#x3002; func &#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x51FD;&#x6570;&#x548C;&#x65B9;&#x6CD5; return &#x7528;&#x4E8E;&#x4ECE;&#x51FD;&#x6570;&#x8FD4;&#x56DE; defer &#x7528;&#x4E8E;&#x7C7B;&#x4F3C;&#x6790;&#x6784;&#x51FD;&#x6570; go &#x7528;&#x4E8E;&#x5E76;&#x53D1; select &#x7528;&#x4E8E;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x901A;&#x8BAF; interface &#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x63A5;&#x53E3; struct &#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x62BD;&#x8C61;&#x6570;&#x636E;&#x7C7B;&#x578B; break &#x3001; case &#x3001; continue &#x3001; for &#x3001; fallthrough &#x3001; else &#x3001; if &#x3001; switch &#x3001; goto &#x3001; default &#x6D41;&#x7A0B;&#x63A7;&#x5236;&#x8BED;&#x53E5; chan &#x7528;&#x4E8E; channel &#x901A;&#x8BAF; type &#x7528;&#x4E8E;&#x58F0;&#x660E;&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B; map &#x7528;&#x4E8E;&#x58F0;&#x660E; map &#x7C7B;&#x578B;&#x6570;&#x636E; range &#x7528;&#x4E8E;&#x8BFB;&#x53D6; slice &#x3001; map &#x3001; channel &#x6570;&#x636E;"},"index.html#数据类型":{"title":"&#x6570;&#x636E;&#x7C7B;&#x578B;","path":"\\golang-learn\\index.html#数据类型","body":"Go &#x8BED;&#x8A00;&#x7684;&#x56DB;&#x7C7B;&#x6570;&#x636E;&#x7C7B;&#x578B; &#x57FA;&#x7840;&#x7C7B;&#x578B;&#xFF0C;&#x6570;&#x503C;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5E03;&#x5C14;&#x578B; &#x590D;&#x5408;&#x7C7B;&#x578B;&#xFF0C;&#x6570;&#x7EC4;&#x548C;&#x7ED3;&#x6784;&#x4F53; &#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF0C;&#x6307;&#x9488;&#x3001;&#x5207;&#x7247;&#x3001;&#x5B57;&#x5178;&#x3001;&#x51FD;&#x6570;&#x3001;&#x901A;&#x9053; &#x63A5;&#x53E3;&#x7C7B;&#x578B;"},"index.html#三种文件":{"title":"&#x4E09;&#x79CD;&#x6587;&#x4EF6;","path":"\\golang-learn\\index.html#三种文件","body":"&#x547D;&#x4EE4;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x58F0;&#x660E;&#x5C5E;&#x4E8E; main &#x5305;&#xFF0C;&#x5E76;&#x4E14;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x65E0;&#x53C2;&#x6570;&#x58F0;&#x660E;&#x4E14;&#x65E0;&#x7ED3;&#x679C;&#x58F0;&#x660E;&#x7684; main &#x51FD;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5C31;&#x662F;&#x547D;&#x4EE4;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x3002; &#x5E93;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#xFF0C;&#x5E93;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x662F;&#x4E0D;&#x80FD;&#x88AB;&#x76F4;&#x63A5;&#x8FD0;&#x884C;&#x7684;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x4EC5;&#x7528;&#x4E8E;&#x5B58;&#x653E;&#x7A0B;&#x5E8F;&#x5B9E;&#x4F53;&#xFF0C;&#x8FD9;&#x4E9B;&#x7A0B;&#x5E8F;&#x5B9E;&#x4F53;&#x53EF;&#x4EE5;&#x88AB;&#x5176;&#x4ED6;&#x4EE3;&#x7801;&#x4F7F;&#x7528; &#x6D4B;&#x8BD5;&#x6E90;&#x7801;&#x6587;&#x4EF6;"},"index.html#package":{"title":"package","path":"\\golang-learn\\index.html#package","body":"&#x5728;&#x5199; Go &#x8BED;&#x8A00;&#x7684;&#x4EE3;&#x7801;&#x65F6;&#xFF0C;&#x6BCF;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x5934;&#x90E8;&#x90FD;&#x6709;&#x4E00;&#x884C; package &#x58F0;&#x660E;&#x8BED;&#x53E5;&#x3002;&#x6BD4;&#x5982; package main &#x3002;&#x8FD9;&#x4E2A;&#x58F0;&#x660E;&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x6E90; &#x6587;&#x4EF6;&#x5C5E;&#x4E8E;&#x54EA;&#x4E2A;&#x5305;&#xFF08;&#x7C7B;&#x4F3C;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x7684; modules &#x6216;&#x8005; libraries &#xFF09;&#x3002; Go &#x8BED;&#x8A00;&#x7684;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A; package &#x6765;&#x7EC4;&#x7EC7;&#x3002;"},"index.html#注释":{"title":"&#x6CE8;&#x91CA;","path":"\\golang-learn\\index.html#注释","body":"&#x4F7F;&#x7528; // &#x6DFB;&#x52A0;&#x6CE8;&#x91CA;&#x3002;&#x4E00;&#x822C;&#x6211;&#x4EEC;&#x4F1A;&#x5728;&#x5305;&#x58F0;&#x660E;&#x524D;&#x6DFB;&#x52A0;&#x6CE8;&#x91CA;&#xFF0C;&#x6765;&#x5BF9;&#x6574;&#x4E2A;&#x5305;&#x6325;&#x7740;&#x7A0B;&#x5E8F;&#x505A;&#x6574;&#x4F53;&#x7684;&#x63CF;&#x8FF0;&#x3002;"},"index.html#行分隔符":{"title":"&#x884C;&#x5206;&#x9694;&#x7B26;","path":"\\golang-learn\\index.html#行分隔符","body":"Go &#x4E2D;&#xFF0C;&#x4E00;&#x884C;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x8BED;&#x53E5;&#x7ED3;&#x675F;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x4EE5;&#x5206;&#x53F7; ; &#x7ED3;&#x5C3E;&#x3002;&#x591A;&#x4E2A;&#x8BED;&#x53E5;&#x5199;&#x5728;&#x540C;&#x4E00;&#x884C;&#xFF0C;&#x5219;&#x5FC5;&#x987B;&#x4F7F;&#x7528; ; &#xFF08;&#x4E0D;&#x63A8;&#x8350;&#x4F7F;&#x7528;&#xFF09;&#x3002;"},"index.html#os-Args":{"title":"os.Args","path":"\\golang-learn\\index.html#os-Args","body":"&#x7A0B;&#x5E8F;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x53EF;&#x4F7F;&#x7528; os.Args &#x8BBF;&#x95EE;&#x3002; os.Args &#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5207;&#x7247;&#x3002;&#x6211;&#x4EEC;&#x6253;&#x5370;&#x770B;&#x4E00;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 package main import ( fmt os ) // ++ &#x548C; -- &#x90FD;&#x53EA;&#x80FD;&#x653E;&#x5728;&#x53D8;&#x91CF;&#x540D;,&#x5982; i ++ func main () { for i := 1 ; i  len (os.Args); i ++ { \tfmt.Println(os.Args[i]) } } &#x7136;&#x540E;&#x8FD0;&#x884C;&#xFF1A; 1 go run args1.go arg1 arg2 arg3"},"index.html#空标识符":{"title":"&#x7A7A;&#x6807;&#x8BC6;&#x7B26;","path":"\\golang-learn\\index.html#空标识符","body":"_ &#x4EE3;&#x8868;&#x7A7A;&#x6807;&#x8BC6;&#x7B26;&#xFF0C; Go &#x4E0D;&#x5141;&#x8BB8;&#x6709;&#x65E0;&#x7528;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x7A7A;&#x6807;&#x8BC6;&#x7B26;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x5FFD;&#x7565;&#x5360;&#x4F4D;&#x7B26; &#xFF0C;&#x6BD4;&#x5982;&#xFF1A; 1 2 3 4 5 var s, sep string for _, arg := range os.Args[ 1 :] { \ts += sep + arg \tsep =   }"},"index.html#命名":{"title":"&#x547D;&#x540D;","path":"\\golang-learn\\index.html#命名","body":"&#x6240;&#x6709;&#x547D;&#x540D;&#x53EA;&#x80FD;&#x4EE5;&#x5B57;&#x6BCD;&#x6216;&#x8005; _ &#x5F00;&#x5934;&#xFF0C;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x5B57;&#x6BCD;&#xFF0C;&#x6570;&#x5B57;&#x6216;&#x8005; _ &#x3002;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#x3002; &#x5173;&#x952E;&#x5B57;&#x4E0D;&#x80FD;&#x5B9A;&#x4E49;&#x53D8;&#x91CF;&#x540D;&#xFF0C;&#x5982; func &#xFF0C; default &#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x7684;&#xFF0C;&#x53EA;&#x80FD;&#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#xFF08;&#x51FD;&#x6570;&#x7EA7;&#xFF09;&#xFF0C;&#x5728;&#x51FD;&#x6570;&#x5916;&#x90E8;&#x5B9A;&#x4E49;&#x7684;&#xFF08;&#x5305;&#x7EA7;&#xFF09;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5F53;&#x524D;&#x5305;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x4E2D;&#x662F;&#x4F7F;&#x7528;&#x3002; &#x5E76;&#x4E14;&#xFF0C;&#x662F;&#x5728;&#x51FD;&#x6570;&#x5916;&#x5B9A;&#x4E49;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x5982;&#x679C;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x88AB;&#x5BFC;&#x51FA;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x5305;&#x7684;&#x5916;&#x90E8;&#x4E5F;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#xFF0C;&#x6240;&#x4EE5;&#x5B9A;&#x4E49;&#x540D;&#x5B57;&#x65F6;&#xFF0C;&#x8981;&#x6CE8;&#x610F;&#x5927;&#x5C0F;&#x5199;&#x3002;"},"index.html#声明":{"title":"&#x58F0;&#x660E;","path":"\\golang-learn\\index.html#声明","body":"var &#x58F0;&#x660E;&#x53D8;&#x91CF; const &#x58F0;&#x660E;&#x5E38;&#x91CF; type &#x58F0;&#x660E;&#x7C7B;&#x578B; func &#x58F0;&#x660E;&#x51FD;&#x6570; &#x6BCF;&#x4E2A;&#x6587;&#x4EF6;&#x4EE5; package &#x58F0;&#x660E;&#x8BED;&#x53E5;&#x3002;&#x6BD4;&#x5982; package main &#x3002;"},"index.html#make-和-new":{"title":"make &#x548C; new","path":"\\golang-learn\\index.html#make-和-new","body":"make &#x53EA;&#x80FD;&#x7528;&#x4E8E;&#x5185;&#x5EFA;&#x7C7B;&#x578B;&#xFF08; map &#x3001; slice &#x548C; channel &#xFF09;&#x7684;&#x5185;&#x5B58;&#x5206;&#x914D;&#x3002; new &#x7528;&#x4E8E;&#x5404;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x5185;&#x5B58;&#x5206;&#x914D; &#x3002; make &#x8FD4;&#x56DE;&#x521D;&#x59CB;&#x5316;&#x540E;&#x7684;&#xFF08;&#x975E;&#x96F6;&#xFF09;&#x503C;&#xFF0C; new &#x8FD4;&#x56DE;&#x6307;&#x9488; &#x3002; new &#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x4E3A;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C;&#x4F46;&#x8FD9;&#x662F;&#x4E0D;&#x5B8C;&#x6574;&#x7684;&#x521B;&#x5EFA;&#x3002;&#x6BD4;&#x5982; map &#xFF0C;&#x5B83;&#x4EC5;&#x5206;&#x914D;&#x4E86;&#x5B57;&#x5178;&#x672C;&#x8EAB;&#x9700;&#x8981;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x4F46;&#x662F;&#x5E76;&#x6CA1;&#x6709;&#x4E3A; &#x5B57;&#x5178;&#x5185;&#x7684;&#x5065;&#x503C;&#x5BF9;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C;&#x56E0;&#x6B64;&#x65E0;&#x6CD5;&#x6B63;&#x5E38;&#x5DE5;&#x4F5C; &#x3002;"},"index.html#类型转换":{"title":"&#x7C7B;&#x578B;&#x8F6C;&#x6362;","path":"\\golang-learn\\index.html#类型转换","body":"Go &#x5F3A;&#x5236;&#x4F7F;&#x7528;&#x663E;&#x793A;&#x7C7B;&#x578B;&#x8F6C;&#x6362; &#x3002;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x8BED;&#x53E5;&#x548C;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x660E;&#x786E;&#x542B;&#x4E49;&#x3002; &#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x5B8C;&#x6210;&#xFF0C;&#x5305;&#x62EC;&#x5F3A;&#x5236;&#x8F6C;&#x6362;&#x548C;&#x9690;&#x5F0F;&#x8F6C;&#x6362; &#x3002; 1 2 3 a := 10 b := byte (a) c := a + int (b) // &#x6DF7;&#x5408;&#x7C7B;&#x578B;&#x8868;&#x8FBE;&#x5F0F;&#x5FC5;&#x987B;&#x4FDD;&#x8BC1;&#x7C7B;&#x578B;&#x4E00;&#x81F4; &#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x7528;&#x4E8E;&#x5C06;&#x4E00;&#x79CD;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x8F6C;&#x6362;&#x4E3A;&#x53E6;&#x5916;&#x4E00;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#xFF1A; 1 &#x7C7B;&#x578B;&#x540D;(&#x8868;&#x8FBE;&#x5F0F;) &#x5B9E;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 var sum int = 17 var count int = 5 var mean float32 mean = float32 (sum)/ float32 (count) fmt.Printf( mean &#x7684;&#x503C;&#x4E3A;: %f\\n ,mean) &#x5BF9;&#x4E8E;&#x6574;&#x6570;&#x7C7B;&#x578B;&#x503C;&#x3001;&#x6574;&#x6570;&#x5E38;&#x91CF;&#x4E4B;&#x95F4;&#x7684;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#xFF0C;&#x539F;&#x5219;&#x4E0A;&#x53EA;&#x8981;&#x6E90;&#x503C;&#x5728;&#x76EE;&#x6807;&#x7C7B;&#x578B;&#x7684;&#x53EF;&#x8868;&#x793A;&#x8303;&#x56F4;&#x5185;&#x5C31;&#x662F;&#x5408;&#x6CD5;&#x7684;&#x3002;&#x6BD4;&#x5982;&#xFF0C; uint8(255) &#x53EF;&#x4EE5;&#x628A;&#x65E0;&#x7C7B;&#x578B;&#x7684;&#x5E38;&#x91CF; 255 &#x8F6C;&#x6362;&#x4E3A; uint8 &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x662F;&#x56E0;&#x4E3A; 255 &#x5728; [0, 255] &#x7684;&#x8303;&#x56F4;&#x5185;&#x3002; &#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x4E3B;&#x8981;&#x5728; &#x5207;&#x6362;&#x540C;&#x4E00;&#x57FA;&#x7840;&#x7C7B;&#x578B;&#x4E0D;&#x540C;&#x7CBE;&#x5EA6;&#x8303;&#x56F4; &#x65F6;&#x4F7F;&#x7528;&#xFF0C;&#x6BD4;&#x5982;&#x6211;&#x4EEC;&#x8981;&#x5C06; int &#x578B;&#x8F6C;&#x4E3A; int64 &#x7C7B;&#x578B;&#x65F6;&#x3002; 1 2 3 a := 100 b := byte (a) c := a + int (b) // &#x6DF7;&#x5408;&#x7C7B;&#x578B;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x4FDD;&#x6301;&#x4E00;&#x81F4; &#x5728; Go &#x4E2D;&#xFF0C;&#x975E;&#x5E03;&#x5C14;&#x503C;&#x4E0D;&#x80FD;&#x5F53;&#x505A; true/false &#x4F7F;&#x7528;&#xFF0C;&#x8FD9;&#x70B9;&#x548C;&#x6211;&#x5E38;&#x7528;&#x7684;js&#x4E0D;&#x540C;&#xFF1A; 1 2 3 4 5 x := 100 if x { // &#x9519;&#x8BEF; x &#x4E0D;&#x662F;&#x5E03;&#x5C14;&#x503C; } &#x5982;&#x679C; &#x8981;&#x8F6C;&#x6362;&#x4E3A;&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF0C;&#x6216;&#x8005;&#x5355;&#x5411; channel &#xFF0C;&#x6216;&#x8005;&#x51FD;&#x6570;&#xFF0C;&#x8981;&#x7ED9;&#x7C7B;&#x578B;&#x52A0;&#x4E0A; () &#xFF0C;&#x907F;&#x514D;&#x7F16;&#x8BD1;&#x5668;&#x5206;&#x6790;&#x9519;&#x8BEF; &#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 6 x := 100 (* int )(&amp;x) // *int &#x52A0;&#x62EC;&#x53F7;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x88AB;&#x89E3;&#x6790;&#x4E3A;*(int(&amp;x)) (- channel int )(c) ( func () ) (f) ( func () int ) (f) // &#x6709;&#x8FD4;&#x56DE;&#x503C;&#x7684;&#x51FD;&#x6570;&#x5176;&#x5B9E;&#x53EF;&#x4EE5;&#x4E0D;&#x52A0;&#x62EC;&#x53F7;&#xFF0C;&#x4F46;&#x662F;&#x52A0;&#x62EC;&#x53F7;&#x7684;&#x8BDD;&#xFF0C;&#x8BED;&#x4E49;&#x6E05;&#x6670;"},"index.html#自定义类型":{"title":"&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;","path":"\\golang-learn\\index.html#自定义类型","body":"&#x4F7F;&#x7528; type &#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;&#xFF0C;&#x4E00;&#x822C;&#x51FA;&#x73B0;&#x5728;&#x5305;&#x4E00;&#x7EA7;&#xFF0C;&#x4E0E;&#x53D8;&#x91CF;&#x4E00;&#x6837;&#xFF0C;&#x5982;&#x679C;&#x7C7B;&#x578B;&#x540D;&#x5B57;&#x7684;&#x9996;&#x5B57;&#x6BCD;&#x662F;&#x5927;&#x5199;&#xFF0C;&#x5219;&#x5728;&#x5305;&#x5916;&#x90E8;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF1A; 1 type &#x7C7B;&#x578B;&#x540D;&#x5B57; &#x5E95;&#x5C42;&#x7C7B;&#x578B; &#x5982;&#x4E0D;&#x540C;&#x6E29;&#x5EA6;&#x5355;&#x4F4D;&#x5206;&#x522B;&#x5B9A;&#x4E49;&#x4E3A;&#x4E0D;&#x540C;&#x7684;&#x7C7B;&#x578B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 type Celsius float64 // &#x6444;&#x6C0F;&#x6E29;&#x5EA6; type Fahrenheit float64 // &#x534E;&#x6C0F;&#x6E29;&#x5EA6; const ( \tAbsoluteZeroC Celsius = -273.15 // &#x7EDD;&#x5BF9;&#x96F6;&#x5EA6; \tFreezingC Celsius = 0 // &#x7ED3;&#x51B0;&#x70B9;&#x6E29;&#x5EA6; \tBoilingC Celsius = 100 // &#x6CB8;&#x6C34;&#x6E29;&#x5EA6; ) func CToF (c Celsius) Fahrenheit { return Fahrenheit(c* 9 / 5 + 32 ) } func FToC (f Fahrenheit) Celsius { return Celsius((f - 32 ) * 5 / 9 ) } &#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;&#x867D;&#x7136;&#x7F6E;&#x9876;&#x4E86;&#x5E95;&#x5C42;&#x7C7B;&#x578B;&#xFF0C;&#x4F46;&#x662F;&#x53EA;&#x662F;&#x5E95;&#x5C42;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x76F8;&#x540C;&#xFF0C;&#x4E0D;&#x4F1A;&#x7EE7;&#x627F;&#x5E95;&#x5C42;&#x7C7B;&#x578B;&#x7684;&#x5176;&#x4ED6;&#x4FE1;&#x606F;&#xFF0C;&#x6BD4;&#x5982;&#xFF08;&#x65B9;&#x6CD5;&#xFF09;&#x3002; &#x4E0D;&#x80FD;&#x9690;&#x5F0F;&#x8F6C;&#x6362;&#xFF0C;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x7528;&#x4E8E;&#x6BD4;&#x8F83;&#x8868;&#x8FBE;&#x5F0F; &#x3002; 1 2 3 4 5 6 type data int var d data = 10 var x int = d // &#x9519;&#x8BEF;&#xFF1A;cannot use d (type data) as type int in assignment fmt.Println(d == x) // &#x9519;&#x8BEF;&#xFF1A;invalid operation: d == x (mismatched types data and int)"},"index.html#未命名类型":{"title":"&#x672A;&#x547D;&#x540D;&#x7C7B;&#x578B;","path":"\\golang-learn\\index.html#未命名类型","body":"&#x6BD4;&#x5982;&#x6570;&#x7EC4;&#xFF0C;&#x5207;&#x7247;&#xFF0C;&#x5B57;&#x5178;&#xFF0C;&#x901A;&#x9053;&#x7B49;&#x7C7B;&#x578B;&#x4E0E;&#x5185;&#x90E8;&#x5177;&#x4F53;&#x7684;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x548C;&#x957F;&#x5EA6;&#x7B49;&#x5C5E;&#x6027;&#x6709;&#x5173;&#xFF0C;&#x6240;&#x4EE5;&#x53EB;&#x505A; &#x672A;&#x547D;&#x540D;&#x7C7B;&#x578B; &#xFF08;unnamed type&#xFF09;&#x3002;"},"index.html#类型断言":{"title":"&#x7C7B;&#x578B;&#x65AD;&#x8A00;","path":"\\golang-learn\\index.html#类型断言","body":"&#x65AD;&#x8A00;&#xFF0C;&#x987E;&#x540D;&#x601D;&#x4E49;&#x5C31;&#x662F;&#x679C;&#x65AD;&#x7684;&#x53BB;&#x731C;&#x6D4B;&#x4E00;&#x4E2A;&#x672A;&#x77E5;&#x7684;&#x4E8B;&#x7269;&#x3002;&#x5728; go &#x8BED;&#x8A00;&#x4E2D;&#xFF0C; interface{} &#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x795E;&#x79D8;&#x7684;&#x672A;&#x77E5;&#x7C7B;&#x578B;&#xFF0C;&#x5176; &#x65AD;&#x8A00;&#x64CD;&#x4F5C;&#x5C31;&#x662F;&#x7528;&#x6765; &#x5224;&#x65AD; interface{} &#x7684;&#x7C7B;&#x578B; &#x3002;&#x56E0;&#x4E3A; interface{} &#x662F;&#x4E2A;&#x672A;&#x77E5;&#x7C7B;&#x578B;&#xFF0C;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x65E0;&#x6CD5;&#x786E;&#x5B9A;&#xFF0C;&#x6240;&#x4EE5;&#x7C7B;&#x578B;&#x65AD;&#x8A00;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x786E;&#x5B9A;&#x3002; Go &#x8BED;&#x8A00;&#x91CC;&#x9762;&#x6709;&#x4E00;&#x4E2A;&#x8BED;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5; &#x5224;&#x65AD;&#x662F;&#x5426;&#x662F;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#xFF1A; value, ok = x.(T) &#xFF0C;&#x8FD9;&#x91CC; value &#x5C31;&#x662F;&#x53D8;&#x91CF;&#x7684;&#x503C;&#xFF0C; ok &#x662F; &#x4E00;&#x4E2A; bool &#x7C7B;&#x578B;&#xFF0C; x &#x662F; interface{} &#x53D8;&#x91CF;&#xFF0C; T &#x662F;&#x65AD;&#x8A00;&#x7684;&#x7C7B;&#x578B;&#x3002; &#x8BE5;&#x8BED;&#x6CD5;&#x8FD4;&#x56DE;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F; x &#x8F6C;&#x5316;&#x4E3A; T &#x7C7B;&#x578B;&#x540E;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x5E03;&#x5C14;&#x503C;&#xFF0C;&#x82E5;&#x4E3A; true &#x5219;&#x8868;&#x793A;&#x65AD;&#x8A00;&#x6210;&#x529F;&#xFF0C; false &#x5219;&#x8868;&#x793A;&#x65AD;&#x8A00;&#x5931;&#x8D25;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // comma-ok for index, element := range list { \t if value, ok := element.( int ); ok { \t\tfmt.Printf( list[%d] is an int and its value is %d\\n , index, value) \t} else if value, ok := element.( string ); ok { \t\tfmt.Printf( list[%d] is a string and its value is %s\\n , index, value) \t} else if value, ok := element.(Person); ok { \t\tfmt.Printf( list[%d] is a Person and its value is %s\\n , index, value) \t} else { \t\tfmt.Printf( list[%d] is of a different type\\n , index) \t} } // &#x6216;&#x8005; &#x4F7F;&#x7528; switch for index, element := range list{ \t switch value := element.( type ) { \t\t case int : \t\t\tfmt.Printf( list[%d] is an int and its value is %d\\n , index, value) \t\t case string : \t\t\tfmt.Printf( list[%d] is a string and its value is %s\\n , index, value) \t\t case Person: \t\t\tfmt.Printf( list[%d] is a Person and its value is %s\\n , index, value) \t\t default : \t\t\tfmt.Println( list[%d] is of a different type , index) \t} } &#x6CE8;&#x610F;&#xFF0C; x.(type) &#x8BED;&#x6CD5;&#x4E0D;&#x80FD;&#x5728; switch &#x5916;&#x7684;&#x4EFB;&#x4F55;&#x903B;&#x8F91;&#x91CC;&#x9762;&#x4F7F;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x8981;&#x5728; switch &#x5916;&#x9762;&#x5224;&#x65AD;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x5C31;&#x4F7F;&#x7528; comma-ok &#x3002; &#x751F;&#x547D;&#x5468;&#x671F; &#x5BF9;&#x4E8E;&#x5728;&#x5305;&#x4E00;&#x7EA7;&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x548C;&#x7A0B;&#x5E8F;&#x7684;&#x8FD0;&#x884C;&#x5468;&#x671F;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002; &#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF08;&#x5305;&#x62EC;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#x4E5F;&#x662F;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF09;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x5219;&#x662F;&#x52A8;&#x6001;&#x7684;&#xFF1A;&#x6BCF;&#x6B21;&#x4ECE;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x53D8;&#x91CF;&#x7684;&#x58F0;&#x660E;&#x8BED;&#x53E5;&#x5F00;&#x59CB;&#xFF0C; &#x76F4;&#x5230;&#x8BE5;&#x53D8;&#x91CF;&#x4E0D;&#x518D;&#x88AB;&#x5F15;&#x7528;&#x4E3A;&#x6B62;&#xFF0C;&#x7136;&#x540E;&#x53D8;&#x91CF;&#x7684;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#x53EF;&#x80FD;&#x88AB;&#x56DE;&#x6536;&#x3002;"},"index.html#编码":{"title":"&#x7F16;&#x7801;","path":"\\golang-learn\\index.html#编码","body":"Go &#x8BED;&#x8A00;&#x7684;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x5FC5;&#x987B;&#x4F7F;&#x7528; UTF-8 &#x7F16;&#x7801;&#x683C;&#x5F0F;&#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x3002;&#x5982;&#x679C;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x4E2D;&#x51FA;&#x73B0;&#x4E86;&#x975E; UTF-8 &#x7F16;&#x7801;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x6784;&#x5EFA;&#x3001;&#x5B89;&#x88C5;&#x4EE5;&#x53CA;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C; go &#x547D;&#x4EE4;&#x5C31;&#x4F1A;&#x62A5;&#x544A;&#x9519;&#x8BEF;&#x201C;illegal UTF-8 encoding&#x201D;&#x3002; ASCII &#x7F16;&#x7801; ASCII &#x662F;&#x82F1;&#x6587;&#x201C;American Standard Code for Information Interchange&#x201D;&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x4E2D;&#x6587;&#x8BD1;&#x4E3A;&#x7F8E;&#x56FD;&#x4FE1;&#x606F;&#x4EA4;&#x6362;&#x6807;&#x51C6;&#x4EE3;&#x7801;&#x3002; ASCII &#x7F16;&#x7801;&#x65B9;&#x6848;&#x4F7F;&#x7528;&#x5355;&#x4E2A;&#x5B57;&#x8282;&#xFF08;byte&#xFF09;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x6765;&#x7F16;&#x7801;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x3002;&#x6807;&#x51C6;&#x7684; ASCII &#x7F16;&#x7801;&#x7528;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x6700;&#x9AD8;&#x6BD4;&#x7279;&#xFF08;bit&#xFF09;&#x4F4D;&#x4F5C;&#x4E3A;&#x5947;&#x5076;&#x6821;&#x9A8C;&#x4F4D;&#xFF0C; &#x800C;&#x6269;&#x5C55;&#x7684; ASCII &#x7F16;&#x7801;&#x5219;&#x5C06;&#x6B64;&#x4F4D;&#x4E5F;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x5B57;&#x7B26;&#x3002;ASCII &#x7F16;&#x7801;&#x652F;&#x6301;&#x7684;&#x53EF;&#x6253;&#x5370;&#x5B57;&#x7B26;&#x548C;&#x63A7;&#x5236;&#x5B57;&#x7B26;&#x7684;&#x96C6;&#x5408;&#x4E5F;&#x88AB;&#x53EB;&#x505A; ASCII &#x7F16;&#x7801;&#x96C6;&#x3002; unicode &#x7F16;&#x7801; unicode &#x7F16;&#x7801;&#x89C4;&#x8303;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x53E6;&#x4E00;&#x4E2A;&#x66F4;&#x52A0;&#x901A;&#x7528;&#x7684;&#x3001;&#x9488;&#x5BF9;&#x4E66;&#x9762;&#x5B57;&#x7B26;&#x548C;&#x6587;&#x672C;&#x7684;&#x5B57;&#x7B26;&#x7F16;&#x7801;&#x6807;&#x51C6;&#x3002;&#x5B83;&#x4E3A;&#x4E16;&#x754C;&#x4E0A;&#x73B0;&#x5B58;&#x7684;&#x6240;&#x6709;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C; &#x90FD;&#x8BBE;&#x5B9A;&#x4E86;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x7F16;&#x7801; &#x3002;&#x5B83;&#x5B9A;&#x4E49;&#x4E86;&#x4E0D;&#x540C;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x7684;&#x6587;&#x672C;&#x6570;&#x636E;&#x5728;&#x56FD;&#x9645;&#x95F4;&#x4EA4;&#x6362;&#x7684;&#x7EDF;&#x4E00;&#x65B9;&#x5F0F;&#xFF0C;&#x5E76;&#x4E3A;&#x5168;&#x7403;&#x5316;&#x8F6F;&#x4EF6;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x57FA;&#x7840;&#x3002; Unicode &#x7F16;&#x7801;&#x89C4;&#x8303;&#x901A;&#x5E38;&#x4F7F;&#x7528;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A;&#x6CD5;&#x6765;&#x8868;&#x793A; Unicode &#x4EE3;&#x7801;&#x70B9;&#x7684;&#x6574;&#x6570;&#x503C;&#xFF0C;&#x5E76;&#x4F7F;&#x7528;&#x201C;U+&#x201D;&#x4F5C;&#x4E3A;&#x524D;&#x7F00;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#x5B57;&#x7B26;&#x201C;a&#x201D;&#x7684; Unicode &#x4EE3;&#x7801;&#x70B9;&#x662F; U+0061 &#x3002;&#x5728; Unicode &#x7F16;&#x7801;&#x89C4;&#x8303;&#x4E2D;&#xFF0C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x80FD;&#x4E14;&#x53EA;&#x80FD;&#x7531;&#x4E0E;&#x5B83;&#x5BF9;&#x5E94;&#x7684;&#x90A3;&#x4E2A;&#x4EE3;&#x7801;&#x70B9;&#x8868;&#x793A;&#x3002; Unicode &#x7F16;&#x7801;&#x89C4;&#x8303;&#x63D0;&#x4F9B;&#x4E86;&#x4E09;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#xFF0C;&#x5373;&#xFF1A; UTF-8 &#x3001; UTF-16 &#x548C; UTF-32 &#x3002;&#x5176;&#x4E2D;&#x7684; UTF &#x662F; UCS Transformation Format &#x7684;&#x7F29;&#x5199;&#x3002; &#x800C; UCS &#x53C8;&#x662F; Universal Character Set &#x7684;&#x7F29;&#x5199;&#xFF0C;&#x4F46;&#x4E5F;&#x53EF;&#x4EE5;&#x4EE3;&#x8868; Unicode Character Set&#x3002;&#x6240;&#x4EE5;&#xFF0C;UTF &#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x7FFB;&#x8BD1;&#x4E3A; Unicode &#x8F6C;&#x6362;&#x683C;&#x5F0F;&#x3002; &#x5B83;&#x4EE3;&#x8868;&#x7684;&#x662F;&#x5B57;&#x7B26;&#x4E0E;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x4E4B;&#x95F4;&#x7684;&#x8F6C;&#x6362;&#x65B9;&#x5F0F;&#x3002; &#x5728;&#x8FD9;&#x51E0;&#x79CD;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x7684;&#x540D;&#x79F0;&#x4E2D;&#xFF0C; &#x201C;-&#x201D;&#x53F3;&#x8FB9;&#x7684;&#x6574;&#x6570;&#x7684;&#x542B;&#x4E49;&#x662F;&#xFF0C;&#x4EE5;&#x591A;&#x5C11;&#x4E2A;&#x6BD4;&#x7279;&#x4F4D;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x7F16;&#x7801;&#x5355;&#x5143; &#x3002;&#x4EE5; UTF-8 &#x4E3A;&#x4F8B;&#xFF0C;&#x5B83;&#x4F1A;&#x4EE5; 8 &#x4E2A;&#x6BD4;&#x7279;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#xFF0C; &#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x7F16;&#x7801;&#x5355;&#x5143;&#x3002;&#x5B83;&#x4E0E;&#x6807;&#x51C6;&#x7684; ASCII &#x7F16;&#x7801;&#x662F;&#x5B8C;&#x5168;&#x517C;&#x5BB9;&#x7684;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5728; [0x00, 0x7F] &#x7684;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x8FD9;&#x4E24;&#x79CD;&#x7F16;&#x7801;&#x8868;&#x793A;&#x7684;&#x5B57;&#x7B26;&#x90FD;&#x662F;&#x76F8;&#x540C;&#x7684;&#x3002; &#x8FD9;&#x4E5F;&#x662F; UTF-8 &#x7F16;&#x7801;&#x683C;&#x5F0F;&#x7684;&#x4E00;&#x4E2A;&#x5DE8;&#x5927;&#x4F18;&#x52BF;&#x3002; UTF-8 &#x662F;&#x4E00;&#x79CD;&#x53EF;&#x53D8;&#x5BBD;&#x7684;&#x7F16;&#x7801;&#x65B9;&#x6848; &#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C; &#x5B83;&#x4F1A;&#x7528;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x6765;&#x8868;&#x793A;&#x67D0;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x6700;&#x591A;&#x4F7F;&#x7528;&#x56DB;&#x4E2A;&#x5B57;&#x8282; &#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x82F1;&#x6587;&#x5B57;&#x7B26;&#xFF0C; &#x5B83;&#x4EC5;&#x7528;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x5C31;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#xFF0C;&#x800C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x4E2D;&#x6587;&#x5B57;&#x7B26;&#xFF0C;&#x5B83;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E09;&#x4E2A;&#x5B57;&#x8282;&#x624D;&#x80FD;&#x591F;&#x8868;&#x793A;&#x3002;&#x4E0D;&#x8BBA;&#x600E;&#x6837;&#xFF0C;&#x4E00;&#x4E2A;&#x53D7;&#x652F;&#x6301;&#x7684;&#x5B57;&#x7B26;&#x603B;&#x662F;&#x53EF;&#x4EE5;&#x7531; UTF-8 &#x7F16;&#x7801; &#x4E3A;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x3002;&#x4EE5;&#x4E0B;&#x4F1A;&#x7B80;&#x79F0;&#x540E;&#x8005;&#x4E3A; UTF-8 &#x7F16;&#x7801;&#x503C;&#x3002;"},"advance/mm.html":{"title":"内存分配","path":"\\golang-learn\\advance\\mm.html","body":"内存分配 基本策略 每次从操作系统申请一大块内存（如 1MB），以减少系统调用。 将申请到的大块内存按照特定大小切分成小块，够成链表。 为对象分配内存时，只需从大小合适的链表提取一小块即可。 回收对象内存时，将小块内存还给原链表，以便复用。 如果闲置内存过多，则尝试把部分内存还给操作系统，降低开销。 内存分配器 只管理内存，不关心对象的状态，并且它不会主动回收内存，需要 垃圾回收器 在完成清理操作后， 触发内存分配器的回收操作。 内存块 内存分配器管理的内存分为两种： span ：多个地址连续的 页 （page）组成的大块内存。 object ：将 span 按特定大小切分成多个小块，每个小块可存储一个对象。 分配器按页数区分大小不同的 span。例如，以页数为单位将 span 存放到管理数组中，需要时就以页数为索引进行查找。 span 的大小不是固定不变的。在获取闲置 span 时，如果没有找到大小合适的，那么会选择页数更多的 span，此时 就会引发 裁剪 ，将 span 多余的部分构成一个新的小的 span 放回管理数组。另外，分配器还会把相邻的空闲的 span 合并构建更大的内存块，减少碎片。 tcmalloc Go 的内存分配器采用的是 tcmalloc 架构。 由三种组件组成： cache ：运行期的每个线程都会绑定一个 cache，用于给没有锁的 object 的分配。 central ：为所有 cache 提供切分好的后备 sapn 资源。 heap ：管理闲置的 span，需要的时候向操作系统申请新的内存。 回收 内存回收的源头是垃圾清理操作 。 回收不是释放 ，因为内存分配器的核心是 内存复用 。不再使用的内存，放到合适的位置等待再次 分配时使用。只有闲置内存过多时，才考虑释放。 回收操作以 span 为单位。 释放 监控线程 sysmon 每隔一段时间就会检查 heap 里的闲置内存块，如果闲置时间超过阈值，则释放其关联的物理内存。"},"advance/mm.html#内存分配":{"title":"&#x5185;&#x5B58;&#x5206;&#x914D;","path":"\\golang-learn\\advance\\mm.html#内存分配","body":""},"advance/mm.html#基本策略":{"title":"&#x57FA;&#x672C;&#x7B56;&#x7565;","path":"\\golang-learn\\advance\\mm.html#基本策略","body":"&#x6BCF;&#x6B21;&#x4ECE;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7533;&#x8BF7;&#x4E00;&#x5927;&#x5757;&#x5185;&#x5B58;&#xFF08;&#x5982; 1MB&#xFF09;&#xFF0C;&#x4EE5;&#x51CF;&#x5C11;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x3002; &#x5C06;&#x7533;&#x8BF7;&#x5230;&#x7684;&#x5927;&#x5757;&#x5185;&#x5B58;&#x6309;&#x7167;&#x7279;&#x5B9A;&#x5927;&#x5C0F;&#x5207;&#x5206;&#x6210;&#x5C0F;&#x5757;&#xFF0C;&#x591F;&#x6210;&#x94FE;&#x8868;&#x3002; &#x4E3A;&#x5BF9;&#x8C61;&#x5206;&#x914D;&#x5185;&#x5B58;&#x65F6;&#xFF0C;&#x53EA;&#x9700;&#x4ECE;&#x5927;&#x5C0F;&#x5408;&#x9002;&#x7684;&#x94FE;&#x8868;&#x63D0;&#x53D6;&#x4E00;&#x5C0F;&#x5757;&#x5373;&#x53EF;&#x3002; &#x56DE;&#x6536;&#x5BF9;&#x8C61;&#x5185;&#x5B58;&#x65F6;&#xFF0C;&#x5C06;&#x5C0F;&#x5757;&#x5185;&#x5B58;&#x8FD8;&#x7ED9;&#x539F;&#x94FE;&#x8868;&#xFF0C;&#x4EE5;&#x4FBF;&#x590D;&#x7528;&#x3002; &#x5982;&#x679C;&#x95F2;&#x7F6E;&#x5185;&#x5B58;&#x8FC7;&#x591A;&#xFF0C;&#x5219;&#x5C1D;&#x8BD5;&#x628A;&#x90E8;&#x5206;&#x5185;&#x5B58;&#x8FD8;&#x7ED9;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF0C;&#x964D;&#x4F4E;&#x5F00;&#x9500;&#x3002; &#x5185;&#x5B58;&#x5206;&#x914D;&#x5668; &#x53EA;&#x7BA1;&#x7406;&#x5185;&#x5B58;&#xFF0C;&#x4E0D;&#x5173;&#x5FC3;&#x5BF9;&#x8C61;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x4E0D;&#x4F1A;&#x4E3B;&#x52A8;&#x56DE;&#x6536;&#x5185;&#x5B58;&#xFF0C;&#x9700;&#x8981; &#x5783;&#x573E;&#x56DE;&#x6536;&#x5668; &#x5728;&#x5B8C;&#x6210;&#x6E05;&#x7406;&#x64CD;&#x4F5C;&#x540E;&#xFF0C; &#x89E6;&#x53D1;&#x5185;&#x5B58;&#x5206;&#x914D;&#x5668;&#x7684;&#x56DE;&#x6536;&#x64CD;&#x4F5C;&#x3002;"},"advance/mm.html#内存块":{"title":"&#x5185;&#x5B58;&#x5757;","path":"\\golang-learn\\advance\\mm.html#内存块","body":"&#x5185;&#x5B58;&#x5206;&#x914D;&#x5668;&#x7BA1;&#x7406;&#x7684;&#x5185;&#x5B58;&#x5206;&#x4E3A;&#x4E24;&#x79CD;&#xFF1A; span &#xFF1A;&#x591A;&#x4E2A;&#x5730;&#x5740;&#x8FDE;&#x7EED;&#x7684; &#x9875; &#xFF08;page&#xFF09;&#x7EC4;&#x6210;&#x7684;&#x5927;&#x5757;&#x5185;&#x5B58;&#x3002; object &#xFF1A;&#x5C06; span &#x6309;&#x7279;&#x5B9A;&#x5927;&#x5C0F;&#x5207;&#x5206;&#x6210;&#x591A;&#x4E2A;&#x5C0F;&#x5757;&#xFF0C;&#x6BCF;&#x4E2A;&#x5C0F;&#x5757;&#x53EF;&#x5B58;&#x50A8;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x3002; &#x5206;&#x914D;&#x5668;&#x6309;&#x9875;&#x6570;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x4E0D;&#x540C;&#x7684; span&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x4EE5;&#x9875;&#x6570;&#x4E3A;&#x5355;&#x4F4D;&#x5C06; span &#x5B58;&#x653E;&#x5230;&#x7BA1;&#x7406;&#x6570;&#x7EC4;&#x4E2D;&#xFF0C;&#x9700;&#x8981;&#x65F6;&#x5C31;&#x4EE5;&#x9875;&#x6570;&#x4E3A;&#x7D22;&#x5F15;&#x8FDB;&#x884C;&#x67E5;&#x627E;&#x3002; span &#x7684;&#x5927;&#x5C0F;&#x4E0D;&#x662F;&#x56FA;&#x5B9A;&#x4E0D;&#x53D8;&#x7684;&#x3002;&#x5728;&#x83B7;&#x53D6;&#x95F2;&#x7F6E; span &#x65F6;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x5927;&#x5C0F;&#x5408;&#x9002;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x9009;&#x62E9;&#x9875;&#x6570;&#x66F4;&#x591A;&#x7684; span&#xFF0C;&#x6B64;&#x65F6; &#x5C31;&#x4F1A;&#x5F15;&#x53D1; &#x88C1;&#x526A; &#xFF0C;&#x5C06; span &#x591A;&#x4F59;&#x7684;&#x90E8;&#x5206;&#x6784;&#x6210;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5C0F;&#x7684; span &#x653E;&#x56DE;&#x7BA1;&#x7406;&#x6570;&#x7EC4;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5206;&#x914D;&#x5668;&#x8FD8;&#x4F1A;&#x628A;&#x76F8;&#x90BB;&#x7684;&#x7A7A;&#x95F2;&#x7684; span &#x5408;&#x5E76;&#x6784;&#x5EFA;&#x66F4;&#x5927;&#x7684;&#x5185;&#x5B58;&#x5757;&#xFF0C;&#x51CF;&#x5C11;&#x788E;&#x7247;&#x3002;"},"advance/mm.html#tcmalloc":{"title":"tcmalloc","path":"\\golang-learn\\advance\\mm.html#tcmalloc","body":"Go &#x7684;&#x5185;&#x5B58;&#x5206;&#x914D;&#x5668;&#x91C7;&#x7528;&#x7684;&#x662F; tcmalloc &#x67B6;&#x6784;&#x3002; &#x7531;&#x4E09;&#x79CD;&#x7EC4;&#x4EF6;&#x7EC4;&#x6210;&#xFF1A; cache &#xFF1A;&#x8FD0;&#x884C;&#x671F;&#x7684;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x90FD;&#x4F1A;&#x7ED1;&#x5B9A;&#x4E00;&#x4E2A; cache&#xFF0C;&#x7528;&#x4E8E;&#x7ED9;&#x6CA1;&#x6709;&#x9501;&#x7684; object &#x7684;&#x5206;&#x914D;&#x3002; central &#xFF1A;&#x4E3A;&#x6240;&#x6709; cache &#x63D0;&#x4F9B;&#x5207;&#x5206;&#x597D;&#x7684;&#x540E;&#x5907; sapn &#x8D44;&#x6E90;&#x3002; heap &#xFF1A;&#x7BA1;&#x7406;&#x95F2;&#x7F6E;&#x7684; span&#xFF0C;&#x9700;&#x8981;&#x7684;&#x65F6;&#x5019;&#x5411;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7533;&#x8BF7;&#x65B0;&#x7684;&#x5185;&#x5B58;&#x3002;"},"advance/mm.html#回收":{"title":"&#x56DE;&#x6536;","path":"\\golang-learn\\advance\\mm.html#回收","body":"&#x5185;&#x5B58;&#x56DE;&#x6536;&#x7684;&#x6E90;&#x5934;&#x662F;&#x5783;&#x573E;&#x6E05;&#x7406;&#x64CD;&#x4F5C; &#x3002; &#x56DE;&#x6536;&#x4E0D;&#x662F;&#x91CA;&#x653E; &#xFF0C;&#x56E0;&#x4E3A;&#x5185;&#x5B58;&#x5206;&#x914D;&#x5668;&#x7684;&#x6838;&#x5FC3;&#x662F; &#x5185;&#x5B58;&#x590D;&#x7528; &#x3002;&#x4E0D;&#x518D;&#x4F7F;&#x7528;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x653E;&#x5230;&#x5408;&#x9002;&#x7684;&#x4F4D;&#x7F6E;&#x7B49;&#x5F85;&#x518D;&#x6B21; &#x5206;&#x914D;&#x65F6;&#x4F7F;&#x7528;&#x3002;&#x53EA;&#x6709;&#x95F2;&#x7F6E;&#x5185;&#x5B58;&#x8FC7;&#x591A;&#x65F6;&#xFF0C;&#x624D;&#x8003;&#x8651;&#x91CA;&#x653E;&#x3002; &#x56DE;&#x6536;&#x64CD;&#x4F5C;&#x4EE5; span &#x4E3A;&#x5355;&#x4F4D;&#x3002;"},"advance/mm.html#释放":{"title":"&#x91CA;&#x653E;","path":"\\golang-learn\\advance\\mm.html#释放","body":"&#x76D1;&#x63A7;&#x7EBF;&#x7A0B; sysmon &#x6BCF;&#x9694;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5C31;&#x4F1A;&#x68C0;&#x67E5; heap &#x91CC;&#x7684;&#x95F2;&#x7F6E;&#x5185;&#x5B58;&#x5757;&#xFF0C;&#x5982;&#x679C;&#x95F2;&#x7F6E;&#x65F6;&#x95F4;&#x8D85;&#x8FC7;&#x9608;&#x503C;&#xFF0C;&#x5219;&#x91CA;&#x653E;&#x5176;&#x5173;&#x8054;&#x7684;&#x7269;&#x7406;&#x5185;&#x5B58;&#x3002;"},"advance/gc.html":{"title":"垃圾回收","path":"\\golang-learn\\advance\\gc.html","body":"垃圾回收 Go 语言中使用的垃圾回收使用的是 标记清扫算法 。标记清理最典型的做法是三⾊标记。进行垃圾回收时会 STW(stop the world）， 就是 runtime 把所有的线程全部冻结掉，意味着⽤户逻辑都是暂停的，所有的⽤户对象都不会被修改了 ，这时候去扫描肯定是安全的， 对象要么活着要么死着，所以会造成中间暂停时间可能会很⻓，⽤户逻辑对于⽤户的反应就中⽌了。 Go GC 的基本特征：非分代，非紧缩，写屏障，并发标记清理。 三色标记和写屏障 三色标记算法原理如下： 起初所有对象都是白色。 从根出发扫描所有可达对象，标记为灰色，放入待处理队列。 从队列取出灰色对象，将其引用对象标记为灰色放入队列，自身标记为黑色。 重复 3，直到灰色对象队列为空。 扫描和标记完成后，只剩下白色（待回收）和黑色（活跃对象）的对象，清理操作将白色对象内存回收。 何时触发 GC 垃圾回收器在初始化时，设置 gcpercent 和 next_gc 阈值。 自动垃圾回收 为对象分配内存以后， mallocgc 函数会检查 GC 触发条件。 在堆上分配大于 maxSmallSize （32K byte）的对象时进行检测此时是否满足垃圾回收条件，如果满足则进行垃圾回收 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 func mallocgc (size uintptr , typ *_type, needzero bool ) unsafe . Pointer  ... shouldhelpgc := false // 分配的对象小于 maxSmallSize (32K byte) if size = maxSmallSize  ...  else  shouldhelpgc = true ...  ... // gcShouldStart() 函数进行触发条件检测 if shouldhelpgc &amp;&amp; gcShouldStart( false )  // gcStart() 函数进行垃圾回收 gcStart(gcBackgroundMode, false )   GC 触发条件 触发条件主要关注下面代码中的中间部分： forceTrigger || memstats.heap_live = memstats.gc_trigger 。 forceTrigger 是 forceGC 的标志；后面半句的意思是当前堆上的活跃对象大于我们初始化时候设置的 GC 触发阈值。 在 malloc 以及 free 的时候 heap_live 会一直进行更新。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 // gcShouldStart returns true if the exit condition for the _GCoff // phase has been met. The exit condition should be tested when // allocating. // // If forceTrigger is true, it ignores the current heap size, but // checks all other conditions. In general this should be false. func gcShouldStart (forceTrigger bool ) bool  return gcphase == _GCoff &amp;&amp; (forceTrigger || memstats.heap_live = memstats.gc_trigger) &amp;&amp; memstats.enablegc &amp;&amp; panicking == 0 &amp;&amp; gcpercent = 0  // 初始化的时候设置 GC 的触发阈值 func gcinit ()  _ = setGCPercent(readgogc()) memstats.gc_trigger = heapminimum ...  // 启动的时候通过 GOGC 传递百分比 x // 触发阈值等于 x * defaultHeapMinimum (defaultHeapMinimum 默认是 4M) func readgogc () int32  p := gogetenv( \"GOGC\" ) if p == \"off\"  return -1  if n, ok := atoi32(p); ok  return n  return 100  heap_live 是活跃对象总量。 主动垃圾回收 主动垃圾回收，通过调用 runtime.GC() ，这是阻塞式的。 1 2 3 4 5 6 // GC runs a garbage collection and blocks the caller until the // garbage collection is complete. It may also block the entire // program. func GC ()  gcStart(gcForceBlockMode, false )  监控 在一个场景中：服务重启，海量的客户端接入，瞬间分配了大量对象，这会将 GC 的触发条件 next_gc 推到一个很大的值。 在服务正常以后，由于活跃对象远远小于改阈值，会导致 GC 无法触发，大量白色对象不能被回收，最终造成内存泄露。 所以 GC 的最后一道保险，就是监控线程 sysmon，sysmon 每隔 2 分钟会检查一次 GC 状态，超过 2 分钟则强制执行。"},"advance/gc.html#垃圾回收":{"title":"&#x5783;&#x573E;&#x56DE;&#x6536;","path":"\\golang-learn\\advance\\gc.html#垃圾回收","body":"Go &#x8BED;&#x8A00;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x5783;&#x573E;&#x56DE;&#x6536;&#x4F7F;&#x7528;&#x7684;&#x662F; &#x6807;&#x8BB0;&#x6E05;&#x626B;&#x7B97;&#x6CD5; &#x3002;&#x6807;&#x8BB0;&#x6E05;&#x7406;&#x6700;&#x5178;&#x578B;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x4E09;&#x2F8A;&#x6807;&#x8BB0;&#x3002;&#x8FDB;&#x884C;&#x5783;&#x573E;&#x56DE;&#x6536;&#x65F6;&#x4F1A; STW(stop the world&#xFF09;&#xFF0C; &#x5C31;&#x662F; runtime &#x628A;&#x6240;&#x6709;&#x7684;&#x7EBF;&#x7A0B;&#x5168;&#x90E8;&#x51BB;&#x7ED3;&#x6389;&#xFF0C;&#x610F;&#x5473;&#x7740;&#x2F64;&#x6237;&#x903B;&#x8F91;&#x90FD;&#x662F;&#x6682;&#x505C;&#x7684;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x2F64;&#x6237;&#x5BF9;&#x8C61;&#x90FD;&#x4E0D;&#x4F1A;&#x88AB;&#x4FEE;&#x6539;&#x4E86; &#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x53BB;&#x626B;&#x63CF;&#x80AF;&#x5B9A;&#x662F;&#x5B89;&#x5168;&#x7684;&#xFF0C; &#x5BF9;&#x8C61;&#x8981;&#x4E48;&#x6D3B;&#x7740;&#x8981;&#x4E48;&#x6B7B;&#x7740;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x9020;&#x6210;&#x4E2D;&#x95F4;&#x6682;&#x505C;&#x65F6;&#x95F4;&#x53EF;&#x80FD;&#x4F1A;&#x5F88;&#x2ED3;&#xFF0C;&#x2F64;&#x6237;&#x903B;&#x8F91;&#x5BF9;&#x4E8E;&#x2F64;&#x6237;&#x7684;&#x53CD;&#x5E94;&#x5C31;&#x4E2D;&#x2F4C;&#x4E86;&#x3002; Go GC &#x7684;&#x57FA;&#x672C;&#x7279;&#x5F81;&#xFF1A;&#x975E;&#x5206;&#x4EE3;&#xFF0C;&#x975E;&#x7D27;&#x7F29;&#xFF0C;&#x5199;&#x5C4F;&#x969C;&#xFF0C;&#x5E76;&#x53D1;&#x6807;&#x8BB0;&#x6E05;&#x7406;&#x3002;"},"advance/gc.html#三色标记和写屏障":{"title":"&#x4E09;&#x8272;&#x6807;&#x8BB0;&#x548C;&#x5199;&#x5C4F;&#x969C;","path":"\\golang-learn\\advance\\gc.html#三色标记和写屏障","body":"&#x4E09;&#x8272;&#x6807;&#x8BB0;&#x7B97;&#x6CD5;&#x539F;&#x7406;&#x5982;&#x4E0B;&#xFF1A; &#x8D77;&#x521D;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x90FD;&#x662F;&#x767D;&#x8272;&#x3002; &#x4ECE;&#x6839;&#x51FA;&#x53D1;&#x626B;&#x63CF;&#x6240;&#x6709;&#x53EF;&#x8FBE;&#x5BF9;&#x8C61;&#xFF0C;&#x6807;&#x8BB0;&#x4E3A;&#x7070;&#x8272;&#xFF0C;&#x653E;&#x5165;&#x5F85;&#x5904;&#x7406;&#x961F;&#x5217;&#x3002; &#x4ECE;&#x961F;&#x5217;&#x53D6;&#x51FA;&#x7070;&#x8272;&#x5BF9;&#x8C61;&#xFF0C;&#x5C06;&#x5176;&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#x6807;&#x8BB0;&#x4E3A;&#x7070;&#x8272;&#x653E;&#x5165;&#x961F;&#x5217;&#xFF0C;&#x81EA;&#x8EAB;&#x6807;&#x8BB0;&#x4E3A;&#x9ED1;&#x8272;&#x3002; &#x91CD;&#x590D; 3&#xFF0C;&#x76F4;&#x5230;&#x7070;&#x8272;&#x5BF9;&#x8C61;&#x961F;&#x5217;&#x4E3A;&#x7A7A;&#x3002; &#x626B;&#x63CF;&#x548C;&#x6807;&#x8BB0;&#x5B8C;&#x6210;&#x540E;&#xFF0C;&#x53EA;&#x5269;&#x4E0B;&#x767D;&#x8272;&#xFF08;&#x5F85;&#x56DE;&#x6536;&#xFF09;&#x548C;&#x9ED1;&#x8272;&#xFF08;&#x6D3B;&#x8DC3;&#x5BF9;&#x8C61;&#xFF09;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x6E05;&#x7406;&#x64CD;&#x4F5C;&#x5C06;&#x767D;&#x8272;&#x5BF9;&#x8C61;&#x5185;&#x5B58;&#x56DE;&#x6536;&#x3002;"},"advance/gc.html#何时触发-GC":{"title":"&#x4F55;&#x65F6;&#x89E6;&#x53D1; GC","path":"\\golang-learn\\advance\\gc.html#何时触发-GC","body":"&#x5783;&#x573E;&#x56DE;&#x6536;&#x5668;&#x5728;&#x521D;&#x59CB;&#x5316;&#x65F6;&#xFF0C;&#x8BBE;&#x7F6E; gcpercent &#x548C; next_gc &#x9608;&#x503C;&#x3002; &#x81EA;&#x52A8;&#x5783;&#x573E;&#x56DE;&#x6536; &#x4E3A;&#x5BF9;&#x8C61;&#x5206;&#x914D;&#x5185;&#x5B58;&#x4EE5;&#x540E;&#xFF0C; mallocgc &#x51FD;&#x6570;&#x4F1A;&#x68C0;&#x67E5; GC &#x89E6;&#x53D1;&#x6761;&#x4EF6;&#x3002; &#x5728;&#x5806;&#x4E0A;&#x5206;&#x914D;&#x5927;&#x4E8E; maxSmallSize &#xFF08;32K byte&#xFF09;&#x7684;&#x5BF9;&#x8C61;&#x65F6;&#x8FDB;&#x884C;&#x68C0;&#x6D4B;&#x6B64;&#x65F6;&#x662F;&#x5426;&#x6EE1;&#x8DB3;&#x5783;&#x573E;&#x56DE;&#x6536;&#x6761;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x6EE1;&#x8DB3;&#x5219;&#x8FDB;&#x884C;&#x5783;&#x573E;&#x56DE;&#x6536; &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 func mallocgc (size uintptr , typ *_type, needzero bool ) unsafe . Pointer { ... shouldhelpgc := false // &#x5206;&#x914D;&#x7684;&#x5BF9;&#x8C61;&#x5C0F;&#x4E8E; maxSmallSize (32K byte) if size = maxSmallSize { ... } else { shouldhelpgc = true ... } ... // gcShouldStart() &#x51FD;&#x6570;&#x8FDB;&#x884C;&#x89E6;&#x53D1;&#x6761;&#x4EF6;&#x68C0;&#x6D4B; if shouldhelpgc &amp;&amp; gcShouldStart( false ) { // gcStart() &#x51FD;&#x6570;&#x8FDB;&#x884C;&#x5783;&#x573E;&#x56DE;&#x6536; gcStart(gcBackgroundMode, false ) } } GC &#x89E6;&#x53D1;&#x6761;&#x4EF6; &#x89E6;&#x53D1;&#x6761;&#x4EF6;&#x4E3B;&#x8981;&#x5173;&#x6CE8;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x4E2D;&#x95F4;&#x90E8;&#x5206;&#xFF1A; forceTrigger || memstats.heap_live = memstats.gc_trigger &#x3002; forceTrigger &#x662F; forceGC &#x7684;&#x6807;&#x5FD7;&#xFF1B;&#x540E;&#x9762;&#x534A;&#x53E5;&#x7684;&#x610F;&#x601D;&#x662F;&#x5F53;&#x524D;&#x5806;&#x4E0A;&#x7684;&#x6D3B;&#x8DC3;&#x5BF9;&#x8C61;&#x5927;&#x4E8E;&#x6211;&#x4EEC;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x5019;&#x8BBE;&#x7F6E;&#x7684; GC &#x89E6;&#x53D1;&#x9608;&#x503C;&#x3002; &#x5728; malloc &#x4EE5;&#x53CA; free &#x7684;&#x65F6;&#x5019; heap_live &#x4F1A;&#x4E00;&#x76F4;&#x8FDB;&#x884C;&#x66F4;&#x65B0;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 // gcShouldStart returns true if the exit condition for the _GCoff // phase has been met. The exit condition should be tested when // allocating. // // If forceTrigger is true, it ignores the current heap size, but // checks all other conditions. In general this should be false. func gcShouldStart (forceTrigger bool ) bool { return gcphase == _GCoff &amp;&amp; (forceTrigger || memstats.heap_live = memstats.gc_trigger) &amp;&amp; memstats.enablegc &amp;&amp; panicking == 0 &amp;&amp; gcpercent = 0 } // &#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#x8BBE;&#x7F6E; GC &#x7684;&#x89E6;&#x53D1;&#x9608;&#x503C; func gcinit () { _ = setGCPercent(readgogc()) memstats.gc_trigger = heapminimum ... } // &#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x901A;&#x8FC7; GOGC &#x4F20;&#x9012;&#x767E;&#x5206;&#x6BD4; x // &#x89E6;&#x53D1;&#x9608;&#x503C;&#x7B49;&#x4E8E; x * defaultHeapMinimum (defaultHeapMinimum &#x9ED8;&#x8BA4;&#x662F; 4M) func readgogc () int32 { p := gogetenv( GOGC ) if p == off { return -1 } if n, ok := atoi32(p); ok { return n } return 100 } heap_live &#x662F;&#x6D3B;&#x8DC3;&#x5BF9;&#x8C61;&#x603B;&#x91CF;&#x3002; &#x4E3B;&#x52A8;&#x5783;&#x573E;&#x56DE;&#x6536; &#x4E3B;&#x52A8;&#x5783;&#x573E;&#x56DE;&#x6536;&#xFF0C;&#x901A;&#x8FC7;&#x8C03;&#x7528; runtime.GC() &#xFF0C;&#x8FD9;&#x662F;&#x963B;&#x585E;&#x5F0F;&#x7684;&#x3002; 1 2 3 4 5 6 // GC runs a garbage collection and blocks the caller until the // garbage collection is complete. It may also block the entire // program. func GC () { gcStart(gcForceBlockMode, false ) }"},"advance/gc.html#监控":{"title":"&#x76D1;&#x63A7;","path":"\\golang-learn\\advance\\gc.html#监控","body":"&#x5728;&#x4E00;&#x4E2A;&#x573A;&#x666F;&#x4E2D;&#xFF1A;&#x670D;&#x52A1;&#x91CD;&#x542F;&#xFF0C;&#x6D77;&#x91CF;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x63A5;&#x5165;&#xFF0C;&#x77AC;&#x95F4;&#x5206;&#x914D;&#x4E86;&#x5927;&#x91CF;&#x5BF9;&#x8C61;&#xFF0C;&#x8FD9;&#x4F1A;&#x5C06; GC &#x7684;&#x89E6;&#x53D1;&#x6761;&#x4EF6; next_gc &#x63A8;&#x5230;&#x4E00;&#x4E2A;&#x5F88;&#x5927;&#x7684;&#x503C;&#x3002; &#x5728;&#x670D;&#x52A1;&#x6B63;&#x5E38;&#x4EE5;&#x540E;&#xFF0C;&#x7531;&#x4E8E;&#x6D3B;&#x8DC3;&#x5BF9;&#x8C61;&#x8FDC;&#x8FDC;&#x5C0F;&#x4E8E;&#x6539;&#x9608;&#x503C;&#xFF0C;&#x4F1A;&#x5BFC;&#x81F4; GC &#x65E0;&#x6CD5;&#x89E6;&#x53D1;&#xFF0C;&#x5927;&#x91CF;&#x767D;&#x8272;&#x5BF9;&#x8C61;&#x4E0D;&#x80FD;&#x88AB;&#x56DE;&#x6536;&#xFF0C;&#x6700;&#x7EC8;&#x9020;&#x6210;&#x5185;&#x5B58;&#x6CC4;&#x9732;&#x3002; &#x6240;&#x4EE5; GC &#x7684;&#x6700;&#x540E;&#x4E00;&#x9053;&#x4FDD;&#x9669;&#xFF0C;&#x5C31;&#x662F;&#x76D1;&#x63A7;&#x7EBF;&#x7A0B; sysmon&#xFF0C;sysmon &#x6BCF;&#x9694; 2 &#x5206;&#x949F;&#x4F1A;&#x68C0;&#x67E5;&#x4E00;&#x6B21; GC &#x72B6;&#x6001;&#xFF0C;&#x8D85;&#x8FC7; 2 &#x5206;&#x949F;&#x5219;&#x5F3A;&#x5236;&#x6267;&#x884C;&#x3002;"},"basic/error.html":{"title":"错误","path":"\\golang-learn\\basic\\error.html","body":"错误 error 类型 error 类型是内置的接口类型。 error 类型可能是 nil 或者 non-nil ， nil 表示成功。 错误处理 当函数调用返回错误时，最常用的处理方式是 传播错误 ，如。 1 2 3 4 5 6 7 8 9 10 11 12 13 resp, err := http.Get(url) if err != nil  // 将这个HTTP错误返回给调用者 return nil , err  doc, err := html.Parse(resp.Body) resp.Body.Close() if err != nil  \t // fmt.Errorf函数使用fmt.Sprintf格式化错误信息并返回 \t // 使用该函数前缀添加额外的上下文信息到原始错误信息。 return nil , fmt.Errorf( \"parsing %s as HTML: %v\" , url,err)  由于错误信息经常是以链式组合在一起的，所以错误信息中应避免大写和换行符。 编写错误信息时，我们要确保错误信息对问题细节的描述是详尽的。尤其是要注意错误信息表达的一致性，即相同的函数或同包内 的同一组函数返回的错误在构成和处理方式上是相似的。 根据不同的场景，我们可能要对错误做些特殊处理，比如错误重试机制，或者打印错误日志，或者直接忽略错误。 文件结尾错误 io 包在任何由文件结束引起的读取失败都返回同一个错误 io.EOF ： 1 2 3 4 5 6 7 8 9 10 11 in := bufio.NewReader(os.Stdin) for  r, _, err := in.ReadRune() if err == io.EOF  break // finished reading  if err != nil  return fmt.Errorf( \"read failed:%v\" , err)  // ...use r…  Panic 异常 Go 运行时错误会引起 painc 异常。 一般而言，当 panic 异常发生时，程序会中断运行，并立即执行在该 goroutine 中被延迟的函数（ defer 机制）。随后，程序崩溃 并输出日志信息。 由于 panic 会引起程序的崩溃，因此 panic 一般用于严重错误，如程序内部的逻辑不一致。但是对于大部分漏洞，我们应该使 用 Go 提供的错误机制，而不是 panic ，尽量避免程序的崩溃。 panic 函数 panic 函数接受任何值作为参数。当某些不应该发生的场景发生时，我们就应该调用 panic 。 panic 详情中都有什么 1 2 3 4 5 6 panic: runtime error: index out of range goroutine 1 [running]: main.main() /Users/haolin/GeekTime/Golang_Puzzlers/src/puzzlers/article19/q0/demo47.go:5 +0x3d exit status 2 第一行是 panic: runtime error: index out of range 。其中的 runtime error 的含义是，这是一个 runtime 代码包中 抛出的 panic 。 goroutine 1 [running] ，它表示有一个 ID 为1的 goroutine 在此 panic 被引发的时候正在运行。这里的 ID 其实并不重要。 main.main() 表明了这个 goroutine 包装的 go 函数就是命令源码文件中的那个 main 函数，也就是说这里的 goroutine 正 是 主 goroutine 。 再下面的一行，指出的就是这个 goroutine 中的哪一行代码在此 panic 被引发时正在执行。含了此行代码在其所属的源码文件中的行数， 以及这个源码文件的绝对路径。 +0x3d 代表的是：此行代码相对于其所属函数的入口程序计数偏移量。用处并不大。 exit status 2 表明我的这个程序是以退出状态码2结束运行的。 在大多数操作系统中，只要退出状态码不是 0，都意味着程序运行的非正 常结束 。在 Go 语言中， 因 panic 导致程序结束运行的退出状态码一般都会是 2 。 从 panic 被引发到程序终止运行的大致过程是什么 此行代码所属函数的执行随即终止。紧接着，控制权并不会在此有片刻停留，它又会立即转移至再上一级的调用代码处。控制权如此一级一 级地沿着调用栈的反方向传播至顶端， 也就是我们编写的最外层函数那里。 这里的最外层函数指的是go函数，对于主 goroutine 来说就是 main 函数。但是控制权也不会停留在那里，而是被 Go 语言运行时系统收回。 随后，程序崩溃并终止运行，承载程序这次运行的进程也会随之死亡并消失。与此同时，在这个控制权传播的过程中，panic 详情会被逐 渐地积累和完善，并会在程序终止之前被打印出来。 怎样让 panic 包含一个值，以及应该让它包含什么样的值 其实很简单，在调用 panic 函数时，把某个值作为参数传给该函数就可以了。 panic 函数的唯一一个参数是空接口 （也就是 interface{} ）类型的，所以从语法上讲，它可以接受任何类型的值。 但是，我们 最好传入 error 类型的错误值，或者其他的可以被有效序列化的值。这里的“有效序列化”指的是，可以更易读地去表示 形式转换 。 Recover 捕获异常 一般情况下，我们不能因为某个处理函数引发的 panic 异常，杀掉整个进程，可以使用 recover 函数恢复 panic 异常。 panic 时会调用 recover ，但是 recover 不能滥用，可能会引起资源泄漏或者其他问题。我们可以将 panic value 设置成特 殊类型，来标识某个 panic 是否应该被恢复。 recover 只能在 defer 修饰的函数中使用 : 1 2 3 4 5 6 7 8 9 10 11 12 13 func soleTitle (doc *html.Node) (title string , err error)  \t type bailout struct  \t defer func ()  \t\t switch p := recover (); p  case nil : // no panic case bailout: // \"expected\" panic err = fmt.Errorf( \"multiple title elements\" ) default : panic (p) // unexpected panic; carry on panicking \t\t \t() panic (bailout)  上面的代码， deferred 函数调用 recover ，并检查 panic value 。当 panic value 是 bailout{} 类型时， deferred 函数生 成一个 error 返回给调用者。 当 panic value 是其他 non-nil 值时，表示发生了未知的 panic 异常。 正确调用 recover 函数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import ( \"fmt\" \"errors\" ) func main ()  fmt.Println( \"Enter function main.\" ) // 引发 panic。 panic (errors.New( \"something wrong\" )) p := recover () fmt.Printf( \"panic: %s\\n\" , p) fmt.Println( \"Exit function main.\" )  上面的代码， recover 函数调用并不会起到任何作用，甚至都没有机会执行。因为 panic 一旦发生，控制权就会讯速地沿着调用栈的反方向 传播。所以， 在 panic 函数调用之后的代码，根本就没有执行的机会 。 先调用 recover 函数，再调用 panic 函数会怎么样呢？ 如果在我们调用 recover 函数时未发生 panic，那么该函数就不会做任何事情，并且只会返回一个 nil 。 defer 语句调用 recover 函数才是正确的打开方式 。 无论函数结束执行的原因是什么，其中的 defer 函数调用都会在它即将结束执行的那一刻执行。即使导致它执行结束的原因是一 个 panic 也会是这样。 要注意，我们要 尽量把 defer 语句写在函数体的开始处，因为在引发 panic 的语句之后的所有语句，都不会有任何执行机会 。"},"basic/error.html#错误":{"title":"&#x9519;&#x8BEF;","path":"\\golang-learn\\basic\\error.html#错误","body":""},"basic/error.html#error-类型":{"title":"error &#x7C7B;&#x578B;","path":"\\golang-learn\\basic\\error.html#error-类型","body":"error &#x7C7B;&#x578B;&#x662F;&#x5185;&#x7F6E;&#x7684;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x3002; error &#x7C7B;&#x578B;&#x53EF;&#x80FD;&#x662F; nil &#x6216;&#x8005; non-nil &#xFF0C; nil &#x8868;&#x793A;&#x6210;&#x529F;&#x3002; &#x9519;&#x8BEF;&#x5904;&#x7406; &#x5F53;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#x65F6;&#xFF0C;&#x6700;&#x5E38;&#x7528;&#x7684;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x662F; &#x4F20;&#x64AD;&#x9519;&#x8BEF; &#xFF0C;&#x5982;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 resp, err := http.Get(url) if err != nil { // &#x5C06;&#x8FD9;&#x4E2A;HTTP&#x9519;&#x8BEF;&#x8FD4;&#x56DE;&#x7ED9;&#x8C03;&#x7528;&#x8005; return nil , err } doc, err := html.Parse(resp.Body) resp.Body.Close() if err != nil { \t // fmt.Errorf&#x51FD;&#x6570;&#x4F7F;&#x7528;fmt.Sprintf&#x683C;&#x5F0F;&#x5316;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x5E76;&#x8FD4;&#x56DE; \t // &#x4F7F;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#x524D;&#x7F00;&#x6DFB;&#x52A0;&#x989D;&#x5916;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4FE1;&#x606F;&#x5230;&#x539F;&#x59CB;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3002; return nil , fmt.Errorf( parsing %s as HTML: %v , url,err) } &#x7531;&#x4E8E;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x7ECF;&#x5E38;&#x662F;&#x4EE5;&#x94FE;&#x5F0F;&#x7EC4;&#x5408;&#x5728;&#x4E00;&#x8D77;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x4E2D;&#x5E94;&#x907F;&#x514D;&#x5927;&#x5199;&#x548C;&#x6362;&#x884C;&#x7B26;&#x3002; &#x7F16;&#x5199;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x786E;&#x4FDD;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x5BF9;&#x95EE;&#x9898;&#x7EC6;&#x8282;&#x7684;&#x63CF;&#x8FF0;&#x662F;&#x8BE6;&#x5C3D;&#x7684;&#x3002;&#x5C24;&#x5176;&#x662F;&#x8981;&#x6CE8;&#x610F;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x8868;&#x8FBE;&#x7684;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x5373;&#x76F8;&#x540C;&#x7684;&#x51FD;&#x6570;&#x6216;&#x540C;&#x5305;&#x5185; &#x7684;&#x540C;&#x4E00;&#x7EC4;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x9519;&#x8BEF;&#x5728;&#x6784;&#x6210;&#x548C;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x4E0A;&#x662F;&#x76F8;&#x4F3C;&#x7684;&#x3002; &#x6839;&#x636E;&#x4E0D;&#x540C;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x8981;&#x5BF9;&#x9519;&#x8BEF;&#x505A;&#x4E9B;&#x7279;&#x6B8A;&#x5904;&#x7406;&#xFF0C;&#x6BD4;&#x5982;&#x9519;&#x8BEF;&#x91CD;&#x8BD5;&#x673A;&#x5236;&#xFF0C;&#x6216;&#x8005;&#x6253;&#x5370;&#x9519;&#x8BEF;&#x65E5;&#x5FD7;&#xFF0C;&#x6216;&#x8005;&#x76F4;&#x63A5;&#x5FFD;&#x7565;&#x9519;&#x8BEF;&#x3002; &#x6587;&#x4EF6;&#x7ED3;&#x5C3E;&#x9519;&#x8BEF; io &#x5305;&#x5728;&#x4EFB;&#x4F55;&#x7531;&#x6587;&#x4EF6;&#x7ED3;&#x675F;&#x5F15;&#x8D77;&#x7684;&#x8BFB;&#x53D6;&#x5931;&#x8D25;&#x90FD;&#x8FD4;&#x56DE;&#x540C;&#x4E00;&#x4E2A;&#x9519;&#x8BEF; io.EOF &#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 in := bufio.NewReader(os.Stdin) for { r, _, err := in.ReadRune() if err == io.EOF { break // finished reading } if err != nil { return fmt.Errorf( read failed:%v , err) } // ...use r&#x2026; }"},"basic/error.html#Panic-异常":{"title":"Panic &#x5F02;&#x5E38;","path":"\\golang-learn\\basic\\error.html#Panic-异常","body":"Go &#x8FD0;&#x884C;&#x65F6;&#x9519;&#x8BEF;&#x4F1A;&#x5F15;&#x8D77; painc &#x5F02;&#x5E38;&#x3002; &#x4E00;&#x822C;&#x800C;&#x8A00;&#xFF0C;&#x5F53; panic &#x5F02;&#x5E38;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x7A0B;&#x5E8F;&#x4F1A;&#x4E2D;&#x65AD;&#x8FD0;&#x884C;&#xFF0C;&#x5E76;&#x7ACB;&#x5373;&#x6267;&#x884C;&#x5728;&#x8BE5; goroutine &#x4E2D;&#x88AB;&#x5EF6;&#x8FDF;&#x7684;&#x51FD;&#x6570;&#xFF08; defer &#x673A;&#x5236;&#xFF09;&#x3002;&#x968F;&#x540E;&#xFF0C;&#x7A0B;&#x5E8F;&#x5D29;&#x6E83; &#x5E76;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x3002; &#x7531;&#x4E8E; panic &#x4F1A;&#x5F15;&#x8D77;&#x7A0B;&#x5E8F;&#x7684;&#x5D29;&#x6E83;&#xFF0C;&#x56E0;&#x6B64; panic &#x4E00;&#x822C;&#x7528;&#x4E8E;&#x4E25;&#x91CD;&#x9519;&#x8BEF;&#xFF0C;&#x5982;&#x7A0B;&#x5E8F;&#x5185;&#x90E8;&#x7684;&#x903B;&#x8F91;&#x4E0D;&#x4E00;&#x81F4;&#x3002;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x5927;&#x90E8;&#x5206;&#x6F0F;&#x6D1E;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x4F7F; &#x7528; Go &#x63D0;&#x4F9B;&#x7684;&#x9519;&#x8BEF;&#x673A;&#x5236;&#xFF0C;&#x800C;&#x4E0D;&#x662F; panic &#xFF0C;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#x7A0B;&#x5E8F;&#x7684;&#x5D29;&#x6E83;&#x3002; panic &#x51FD;&#x6570; panic &#x51FD;&#x6570;&#x63A5;&#x53D7;&#x4EFB;&#x4F55;&#x503C;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x3002;&#x5F53;&#x67D0;&#x4E9B;&#x4E0D;&#x5E94;&#x8BE5;&#x53D1;&#x751F;&#x7684;&#x573A;&#x666F;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5E94;&#x8BE5;&#x8C03;&#x7528; panic &#x3002; panic &#x8BE6;&#x60C5;&#x4E2D;&#x90FD;&#x6709;&#x4EC0;&#x4E48; 1 2 3 4 5 6 panic: runtime error: index out of range goroutine 1 [running]: main.main() /Users/haolin/GeekTime/Golang_Puzzlers/src/puzzlers/article19/q0/demo47.go:5 +0x3d exit status 2 &#x7B2C;&#x4E00;&#x884C;&#x662F; panic: runtime error: index out of range &#x3002;&#x5176;&#x4E2D;&#x7684; runtime error &#x7684;&#x542B;&#x4E49;&#x662F;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A; runtime &#x4EE3;&#x7801;&#x5305;&#x4E2D; &#x629B;&#x51FA;&#x7684; panic &#x3002; goroutine 1 [running] &#xFF0C;&#x5B83;&#x8868;&#x793A;&#x6709;&#x4E00;&#x4E2A; ID &#x4E3A;1&#x7684; goroutine &#x5728;&#x6B64; panic &#x88AB;&#x5F15;&#x53D1;&#x7684;&#x65F6;&#x5019;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x3002;&#x8FD9;&#x91CC;&#x7684; ID &#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x91CD;&#x8981;&#x3002; main.main() &#x8868;&#x660E;&#x4E86;&#x8FD9;&#x4E2A; goroutine &#x5305;&#x88C5;&#x7684; go &#x51FD;&#x6570;&#x5C31;&#x662F;&#x547D;&#x4EE4;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x90A3;&#x4E2A; main &#x51FD;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x8FD9;&#x91CC;&#x7684; goroutine &#x6B63; &#x662F; &#x4E3B; goroutine &#x3002; &#x518D;&#x4E0B;&#x9762;&#x7684;&#x4E00;&#x884C;&#xFF0C;&#x6307;&#x51FA;&#x7684;&#x5C31;&#x662F;&#x8FD9;&#x4E2A; goroutine &#x4E2D;&#x7684;&#x54EA;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x5728;&#x6B64; panic &#x88AB;&#x5F15;&#x53D1;&#x65F6;&#x6B63;&#x5728;&#x6267;&#x884C;&#x3002;&#x542B;&#x4E86;&#x6B64;&#x884C;&#x4EE3;&#x7801;&#x5728;&#x5176;&#x6240;&#x5C5E;&#x7684;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x884C;&#x6570;&#xFF0C; &#x4EE5;&#x53CA;&#x8FD9;&#x4E2A;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x3002; +0x3d &#x4EE3;&#x8868;&#x7684;&#x662F;&#xFF1A;&#x6B64;&#x884C;&#x4EE3;&#x7801;&#x76F8;&#x5BF9;&#x4E8E;&#x5176;&#x6240;&#x5C5E;&#x51FD;&#x6570;&#x7684;&#x5165;&#x53E3;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x504F;&#x79FB;&#x91CF;&#x3002;&#x7528;&#x5904;&#x5E76;&#x4E0D;&#x5927;&#x3002; exit status 2 &#x8868;&#x660E;&#x6211;&#x7684;&#x8FD9;&#x4E2A;&#x7A0B;&#x5E8F;&#x662F;&#x4EE5;&#x9000;&#x51FA;&#x72B6;&#x6001;&#x7801;2&#x7ED3;&#x675F;&#x8FD0;&#x884C;&#x7684;&#x3002; &#x5728;&#x5927;&#x591A;&#x6570;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x53EA;&#x8981;&#x9000;&#x51FA;&#x72B6;&#x6001;&#x7801;&#x4E0D;&#x662F; 0&#xFF0C;&#x90FD;&#x610F;&#x5473;&#x7740;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x7684;&#x975E;&#x6B63; &#x5E38;&#x7ED3;&#x675F; &#x3002;&#x5728; Go &#x8BED;&#x8A00;&#x4E2D;&#xFF0C; &#x56E0; panic &#x5BFC;&#x81F4;&#x7A0B;&#x5E8F;&#x7ED3;&#x675F;&#x8FD0;&#x884C;&#x7684;&#x9000;&#x51FA;&#x72B6;&#x6001;&#x7801;&#x4E00;&#x822C;&#x90FD;&#x4F1A;&#x662F; 2 &#x3002; &#x4ECE; panic &#x88AB;&#x5F15;&#x53D1;&#x5230;&#x7A0B;&#x5E8F;&#x7EC8;&#x6B62;&#x8FD0;&#x884C;&#x7684;&#x5927;&#x81F4;&#x8FC7;&#x7A0B;&#x662F;&#x4EC0;&#x4E48; &#x6B64;&#x884C;&#x4EE3;&#x7801;&#x6240;&#x5C5E;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x968F;&#x5373;&#x7EC8;&#x6B62;&#x3002;&#x7D27;&#x63A5;&#x7740;&#xFF0C;&#x63A7;&#x5236;&#x6743;&#x5E76;&#x4E0D;&#x4F1A;&#x5728;&#x6B64;&#x6709;&#x7247;&#x523B;&#x505C;&#x7559;&#xFF0C;&#x5B83;&#x53C8;&#x4F1A;&#x7ACB;&#x5373;&#x8F6C;&#x79FB;&#x81F3;&#x518D;&#x4E0A;&#x4E00;&#x7EA7;&#x7684;&#x8C03;&#x7528;&#x4EE3;&#x7801;&#x5904;&#x3002;&#x63A7;&#x5236;&#x6743;&#x5982;&#x6B64;&#x4E00;&#x7EA7;&#x4E00; &#x7EA7;&#x5730;&#x6CBF;&#x7740;&#x8C03;&#x7528;&#x6808;&#x7684;&#x53CD;&#x65B9;&#x5411;&#x4F20;&#x64AD;&#x81F3;&#x9876;&#x7AEF;&#xFF0C; &#x4E5F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x7F16;&#x5199;&#x7684;&#x6700;&#x5916;&#x5C42;&#x51FD;&#x6570;&#x90A3;&#x91CC;&#x3002; &#x8FD9;&#x91CC;&#x7684;&#x6700;&#x5916;&#x5C42;&#x51FD;&#x6570;&#x6307;&#x7684;&#x662F;go&#x51FD;&#x6570;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E3B; goroutine &#x6765;&#x8BF4;&#x5C31;&#x662F; main &#x51FD;&#x6570;&#x3002;&#x4F46;&#x662F;&#x63A7;&#x5236;&#x6743;&#x4E5F;&#x4E0D;&#x4F1A;&#x505C;&#x7559;&#x5728;&#x90A3;&#x91CC;&#xFF0C;&#x800C;&#x662F;&#x88AB; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x6536;&#x56DE;&#x3002; &#x968F;&#x540E;&#xFF0C;&#x7A0B;&#x5E8F;&#x5D29;&#x6E83;&#x5E76;&#x7EC8;&#x6B62;&#x8FD0;&#x884C;&#xFF0C;&#x627F;&#x8F7D;&#x7A0B;&#x5E8F;&#x8FD9;&#x6B21;&#x8FD0;&#x884C;&#x7684;&#x8FDB;&#x7A0B;&#x4E5F;&#x4F1A;&#x968F;&#x4E4B;&#x6B7B;&#x4EA1;&#x5E76;&#x6D88;&#x5931;&#x3002;&#x4E0E;&#x6B64;&#x540C;&#x65F6;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x63A7;&#x5236;&#x6743;&#x4F20;&#x64AD;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;panic &#x8BE6;&#x60C5;&#x4F1A;&#x88AB;&#x9010; &#x6E10;&#x5730;&#x79EF;&#x7D2F;&#x548C;&#x5B8C;&#x5584;&#xFF0C;&#x5E76;&#x4F1A;&#x5728;&#x7A0B;&#x5E8F;&#x7EC8;&#x6B62;&#x4E4B;&#x524D;&#x88AB;&#x6253;&#x5370;&#x51FA;&#x6765;&#x3002; &#x600E;&#x6837;&#x8BA9; panic &#x5305;&#x542B;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x4EE5;&#x53CA;&#x5E94;&#x8BE5;&#x8BA9;&#x5B83;&#x5305;&#x542B;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x503C; &#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5728;&#x8C03;&#x7528; panic &#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x628A;&#x67D0;&#x4E2A;&#x503C;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x4F20;&#x7ED9;&#x8BE5;&#x51FD;&#x6570;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; panic &#x51FD;&#x6570;&#x7684;&#x552F;&#x4E00;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x7A7A;&#x63A5;&#x53E3; &#xFF08;&#x4E5F;&#x5C31;&#x662F; interface{} &#xFF09;&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4ECE;&#x8BED;&#x6CD5;&#x4E0A;&#x8BB2;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; &#x4F46;&#x662F;&#xFF0C;&#x6211;&#x4EEC; &#x6700;&#x597D;&#x4F20;&#x5165; error &#x7C7B;&#x578B;&#x7684;&#x9519;&#x8BEF;&#x503C;&#xFF0C;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x7684;&#x53EF;&#x4EE5;&#x88AB;&#x6709;&#x6548;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x503C;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x201C;&#x6709;&#x6548;&#x5E8F;&#x5217;&#x5316;&#x201D;&#x6307;&#x7684;&#x662F;&#xFF0C;&#x53EF;&#x4EE5;&#x66F4;&#x6613;&#x8BFB;&#x5730;&#x53BB;&#x8868;&#x793A; &#x5F62;&#x5F0F;&#x8F6C;&#x6362; &#x3002;"},"basic/error.html#Recover-捕获异常":{"title":"Recover &#x6355;&#x83B7;&#x5F02;&#x5E38;","path":"\\golang-learn\\basic\\error.html#Recover-捕获异常","body":"&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x56E0;&#x4E3A;&#x67D0;&#x4E2A;&#x5904;&#x7406;&#x51FD;&#x6570;&#x5F15;&#x53D1;&#x7684; panic &#x5F02;&#x5E38;&#xFF0C;&#x6740;&#x6389;&#x6574;&#x4E2A;&#x8FDB;&#x7A0B;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; recover &#x51FD;&#x6570;&#x6062;&#x590D; panic &#x5F02;&#x5E38;&#x3002; panic &#x65F6;&#x4F1A;&#x8C03;&#x7528; recover &#xFF0C;&#x4F46;&#x662F; recover &#x4E0D;&#x80FD;&#x6EE5;&#x7528;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x5F15;&#x8D77;&#x8D44;&#x6E90;&#x6CC4;&#x6F0F;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x95EE;&#x9898;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06; panic value &#x8BBE;&#x7F6E;&#x6210;&#x7279; &#x6B8A;&#x7C7B;&#x578B;&#xFF0C;&#x6765;&#x6807;&#x8BC6;&#x67D0;&#x4E2A; panic &#x662F;&#x5426;&#x5E94;&#x8BE5;&#x88AB;&#x6062;&#x590D;&#x3002; recover &#x53EA;&#x80FD;&#x5728; defer &#x4FEE;&#x9970;&#x7684;&#x51FD;&#x6570;&#x4E2D;&#x4F7F;&#x7528; : 1 2 3 4 5 6 7 8 9 10 11 12 13 func soleTitle (doc *html.Node) (title string , err error) { \t type bailout struct {} \t defer func () { \t\t switch p := recover (); p { case nil : // no panic case bailout{}: // expected panic err = fmt.Errorf( multiple title elements ) default : panic (p) // unexpected panic; carry on panicking \t\t} \t}() panic (bailout{}) } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C; deferred &#x51FD;&#x6570;&#x8C03;&#x7528; recover &#xFF0C;&#x5E76;&#x68C0;&#x67E5; panic value &#x3002;&#x5F53; panic value &#x662F; bailout{} &#x7C7B;&#x578B;&#x65F6;&#xFF0C; deferred &#x51FD;&#x6570;&#x751F; &#x6210;&#x4E00;&#x4E2A; error &#x8FD4;&#x56DE;&#x7ED9;&#x8C03;&#x7528;&#x8005;&#x3002; &#x5F53; panic value &#x662F;&#x5176;&#x4ED6; non-nil &#x503C;&#x65F6;&#xFF0C;&#x8868;&#x793A;&#x53D1;&#x751F;&#x4E86;&#x672A;&#x77E5;&#x7684; panic &#x5F02;&#x5E38;&#x3002; &#x6B63;&#x786E;&#x8C03;&#x7528; recover &#x51FD;&#x6570; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import ( fmt errors ) func main () { fmt.Println( Enter function main. ) // &#x5F15;&#x53D1; panic&#x3002; panic (errors.New( something wrong )) p := recover () fmt.Printf( panic: %s\\n , p) fmt.Println( Exit function main. ) } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C; recover &#x51FD;&#x6570;&#x8C03;&#x7528;&#x5E76;&#x4E0D;&#x4F1A;&#x8D77;&#x5230;&#x4EFB;&#x4F55;&#x4F5C;&#x7528;&#xFF0C;&#x751A;&#x81F3;&#x90FD;&#x6CA1;&#x6709;&#x673A;&#x4F1A;&#x6267;&#x884C;&#x3002;&#x56E0;&#x4E3A; panic &#x4E00;&#x65E6;&#x53D1;&#x751F;&#xFF0C;&#x63A7;&#x5236;&#x6743;&#x5C31;&#x4F1A;&#x8BAF;&#x901F;&#x5730;&#x6CBF;&#x7740;&#x8C03;&#x7528;&#x6808;&#x7684;&#x53CD;&#x65B9;&#x5411; &#x4F20;&#x64AD;&#x3002;&#x6240;&#x4EE5;&#xFF0C; &#x5728; panic &#x51FD;&#x6570;&#x8C03;&#x7528;&#x4E4B;&#x540E;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6839;&#x672C;&#x5C31;&#x6CA1;&#x6709;&#x6267;&#x884C;&#x7684;&#x673A;&#x4F1A; &#x3002; &#x5148;&#x8C03;&#x7528; recover &#x51FD;&#x6570;&#xFF0C;&#x518D;&#x8C03;&#x7528; panic &#x51FD;&#x6570;&#x4F1A;&#x600E;&#x4E48;&#x6837;&#x5462;&#xFF1F; &#x5982;&#x679C;&#x5728;&#x6211;&#x4EEC;&#x8C03;&#x7528; recover &#x51FD;&#x6570;&#x65F6;&#x672A;&#x53D1;&#x751F; panic&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x51FD;&#x6570;&#x5C31;&#x4E0D;&#x4F1A;&#x505A;&#x4EFB;&#x4F55;&#x4E8B;&#x60C5;&#xFF0C;&#x5E76;&#x4E14;&#x53EA;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; nil &#x3002; defer &#x8BED;&#x53E5;&#x8C03;&#x7528; recover &#x51FD;&#x6570;&#x624D;&#x662F;&#x6B63;&#x786E;&#x7684;&#x6253;&#x5F00;&#x65B9;&#x5F0F; &#x3002; &#x65E0;&#x8BBA;&#x51FD;&#x6570;&#x7ED3;&#x675F;&#x6267;&#x884C;&#x7684;&#x539F;&#x56E0;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x5176;&#x4E2D;&#x7684; defer &#x51FD;&#x6570;&#x8C03;&#x7528;&#x90FD;&#x4F1A;&#x5728;&#x5B83;&#x5373;&#x5C06;&#x7ED3;&#x675F;&#x6267;&#x884C;&#x7684;&#x90A3;&#x4E00;&#x523B;&#x6267;&#x884C;&#x3002;&#x5373;&#x4F7F;&#x5BFC;&#x81F4;&#x5B83;&#x6267;&#x884C;&#x7ED3;&#x675F;&#x7684;&#x539F;&#x56E0;&#x662F;&#x4E00; &#x4E2A; panic &#x4E5F;&#x4F1A;&#x662F;&#x8FD9;&#x6837;&#x3002; &#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x6211;&#x4EEC;&#x8981; &#x5C3D;&#x91CF;&#x628A; defer &#x8BED;&#x53E5;&#x5199;&#x5728;&#x51FD;&#x6570;&#x4F53;&#x7684;&#x5F00;&#x59CB;&#x5904;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x5F15;&#x53D1; panic &#x7684;&#x8BED;&#x53E5;&#x4E4B;&#x540E;&#x7684;&#x6240;&#x6709;&#x8BED;&#x53E5;&#xFF0C;&#x90FD;&#x4E0D;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x6267;&#x884C;&#x673A;&#x4F1A; &#x3002;"},"basic/array.html":{"title":"数组","path":"\\golang-learn\\basic\\array.html","body":"数组 数组是一个由固定长度的指定类型元素组成的序列。数组的长度在编译阶段确定。 声明数组： 1 var 变量名 [SIZE]类型 内置函数 len 获取数组长度。通过下标访问元素： 1 2 3 var a [ 3 ] int // array of 3 integers fmt.Println(a[ 0 ]) // print the first element fmt.Println(a[ len (a) -1 ]) // print the last element, a[2] 默认情况下，数组的每个元素都被初始化为元素类型对应的零值。 初始化数组： 1 2 3 4 5 6 7 8 9 10 11 var q [ 3 ] int = [ 3 ] int  1 , 2 , 3  var r [ 3 ] int = [ 3 ] int  1 , 2  fmt.Println(r[ 2 ]) // \"0\" var balance = [] float32  1000.0 , 2.0 , 3.4 , 7.0 , 50.0  mt.Println( len (balance)) // 5 var balance2 = [] float32 fmt.Println( len (balance2)) // type []float32 is not an expression q := [...] int  1 , 2 , 3  fmt.Printf( \"%T\\n\" , q) // \"[3]int\" 初始化数组中 {} 中的元素个数不能大于 [] 中的数字。 如果 [] 设置了 SIZE ，Go 语言会根据元素的个数来设置数组的大小。 上面代码中的 ... 省略号，表示数组的长度是根据初始化值的个数来计算 。 声明数组 SIZE 是必须的，如果没有，那就是切片了。 二维数组 1 2 3 4 5 6 var a = [ 3 ][ 4 ] int   0 , 1 , 2 , 3  , /* 第一行索引为 0 */  4 , 5 , 6 , 7  , /* 第二行索引为 1 */  8 , 9 , 10 , 11 , /* 第三行索引为 2 */  fmt.Printf( \"a[%d][%d] = %d\\n\" , 2 , 3 , a[ 2 ][ 3 ] ) == 和 != 比较运算符来比较两个数组，只有当两个数组的所有元素都是相等的时候数组才是相等的。 数组传入函数 当调用函数时，函数的形参会被赋值， 所以函数参数变量接收的是一个复制的副本，并不是原始调用的变量。 但是 这种机制， 如果碰到传递一个大数组时，效率较低。这个时候可以显示的传入一个数组指针 （其他语言其实是隐式的传递指针）。 1 2 3 func test (ptr *[32] byte )  *ptr = [ 32 ] byte  "},"basic/array.html#数组":{"title":"&#x6570;&#x7EC4;","path":"\\golang-learn\\basic\\array.html#数组","body":"&#x6570;&#x7EC4;&#x662F;&#x4E00;&#x4E2A;&#x7531;&#x56FA;&#x5B9A;&#x957F;&#x5EA6;&#x7684;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x5143;&#x7D20;&#x7EC4;&#x6210;&#x7684;&#x5E8F;&#x5217;&#x3002;&#x6570;&#x7EC4;&#x7684;&#x957F;&#x5EA6;&#x5728;&#x7F16;&#x8BD1;&#x9636;&#x6BB5;&#x786E;&#x5B9A;&#x3002; &#x58F0;&#x660E;&#x6570;&#x7EC4;&#xFF1A; 1 var &#x53D8;&#x91CF;&#x540D; [SIZE]&#x7C7B;&#x578B; &#x5185;&#x7F6E;&#x51FD;&#x6570; len &#x83B7;&#x53D6;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x3002;&#x901A;&#x8FC7;&#x4E0B;&#x6807;&#x8BBF;&#x95EE;&#x5143;&#x7D20;&#xFF1A; 1 2 3 var a [ 3 ] int // array of 3 integers fmt.Println(a[ 0 ]) // print the first element fmt.Println(a[ len (a) -1 ]) // print the last element, a[2] &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6570;&#x7EC4;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x5BF9;&#x5E94;&#x7684;&#x96F6;&#x503C;&#x3002; &#x521D;&#x59CB;&#x5316;&#x6570;&#x7EC4;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 var q [ 3 ] int = [ 3 ] int { 1 , 2 , 3 } var r [ 3 ] int = [ 3 ] int { 1 , 2 } fmt.Println(r[ 2 ]) // 0 var balance = [] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } mt.Println( len (balance)) // 5 var balance2 = [] float32 fmt.Println( len (balance2)) // type []float32 is not an expression q := [...] int { 1 , 2 , 3 } fmt.Printf( %T\\n , q) // [3]int &#x521D;&#x59CB;&#x5316;&#x6570;&#x7EC4;&#x4E2D; {} &#x4E2D;&#x7684;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#x4E0D;&#x80FD;&#x5927;&#x4E8E; [] &#x4E2D;&#x7684;&#x6570;&#x5B57;&#x3002; &#x5982;&#x679C; [] &#x8BBE;&#x7F6E;&#x4E86; SIZE &#xFF0C;Go &#x8BED;&#x8A00;&#x4F1A;&#x6839;&#x636E;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#x6765;&#x8BBE;&#x7F6E;&#x6570;&#x7EC4;&#x7684;&#x5927;&#x5C0F;&#x3002; &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684; ... &#x7701;&#x7565;&#x53F7;&#xFF0C;&#x8868;&#x793A;&#x6570;&#x7EC4;&#x7684;&#x957F;&#x5EA6;&#x662F;&#x6839;&#x636E;&#x521D;&#x59CB;&#x5316;&#x503C;&#x7684;&#x4E2A;&#x6570;&#x6765;&#x8BA1;&#x7B97; &#x3002; &#x58F0;&#x660E;&#x6570;&#x7EC4; SIZE &#x662F;&#x5FC5;&#x987B;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x5207;&#x7247;&#x4E86;&#x3002;"},"basic/array.html#二维数组":{"title":"&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;","path":"\\golang-learn\\basic\\array.html#二维数组","body":"1 2 3 4 5 6 var a = [ 3 ][ 4 ] int { { 0 , 1 , 2 , 3 } , /* &#x7B2C;&#x4E00;&#x884C;&#x7D22;&#x5F15;&#x4E3A; 0 */ { 4 , 5 , 6 , 7 } , /* &#x7B2C;&#x4E8C;&#x884C;&#x7D22;&#x5F15;&#x4E3A; 1 */ { 8 , 9 , 10 , 11 }, /* &#x7B2C;&#x4E09;&#x884C;&#x7D22;&#x5F15;&#x4E3A; 2 */ } fmt.Printf( a[%d][%d] = %d\\n , 2 , 3 , a[ 2 ][ 3 ] ) == &#x548C; != &#x6BD4;&#x8F83;&#x8FD0;&#x7B97;&#x7B26;&#x6765;&#x6BD4;&#x8F83;&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x53EA;&#x6709;&#x5F53;&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x90FD;&#x662F;&#x76F8;&#x7B49;&#x7684;&#x65F6;&#x5019;&#x6570;&#x7EC4;&#x624D;&#x662F;&#x76F8;&#x7B49;&#x7684;&#x3002;"},"basic/array.html#数组传入函数":{"title":"&#x6570;&#x7EC4;&#x4F20;&#x5165;&#x51FD;&#x6570;","path":"\\golang-learn\\basic\\array.html#数组传入函数","body":"&#x5F53;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x51FD;&#x6570;&#x7684;&#x5F62;&#x53C2;&#x4F1A;&#x88AB;&#x8D4B;&#x503C;&#xFF0C; &#x6240;&#x4EE5;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x53D8;&#x91CF;&#x63A5;&#x6536;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x590D;&#x5236;&#x7684;&#x526F;&#x672C;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x539F;&#x59CB;&#x8C03;&#x7528;&#x7684;&#x53D8;&#x91CF;&#x3002; &#x4F46;&#x662F; &#x8FD9;&#x79CD;&#x673A;&#x5236;&#xFF0C; &#x5982;&#x679C;&#x78B0;&#x5230;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x5927;&#x6570;&#x7EC4;&#x65F6;&#xFF0C;&#x6548;&#x7387;&#x8F83;&#x4F4E;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x663E;&#x793A;&#x7684;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x6307;&#x9488; &#xFF08;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x5176;&#x5B9E;&#x662F;&#x9690;&#x5F0F;&#x7684;&#x4F20;&#x9012;&#x6307;&#x9488;&#xFF09;&#x3002; 1 2 3 func test (ptr *[32] byte ) { *ptr = [ 32 ] byte {} }"},"basic/env_config.html":{"title":"Go 环境配置","path":"\\golang-learn\\basic\\env_config.html","body":"Go 环境配置 安装 Windows 下安装，官网 下载安装包 ，直接安装。 默认情况下 .msi 文件会安装在 c:\\Go 目录下。安装完成后默认会将 c:\\Go\\bin 目录添加到 PATH 环境变量中。 并添加环境变量 GOROOT ，值为 Go 安装根目录 C:\\Go\\ 。重启命令窗口生效。 打开 CMD 输入 go 命令，验证是否安装成功。否则检查环境变量 Path 和 GOROOT 。 工作区 GOROOT 环境变量 GOROOT 用来指定 Go 的安装目录，Go 的标准库也在这个位置。目录结构与 GOPATH 类似。 GOPATH 我们安装好 Go 之后， 必须配置一个环境变量 GOPATH ，这个 GOPATH 路径是用来指定当前工作目录的。 不能和 Go 的安装目录（ GOROOT ）一样 。 工作区的目录结构： 1 2 3 4 GOPATH/ src/ # 源码目录 bin/ # 存放编译后的可执行程序 pkg/ # 存放编译后的包的目标文件 GOPATH 允许多个目录，当有多个目录时，请注意分隔符，多个目录的时候 Windows 是分号 ; ，Linux 系统是冒号 : ， 当有多个 GOPATH 时，默认会将 go get 的内容放在第一个目录下。 Go Module golang 1.11 已经支持 Go Module。这是官方提倡的新的包管理，乃至项目管理机制，可以不再需要 GOPATH 的存在。 Module 机制 Go Module 不同于以往基于 GOPATH 和 Vendor 的项目构建，其主要是通过 $GOPATH/pkg/mod 下的缓存包来对项目进行构建。 Go Module 可以通过 GO111MODULE 来控制是否启用， GO111MODULE 有三种类型: on 所有的构建，都使用 Module 机制 off 所有的构建，都不使用 Module 机制，而是使用 GOPATH 和 Vendor auto 在 GOPATH 下的项目，不使用 Module 机制，不在 GOPATH 下的项目使用 和 dep 的区别 dep 是解析所有的包引用，然后在 $GOPATH/pkg/dep 下进行缓存，再在项目下生成 vendor，然后基于 vendor 来构建项目， 无法脱离 GOPATH 。 mod 是解析所有的包引用，然后在 $GOPATH/pkg/mod 下进行缓存，直接基于缓存包来构建项目，所以可以脱离 GOPATH 准备环境 golang 1.11 的环境需要开启 GO11MODULE ，并且 确保项目目录不在 GOPATH 中 。 1 export GO111MODULE=on golang 1.12 只需要确保实验目录不在 GOPATH 中。 配置代理 export GOPROXY=https://goproxy.io 。（如果拉取包失败，会报 cannot find module for path xxx 的错误） 迁移到 Go Module 1 2 3 4 5 6 7 8 9 10 11 12 # clone 项目, 不要在 `GOPATH` 中, 比如之前的项目的结构是 `GOPATH/src/cdf-mannager` git clone https://github.com/xxx/cdf-mannager # 删除 vender cd cdf-mannager rm -rf vender # init go mod init cdf-mannager # 下载依赖 也可以不执行这一步， go run 或 go build 会自动下载 go mod download Go 会把 Gopkg.lock 或者 glide.lock 中的依赖项写入到 go.mod 文件中。 go.mod 文件的内容像下面这样： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 module cdf-manager require ( github.com/fsnotify/fsnotify v1.4.7 github.com/gin-contrib/sse v0.0.0-20170109093832-22d885f9ecc7 github.com/gin-gonic/gin v0.0.0-20180814085852-b869fe1415e4 github.com/golang/protobuf v0.0.0-20170601230230-5a0f697c9ed9 github.com/hashicorp/hcl v1.0.0 github.com/inconshreveable/mousetrap v0.0.0-20141017200713-76626ae9c91c github.com/json-iterator/go v0.0.0-20170829155851-36b14963da70 github.com/lexkong/log v0.0.0-20180607165131-972f9cd951fc github.com/magiconair/properties v1.8.0 github.com/mattn/go-isatty v0.0.0-20170307163044-57fdcb988a5c github.com/mitchellh/mapstructure v1.1.2 github.com/pelletier/go-toml v1.2.0 github.com/satori/go.uuid v0.0.0-20180103152354-f58768cc1a7a github.com/spf13/afero v1.1.2 github.com/spf13/cast v1.3.0 github.com/spf13/cobra v0.0.0-20180427134550-ef82de70bb3f github.com/spf13/jwalterweatherman v1.0.0 github.com/spf13/pflag v1.0.3 github.com/spf13/viper v0.0.0-20181207100336-6d33b5a963d9 github.com/ugorji/go v1.1.2-0.20180831062425-e253f1f20942 github.com/willf/pad v0.0.0-20160331131008-b3d780601022 golang.org/x/sys v0.0.0-20190116161447-11f53e031339 golang.org/x/text v0.3.0 gopkg.in/go-playground/validator.v8 v8.0.0-20160718134125-5f57d2222ad7 gopkg.in/yaml.v2 v2.2.2 ) 开发工具 常用 IDE： LiteIDE Sublime GoLand VS Code"},"basic/env_config.html#Go-环境配置":{"title":"Go &#x73AF;&#x5883;&#x914D;&#x7F6E;","path":"\\golang-learn\\basic\\env_config.html#Go-环境配置","body":""},"basic/env_config.html#安装":{"title":"&#x5B89;&#x88C5;","path":"\\golang-learn\\basic\\env_config.html#安装","body":"Windows &#x4E0B;&#x5B89;&#x88C5;&#xFF0C;&#x5B98;&#x7F51; &#x4E0B;&#x8F7D;&#x5B89;&#x88C5;&#x5305; &#xFF0C;&#x76F4;&#x63A5;&#x5B89;&#x88C5;&#x3002; &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B; .msi &#x6587;&#x4EF6;&#x4F1A;&#x5B89;&#x88C5;&#x5728; c:\\Go &#x76EE;&#x5F55;&#x4E0B;&#x3002;&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#x9ED8;&#x8BA4;&#x4F1A;&#x5C06; c:\\Go\\bin &#x76EE;&#x5F55;&#x6DFB;&#x52A0;&#x5230; PATH &#x73AF;&#x5883;&#x53D8;&#x91CF;&#x4E2D;&#x3002; &#x5E76;&#x6DFB;&#x52A0;&#x73AF;&#x5883;&#x53D8;&#x91CF; GOROOT &#xFF0C;&#x503C;&#x4E3A; Go &#x5B89;&#x88C5;&#x6839;&#x76EE;&#x5F55; C:\\Go\\ &#x3002;&#x91CD;&#x542F;&#x547D;&#x4EE4;&#x7A97;&#x53E3;&#x751F;&#x6548;&#x3002; &#x6253;&#x5F00; CMD &#x8F93;&#x5165; go &#x547D;&#x4EE4;&#xFF0C;&#x9A8C;&#x8BC1;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;&#x3002;&#x5426;&#x5219;&#x68C0;&#x67E5;&#x73AF;&#x5883;&#x53D8;&#x91CF; Path &#x548C; GOROOT &#x3002;"},"basic/env_config.html#工作区":{"title":"&#x5DE5;&#x4F5C;&#x533A;","path":"\\golang-learn\\basic\\env_config.html#工作区","body":"GOROOT &#x73AF;&#x5883;&#x53D8;&#x91CF; GOROOT &#x7528;&#x6765;&#x6307;&#x5B9A; Go &#x7684;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;Go &#x7684;&#x6807;&#x51C6;&#x5E93;&#x4E5F;&#x5728;&#x8FD9;&#x4E2A;&#x4F4D;&#x7F6E;&#x3002;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x4E0E; GOPATH &#x7C7B;&#x4F3C;&#x3002; GOPATH &#x6211;&#x4EEC;&#x5B89;&#x88C5;&#x597D; Go &#x4E4B;&#x540E;&#xFF0C; &#x5FC5;&#x987B;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x73AF;&#x5883;&#x53D8;&#x91CF; GOPATH &#xFF0C;&#x8FD9;&#x4E2A; GOPATH &#x8DEF;&#x5F84;&#x662F;&#x7528;&#x6765;&#x6307;&#x5B9A;&#x5F53;&#x524D;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#x7684;&#x3002; &#x4E0D;&#x80FD;&#x548C; Go &#x7684;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF08; GOROOT &#xFF09;&#x4E00;&#x6837; &#x3002; &#x5DE5;&#x4F5C;&#x533A;&#x7684;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#xFF1A; 1 2 3 4 GOPATH/ src/ # &#x6E90;&#x7801;&#x76EE;&#x5F55; bin/ # &#x5B58;&#x653E;&#x7F16;&#x8BD1;&#x540E;&#x7684;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F; pkg/ # &#x5B58;&#x653E;&#x7F16;&#x8BD1;&#x540E;&#x7684;&#x5305;&#x7684;&#x76EE;&#x6807;&#x6587;&#x4EF6; GOPATH &#x5141;&#x8BB8;&#x591A;&#x4E2A;&#x76EE;&#x5F55;&#xFF0C;&#x5F53;&#x6709;&#x591A;&#x4E2A;&#x76EE;&#x5F55;&#x65F6;&#xFF0C;&#x8BF7;&#x6CE8;&#x610F;&#x5206;&#x9694;&#x7B26;&#xFF0C;&#x591A;&#x4E2A;&#x76EE;&#x5F55;&#x7684;&#x65F6;&#x5019; Windows &#x662F;&#x5206;&#x53F7; ; &#xFF0C;Linux &#x7CFB;&#x7EDF;&#x662F;&#x5192;&#x53F7; : &#xFF0C; &#x5F53;&#x6709;&#x591A;&#x4E2A; GOPATH &#x65F6;&#xFF0C;&#x9ED8;&#x8BA4;&#x4F1A;&#x5C06; go get &#x7684;&#x5185;&#x5BB9;&#x653E;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x3002;"},"basic/env_config.html#Go-Module":{"title":"Go Module","path":"\\golang-learn\\basic\\env_config.html#Go-Module","body":"golang 1.11 &#x5DF2;&#x7ECF;&#x652F;&#x6301; Go Module&#x3002;&#x8FD9;&#x662F;&#x5B98;&#x65B9;&#x63D0;&#x5021;&#x7684;&#x65B0;&#x7684;&#x5305;&#x7BA1;&#x7406;&#xFF0C;&#x4E43;&#x81F3;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x673A;&#x5236;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x518D;&#x9700;&#x8981; GOPATH &#x7684;&#x5B58;&#x5728;&#x3002; Module &#x673A;&#x5236; Go Module &#x4E0D;&#x540C;&#x4E8E;&#x4EE5;&#x5F80;&#x57FA;&#x4E8E; GOPATH &#x548C; Vendor &#x7684;&#x9879;&#x76EE;&#x6784;&#x5EFA;&#xFF0C;&#x5176;&#x4E3B;&#x8981;&#x662F;&#x901A;&#x8FC7; $GOPATH/pkg/mod &#x4E0B;&#x7684;&#x7F13;&#x5B58;&#x5305;&#x6765;&#x5BF9;&#x9879;&#x76EE;&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#x3002; Go Module &#x53EF;&#x4EE5;&#x901A;&#x8FC7; GO111MODULE &#x6765;&#x63A7;&#x5236;&#x662F;&#x5426;&#x542F;&#x7528;&#xFF0C; GO111MODULE &#x6709;&#x4E09;&#x79CD;&#x7C7B;&#x578B;: on &#x6240;&#x6709;&#x7684;&#x6784;&#x5EFA;&#xFF0C;&#x90FD;&#x4F7F;&#x7528; Module &#x673A;&#x5236; off &#x6240;&#x6709;&#x7684;&#x6784;&#x5EFA;&#xFF0C;&#x90FD;&#x4E0D;&#x4F7F;&#x7528; Module &#x673A;&#x5236;&#xFF0C;&#x800C;&#x662F;&#x4F7F;&#x7528; GOPATH &#x548C; Vendor auto &#x5728; GOPATH &#x4E0B;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x4E0D;&#x4F7F;&#x7528; Module &#x673A;&#x5236;&#xFF0C;&#x4E0D;&#x5728; GOPATH &#x4E0B;&#x7684;&#x9879;&#x76EE;&#x4F7F;&#x7528; &#x548C; dep &#x7684;&#x533A;&#x522B; dep &#x662F;&#x89E3;&#x6790;&#x6240;&#x6709;&#x7684;&#x5305;&#x5F15;&#x7528;&#xFF0C;&#x7136;&#x540E;&#x5728; $GOPATH/pkg/dep &#x4E0B;&#x8FDB;&#x884C;&#x7F13;&#x5B58;&#xFF0C;&#x518D;&#x5728;&#x9879;&#x76EE;&#x4E0B;&#x751F;&#x6210; vendor&#xFF0C;&#x7136;&#x540E;&#x57FA;&#x4E8E; vendor &#x6765;&#x6784;&#x5EFA;&#x9879;&#x76EE;&#xFF0C; &#x65E0;&#x6CD5;&#x8131;&#x79BB; GOPATH &#x3002; mod &#x662F;&#x89E3;&#x6790;&#x6240;&#x6709;&#x7684;&#x5305;&#x5F15;&#x7528;&#xFF0C;&#x7136;&#x540E;&#x5728; $GOPATH/pkg/mod &#x4E0B;&#x8FDB;&#x884C;&#x7F13;&#x5B58;&#xFF0C;&#x76F4;&#x63A5;&#x57FA;&#x4E8E;&#x7F13;&#x5B58;&#x5305;&#x6765;&#x6784;&#x5EFA;&#x9879;&#x76EE;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x8131;&#x79BB; GOPATH &#x51C6;&#x5907;&#x73AF;&#x5883; golang 1.11 &#x7684;&#x73AF;&#x5883;&#x9700;&#x8981;&#x5F00;&#x542F; GO11MODULE &#xFF0C;&#x5E76;&#x4E14; &#x786E;&#x4FDD;&#x9879;&#x76EE;&#x76EE;&#x5F55;&#x4E0D;&#x5728; GOPATH &#x4E2D; &#x3002; 1 export GO111MODULE=on golang 1.12 &#x53EA;&#x9700;&#x8981;&#x786E;&#x4FDD;&#x5B9E;&#x9A8C;&#x76EE;&#x5F55;&#x4E0D;&#x5728; GOPATH &#x4E2D;&#x3002; &#x914D;&#x7F6E;&#x4EE3;&#x7406; export GOPROXY=https://goproxy.io &#x3002;&#xFF08;&#x5982;&#x679C;&#x62C9;&#x53D6;&#x5305;&#x5931;&#x8D25;&#xFF0C;&#x4F1A;&#x62A5; cannot find module for path xxx &#x7684;&#x9519;&#x8BEF;&#xFF09; &#x8FC1;&#x79FB;&#x5230; Go Module 1 2 3 4 5 6 7 8 9 10 11 12 # clone &#x9879;&#x76EE;, &#x4E0D;&#x8981;&#x5728; `GOPATH` &#x4E2D;, &#x6BD4;&#x5982;&#x4E4B;&#x524D;&#x7684;&#x9879;&#x76EE;&#x7684;&#x7ED3;&#x6784;&#x662F; `GOPATH/src/cdf-mannager` git clone https://github.com/xxx/cdf-mannager # &#x5220;&#x9664; vender cd cdf-mannager rm -rf vender # init go mod init cdf-mannager # &#x4E0B;&#x8F7D;&#x4F9D;&#x8D56; &#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x6267;&#x884C;&#x8FD9;&#x4E00;&#x6B65;&#xFF0C; go run &#x6216; go build &#x4F1A;&#x81EA;&#x52A8;&#x4E0B;&#x8F7D; go mod download Go &#x4F1A;&#x628A; Gopkg.lock &#x6216;&#x8005; glide.lock &#x4E2D;&#x7684;&#x4F9D;&#x8D56;&#x9879;&#x5199;&#x5165;&#x5230; go.mod &#x6587;&#x4EF6;&#x4E2D;&#x3002; go.mod &#x6587;&#x4EF6;&#x7684;&#x5185;&#x5BB9;&#x50CF;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 module cdf-manager require ( github.com/fsnotify/fsnotify v1.4.7 github.com/gin-contrib/sse v0.0.0-20170109093832-22d885f9ecc7 github.com/gin-gonic/gin v0.0.0-20180814085852-b869fe1415e4 github.com/golang/protobuf v0.0.0-20170601230230-5a0f697c9ed9 github.com/hashicorp/hcl v1.0.0 github.com/inconshreveable/mousetrap v0.0.0-20141017200713-76626ae9c91c github.com/json-iterator/go v0.0.0-20170829155851-36b14963da70 github.com/lexkong/log v0.0.0-20180607165131-972f9cd951fc github.com/magiconair/properties v1.8.0 github.com/mattn/go-isatty v0.0.0-20170307163044-57fdcb988a5c github.com/mitchellh/mapstructure v1.1.2 github.com/pelletier/go-toml v1.2.0 github.com/satori/go.uuid v0.0.0-20180103152354-f58768cc1a7a github.com/spf13/afero v1.1.2 github.com/spf13/cast v1.3.0 github.com/spf13/cobra v0.0.0-20180427134550-ef82de70bb3f github.com/spf13/jwalterweatherman v1.0.0 github.com/spf13/pflag v1.0.3 github.com/spf13/viper v0.0.0-20181207100336-6d33b5a963d9 github.com/ugorji/go v1.1.2-0.20180831062425-e253f1f20942 github.com/willf/pad v0.0.0-20160331131008-b3d780601022 golang.org/x/sys v0.0.0-20190116161447-11f53e031339 golang.org/x/text v0.3.0 gopkg.in/go-playground/validator.v8 v8.0.0-20160718134125-5f57d2222ad7 gopkg.in/yaml.v2 v2.2.2 )"},"basic/env_config.html#开发工具":{"title":"&#x5F00;&#x53D1;&#x5DE5;&#x5177;","path":"\\golang-learn\\basic\\env_config.html#开发工具","body":"&#x5E38;&#x7528; IDE&#xFF1A; LiteIDE Sublime GoLand VS Code"},"basic/flow.html":{"title":"控制语句","path":"\\golang-learn\\basic\\flow.html","body":"控制语句 if 1 2 3 if 布尔表达式   if…else 1 2 3 4 5 if 布尔表达式   else   switch 1 2 3 4 5 6 7 8 9 switch var1  case val1: ... // 不需要显示的break，case 执行完会自动中断 case val2: \t\t\t\t... \t\t case val3,val4,...:\t\t default : ...  val1 , val2 … 类型不被局限于常量或整数，但必须是相同的类型。 switch 语句，你要明白其中的 case 表达式的所有子表达式的结果值都是要与 switch 表达式的结果值判等的，因此它们的类型必须相 同或者能够都统一到 switch 表达式的结果类型。 如果无法做到，那么这条 switch 语句就不能通过编译。 switch 语句在 case 子句的选择上是具有唯一性的 。正因为如此， switch 语句不允许 case 表达式中的子表达式结果值存 在相等的情况，不论这些结果值相等的子表达式，是否存在于不同的 case 表达式中，都会是这样的结果。 普通 case 子句的编写顺序很重要，最上边的 case 子句中的子表达式总是会被最先求值，在判等的时候顺序也是这样 。因此， 如果某些子表达式的结果值有重复并且它们与 switch 表达式的结果值相等，那么位置靠上的 case 子句总会被选中。 select select 类似于用于通信的 switch 语句。每个 case 必须是一个通信操作，要么是发送要么是接收。 当条件满足时， select 会去通信并执行 case 之后的语句，这时候其它通信是不会执行的。 如果多个 case 同时满足条件， select 会随机地选择一个执行。如果没有 case 可运行，它将阻塞，直到有 case 可运行。 一个默认的子句应该总是可运行的。 1 2 3 4 5 6 7 8 select  case communication clause: ... case communication clause: ... default : /* 可选 */ \t\t\t...  for 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 for init; condition; post   // 相当于 while (x  5)  ...  for x  5  ...  // 相当于 while (true)  ...  for  \t...  for key, value := range oldMap  // 第二个循环变量可以忽略，但是第一个变量要忽略可以使用空标识符 _ 代替 newMap[key] = value  for range 支持遍历数组，切片，字符串，字典，通道，并返回索引和键值。 for range 会复制目标数据。可改用数组指针或者切片 。 range 关键字右边的位置上的代码被称为 range 表达式。 range 表达式只会在 for 语句开始执行时被求值一次，无论后边会有多少次迭代 ； range 表达式的求值结果会被复制，也就是说，被迭代的对象是 range 表达式结果值的副本而不是原值。 1 2 3 4 5 6 7 numbers1 := [] int  1 , 2 , 3 , 4 , 5 , 6  for i := range numbers1  if i == 3  numbers1[i] |= i   fmt.Println(numbers1) 打印的内容会是 [1 2 3 7 5 6] ，为什么，首先 i 是切片的下标，当 i 的值等于 3 的时候，与之对应的是切片中的第 4 个元素 值 4。对 4 和 3 进行按位或操作得到的结果是 7。 当 for 语句被执行的时候，在 range 关键字右边的 numbers1 会先被求值。 range 表达式的结果值可以是数组、数组的指针、 切片、字符串、字典或者允许接收操作的通道中的某一个，并且结果值只能有一个。这里的 numbers1 是一个切片,那么迭代变量就可以 有两个，右边的迭代变量代表当次迭代对应的某一个元素值，而左边的迭代变量则代表该元素值在切片中的索引值。 循环控制语句： break ，用于中断当前 for 循环或跳出 switch 语句 continue ，跳过当前循，继续进行下一轮循环。 goto ，将控制转移到被标记的语句。通常与条件语句配合使用。可用来实现条件转移， 构成循环，跳出循环体等功能。不推荐 使用，以免造成流程混乱。 goto 实例： 1 2 3 4 5 6 7 8 9 LOOP: for a  20  \t if a == 15  \t\t\t /* 跳过迭代 */ \t\t\ta = a + 1 \t\t\t goto LOOP \t \tfmt.Printf( \"a的值为 : %d\\n\" , a) \ta ++  使用带有 range 子句的 for 语句遍历字符串值的时候应该注意 带有 range 子句的 for 语句会先把被遍历的字符串值拆成一个 字节序列 （注意是字节序列），然后再试图找出这个字节序列中 包含的每一个 UTF-8 编码值，或者说每一个 Unicode 字符。 这样的 for 语句可以为两个迭代变量赋值。如果存在两个迭代变量，那么赋给第一个变量的值就将会是当前字节序列中的某个 UTF-8 编码 值的第一个字节所对应的那个索引值。而赋给第二个变量的值则是这个 UTF-8 编码值代表的那个 Unicode 字符，其类型会是 rune 。 1 2 3 4 str := \"Go 爱好者 \" for i, c := range str  fmt.Printf( \"%d: %q [% x]\\n\" , i, c, [] byte ( string (c)))  完整的打印内容如下： 1 2 3 4 5 0: 'G' [47] 1: 'o' [6f] 2: '爱' [e7 88 b1] 5: '好' [e5 a5 bd] 8: '者' [e8 80 85] 注意了，’爱’是由三个字节共同表达的，所以第四个 Unicode 字符’好’对应的索引值并不是 3，而是 2 加 3 后得到的 5 。"},"basic/flow.html#控制语句":{"title":"&#x63A7;&#x5236;&#x8BED;&#x53E5;","path":"\\golang-learn\\basic\\flow.html#控制语句","body":""},"basic/flow.html#if":{"title":"if","path":"\\golang-learn\\basic\\flow.html#if","body":"1 2 3 if &#x5E03;&#x5C14;&#x8868;&#x8FBE;&#x5F0F; { } if&#x2026;else 1 2 3 4 5 if &#x5E03;&#x5C14;&#x8868;&#x8FBE;&#x5F0F; { } else { }"},"basic/flow.html#switch":{"title":"switch","path":"\\golang-learn\\basic\\flow.html#switch","body":"1 2 3 4 5 6 7 8 9 switch var1 { case val1: ... // &#x4E0D;&#x9700;&#x8981;&#x663E;&#x793A;&#x7684;break&#xFF0C;case &#x6267;&#x884C;&#x5B8C;&#x4F1A;&#x81EA;&#x52A8;&#x4E2D;&#x65AD; case val2: \t\t\t\t... \t\t case val3,val4,...:\t\t default : ... } val1 , val2 &#x2026; &#x7C7B;&#x578B;&#x4E0D;&#x88AB;&#x5C40;&#x9650;&#x4E8E;&#x5E38;&#x91CF;&#x6216;&#x6574;&#x6570;&#xFF0C;&#x4F46;&#x5FC5;&#x987B;&#x662F;&#x76F8;&#x540C;&#x7684;&#x7C7B;&#x578B;&#x3002; switch &#x8BED;&#x53E5;&#xFF0C;&#x4F60;&#x8981;&#x660E;&#x767D;&#x5176;&#x4E2D;&#x7684; case &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x6240;&#x6709;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x90FD;&#x662F;&#x8981;&#x4E0E; switch &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x5224;&#x7B49;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x4EEC;&#x7684;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x76F8; &#x540C;&#x6216;&#x8005;&#x80FD;&#x591F;&#x90FD;&#x7EDF;&#x4E00;&#x5230; switch &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x7C7B;&#x578B;&#x3002; &#x5982;&#x679C;&#x65E0;&#x6CD5;&#x505A;&#x5230;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x6761; switch &#x8BED;&#x53E5;&#x5C31;&#x4E0D;&#x80FD;&#x901A;&#x8FC7;&#x7F16;&#x8BD1;&#x3002; switch &#x8BED;&#x53E5;&#x5728; case &#x5B50;&#x53E5;&#x7684;&#x9009;&#x62E9;&#x4E0A;&#x662F;&#x5177;&#x6709;&#x552F;&#x4E00;&#x6027;&#x7684; &#x3002;&#x6B63;&#x56E0;&#x4E3A;&#x5982;&#x6B64;&#xFF0C; switch &#x8BED;&#x53E5;&#x4E0D;&#x5141;&#x8BB8; case &#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x7684;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#x7ED3;&#x679C;&#x503C;&#x5B58; &#x5728;&#x76F8;&#x7B49;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x4E0D;&#x8BBA;&#x8FD9;&#x4E9B;&#x7ED3;&#x679C;&#x503C;&#x76F8;&#x7B49;&#x7684;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x662F;&#x5426;&#x5B58;&#x5728;&#x4E8E;&#x4E0D;&#x540C;&#x7684; case &#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#xFF0C;&#x90FD;&#x4F1A;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x7ED3;&#x679C;&#x3002; &#x666E;&#x901A; case &#x5B50;&#x53E5;&#x7684;&#x7F16;&#x5199;&#x987A;&#x5E8F;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x6700;&#x4E0A;&#x8FB9;&#x7684; case &#x5B50;&#x53E5;&#x4E2D;&#x7684;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#x603B;&#x662F;&#x4F1A;&#x88AB;&#x6700;&#x5148;&#x6C42;&#x503C;&#xFF0C;&#x5728;&#x5224;&#x7B49;&#x7684;&#x65F6;&#x5019;&#x987A;&#x5E8F;&#x4E5F;&#x662F;&#x8FD9;&#x6837; &#x3002;&#x56E0;&#x6B64;&#xFF0C; &#x5982;&#x679C;&#x67D0;&#x4E9B;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x6709;&#x91CD;&#x590D;&#x5E76;&#x4E14;&#x5B83;&#x4EEC;&#x4E0E; switch &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x76F8;&#x7B49;&#xFF0C;&#x90A3;&#x4E48;&#x4F4D;&#x7F6E;&#x9760;&#x4E0A;&#x7684; case &#x5B50;&#x53E5;&#x603B;&#x4F1A;&#x88AB;&#x9009;&#x4E2D;&#x3002;"},"basic/flow.html#select":{"title":"select","path":"\\golang-learn\\basic\\flow.html#select","body":"select &#x7C7B;&#x4F3C;&#x4E8E;&#x7528;&#x4E8E;&#x901A;&#x4FE1;&#x7684; switch &#x8BED;&#x53E5;&#x3002;&#x6BCF;&#x4E2A; case &#x5FC5;&#x987B;&#x662F;&#x4E00;&#x4E2A;&#x901A;&#x4FE1;&#x64CD;&#x4F5C;&#xFF0C;&#x8981;&#x4E48;&#x662F;&#x53D1;&#x9001;&#x8981;&#x4E48;&#x662F;&#x63A5;&#x6536;&#x3002; &#x5F53;&#x6761;&#x4EF6;&#x6EE1;&#x8DB3;&#x65F6;&#xFF0C; select &#x4F1A;&#x53BB;&#x901A;&#x4FE1;&#x5E76;&#x6267;&#x884C; case &#x4E4B;&#x540E;&#x7684;&#x8BED;&#x53E5;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5176;&#x5B83;&#x901A;&#x4FE1;&#x662F;&#x4E0D;&#x4F1A;&#x6267;&#x884C;&#x7684;&#x3002; &#x5982;&#x679C;&#x591A;&#x4E2A; case &#x540C;&#x65F6;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#xFF0C; select &#x4F1A;&#x968F;&#x673A;&#x5730;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x6267;&#x884C;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709; case &#x53EF;&#x8FD0;&#x884C;&#xFF0C;&#x5B83;&#x5C06;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x6709; case &#x53EF;&#x8FD0;&#x884C;&#x3002; &#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x5B50;&#x53E5;&#x5E94;&#x8BE5;&#x603B;&#x662F;&#x53EF;&#x8FD0;&#x884C;&#x7684;&#x3002; 1 2 3 4 5 6 7 8 select { case communication clause: ... case communication clause: ... default : /* &#x53EF;&#x9009; */ \t\t\t... }"},"basic/flow.html#for":{"title":"for","path":"\\golang-learn\\basic\\flow.html#for","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 for init; condition; post { } // &#x76F8;&#x5F53;&#x4E8E; while (x  5) { ... } for x  5 { ... } // &#x76F8;&#x5F53;&#x4E8E; while (true) { ... } for { \t... } for key, value := range oldMap { // &#x7B2C;&#x4E8C;&#x4E2A;&#x5FAA;&#x73AF;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#xFF0C;&#x4F46;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x8981;&#x5FFD;&#x7565;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7A7A;&#x6807;&#x8BC6;&#x7B26; _ &#x4EE3;&#x66FF; newMap[key] = value } for range &#x652F;&#x6301;&#x904D;&#x5386;&#x6570;&#x7EC4;&#xFF0C;&#x5207;&#x7247;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5B57;&#x5178;&#xFF0C;&#x901A;&#x9053;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x7D22;&#x5F15;&#x548C;&#x952E;&#x503C;&#x3002; for range &#x4F1A;&#x590D;&#x5236;&#x76EE;&#x6807;&#x6570;&#x636E;&#x3002;&#x53EF;&#x6539;&#x7528;&#x6570;&#x7EC4;&#x6307;&#x9488;&#x6216;&#x8005;&#x5207;&#x7247; &#x3002; range &#x5173;&#x952E;&#x5B57;&#x53F3;&#x8FB9;&#x7684;&#x4F4D;&#x7F6E;&#x4E0A;&#x7684;&#x4EE3;&#x7801;&#x88AB;&#x79F0;&#x4E3A; range &#x8868;&#x8FBE;&#x5F0F;&#x3002; range &#x8868;&#x8FBE;&#x5F0F;&#x53EA;&#x4F1A;&#x5728; for &#x8BED;&#x53E5;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x65F6;&#x88AB;&#x6C42;&#x503C;&#x4E00;&#x6B21;&#xFF0C;&#x65E0;&#x8BBA;&#x540E;&#x8FB9;&#x4F1A;&#x6709;&#x591A;&#x5C11;&#x6B21;&#x8FED;&#x4EE3; &#xFF1B; range &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x6C42;&#x503C;&#x7ED3;&#x679C;&#x4F1A;&#x88AB;&#x590D;&#x5236;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x88AB;&#x8FED;&#x4EE3;&#x7684;&#x5BF9;&#x8C61;&#x662F; range &#x8868;&#x8FBE;&#x5F0F;&#x7ED3;&#x679C;&#x503C;&#x7684;&#x526F;&#x672C;&#x800C;&#x4E0D;&#x662F;&#x539F;&#x503C;&#x3002; 1 2 3 4 5 6 7 numbers1 := [] int { 1 , 2 , 3 , 4 , 5 , 6 } for i := range numbers1 { if i == 3 { numbers1[i] |= i } } fmt.Println(numbers1) &#x6253;&#x5370;&#x7684;&#x5185;&#x5BB9;&#x4F1A;&#x662F; [1 2 3 7 5 6] &#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#xFF0C;&#x9996;&#x5148; i &#x662F;&#x5207;&#x7247;&#x7684;&#x4E0B;&#x6807;&#xFF0C;&#x5F53; i &#x7684;&#x503C;&#x7B49;&#x4E8E; 3 &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x7684;&#x662F;&#x5207;&#x7247;&#x4E2D;&#x7684;&#x7B2C; 4 &#x4E2A;&#x5143;&#x7D20; &#x503C; 4&#x3002;&#x5BF9; 4 &#x548C; 3 &#x8FDB;&#x884C;&#x6309;&#x4F4D;&#x6216;&#x64CD;&#x4F5C;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x662F; 7&#x3002; &#x5F53; for &#x8BED;&#x53E5;&#x88AB;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5728; range &#x5173;&#x952E;&#x5B57;&#x53F3;&#x8FB9;&#x7684; numbers1 &#x4F1A;&#x5148;&#x88AB;&#x6C42;&#x503C;&#x3002; range &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x53EF;&#x4EE5;&#x662F;&#x6570;&#x7EC4;&#x3001;&#x6570;&#x7EC4;&#x7684;&#x6307;&#x9488;&#x3001; &#x5207;&#x7247;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x3001;&#x5B57;&#x5178;&#x6216;&#x8005;&#x5141;&#x8BB8;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x7684;&#x901A;&#x9053;&#x4E2D;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#xFF0C;&#x5E76;&#x4E14;&#x7ED3;&#x679C;&#x503C;&#x53EA;&#x80FD;&#x6709;&#x4E00;&#x4E2A;&#x3002;&#x8FD9;&#x91CC;&#x7684; numbers1 &#x662F;&#x4E00;&#x4E2A;&#x5207;&#x7247;,&#x90A3;&#x4E48;&#x8FED;&#x4EE3;&#x53D8;&#x91CF;&#x5C31;&#x53EF;&#x4EE5; &#x6709;&#x4E24;&#x4E2A;&#xFF0C;&#x53F3;&#x8FB9;&#x7684;&#x8FED;&#x4EE3;&#x53D8;&#x91CF;&#x4EE3;&#x8868;&#x5F53;&#x6B21;&#x8FED;&#x4EE3;&#x5BF9;&#x5E94;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x800C;&#x5DE6;&#x8FB9;&#x7684;&#x8FED;&#x4EE3;&#x53D8;&#x91CF;&#x5219;&#x4EE3;&#x8868;&#x8BE5;&#x5143;&#x7D20;&#x503C;&#x5728;&#x5207;&#x7247;&#x4E2D;&#x7684;&#x7D22;&#x5F15;&#x503C;&#x3002; &#x5FAA;&#x73AF;&#x63A7;&#x5236;&#x8BED;&#x53E5;&#xFF1A; break &#xFF0C;&#x7528;&#x4E8E;&#x4E2D;&#x65AD;&#x5F53;&#x524D; for &#x5FAA;&#x73AF;&#x6216;&#x8DF3;&#x51FA; switch &#x8BED;&#x53E5; continue &#xFF0C;&#x8DF3;&#x8FC7;&#x5F53;&#x524D;&#x5FAA;&#xFF0C;&#x7EE7;&#x7EED;&#x8FDB;&#x884C;&#x4E0B;&#x4E00;&#x8F6E;&#x5FAA;&#x73AF;&#x3002; goto &#xFF0C;&#x5C06;&#x63A7;&#x5236;&#x8F6C;&#x79FB;&#x5230;&#x88AB;&#x6807;&#x8BB0;&#x7684;&#x8BED;&#x53E5;&#x3002;&#x901A;&#x5E38;&#x4E0E;&#x6761;&#x4EF6;&#x8BED;&#x53E5;&#x914D;&#x5408;&#x4F7F;&#x7528;&#x3002;&#x53EF;&#x7528;&#x6765;&#x5B9E;&#x73B0;&#x6761;&#x4EF6;&#x8F6C;&#x79FB;&#xFF0C; &#x6784;&#x6210;&#x5FAA;&#x73AF;&#xFF0C;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#x4F53;&#x7B49;&#x529F;&#x80FD;&#x3002;&#x4E0D;&#x63A8;&#x8350; &#x4F7F;&#x7528;&#xFF0C;&#x4EE5;&#x514D;&#x9020;&#x6210;&#x6D41;&#x7A0B;&#x6DF7;&#x4E71;&#x3002; goto &#x5B9E;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 LOOP: for a  20 { \t if a == 15 { \t\t\t /* &#x8DF3;&#x8FC7;&#x8FED;&#x4EE3; */ \t\t\ta = a + 1 \t\t\t goto LOOP \t} \tfmt.Printf( a&#x7684;&#x503C;&#x4E3A; : %d\\n , a) \ta ++ } &#x4F7F;&#x7528;&#x5E26;&#x6709; range &#x5B50;&#x53E5;&#x7684; for &#x8BED;&#x53E5;&#x904D;&#x5386;&#x5B57;&#x7B26;&#x4E32;&#x503C;&#x7684;&#x65F6;&#x5019;&#x5E94;&#x8BE5;&#x6CE8;&#x610F; &#x5E26;&#x6709; range &#x5B50;&#x53E5;&#x7684; for &#x8BED;&#x53E5;&#x4F1A;&#x5148;&#x628A;&#x88AB;&#x904D;&#x5386;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x503C;&#x62C6;&#x6210;&#x4E00;&#x4E2A; &#x5B57;&#x8282;&#x5E8F;&#x5217; &#xFF08;&#x6CE8;&#x610F;&#x662F;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x8BD5;&#x56FE;&#x627E;&#x51FA;&#x8FD9;&#x4E2A;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x4E2D; &#x5305;&#x542B;&#x7684;&#x6BCF;&#x4E00;&#x4E2A; UTF-8 &#x7F16;&#x7801;&#x503C;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x6BCF;&#x4E00;&#x4E2A; Unicode &#x5B57;&#x7B26;&#x3002; &#x8FD9;&#x6837;&#x7684; for &#x8BED;&#x53E5;&#x53EF;&#x4EE5;&#x4E3A;&#x4E24;&#x4E2A;&#x8FED;&#x4EE3;&#x53D8;&#x91CF;&#x8D4B;&#x503C;&#x3002;&#x5982;&#x679C;&#x5B58;&#x5728;&#x4E24;&#x4E2A;&#x8FED;&#x4EE3;&#x53D8;&#x91CF;&#xFF0C;&#x90A3;&#x4E48;&#x8D4B;&#x7ED9;&#x7B2C;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x5C31;&#x5C06;&#x4F1A;&#x662F;&#x5F53;&#x524D;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x4E2D;&#x7684;&#x67D0;&#x4E2A; UTF-8 &#x7F16;&#x7801; &#x503C;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x90A3;&#x4E2A;&#x7D22;&#x5F15;&#x503C;&#x3002;&#x800C;&#x8D4B;&#x7ED9;&#x7B2C;&#x4E8C;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x5219;&#x662F;&#x8FD9;&#x4E2A; UTF-8 &#x7F16;&#x7801;&#x503C;&#x4EE3;&#x8868;&#x7684;&#x90A3;&#x4E2A; Unicode &#x5B57;&#x7B26;&#xFF0C;&#x5176;&#x7C7B;&#x578B;&#x4F1A;&#x662F; rune &#x3002; 1 2 3 4 str := Go &#x7231;&#x597D;&#x8005;  for i, c := range str { fmt.Printf( %d: %q [% x]\\n , i, c, [] byte ( string (c))) } &#x5B8C;&#x6574;&#x7684;&#x6253;&#x5370;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 0: &apos;G&apos; [47] 1: &apos;o&apos; [6f] 2: &apos;&#x7231;&apos; [e7 88 b1] 5: &apos;&#x597D;&apos; [e5 a5 bd] 8: &apos;&#x8005;&apos; [e8 80 85] &#x6CE8;&#x610F;&#x4E86;&#xFF0C;&#x2019;&#x7231;&#x2019;&#x662F;&#x7531;&#x4E09;&#x4E2A;&#x5B57;&#x8282;&#x5171;&#x540C;&#x8868;&#x8FBE;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x7B2C;&#x56DB;&#x4E2A; Unicode &#x5B57;&#x7B26;&#x2019;&#x597D;&#x2019;&#x5BF9;&#x5E94;&#x7684;&#x7D22;&#x5F15;&#x503C;&#x5E76;&#x4E0D;&#x662F; 3&#xFF0C;&#x800C;&#x662F; 2 &#x52A0; 3 &#x540E;&#x5F97;&#x5230;&#x7684; 5 &#x3002;"},"basic/oop.html":{"title":"面向对象","path":"\\golang-learn\\basic\\oop.html","body":"面向对象 GO 支持面向对象编程。 方法 方法声明： 1 2 3 func (变量名 类型) 方法名 () [返回类型]  /* 函数体*/  实例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* 定义结构体 */ type Circle struct  radius float64  func main ()  var c1 Circle c1.radius = 10.00 fmt.Println( \"Area of Circle(c1) = \" , c1.getArea())  // 该 method 属于 Circle 类型对象中的方法 // 这里的 c 叫作方法的接收器，类似 Javascript 的 this func (c Circle) getArea () float64  // c.radius 即为 Circle 类型对象中的属性 return 3.14 * c.radius * c.radius  Go 没有像其它语言那样用 this 或者 self 作为接收器。 Go 可以给任意类型定义方法 。 1 2 3 4 func (p *Point) ScaleBy (factor float64 )  \tp.X *= factor \tp.Y *= factor  调用指针类型方法 (*Point).ScaleBy ， () 必须有，否则会被理解为 *(Point.ScaleBy) 。 1 2 3 4 5 6 7 8 9 // 调用指针类型方法 r := &amp;Point 1 , 2  r.ScaleBy( 2 ) // 简短写法 p := Point 1 , 2  // 编译器会隐式地帮我们用&amp;p去调用ScaleBy这个方法。这种简写方法只适用于“变量” p.ScaleBy( 2 ) 只有类型( Point )和指向他们的指针( *Point )，才是可能会出现在接收器声明里的两种接收器。此外，为了避免歧义，在声明方法时， 如果一个类型名本身是一个指针的话，是不允许其出现在接收器中的: 1 2 type P * int func (P) f ()  /* ... */  // compile error: invalid receiver type 如何选择 receiver 的类型 不管你的 method 的 receiver 是指针类型还是非指针类型，都是可以通过指针/非指针类型进行调用的，编译器会帮你做类型转换 。 在声明一个 method 的 receiver 该是指针还是非指针类型时，你需要考虑： 要修改实例状态，用 *T ，无需修改使用 T 。 大对象建议使用 *T ，减少复制成本， T 调用时会产生一次拷贝。 对于引用类型，直接使用 T ，因为它们本身就是指针包装的。 包含 Mutex 等同步字段，使用 *T ，避免因为复制造成锁操作无效。 无法确定时，使用 *T 。 方法的接收者类型必须是某个自定义的数据类型，而且不能是接口类型或接口的指针类型 。 值方法，就是接收者类型是非指针的自定义数据类型的方法。 指针方法，就是接收者类型是指针类型的方法。 嵌入结构体扩展类型 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import \"image/color\" type Point struct  X, Y float64  type ColoredPoint struct  Point Color color.RGBA  red := color.RGBA 255 , 0 , 0 , 255  blue := color.RGBA 0 , 0 , 255 , 255  var p = ColoredPointPoint 1 , 1 , red var q = ColoredPointPoint 5 , 4 , blue fmt.Println(p.Distance(q.Point)) // \"5\" p.ScaleBy( 2 ) q.ScaleBy( 2 ) fmt.Println(p.Distance(q.Point)) // \"10\" 如果对基于类来实现面向对象的语言比较熟悉的话，可能会倾向于将 Point 看作一个基类，而 ColoredPoint 看作其子类或者继承类。 但这是错误的理解。请注意上面例子中对 Distance 方法的调用。 Distance 有一个参数是 Point 类型，但是这里的 q 虽然貌 似是继承了 Point 类，但 q 并不是，所以尽管 q 有着 Point 这个内嵌类型，我们也必须要显式传入 q.Point 。 Go 语言是用嵌入字段实现了继承吗 Go 语言中 没有继承的概念，它所做的是通过嵌入字段的方式实现了类型之间的组合 。 具体原因和理念请见 Why is there no type inheritance? 。 简单来说，面向对象编程中的继承，其实是通过牺牲一定的代码简洁性来换取可扩展性，而且这种可扩展性是通过侵入的方式来实现的。 类型之间的组合采用的是非声明的方式，我们不需要显式地声明某个类型实现了某个接口，或者一个类型继承了另一个类型。 同时，类型组合也是非侵入式的，它不会破坏类型的封装或加重类型之间的耦合。我们要做的只是把类型当做字段嵌入进来，然后坐 享其成地使用嵌入字段所拥有的一切。如果嵌入字段有哪里不合心意，我们还可以用“包装”或“屏蔽”的方式去调整和优化。 另外，类型间的组合也是灵活的，我们总是可以通过嵌入字段的方式把一个类型的属性和能力“嫁接”给另一个类型。 这时候，被嵌入类型也就自然而然地实现了嵌入字段所实现的接口。再者，组合要比继承更加简洁和清晰，Go 语言可以轻而易举地通过嵌入 多个字段来实现功能强大的类型，却不会有多重继承那样复杂的层次结构和可观的管理成本。 封装 一个对象的变量或者方法如果对调用方是不可见的话，一般就被定义为“封装”。通过首字母大小写来定义是否从包中导出。 封装一个对象，必须定义为一个 struct ： 1 2 3 type IntSet struct  words [] uint64  优点： 调用方不能直接修改对象的变量值 隐藏实现的细节，防止调用方依赖那些可能变化的具体实现，这样使设计包的程序员在不破坏对外的api情况下能得到更大的自由。 阻止了外部调用方对对象内部的值任意地进行修改。 String 方法 在 Go 语言中， 我们可以通过为一个类型编写名为 String 的方法，来自定义该类型的字符串表示形式。这个 String 方法不需 要任何参数声明，但需要有一个 string 类型的结果声明 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 type AnimalCategory struct  kingdom string // 界。 phylum string // 门。 class string // 纲。 order string // 目。 family string // 科。 genus string // 属。 species string // 种。  func (ac AnimalCategory) String () string  return fmt.Sprintf( \"%s%s%s%s%s%s%s\" ,ac.kingdom, ac.phylum, ac.class, ac.order,ac.family, ac.genus, ac.species)  category := AnimalCategoryspecies: \"cat\"  fmt.Printf( \"The animal category: %s\\n\" , category) 正因为如此，我在调用 fmt.Printf 函数时，使用占位符 %s 和 category 值本身就可以打印出后者的字符串表示形式， 而 无需显式地调用它的 String 方法 。 fmt.Printf 函数会自己去寻找它。此时的打印内容会是 The animal category: cat 。显而易见， category 的 String 方法成 功地引用了当前值的所有字段。 当你广泛使用一个自定义类型时，最好为它定义 String() 方法。 不要在 String() 方法里面调用涉及 String() 方法的方法，它会导致意料之外的错误 ，比如： 1 2 3 4 5 6 type TT float64 func (t TT) String () string  return fmt.Sprintf( \"%v\" , t)  t.String() 它导致了一个无限递归调用（ TT.String() 调用 fmt.Sprintf ，而 fmt.Sprintf 又会反过来调用 TT.String() …），很快就会导 致内存溢出。"},"basic/oop.html#面向对象":{"title":"&#x9762;&#x5411;&#x5BF9;&#x8C61;","path":"\\golang-learn\\basic\\oop.html#面向对象","body":"GO &#x652F;&#x6301;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7F16;&#x7A0B;&#x3002;"},"basic/oop.html#方法":{"title":"&#x65B9;&#x6CD5;","path":"\\golang-learn\\basic\\oop.html#方法","body":"&#x65B9;&#x6CD5;&#x58F0;&#x660E;&#xFF1A; 1 2 3 func (&#x53D8;&#x91CF;&#x540D; &#x7C7B;&#x578B;) &#x65B9;&#x6CD5;&#x540D; () [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] { /* &#x51FD;&#x6570;&#x4F53;*/ } &#x5B9E;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* &#x5B9A;&#x4E49;&#x7ED3;&#x6784;&#x4F53; */ type Circle struct { radius float64 } func main () { var c1 Circle c1.radius = 10.00 fmt.Println( Area of Circle(c1) =  , c1.getArea()) } // &#x8BE5; method &#x5C5E;&#x4E8E; Circle &#x7C7B;&#x578B;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x65B9;&#x6CD5; // &#x8FD9;&#x91CC;&#x7684; c &#x53EB;&#x4F5C;&#x65B9;&#x6CD5;&#x7684;&#x63A5;&#x6536;&#x5668;&#xFF0C;&#x7C7B;&#x4F3C; Javascript &#x7684; this func (c Circle) getArea () float64 { // c.radius &#x5373;&#x4E3A; Circle &#x7C7B;&#x578B;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x5C5E;&#x6027; return 3.14 * c.radius * c.radius } Go &#x6CA1;&#x6709;&#x50CF;&#x5176;&#x5B83;&#x8BED;&#x8A00;&#x90A3;&#x6837;&#x7528; this &#x6216;&#x8005; self &#x4F5C;&#x4E3A;&#x63A5;&#x6536;&#x5668;&#x3002; Go &#x53EF;&#x4EE5;&#x7ED9;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#x65B9;&#x6CD5; &#x3002; 1 2 3 4 func (p *Point) ScaleBy (factor float64 ) { \tp.X *= factor \tp.Y *= factor } &#x8C03;&#x7528;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x65B9;&#x6CD5; (*Point).ScaleBy &#xFF0C; () &#x5FC5;&#x987B;&#x6709;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x88AB;&#x7406;&#x89E3;&#x4E3A; *(Point.ScaleBy) &#x3002; 1 2 3 4 5 6 7 8 9 // &#x8C03;&#x7528;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x65B9;&#x6CD5; r := &amp;Point{ 1 , 2 } r.ScaleBy( 2 ) // &#x7B80;&#x77ED;&#x5199;&#x6CD5; p := Point{ 1 , 2 } // &#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x9690;&#x5F0F;&#x5730;&#x5E2E;&#x6211;&#x4EEC;&#x7528;&amp;p&#x53BB;&#x8C03;&#x7528;ScaleBy&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;&#x8FD9;&#x79CD;&#x7B80;&#x5199;&#x65B9;&#x6CD5;&#x53EA;&#x9002;&#x7528;&#x4E8E;&#x201C;&#x53D8;&#x91CF;&#x201D; p.ScaleBy( 2 ) &#x53EA;&#x6709;&#x7C7B;&#x578B;( Point )&#x548C;&#x6307;&#x5411;&#x4ED6;&#x4EEC;&#x7684;&#x6307;&#x9488;( *Point )&#xFF0C;&#x624D;&#x662F;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;&#x5728;&#x63A5;&#x6536;&#x5668;&#x58F0;&#x660E;&#x91CC;&#x7684;&#x4E24;&#x79CD;&#x63A5;&#x6536;&#x5668;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x6B67;&#x4E49;&#xFF0C;&#x5728;&#x58F0;&#x660E;&#x65B9;&#x6CD5;&#x65F6;&#xFF0C; &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x540D;&#x672C;&#x8EAB;&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x7684;&#x8BDD;&#xFF0C;&#x662F;&#x4E0D;&#x5141;&#x8BB8;&#x5176;&#x51FA;&#x73B0;&#x5728;&#x63A5;&#x6536;&#x5668;&#x4E2D;&#x7684;: 1 2 type P * int func (P) f () { /* ... */ } // compile error: invalid receiver type &#x5982;&#x4F55;&#x9009;&#x62E9; receiver &#x7684;&#x7C7B;&#x578B; &#x4E0D;&#x7BA1;&#x4F60;&#x7684; method &#x7684; receiver &#x662F;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x8FD8;&#x662F;&#x975E;&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF0C;&#x90FD;&#x662F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6307;&#x9488;/&#x975E;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x8FDB;&#x884C;&#x8C03;&#x7528;&#x7684;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x5E2E;&#x4F60;&#x505A;&#x7C7B;&#x578B;&#x8F6C;&#x6362; &#x3002; &#x5728;&#x58F0;&#x660E;&#x4E00;&#x4E2A; method &#x7684; receiver &#x8BE5;&#x662F;&#x6307;&#x9488;&#x8FD8;&#x662F;&#x975E;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x65F6;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x8003;&#x8651;&#xFF1A; &#x8981;&#x4FEE;&#x6539;&#x5B9E;&#x4F8B;&#x72B6;&#x6001;&#xFF0C;&#x7528; *T &#xFF0C;&#x65E0;&#x9700;&#x4FEE;&#x6539;&#x4F7F;&#x7528; T &#x3002; &#x5927;&#x5BF9;&#x8C61;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528; *T &#xFF0C;&#x51CF;&#x5C11;&#x590D;&#x5236;&#x6210;&#x672C;&#xFF0C; T &#x8C03;&#x7528;&#x65F6;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x6B21;&#x62F7;&#x8D1D;&#x3002; &#x5BF9;&#x4E8E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528; T &#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x6307;&#x9488;&#x5305;&#x88C5;&#x7684;&#x3002; &#x5305;&#x542B; Mutex &#x7B49;&#x540C;&#x6B65;&#x5B57;&#x6BB5;&#xFF0C;&#x4F7F;&#x7528; *T &#xFF0C;&#x907F;&#x514D;&#x56E0;&#x4E3A;&#x590D;&#x5236;&#x9020;&#x6210;&#x9501;&#x64CD;&#x4F5C;&#x65E0;&#x6548;&#x3002; &#x65E0;&#x6CD5;&#x786E;&#x5B9A;&#x65F6;&#xFF0C;&#x4F7F;&#x7528; *T &#x3002; &#x65B9;&#x6CD5;&#x7684;&#x63A5;&#x6536;&#x8005;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x662F;&#x67D0;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x80FD;&#x662F;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x6216;&#x63A5;&#x53E3;&#x7684;&#x6307;&#x9488;&#x7C7B;&#x578B; &#x3002; &#x503C;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x662F;&#x63A5;&#x6536;&#x8005;&#x7C7B;&#x578B;&#x662F;&#x975E;&#x6307;&#x9488;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x6307;&#x9488;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x662F;&#x63A5;&#x6536;&#x8005;&#x7C7B;&#x578B;&#x662F;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x3002;"},"basic/oop.html#嵌入结构体扩展类型":{"title":"&#x5D4C;&#x5165;&#x7ED3;&#x6784;&#x4F53;&#x6269;&#x5C55;&#x7C7B;&#x578B;","path":"\\golang-learn\\basic\\oop.html#嵌入结构体扩展类型","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import image/color type Point struct { X, Y float64 } type ColoredPoint struct { Point Color color.RGBA } red := color.RGBA{ 255 , 0 , 0 , 255 } blue := color.RGBA{ 0 , 0 , 255 , 255 } var p = ColoredPoint{Point{ 1 , 1 }, red} var q = ColoredPoint{Point{ 5 , 4 }, blue} fmt.Println(p.Distance(q.Point)) // 5 p.ScaleBy( 2 ) q.ScaleBy( 2 ) fmt.Println(p.Distance(q.Point)) // 10 &#x5982;&#x679C;&#x5BF9;&#x57FA;&#x4E8E;&#x7C7B;&#x6765;&#x5B9E;&#x73B0;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7684;&#x8BED;&#x8A00;&#x6BD4;&#x8F83;&#x719F;&#x6089;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x503E;&#x5411;&#x4E8E;&#x5C06; Point &#x770B;&#x4F5C;&#x4E00;&#x4E2A;&#x57FA;&#x7C7B;&#xFF0C;&#x800C; ColoredPoint &#x770B;&#x4F5C;&#x5176;&#x5B50;&#x7C7B;&#x6216;&#x8005;&#x7EE7;&#x627F;&#x7C7B;&#x3002; &#x4F46;&#x8FD9;&#x662F;&#x9519;&#x8BEF;&#x7684;&#x7406;&#x89E3;&#x3002;&#x8BF7;&#x6CE8;&#x610F;&#x4E0A;&#x9762;&#x4F8B;&#x5B50;&#x4E2D;&#x5BF9; Distance &#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x3002; Distance &#x6709;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F; Point &#x7C7B;&#x578B;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x91CC;&#x7684; q &#x867D;&#x7136;&#x8C8C; &#x4F3C;&#x662F;&#x7EE7;&#x627F;&#x4E86; Point &#x7C7B;&#xFF0C;&#x4F46; q &#x5E76;&#x4E0D;&#x662F;&#xFF0C;&#x6240;&#x4EE5;&#x5C3D;&#x7BA1; q &#x6709;&#x7740; Point &#x8FD9;&#x4E2A;&#x5185;&#x5D4C;&#x7C7B;&#x578B;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x5FC5;&#x987B;&#x8981;&#x663E;&#x5F0F;&#x4F20;&#x5165; q.Point &#x3002; Go &#x8BED;&#x8A00;&#x662F;&#x7528;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x5B9E;&#x73B0;&#x4E86;&#x7EE7;&#x627F;&#x5417; Go &#x8BED;&#x8A00;&#x4E2D; &#x6CA1;&#x6709;&#x7EE7;&#x627F;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5B83;&#x6240;&#x505A;&#x7684;&#x662F;&#x901A;&#x8FC7;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x4E86;&#x7C7B;&#x578B;&#x4E4B;&#x95F4;&#x7684;&#x7EC4;&#x5408; &#x3002; &#x5177;&#x4F53;&#x539F;&#x56E0;&#x548C;&#x7406;&#x5FF5;&#x8BF7;&#x89C1; Why is there no type inheritance? &#x3002; &#x7B80;&#x5355;&#x6765;&#x8BF4;&#xFF0C;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7F16;&#x7A0B;&#x4E2D;&#x7684;&#x7EE7;&#x627F;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x901A;&#x8FC7;&#x727A;&#x7272;&#x4E00;&#x5B9A;&#x7684;&#x4EE3;&#x7801;&#x7B80;&#x6D01;&#x6027;&#x6765;&#x6362;&#x53D6;&#x53EF;&#x6269;&#x5C55;&#x6027;&#xFF0C;&#x800C;&#x4E14;&#x8FD9;&#x79CD;&#x53EF;&#x6269;&#x5C55;&#x6027;&#x662F;&#x901A;&#x8FC7;&#x4FB5;&#x5165;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002; &#x7C7B;&#x578B;&#x4E4B;&#x95F4;&#x7684;&#x7EC4;&#x5408;&#x91C7;&#x7528;&#x7684;&#x662F;&#x975E;&#x58F0;&#x660E;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x663E;&#x5F0F;&#x5730;&#x58F0;&#x660E;&#x67D0;&#x4E2A;&#x7C7B;&#x578B;&#x5B9E;&#x73B0;&#x4E86;&#x67D0;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x7EE7;&#x627F;&#x4E86;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x3002; &#x540C;&#x65F6;&#xFF0C;&#x7C7B;&#x578B;&#x7EC4;&#x5408;&#x4E5F;&#x662F;&#x975E;&#x4FB5;&#x5165;&#x5F0F;&#x7684;&#xFF0C;&#x5B83;&#x4E0D;&#x4F1A;&#x7834;&#x574F;&#x7C7B;&#x578B;&#x7684;&#x5C01;&#x88C5;&#x6216;&#x52A0;&#x91CD;&#x7C7B;&#x578B;&#x4E4B;&#x95F4;&#x7684;&#x8026;&#x5408;&#x3002;&#x6211;&#x4EEC;&#x8981;&#x505A;&#x7684;&#x53EA;&#x662F;&#x628A;&#x7C7B;&#x578B;&#x5F53;&#x505A;&#x5B57;&#x6BB5;&#x5D4C;&#x5165;&#x8FDB;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x5750; &#x4EAB;&#x5176;&#x6210;&#x5730;&#x4F7F;&#x7528;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x6240;&#x62E5;&#x6709;&#x7684;&#x4E00;&#x5207;&#x3002;&#x5982;&#x679C;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x6709;&#x54EA;&#x91CC;&#x4E0D;&#x5408;&#x5FC3;&#x610F;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x7528;&#x201C;&#x5305;&#x88C5;&#x201D;&#x6216;&#x201C;&#x5C4F;&#x853D;&#x201D;&#x7684;&#x65B9;&#x5F0F;&#x53BB;&#x8C03;&#x6574;&#x548C;&#x4F18;&#x5316;&#x3002; &#x53E6;&#x5916;&#xFF0C;&#x7C7B;&#x578B;&#x95F4;&#x7684;&#x7EC4;&#x5408;&#x4E5F;&#x662F;&#x7075;&#x6D3B;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x603B;&#x662F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x65B9;&#x5F0F;&#x628A;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x80FD;&#x529B;&#x201C;&#x5AC1;&#x63A5;&#x201D;&#x7ED9;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x3002; &#x8FD9;&#x65F6;&#x5019;&#xFF0C;&#x88AB;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x4E5F;&#x5C31;&#x81EA;&#x7136;&#x800C;&#x7136;&#x5730;&#x5B9E;&#x73B0;&#x4E86;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x6240;&#x5B9E;&#x73B0;&#x7684;&#x63A5;&#x53E3;&#x3002;&#x518D;&#x8005;&#xFF0C;&#x7EC4;&#x5408;&#x8981;&#x6BD4;&#x7EE7;&#x627F;&#x66F4;&#x52A0;&#x7B80;&#x6D01;&#x548C;&#x6E05;&#x6670;&#xFF0C;Go &#x8BED;&#x8A00;&#x53EF;&#x4EE5;&#x8F7B;&#x800C;&#x6613;&#x4E3E;&#x5730;&#x901A;&#x8FC7;&#x5D4C;&#x5165; &#x591A;&#x4E2A;&#x5B57;&#x6BB5;&#x6765;&#x5B9E;&#x73B0;&#x529F;&#x80FD;&#x5F3A;&#x5927;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x5374;&#x4E0D;&#x4F1A;&#x6709;&#x591A;&#x91CD;&#x7EE7;&#x627F;&#x90A3;&#x6837;&#x590D;&#x6742;&#x7684;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x548C;&#x53EF;&#x89C2;&#x7684;&#x7BA1;&#x7406;&#x6210;&#x672C;&#x3002;"},"basic/oop.html#封装":{"title":"&#x5C01;&#x88C5;","path":"\\golang-learn\\basic\\oop.html#封装","body":"&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x53D8;&#x91CF;&#x6216;&#x8005;&#x65B9;&#x6CD5;&#x5982;&#x679C;&#x5BF9;&#x8C03;&#x7528;&#x65B9;&#x662F;&#x4E0D;&#x53EF;&#x89C1;&#x7684;&#x8BDD;&#xFF0C;&#x4E00;&#x822C;&#x5C31;&#x88AB;&#x5B9A;&#x4E49;&#x4E3A;&#x201C;&#x5C01;&#x88C5;&#x201D;&#x3002;&#x901A;&#x8FC7;&#x9996;&#x5B57;&#x6BCD;&#x5927;&#x5C0F;&#x5199;&#x6765;&#x5B9A;&#x4E49;&#x662F;&#x5426;&#x4ECE;&#x5305;&#x4E2D;&#x5BFC;&#x51FA;&#x3002; &#x5C01;&#x88C5;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x5FC5;&#x987B;&#x5B9A;&#x4E49;&#x4E3A;&#x4E00;&#x4E2A; struct &#xFF1A; 1 2 3 type IntSet struct { words [] uint64 } &#x4F18;&#x70B9;&#xFF1A; &#x8C03;&#x7528;&#x65B9;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x4FEE;&#x6539;&#x5BF9;&#x8C61;&#x7684;&#x53D8;&#x91CF;&#x503C; &#x9690;&#x85CF;&#x5B9E;&#x73B0;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x9632;&#x6B62;&#x8C03;&#x7528;&#x65B9;&#x4F9D;&#x8D56;&#x90A3;&#x4E9B;&#x53EF;&#x80FD;&#x53D8;&#x5316;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x6837;&#x4F7F;&#x8BBE;&#x8BA1;&#x5305;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#x5728;&#x4E0D;&#x7834;&#x574F;&#x5BF9;&#x5916;&#x7684;api&#x60C5;&#x51B5;&#x4E0B;&#x80FD;&#x5F97;&#x5230;&#x66F4;&#x5927;&#x7684;&#x81EA;&#x7531;&#x3002; &#x963B;&#x6B62;&#x4E86;&#x5916;&#x90E8;&#x8C03;&#x7528;&#x65B9;&#x5BF9;&#x5BF9;&#x8C61;&#x5185;&#x90E8;&#x7684;&#x503C;&#x4EFB;&#x610F;&#x5730;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#x3002;"},"basic/oop.html#String-方法":{"title":"String &#x65B9;&#x6CD5;","path":"\\golang-learn\\basic\\oop.html#String-方法","body":"&#x5728; Go &#x8BED;&#x8A00;&#x4E2D;&#xFF0C; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E3A;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x7F16;&#x5199;&#x540D;&#x4E3A; String &#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6765;&#x81EA;&#x5B9A;&#x4E49;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x793A;&#x5F62;&#x5F0F;&#x3002;&#x8FD9;&#x4E2A; String &#x65B9;&#x6CD5;&#x4E0D;&#x9700; &#x8981;&#x4EFB;&#x4F55;&#x53C2;&#x6570;&#x58F0;&#x660E;&#xFF0C;&#x4F46;&#x9700;&#x8981;&#x6709;&#x4E00;&#x4E2A; string &#x7C7B;&#x578B;&#x7684;&#x7ED3;&#x679C;&#x58F0;&#x660E; &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 type AnimalCategory struct { kingdom string // &#x754C;&#x3002; phylum string // &#x95E8;&#x3002; class string // &#x7EB2;&#x3002; order string // &#x76EE;&#x3002; family string // &#x79D1;&#x3002; genus string // &#x5C5E;&#x3002; species string // &#x79CD;&#x3002; } func (ac AnimalCategory) String () string { return fmt.Sprintf( %s%s%s%s%s%s%s ,ac.kingdom, ac.phylum, ac.class, ac.order,ac.family, ac.genus, ac.species) } category := AnimalCategory{species: cat } fmt.Printf( The animal category: %s\\n , category) &#x6B63;&#x56E0;&#x4E3A;&#x5982;&#x6B64;&#xFF0C;&#x6211;&#x5728;&#x8C03;&#x7528; fmt.Printf &#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x5360;&#x4F4D;&#x7B26; %s &#x548C; category &#x503C;&#x672C;&#x8EAB;&#x5C31;&#x53EF;&#x4EE5;&#x6253;&#x5370;&#x51FA;&#x540E;&#x8005;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x793A;&#x5F62;&#x5F0F;&#xFF0C; &#x800C; &#x65E0;&#x9700;&#x663E;&#x5F0F;&#x5730;&#x8C03;&#x7528;&#x5B83;&#x7684; String &#x65B9;&#x6CD5; &#x3002; fmt.Printf &#x51FD;&#x6570;&#x4F1A;&#x81EA;&#x5DF1;&#x53BB;&#x5BFB;&#x627E;&#x5B83;&#x3002;&#x6B64;&#x65F6;&#x7684;&#x6253;&#x5370;&#x5185;&#x5BB9;&#x4F1A;&#x662F; The animal category: cat &#x3002;&#x663E;&#x800C;&#x6613;&#x89C1;&#xFF0C; category &#x7684; String &#x65B9;&#x6CD5;&#x6210; &#x529F;&#x5730;&#x5F15;&#x7528;&#x4E86;&#x5F53;&#x524D;&#x503C;&#x7684;&#x6240;&#x6709;&#x5B57;&#x6BB5;&#x3002; &#x5F53;&#x4F60;&#x5E7F;&#x6CDB;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;&#x65F6;&#xFF0C;&#x6700;&#x597D;&#x4E3A;&#x5B83;&#x5B9A;&#x4E49; String() &#x65B9;&#x6CD5;&#x3002; &#x4E0D;&#x8981;&#x5728; String() &#x65B9;&#x6CD5;&#x91CC;&#x9762;&#x8C03;&#x7528;&#x6D89;&#x53CA; String() &#x65B9;&#x6CD5;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x4F1A;&#x5BFC;&#x81F4;&#x610F;&#x6599;&#x4E4B;&#x5916;&#x7684;&#x9519;&#x8BEF; &#xFF0C;&#x6BD4;&#x5982;&#xFF1A; 1 2 3 4 5 6 type TT float64 func (t TT) String () string { return fmt.Sprintf( %v , t) } t.String() &#x5B83;&#x5BFC;&#x81F4;&#x4E86;&#x4E00;&#x4E2A;&#x65E0;&#x9650;&#x9012;&#x5F52;&#x8C03;&#x7528;&#xFF08; TT.String() &#x8C03;&#x7528; fmt.Sprintf &#xFF0C;&#x800C; fmt.Sprintf &#x53C8;&#x4F1A;&#x53CD;&#x8FC7;&#x6765;&#x8C03;&#x7528; TT.String() &#x2026;&#xFF09;&#xFF0C;&#x5F88;&#x5FEB;&#x5C31;&#x4F1A;&#x5BFC; &#x81F4;&#x5185;&#x5B58;&#x6EA2;&#x51FA;&#x3002;"},"basic/constant.html":{"title":"常量","path":"\\golang-learn\\basic\\constant.html","body":"常量 const 声明常量，运行时不可改变（只读），注意常量的 底层数据类型只能是基础类型（布尔型、数值型和字符串型） ： 1 const 常量名字 类型 = 表达式 “类型”可以省略。也就是如果没有类型，可以通过表达式推导出类型。 比如： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // 声明一个`string`类型 const b string = \"abc\" const a = \"abc\" // 声明一组不同类型 const c, f, s = true , 2.3 , \"four\" // bool, float64, string // 批量声明多个常量 const ( Unknown = 0 Female = 1 Male = 2 ) const strSize = len ( \"hello, world\" ) 常量表达式的值在 编译期计算 。因此常量表达式中，函数必须是内置函数。如 unsafe.Sizeof() ， len() , cap() 。 常量组中，如果不指定类型和初始值，那么就和上一行非空常量右值相同 ： 例如： 1 2 3 4 5 6 7 8 const ( \ta = 1 \tb \tc = 2 \td ) fmt.Println(a, b, c, d) // \"1 1 2 2\" iota Go 中没有枚举的定义，但是可以使用 iota ， iota 标识符可以认为是 一个可以被编译器修改的常量 。 在 const 声明中，被重置为 0 ，在第一个声明的常量所在的行， iota 将会被置为 0 ，然后在每一个有常量声明的 行加 1 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 const ( \ta = iota // 0 \tb // 1 \tc // 2 \td = \"ha\" // \"ha\", iota += 1 \te // \"ha\" ,不指定类型和初始值，那么就和上一行非空常量右值相同, iota += 1 \tf = 100 // 100, iota +=1 \tg // 100,不指定类型和初始值，那么就和上一行非空常量右值相同, iota +=1 \th = iota // 7, 中断的 iota 计数必须显示恢复 \ti // 8 ) const ( \ti = 1  iota // 1, 1  0 \tj = 3  iota // 6, 3  1 \tk // 12, 3  2 \tl // 24, 3  3 )"},"basic/constant.html#常量":{"title":"&#x5E38;&#x91CF;","path":"\\golang-learn\\basic\\constant.html#常量","body":"const &#x58F0;&#x660E;&#x5E38;&#x91CF;&#xFF0C;&#x8FD0;&#x884C;&#x65F6;&#x4E0D;&#x53EF;&#x6539;&#x53D8;&#xFF08;&#x53EA;&#x8BFB;&#xFF09;&#xFF0C;&#x6CE8;&#x610F;&#x5E38;&#x91CF;&#x7684; &#x5E95;&#x5C42;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x53EA;&#x80FD;&#x662F;&#x57FA;&#x7840;&#x7C7B;&#x578B;&#xFF08;&#x5E03;&#x5C14;&#x578B;&#x3001;&#x6570;&#x503C;&#x578B;&#x548C;&#x5B57;&#x7B26;&#x4E32;&#x578B;&#xFF09; &#xFF1A; 1 const &#x5E38;&#x91CF;&#x540D;&#x5B57; &#x7C7B;&#x578B; = &#x8868;&#x8FBE;&#x5F0F; &#x201C;&#x7C7B;&#x578B;&#x201D;&#x53EF;&#x4EE5;&#x7701;&#x7565;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8868;&#x8FBE;&#x5F0F;&#x63A8;&#x5BFC;&#x51FA;&#x7C7B;&#x578B;&#x3002; &#x6BD4;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // &#x58F0;&#x660E;&#x4E00;&#x4E2A;`string`&#x7C7B;&#x578B; const b string = abc const a = abc // &#x58F0;&#x660E;&#x4E00;&#x7EC4;&#x4E0D;&#x540C;&#x7C7B;&#x578B; const c, f, s = true , 2.3 , four // bool, float64, string // &#x6279;&#x91CF;&#x58F0;&#x660E;&#x591A;&#x4E2A;&#x5E38;&#x91CF; const ( Unknown = 0 Female = 1 Male = 2 ) const strSize = len ( hello, world ) &#x5E38;&#x91CF;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x503C;&#x5728; &#x7F16;&#x8BD1;&#x671F;&#x8BA1;&#x7B97; &#x3002;&#x56E0;&#x6B64;&#x5E38;&#x91CF;&#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#xFF0C;&#x51FD;&#x6570;&#x5FC5;&#x987B;&#x662F;&#x5185;&#x7F6E;&#x51FD;&#x6570;&#x3002;&#x5982; unsafe.Sizeof() &#xFF0C; len() , cap() &#x3002; &#x5E38;&#x91CF;&#x7EC4;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x548C;&#x521D;&#x59CB;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x548C;&#x4E0A;&#x4E00;&#x884C;&#x975E;&#x7A7A;&#x5E38;&#x91CF;&#x53F3;&#x503C;&#x76F8;&#x540C; &#xFF1A; &#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 const ( \ta = 1 \tb \tc = 2 \td ) fmt.Println(a, b, c, d) // 1 1 2 2"},"basic/constant.html#iota":{"title":"iota","path":"\\golang-learn\\basic\\constant.html#iota","body":"Go &#x4E2D;&#x6CA1;&#x6709;&#x679A;&#x4E3E;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; iota &#xFF0C; iota &#x6807;&#x8BC6;&#x7B26;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F; &#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x88AB;&#x7F16;&#x8BD1;&#x5668;&#x4FEE;&#x6539;&#x7684;&#x5E38;&#x91CF; &#x3002; &#x5728; const &#x58F0;&#x660E;&#x4E2D;&#xFF0C;&#x88AB;&#x91CD;&#x7F6E;&#x4E3A; 0 &#xFF0C;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#x58F0;&#x660E;&#x7684;&#x5E38;&#x91CF;&#x6240;&#x5728;&#x7684;&#x884C;&#xFF0C; iota &#x5C06;&#x4F1A;&#x88AB;&#x7F6E;&#x4E3A; 0 &#xFF0C;&#x7136;&#x540E;&#x5728;&#x6BCF;&#x4E00;&#x4E2A;&#x6709;&#x5E38;&#x91CF;&#x58F0;&#x660E;&#x7684; &#x884C;&#x52A0; 1 &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 const ( \ta = iota // 0 \tb // 1 \tc // 2 \td = ha // ha, iota += 1 \te // ha ,&#x4E0D;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x548C;&#x521D;&#x59CB;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x548C;&#x4E0A;&#x4E00;&#x884C;&#x975E;&#x7A7A;&#x5E38;&#x91CF;&#x53F3;&#x503C;&#x76F8;&#x540C;, iota += 1 \tf = 100 // 100, iota +=1 \tg // 100,&#x4E0D;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x548C;&#x521D;&#x59CB;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x548C;&#x4E0A;&#x4E00;&#x884C;&#x975E;&#x7A7A;&#x5E38;&#x91CF;&#x53F3;&#x503C;&#x76F8;&#x540C;, iota +=1 \th = iota // 7, &#x4E2D;&#x65AD;&#x7684; iota &#x8BA1;&#x6570;&#x5FC5;&#x987B;&#x663E;&#x793A;&#x6062;&#x590D; \ti // 8 ) const ( \ti = 1  iota // 1, 1  0 \tj = 3  iota // 6, 3  1 \tk // 12, 3  2 \tl // 24, 3  3 )"},"basic/map.html":{"title":"map","path":"\\golang-learn\\basic\\map.html","body":"map map 是一个无序的 key/value 对的集合。 map 是引用类型 。这意味着它拥有对底层数据结构的引用， 就像指针一样。它底层的数据结构是 hash table 或 hash map 。 map 作为引用类型是非常好的，因为无论 map 有多大，都只会有一个副本。 定义 map ，使用 map 关键字： 1 2 3 4 5 6 7 8 9 10 11 12 /* 声明变量，默认 map 是 nil */ var 变量名 map [键类型]值类型 /* 使用 make 函数 */ 变量名 := make ( map [键类型]值类型) /* 字面值的语法创建 */ 变量名 := map [键类型]值类型 key1: value1, key2: value2, ...  一个 map 在未初始化之前默认为 nil 。 通过索引下标 key 来访问 map 中对应的 value 1 2 age, ok := ages[ \"bob\" ] if !ok  /* \"bob\" is not a key in this map; age == 0. */  ok 表示操作结果，是一个布尔值。 这叫做 ok-idiom 模式，就是在多返回值中返回一个 ok 布尔值，表示是否操作 成功 。 使用 map 过程中需要注意的几点： map 是无序的，每次打印出来的 map 都会不一样 ，它不能通过 index 获取，而必须通过 key 获取 map 的长度是不固定的，也就是和 slice 一样，也是一种引用类型 内置的 len 函数同样适用于 map ，返回 map 拥有的 key 的数量 map 的值可以很方便的修改，通过 numbers[one]=11 可以很容易的把 key 为 one 的字典值改为 11 map 和其他基本型别不同，它不是 thread-safe 的 ，在多个 go-routine 存取时，必须使用 mutex lock 机制 delete() delete 函数删除 map 元素。 1 delete (mapName, key) 遍历 可以使用 for range 遍历 map ： 1 2 3 for key, value := range mapName  \tfmt.Println(mapName[key])  Map 的迭代顺序是不确定的。可以先使用 sort 包排序 。 map 的键类型不能是哪些类型 map 的键和元素的最大不同在于，前者的类型是受限的，而后者却可以是任意类型的。 map 的键类型不可以是函数类型、字典类型和切片类型 。 为什么？ Go 语言规范规定，在 键类型的值之间必须可以施加操作符 == 和 != 。换句话说，键类型的值必须要支持判等操作。由于 函数类型、字典类型和切片类型的值并不支持判等操作，所以字典的键类型不能是这些类型。 另外，如果键的类型是接口类型的，那么键值的实际类型也不能是上述三种类型，否则在程序运行过程中会引发 panic（即运行时恐慌）。 1 2 3 4 5 var badMap2 = map [ interface ] int  \"1\" : 1 , [] int  2 : 2 , // 这里会引发 panic。 3 : 3 ,  优先考虑哪些类型作为字典的键类型 求哈希和判等操作的速度越快，对应的类型就越适合作为键类型。 对于所有的基本类型、指针类型，以及数组类型、结构体类型和接口类型，Go 语言都有一套算法与之对应。这套算法中就包含了哈希和判等。 以求哈希的操作为例，宽度越小的类型速度通常越快。对于布尔类型、整数类型、浮点数类型、复数类型和指针类型来说都是如此。对于字 符串类型，由于它的宽度是不定的，所以要看它的值的具体长度，长度越短求哈希越快。 类型的宽度是指它的单个值需要占用的字节数。比如， bool 、 int8 和 uint8 类型的一个值需要占用的字节数都是 1，因此这 些类型的宽度就都是 1。 在值为 nil 的字典上执行读写操作会成功吗 当我们仅声明而不初始化一个字典类型的变量的时候，它的值会是 nil 。如果你尝试使用一个 nil 的 map ，你会 得到一个 nil 指针异常，这将导致程序终止运行。所以不应该初始化一个空的 map 变量，比如 var m map[string]string 。 除了添加键 - 元素对，我们在一个值为 nil 的字典上做任何操作都不会引起错误 。当我们试图在一个值为 nil 的字典中 添加键 - 元素对的时候，Go 语言的运行时系统就会立即抛出一个 panic。 可以先使用 make 函数初始化，或者 dictionary = map[string]string{} 。这两种方法都可以创建一个空的 hash map 并指向 dictionary 。这确保永远不会获得 nil 指针异常 。"},"basic/map.html#map":{"title":"map","path":"\\golang-learn\\basic\\map.html#map","body":"map &#x662F;&#x4E00;&#x4E2A;&#x65E0;&#x5E8F;&#x7684; key/value &#x5BF9;&#x7684;&#x96C6;&#x5408;&#x3002; map &#x662F;&#x5F15;&#x7528;&#x7C7B;&#x578B; &#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x5B83;&#x62E5;&#x6709;&#x5BF9;&#x5E95;&#x5C42;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x5F15;&#x7528;&#xFF0C; &#x5C31;&#x50CF;&#x6307;&#x9488;&#x4E00;&#x6837;&#x3002;&#x5B83;&#x5E95;&#x5C42;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x662F; hash table &#x6216; hash map &#x3002; map &#x4F5C;&#x4E3A;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x662F;&#x975E;&#x5E38;&#x597D;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x65E0;&#x8BBA; map &#x6709;&#x591A;&#x5927;&#xFF0C;&#x90FD;&#x53EA;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x526F;&#x672C;&#x3002; &#x5B9A;&#x4E49; map &#xFF0C;&#x4F7F;&#x7528; map &#x5173;&#x952E;&#x5B57;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 /* &#x58F0;&#x660E;&#x53D8;&#x91CF;&#xFF0C;&#x9ED8;&#x8BA4; map &#x662F; nil */ var &#x53D8;&#x91CF;&#x540D; map [&#x952E;&#x7C7B;&#x578B;]&#x503C;&#x7C7B;&#x578B; /* &#x4F7F;&#x7528; make &#x51FD;&#x6570; */ &#x53D8;&#x91CF;&#x540D; := make ( map [&#x952E;&#x7C7B;&#x578B;]&#x503C;&#x7C7B;&#x578B;) /* &#x5B57;&#x9762;&#x503C;&#x7684;&#x8BED;&#x6CD5;&#x521B;&#x5EFA; */ &#x53D8;&#x91CF;&#x540D; := map [&#x952E;&#x7C7B;&#x578B;]&#x503C;&#x7C7B;&#x578B;{ key1: value1, key2: value2, ... } &#x4E00;&#x4E2A; map &#x5728;&#x672A;&#x521D;&#x59CB;&#x5316;&#x4E4B;&#x524D;&#x9ED8;&#x8BA4;&#x4E3A; nil &#x3002; &#x901A;&#x8FC7;&#x7D22;&#x5F15;&#x4E0B;&#x6807; key &#x6765;&#x8BBF;&#x95EE; map &#x4E2D;&#x5BF9;&#x5E94;&#x7684; value 1 2 age, ok := ages[ bob ] if !ok { /* bob is not a key in this map; age == 0. */ } ok &#x8868;&#x793A;&#x64CD;&#x4F5C;&#x7ED3;&#x679C;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x5E03;&#x5C14;&#x503C;&#x3002; &#x8FD9;&#x53EB;&#x505A; ok-idiom &#x6A21;&#x5F0F;&#xFF0C;&#x5C31;&#x662F;&#x5728;&#x591A;&#x8FD4;&#x56DE;&#x503C;&#x4E2D;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; ok &#x5E03;&#x5C14;&#x503C;&#xFF0C;&#x8868;&#x793A;&#x662F;&#x5426;&#x64CD;&#x4F5C; &#x6210;&#x529F; &#x3002; &#x4F7F;&#x7528; map &#x8FC7;&#x7A0B;&#x4E2D;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x51E0;&#x70B9;&#xFF1A; map &#x662F;&#x65E0;&#x5E8F;&#x7684;&#xFF0C;&#x6BCF;&#x6B21;&#x6253;&#x5370;&#x51FA;&#x6765;&#x7684; map &#x90FD;&#x4F1A;&#x4E0D;&#x4E00;&#x6837; &#xFF0C;&#x5B83;&#x4E0D;&#x80FD;&#x901A;&#x8FC7; index &#x83B7;&#x53D6;&#xFF0C;&#x800C;&#x5FC5;&#x987B;&#x901A;&#x8FC7; key &#x83B7;&#x53D6; map &#x7684;&#x957F;&#x5EA6;&#x662F;&#x4E0D;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x548C; slice &#x4E00;&#x6837;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x5F15;&#x7528;&#x7C7B;&#x578B; &#x5185;&#x7F6E;&#x7684; len &#x51FD;&#x6570;&#x540C;&#x6837;&#x9002;&#x7528;&#x4E8E; map &#xFF0C;&#x8FD4;&#x56DE; map &#x62E5;&#x6709;&#x7684; key &#x7684;&#x6570;&#x91CF; map &#x7684;&#x503C;&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x901A;&#x8FC7; numbers[one]=11 &#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x7684;&#x628A; key &#x4E3A; one &#x7684;&#x5B57;&#x5178;&#x503C;&#x6539;&#x4E3A; 11 map &#x548C;&#x5176;&#x4ED6;&#x57FA;&#x672C;&#x578B;&#x522B;&#x4E0D;&#x540C;&#xFF0C;&#x5B83;&#x4E0D;&#x662F; thread-safe &#x7684; &#xFF0C;&#x5728;&#x591A;&#x4E2A; go-routine &#x5B58;&#x53D6;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528; mutex lock &#x673A;&#x5236; delete() delete &#x51FD;&#x6570;&#x5220;&#x9664; map &#x5143;&#x7D20;&#x3002; 1 delete (mapName, key) &#x904D;&#x5386; &#x53EF;&#x4EE5;&#x4F7F;&#x7528; for range &#x904D;&#x5386; map &#xFF1A; 1 2 3 for key, value := range mapName { \tfmt.Println(mapName[key]) } Map &#x7684;&#x8FED;&#x4EE3;&#x987A;&#x5E8F;&#x662F;&#x4E0D;&#x786E;&#x5B9A;&#x7684;&#x3002;&#x53EF;&#x4EE5;&#x5148;&#x4F7F;&#x7528; sort &#x5305;&#x6392;&#x5E8F; &#x3002; map &#x7684;&#x952E;&#x7C7B;&#x578B;&#x4E0D;&#x80FD;&#x662F;&#x54EA;&#x4E9B;&#x7C7B;&#x578B; map &#x7684;&#x952E;&#x548C;&#x5143;&#x7D20;&#x7684;&#x6700;&#x5927;&#x4E0D;&#x540C;&#x5728;&#x4E8E;&#xFF0C;&#x524D;&#x8005;&#x7684;&#x7C7B;&#x578B;&#x662F;&#x53D7;&#x9650;&#x7684;&#xFF0C;&#x800C;&#x540E;&#x8005;&#x5374;&#x53EF;&#x4EE5;&#x662F;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x3002; map &#x7684;&#x952E;&#x7C7B;&#x578B;&#x4E0D;&#x53EF;&#x4EE5;&#x662F;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#x3001;&#x5B57;&#x5178;&#x7C7B;&#x578B;&#x548C;&#x5207;&#x7247;&#x7C7B;&#x578B; &#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#xFF1F; Go &#x8BED;&#x8A00;&#x89C4;&#x8303;&#x89C4;&#x5B9A;&#xFF0C;&#x5728; &#x952E;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x4E4B;&#x95F4;&#x5FC5;&#x987B;&#x53EF;&#x4EE5;&#x65BD;&#x52A0;&#x64CD;&#x4F5C;&#x7B26; == &#x548C; != &#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x952E;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x5FC5;&#x987B;&#x8981;&#x652F;&#x6301;&#x5224;&#x7B49;&#x64CD;&#x4F5C;&#x3002;&#x7531;&#x4E8E; &#x51FD;&#x6570;&#x7C7B;&#x578B;&#x3001;&#x5B57;&#x5178;&#x7C7B;&#x578B;&#x548C;&#x5207;&#x7247;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x5E76;&#x4E0D;&#x652F;&#x6301;&#x5224;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x5B57;&#x5178;&#x7684;&#x952E;&#x7C7B;&#x578B;&#x4E0D;&#x80FD;&#x662F;&#x8FD9;&#x4E9B;&#x7C7B;&#x578B;&#x3002; &#x53E6;&#x5916;&#xFF0C;&#x5982;&#x679C;&#x952E;&#x7684;&#x7C7B;&#x578B;&#x662F;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x952E;&#x503C;&#x7684;&#x5B9E;&#x9645;&#x7C7B;&#x578B;&#x4E5F;&#x4E0D;&#x80FD;&#x662F;&#x4E0A;&#x8FF0;&#x4E09;&#x79CD;&#x7C7B;&#x578B;&#xFF0C;&#x5426;&#x5219;&#x5728;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x5F15;&#x53D1; panic&#xFF08;&#x5373;&#x8FD0;&#x884C;&#x65F6;&#x6050;&#x614C;&#xFF09;&#x3002; 1 2 3 4 5 var badMap2 = map [ interface {}] int { 1 : 1 , [] int { 2 }: 2 , // &#x8FD9;&#x91CC;&#x4F1A;&#x5F15;&#x53D1; panic&#x3002; 3 : 3 , } &#x4F18;&#x5148;&#x8003;&#x8651;&#x54EA;&#x4E9B;&#x7C7B;&#x578B;&#x4F5C;&#x4E3A;&#x5B57;&#x5178;&#x7684;&#x952E;&#x7C7B;&#x578B; &#x6C42;&#x54C8;&#x5E0C;&#x548C;&#x5224;&#x7B49;&#x64CD;&#x4F5C;&#x7684;&#x901F;&#x5EA6;&#x8D8A;&#x5FEB;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x7C7B;&#x578B;&#x5C31;&#x8D8A;&#x9002;&#x5408;&#x4F5C;&#x4E3A;&#x952E;&#x7C7B;&#x578B;&#x3002; &#x5BF9;&#x4E8E;&#x6240;&#x6709;&#x7684;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x3001;&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF0C;&#x4EE5;&#x53CA;&#x6570;&#x7EC4;&#x7C7B;&#x578B;&#x3001;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x548C;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#xFF0C;Go &#x8BED;&#x8A00;&#x90FD;&#x6709;&#x4E00;&#x5957;&#x7B97;&#x6CD5;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x3002;&#x8FD9;&#x5957;&#x7B97;&#x6CD5;&#x4E2D;&#x5C31;&#x5305;&#x542B;&#x4E86;&#x54C8;&#x5E0C;&#x548C;&#x5224;&#x7B49;&#x3002; &#x4EE5;&#x6C42;&#x54C8;&#x5E0C;&#x7684;&#x64CD;&#x4F5C;&#x4E3A;&#x4F8B;&#xFF0C;&#x5BBD;&#x5EA6;&#x8D8A;&#x5C0F;&#x7684;&#x7C7B;&#x578B;&#x901F;&#x5EA6;&#x901A;&#x5E38;&#x8D8A;&#x5FEB;&#x3002;&#x5BF9;&#x4E8E;&#x5E03;&#x5C14;&#x7C7B;&#x578B;&#x3001;&#x6574;&#x6570;&#x7C7B;&#x578B;&#x3001;&#x6D6E;&#x70B9;&#x6570;&#x7C7B;&#x578B;&#x3001;&#x590D;&#x6570;&#x7C7B;&#x578B;&#x548C;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x6765;&#x8BF4;&#x90FD;&#x662F;&#x5982;&#x6B64;&#x3002;&#x5BF9;&#x4E8E;&#x5B57; &#x7B26;&#x4E32;&#x7C7B;&#x578B;&#xFF0C;&#x7531;&#x4E8E;&#x5B83;&#x7684;&#x5BBD;&#x5EA6;&#x662F;&#x4E0D;&#x5B9A;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x770B;&#x5B83;&#x7684;&#x503C;&#x7684;&#x5177;&#x4F53;&#x957F;&#x5EA6;&#xFF0C;&#x957F;&#x5EA6;&#x8D8A;&#x77ED;&#x6C42;&#x54C8;&#x5E0C;&#x8D8A;&#x5FEB;&#x3002; &#x7C7B;&#x578B;&#x7684;&#x5BBD;&#x5EA6;&#x662F;&#x6307;&#x5B83;&#x7684;&#x5355;&#x4E2A;&#x503C;&#x9700;&#x8981;&#x5360;&#x7528;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002;&#x6BD4;&#x5982;&#xFF0C; bool &#x3001; int8 &#x548C; uint8 &#x7C7B;&#x578B;&#x7684;&#x4E00;&#x4E2A;&#x503C;&#x9700;&#x8981;&#x5360;&#x7528;&#x7684;&#x5B57;&#x8282;&#x6570;&#x90FD;&#x662F; 1&#xFF0C;&#x56E0;&#x6B64;&#x8FD9; &#x4E9B;&#x7C7B;&#x578B;&#x7684;&#x5BBD;&#x5EA6;&#x5C31;&#x90FD;&#x662F; 1&#x3002; &#x5728;&#x503C;&#x4E3A; nil &#x7684;&#x5B57;&#x5178;&#x4E0A;&#x6267;&#x884C;&#x8BFB;&#x5199;&#x64CD;&#x4F5C;&#x4F1A;&#x6210;&#x529F;&#x5417; &#x5F53;&#x6211;&#x4EEC;&#x4EC5;&#x58F0;&#x660E;&#x800C;&#x4E0D;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x5B57;&#x5178;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x7684;&#x503C;&#x4F1A;&#x662F; nil &#x3002;&#x5982;&#x679C;&#x4F60;&#x5C1D;&#x8BD5;&#x4F7F;&#x7528;&#x4E00;&#x4E2A; nil &#x7684; map &#xFF0C;&#x4F60;&#x4F1A; &#x5F97;&#x5230;&#x4E00;&#x4E2A; nil &#x6307;&#x9488;&#x5F02;&#x5E38;&#xFF0C;&#x8FD9;&#x5C06;&#x5BFC;&#x81F4;&#x7A0B;&#x5E8F;&#x7EC8;&#x6B62;&#x8FD0;&#x884C;&#x3002;&#x6240;&#x4EE5;&#x4E0D;&#x5E94;&#x8BE5;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x7A7A;&#x7684; map &#x53D8;&#x91CF;&#xFF0C;&#x6BD4;&#x5982; var m map[string]string &#x3002; &#x9664;&#x4E86;&#x6DFB;&#x52A0;&#x952E; - &#x5143;&#x7D20;&#x5BF9;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x4E00;&#x4E2A;&#x503C;&#x4E3A; nil &#x7684;&#x5B57;&#x5178;&#x4E0A;&#x505A;&#x4EFB;&#x4F55;&#x64CD;&#x4F5C;&#x90FD;&#x4E0D;&#x4F1A;&#x5F15;&#x8D77;&#x9519;&#x8BEF; &#x3002;&#x5F53;&#x6211;&#x4EEC;&#x8BD5;&#x56FE;&#x5728;&#x4E00;&#x4E2A;&#x503C;&#x4E3A; nil &#x7684;&#x5B57;&#x5178;&#x4E2D; &#x6DFB;&#x52A0;&#x952E; - &#x5143;&#x7D20;&#x5BF9;&#x7684;&#x65F6;&#x5019;&#xFF0C;Go &#x8BED;&#x8A00;&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x5C31;&#x4F1A;&#x7ACB;&#x5373;&#x629B;&#x51FA;&#x4E00;&#x4E2A; panic&#x3002; &#x53EF;&#x4EE5;&#x5148;&#x4F7F;&#x7528; make &#x51FD;&#x6570;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x6216;&#x8005; dictionary = map[string]string{} &#x3002;&#x8FD9;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x90FD;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7A7A;&#x7684; hash map &#x5E76;&#x6307;&#x5411; dictionary &#x3002;&#x8FD9;&#x786E;&#x4FDD;&#x6C38;&#x8FDC;&#x4E0D;&#x4F1A;&#x83B7;&#x5F97; nil &#x6307;&#x9488;&#x5F02;&#x5E38; &#x3002;"},"basic/json.html":{"title":"序列化","path":"\\golang-learn\\basic\\json.html","body":"序列化 Go 对于其他序列化协议如 Json ， XML ， Protocol Buffers ，都有良好的支持， 由标准库中的 encoding/json 、 encoding/xml 、 encoding/asn1 等包提供支持， Protocol Buffers 的 由 github.com/golang/protobuf 包提供支持，并且这类包都有着相似的 API 接口。 GO 中结构体转为 JSON 使用 json.Marshal ，也就是编码操作： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 type Movie struct  \tTitle string \tYear int `json:\"released\"` \tColor bool `json:\"color,omitempty\"` \tActors [] string \tActors [] string  var movies = []Movie \t \t\tTitle: \"Casablanca\" , \t\tYear: 1942 , \t\tColor: false , \t\tActors: [] string  \"Humphrey Bogart\" , \"Ingrid Bergman\" , \t \t\tTitle: \"Cool Hand Luke\" , \t\tYear: 1967 , \t\tColor: true , \t\tActors: [] string  \"Paul Newman\" , \t \t\tTitle: \"Bullitt\" , \t\tYear: 1968 , \t\tColor: true , \t\tActors: [] string  \"Steve McQueen\" , \"Jacqueline Bisset\" \t data, err := json.Marshal(movies) if err != nil  log.Fatalf( \"JSON marshaling failed: %s\" , err)  fmt.Printf( \"%s\\n\" , data) json.MarshalIndent 格式化输出 JSON ，例如： 1 2 3 4 5 data, err := json.MarshalIndent(movies, \"\" , \" \" ) if err != nil  log.Fatalf( \"JSON marshaling failed: %s\" , err)  fmt.Printf( \"%s\\n\" , data) 输出： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 [  \"Title\" : \"Casablanca\" , \"released\" : 1942 , \"Actors\" : [ \"Humphrey Bogart\" , \"Ingrid Bergman\" ] ,  \"Title\" : \"Cool Hand Luke\" , \"released\" : 1967 , \"color\" : true , \"Actors\" : [ \"Paul Newman\" ] ,  \"Title\" : \"Bullitt\" , \"released\" : 1968 , \"color\" : true , \"Actors\" : [ \"Steve McQueen\" , \"Jacqueline Bisset\" ]  ] 有没有注意到， Year 字段名的成员在编码后变成了 released ， Color 变成了小写的 color 。这是因为结构体的成员 Tag 导致的， 如上面的： 1 2 Year int `json:\"released\"` Color bool `json:\"color,omitempty\"` 结构体的成员 Tag 可以是任意的字符串面值，但是通常是一系列用空格分隔的 key:value 键值对序列；因为值中含义双引号字符， 因此成员 Tag 一般用原生字符串面值的形式书写。 json 开头键名对应的值用于控制 encoding/json 包的编码和解码的行为， 并且 encoding/... 下面其它的包也遵循这个约定。成员 Tag 中 json 对应值的第一部分用于指定 JSON 对象的名字， 比如将 Go 语言中的 TotalCount 成员对应到 JSON 中的 total_count 对象。 Color 成员的 Tag 还带了一个额外的 omitempty 选项，表示当 Go 语言结构体成员为空或零值时不生成 JSON 对象（这里 false 为零值）。果然， Casablanca 是一个黑白电影， 并没有输出 Color 成员。 注意，只有导出的结构体成员才会被编码 解码操作，使用 json.Unmarshal ： 1 2 3 4 5 var titles [] struct  Title string  if err := json.Unmarshal(data, &amp;titles); err != nil  log.Fatalf( \"JSON unmarshaling failed: %s\" , err)  fmt.Println(titles) // \"[Casablanca Cool Hand Luke Bullitt]\" 通过定义合适的Go语言数据结构，我们可以选择性地解码JSON中感兴趣的成员。 基于流式的解码器 json.Decoder 。针对输出流的 json.Encoder 编码对象"},"basic/json.html#序列化":{"title":"&#x5E8F;&#x5217;&#x5316;","path":"\\golang-learn\\basic\\json.html#序列化","body":"Go &#x5BF9;&#x4E8E;&#x5176;&#x4ED6;&#x5E8F;&#x5217;&#x5316;&#x534F;&#x8BAE;&#x5982; Json &#xFF0C; XML &#xFF0C; Protocol Buffers &#xFF0C;&#x90FD;&#x6709;&#x826F;&#x597D;&#x7684;&#x652F;&#x6301;&#xFF0C; &#x7531;&#x6807;&#x51C6;&#x5E93;&#x4E2D;&#x7684; encoding/json &#x3001; encoding/xml &#x3001; encoding/asn1 &#x7B49;&#x5305;&#x63D0;&#x4F9B;&#x652F;&#x6301;&#xFF0C; Protocol Buffers &#x7684; &#x7531; github.com/golang/protobuf &#x5305;&#x63D0;&#x4F9B;&#x652F;&#x6301;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x7C7B;&#x5305;&#x90FD;&#x6709;&#x7740;&#x76F8;&#x4F3C;&#x7684; API &#x63A5;&#x53E3;&#x3002; GO &#x4E2D;&#x7ED3;&#x6784;&#x4F53;&#x8F6C;&#x4E3A; JSON &#x4F7F;&#x7528; json.Marshal &#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7F16;&#x7801;&#x64CD;&#x4F5C;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 type Movie struct { \tTitle string \tYear int `json:released` \tColor bool `json:color,omitempty` \tActors [] string \tActors [] string } var movies = []Movie{ \t{ \t\tTitle: Casablanca , \t\tYear: 1942 , \t\tColor: false , \t\tActors: [] string { Humphrey Bogart , Ingrid Bergman }}, \t{ \t\tTitle: Cool Hand Luke , \t\tYear: 1967 , \t\tColor: true , \t\tActors: [] string { Paul Newman }}, \t{ \t\tTitle: Bullitt , \t\tYear: 1968 , \t\tColor: true , \t\tActors: [] string { Steve McQueen , Jacqueline Bisset }}}\t data, err := json.Marshal(movies) if err != nil { log.Fatalf( JSON marshaling failed: %s , err) } fmt.Printf( %s\\n , data) json.MarshalIndent &#x683C;&#x5F0F;&#x5316;&#x8F93;&#x51FA; JSON &#xFF0C;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 data, err := json.MarshalIndent(movies,  ,   ) if err != nil { log.Fatalf( JSON marshaling failed: %s , err) } fmt.Printf( %s\\n , data) &#x8F93;&#x51FA;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 [ { Title : Casablanca , released : 1942 , Actors : [ Humphrey Bogart , Ingrid Bergman ] }, { Title : Cool Hand Luke , released : 1967 , color : true , Actors : [ Paul Newman ] }, { Title : Bullitt , released : 1968 , color : true , Actors : [ Steve McQueen , Jacqueline Bisset ] } ] &#x6709;&#x6CA1;&#x6709;&#x6CE8;&#x610F;&#x5230;&#xFF0C; Year &#x5B57;&#x6BB5;&#x540D;&#x7684;&#x6210;&#x5458;&#x5728;&#x7F16;&#x7801;&#x540E;&#x53D8;&#x6210;&#x4E86; released &#xFF0C; Color &#x53D8;&#x6210;&#x4E86;&#x5C0F;&#x5199;&#x7684; color &#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x7ED3;&#x6784;&#x4F53;&#x7684;&#x6210;&#x5458; Tag &#x5BFC;&#x81F4;&#x7684;&#xFF0C; &#x5982;&#x4E0A;&#x9762;&#x7684;&#xFF1A; 1 2 Year int `json:released` Color bool `json:color,omitempty` &#x7ED3;&#x6784;&#x4F53;&#x7684;&#x6210;&#x5458; Tag &#x53EF;&#x4EE5;&#x662F;&#x4EFB;&#x610F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x9762;&#x503C;&#xFF0C;&#x4F46;&#x662F;&#x901A;&#x5E38;&#x662F;&#x4E00;&#x7CFB;&#x5217;&#x7528;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x7684; key:value &#x952E;&#x503C;&#x5BF9;&#x5E8F;&#x5217;&#xFF1B;&#x56E0;&#x4E3A;&#x503C;&#x4E2D;&#x542B;&#x4E49;&#x53CC;&#x5F15;&#x53F7;&#x5B57;&#x7B26;&#xFF0C; &#x56E0;&#x6B64;&#x6210;&#x5458; Tag &#x4E00;&#x822C;&#x7528;&#x539F;&#x751F;&#x5B57;&#x7B26;&#x4E32;&#x9762;&#x503C;&#x7684;&#x5F62;&#x5F0F;&#x4E66;&#x5199;&#x3002; json &#x5F00;&#x5934;&#x952E;&#x540D;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x7528;&#x4E8E;&#x63A7;&#x5236; encoding/json &#x5305;&#x7684;&#x7F16;&#x7801;&#x548C;&#x89E3;&#x7801;&#x7684;&#x884C;&#x4E3A;&#xFF0C; &#x5E76;&#x4E14; encoding/... &#x4E0B;&#x9762;&#x5176;&#x5B83;&#x7684;&#x5305;&#x4E5F;&#x9075;&#x5FAA;&#x8FD9;&#x4E2A;&#x7EA6;&#x5B9A;&#x3002;&#x6210;&#x5458; Tag &#x4E2D; json &#x5BF9;&#x5E94;&#x503C;&#x7684;&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#x7528;&#x4E8E;&#x6307;&#x5B9A; JSON &#x5BF9;&#x8C61;&#x7684;&#x540D;&#x5B57;&#xFF0C; &#x6BD4;&#x5982;&#x5C06; Go &#x8BED;&#x8A00;&#x4E2D;&#x7684; TotalCount &#x6210;&#x5458;&#x5BF9;&#x5E94;&#x5230; JSON &#x4E2D;&#x7684; total_count &#x5BF9;&#x8C61;&#x3002; Color &#x6210;&#x5458;&#x7684; Tag &#x8FD8;&#x5E26;&#x4E86;&#x4E00;&#x4E2A;&#x989D;&#x5916;&#x7684; omitempty &#x9009;&#x9879;&#xFF0C;&#x8868;&#x793A;&#x5F53; Go &#x8BED;&#x8A00;&#x7ED3;&#x6784;&#x4F53;&#x6210;&#x5458;&#x4E3A;&#x7A7A;&#x6216;&#x96F6;&#x503C;&#x65F6;&#x4E0D;&#x751F;&#x6210; JSON &#x5BF9;&#x8C61;&#xFF08;&#x8FD9;&#x91CC; false &#x4E3A;&#x96F6;&#x503C;&#xFF09;&#x3002;&#x679C;&#x7136;&#xFF0C; Casablanca &#x662F;&#x4E00;&#x4E2A;&#x9ED1;&#x767D;&#x7535;&#x5F71;&#xFF0C; &#x5E76;&#x6CA1;&#x6709;&#x8F93;&#x51FA; Color &#x6210;&#x5458;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x53EA;&#x6709;&#x5BFC;&#x51FA;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x6210;&#x5458;&#x624D;&#x4F1A;&#x88AB;&#x7F16;&#x7801; &#x89E3;&#x7801;&#x64CD;&#x4F5C;&#xFF0C;&#x4F7F;&#x7528; json.Unmarshal &#xFF1A; 1 2 3 4 5 var titles [] struct { Title string } if err := json.Unmarshal(data, &amp;titles); err != nil { log.Fatalf( JSON unmarshaling failed: %s , err) } fmt.Println(titles) // [{Casablanca} {Cool Hand Luke} {Bullitt}] &#x901A;&#x8FC7;&#x5B9A;&#x4E49;&#x5408;&#x9002;&#x7684;Go&#x8BED;&#x8A00;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x6027;&#x5730;&#x89E3;&#x7801;JSON&#x4E2D;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x6210;&#x5458;&#x3002; &#x57FA;&#x4E8E;&#x6D41;&#x5F0F;&#x7684;&#x89E3;&#x7801;&#x5668; json.Decoder &#x3002;&#x9488;&#x5BF9;&#x8F93;&#x51FA;&#x6D41;&#x7684; json.Encoder &#x7F16;&#x7801;&#x5BF9;&#x8C61;"},"basic/pointer.html":{"title":"指针","path":"\\golang-learn\\basic\\pointer.html","body":"指针 指针和内存地址不能混为一谈 。内存地址是内存中每个字节单元的唯一编号，而指针是一个实体。指针也会分配内存空间，相当于一个 保存内存地址的整形变量。 1 2 3 4 5 x := 1 p := &amp;x // p, of type *int, points to x fmt.Println(*p) // \"1\" *p = 2 // equivalent to x = 2 fmt.Println(x) // \"2\" 上面的代码，初始化一个变量 x ， &amp; 是取地址操作， &amp;x 就是取变量 x 的内存地址，那么 p 就是一个指针， 类型是 *int ， p 这个指针保存了变量 x 的内存地址。接下来 *p 表示读取指针指向的变量的值，也就是变量 x 的值 1。 *p 也可以被赋值。 任何类型的指针的零值都是 nil 。当指针指向同一个变量或者 nil 时是相等的。 当一个指针被定义后没有分配到任何变量时，它的值为 nil 。 nil 指针也称为空指针。 指向指针的指针 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a int var ptr * int var pptr ** int a = 3000 /* 指针 ptr 地址 */ ptr = &amp;a /* 指向指针 ptr 地址 */ pptr = &amp;ptr /* 获取 pptr 的值 */ fmt.Printf( \"变量 a = %d\\n\" , a ) fmt.Printf( \"指针变量 *ptr = %d\\n\" , *ptr ) fmt.Printf( \"指向指针的指针变量 **pptr = %d\\n\" , **pptr) 为什么需要指针 相比 Java，Python，Javascript 等引用类型的语言，Golang 拥有类似C语言的指针这个相对古老的特性。但不同于 C 语言，Golang 的指 针是单独的类型，而且也不能对指针做整数运算。从这一点看，Golang 的指针基本就是一种引用。 在学习引用类型语言的时候，总是要先搞清楚，当给一个 函数/方法 传参的时候，传进去的是值还是引用。实际上，在大部分引用型语言里， 参数为基本类型时，传进去的大都是值，也就是另外复制了一份参数到当前的函数调用栈。参数为高级类型时，传进去的基本都是引用。 内存管理中的内存区域一般包括 heap 和 stack ， stack 主要用来存储当前调用栈用到的简单类型数据： string ， boolean ， int ， float 等。这些类型的内存占用小，容易回收，基本上它们的值和指针占用的空间差不多，因此可以直接复制， GC 也比较容易做针对性的 优化。复杂的高级类型占用的内存往往相对较大，存储在 heap 中， GC 回收频率相对较低，代价也较大，因此传 引用/指针 可以避免进行成本较 高的复制操作，并且节省内存，提高程序运行效率。 因此，在下列情况可以考虑使用指针： 需要改变参数的值 避免复制操作 节省内存 而在 Golang 中，具体到高级类型 struct ， slice ， map 也各有不同。实际上，只有 struct 的使用有点复杂， slice ， map ， chan 都可以直接使用，不用考虑是值还是指针 。 struct 对于函数（ function ），由函数的参数类型指定，传入的参数的类型不对会报错，例如： 1 2 3 func passValue (s struct )  func passPointer (s * struct )  对于方法（ method ），接收者（ receiver ）可以是指针，也可以是值，Golang 会在传递参数前自动适配以符合参数的类型。也就是：如果方法的参数 是值，那么按照传值的方式 ，方法内部对 struct 的改动无法作用在外部的变量上，例如： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 package main import \"fmt\" type MyPoint struct  X int Y int  func printFuncValue (p MyPoint)  p.X = 1 p.Y = 1 fmt.Printf( \" - %v\" , p)  func printFuncPointer (pp *MyPoint)  pp.X = 1 // 实际上应该写做 (*pp).X，Golang 给了语法糖，减少了麻烦，但是也导致了 * 的不一致 pp.Y = 1 fmt.Printf( \" - %v\" , pp)  func (p MyPoint) printMethodValue ()  p.X += 1 p.Y += 1 fmt.Printf( \" - %v\" , p)  // 建议使用指针作为方法（method：printMethodPointer）的接收者（receiver：*MyPoint），一是可以修改接收者的值，二是可以避免大对象的复制 func (pp *MyPoint) printMethodPointer ()  pp.X += 1 pp.Y += 1 fmt.Printf( \" - %v\" , pp)  func main ()  p := MyPoint 0 , 0  pp := &amp;MyPoint 0 , 0  fmt.Printf( \"\\n value to func(value): %v\" , p) printFuncValue(p) fmt.Printf( \" -- %v\" , p) // Output: value to func(value): 0 0 - 1 1 -- 0 0 //printFuncValue(pp) // cannot use pp (type *MyPoint) as type MyPoint in argument to printFuncValue //printFuncPointer(p) // cannot use p (type MyPoint) as type *MyPoint in argument to printFuncPointer fmt.Printf( \"\\n pointer to func(pointer): %v\" , pp) printFuncPointer(pp) fmt.Printf( \" -- %v\" , pp) // Output: pointer to func(pointer): &amp;0 0 - &amp;1 1 -- &amp;1 1 fmt.Printf( \"\\n value to method(value): %v\" , p) p.printMethodValue() fmt.Printf( \" -- %v\" , p) // Output: value to method(value): 0 0 - 1 1 -- 0 0 fmt.Printf( \"\\n value to method(pointer): %v\" , p) p.printMethodPointer() fmt.Printf( \" -- %v\" , p) // Output: value to method(pointer): 0 0 - &amp;1 1 -- 1 1 fmt.Printf( \"\\n pointer to method(value): %v\" , pp) pp.printMethodValue() fmt.Printf( \" -- %v\" , pp) // Output: pointer to method(value): &amp;1 1 - 2 2 -- &amp;1 1 fmt.Printf( \"\\n pointer to method(pointer): %v\" , pp) pp.printMethodPointer() fmt.Printf( \" -- %v\" , pp) // Output: pointer to method(pointer): &amp;1 1 - &amp;2 2 -- &amp;2 2  slice slice 实际上相当于对其依附的 array 的引用，它不存储数据，只是对 array 进行描述。因此，修改 slice 中的元素， 改变会体现在 array 上，当然也会体现在该 array 的所有 slice 上 。 map 使用 make(map[string]string) 返回的本身是个引用，可以直接用来操作 ： 1 map [ \"name\" ]= \"Jason\" 而 如果使用 map 的指针，反而会产生错误 ： 1 2 * map [ \"name\" ]= \"Jason\" // invalid indirect of m[\"title\"] (type string) (* map )[ \"name\" ]= \"Jason\" // invalid indirect of m (type map[string]string) 哪些值是不可寻址的 不可变的值不可寻址 。常量、基本类型的值字面量、字符串变量的值、函数以及方法的字面量都是如此。 其实这样规定也有安全性方面的考虑。 绝大多数被视为 临时结果的值都是不可寻址的 。算术操作的结果值属于临时结果，针对值字面量的表达式结果值也属于临时结果。 但有一个例外，对切片字面量的索引结果值虽然也属于临时结果，但却是可寻址的。函数的返回值也是临时结果。 ++ 和 -- 并不属 于操作符。 不安全的值不可寻址 ，若拿到某值的指针可能会破坏程序的一致性，那么就是不安全的。由于字典的内部机制，对字典的索 引结果值的取址操作都是不安全的。另外，获取由字面量或标识符代表的函数或方法的地址显然也是不安全的。"},"basic/pointer.html#指针":{"title":"&#x6307;&#x9488;","path":"\\golang-learn\\basic\\pointer.html#指针","body":"&#x6307;&#x9488;&#x548C;&#x5185;&#x5B58;&#x5730;&#x5740;&#x4E0D;&#x80FD;&#x6DF7;&#x4E3A;&#x4E00;&#x8C08; &#x3002;&#x5185;&#x5B58;&#x5730;&#x5740;&#x662F;&#x5185;&#x5B58;&#x4E2D;&#x6BCF;&#x4E2A;&#x5B57;&#x8282;&#x5355;&#x5143;&#x7684;&#x552F;&#x4E00;&#x7F16;&#x53F7;&#xFF0C;&#x800C;&#x6307;&#x9488;&#x662F;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#x3002;&#x6307;&#x9488;&#x4E5F;&#x4F1A;&#x5206;&#x914D;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x4E2A; &#x4FDD;&#x5B58;&#x5185;&#x5B58;&#x5730;&#x5740;&#x7684;&#x6574;&#x5F62;&#x53D8;&#x91CF;&#x3002; 1 2 3 4 5 x := 1 p := &amp;x // p, of type *int, points to x fmt.Println(*p) // 1 *p = 2 // equivalent to x = 2 fmt.Println(x) // 2 &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x53D8;&#x91CF; x &#xFF0C; &amp; &#x662F;&#x53D6;&#x5730;&#x5740;&#x64CD;&#x4F5C;&#xFF0C; &amp;x &#x5C31;&#x662F;&#x53D6;&#x53D8;&#x91CF; x &#x7684;&#x5185;&#x5B58;&#x5730;&#x5740;&#xFF0C;&#x90A3;&#x4E48; p &#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#xFF0C; &#x7C7B;&#x578B;&#x662F; *int &#xFF0C; p &#x8FD9;&#x4E2A;&#x6307;&#x9488;&#x4FDD;&#x5B58;&#x4E86;&#x53D8;&#x91CF; x &#x7684;&#x5185;&#x5B58;&#x5730;&#x5740;&#x3002;&#x63A5;&#x4E0B;&#x6765; *p &#x8868;&#x793A;&#x8BFB;&#x53D6;&#x6307;&#x9488;&#x6307;&#x5411;&#x7684;&#x53D8;&#x91CF;&#x7684;&#x503C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x53D8;&#x91CF; x &#x7684;&#x503C; 1&#x3002; *p &#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x8D4B;&#x503C;&#x3002; &#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;&#x6307;&#x9488;&#x7684;&#x96F6;&#x503C;&#x90FD;&#x662F; nil &#x3002;&#x5F53;&#x6307;&#x9488;&#x6307;&#x5411;&#x540C;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x6216;&#x8005; nil &#x65F6;&#x662F;&#x76F8;&#x7B49;&#x7684;&#x3002; &#x5F53;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x88AB;&#x5B9A;&#x4E49;&#x540E;&#x6CA1;&#x6709;&#x5206;&#x914D;&#x5230;&#x4EFB;&#x4F55;&#x53D8;&#x91CF;&#x65F6;&#xFF0C;&#x5B83;&#x7684;&#x503C;&#x4E3A; nil &#x3002; nil &#x6307;&#x9488;&#x4E5F;&#x79F0;&#x4E3A;&#x7A7A;&#x6307;&#x9488;&#x3002;"},"basic/pointer.html#指向指针的指针":{"title":"&#x6307;&#x5411;&#x6307;&#x9488;&#x7684;&#x6307;&#x9488;","path":"\\golang-learn\\basic\\pointer.html#指向指针的指针","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a int var ptr * int var pptr ** int a = 3000 /* &#x6307;&#x9488; ptr &#x5730;&#x5740; */ ptr = &amp;a /* &#x6307;&#x5411;&#x6307;&#x9488; ptr &#x5730;&#x5740; */ pptr = &amp;ptr /* &#x83B7;&#x53D6; pptr &#x7684;&#x503C; */ fmt.Printf( &#x53D8;&#x91CF; a = %d\\n , a ) fmt.Printf( &#x6307;&#x9488;&#x53D8;&#x91CF; *ptr = %d\\n , *ptr ) fmt.Printf( &#x6307;&#x5411;&#x6307;&#x9488;&#x7684;&#x6307;&#x9488;&#x53D8;&#x91CF; **pptr = %d\\n , **pptr)"},"basic/pointer.html#为什么需要指针":{"title":"&#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981;&#x6307;&#x9488;","path":"\\golang-learn\\basic\\pointer.html#为什么需要指针","body":"&#x76F8;&#x6BD4; Java&#xFF0C;Python&#xFF0C;Javascript &#x7B49;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x8BED;&#x8A00;&#xFF0C;Golang &#x62E5;&#x6709;&#x7C7B;&#x4F3C;C&#x8BED;&#x8A00;&#x7684;&#x6307;&#x9488;&#x8FD9;&#x4E2A;&#x76F8;&#x5BF9;&#x53E4;&#x8001;&#x7684;&#x7279;&#x6027;&#x3002;&#x4F46;&#x4E0D;&#x540C;&#x4E8E; C &#x8BED;&#x8A00;&#xFF0C;Golang &#x7684;&#x6307; &#x9488;&#x662F;&#x5355;&#x72EC;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x800C;&#x4E14;&#x4E5F;&#x4E0D;&#x80FD;&#x5BF9;&#x6307;&#x9488;&#x505A;&#x6574;&#x6570;&#x8FD0;&#x7B97;&#x3002;&#x4ECE;&#x8FD9;&#x4E00;&#x70B9;&#x770B;&#xFF0C;Golang &#x7684;&#x6307;&#x9488;&#x57FA;&#x672C;&#x5C31;&#x662F;&#x4E00;&#x79CD;&#x5F15;&#x7528;&#x3002; &#x5728;&#x5B66;&#x4E60;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x8BED;&#x8A00;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x603B;&#x662F;&#x8981;&#x5148;&#x641E;&#x6E05;&#x695A;&#xFF0C;&#x5F53;&#x7ED9;&#x4E00;&#x4E2A; &#x51FD;&#x6570;/&#x65B9;&#x6CD5; &#x4F20;&#x53C2;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F20;&#x8FDB;&#x53BB;&#x7684;&#x662F;&#x503C;&#x8FD8;&#x662F;&#x5F15;&#x7528;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5728;&#x5927;&#x90E8;&#x5206;&#x5F15;&#x7528;&#x578B;&#x8BED;&#x8A00;&#x91CC;&#xFF0C; &#x53C2;&#x6570;&#x4E3A;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x65F6;&#xFF0C;&#x4F20;&#x8FDB;&#x53BB;&#x7684;&#x5927;&#x90FD;&#x662F;&#x503C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x53E6;&#x5916;&#x590D;&#x5236;&#x4E86;&#x4E00;&#x4EFD;&#x53C2;&#x6570;&#x5230;&#x5F53;&#x524D;&#x7684;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x6808;&#x3002;&#x53C2;&#x6570;&#x4E3A;&#x9AD8;&#x7EA7;&#x7C7B;&#x578B;&#x65F6;&#xFF0C;&#x4F20;&#x8FDB;&#x53BB;&#x7684;&#x57FA;&#x672C;&#x90FD;&#x662F;&#x5F15;&#x7528;&#x3002; &#x5185;&#x5B58;&#x7BA1;&#x7406;&#x4E2D;&#x7684;&#x5185;&#x5B58;&#x533A;&#x57DF;&#x4E00;&#x822C;&#x5305;&#x62EC; heap &#x548C; stack &#xFF0C; stack &#x4E3B;&#x8981;&#x7528;&#x6765;&#x5B58;&#x50A8;&#x5F53;&#x524D;&#x8C03;&#x7528;&#x6808;&#x7528;&#x5230;&#x7684;&#x7B80;&#x5355;&#x7C7B;&#x578B;&#x6570;&#x636E;&#xFF1A; string &#xFF0C; boolean &#xFF0C; int &#xFF0C; float &#x7B49;&#x3002;&#x8FD9;&#x4E9B;&#x7C7B;&#x578B;&#x7684;&#x5185;&#x5B58;&#x5360;&#x7528;&#x5C0F;&#xFF0C;&#x5BB9;&#x6613;&#x56DE;&#x6536;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x5B83;&#x4EEC;&#x7684;&#x503C;&#x548C;&#x6307;&#x9488;&#x5360;&#x7528;&#x7684;&#x7A7A;&#x95F4;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x590D;&#x5236;&#xFF0C; GC &#x4E5F;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x505A;&#x9488;&#x5BF9;&#x6027;&#x7684; &#x4F18;&#x5316;&#x3002;&#x590D;&#x6742;&#x7684;&#x9AD8;&#x7EA7;&#x7C7B;&#x578B;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#x5F80;&#x5F80;&#x76F8;&#x5BF9;&#x8F83;&#x5927;&#xFF0C;&#x5B58;&#x50A8;&#x5728; heap &#x4E2D;&#xFF0C; GC &#x56DE;&#x6536;&#x9891;&#x7387;&#x76F8;&#x5BF9;&#x8F83;&#x4F4E;&#xFF0C;&#x4EE3;&#x4EF7;&#x4E5F;&#x8F83;&#x5927;&#xFF0C;&#x56E0;&#x6B64;&#x4F20; &#x5F15;&#x7528;/&#x6307;&#x9488; &#x53EF;&#x4EE5;&#x907F;&#x514D;&#x8FDB;&#x884C;&#x6210;&#x672C;&#x8F83; &#x9AD8;&#x7684;&#x590D;&#x5236;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x4E14;&#x8282;&#x7701;&#x5185;&#x5B58;&#xFF0C;&#x63D0;&#x9AD8;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x6548;&#x7387;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x4E0B;&#x5217;&#x60C5;&#x51B5;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x4F7F;&#x7528;&#x6307;&#x9488;&#xFF1A; &#x9700;&#x8981;&#x6539;&#x53D8;&#x53C2;&#x6570;&#x7684;&#x503C; &#x907F;&#x514D;&#x590D;&#x5236;&#x64CD;&#x4F5C; &#x8282;&#x7701;&#x5185;&#x5B58; &#x800C;&#x5728; Golang &#x4E2D;&#xFF0C;&#x5177;&#x4F53;&#x5230;&#x9AD8;&#x7EA7;&#x7C7B;&#x578B; struct &#xFF0C; slice &#xFF0C; map &#x4E5F;&#x5404;&#x6709;&#x4E0D;&#x540C;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x53EA;&#x6709; struct &#x7684;&#x4F7F;&#x7528;&#x6709;&#x70B9;&#x590D;&#x6742;&#xFF0C; slice &#xFF0C; map &#xFF0C; chan &#x90FD;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#xFF0C;&#x4E0D;&#x7528;&#x8003;&#x8651;&#x662F;&#x503C;&#x8FD8;&#x662F;&#x6307;&#x9488; &#x3002; struct &#x5BF9;&#x4E8E;&#x51FD;&#x6570;&#xFF08; function &#xFF09;&#xFF0C;&#x7531;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x6307;&#x5B9A;&#xFF0C;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x4E0D;&#x5BF9;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 func passValue (s struct ) {} func passPointer (s * struct ) {} &#x5BF9;&#x4E8E;&#x65B9;&#x6CD5;&#xFF08; method &#xFF09;&#xFF0C;&#x63A5;&#x6536;&#x8005;&#xFF08; receiver &#xFF09;&#x53EF;&#x4EE5;&#x662F;&#x6307;&#x9488;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x503C;&#xFF0C;Golang &#x4F1A;&#x5728;&#x4F20;&#x9012;&#x53C2;&#x6570;&#x524D;&#x81EA;&#x52A8;&#x9002;&#x914D;&#x4EE5;&#x7B26;&#x5408;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#xFF1A;&#x5982;&#x679C;&#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570; &#x662F;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x6309;&#x7167;&#x4F20;&#x503C;&#x7684;&#x65B9;&#x5F0F; &#xFF0C;&#x65B9;&#x6CD5;&#x5185;&#x90E8;&#x5BF9; struct &#x7684;&#x6539;&#x52A8;&#x65E0;&#x6CD5;&#x4F5C;&#x7528;&#x5728;&#x5916;&#x90E8;&#x7684;&#x53D8;&#x91CF;&#x4E0A;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 package main import fmt type MyPoint struct { X int Y int } func printFuncValue (p MyPoint) { p.X = 1 p.Y = 1 fmt.Printf(  - %v , p) } func printFuncPointer (pp *MyPoint) { pp.X = 1 // &#x5B9E;&#x9645;&#x4E0A;&#x5E94;&#x8BE5;&#x5199;&#x505A; (*pp).X&#xFF0C;Golang &#x7ED9;&#x4E86;&#x8BED;&#x6CD5;&#x7CD6;&#xFF0C;&#x51CF;&#x5C11;&#x4E86;&#x9EBB;&#x70E6;&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x5BFC;&#x81F4;&#x4E86; * &#x7684;&#x4E0D;&#x4E00;&#x81F4; pp.Y = 1 fmt.Printf(  - %v , pp) } func (p MyPoint) printMethodValue () { p.X += 1 p.Y += 1 fmt.Printf(  - %v , p) } // &#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x6307;&#x9488;&#x4F5C;&#x4E3A;&#x65B9;&#x6CD5;&#xFF08;method&#xFF1A;printMethodPointer&#xFF09;&#x7684;&#x63A5;&#x6536;&#x8005;&#xFF08;receiver&#xFF1A;*MyPoint&#xFF09;&#xFF0C;&#x4E00;&#x662F;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x63A5;&#x6536;&#x8005;&#x7684;&#x503C;&#xFF0C;&#x4E8C;&#x662F;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x5927;&#x5BF9;&#x8C61;&#x7684;&#x590D;&#x5236; func (pp *MyPoint) printMethodPointer () { pp.X += 1 pp.Y += 1 fmt.Printf(  - %v , pp) } func main () { p := MyPoint{ 0 , 0 } pp := &amp;MyPoint{ 0 , 0 } fmt.Printf( \\n value to func(value): %v , p) printFuncValue(p) fmt.Printf(  -- %v , p) // Output: value to func(value): {0 0} - {1 1} -- {0 0} //printFuncValue(pp) // cannot use pp (type *MyPoint) as type MyPoint in argument to printFuncValue //printFuncPointer(p) // cannot use p (type MyPoint) as type *MyPoint in argument to printFuncPointer fmt.Printf( \\n pointer to func(pointer): %v , pp) printFuncPointer(pp) fmt.Printf(  -- %v , pp) // Output: pointer to func(pointer): &amp;{0 0} - &amp;{1 1} -- &amp;{1 1} fmt.Printf( \\n value to method(value): %v , p) p.printMethodValue() fmt.Printf(  -- %v , p) // Output: value to method(value): {0 0} - {1 1} -- {0 0} fmt.Printf( \\n value to method(pointer): %v , p) p.printMethodPointer() fmt.Printf(  -- %v , p) // Output: value to method(pointer): {0 0} - &amp;{1 1} -- {1 1} fmt.Printf( \\n pointer to method(value): %v , pp) pp.printMethodValue() fmt.Printf(  -- %v , pp) // Output: pointer to method(value): &amp;{1 1} - {2 2} -- &amp;{1 1} fmt.Printf( \\n pointer to method(pointer): %v , pp) pp.printMethodPointer() fmt.Printf(  -- %v , pp) // Output: pointer to method(pointer): &amp;{1 1} - &amp;{2 2} -- &amp;{2 2} } slice slice &#x5B9E;&#x9645;&#x4E0A;&#x76F8;&#x5F53;&#x4E8E;&#x5BF9;&#x5176;&#x4F9D;&#x9644;&#x7684; array &#x7684;&#x5F15;&#x7528;&#xFF0C;&#x5B83;&#x4E0D;&#x5B58;&#x50A8;&#x6570;&#x636E;&#xFF0C;&#x53EA;&#x662F;&#x5BF9; array &#x8FDB;&#x884C;&#x63CF;&#x8FF0;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4FEE;&#x6539; slice &#x4E2D;&#x7684;&#x5143;&#x7D20;&#xFF0C; &#x6539;&#x53D8;&#x4F1A;&#x4F53;&#x73B0;&#x5728; array &#x4E0A;&#xFF0C;&#x5F53;&#x7136;&#x4E5F;&#x4F1A;&#x4F53;&#x73B0;&#x5728;&#x8BE5; array &#x7684;&#x6240;&#x6709; slice &#x4E0A; &#x3002; map &#x4F7F;&#x7528; make(map[string]string) &#x8FD4;&#x56DE;&#x7684;&#x672C;&#x8EAB;&#x662F;&#x4E2A;&#x5F15;&#x7528;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x7528;&#x6765;&#x64CD;&#x4F5C; &#xFF1A; 1 map [ name ]= Jason &#x800C; &#x5982;&#x679C;&#x4F7F;&#x7528; map &#x7684;&#x6307;&#x9488;&#xFF0C;&#x53CD;&#x800C;&#x4F1A;&#x4EA7;&#x751F;&#x9519;&#x8BEF; &#xFF1A; 1 2 * map [ name ]= Jason // invalid indirect of m[title] (type string) (* map )[ name ]= Jason // invalid indirect of m (type map[string]string)"},"basic/pointer.html#哪些值是不可寻址的":{"title":"&#x54EA;&#x4E9B;&#x503C;&#x662F;&#x4E0D;&#x53EF;&#x5BFB;&#x5740;&#x7684;","path":"\\golang-learn\\basic\\pointer.html#哪些值是不可寻址的","body":"&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x503C;&#x4E0D;&#x53EF;&#x5BFB;&#x5740; &#x3002;&#x5E38;&#x91CF;&#x3001;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x5B57;&#x9762;&#x91CF;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x3001;&#x51FD;&#x6570;&#x4EE5;&#x53CA;&#x65B9;&#x6CD5;&#x7684;&#x5B57;&#x9762;&#x91CF;&#x90FD;&#x662F;&#x5982;&#x6B64;&#x3002; &#x5176;&#x5B9E;&#x8FD9;&#x6837;&#x89C4;&#x5B9A;&#x4E5F;&#x6709;&#x5B89;&#x5168;&#x6027;&#x65B9;&#x9762;&#x7684;&#x8003;&#x8651;&#x3002; &#x7EDD;&#x5927;&#x591A;&#x6570;&#x88AB;&#x89C6;&#x4E3A; &#x4E34;&#x65F6;&#x7ED3;&#x679C;&#x7684;&#x503C;&#x90FD;&#x662F;&#x4E0D;&#x53EF;&#x5BFB;&#x5740;&#x7684; &#x3002;&#x7B97;&#x672F;&#x64CD;&#x4F5C;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x5C5E;&#x4E8E;&#x4E34;&#x65F6;&#x7ED3;&#x679C;&#xFF0C;&#x9488;&#x5BF9;&#x503C;&#x5B57;&#x9762;&#x91CF;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x7ED3;&#x679C;&#x503C;&#x4E5F;&#x5C5E;&#x4E8E;&#x4E34;&#x65F6;&#x7ED3;&#x679C;&#x3002; &#x4F46;&#x6709;&#x4E00;&#x4E2A;&#x4F8B;&#x5916;&#xFF0C;&#x5BF9;&#x5207;&#x7247;&#x5B57;&#x9762;&#x91CF;&#x7684;&#x7D22;&#x5F15;&#x7ED3;&#x679C;&#x503C;&#x867D;&#x7136;&#x4E5F;&#x5C5E;&#x4E8E;&#x4E34;&#x65F6;&#x7ED3;&#x679C;&#xFF0C;&#x4F46;&#x5374;&#x662F;&#x53EF;&#x5BFB;&#x5740;&#x7684;&#x3002;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x4E5F;&#x662F;&#x4E34;&#x65F6;&#x7ED3;&#x679C;&#x3002; ++ &#x548C; -- &#x5E76;&#x4E0D;&#x5C5E; &#x4E8E;&#x64CD;&#x4F5C;&#x7B26;&#x3002; &#x4E0D;&#x5B89;&#x5168;&#x7684;&#x503C;&#x4E0D;&#x53EF;&#x5BFB;&#x5740; &#xFF0C;&#x82E5;&#x62FF;&#x5230;&#x67D0;&#x503C;&#x7684;&#x6307;&#x9488;&#x53EF;&#x80FD;&#x4F1A;&#x7834;&#x574F;&#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x3002;&#x7531;&#x4E8E;&#x5B57;&#x5178;&#x7684;&#x5185;&#x90E8;&#x673A;&#x5236;&#xFF0C;&#x5BF9;&#x5B57;&#x5178;&#x7684;&#x7D22; &#x5F15;&#x7ED3;&#x679C;&#x503C;&#x7684;&#x53D6;&#x5740;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x83B7;&#x53D6;&#x7531;&#x5B57;&#x9762;&#x91CF;&#x6216;&#x6807;&#x8BC6;&#x7B26;&#x4EE3;&#x8868;&#x7684;&#x51FD;&#x6570;&#x6216;&#x65B9;&#x6CD5;&#x7684;&#x5730;&#x5740;&#x663E;&#x7136;&#x4E5F;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x3002;"},"basic/operator.html":{"title":"运算符","path":"\\golang-learn\\basic\\operator.html","body":"运算符 优先级 * ， / ， % ，  ，  ， &amp; ， &amp;^ + ， - ， | ， ^ == ， != ，  ， = ，  ， = &amp;&amp; || 上面的运算符得优先级，从上到下，从左到右。也就是 * 的优先级最高， || 的优先级最低。 算术运算符 + 、 - 、 * 和 / 可以适用于整数、浮点数和复数。 在 Go 中， % 取模运算符的符号和被取模数的符号总是一致的，因此 -5 % 3 和 -5 % -3 结果都是 -2 。 % 仅用于整数间的运算。除法运算符 / 的行为则依赖于操作数是否为全为整数，比如 5.0/4.0 的结果是 1.25 ，但是 5/4 的结果是 1 ，因为整数除法会向着 0 方向截断余数。 ++ 自增， -- 自减 关系运算符 == ， != ，  ， = ，  ， = 。 布尔型、数字类型和字符串等基本类型都是可比较的，也就是说两个相同类型的值可以用 == 和 != 进行比较。 逻辑运算符 &amp;&amp; ， || ， ! （逻辑 NOT 运算符）。 位运算符 &amp; ， | ， ^ ，  ，  ， &amp;^ （位清空 AND NOT） &amp;^ ：如果对应 y 中 bit 位为 1 的话, 表达式 z = x &amp;^ y 结果 z 的对应的 bit 位为 0 ，否则 z 对应的 bit 位等于 x 相应的 bit 位的值。如： 1 2 3 var x uint8 = 00100010 var y uint8 = 00000110 fmt.Printf( \"%08b\\n\" , x&amp;^y) // \"00100000\" 赋值运算符 除了 = 外，还有 += （相加后再赋值）， -= （相减后再赋值）， *= （相乘后再赋值）等等，其他的赋值运算符也都是 一个套路。 其他运算符 &amp; （取地址操作）， * （指针变量）。"},"basic/operator.html#运算符":{"title":"&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#运算符","body":""},"basic/operator.html#优先级":{"title":"&#x4F18;&#x5148;&#x7EA7;","path":"\\golang-learn\\basic\\operator.html#优先级","body":"* &#xFF0C; / &#xFF0C; % &#xFF0C;  &#xFF0C;  &#xFF0C; &amp; &#xFF0C; &amp;^ + &#xFF0C; - &#xFF0C; | &#xFF0C; ^ == &#xFF0C; != &#xFF0C;  &#xFF0C; = &#xFF0C;  &#xFF0C; = &amp;&amp; || &#x4E0A;&#x9762;&#x7684;&#x8FD0;&#x7B97;&#x7B26;&#x5F97;&#x4F18;&#x5148;&#x7EA7;&#xFF0C;&#x4ECE;&#x4E0A;&#x5230;&#x4E0B;&#xFF0C;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x3002;&#x4E5F;&#x5C31;&#x662F; * &#x7684;&#x4F18;&#x5148;&#x7EA7;&#x6700;&#x9AD8;&#xFF0C; || &#x7684;&#x4F18;&#x5148;&#x7EA7;&#x6700;&#x4F4E;&#x3002;"},"basic/operator.html#算术运算符":{"title":"&#x7B97;&#x672F;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#算术运算符","body":"+ &#x3001; - &#x3001; * &#x548C; / &#x53EF;&#x4EE5;&#x9002;&#x7528;&#x4E8E;&#x6574;&#x6570;&#x3001;&#x6D6E;&#x70B9;&#x6570;&#x548C;&#x590D;&#x6570;&#x3002; &#x5728; Go &#x4E2D;&#xFF0C; % &#x53D6;&#x6A21;&#x8FD0;&#x7B97;&#x7B26;&#x7684;&#x7B26;&#x53F7;&#x548C;&#x88AB;&#x53D6;&#x6A21;&#x6570;&#x7684;&#x7B26;&#x53F7;&#x603B;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x56E0;&#x6B64; -5 % 3 &#x548C; -5 % -3 &#x7ED3;&#x679C;&#x90FD;&#x662F; -2 &#x3002; % &#x4EC5;&#x7528;&#x4E8E;&#x6574;&#x6570;&#x95F4;&#x7684;&#x8FD0;&#x7B97;&#x3002;&#x9664;&#x6CD5;&#x8FD0;&#x7B97;&#x7B26; / &#x7684;&#x884C;&#x4E3A;&#x5219;&#x4F9D;&#x8D56;&#x4E8E;&#x64CD;&#x4F5C;&#x6570;&#x662F;&#x5426;&#x4E3A;&#x5168;&#x4E3A;&#x6574;&#x6570;&#xFF0C;&#x6BD4;&#x5982; 5.0/4.0 &#x7684;&#x7ED3;&#x679C;&#x662F; 1.25 &#xFF0C;&#x4F46;&#x662F; 5/4 &#x7684;&#x7ED3;&#x679C;&#x662F; 1 &#xFF0C;&#x56E0;&#x4E3A;&#x6574;&#x6570;&#x9664;&#x6CD5;&#x4F1A;&#x5411;&#x7740; 0 &#x65B9;&#x5411;&#x622A;&#x65AD;&#x4F59;&#x6570;&#x3002; ++ &#x81EA;&#x589E;&#xFF0C; -- &#x81EA;&#x51CF;"},"basic/operator.html#关系运算符":{"title":"&#x5173;&#x7CFB;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#关系运算符","body":"== &#xFF0C; != &#xFF0C;  &#xFF0C; = &#xFF0C;  &#xFF0C; = &#x3002; &#x5E03;&#x5C14;&#x578B;&#x3001;&#x6570;&#x5B57;&#x7C7B;&#x578B;&#x548C;&#x5B57;&#x7B26;&#x4E32;&#x7B49;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x90FD;&#x662F;&#x53EF;&#x6BD4;&#x8F83;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x4E24;&#x4E2A;&#x76F8;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x7528; == &#x548C; != &#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#x3002;"},"basic/operator.html#逻辑运算符":{"title":"&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#逻辑运算符","body":"&amp;&amp; &#xFF0C; || &#xFF0C; ! &#xFF08;&#x903B;&#x8F91; NOT &#x8FD0;&#x7B97;&#x7B26;&#xFF09;&#x3002;"},"basic/operator.html#位运算符":{"title":"&#x4F4D;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#位运算符","body":"&amp; &#xFF0C; | &#xFF0C; ^ &#xFF0C;  &#xFF0C;  &#xFF0C; &amp;^ &#xFF08;&#x4F4D;&#x6E05;&#x7A7A; AND NOT&#xFF09; &amp;^ &#xFF1A;&#x5982;&#x679C;&#x5BF9;&#x5E94; y &#x4E2D; bit &#x4F4D;&#x4E3A; 1 &#x7684;&#x8BDD;, &#x8868;&#x8FBE;&#x5F0F; z = x &amp;^ y &#x7ED3;&#x679C; z &#x7684;&#x5BF9;&#x5E94;&#x7684; bit &#x4F4D;&#x4E3A; 0 &#xFF0C;&#x5426;&#x5219; z &#x5BF9;&#x5E94;&#x7684; bit &#x4F4D;&#x7B49;&#x4E8E; x &#x76F8;&#x5E94;&#x7684; bit &#x4F4D;&#x7684;&#x503C;&#x3002;&#x5982;&#xFF1A; 1 2 3 var x uint8 = 00100010 var y uint8 = 00000110 fmt.Printf( %08b\\n , x&amp;^y) // 00100000"},"basic/operator.html#赋值运算符":{"title":"&#x8D4B;&#x503C;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#赋值运算符","body":"&#x9664;&#x4E86; = &#x5916;&#xFF0C;&#x8FD8;&#x6709; += &#xFF08;&#x76F8;&#x52A0;&#x540E;&#x518D;&#x8D4B;&#x503C;&#xFF09;&#xFF0C; -= &#xFF08;&#x76F8;&#x51CF;&#x540E;&#x518D;&#x8D4B;&#x503C;&#xFF09;&#xFF0C; *= &#xFF08;&#x76F8;&#x4E58;&#x540E;&#x518D;&#x8D4B;&#x503C;&#xFF09;&#x7B49;&#x7B49;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x8D4B;&#x503C;&#x8FD0;&#x7B97;&#x7B26;&#x4E5F;&#x90FD;&#x662F; &#x4E00;&#x4E2A;&#x5957;&#x8DEF;&#x3002;"},"basic/operator.html#其他运算符":{"title":"&#x5176;&#x4ED6;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#其他运算符","body":"&amp; &#xFF08;&#x53D6;&#x5730;&#x5740;&#x64CD;&#x4F5C;&#xFF09;&#xFF0C; * &#xFF08;&#x6307;&#x9488;&#x53D8;&#x91CF;&#xFF09;&#x3002;"},"basic/slice.html":{"title":"slice","path":"\\golang-learn\\basic\\slice.html","body":"slice slice 的语法和数组很像，由于数组长度是固定的，所以使用 slice 相比数组会更灵活， slice 是动态的， 长度可以增加也可以减少。还有一点与数组不同，切片不需要说明长度。 切片（slice） 是对底层数组一个连续片段的引用，所以切片是一个引用类型 。 定义切片，和定义数组的区别就是不需要指定 SIZE ： 1 var 变量名 []类型 一个 slice 由三个部分构成：指针、长度和容量。长度不能超过容量。 一个切片在未初始化之前默认为 nil ，长度为 0 。 初始化切片： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // 直接初始化切片，[] 表示是切片类型，1,2,3 初始化值依次是 1,2,3.其 cap=len=3 s :=[] int  1 , 2 , 3  // 初始化切片 s,是数组 arr 的引用 s := arr[:] // 将 arr 中从下标 startIndex 到 endIndex-1 下的元素创建为一个新的切片 s := arr[startIndex:endIndex] // 缺省 endIndex 时将表示一直到 arr 的最后一个元素 s := arr[startIndex:] // 缺省 startIndex 时将表示从 arr 的第一个元素开始 s := arr[:endIndex] // 使用 make 函数来创建切片 // len 是数组的长度并且也是切片的初始长度 // capacity 为可选参数, 指定容量 s := make ([] int , len , capacity) len() 和 cap() len 获取切片长度。 cap 计算切片的最大容量 append() 和 copy() append 向切片追加新元素 copy 拷贝切片 append 的使用 使用 append 函数时要注意， append 总是从 slice 的尾部开始追加数据。比如下面的代码： 1 2 3 4 5 6 7 urls := make ([] string , 3 ) append (urls, \"hello\" ) len (urls) // 4 urls2 := make ([] string , 0 ) append (urls, \"hello\" ) len (urls) // 1 切片操作 截取切片 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* 创建切片 */ numbers := [] int  0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8  /* 打印子切片从索引 1 (包含) 到索引 4(不包含)*/ fmt.Println( \"numbers[1:4] ==\" , numbers[ 1 : 4 ]) // numbers[1:4] == [1 2 3] /* 默认下限为 0*/ fmt.Println( \"numbers[:3] ==\" , numbers[: 3 ]) // numbers[:3] == [0 1 2] /* 默认上限为 len(s)*/ fmt.Println( \"numbers[4:] ==\" , numbers[ 4 :]) // numbers[4:] == [4 5 6 7 8] numbers1 := make ([] int , 0 , 5 ) /* 打印子切片从索引 0 (包含) 到索引 2 (不包含) */ number2 := numbers[: 2 ] fmt.Printf( \"len=%d cap=%d slice=%v\\n\" , len (number2), cap (number2),number2) // len=2 cap=9 slice=[0 1] /* 打印子切片从索引 2 (包含) 到索引 5 (不包含) */ number3 := numbers[ 2 : 5 ] fmt.Printf( \"len=%d cap=%d slice=%v\\n\" , len (number3), cap (number3),number3) // len=3 cap=7 slice=[2 3 4] 切片初始化要注意的事情 初始化切片可以使用两种方式： 比如 s := []string{} ，这种方式初始化的切片长度为 0，不能直接使用下标赋值（ s[0] = hello ），会报错 index out of range 。 使用 make 初始化切片，要注意使用 append 函数时，是从末尾开始添加数据，注意 slice 的 len 参数。 怎样估算切片容量的增长 一旦 一个切片无法容纳更多的元素，Go 语言就会想办法扩容。但它并不会改变原来的切片，而是会生成一个容量更大的切片， 然后将把原有的元素和新元素一并拷贝到新切片中 。一般的情况下，你 可以简单地认为新切片的容量（以下简称新容量）将会是 原切片容量（以下简称原容量）的 2 倍 。 但是，当原切片的长度（以下简称原长度）大于或等于 1024 时，Go 语言将会以原容量的 1.25 倍作为新容量的基准（以下新容量基准）。 新容量基准会被调整（不断地与 1.25 相乘），直到结果不小于原长度与要追加的元素数量之和（以下简称新长度）。最终，新容量 往往会、比新长度大一些，当然，相等也是可能的。 一个切片的底层数组永远不会被替换。为什么？虽然在扩容的时候 Go 语言一定会生成新的底层数组，但是它也同时生成了新的切片。它是把新 的切片作为了新底层数组的窗口，而没有对原切片及其底层数组做任何改动。 在无需扩容时， append 函数返回的是指向“原底层数组”的新切片，而在需要扩容时， append 函数返回的是指向“新底层数组”的新切片 。 长度和容量 Slice 有两个比较混淆的概念，就是长度和容量。这个长度跟数组的长度是一个概念，即在内存中进行了初始化实际存在的元素的个数。何谓容量？ 如果通过 make 函数创建 Slice 的时候指定了容量参数，那内存管理器会根据指定的容量的值先划分一块内存空间，然后才在其中存放有数组元素， 多余部分处于空闲状态，在 Slice 上追加元素的时候，首先会放到这块空闲的内存中，如果添加的参数个数超过了容量值，内存管理器会重新划 分一块容量值为原容量值 *2 大小的内存空间，依次类推。这个机制的好处在能够提升运算性能，因为内存的重新划分会降低性能。"},"basic/slice.html#slice":{"title":"slice","path":"\\golang-learn\\basic\\slice.html#slice","body":"slice &#x7684;&#x8BED;&#x6CD5;&#x548C;&#x6570;&#x7EC4;&#x5F88;&#x50CF;&#xFF0C;&#x7531;&#x4E8E;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4F7F;&#x7528; slice &#x76F8;&#x6BD4;&#x6570;&#x7EC4;&#x4F1A;&#x66F4;&#x7075;&#x6D3B;&#xFF0C; slice &#x662F;&#x52A8;&#x6001;&#x7684;&#xFF0C; &#x957F;&#x5EA6;&#x53EF;&#x4EE5;&#x589E;&#x52A0;&#x4E5F;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x3002;&#x8FD8;&#x6709;&#x4E00;&#x70B9;&#x4E0E;&#x6570;&#x7EC4;&#x4E0D;&#x540C;&#xFF0C;&#x5207;&#x7247;&#x4E0D;&#x9700;&#x8981;&#x8BF4;&#x660E;&#x957F;&#x5EA6;&#x3002; &#x5207;&#x7247;&#xFF08;slice&#xFF09; &#x662F;&#x5BF9;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x4E00;&#x4E2A;&#x8FDE;&#x7EED;&#x7247;&#x6BB5;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x5207;&#x7247;&#x662F;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x7C7B;&#x578B; &#x3002; &#x5B9A;&#x4E49;&#x5207;&#x7247;&#xFF0C;&#x548C;&#x5B9A;&#x4E49;&#x6570;&#x7EC4;&#x7684;&#x533A;&#x522B;&#x5C31;&#x662F;&#x4E0D;&#x9700;&#x8981;&#x6307;&#x5B9A; SIZE &#xFF1A; 1 var &#x53D8;&#x91CF;&#x540D; []&#x7C7B;&#x578B; &#x4E00;&#x4E2A; slice &#x7531;&#x4E09;&#x4E2A;&#x90E8;&#x5206;&#x6784;&#x6210;&#xFF1A;&#x6307;&#x9488;&#x3001;&#x957F;&#x5EA6;&#x548C;&#x5BB9;&#x91CF;&#x3002;&#x957F;&#x5EA6;&#x4E0D;&#x80FD;&#x8D85;&#x8FC7;&#x5BB9;&#x91CF;&#x3002; &#x4E00;&#x4E2A;&#x5207;&#x7247;&#x5728;&#x672A;&#x521D;&#x59CB;&#x5316;&#x4E4B;&#x524D;&#x9ED8;&#x8BA4;&#x4E3A; nil &#xFF0C;&#x957F;&#x5EA6;&#x4E3A; 0 &#x3002; &#x521D;&#x59CB;&#x5316;&#x5207;&#x7247;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // &#x76F4;&#x63A5;&#x521D;&#x59CB;&#x5316;&#x5207;&#x7247;&#xFF0C;[] &#x8868;&#x793A;&#x662F;&#x5207;&#x7247;&#x7C7B;&#x578B;&#xFF0C;{1,2,3} &#x521D;&#x59CB;&#x5316;&#x503C;&#x4F9D;&#x6B21;&#x662F; 1,2,3.&#x5176; cap=len=3 s :=[] int { 1 , 2 , 3 } // &#x521D;&#x59CB;&#x5316;&#x5207;&#x7247; s,&#x662F;&#x6570;&#x7EC4; arr &#x7684;&#x5F15;&#x7528; s := arr[:] // &#x5C06; arr &#x4E2D;&#x4ECE;&#x4E0B;&#x6807; startIndex &#x5230; endIndex-1 &#x4E0B;&#x7684;&#x5143;&#x7D20;&#x521B;&#x5EFA;&#x4E3A;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5207;&#x7247; s := arr[startIndex:endIndex] // &#x7F3A;&#x7701; endIndex &#x65F6;&#x5C06;&#x8868;&#x793A;&#x4E00;&#x76F4;&#x5230; arr &#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20; s := arr[startIndex:] // &#x7F3A;&#x7701; startIndex &#x65F6;&#x5C06;&#x8868;&#x793A;&#x4ECE; arr &#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x5F00;&#x59CB; s := arr[:endIndex] // &#x4F7F;&#x7528; make &#x51FD;&#x6570;&#x6765;&#x521B;&#x5EFA;&#x5207;&#x7247; // len &#x662F;&#x6570;&#x7EC4;&#x7684;&#x957F;&#x5EA6;&#x5E76;&#x4E14;&#x4E5F;&#x662F;&#x5207;&#x7247;&#x7684;&#x521D;&#x59CB;&#x957F;&#x5EA6; // capacity &#x4E3A;&#x53EF;&#x9009;&#x53C2;&#x6570;, &#x6307;&#x5B9A;&#x5BB9;&#x91CF; s := make ([] int , len , capacity)"},"basic/slice.html#len-和-cap":{"title":"len() &#x548C; cap()","path":"\\golang-learn\\basic\\slice.html#len-和-cap","body":"len &#x83B7;&#x53D6;&#x5207;&#x7247;&#x957F;&#x5EA6;&#x3002; cap &#x8BA1;&#x7B97;&#x5207;&#x7247;&#x7684;&#x6700;&#x5927;&#x5BB9;&#x91CF;"},"basic/slice.html#append-和-copy":{"title":"append() &#x548C; copy()","path":"\\golang-learn\\basic\\slice.html#append-和-copy","body":"append &#x5411;&#x5207;&#x7247;&#x8FFD;&#x52A0;&#x65B0;&#x5143;&#x7D20; copy &#x62F7;&#x8D1D;&#x5207;&#x7247; append &#x7684;&#x4F7F;&#x7528; &#x4F7F;&#x7528; append &#x51FD;&#x6570;&#x65F6;&#x8981;&#x6CE8;&#x610F;&#xFF0C; append &#x603B;&#x662F;&#x4ECE; slice &#x7684;&#x5C3E;&#x90E8;&#x5F00;&#x59CB;&#x8FFD;&#x52A0;&#x6570;&#x636E;&#x3002;&#x6BD4;&#x5982;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF1A; 1 2 3 4 5 6 7 urls := make ([] string , 3 ) append (urls, hello ) len (urls) // 4 urls2 := make ([] string , 0 ) append (urls, hello ) len (urls) // 1"},"basic/slice.html#切片操作":{"title":"&#x5207;&#x7247;&#x64CD;&#x4F5C;","path":"\\golang-learn\\basic\\slice.html#切片操作","body":"&#x622A;&#x53D6;&#x5207;&#x7247; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* &#x521B;&#x5EFA;&#x5207;&#x7247; */ numbers := [] int { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 } /* &#x6253;&#x5370;&#x5B50;&#x5207;&#x7247;&#x4ECE;&#x7D22;&#x5F15; 1 (&#x5305;&#x542B;) &#x5230;&#x7D22;&#x5F15; 4(&#x4E0D;&#x5305;&#x542B;)*/ fmt.Println( numbers[1:4] == , numbers[ 1 : 4 ]) // numbers[1:4] == [1 2 3] /* &#x9ED8;&#x8BA4;&#x4E0B;&#x9650;&#x4E3A; 0*/ fmt.Println( numbers[:3] == , numbers[: 3 ]) // numbers[:3] == [0 1 2] /* &#x9ED8;&#x8BA4;&#x4E0A;&#x9650;&#x4E3A; len(s)*/ fmt.Println( numbers[4:] == , numbers[ 4 :]) // numbers[4:] == [4 5 6 7 8] numbers1 := make ([] int , 0 , 5 ) /* &#x6253;&#x5370;&#x5B50;&#x5207;&#x7247;&#x4ECE;&#x7D22;&#x5F15; 0 (&#x5305;&#x542B;) &#x5230;&#x7D22;&#x5F15; 2 (&#x4E0D;&#x5305;&#x542B;) */ number2 := numbers[: 2 ] fmt.Printf( len=%d cap=%d slice=%v\\n , len (number2), cap (number2),number2) // len=2 cap=9 slice=[0 1] /* &#x6253;&#x5370;&#x5B50;&#x5207;&#x7247;&#x4ECE;&#x7D22;&#x5F15; 2 (&#x5305;&#x542B;) &#x5230;&#x7D22;&#x5F15; 5 (&#x4E0D;&#x5305;&#x542B;) */ number3 := numbers[ 2 : 5 ] fmt.Printf( len=%d cap=%d slice=%v\\n , len (number3), cap (number3),number3) // len=3 cap=7 slice=[2 3 4] &#x5207;&#x7247;&#x521D;&#x59CB;&#x5316;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x4E8B;&#x60C5; &#x521D;&#x59CB;&#x5316;&#x5207;&#x7247;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A; &#x6BD4;&#x5982; s := []string{} &#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x521D;&#x59CB;&#x5316;&#x7684;&#x5207;&#x7247;&#x957F;&#x5EA6;&#x4E3A; 0&#xFF0C;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x4E0B;&#x6807;&#x8D4B;&#x503C;&#xFF08; s[0] = hello &#xFF09;&#xFF0C;&#x4F1A;&#x62A5;&#x9519; index out of range &#x3002; &#x4F7F;&#x7528; make &#x521D;&#x59CB;&#x5316;&#x5207;&#x7247;&#xFF0C;&#x8981;&#x6CE8;&#x610F;&#x4F7F;&#x7528; append &#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x662F;&#x4ECE;&#x672B;&#x5C3E;&#x5F00;&#x59CB;&#x6DFB;&#x52A0;&#x6570;&#x636E;&#xFF0C;&#x6CE8;&#x610F; slice &#x7684; len &#x53C2;&#x6570;&#x3002;"},"basic/slice.html#怎样估算切片容量的增长":{"title":"&#x600E;&#x6837;&#x4F30;&#x7B97;&#x5207;&#x7247;&#x5BB9;&#x91CF;&#x7684;&#x589E;&#x957F;","path":"\\golang-learn\\basic\\slice.html#怎样估算切片容量的增长","body":"&#x4E00;&#x65E6; &#x4E00;&#x4E2A;&#x5207;&#x7247;&#x65E0;&#x6CD5;&#x5BB9;&#x7EB3;&#x66F4;&#x591A;&#x7684;&#x5143;&#x7D20;&#xFF0C;Go &#x8BED;&#x8A00;&#x5C31;&#x4F1A;&#x60F3;&#x529E;&#x6CD5;&#x6269;&#x5BB9;&#x3002;&#x4F46;&#x5B83;&#x5E76;&#x4E0D;&#x4F1A;&#x6539;&#x53D8;&#x539F;&#x6765;&#x7684;&#x5207;&#x7247;&#xFF0C;&#x800C;&#x662F;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5BB9;&#x91CF;&#x66F4;&#x5927;&#x7684;&#x5207;&#x7247;&#xFF0C; &#x7136;&#x540E;&#x5C06;&#x628A;&#x539F;&#x6709;&#x7684;&#x5143;&#x7D20;&#x548C;&#x65B0;&#x5143;&#x7D20;&#x4E00;&#x5E76;&#x62F7;&#x8D1D;&#x5230;&#x65B0;&#x5207;&#x7247;&#x4E2D; &#x3002;&#x4E00;&#x822C;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F60; &#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x5730;&#x8BA4;&#x4E3A;&#x65B0;&#x5207;&#x7247;&#x7684;&#x5BB9;&#x91CF;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x65B0;&#x5BB9;&#x91CF;&#xFF09;&#x5C06;&#x4F1A;&#x662F; &#x539F;&#x5207;&#x7247;&#x5BB9;&#x91CF;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x539F;&#x5BB9;&#x91CF;&#xFF09;&#x7684; 2 &#x500D; &#x3002; &#x4F46;&#x662F;&#xFF0C;&#x5F53;&#x539F;&#x5207;&#x7247;&#x7684;&#x957F;&#x5EA6;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x539F;&#x957F;&#x5EA6;&#xFF09;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E; 1024 &#x65F6;&#xFF0C;Go &#x8BED;&#x8A00;&#x5C06;&#x4F1A;&#x4EE5;&#x539F;&#x5BB9;&#x91CF;&#x7684; 1.25 &#x500D;&#x4F5C;&#x4E3A;&#x65B0;&#x5BB9;&#x91CF;&#x7684;&#x57FA;&#x51C6;&#xFF08;&#x4EE5;&#x4E0B;&#x65B0;&#x5BB9;&#x91CF;&#x57FA;&#x51C6;&#xFF09;&#x3002; &#x65B0;&#x5BB9;&#x91CF;&#x57FA;&#x51C6;&#x4F1A;&#x88AB;&#x8C03;&#x6574;&#xFF08;&#x4E0D;&#x65AD;&#x5730;&#x4E0E; 1.25 &#x76F8;&#x4E58;&#xFF09;&#xFF0C;&#x76F4;&#x5230;&#x7ED3;&#x679C;&#x4E0D;&#x5C0F;&#x4E8E;&#x539F;&#x957F;&#x5EA6;&#x4E0E;&#x8981;&#x8FFD;&#x52A0;&#x7684;&#x5143;&#x7D20;&#x6570;&#x91CF;&#x4E4B;&#x548C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x65B0;&#x957F;&#x5EA6;&#xFF09;&#x3002;&#x6700;&#x7EC8;&#xFF0C;&#x65B0;&#x5BB9;&#x91CF; &#x5F80;&#x5F80;&#x4F1A;&#x3001;&#x6BD4;&#x65B0;&#x957F;&#x5EA6;&#x5927;&#x4E00;&#x4E9B;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x76F8;&#x7B49;&#x4E5F;&#x662F;&#x53EF;&#x80FD;&#x7684;&#x3002; &#x4E00;&#x4E2A;&#x5207;&#x7247;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x6C38;&#x8FDC;&#x4E0D;&#x4F1A;&#x88AB;&#x66FF;&#x6362;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#xFF1F;&#x867D;&#x7136;&#x5728;&#x6269;&#x5BB9;&#x7684;&#x65F6;&#x5019; Go &#x8BED;&#x8A00;&#x4E00;&#x5B9A;&#x4F1A;&#x751F;&#x6210;&#x65B0;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4E5F;&#x540C;&#x65F6;&#x751F;&#x6210;&#x4E86;&#x65B0;&#x7684;&#x5207;&#x7247;&#x3002;&#x5B83;&#x662F;&#x628A;&#x65B0; &#x7684;&#x5207;&#x7247;&#x4F5C;&#x4E3A;&#x4E86;&#x65B0;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x7684;&#x7A97;&#x53E3;&#xFF0C;&#x800C;&#x6CA1;&#x6709;&#x5BF9;&#x539F;&#x5207;&#x7247;&#x53CA;&#x5176;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x505A;&#x4EFB;&#x4F55;&#x6539;&#x52A8;&#x3002; &#x5728;&#x65E0;&#x9700;&#x6269;&#x5BB9;&#x65F6;&#xFF0C; append &#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x6307;&#x5411;&#x201C;&#x539F;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x201D;&#x7684;&#x65B0;&#x5207;&#x7247;&#xFF0C;&#x800C;&#x5728;&#x9700;&#x8981;&#x6269;&#x5BB9;&#x65F6;&#xFF0C; append &#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x6307;&#x5411;&#x201C;&#x65B0;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x201D;&#x7684;&#x65B0;&#x5207;&#x7247; &#x3002;"},"basic/slice.html#长度和容量":{"title":"&#x957F;&#x5EA6;&#x548C;&#x5BB9;&#x91CF;","path":"\\golang-learn\\basic\\slice.html#长度和容量","body":"Slice &#x6709;&#x4E24;&#x4E2A;&#x6BD4;&#x8F83;&#x6DF7;&#x6DC6;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5C31;&#x662F;&#x957F;&#x5EA6;&#x548C;&#x5BB9;&#x91CF;&#x3002;&#x8FD9;&#x4E2A;&#x957F;&#x5EA6;&#x8DDF;&#x6570;&#x7EC4;&#x7684;&#x957F;&#x5EA6;&#x662F;&#x4E00;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x5373;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x8FDB;&#x884C;&#x4E86;&#x521D;&#x59CB;&#x5316;&#x5B9E;&#x9645;&#x5B58;&#x5728;&#x7684;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#x3002;&#x4F55;&#x8C13;&#x5BB9;&#x91CF;&#xFF1F; &#x5982;&#x679C;&#x901A;&#x8FC7; make &#x51FD;&#x6570;&#x521B;&#x5EFA; Slice &#x7684;&#x65F6;&#x5019;&#x6307;&#x5B9A;&#x4E86;&#x5BB9;&#x91CF;&#x53C2;&#x6570;&#xFF0C;&#x90A3;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x5668;&#x4F1A;&#x6839;&#x636E;&#x6307;&#x5B9A;&#x7684;&#x5BB9;&#x91CF;&#x7684;&#x503C;&#x5148;&#x5212;&#x5206;&#x4E00;&#x5757;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x7136;&#x540E;&#x624D;&#x5728;&#x5176;&#x4E2D;&#x5B58;&#x653E;&#x6709;&#x6570;&#x7EC4;&#x5143;&#x7D20;&#xFF0C; &#x591A;&#x4F59;&#x90E8;&#x5206;&#x5904;&#x4E8E;&#x7A7A;&#x95F2;&#x72B6;&#x6001;&#xFF0C;&#x5728; Slice &#x4E0A;&#x8FFD;&#x52A0;&#x5143;&#x7D20;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9996;&#x5148;&#x4F1A;&#x653E;&#x5230;&#x8FD9;&#x5757;&#x7A7A;&#x95F2;&#x7684;&#x5185;&#x5B58;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x6DFB;&#x52A0;&#x7684;&#x53C2;&#x6570;&#x4E2A;&#x6570;&#x8D85;&#x8FC7;&#x4E86;&#x5BB9;&#x91CF;&#x503C;&#xFF0C;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x5668;&#x4F1A;&#x91CD;&#x65B0;&#x5212; &#x5206;&#x4E00;&#x5757;&#x5BB9;&#x91CF;&#x503C;&#x4E3A;&#x539F;&#x5BB9;&#x91CF;&#x503C; *2 &#x5927;&#x5C0F;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x4F9D;&#x6B21;&#x7C7B;&#x63A8;&#x3002;&#x8FD9;&#x4E2A;&#x673A;&#x5236;&#x7684;&#x597D;&#x5904;&#x5728;&#x80FD;&#x591F;&#x63D0;&#x5347;&#x8FD0;&#x7B97;&#x6027;&#x80FD;&#xFF0C;&#x56E0;&#x4E3A;&#x5185;&#x5B58;&#x7684;&#x91CD;&#x65B0;&#x5212;&#x5206;&#x4F1A;&#x964D;&#x4F4E;&#x6027;&#x80FD;&#x3002;"},"basic/struct.html":{"title":"结构体","path":"\\golang-learn\\basic\\struct.html","body":"结构体 结构体是由一系列具有相同类型或不同类型的数据构成的数据集合。 结构体定义需要使用 type 和 struct 语句, struct 语句定义一个新的数据类型, type 语句定义了结构体的名称： 1 2 3 4 5 6 7 8 9 10 11 // 定义了结构体类型 type struct_variable_type struct  member definition; member definition; ... member definition;  variable_name := structure_variable_typevalue1, value2...valuen // 或 variable_name := structure_variable_type key1: value1, key2: value2..., keyn: valuen 用点号 . 操作符访问结构体成员, 实例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 type Books struct  \ttitle string \tauthor string \tsubject string \tbook_id int  func main ()  \t var Book1 Books /* 声明 Book1 为 Books 类型 */ \t /* book 1 描述 */ \tBook1.title = \"Go 语言\" \tBook1.author = \"www.runoob.com\" \tBook1.subject = \"Go 语言教程\" \tBook1.book_id = 6495407 \t\t /* 打印 Book1 信息 */ \tfmt.Printf( \"Book 1 title : %s\\n\" , Book1.title) \tfmt.Printf( \"Book 1 author : %s\\n\" , Book1.author) \tfmt.Printf( \"Book 1 subject : %s\\n\" , Book1.subject) \tfmt.Printf( \"Book 1 book_id : %d\\n\" , Book1.book_id)  . 点操作符也可以和指向结构体的指针一起工作: 1 2 var employeeOfTheMonth *Employee = &amp;dilbert employeeOfTheMonth.Position += \" (proactive team player)\" 一个结构体可能同时包含导出和未导出的成员, 如果结构体成员名字是以大写字母开头的，那么该成员就是导出的。 未导出的成员, 不允许在外部包修改。 通常一行对应一个结构体成员，成员的名字在前类型在后，不过如果相邻的成员类型如果相同的话可以被合并到一行: 1 2 3 4 5 type Employee struct  \tID int \tName, Address string \tSalary int  一个命名为 S 的结构体类型将不能再包含 S 类型的成员：因为一个聚合的值不能包含它自身。（该限制同样适应于数组。） 但是S类型的结构体可以包含 *S 指针类型的成员，这可以让我们创建递归的数据结构，比如链表和树结构等： 1 2 3 4 type tree struct  \tvalue int \tleft, right *tree  结构体字面值 结构体字面值可以指定每个成员的值: 1 2 3 type Point struct  X, Y int  p := Point 1 , 2  结构体比较 两个结构体将可以使用 == 或 != 运算符进行比较。 1 2 3 4 5 6 type Point struct  X, Y int  p := Point 1 , 2  q := Point 2 , 1  fmt.Println(p.X == q.X &amp;&amp; p.Y == q.Y) // \"false\" fmt.Println(p == q) // \"false\" 结构体嵌入 匿名成员 Go 语言提供的不同寻常的结构体嵌入机制让一个命名的结构体包含另一个结构体类型的匿名成员， 这样就可以通过简单的点运算符 x.f 来访问匿名成员链中嵌套的 x.d.e.f 成员。 1 2 3 4 5 6 7 8 9 10 11 12 13 type Point struct  X, Y int  type Circle struct  Center Point Radius int  type Wheel struct  Circle Circle Spokes int  上面的代码，会使访问每个成员变得繁琐： 1 2 3 4 5 var w Wheel w.Circle.Center.X = 8 w.Circle.Center.Y = 8 w.Circle.Radius = 5 w.Spokes = 20 Go 语言有一个特性可以 只声明一个成员对应的数据类型而定义成员的名字；这类成员就叫匿名成员 。Go 语言规范规定， 如果一个字段的声明中只有字段的类型名而没有字段的名称，那么它就是一个嵌入字段，也可以被称为匿名字段。 匿名成员的数据类型必须是命名的类型或指向一个命名的类型的指针。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type Point struct  X, Y int  type Circle struct  Point Radius int  type Wheel struct  Circle Spokes int  var w Wheel w.X = 8 // equivalent to w.Circle.Point.X = 8 w.Y = 8 // equivalent to w.Circle.Point.Y = 8 w.Radius = 5 // equivalent to w.Circle.Radius = 5 w.Spokes = 20 上面的代码中， Circle 和 Wheel 各自都有一个匿名成员。我们可以说 Point 类型被嵌入到了 Circle 结构体， 同时 Circle 类型被嵌入到了 Wheel 结构体。但是 结构体字面值并没有简短表示匿名成员的语法 ，所以下面的代码， 会编译失败： 1 2 3 4 5 6 7 8 9 10 11 12 13 w = Wheel 8 , 8 , 5 , 20  // compile error: unknown fields w = WheelX: 8 , Y: 8 , Radius: 5 , Spokes: 20  // compile error: unknown fields // 正确的语法 w = WheelCirclePoint 8 , 8 , 5 , 20  w = Wheel Circle: Circle Point: PointX: 8 , Y: 8 , Radius: 5 , , Spokes: 20 , // NOTE: trailing comma necessary here (and at Radius)  不能同时包含两个类型相同的匿名成员，这会导致名字冲突 。 嵌入接口类型 Go 语言的结构体还可以嵌入接口类型。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 type Interface interface  Len() int Less(i, j int ) bool Swap(i, j int )  // Array 实现Interface接口 type Array [] int func (arr Array) Len () int  return len (arr)  func (arr Array) Less (i, j int ) bool  return arr[i]  arr[j]  func (arr Array) Swap (i, j int )  arr[i], arr[j] = arr[j], arr[i]  // 匿名接口(anonymous interface) type reverse struct  Interface  // 重写(override) func (r reverse) Less (i, j int ) bool  return r.Interface.Less(j, i)  // 构造reverse Interface func Reverse (data Interface) Interface  return &amp;reversedata  func main ()  arr := Array 1 , 2 , 3  rarr := Reverse(arr) fmt.Println(arr.Less( 0 , 1 )) fmt.Println(rarr.Less( 0 , 1 ))  reverse 结构体内嵌了一个名为 Interface 的 interface ，并且实现 Less 函数，但是 却没有实现 Len , Swap 函数。 为什么这么设计？ 通过这种方法可以让 reverse 实现 Interface 这个接口类型，并且仅实现某个指定的方法，而不需要实现这个接口下的所有方法 。 对比一下传统的组合匿名结构体实现重写的写法： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 type Interface interface  Len() int Less(i, j int ) bool Swap(i, j int )  type Array [] int func (arr Array) Len () int  return len (arr)  func (arr Array) Less (i, j int ) bool  return arr[i]  arr[j]  func (arr Array) Swap (i, j int )  arr[i], arr[j] = arr[j], arr[i]  // 匿名struct type reverse struct  Array  // 重写 func (r reverse) Less (i, j int ) bool  return r.Array.Less(j, i)  // 构造reverse Interface func Reverse (data Array) Interface  return &amp;reversedata  func main ()  arr := Array 1 , 2 , 3  rarr := Reverse(arr) fmt.Println(arr.Less( 0 , 1 )) fmt.Println(rarr.Less( 0 , 1 ))  匿名接口的优点， 匿名接口的方式不依赖具体实现，可以对任意实现了该接口的类型进行重写 。 如果被嵌入类型和嵌入类型有同名的方法，那么调用哪一个的方法 只要名称相同，无论这两个方法的签名是否一致，被嵌入类型的方法都会“屏蔽”掉嵌入字段的同名方法 。 类似的，由于我们同样可以像访问被嵌入类型的字段那样，直接访问嵌入字段的字段，所以 如果这两个结构体类型里存在同名的字段， 那么嵌入字段中的那个字段一定会被“屏蔽” 。 正因为嵌入字段的字段和方法都可以“嫁接”到被嵌入类型上，所以即使在两个同名的成员一个是字段，另一个是方法的情况下，这种“屏蔽”现象依然会存在。 不过，即使被屏蔽了，我们仍然可以通过链式的选择表达式，选择到嵌入字段的字段或方法 。 嵌入字段本身也有嵌入字段的情况，这种情况下，“屏蔽”现象会以嵌入的层级为依据，嵌入层级越深的字段或方法越可能被“屏蔽”。"},"basic/struct.html#结构体":{"title":"&#x7ED3;&#x6784;&#x4F53;","path":"\\golang-learn\\basic\\struct.html#结构体","body":"&#x7ED3;&#x6784;&#x4F53;&#x662F;&#x7531;&#x4E00;&#x7CFB;&#x5217;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7C7B;&#x578B;&#x6216;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#x6784;&#x6210;&#x7684;&#x6570;&#x636E;&#x96C6;&#x5408;&#x3002; &#x7ED3;&#x6784;&#x4F53;&#x5B9A;&#x4E49;&#x9700;&#x8981;&#x4F7F;&#x7528; type &#x548C; struct &#x8BED;&#x53E5;, struct &#x8BED;&#x53E5;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;, type &#x8BED;&#x53E5;&#x5B9A;&#x4E49;&#x4E86;&#x7ED3;&#x6784;&#x4F53;&#x7684;&#x540D;&#x79F0;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 // &#x5B9A;&#x4E49;&#x4E86;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B; type struct_variable_type struct { member definition; member definition; ... member definition; } variable_name := structure_variable_type{value1, value2...valuen} // &#x6216; variable_name := structure_variable_type{ key1: value1, key2: value2..., keyn: valuen} &#x7528;&#x70B9;&#x53F7; . &#x64CD;&#x4F5C;&#x7B26;&#x8BBF;&#x95EE;&#x7ED3;&#x6784;&#x4F53;&#x6210;&#x5458;, &#x5B9E;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 type Books struct { \ttitle string \tauthor string \tsubject string \tbook_id int } func main () { \t var Book1 Books /* &#x58F0;&#x660E; Book1 &#x4E3A; Books &#x7C7B;&#x578B; */ \t /* book 1 &#x63CF;&#x8FF0; */ \tBook1.title = Go &#x8BED;&#x8A00; \tBook1.author = www.runoob.com \tBook1.subject = Go &#x8BED;&#x8A00;&#x6559;&#x7A0B; \tBook1.book_id = 6495407 \t\t /* &#x6253;&#x5370; Book1 &#x4FE1;&#x606F; */ \tfmt.Printf( Book 1 title : %s\\n , Book1.title) \tfmt.Printf( Book 1 author : %s\\n , Book1.author) \tfmt.Printf( Book 1 subject : %s\\n , Book1.subject) \tfmt.Printf( Book 1 book_id : %d\\n , Book1.book_id) } . &#x70B9;&#x64CD;&#x4F5C;&#x7B26;&#x4E5F;&#x53EF;&#x4EE5;&#x548C;&#x6307;&#x5411;&#x7ED3;&#x6784;&#x4F53;&#x7684;&#x6307;&#x9488;&#x4E00;&#x8D77;&#x5DE5;&#x4F5C;: 1 2 var employeeOfTheMonth *Employee = &amp;dilbert employeeOfTheMonth.Position +=  (proactive team player) &#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x53EF;&#x80FD;&#x540C;&#x65F6;&#x5305;&#x542B;&#x5BFC;&#x51FA;&#x548C;&#x672A;&#x5BFC;&#x51FA;&#x7684;&#x6210;&#x5458;, &#x5982;&#x679C;&#x7ED3;&#x6784;&#x4F53;&#x6210;&#x5458;&#x540D;&#x5B57;&#x662F;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x6210;&#x5458;&#x5C31;&#x662F;&#x5BFC;&#x51FA;&#x7684;&#x3002; &#x672A;&#x5BFC;&#x51FA;&#x7684;&#x6210;&#x5458;, &#x4E0D;&#x5141;&#x8BB8;&#x5728;&#x5916;&#x90E8;&#x5305;&#x4FEE;&#x6539;&#x3002; &#x901A;&#x5E38;&#x4E00;&#x884C;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x6210;&#x5458;&#xFF0C;&#x6210;&#x5458;&#x7684;&#x540D;&#x5B57;&#x5728;&#x524D;&#x7C7B;&#x578B;&#x5728;&#x540E;&#xFF0C;&#x4E0D;&#x8FC7;&#x5982;&#x679C;&#x76F8;&#x90BB;&#x7684;&#x6210;&#x5458;&#x7C7B;&#x578B;&#x5982;&#x679C;&#x76F8;&#x540C;&#x7684;&#x8BDD;&#x53EF;&#x4EE5;&#x88AB;&#x5408;&#x5E76;&#x5230;&#x4E00;&#x884C;: 1 2 3 4 5 type Employee struct { \tID int \tName, Address string \tSalary int } &#x4E00;&#x4E2A;&#x547D;&#x540D;&#x4E3A; S &#x7684;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x5C06;&#x4E0D;&#x80FD;&#x518D;&#x5305;&#x542B; S &#x7C7B;&#x578B;&#x7684;&#x6210;&#x5458;&#xFF1A;&#x56E0;&#x4E3A;&#x4E00;&#x4E2A;&#x805A;&#x5408;&#x7684;&#x503C;&#x4E0D;&#x80FD;&#x5305;&#x542B;&#x5B83;&#x81EA;&#x8EAB;&#x3002;&#xFF08;&#x8BE5;&#x9650;&#x5236;&#x540C;&#x6837;&#x9002;&#x5E94;&#x4E8E;&#x6570;&#x7EC4;&#x3002;&#xFF09; &#x4F46;&#x662F;S&#x7C7B;&#x578B;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x53EF;&#x4EE5;&#x5305;&#x542B; *S &#x6307;&#x9488;&#x7C7B;&#x578B;&#x7684;&#x6210;&#x5458;&#xFF0C;&#x8FD9;&#x53EF;&#x4EE5;&#x8BA9;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x9012;&#x5F52;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6BD4;&#x5982;&#x94FE;&#x8868;&#x548C;&#x6811;&#x7ED3;&#x6784;&#x7B49;&#xFF1A; 1 2 3 4 type tree struct { \tvalue int \tleft, right *tree }"},"basic/struct.html#结构体字面值":{"title":"&#x7ED3;&#x6784;&#x4F53;&#x5B57;&#x9762;&#x503C;","path":"\\golang-learn\\basic\\struct.html#结构体字面值","body":"&#x7ED3;&#x6784;&#x4F53;&#x5B57;&#x9762;&#x503C;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x6BCF;&#x4E2A;&#x6210;&#x5458;&#x7684;&#x503C;: 1 2 3 type Point struct { X, Y int } p := Point{ 1 , 2 }"},"basic/struct.html#结构体比较":{"title":"&#x7ED3;&#x6784;&#x4F53;&#x6BD4;&#x8F83;","path":"\\golang-learn\\basic\\struct.html#结构体比较","body":"&#x4E24;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x5C06;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; == &#x6216; != &#x8FD0;&#x7B97;&#x7B26;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#x3002; 1 2 3 4 5 6 type Point struct { X, Y int } p := Point{ 1 , 2 } q := Point{ 2 , 1 } fmt.Println(p.X == q.X &amp;&amp; p.Y == q.Y) // false fmt.Println(p == q) // false"},"basic/struct.html#结构体嵌入-匿名成员":{"title":"&#x7ED3;&#x6784;&#x4F53;&#x5D4C;&#x5165; &#x533F;&#x540D;&#x6210;&#x5458;","path":"\\golang-learn\\basic\\struct.html#结构体嵌入-匿名成员","body":"Go &#x8BED;&#x8A00;&#x63D0;&#x4F9B;&#x7684;&#x4E0D;&#x540C;&#x5BFB;&#x5E38;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x5D4C;&#x5165;&#x673A;&#x5236;&#x8BA9;&#x4E00;&#x4E2A;&#x547D;&#x540D;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x5305;&#x542B;&#x53E6;&#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x7684;&#x533F;&#x540D;&#x6210;&#x5458;&#xFF0C; &#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7B80;&#x5355;&#x7684;&#x70B9;&#x8FD0;&#x7B97;&#x7B26; x.f &#x6765;&#x8BBF;&#x95EE;&#x533F;&#x540D;&#x6210;&#x5458;&#x94FE;&#x4E2D;&#x5D4C;&#x5957;&#x7684; x.d.e.f &#x6210;&#x5458;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 type Point struct { X, Y int } type Circle struct { Center Point Radius int } type Wheel struct { Circle Circle Spokes int } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4F1A;&#x4F7F;&#x8BBF;&#x95EE;&#x6BCF;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x5F97;&#x7E41;&#x7410;&#xFF1A; 1 2 3 4 5 var w Wheel w.Circle.Center.X = 8 w.Circle.Center.Y = 8 w.Circle.Radius = 5 w.Spokes = 20 Go &#x8BED;&#x8A00;&#x6709;&#x4E00;&#x4E2A;&#x7279;&#x6027;&#x53EF;&#x4EE5; &#x53EA;&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x6210;&#x5458;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x800C;&#x5B9A;&#x4E49;&#x6210;&#x5458;&#x7684;&#x540D;&#x5B57;&#xFF1B;&#x8FD9;&#x7C7B;&#x6210;&#x5458;&#x5C31;&#x53EB;&#x533F;&#x540D;&#x6210;&#x5458; &#x3002;Go &#x8BED;&#x8A00;&#x89C4;&#x8303;&#x89C4;&#x5B9A;&#xFF0C; &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#x58F0;&#x660E;&#x4E2D;&#x53EA;&#x6709;&#x5B57;&#x6BB5;&#x7684;&#x7C7B;&#x578B;&#x540D;&#x800C;&#x6CA1;&#x6709;&#x5B57;&#x6BB5;&#x7684;&#x540D;&#x79F0;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x79F0;&#x4E3A;&#x533F;&#x540D;&#x5B57;&#x6BB5;&#x3002; &#x533F;&#x540D;&#x6210;&#x5458;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x662F;&#x547D;&#x540D;&#x7684;&#x7C7B;&#x578B;&#x6216;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x547D;&#x540D;&#x7684;&#x7C7B;&#x578B;&#x7684;&#x6307;&#x9488;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type Point struct { X, Y int } type Circle struct { Point Radius int } type Wheel struct { Circle Spokes int } var w Wheel w.X = 8 // equivalent to w.Circle.Point.X = 8 w.Y = 8 // equivalent to w.Circle.Point.Y = 8 w.Radius = 5 // equivalent to w.Circle.Radius = 5 w.Spokes = 20 &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C; Circle &#x548C; Wheel &#x5404;&#x81EA;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x6210;&#x5458;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BF4; Point &#x7C7B;&#x578B;&#x88AB;&#x5D4C;&#x5165;&#x5230;&#x4E86; Circle &#x7ED3;&#x6784;&#x4F53;&#xFF0C; &#x540C;&#x65F6; Circle &#x7C7B;&#x578B;&#x88AB;&#x5D4C;&#x5165;&#x5230;&#x4E86; Wheel &#x7ED3;&#x6784;&#x4F53;&#x3002;&#x4F46;&#x662F; &#x7ED3;&#x6784;&#x4F53;&#x5B57;&#x9762;&#x503C;&#x5E76;&#x6CA1;&#x6709;&#x7B80;&#x77ED;&#x8868;&#x793A;&#x533F;&#x540D;&#x6210;&#x5458;&#x7684;&#x8BED;&#x6CD5; &#xFF0C;&#x6240;&#x4EE5;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C; &#x4F1A;&#x7F16;&#x8BD1;&#x5931;&#x8D25;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 w = Wheel{ 8 , 8 , 5 , 20 } // compile error: unknown fields w = Wheel{X: 8 , Y: 8 , Radius: 5 , Spokes: 20 } // compile error: unknown fields // &#x6B63;&#x786E;&#x7684;&#x8BED;&#x6CD5; w = Wheel{Circle{Point{ 8 , 8 }, 5 }, 20 } w = Wheel{ Circle: Circle{ Point: Point{X: 8 , Y: 8 }, Radius: 5 , }, Spokes: 20 , // NOTE: trailing comma necessary here (and at Radius) } &#x4E0D;&#x80FD;&#x540C;&#x65F6;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x7C7B;&#x578B;&#x76F8;&#x540C;&#x7684;&#x533F;&#x540D;&#x6210;&#x5458;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x540D;&#x5B57;&#x51B2;&#x7A81; &#x3002; &#x5D4C;&#x5165;&#x63A5;&#x53E3;&#x7C7B;&#x578B; Go &#x8BED;&#x8A00;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x8FD8;&#x53EF;&#x4EE5;&#x5D4C;&#x5165;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 type Interface interface { Len() int Less(i, j int ) bool Swap(i, j int ) } // Array &#x5B9E;&#x73B0;Interface&#x63A5;&#x53E3; type Array [] int func (arr Array) Len () int { return len (arr) } func (arr Array) Less (i, j int ) bool { return arr[i]  arr[j] } func (arr Array) Swap (i, j int ) { arr[i], arr[j] = arr[j], arr[i] } // &#x533F;&#x540D;&#x63A5;&#x53E3;(anonymous interface) type reverse struct { Interface } // &#x91CD;&#x5199;(override) func (r reverse) Less (i, j int ) bool { return r.Interface.Less(j, i) } // &#x6784;&#x9020;reverse Interface func Reverse (data Interface) Interface { return &amp;reverse{data} } func main () { arr := Array{ 1 , 2 , 3 } rarr := Reverse(arr) fmt.Println(arr.Less( 0 , 1 )) fmt.Println(rarr.Less( 0 , 1 )) } reverse &#x7ED3;&#x6784;&#x4F53;&#x5185;&#x5D4C;&#x4E86;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; Interface &#x7684; interface &#xFF0C;&#x5E76;&#x4E14;&#x5B9E;&#x73B0; Less &#x51FD;&#x6570;&#xFF0C;&#x4F46;&#x662F; &#x5374;&#x6CA1;&#x6709;&#x5B9E;&#x73B0; Len , Swap &#x51FD;&#x6570;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x8FD9;&#x4E48;&#x8BBE;&#x8BA1;&#xFF1F; &#x901A;&#x8FC7;&#x8FD9;&#x79CD;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x8BA9; reverse &#x5B9E;&#x73B0; Interface &#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#xFF0C;&#x5E76;&#x4E14;&#x4EC5;&#x5B9E;&#x73B0;&#x67D0;&#x4E2A;&#x6307;&#x5B9A;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x4E0B;&#x7684;&#x6240;&#x6709;&#x65B9;&#x6CD5; &#x3002; &#x5BF9;&#x6BD4;&#x4E00;&#x4E0B;&#x4F20;&#x7EDF;&#x7684;&#x7EC4;&#x5408;&#x533F;&#x540D;&#x7ED3;&#x6784;&#x4F53;&#x5B9E;&#x73B0;&#x91CD;&#x5199;&#x7684;&#x5199;&#x6CD5;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 type Interface interface { Len() int Less(i, j int ) bool Swap(i, j int ) } type Array [] int func (arr Array) Len () int { return len (arr) } func (arr Array) Less (i, j int ) bool { return arr[i]  arr[j] } func (arr Array) Swap (i, j int ) { arr[i], arr[j] = arr[j], arr[i] } // &#x533F;&#x540D;struct type reverse struct { Array } // &#x91CD;&#x5199; func (r reverse) Less (i, j int ) bool { return r.Array.Less(j, i) } // &#x6784;&#x9020;reverse Interface func Reverse (data Array) Interface { return &amp;reverse{data} } func main () { arr := Array{ 1 , 2 , 3 } rarr := Reverse(arr) fmt.Println(arr.Less( 0 , 1 )) fmt.Println(rarr.Less( 0 , 1 )) } &#x533F;&#x540D;&#x63A5;&#x53E3;&#x7684;&#x4F18;&#x70B9;&#xFF0C; &#x533F;&#x540D;&#x63A5;&#x53E3;&#x7684;&#x65B9;&#x5F0F;&#x4E0D;&#x4F9D;&#x8D56;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#xFF0C;&#x53EF;&#x4EE5;&#x5BF9;&#x4EFB;&#x610F;&#x5B9E;&#x73B0;&#x4E86;&#x8BE5;&#x63A5;&#x53E3;&#x7684;&#x7C7B;&#x578B;&#x8FDB;&#x884C;&#x91CD;&#x5199; &#x3002; &#x5982;&#x679C;&#x88AB;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x548C;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x6709;&#x540C;&#x540D;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x8C03;&#x7528;&#x54EA;&#x4E00;&#x4E2A;&#x7684;&#x65B9;&#x6CD5; &#x53EA;&#x8981;&#x540D;&#x79F0;&#x76F8;&#x540C;&#xFF0C;&#x65E0;&#x8BBA;&#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x7B7E;&#x540D;&#x662F;&#x5426;&#x4E00;&#x81F4;&#xFF0C;&#x88AB;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x90FD;&#x4F1A;&#x201C;&#x5C4F;&#x853D;&#x201D;&#x6389;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x540C;&#x540D;&#x65B9;&#x6CD5; &#x3002; &#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x540C;&#x6837;&#x53EF;&#x4EE5;&#x50CF;&#x8BBF;&#x95EE;&#x88AB;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x90A3;&#x6837;&#xFF0C;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x6240;&#x4EE5; &#x5982;&#x679C;&#x8FD9;&#x4E24;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x91CC;&#x5B58;&#x5728;&#x540C;&#x540D;&#x7684;&#x5B57;&#x6BB5;&#xFF0C; &#x90A3;&#x4E48;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x4E2D;&#x7684;&#x90A3;&#x4E2A;&#x5B57;&#x6BB5;&#x4E00;&#x5B9A;&#x4F1A;&#x88AB;&#x201C;&#x5C4F;&#x853D;&#x201D; &#x3002; &#x6B63;&#x56E0;&#x4E3A;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x5B57;&#x6BB5;&#x548C;&#x65B9;&#x6CD5;&#x90FD;&#x53EF;&#x4EE5;&#x201C;&#x5AC1;&#x63A5;&#x201D;&#x5230;&#x88AB;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x4E0A;&#xFF0C;&#x6240;&#x4EE5;&#x5373;&#x4F7F;&#x5728;&#x4E24;&#x4E2A;&#x540C;&#x540D;&#x7684;&#x6210;&#x5458;&#x4E00;&#x4E2A;&#x662F;&#x5B57;&#x6BB5;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x662F;&#x65B9;&#x6CD5;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x79CD;&#x201C;&#x5C4F;&#x853D;&#x201D;&#x73B0;&#x8C61;&#x4F9D;&#x7136;&#x4F1A;&#x5B58;&#x5728;&#x3002; &#x4E0D;&#x8FC7;&#xFF0C;&#x5373;&#x4F7F;&#x88AB;&#x5C4F;&#x853D;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x94FE;&#x5F0F;&#x7684;&#x9009;&#x62E9;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x9009;&#x62E9;&#x5230;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x5B57;&#x6BB5;&#x6216;&#x65B9;&#x6CD5; &#x3002; &#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x672C;&#x8EAB;&#x4E5F;&#x6709;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x201C;&#x5C4F;&#x853D;&#x201D;&#x73B0;&#x8C61;&#x4F1A;&#x4EE5;&#x5D4C;&#x5165;&#x7684;&#x5C42;&#x7EA7;&#x4E3A;&#x4F9D;&#x636E;&#xFF0C;&#x5D4C;&#x5165;&#x5C42;&#x7EA7;&#x8D8A;&#x6DF1;&#x7684;&#x5B57;&#x6BB5;&#x6216;&#x65B9;&#x6CD5;&#x8D8A;&#x53EF;&#x80FD;&#x88AB;&#x201C;&#x5C4F;&#x853D;&#x201D;&#x3002;"},"basic/package.html":{"title":"包","path":"\\golang-learn\\basic\\package.html","body":"包 Go 语言的包与其他语言的 modules 或者 libraries 类似。Go 语言有超过 100个 的标准包，可以使用 go list std | wc -l 查看包的数量。 更多 Go 语言开源包，可以在 这里 搜索。 Go 语言编译速度很快，主要依赖下面三点： 导入的包必须在文件的头部显式声明，这样的话编译器就没有必要读取和分析整个源文件来判断包的依赖关系。 禁止包的循环依赖，每个包可以被独立编译，而且很可能是被并发编译。 编译后包的目标文件不仅仅记录包本身的导出信息，同时还记录了包的依赖关系。 因此，在 编译一个包的时候，编译器只需读取每个导入包的目标文件，而不需要遍历所有依赖的的文件 。 import 在 package 声明下面，我们需要导入一系列需要使用的包。比如 import fmt 。注意如果导入了不需要的包，或者缺少了必要的包， 编译会失败。 1 2 3 4 5 6 7 8 // 导入一个包 import \"fmt\" // 导入多个 import ( \"fmt\" \"os\" ) main main 是一个特殊的包， main 包代表一个独立运行的程序，而不是一个 modules 或者 libraries 。 main 包里 必须有 main 函数，这个是程序的入口函数，并且 mian 函数没有参数。比如： 1 2 3 func main ()  \tfmt.Println( \"Hello, 世界\" )  hello world 1 2 3 4 5 6 7 package main import \"fmt\" func main ()  \tfmt.Println(x)  函数声明使用 func 关键字。Go 不需要在语句或者声明的末尾添加分号。除非一行代码上有多条语句。 点操作 1 2 3 import ( . \"fmt\" ) 这个点操作的含义就是这个包导入之后在你调用这个包的函数时，你可以省略前缀的包名，也就是前面你调用的 fmt.Println(hello world) 可以省略的写成 Println(hello world) 。 导入包重命名 如果导入两个相同名字的包，如 math/rand 包和 crypto/rand 包，可以为一个包重命名来解决名字冲突： 1 2 3 4 import ( \"crypto/rand\" mrand \"math/rand\" // alternative name mrand avoids conflict ) 注意，重命名的包名只在当前源文件有效。 有些情况下也可以使用包重命名： 包名很长。重命名一个简短的包名。 与变量名冲突。 选择用简短名称重命名导入包时候最好统一，以避免包名混乱。 匿名导入 比如 import _ image/png ， _ 是空白标识符，不能被访问。 匿名导入有什么用？我们知道如果导入一个包而不使用会导致编译错误 unused import 。当我们想要导入包， 仅仅只是想计算导入包的包级变量的初始化表达式和执行导入包的 init 初始化函数，就可以使用匿名导入。 声明所属的代码包与其所在目录的名称不同时 源码文件所在的目录相对于 src 目录的相对路径就是它的代码包导入路径，而实际使用其程序实体时给定的限定符要与它 声明所属的代码包名称对应。为了不让该代码包的使用者产生困惑，我们总是应该让声明的包名与其父目录的名称一致。 包声明 包声明语句（包名）必须在每个源文件的开头。被其它包导入时默认的标识符。每个包都对应一个独立的名字空间， 如： image 包和 unicode/utf16 包中都包含了 Decode 。要在外部引用该函数，必须显式使用 image.Decode 或 utf16.Decode 形式访问。 包内以大写字母开头定义的名字（包括变量，类型，函数等等），会被导出，可以在包的外部访问。 默认包名一般采用导入路径名的最后一段，比如 GOPTAH/src/packages/test 的 test 就是包名。三种情况例外： main 包， go build 命令编译完之后生成一个可执行程序。 以 _test 为后缀包名的测试外部扩展包都由 go test 命令独立编译。(以 _ 或 . 开头的源文件会被构建工具忽略) 如 gopkg.in/yaml.v2 。包的名字包含版本号后缀 .v2 ，这种情况下包名是 yaml 。 包命名 包命名尽量有描述性且无歧义，简短，避免冲突。 初始化包 包的初始化首先是解决包级变量的依赖顺序，然后按照包级变量声明出现的顺序依次初始化： 1 2 3 4 5 var a = b + c // a 第三个初始化, 为 3 var b = f() // b 第二个初始化, 为 2, 通过调用 f (依赖c) var c = 1 // c 第一个初始化, 为 1 func f () int  return c + 1  如果包中含有多个源文件，构建工具首先会将 .go 文件根据文件名排序，然后依次调用编译器编译。 每个包在解决依赖的前提下，以导入声明的顺序初始化，每个包只会被初始化一次。因此，如果一个 p 包导入了 q 包， 那么在 p 包初始化的时候可以认为 q 包必然已经初始化过了。初始化工作是自下而上进行的， main 包最后被初始化。以这种方式， 可以确保在 main 函数执行之前，所有依赖的包都已经完成初始化工作了。 使用 init 函数 使用 init 函数来简化初始化工作， init 函数和普通函数类似，但是不能被调用或引用。 程序开始执行时按照它们声明的顺序自动调用。 init 函数不能有任何的参数和返回值，虽然一个 package 里面可以写任意多个 init 函数，但这无论是对于可读性还是以后的可维护性来说， 我们都强烈建议用户在一个 package 中每个文件只写一个 init 函数。 程序的初始化和执行都起始于 main 包。如果 main 包还导入了其它的包，那么就会在编译时将它们依次导入。有时一个包会被多个包同时导入， 那么它只会被导入一次（例如很多包可能都会用到 fmt 包，但它只会被导入一次，因为没有必要导入多次）。当一个包被导入时，如果该包还导入了 其它的包，那么会先将其它包导入进来，然后再对这些包中的包级常量和变量进行初始化，接着执行 init 函数（如果有的话），依次类推。等所有 被导入的包都加载完毕了，就会开始对 main 包中的包级常量和变量进行初始化，然后执行 main 包中的 init 函数（如果存在的话），最后 执行 main 函数。"},"basic/package.html#包":{"title":"&#x5305;","path":"\\golang-learn\\basic\\package.html#包","body":"Go &#x8BED;&#x8A00;&#x7684;&#x5305;&#x4E0E;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x7684; modules &#x6216;&#x8005; libraries &#x7C7B;&#x4F3C;&#x3002;Go &#x8BED;&#x8A00;&#x6709;&#x8D85;&#x8FC7; 100&#x4E2A; &#x7684;&#x6807;&#x51C6;&#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; go list std | wc -l &#x67E5;&#x770B;&#x5305;&#x7684;&#x6570;&#x91CF;&#x3002; &#x66F4;&#x591A; Go &#x8BED;&#x8A00;&#x5F00;&#x6E90;&#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x5728; &#x8FD9;&#x91CC; &#x641C;&#x7D22;&#x3002; Go &#x8BED;&#x8A00;&#x7F16;&#x8BD1;&#x901F;&#x5EA6;&#x5F88;&#x5FEB;&#xFF0C;&#x4E3B;&#x8981;&#x4F9D;&#x8D56;&#x4E0B;&#x9762;&#x4E09;&#x70B9;&#xFF1A; &#x5BFC;&#x5165;&#x7684;&#x5305;&#x5FC5;&#x987B;&#x5728;&#x6587;&#x4EF6;&#x7684;&#x5934;&#x90E8;&#x663E;&#x5F0F;&#x58F0;&#x660E;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x8BDD;&#x7F16;&#x8BD1;&#x5668;&#x5C31;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x8BFB;&#x53D6;&#x548C;&#x5206;&#x6790;&#x6574;&#x4E2A;&#x6E90;&#x6587;&#x4EF6;&#x6765;&#x5224;&#x65AD;&#x5305;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002; &#x7981;&#x6B62;&#x5305;&#x7684;&#x5FAA;&#x73AF;&#x4F9D;&#x8D56;&#xFF0C;&#x6BCF;&#x4E2A;&#x5305;&#x53EF;&#x4EE5;&#x88AB;&#x72EC;&#x7ACB;&#x7F16;&#x8BD1;&#xFF0C;&#x800C;&#x4E14;&#x5F88;&#x53EF;&#x80FD;&#x662F;&#x88AB;&#x5E76;&#x53D1;&#x7F16;&#x8BD1;&#x3002; &#x7F16;&#x8BD1;&#x540E;&#x5305;&#x7684;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x4E0D;&#x4EC5;&#x4EC5;&#x8BB0;&#x5F55;&#x5305;&#x672C;&#x8EAB;&#x7684;&#x5BFC;&#x51FA;&#x4FE1;&#x606F;&#xFF0C;&#x540C;&#x65F6;&#x8FD8;&#x8BB0;&#x5F55;&#x4E86;&#x5305;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5728; &#x7F16;&#x8BD1;&#x4E00;&#x4E2A;&#x5305;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x53EA;&#x9700;&#x8BFB;&#x53D6;&#x6BCF;&#x4E2A;&#x5BFC;&#x5165;&#x5305;&#x7684;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x904D;&#x5386;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x7684;&#x7684;&#x6587;&#x4EF6; &#x3002;"},"basic/package.html#import":{"title":"import","path":"\\golang-learn\\basic\\package.html#import","body":"&#x5728; package &#x58F0;&#x660E;&#x4E0B;&#x9762;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5BFC;&#x5165;&#x4E00;&#x7CFB;&#x5217;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x5305;&#x3002;&#x6BD4;&#x5982; import fmt &#x3002;&#x6CE8;&#x610F;&#x5982;&#x679C;&#x5BFC;&#x5165;&#x4E86;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x5305;&#xFF0C;&#x6216;&#x8005;&#x7F3A;&#x5C11;&#x4E86;&#x5FC5;&#x8981;&#x7684;&#x5305;&#xFF0C; &#x7F16;&#x8BD1;&#x4F1A;&#x5931;&#x8D25;&#x3002; 1 2 3 4 5 6 7 8 // &#x5BFC;&#x5165;&#x4E00;&#x4E2A;&#x5305; import fmt // &#x5BFC;&#x5165;&#x591A;&#x4E2A; import ( fmt os )"},"basic/package.html#main":{"title":"main","path":"\\golang-learn\\basic\\package.html#main","body":"main &#x662F;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x5305;&#xFF0C; main &#x5305;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x8FD0;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A; modules &#x6216;&#x8005; libraries &#x3002; main &#x5305;&#x91CC; &#x5FC5;&#x987B;&#x6709; main &#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x7A0B;&#x5E8F;&#x7684;&#x5165;&#x53E3;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E14; mian &#x51FD;&#x6570;&#x6CA1;&#x6709;&#x53C2;&#x6570;&#x3002;&#x6BD4;&#x5982;&#xFF1A; 1 2 3 func main () { \tfmt.Println( Hello, &#x4E16;&#x754C; ) } hello world 1 2 3 4 5 6 7 package main import fmt func main () { \tfmt.Println(x) } &#x51FD;&#x6570;&#x58F0;&#x660E;&#x4F7F;&#x7528; func &#x5173;&#x952E;&#x5B57;&#x3002;Go &#x4E0D;&#x9700;&#x8981;&#x5728;&#x8BED;&#x53E5;&#x6216;&#x8005;&#x58F0;&#x660E;&#x7684;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;&#x5206;&#x53F7;&#x3002;&#x9664;&#x975E;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x4E0A;&#x6709;&#x591A;&#x6761;&#x8BED;&#x53E5;&#x3002;"},"basic/package.html#点操作":{"title":"&#x70B9;&#x64CD;&#x4F5C;","path":"\\golang-learn\\basic\\package.html#点操作","body":"1 2 3 import ( . fmt ) &#x8FD9;&#x4E2A;&#x70B9;&#x64CD;&#x4F5C;&#x7684;&#x542B;&#x4E49;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x5305;&#x5BFC;&#x5165;&#x4E4B;&#x540E;&#x5728;&#x4F60;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x5305;&#x7684;&#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x7701;&#x7565;&#x524D;&#x7F00;&#x7684;&#x5305;&#x540D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x524D;&#x9762;&#x4F60;&#x8C03;&#x7528;&#x7684; fmt.Println(hello world) &#x53EF;&#x4EE5;&#x7701;&#x7565;&#x7684;&#x5199;&#x6210; Println(hello world) &#x3002; &#x5BFC;&#x5165;&#x5305;&#x91CD;&#x547D;&#x540D; &#x5982;&#x679C;&#x5BFC;&#x5165;&#x4E24;&#x4E2A;&#x76F8;&#x540C;&#x540D;&#x5B57;&#x7684;&#x5305;&#xFF0C;&#x5982; math/rand &#x5305;&#x548C; crypto/rand &#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x4E3A;&#x4E00;&#x4E2A;&#x5305;&#x91CD;&#x547D;&#x540D;&#x6765;&#x89E3;&#x51B3;&#x540D;&#x5B57;&#x51B2;&#x7A81;&#xFF1A; 1 2 3 4 import ( crypto/rand mrand math/rand // alternative name mrand avoids conflict ) &#x6CE8;&#x610F;&#xFF0C;&#x91CD;&#x547D;&#x540D;&#x7684;&#x5305;&#x540D;&#x53EA;&#x5728;&#x5F53;&#x524D;&#x6E90;&#x6587;&#x4EF6;&#x6709;&#x6548;&#x3002; &#x6709;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5305;&#x91CD;&#x547D;&#x540D;&#xFF1A; &#x5305;&#x540D;&#x5F88;&#x957F;&#x3002;&#x91CD;&#x547D;&#x540D;&#x4E00;&#x4E2A;&#x7B80;&#x77ED;&#x7684;&#x5305;&#x540D;&#x3002; &#x4E0E;&#x53D8;&#x91CF;&#x540D;&#x51B2;&#x7A81;&#x3002; &#x9009;&#x62E9;&#x7528;&#x7B80;&#x77ED;&#x540D;&#x79F0;&#x91CD;&#x547D;&#x540D;&#x5BFC;&#x5165;&#x5305;&#x65F6;&#x5019;&#x6700;&#x597D;&#x7EDF;&#x4E00;&#xFF0C;&#x4EE5;&#x907F;&#x514D;&#x5305;&#x540D;&#x6DF7;&#x4E71;&#x3002; &#x533F;&#x540D;&#x5BFC;&#x5165; &#x6BD4;&#x5982; import _ image/png &#xFF0C; _ &#x662F;&#x7A7A;&#x767D;&#x6807;&#x8BC6;&#x7B26;&#xFF0C;&#x4E0D;&#x80FD;&#x88AB;&#x8BBF;&#x95EE;&#x3002; &#x533F;&#x540D;&#x5BFC;&#x5165;&#x6709;&#x4EC0;&#x4E48;&#x7528;&#xFF1F;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x5982;&#x679C;&#x5BFC;&#x5165;&#x4E00;&#x4E2A;&#x5305;&#x800C;&#x4E0D;&#x4F7F;&#x7528;&#x4F1A;&#x5BFC;&#x81F4;&#x7F16;&#x8BD1;&#x9519;&#x8BEF; unused import &#x3002;&#x5F53;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x5BFC;&#x5165;&#x5305;&#xFF0C; &#x4EC5;&#x4EC5;&#x53EA;&#x662F;&#x60F3;&#x8BA1;&#x7B97;&#x5BFC;&#x5165;&#x5305;&#x7684;&#x5305;&#x7EA7;&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x5316;&#x8868;&#x8FBE;&#x5F0F;&#x548C;&#x6267;&#x884C;&#x5BFC;&#x5165;&#x5305;&#x7684; init &#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x533F;&#x540D;&#x5BFC;&#x5165;&#x3002; &#x58F0;&#x660E;&#x6240;&#x5C5E;&#x7684;&#x4EE3;&#x7801;&#x5305;&#x4E0E;&#x5176;&#x6240;&#x5728;&#x76EE;&#x5F55;&#x7684;&#x540D;&#x79F0;&#x4E0D;&#x540C;&#x65F6; &#x6E90;&#x7801;&#x6587;&#x4EF6;&#x6240;&#x5728;&#x7684;&#x76EE;&#x5F55;&#x76F8;&#x5BF9;&#x4E8E; src &#x76EE;&#x5F55;&#x7684;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x5C31;&#x662F;&#x5B83;&#x7684;&#x4EE3;&#x7801;&#x5305;&#x5BFC;&#x5165;&#x8DEF;&#x5F84;&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x5176;&#x7A0B;&#x5E8F;&#x5B9E;&#x4F53;&#x65F6;&#x7ED9;&#x5B9A;&#x7684;&#x9650;&#x5B9A;&#x7B26;&#x8981;&#x4E0E;&#x5B83; &#x58F0;&#x660E;&#x6240;&#x5C5E;&#x7684;&#x4EE3;&#x7801;&#x5305;&#x540D;&#x79F0;&#x5BF9;&#x5E94;&#x3002;&#x4E3A;&#x4E86;&#x4E0D;&#x8BA9;&#x8BE5;&#x4EE3;&#x7801;&#x5305;&#x7684;&#x4F7F;&#x7528;&#x8005;&#x4EA7;&#x751F;&#x56F0;&#x60D1;&#xFF0C;&#x6211;&#x4EEC;&#x603B;&#x662F;&#x5E94;&#x8BE5;&#x8BA9;&#x58F0;&#x660E;&#x7684;&#x5305;&#x540D;&#x4E0E;&#x5176;&#x7236;&#x76EE;&#x5F55;&#x7684;&#x540D;&#x79F0;&#x4E00;&#x81F4;&#x3002;"},"basic/package.html#包声明":{"title":"&#x5305;&#x58F0;&#x660E;","path":"\\golang-learn\\basic\\package.html#包声明","body":"&#x5305;&#x58F0;&#x660E;&#x8BED;&#x53E5;&#xFF08;&#x5305;&#x540D;&#xFF09;&#x5FC5;&#x987B;&#x5728;&#x6BCF;&#x4E2A;&#x6E90;&#x6587;&#x4EF6;&#x7684;&#x5F00;&#x5934;&#x3002;&#x88AB;&#x5176;&#x5B83;&#x5305;&#x5BFC;&#x5165;&#x65F6;&#x9ED8;&#x8BA4;&#x7684;&#x6807;&#x8BC6;&#x7B26;&#x3002;&#x6BCF;&#x4E2A;&#x5305;&#x90FD;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x540D;&#x5B57;&#x7A7A;&#x95F4;&#xFF0C; &#x5982;&#xFF1A; image &#x5305;&#x548C; unicode/utf16 &#x5305;&#x4E2D;&#x90FD;&#x5305;&#x542B;&#x4E86; Decode &#x3002;&#x8981;&#x5728;&#x5916;&#x90E8;&#x5F15;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x5FC5;&#x987B;&#x663E;&#x5F0F;&#x4F7F;&#x7528; image.Decode &#x6216; utf16.Decode &#x5F62;&#x5F0F;&#x8BBF;&#x95EE;&#x3002; &#x5305;&#x5185;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#x5B9A;&#x4E49;&#x7684;&#x540D;&#x5B57;&#xFF08;&#x5305;&#x62EC;&#x53D8;&#x91CF;&#xFF0C;&#x7C7B;&#x578B;&#xFF0C;&#x51FD;&#x6570;&#x7B49;&#x7B49;&#xFF09;&#xFF0C;&#x4F1A;&#x88AB;&#x5BFC;&#x51FA;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5305;&#x7684;&#x5916;&#x90E8;&#x8BBF;&#x95EE;&#x3002; &#x9ED8;&#x8BA4;&#x5305;&#x540D;&#x4E00;&#x822C;&#x91C7;&#x7528;&#x5BFC;&#x5165;&#x8DEF;&#x5F84;&#x540D;&#x7684;&#x6700;&#x540E;&#x4E00;&#x6BB5;&#xFF0C;&#x6BD4;&#x5982; GOPTAH/src/packages/test &#x7684; test &#x5C31;&#x662F;&#x5305;&#x540D;&#x3002;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#x4F8B;&#x5916;&#xFF1A; main &#x5305;&#xFF0C; go build &#x547D;&#x4EE4;&#x7F16;&#x8BD1;&#x5B8C;&#x4E4B;&#x540E;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x3002; &#x4EE5; _test &#x4E3A;&#x540E;&#x7F00;&#x5305;&#x540D;&#x7684;&#x6D4B;&#x8BD5;&#x5916;&#x90E8;&#x6269;&#x5C55;&#x5305;&#x90FD;&#x7531; go test &#x547D;&#x4EE4;&#x72EC;&#x7ACB;&#x7F16;&#x8BD1;&#x3002;(&#x4EE5; _ &#x6216; . &#x5F00;&#x5934;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x4F1A;&#x88AB;&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x5FFD;&#x7565;) &#x5982; gopkg.in/yaml.v2 &#x3002;&#x5305;&#x7684;&#x540D;&#x5B57;&#x5305;&#x542B;&#x7248;&#x672C;&#x53F7;&#x540E;&#x7F00; .v2 &#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x5305;&#x540D;&#x662F; yaml &#x3002;"},"basic/package.html#包命名":{"title":"&#x5305;&#x547D;&#x540D;","path":"\\golang-learn\\basic\\package.html#包命名","body":"&#x5305;&#x547D;&#x540D;&#x5C3D;&#x91CF;&#x6709;&#x63CF;&#x8FF0;&#x6027;&#x4E14;&#x65E0;&#x6B67;&#x4E49;&#xFF0C;&#x7B80;&#x77ED;&#xFF0C;&#x907F;&#x514D;&#x51B2;&#x7A81;&#x3002;"},"basic/package.html#初始化包":{"title":"&#x521D;&#x59CB;&#x5316;&#x5305;","path":"\\golang-learn\\basic\\package.html#初始化包","body":"&#x5305;&#x7684;&#x521D;&#x59CB;&#x5316;&#x9996;&#x5148;&#x662F;&#x89E3;&#x51B3;&#x5305;&#x7EA7;&#x53D8;&#x91CF;&#x7684;&#x4F9D;&#x8D56;&#x987A;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x6309;&#x7167;&#x5305;&#x7EA7;&#x53D8;&#x91CF;&#x58F0;&#x660E;&#x51FA;&#x73B0;&#x7684;&#x987A;&#x5E8F;&#x4F9D;&#x6B21;&#x521D;&#x59CB;&#x5316;&#xFF1A; 1 2 3 4 5 var a = b + c // a &#x7B2C;&#x4E09;&#x4E2A;&#x521D;&#x59CB;&#x5316;, &#x4E3A; 3 var b = f() // b &#x7B2C;&#x4E8C;&#x4E2A;&#x521D;&#x59CB;&#x5316;, &#x4E3A; 2, &#x901A;&#x8FC7;&#x8C03;&#x7528; f (&#x4F9D;&#x8D56;c) var c = 1 // c &#x7B2C;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x5316;, &#x4E3A; 1 func f () int { return c + 1 } &#x5982;&#x679C;&#x5305;&#x4E2D;&#x542B;&#x6709;&#x591A;&#x4E2A;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x9996;&#x5148;&#x4F1A;&#x5C06; .go &#x6587;&#x4EF6;&#x6839;&#x636E;&#x6587;&#x4EF6;&#x540D;&#x6392;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x4F9D;&#x6B21;&#x8C03;&#x7528;&#x7F16;&#x8BD1;&#x5668;&#x7F16;&#x8BD1;&#x3002; &#x6BCF;&#x4E2A;&#x5305;&#x5728;&#x89E3;&#x51B3;&#x4F9D;&#x8D56;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;&#x4EE5;&#x5BFC;&#x5165;&#x58F0;&#x660E;&#x7684;&#x987A;&#x5E8F;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x6BCF;&#x4E2A;&#x5305;&#x53EA;&#x4F1A;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x6B21;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A; p &#x5305;&#x5BFC;&#x5165;&#x4E86; q &#x5305;&#xFF0C; &#x90A3;&#x4E48;&#x5728; p &#x5305;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A; q &#x5305;&#x5FC5;&#x7136;&#x5DF2;&#x7ECF;&#x521D;&#x59CB;&#x5316;&#x8FC7;&#x4E86;&#x3002;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C;&#x662F;&#x81EA;&#x4E0B;&#x800C;&#x4E0A;&#x8FDB;&#x884C;&#x7684;&#xFF0C; main &#x5305;&#x6700;&#x540E;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x3002;&#x4EE5;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C; &#x53EF;&#x4EE5;&#x786E;&#x4FDD;&#x5728; main &#x51FD;&#x6570;&#x6267;&#x884C;&#x4E4B;&#x524D;&#xFF0C;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x7684;&#x5305;&#x90FD;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C;&#x4E86;&#x3002; &#x4F7F;&#x7528; init &#x51FD;&#x6570; &#x4F7F;&#x7528; init &#x51FD;&#x6570;&#x6765;&#x7B80;&#x5316;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C;&#xFF0C; init &#x51FD;&#x6570;&#x548C;&#x666E;&#x901A;&#x51FD;&#x6570;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x80FD;&#x88AB;&#x8C03;&#x7528;&#x6216;&#x5F15;&#x7528;&#x3002; &#x7A0B;&#x5E8F;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x65F6;&#x6309;&#x7167;&#x5B83;&#x4EEC;&#x58F0;&#x660E;&#x7684;&#x987A;&#x5E8F;&#x81EA;&#x52A8;&#x8C03;&#x7528;&#x3002; init &#x51FD;&#x6570;&#x4E0D;&#x80FD;&#x6709;&#x4EFB;&#x4F55;&#x7684;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x867D;&#x7136;&#x4E00;&#x4E2A; package &#x91CC;&#x9762;&#x53EF;&#x4EE5;&#x5199;&#x4EFB;&#x610F;&#x591A;&#x4E2A; init &#x51FD;&#x6570;&#xFF0C;&#x4F46;&#x8FD9;&#x65E0;&#x8BBA;&#x662F;&#x5BF9;&#x4E8E;&#x53EF;&#x8BFB;&#x6027;&#x8FD8;&#x662F;&#x4EE5;&#x540E;&#x7684;&#x53EF;&#x7EF4;&#x62A4;&#x6027;&#x6765;&#x8BF4;&#xFF0C; &#x6211;&#x4EEC;&#x90FD;&#x5F3A;&#x70C8;&#x5EFA;&#x8BAE;&#x7528;&#x6237;&#x5728;&#x4E00;&#x4E2A; package &#x4E2D;&#x6BCF;&#x4E2A;&#x6587;&#x4EF6;&#x53EA;&#x5199;&#x4E00;&#x4E2A; init &#x51FD;&#x6570;&#x3002; &#x7A0B;&#x5E8F;&#x7684;&#x521D;&#x59CB;&#x5316;&#x548C;&#x6267;&#x884C;&#x90FD;&#x8D77;&#x59CB;&#x4E8E; main &#x5305;&#x3002;&#x5982;&#x679C; main &#x5305;&#x8FD8;&#x5BFC;&#x5165;&#x4E86;&#x5176;&#x5B83;&#x7684;&#x5305;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x5C06;&#x5B83;&#x4EEC;&#x4F9D;&#x6B21;&#x5BFC;&#x5165;&#x3002;&#x6709;&#x65F6;&#x4E00;&#x4E2A;&#x5305;&#x4F1A;&#x88AB;&#x591A;&#x4E2A;&#x5305;&#x540C;&#x65F6;&#x5BFC;&#x5165;&#xFF0C; &#x90A3;&#x4E48;&#x5B83;&#x53EA;&#x4F1A;&#x88AB;&#x5BFC;&#x5165;&#x4E00;&#x6B21;&#xFF08;&#x4F8B;&#x5982;&#x5F88;&#x591A;&#x5305;&#x53EF;&#x80FD;&#x90FD;&#x4F1A;&#x7528;&#x5230; fmt &#x5305;&#xFF0C;&#x4F46;&#x5B83;&#x53EA;&#x4F1A;&#x88AB;&#x5BFC;&#x5165;&#x4E00;&#x6B21;&#xFF0C;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x5BFC;&#x5165;&#x591A;&#x6B21;&#xFF09;&#x3002;&#x5F53;&#x4E00;&#x4E2A;&#x5305;&#x88AB;&#x5BFC;&#x5165;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x5305;&#x8FD8;&#x5BFC;&#x5165;&#x4E86; &#x5176;&#x5B83;&#x7684;&#x5305;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x5148;&#x5C06;&#x5176;&#x5B83;&#x5305;&#x5BFC;&#x5165;&#x8FDB;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5BF9;&#x8FD9;&#x4E9B;&#x5305;&#x4E2D;&#x7684;&#x5305;&#x7EA7;&#x5E38;&#x91CF;&#x548C;&#x53D8;&#x91CF;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x63A5;&#x7740;&#x6267;&#x884C; init &#x51FD;&#x6570;&#xFF08;&#x5982;&#x679C;&#x6709;&#x7684;&#x8BDD;&#xFF09;&#xFF0C;&#x4F9D;&#x6B21;&#x7C7B;&#x63A8;&#x3002;&#x7B49;&#x6240;&#x6709; &#x88AB;&#x5BFC;&#x5165;&#x7684;&#x5305;&#x90FD;&#x52A0;&#x8F7D;&#x5B8C;&#x6BD5;&#x4E86;&#xFF0C;&#x5C31;&#x4F1A;&#x5F00;&#x59CB;&#x5BF9; main &#x5305;&#x4E2D;&#x7684;&#x5305;&#x7EA7;&#x5E38;&#x91CF;&#x548C;&#x53D8;&#x91CF;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C; main &#x5305;&#x4E2D;&#x7684; init &#x51FD;&#x6570;&#xFF08;&#x5982;&#x679C;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#xFF09;&#xFF0C;&#x6700;&#x540E; &#x6267;&#x884C; main &#x51FD;&#x6570;&#x3002;"},"basic/scope.html":{"title":"作用域","path":"\\golang-learn\\basic\\scope.html","body":"作用域 声明语句的作用域是指源代码中可以有效使用这个名字的范围。 局部变量 在函数体内或代码块内声明的变量称之为局部变量，它们的作用域只在代码块内，参数和返回值变量也是局部变量。 全局变量 作用域都是全局的（在本包范围内） 在函数体外声明的变量称之为全局变量， 全局变量可以在整个包甚至外部包 （被导出后 首字母大写）使用 。 全局变量可以在任何函数中使用。 Go 的标识符作用域是基于代码块的。代码块就是包裹在一对大括号内部的声明和语句，并且是可嵌套的。代码块内部声明的名字是无法 被外部块访问的。 声明语句作用域范围的大小。 内置的类型、函数和常量，比如 int 、 len 和 true 是全局作用域 在函数外部（也就是包级语法域）声明的名字可以在同一个包的任何源文件中访问 导入的包，如 import packages/test ，是对应源文件级的作用域，只能在当前的源文件中访问 在函数内部声明的名字，只能在函数内部访问 一个程序可能包含多个同名的声明，只要它们在不同的词法域就可以。内层的词法域会屏蔽外部的声明。"},"basic/scope.html#作用域":{"title":"&#x4F5C;&#x7528;&#x57DF;","path":"\\golang-learn\\basic\\scope.html#作用域","body":"&#x58F0;&#x660E;&#x8BED;&#x53E5;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x662F;&#x6307;&#x6E90;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x540D;&#x5B57;&#x7684;&#x8303;&#x56F4;&#x3002; &#x5C40;&#x90E8;&#x53D8;&#x91CF; &#x5728;&#x51FD;&#x6570;&#x4F53;&#x5185;&#x6216;&#x4EE3;&#x7801;&#x5757;&#x5185;&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#x79F0;&#x4E4B;&#x4E3A;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;&#x4EE3;&#x7801;&#x5757;&#x5185;&#xFF0C;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#x53D8;&#x91CF;&#x4E5F;&#x662F;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x3002; &#x5168;&#x5C40;&#x53D8;&#x91CF; &#x4F5C;&#x7528;&#x57DF;&#x90FD;&#x662F;&#x5168;&#x5C40;&#x7684;&#xFF08;&#x5728;&#x672C;&#x5305;&#x8303;&#x56F4;&#x5185;&#xFF09; &#x5728;&#x51FD;&#x6570;&#x4F53;&#x5916;&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#x79F0;&#x4E4B;&#x4E3A;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#xFF0C; &#x5168;&#x5C40;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x5728;&#x6574;&#x4E2A;&#x5305;&#x751A;&#x81F3;&#x5916;&#x90E8;&#x5305; &#xFF08;&#x88AB;&#x5BFC;&#x51FA;&#x540E; &#x9996;&#x5B57;&#x6BCD;&#x5927;&#x5199;&#xFF09;&#x4F7F;&#x7528; &#x3002; &#x5168;&#x5C40;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x4F55;&#x51FD;&#x6570;&#x4E2D;&#x4F7F;&#x7528;&#x3002; Go &#x7684;&#x6807;&#x8BC6;&#x7B26;&#x4F5C;&#x7528;&#x57DF;&#x662F;&#x57FA;&#x4E8E;&#x4EE3;&#x7801;&#x5757;&#x7684;&#x3002;&#x4EE3;&#x7801;&#x5757;&#x5C31;&#x662F;&#x5305;&#x88F9;&#x5728;&#x4E00;&#x5BF9;&#x5927;&#x62EC;&#x53F7;&#x5185;&#x90E8;&#x7684;&#x58F0;&#x660E;&#x548C;&#x8BED;&#x53E5;&#xFF0C;&#x5E76;&#x4E14;&#x662F;&#x53EF;&#x5D4C;&#x5957;&#x7684;&#x3002;&#x4EE3;&#x7801;&#x5757;&#x5185;&#x90E8;&#x58F0;&#x660E;&#x7684;&#x540D;&#x5B57;&#x662F;&#x65E0;&#x6CD5; &#x88AB;&#x5916;&#x90E8;&#x5757;&#x8BBF;&#x95EE;&#x7684;&#x3002; &#x58F0;&#x660E;&#x8BED;&#x53E5;&#x4F5C;&#x7528;&#x57DF;&#x8303;&#x56F4;&#x7684;&#x5927;&#x5C0F;&#x3002; &#x5185;&#x7F6E;&#x7684;&#x7C7B;&#x578B;&#x3001;&#x51FD;&#x6570;&#x548C;&#x5E38;&#x91CF;&#xFF0C;&#x6BD4;&#x5982; int &#x3001; len &#x548C; true &#x662F;&#x5168;&#x5C40;&#x4F5C;&#x7528;&#x57DF; &#x5728;&#x51FD;&#x6570;&#x5916;&#x90E8;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x5305;&#x7EA7;&#x8BED;&#x6CD5;&#x57DF;&#xFF09;&#x58F0;&#x660E;&#x7684;&#x540D;&#x5B57;&#x53EF;&#x4EE5;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x5305;&#x7684;&#x4EFB;&#x4F55;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x8BBF;&#x95EE; &#x5BFC;&#x5165;&#x7684;&#x5305;&#xFF0C;&#x5982; import packages/test &#xFF0C;&#x662F;&#x5BF9;&#x5E94;&#x6E90;&#x6587;&#x4EF6;&#x7EA7;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#xFF0C;&#x53EA;&#x80FD;&#x5728;&#x5F53;&#x524D;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x8BBF;&#x95EE; &#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x58F0;&#x660E;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x53EA;&#x80FD;&#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x8BBF;&#x95EE; &#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x53EF;&#x80FD;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x540C;&#x540D;&#x7684;&#x58F0;&#x660E;&#xFF0C;&#x53EA;&#x8981;&#x5B83;&#x4EEC;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x8BCD;&#x6CD5;&#x57DF;&#x5C31;&#x53EF;&#x4EE5;&#x3002;&#x5185;&#x5C42;&#x7684;&#x8BCD;&#x6CD5;&#x57DF;&#x4F1A;&#x5C4F;&#x853D;&#x5916;&#x90E8;&#x7684;&#x58F0;&#x660E;&#x3002;"},"basic/interface.html":{"title":"接口","path":"\\golang-learn\\basic\\interface.html","body":"接口 Go 支持接口数据类型，接口类型是一种抽象的类型。接口类型具体描述了一系列方法的集合，任何其他类型只要实现了这些方法就是实 现了这个接口，无须显示声明。 接口只有当有两个或两个以上的具体类型必须以相同的方式进行处理时才需要 。 接口的零值就是它的类型和值的部分都是 nil 。 简单的说， interface 是一组 method 的组合，我们通过 interface 来定义对象的一组行为。 定义接口： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type 接口名 interface  方法名 1 [返回类型] 方法名 2 [返回类型] 方法名 3 [返回类型] ...  /* 定义结构体 */ type struct_name struct  /* variables */  /* 实现接口方法 */ func (struct_name_variable struct_name) 方法名1 () [返回类型]  /* 方法实现 */  ... func (struct_name_variable struct_name) 方法名2 () [返回类型]  /* 方法实现*/  实例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 type Phone interface  call()  type NokiaPhone struct   func (nokiaPhone NokiaPhone) call ()  fmt.Println( \"I am Nokia, I can call you!\" )  type IPhone struct   func (iPhone IPhone) call ()  fmt.Println( \"I am iPhone, I can call you!\" )  func main ()  var phone Phone phone = new (NokiaPhone) phone.call() phone = new (IPhone) phone.call()  接口类型也可以通过组合已有的接口来定义： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 type Reader interface  Read(p [] byte ) (n int , err error)  type Closer interface  Close() error  type ReadWriteCloser interface  Reader Writer Closer  // 混合 type ReadWriter interface  Read(p [] byte ) (n int , err error) Writer  空接口类型 interface {} 被称为空接口类型，它没有任何方法。所有的类型都实现了空 interface ， 空 interface 在我们需要存储任意类型的数值的时候相当有用，因为它可以存储任意类型的数值。 1 2 3 4 5 6 7 // 定义a为空接口 var a interface  var i int = 5 s := \"Hello world\" // a可以存储任意类型的数值 a = i a = s 一个函数把 interface{} 作为参数，那么他可以接受任意类型的值作为参数，如果一个函数返回 interface{} , 那么也就可以返回任意类型的值。 interface{} 可以存储任意类型，那么怎么判断存储了什么类型？ error 接口 Go 内置了错误接口。 1 2 3 type error interface  Error() string  创建一个 error 最简单的方法就是调用 errors.New 函数。 error 包： 1 2 3 4 5 6 7 package errors func New (text string ) error  return &amp;errorStringtext  type errorString struct  text string  func (e *errorString) Error () string  return e.text  fmt.Errorf 封装了 errors.New 函数，它会处理字符串格式化。 当我们想通过模板化的方式生成错误信息，并得到错误值时， 可以使用 fmt.Errorf 函数。该函数所做的其实就是先调用 fmt.Sprintf 函数，得到确切的错误信息；再调用 errors.New 函数， 得到包含该错误信息的 error 类型值，最后返回该值 。 实际上， error 类型值的 Error 方法就相当于其他类型值的 String 方法。 接口的实际用途 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package main import ( \"fmt\" ) //定义 interface type VowelsFinder interface  FindVowels() [] rune  type MyString string //实现接口 func (ms MyString) FindVowels () [] rune  var vowels [] rune for _, rune := range ms  if rune == 'a' || rune == 'e' || rune == 'i' || rune == 'o' || rune == 'u'  vowels = append (vowels, rune )   return vowels  func main ()  name := MyString( \"Sam Anderson\" ) // 类型转换 var v VowelsFinder // 定义一个接口类型的变量 v = name fmt.Printf( \"Vowels are %c\" , v.FindVowels())  上面的代码 fmt.Printf(Vowels are %c, v.FindVowels()) 是可以直接使用 fmt.Printf(Vowels are %c, name.FindVowels()) 的，那么我们定义的变量 V 没有没有了意义。看下面的代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 package main import ( \t \"fmt\" ) // 薪资计算器接口 type SalaryCalculator interface  \tCalculateSalary() int  // 普通挖掘机员工 type Contract struct  \tempId int \tbasicpay int  // 有蓝翔技校证的员工 type Permanent struct  \tempId int \tbasicpay int \tjj int // 奖金  func (p Permanent) CalculateSalary () int  \t return p.basicpay + p.jj  func (c Contract) CalculateSalary () int  \t return c.basicpay  // 总开支 func totalExpense (s []SalaryCalculator)  \texpense := 0 \t for _, v := range s  \t\texpense = expense + v.CalculateSalary() \t \tfmt.Printf( \"总开支 $%d\" , expense)  func main ()  \tpemp1 := Permanent 1 , 3000 , 10000  \tpemp2 := Permanent 2 , 3000 , 20000  \tcemp1 := Contract 3 , 3000  \temployees := []SalaryCalculatorpemp1, pemp2, cemp1 \ttotalExpense(employees)  这个时候体现出了接口的作用， Contract 和 Permanent 是不一样的结构体类型，但是可以定义一个 SalaryCalculator 接口类 型的数组，就可以在 totalExpense 中调用元素的 CalculateSalary 方法。"},"basic/interface.html#接口":{"title":"&#x63A5;&#x53E3;","path":"\\golang-learn\\basic\\interface.html#接口","body":"Go &#x652F;&#x6301;&#x63A5;&#x53E3;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x662F;&#x4E00;&#x79CD;&#x62BD;&#x8C61;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x5177;&#x4F53;&#x63CF;&#x8FF0;&#x4E86;&#x4E00;&#x7CFB;&#x5217;&#x65B9;&#x6CD5;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x53EA;&#x8981;&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x5B9E; &#x73B0;&#x4E86;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x65E0;&#x987B;&#x663E;&#x793A;&#x58F0;&#x660E;&#x3002; &#x63A5;&#x53E3;&#x53EA;&#x6709;&#x5F53;&#x6709;&#x4E24;&#x4E2A;&#x6216;&#x4E24;&#x4E2A;&#x4EE5;&#x4E0A;&#x7684;&#x5177;&#x4F53;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x4EE5;&#x76F8;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x65F6;&#x624D;&#x9700;&#x8981; &#x3002; &#x63A5;&#x53E3;&#x7684;&#x96F6;&#x503C;&#x5C31;&#x662F;&#x5B83;&#x7684;&#x7C7B;&#x578B;&#x548C;&#x503C;&#x7684;&#x90E8;&#x5206;&#x90FD;&#x662F; nil &#x3002; &#x7B80;&#x5355;&#x7684;&#x8BF4;&#xFF0C; interface &#x662F;&#x4E00;&#x7EC4; method &#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7; interface &#x6765;&#x5B9A;&#x4E49;&#x5BF9;&#x8C61;&#x7684;&#x4E00;&#x7EC4;&#x884C;&#x4E3A;&#x3002; &#x5B9A;&#x4E49;&#x63A5;&#x53E3;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type &#x63A5;&#x53E3;&#x540D; interface { &#x65B9;&#x6CD5;&#x540D; 1 [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] &#x65B9;&#x6CD5;&#x540D; 2 [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] &#x65B9;&#x6CD5;&#x540D; 3 [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] ... } /* &#x5B9A;&#x4E49;&#x7ED3;&#x6784;&#x4F53; */ type struct_name struct { /* variables */ } /* &#x5B9E;&#x73B0;&#x63A5;&#x53E3;&#x65B9;&#x6CD5; */ func (struct_name_variable struct_name) &#x65B9;&#x6CD5;&#x540D;1 () [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] { /* &#x65B9;&#x6CD5;&#x5B9E;&#x73B0; */ } ... func (struct_name_variable struct_name) &#x65B9;&#x6CD5;&#x540D;2 () [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] { /* &#x65B9;&#x6CD5;&#x5B9E;&#x73B0;*/ } &#x5B9E;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 type Phone interface { call() } type NokiaPhone struct { } func (nokiaPhone NokiaPhone) call () { fmt.Println( I am Nokia, I can call you! ) } type IPhone struct { } func (iPhone IPhone) call () { fmt.Println( I am iPhone, I can call you! ) } func main () { var phone Phone phone = new (NokiaPhone) phone.call() phone = new (IPhone) phone.call() } &#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7EC4;&#x5408;&#x5DF2;&#x6709;&#x7684;&#x63A5;&#x53E3;&#x6765;&#x5B9A;&#x4E49;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 type Reader interface { Read(p [] byte ) (n int , err error) } type Closer interface { Close() error } type ReadWriteCloser interface { Reader Writer Closer } // &#x6DF7;&#x5408; type ReadWriter interface { Read(p [] byte ) (n int , err error) Writer } &#x7A7A;&#x63A5;&#x53E3;&#x7C7B;&#x578B; interface {} &#x88AB;&#x79F0;&#x4E3A;&#x7A7A;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x65B9;&#x6CD5;&#x3002;&#x6240;&#x6709;&#x7684;&#x7C7B;&#x578B;&#x90FD;&#x5B9E;&#x73B0;&#x4E86;&#x7A7A; interface &#xFF0C; &#x7A7A; interface &#x5728;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x503C;&#x7684;&#x65F6;&#x5019;&#x76F8;&#x5F53;&#x6709;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x503C;&#x3002; 1 2 3 4 5 6 7 // &#x5B9A;&#x4E49;a&#x4E3A;&#x7A7A;&#x63A5;&#x53E3; var a interface {} var i int = 5 s := Hello world // a&#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x503C; a = i a = s &#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x628A; interface{} &#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x8FD4;&#x56DE; interface{} , &#x90A3;&#x4E48;&#x4E5F;&#x5C31;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; interface{} &#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#xFF0C;&#x90A3;&#x4E48;&#x600E;&#x4E48;&#x5224;&#x65AD;&#x5B58;&#x50A8;&#x4E86;&#x4EC0;&#x4E48;&#x7C7B;&#x578B;&#xFF1F; error &#x63A5;&#x53E3; Go &#x5185;&#x7F6E;&#x4E86;&#x9519;&#x8BEF;&#x63A5;&#x53E3;&#x3002; 1 2 3 type error interface { Error() string } &#x521B;&#x5EFA;&#x4E00;&#x4E2A; error &#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x8C03;&#x7528; errors.New &#x51FD;&#x6570;&#x3002; error &#x5305;&#xFF1A; 1 2 3 4 5 6 7 package errors func New (text string ) error { return &amp;errorString{text} } type errorString struct { text string } func (e *errorString) Error () string { return e.text } fmt.Errorf &#x5C01;&#x88C5;&#x4E86; errors.New &#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x4F1A;&#x5904;&#x7406;&#x5B57;&#x7B26;&#x4E32;&#x683C;&#x5F0F;&#x5316;&#x3002; &#x5F53;&#x6211;&#x4EEC;&#x60F3;&#x901A;&#x8FC7;&#x6A21;&#x677F;&#x5316;&#x7684;&#x65B9;&#x5F0F;&#x751F;&#x6210;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x5F97;&#x5230;&#x9519;&#x8BEF;&#x503C;&#x65F6;&#xFF0C; &#x53EF;&#x4EE5;&#x4F7F;&#x7528; fmt.Errorf &#x51FD;&#x6570;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x6240;&#x505A;&#x7684;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x5148;&#x8C03;&#x7528; fmt.Sprintf &#x51FD;&#x6570;&#xFF0C;&#x5F97;&#x5230;&#x786E;&#x5207;&#x7684;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF1B;&#x518D;&#x8C03;&#x7528; errors.New &#x51FD;&#x6570;&#xFF0C; &#x5F97;&#x5230;&#x5305;&#x542B;&#x8BE5;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x7684; error &#x7C7B;&#x578B;&#x503C;&#xFF0C;&#x6700;&#x540E;&#x8FD4;&#x56DE;&#x8BE5;&#x503C; &#x3002; &#x5B9E;&#x9645;&#x4E0A;&#xFF0C; error &#x7C7B;&#x578B;&#x503C;&#x7684; Error &#x65B9;&#x6CD5;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x503C;&#x7684; String &#x65B9;&#x6CD5;&#x3002; &#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x9645;&#x7528;&#x9014; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package main import ( fmt ) //&#x5B9A;&#x4E49; interface type VowelsFinder interface { FindVowels() [] rune } type MyString string //&#x5B9E;&#x73B0;&#x63A5;&#x53E3; func (ms MyString) FindVowels () [] rune { var vowels [] rune for _, rune := range ms { if rune == &apos;a&apos; || rune == &apos;e&apos; || rune == &apos;i&apos; || rune == &apos;o&apos; || rune == &apos;u&apos; { vowels = append (vowels, rune ) } } return vowels } func main () { name := MyString( Sam Anderson ) // &#x7C7B;&#x578B;&#x8F6C;&#x6362; var v VowelsFinder // &#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF; v = name fmt.Printf( Vowels are %c , v.FindVowels()) } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801; fmt.Printf(Vowels are %c, v.FindVowels()) &#x662F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528; fmt.Printf(Vowels are %c, name.FindVowels()) &#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x7684;&#x53D8;&#x91CF; V &#x6CA1;&#x6709;&#x6CA1;&#x6709;&#x4E86;&#x610F;&#x4E49;&#x3002;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 package main import ( \t fmt ) // &#x85AA;&#x8D44;&#x8BA1;&#x7B97;&#x5668;&#x63A5;&#x53E3; type SalaryCalculator interface { \tCalculateSalary() int } // &#x666E;&#x901A;&#x6316;&#x6398;&#x673A;&#x5458;&#x5DE5; type Contract struct { \tempId int \tbasicpay int } // &#x6709;&#x84DD;&#x7FD4;&#x6280;&#x6821;&#x8BC1;&#x7684;&#x5458;&#x5DE5; type Permanent struct { \tempId int \tbasicpay int \tjj int // &#x5956;&#x91D1; } func (p Permanent) CalculateSalary () int { \t return p.basicpay + p.jj } func (c Contract) CalculateSalary () int { \t return c.basicpay } // &#x603B;&#x5F00;&#x652F; func totalExpense (s []SalaryCalculator) { \texpense := 0 \t for _, v := range s { \t\texpense = expense + v.CalculateSalary() \t} \tfmt.Printf( &#x603B;&#x5F00;&#x652F; $%d , expense) } func main () { \tpemp1 := Permanent{ 1 , 3000 , 10000 } \tpemp2 := Permanent{ 2 , 3000 , 20000 } \tcemp1 := Contract{ 3 , 3000 } \temployees := []SalaryCalculator{pemp1, pemp2, cemp1} \ttotalExpense(employees) } &#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4F53;&#x73B0;&#x51FA;&#x4E86;&#x63A5;&#x53E3;&#x7684;&#x4F5C;&#x7528;&#xFF0C; Contract &#x548C; Permanent &#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A; SalaryCalculator &#x63A5;&#x53E3;&#x7C7B; &#x578B;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5728; totalExpense &#x4E2D;&#x8C03;&#x7528;&#x5143;&#x7D20;&#x7684; CalculateSalary &#x65B9;&#x6CD5;&#x3002;"},"basic/var.html":{"title":"变量","path":"\\golang-learn\\basic\\var.html","body":"变量 var 声明变量，必须使用空格隔开： 1 var 变量名字 类型 = 表达式 类型 或者 表达式 可以省略其中的一个。也就是如果没有类型，可以通过表达式推断出类型， 没有表达式，将会根据类型初始化为对应的零值 。 “零值”，所指并非是空值，而是一种“变量未填充前”的默认值，通常为 0 ，对应关系： 数值类型： 0 布尔类型： false 字符串:  接口或引用类型（包括 slice 、指针、 map 、 chan 和函数）： nil 声明一组变量 1 var 变量名字, 变量名字, 变量名字 ... 类型 = 表达式, 表达式, 表达式, ... 比如： 1 2 3 4 5 6 7 8 9 10 11 // 声明一组 `int` 类型 var i, j, k int // int, int, int // 声明一组不同类型 var b, f, s = true , 2.3 , \"four\" // bool, float64, string var ( i int pi float32 prefix string ) 简短声明 := 只能在函数内使用，不能提供数据类型 ，Go 会自动推断类型： 1 变量名字 := 表达式 1 2 3 4 5 6 7 var x = 100 func main ()  \tfmt.Println(&amp;x, x) \tx := \"abc\" \tfmt.Println(&amp;x, x)  上面的代码中 x := abc 相当于重新定义并初始化了同名的局部变量 x ，因为 不在同一个作用域 ，所以打印出来的结果完全不同。 简短声明，并不总是重新定义比变量，要避免重新定义，首先要在同一个作用域中，至少有一个新的变量被定义： 1 2 3 4 5 6 func main ()  \tx := 100 \tfmt.Println(&amp;x, x) \tx, y := 200 , 300 // 一个新的变量 y，这里的简短声明 x 就是赋值操作 \tfmt.Println(&amp;x, x)  如果重复使用简短声明定义一个变量，会报错： 1 2 3 x := 100 fmt.Println(&amp;x) x := 200 // 错误， no new variables on left side of := 赋值 常见的赋值的方式： 1 2 3 4 5 6 7 8 9 x = 1 // 命名变量的赋值 *p = true // 通过指针间接赋值 person.name = \"bob\" // 结构体字段赋值 count[x] = count[x] * scale // 数组、slice 或 map 的元素赋值 count[x] *= scale // 等价于 count[x] = count[x] * scale，但是省去了对变量表达式的重复计算 x, y = y, x // 交换值 f, err = os.Open( \"foo.txt\" ) // 左边变量的数目必须和右边一致，函数一般会返回一个 error 类型 v, ok = m[key] // map 查找，返回布尔值类表示操作是否成功 v = m[key] // map 查找，也可以返回一个值，失败时返回零值 不管是隐式还是显式地赋值，在赋值语句左边的变量和右边最终的求到的值必须有相同的数据类型。这就是 可赋值性 。 进行 多变量赋值 时，首先计算出所有右值，然后再依次赋值： 1 2 x, y := 1 , 2 x, y = y+ 3 , x+ 2 // 先计算出 y+3, x+2, 然后赋值"},"basic/var.html#变量":{"title":"&#x53D8;&#x91CF;","path":"\\golang-learn\\basic\\var.html#变量","body":"var &#x58F0;&#x660E;&#x53D8;&#x91CF;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#xFF1A; 1 var &#x53D8;&#x91CF;&#x540D;&#x5B57; &#x7C7B;&#x578B; = &#x8868;&#x8FBE;&#x5F0F; &#x7C7B;&#x578B; &#x6216;&#x8005; &#x8868;&#x8FBE;&#x5F0F; &#x53EF;&#x4EE5;&#x7701;&#x7565;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8868;&#x8FBE;&#x5F0F;&#x63A8;&#x65AD;&#x51FA;&#x7C7B;&#x578B;&#xFF0C; &#x6CA1;&#x6709;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5C06;&#x4F1A;&#x6839;&#x636E;&#x7C7B;&#x578B;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x5BF9;&#x5E94;&#x7684;&#x96F6;&#x503C; &#x3002; &#x201C;&#x96F6;&#x503C;&#x201D;&#xFF0C;&#x6240;&#x6307;&#x5E76;&#x975E;&#x662F;&#x7A7A;&#x503C;&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x79CD;&#x201C;&#x53D8;&#x91CF;&#x672A;&#x586B;&#x5145;&#x524D;&#x201D;&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x901A;&#x5E38;&#x4E3A; 0 &#xFF0C;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#xFF1A; &#x6570;&#x503C;&#x7C7B;&#x578B;&#xFF1A; 0 &#x5E03;&#x5C14;&#x7C7B;&#x578B;&#xFF1A; false &#x5B57;&#x7B26;&#x4E32;:  &#x63A5;&#x53E3;&#x6216;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF08;&#x5305;&#x62EC; slice &#x3001;&#x6307;&#x9488;&#x3001; map &#x3001; chan &#x548C;&#x51FD;&#x6570;&#xFF09;&#xFF1A; nil"},"basic/var.html#声明一组变量":{"title":"&#x58F0;&#x660E;&#x4E00;&#x7EC4;&#x53D8;&#x91CF;","path":"\\golang-learn\\basic\\var.html#声明一组变量","body":"1 var &#x53D8;&#x91CF;&#x540D;&#x5B57;, &#x53D8;&#x91CF;&#x540D;&#x5B57;, &#x53D8;&#x91CF;&#x540D;&#x5B57; ... &#x7C7B;&#x578B; = &#x8868;&#x8FBE;&#x5F0F;, &#x8868;&#x8FBE;&#x5F0F;, &#x8868;&#x8FBE;&#x5F0F;, ... &#x6BD4;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 // &#x58F0;&#x660E;&#x4E00;&#x7EC4; `int` &#x7C7B;&#x578B; var i, j, k int // int, int, int // &#x58F0;&#x660E;&#x4E00;&#x7EC4;&#x4E0D;&#x540C;&#x7C7B;&#x578B; var b, f, s = true , 2.3 , four // bool, float64, string var ( i int pi float32 prefix string )"},"basic/var.html#简短声明":{"title":"&#x7B80;&#x77ED;&#x58F0;&#x660E;","path":"\\golang-learn\\basic\\var.html#简短声明","body":":= &#x53EA;&#x80FD;&#x5728;&#x51FD;&#x6570;&#x5185;&#x4F7F;&#x7528;&#xFF0C;&#x4E0D;&#x80FD;&#x63D0;&#x4F9B;&#x6570;&#x636E;&#x7C7B;&#x578B; &#xFF0C;Go &#x4F1A;&#x81EA;&#x52A8;&#x63A8;&#x65AD;&#x7C7B;&#x578B;&#xFF1A; 1 &#x53D8;&#x91CF;&#x540D;&#x5B57; := &#x8868;&#x8FBE;&#x5F0F; 1 2 3 4 5 6 7 var x = 100 func main () { \tfmt.Println(&amp;x, x) \tx := abc \tfmt.Println(&amp;x, x) } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D; x := abc &#x76F8;&#x5F53;&#x4E8E;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#x5E76;&#x521D;&#x59CB;&#x5316;&#x4E86;&#x540C;&#x540D;&#x7684;&#x5C40;&#x90E8;&#x53D8;&#x91CF; x &#xFF0C;&#x56E0;&#x4E3A; &#x4E0D;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x4F5C;&#x7528;&#x57DF; &#xFF0C;&#x6240;&#x4EE5;&#x6253;&#x5370;&#x51FA;&#x6765;&#x7684;&#x7ED3;&#x679C;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x3002; &#x7B80;&#x77ED;&#x58F0;&#x660E;&#xFF0C;&#x5E76;&#x4E0D;&#x603B;&#x662F;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#x6BD4;&#x53D8;&#x91CF;&#xFF0C;&#x8981;&#x907F;&#x514D;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#xFF0C;&#x9996;&#x5148;&#x8981;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x4F5C;&#x7528;&#x57DF;&#x4E2D;&#xFF0C;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x53D8;&#x91CF;&#x88AB;&#x5B9A;&#x4E49;&#xFF1A; 1 2 3 4 5 6 func main () { \tx := 100 \tfmt.Println(&amp;x, x) \tx, y := 200 , 300 // &#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x53D8;&#x91CF; y&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x7B80;&#x77ED;&#x58F0;&#x660E; x &#x5C31;&#x662F;&#x8D4B;&#x503C;&#x64CD;&#x4F5C; \tfmt.Println(&amp;x, x) } &#x5982;&#x679C;&#x91CD;&#x590D;&#x4F7F;&#x7528;&#x7B80;&#x77ED;&#x58F0;&#x660E;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x4F1A;&#x62A5;&#x9519;&#xFF1A; 1 2 3 x := 100 fmt.Println(&amp;x) x := 200 // &#x9519;&#x8BEF;&#xFF0C; no new variables on left side of :="},"basic/var.html#赋值":{"title":"&#x8D4B;&#x503C;","path":"\\golang-learn\\basic\\var.html#赋值","body":"&#x5E38;&#x89C1;&#x7684;&#x8D4B;&#x503C;&#x7684;&#x65B9;&#x5F0F;&#xFF1A; 1 2 3 4 5 6 7 8 9 x = 1 // &#x547D;&#x540D;&#x53D8;&#x91CF;&#x7684;&#x8D4B;&#x503C; *p = true // &#x901A;&#x8FC7;&#x6307;&#x9488;&#x95F4;&#x63A5;&#x8D4B;&#x503C; person.name = bob // &#x7ED3;&#x6784;&#x4F53;&#x5B57;&#x6BB5;&#x8D4B;&#x503C; count[x] = count[x] * scale // &#x6570;&#x7EC4;&#x3001;slice &#x6216; map &#x7684;&#x5143;&#x7D20;&#x8D4B;&#x503C; count[x] *= scale // &#x7B49;&#x4EF7;&#x4E8E; count[x] = count[x] * scale&#xFF0C;&#x4F46;&#x662F;&#x7701;&#x53BB;&#x4E86;&#x5BF9;&#x53D8;&#x91CF;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x91CD;&#x590D;&#x8BA1;&#x7B97; x, y = y, x // &#x4EA4;&#x6362;&#x503C; f, err = os.Open( foo.txt ) // &#x5DE6;&#x8FB9;&#x53D8;&#x91CF;&#x7684;&#x6570;&#x76EE;&#x5FC5;&#x987B;&#x548C;&#x53F3;&#x8FB9;&#x4E00;&#x81F4;&#xFF0C;&#x51FD;&#x6570;&#x4E00;&#x822C;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; error &#x7C7B;&#x578B; v, ok = m[key] // map &#x67E5;&#x627E;&#xFF0C;&#x8FD4;&#x56DE;&#x5E03;&#x5C14;&#x503C;&#x7C7B;&#x8868;&#x793A;&#x64CD;&#x4F5C;&#x662F;&#x5426;&#x6210;&#x529F; v = m[key] // map &#x67E5;&#x627E;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x5931;&#x8D25;&#x65F6;&#x8FD4;&#x56DE;&#x96F6;&#x503C; &#x4E0D;&#x7BA1;&#x662F;&#x9690;&#x5F0F;&#x8FD8;&#x662F;&#x663E;&#x5F0F;&#x5730;&#x8D4B;&#x503C;&#xFF0C;&#x5728;&#x8D4B;&#x503C;&#x8BED;&#x53E5;&#x5DE6;&#x8FB9;&#x7684;&#x53D8;&#x91CF;&#x548C;&#x53F3;&#x8FB9;&#x6700;&#x7EC8;&#x7684;&#x6C42;&#x5230;&#x7684;&#x503C;&#x5FC5;&#x987B;&#x6709;&#x76F8;&#x540C;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x3002;&#x8FD9;&#x5C31;&#x662F; &#x53EF;&#x8D4B;&#x503C;&#x6027; &#x3002; &#x8FDB;&#x884C; &#x591A;&#x53D8;&#x91CF;&#x8D4B;&#x503C; &#x65F6;&#xFF0C;&#x9996;&#x5148;&#x8BA1;&#x7B97;&#x51FA;&#x6240;&#x6709;&#x53F3;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4F9D;&#x6B21;&#x8D4B;&#x503C;&#xFF1A; 1 2 x, y := 1 , 2 x, y = y+ 3 , x+ 2 // &#x5148;&#x8BA1;&#x7B97;&#x51FA; y+3, x+2, &#x7136;&#x540E;&#x8D4B;&#x503C;"},"standards/log.html":{"title":"log","path":"\\golang-learn\\standards\\log.html","body":"log log 模块用于在程序中输出日志。 1 2 3 4 5 6 7 package main import \"log\" func main ()  log.Print( \"Hello World\" ) // 2019/09/12 13:56:36 Hello World  Logger 通过 New 函数可以创建多个 Logger 实例，函数声明如下： 1 func New (out io.Writer, prefix string , flag int ) * Logger 参数： out ：日志输出的 IO 对象，通常是标准输出 os.Stdout ， os.Stderr ，或者绑定到文件的 IO。 prefix ：日志前缀，可以是任意字符串。 flag ：日志包含的通用信息标识位 一条日志的结构： 1 日志前缀 标识1 标识2 ... 标识n 日志内容 标识通过 flag 参数设置，当某个标识被设置，会在日志中进行显示，log 模块中已经提供了如下标识，多个标识通过 | 组合： Ldate 显示当前日期（当前时区） Ltime 显示当前时间（当前时区） microseconds 显示当前时间（微秒） Llongfile 包含路径的完整文件名 Lshortfile 不包含路径的文件名 LUTC Ldata 和 Ltime 使用 UTC 时间 LstdFlags 标准 Logger 的标识，等价于 Ldate | Ltime 1 2 3 4 5 6 7 8 9 10 11 12 package main import ( \t \"log\" \"os\" ) func main ()  prefix := \"[THIS IS THE LOG]\" logger := log.New(os.Stdout, prefix, log.LstdFlags | log.Lshortfile) logger.Print( \"Hello World\" ) // [THIS IS THE LOG]22019/09/12 12:34:07 log.go:11: Hello World  分类 log 模块中日志输出分为三类， Print，输出日志。 Fatal，在执行完 Print 之后，执行 os.Exit(1) 。 Panic。在执行完 Print 之后调用 panic() 方法。 除了基础的 Print 之外，还有 Printf 和 Println 方法对输出进格式化， Fatal 和 Panic 也类似。 Level log 包没有提供日志分级的功能，需要自己实现： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package main import ( \t \"log\" \"os\" ) func main ()  var ( \tlogger = log.New(os.Stdout, \"INFO: \" , log.Lshortfile) \tinfof = func (info string )  \t\tlogger.Print(info) \t ) infof( \"Hello world\" ) "},"standards/log.html#log":{"title":"log","path":"\\golang-learn\\standards\\log.html#log","body":"log &#x6A21;&#x5757;&#x7528;&#x4E8E;&#x5728;&#x7A0B;&#x5E8F;&#x4E2D;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x3002; 1 2 3 4 5 6 7 package main import log func main () { log.Print( Hello World ) // 2019/09/12 13:56:36 Hello World }"},"standards/log.html#Logger":{"title":"Logger","path":"\\golang-learn\\standards\\log.html#Logger","body":"&#x901A;&#x8FC7; New &#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x591A;&#x4E2A; Logger &#x5B9E;&#x4F8B;&#xFF0C;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x5982;&#x4E0B;&#xFF1A; 1 func New (out io.Writer, prefix string , flag int ) * Logger &#x53C2;&#x6570;&#xFF1A; out &#xFF1A;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x7684; IO &#x5BF9;&#x8C61;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x6807;&#x51C6;&#x8F93;&#x51FA; os.Stdout &#xFF0C; os.Stderr &#xFF0C;&#x6216;&#x8005;&#x7ED1;&#x5B9A;&#x5230;&#x6587;&#x4EF6;&#x7684; IO&#x3002; prefix &#xFF1A;&#x65E5;&#x5FD7;&#x524D;&#x7F00;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x4EFB;&#x610F;&#x5B57;&#x7B26;&#x4E32;&#x3002; flag &#xFF1A;&#x65E5;&#x5FD7;&#x5305;&#x542B;&#x7684;&#x901A;&#x7528;&#x4FE1;&#x606F;&#x6807;&#x8BC6;&#x4F4D; &#x4E00;&#x6761;&#x65E5;&#x5FD7;&#x7684;&#x7ED3;&#x6784;&#xFF1A; 1 {&#x65E5;&#x5FD7;&#x524D;&#x7F00;} {&#x6807;&#x8BC6;1} {&#x6807;&#x8BC6;2} ... {&#x6807;&#x8BC6;n} {&#x65E5;&#x5FD7;&#x5185;&#x5BB9;} &#x6807;&#x8BC6;&#x901A;&#x8FC7; flag &#x53C2;&#x6570;&#x8BBE;&#x7F6E;&#xFF0C;&#x5F53;&#x67D0;&#x4E2A;&#x6807;&#x8BC6;&#x88AB;&#x8BBE;&#x7F6E;&#xFF0C;&#x4F1A;&#x5728;&#x65E5;&#x5FD7;&#x4E2D;&#x8FDB;&#x884C;&#x663E;&#x793A;&#xFF0C;log &#x6A21;&#x5757;&#x4E2D;&#x5DF2;&#x7ECF;&#x63D0;&#x4F9B;&#x4E86;&#x5982;&#x4E0B;&#x6807;&#x8BC6;&#xFF0C;&#x591A;&#x4E2A;&#x6807;&#x8BC6;&#x901A;&#x8FC7; | &#x7EC4;&#x5408;&#xFF1A; Ldate &#x663E;&#x793A;&#x5F53;&#x524D;&#x65E5;&#x671F;&#xFF08;&#x5F53;&#x524D;&#x65F6;&#x533A;&#xFF09; Ltime &#x663E;&#x793A;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#xFF08;&#x5F53;&#x524D;&#x65F6;&#x533A;&#xFF09; microseconds &#x663E;&#x793A;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#xFF08;&#x5FAE;&#x79D2;&#xFF09; Llongfile &#x5305;&#x542B;&#x8DEF;&#x5F84;&#x7684;&#x5B8C;&#x6574;&#x6587;&#x4EF6;&#x540D; Lshortfile &#x4E0D;&#x5305;&#x542B;&#x8DEF;&#x5F84;&#x7684;&#x6587;&#x4EF6;&#x540D; LUTC Ldata &#x548C; Ltime &#x4F7F;&#x7528; UTC &#x65F6;&#x95F4; LstdFlags &#x6807;&#x51C6; Logger &#x7684;&#x6807;&#x8BC6;&#xFF0C;&#x7B49;&#x4EF7;&#x4E8E; Ldate | Ltime 1 2 3 4 5 6 7 8 9 10 11 12 package main import ( \t log os ) func main () { prefix := [THIS IS THE LOG] logger := log.New(os.Stdout, prefix, log.LstdFlags | log.Lshortfile) logger.Print( Hello World ) // [THIS IS THE LOG]22019/09/12 12:34:07 log.go:11: Hello World }"},"standards/log.html#分类":{"title":"&#x5206;&#x7C7B;","path":"\\golang-learn\\standards\\log.html#分类","body":"log &#x6A21;&#x5757;&#x4E2D;&#x65E5;&#x5FD7;&#x8F93;&#x51FA;&#x5206;&#x4E3A;&#x4E09;&#x7C7B;&#xFF0C; Print&#xFF0C;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x3002; Fatal&#xFF0C;&#x5728;&#x6267;&#x884C;&#x5B8C; Print &#x4E4B;&#x540E;&#xFF0C;&#x6267;&#x884C; os.Exit(1) &#x3002; Panic&#x3002;&#x5728;&#x6267;&#x884C;&#x5B8C; Print &#x4E4B;&#x540E;&#x8C03;&#x7528; panic() &#x65B9;&#x6CD5;&#x3002; &#x9664;&#x4E86;&#x57FA;&#x7840;&#x7684; Print &#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x6709; Printf &#x548C; Println &#x65B9;&#x6CD5;&#x5BF9;&#x8F93;&#x51FA;&#x8FDB;&#x683C;&#x5F0F;&#x5316;&#xFF0C; Fatal &#x548C; Panic &#x4E5F;&#x7C7B;&#x4F3C;&#x3002;"},"standards/log.html#Level":{"title":"Level","path":"\\golang-learn\\standards\\log.html#Level","body":"log &#x5305;&#x6CA1;&#x6709;&#x63D0;&#x4F9B;&#x65E5;&#x5FD7;&#x5206;&#x7EA7;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package main import ( \t log os ) func main () { var ( \tlogger = log.New(os.Stdout, INFO:  , log.Lshortfile) \tinfof = func (info string ) { \t\tlogger.Print(info) \t} ) infof( Hello world ) }"},"theme/theme-usage.html":{"title":"使用文档主题","path":"\\golang-learn\\theme\\theme-usage.html","body":"使用文档主题 本文档使用 Hexo Doc Theme 搭建。 Quick Start 获取源码 1 $ git clone git@github.com:zalando-incubator/hexo-theme-doc-seed.git hexo-theme-doc-seed 的以下文件拷贝到项目 root 目录下，例如 kubernetes-learn ： source 目录 _data 目录 images 目录 package.json _config.yaml .zappr.yaml 安装依赖 1 $ yarn 修改 package.json ，否则 hexo server 或者 hexo s 可能会找不到命令。 1 2 3 4 5 6 \"hexo\" :  \"version\" : \"3.9.0\" , \"scripts\" :  \"start\" : \"hexo s -p 8082\" , 修改 _config.yml 1 2 3 4 5 6 7 8 9 10 11 12 theme: ../node_modules/hexo-theme-doc # 如果你的网站存放在子目录中，例如 http://yoursite.com/blog # 则 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/ url: http://www.shipengqi.top/kubernetes-learn root: /kubernetes-learn/ # deploy deploy: - type: git repo: git@github.com:shipengqi/kubernetes-learn.git branch: gh-pages 启动开发服务，访问 http://localhost:8082 。 1 $ yarn start Index source 目录下创建 index.md 文件。这个 index.md 文件就是文档首页。 添加文档 source 目录下创建 markdown 文件，例如： 1 2 3 4 5 6 7 --- title: Lorem Ipsum --- # Lorem Ipsum Lorem ipsum 也可以创建文档子目录，例如 source/usage 。 Sidebar source 目录下的 _data 目录下的 navigation.yaml 设置 sidebar 和其他的一些配置。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 logo: text: My Documentation type: link path: index.html main: - text: PROJECTS type: label - text: My Awesome Projects type: link path: projects/my-awesome-project.html children: - text: My Awesome Projects Page 1 type: link path: projects/my-awesome-project-page-1.html logo : navigation Logo main : left sidebar 对于每个导航项，必须定义一个 type ，并根据类型定义 text 和 path 等其他属性。 每个导航项，也可以定义一个 children ，这个属性可以嵌套导航项。 type type 有两种类型： label : 导航项的标签 link : 导航项下级文档 link link 类型的导航项的 path 的值是文件的路径，但注意扩展名为 .html 。 Favicon 1 2 theme_config: favicon: images/favicon.ico"},"theme/theme-usage.html#使用文档主题":{"title":"&#x4F7F;&#x7528;&#x6587;&#x6863;&#x4E3B;&#x9898;","path":"\\golang-learn\\theme\\theme-usage.html#使用文档主题","body":"&#x672C;&#x6587;&#x6863;&#x4F7F;&#x7528; Hexo Doc Theme &#x642D;&#x5EFA;&#x3002;"},"theme/theme-usage.html#Quick-Start":{"title":"Quick Start","path":"\\golang-learn\\theme\\theme-usage.html#Quick-Start","body":"&#x83B7;&#x53D6;&#x6E90;&#x7801; 1 $ git clone git@github.com:zalando-incubator/hexo-theme-doc-seed.git hexo-theme-doc-seed &#x7684;&#x4EE5;&#x4E0B;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;&#x9879;&#x76EE; root &#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x4F8B;&#x5982; kubernetes-learn &#xFF1A; source &#x76EE;&#x5F55; _data &#x76EE;&#x5F55; images &#x76EE;&#x5F55; package.json _config.yaml .zappr.yaml &#x5B89;&#x88C5;&#x4F9D;&#x8D56; 1 $ yarn &#x4FEE;&#x6539; package.json &#xFF0C;&#x5426;&#x5219; hexo server &#x6216;&#x8005; hexo s &#x53EF;&#x80FD;&#x4F1A;&#x627E;&#x4E0D;&#x5230;&#x547D;&#x4EE4;&#x3002; 1 2 3 4 5 6 hexo : { version : 3.9.0 }, scripts : { start : hexo s -p 8082 }, &#x4FEE;&#x6539; _config.yml 1 2 3 4 5 6 7 8 9 10 11 12 theme: ../node_modules/hexo-theme-doc # &#x5982;&#x679C;&#x4F60;&#x7684;&#x7F51;&#x7AD9;&#x5B58;&#x653E;&#x5728;&#x5B50;&#x76EE;&#x5F55;&#x4E2D;&#xFF0C;&#x4F8B;&#x5982; http://yoursite.com/blog # &#x5219; url &#x8BBE;&#x4E3A; http://yoursite.com/blog &#x5E76;&#x628A; root &#x8BBE;&#x4E3A; /blog/ url: http://www.shipengqi.top/kubernetes-learn root: /kubernetes-learn/ # deploy deploy: - type: git repo: git@github.com:shipengqi/kubernetes-learn.git branch: gh-pages &#x542F;&#x52A8;&#x5F00;&#x53D1;&#x670D;&#x52A1;&#xFF0C;&#x8BBF;&#x95EE; http://localhost:8082 &#x3002; 1 $ yarn start"},"theme/theme-usage.html#Index":{"title":"Index","path":"\\golang-learn\\theme\\theme-usage.html#Index","body":"source &#x76EE;&#x5F55;&#x4E0B;&#x521B;&#x5EFA; index.md &#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x4E2A; index.md &#x6587;&#x4EF6;&#x5C31;&#x662F;&#x6587;&#x6863;&#x9996;&#x9875;&#x3002;"},"theme/theme-usage.html#添加文档":{"title":"&#x6DFB;&#x52A0;&#x6587;&#x6863;","path":"\\golang-learn\\theme\\theme-usage.html#添加文档","body":"source &#x76EE;&#x5F55;&#x4E0B;&#x521B;&#x5EFA; markdown &#x6587;&#x4EF6;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 --- title: Lorem Ipsum --- # Lorem Ipsum Lorem ipsum &#x4E5F;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x6587;&#x6863;&#x5B50;&#x76EE;&#x5F55;&#xFF0C;&#x4F8B;&#x5982; source/usage &#x3002;"},"theme/theme-usage.html#Sidebar":{"title":"Sidebar","path":"\\golang-learn\\theme\\theme-usage.html#Sidebar","body":"source &#x76EE;&#x5F55;&#x4E0B;&#x7684; _data &#x76EE;&#x5F55;&#x4E0B;&#x7684; navigation.yaml &#x8BBE;&#x7F6E; sidebar &#x548C;&#x5176;&#x4ED6;&#x7684;&#x4E00;&#x4E9B;&#x914D;&#x7F6E;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 logo: text: My Documentation type: link path: index.html main: - text: PROJECTS type: label - text: My Awesome Projects type: link path: projects/my-awesome-project.html children: - text: My Awesome Projects Page 1 type: link path: projects/my-awesome-project-page-1.html logo : navigation Logo main : left sidebar &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x5BFC;&#x822A;&#x9879;&#xFF0C;&#x5FC5;&#x987B;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A; type &#xFF0C;&#x5E76;&#x6839;&#x636E;&#x7C7B;&#x578B;&#x5B9A;&#x4E49; text &#x548C; path &#x7B49;&#x5176;&#x4ED6;&#x5C5E;&#x6027;&#x3002; &#x6BCF;&#x4E2A;&#x5BFC;&#x822A;&#x9879;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A; children &#xFF0C;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x53EF;&#x4EE5;&#x5D4C;&#x5957;&#x5BFC;&#x822A;&#x9879;&#x3002; type type &#x6709;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#xFF1A; label : &#x5BFC;&#x822A;&#x9879;&#x7684;&#x6807;&#x7B7E; link : &#x5BFC;&#x822A;&#x9879;&#x4E0B;&#x7EA7;&#x6587;&#x6863; link link &#x7C7B;&#x578B;&#x7684;&#x5BFC;&#x822A;&#x9879;&#x7684; path &#x7684;&#x503C;&#x662F;&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x4F46;&#x6CE8;&#x610F;&#x6269;&#x5C55;&#x540D;&#x4E3A; .html &#x3002;"},"theme/theme-usage.html#Favicon":{"title":"Favicon","path":"\\golang-learn\\theme\\theme-usage.html#Favicon","body":"1 2 theme_config: favicon: images/favicon.ico"},"commands/build.html":{"title":"","path":"\\golang-learn\\commands\\build.html","body":"命令 工具 Go 命令： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 $ go Go is a tool for managing Go source code. Usage: go command [arguments] The commands are: build compile packages and dependencies clean remove object files and cached files doc show documentation for package or symbol env print Go environment information bug start a bug report fix update packages to use new APIs fmt gofmt (reformat) package sources generate generate Go files by processing source get download and install packages and dependencies install compile and install packages and dependencies list list packages run compile and run Go program test test packages tool run specified go tool version print Go version vet report likely mistakes in packages Use \"go help [command]\" for more information about a command . Additional help topics: c calling between Go and C buildmode build modes cache build and test caching filetype file types gopath GOPATH environment variable environment environment variables importpath import path syntax packages package lists testflag testing flags testfunc testing functions Use \"go help [topic]\" for more information about that topic. 下载包 使用 go get 命令下载一个包。如 go get github.com/golang/lint/golint 下载了 golint 包， src 目录下会有 github.com/golang/lint/golint 包目录。 bin 目录下可以看到 golint 可执行程序。 go get 本质上可以理解为首先第一步是通过源码工具 clone 代码到 src 下面，然后执行 go install 。 OPTIONS -u 保证每个包是最新版本。 构建包 主要用于编译代码，使用 go build 命令编译，命令行参数指定的每个包。 有两种情况： main 包， go build 将调用链接器在当前目录创建一个可执行程序，以导入路径的最后一段作为可执行程序的名字。 如果包是一个库，则忽略输出结果；这可以用于检测包是可以正确编译的。 被编译的包会被保存到 $GOPATH/pkg 目录下，目录路径和 src 目录路径对应，可执行程序被保存到 $GOPATH/bin 目录。 OPTIONS -o 指定输出的文件名，可以带上路径，例如 go build -o a/b/c -i 安装相应的包，编译并且 go install -a 更新全部已经是最新的包的，但是对标准包不适用 -n 把需要执行的编译命令打印出来，但是不执行，这样就可以很容易的知道底层是如何运行的 -p n 指定可以并行可运行的编译数目，默认是CPU数目 -race 开启编译的时候自动检测数据竞争的情况，目前只支持64位的机器 -v 打印出来我们正在编译的包名 -work 打印出来编译时候的临时文件夹名称，并且如果已经存在的话就不要删除 -x 打印出来执行的命令，其实就是和-n的结果类似，只是这个会执行 -ccflags &#39;arg list&#39; 传递参数给5c, 6c, 8c 调用 -compiler name 指定相应的编译器，gccgo还是gc -gccgoflags &#39;arg list&#39; 传递参数给gccgo编译连接调用 -gcflags &#39;arg list&#39; 传递参数给5g, 6g, 8g 调用 -installsuffix suffix 为了和默认的安装包区别开来，采用这个前缀来重新安装那些依赖的包，-race的时候默认已经是-installsuffix race,大家可以通过-n命令来验证 -ldflags &#39;flag list&#39; 传递参数给5l, 6l, 8l 调用 -tags &#39;tag list&#39; 设置在编译的时候可以适配的那些tag，详细的tag限制参考里面的 Build Constraints 运行 go run 命令实际上是结合了构建和运行的两个步骤。 install go install 命令和 go build 命令相似，不同的是 go install 会保存每个包的编译成果，并把 main 包生产的可执行程序放到 bin 目录， 这样就可以在任意目录执行编译好的命令。 clean go clean 用来移除当前源码包和关联源码包里面编译生成的文件。文件包括： 1 2 3 4 5 6 7 8 9 10 11 _obj/ 旧的object目录，由Makefiles遗留 _test/ 旧的test目录，由Makefiles遗留 _testmain.go 旧的gotest文件，由Makefiles遗留 test.out 旧的test记录，由Makefiles遗留 build.out 旧的test记录，由Makefiles遗留 *.[568ao] object文件，由Makefiles遗留 DIR(.exe) 由go build产生 DIR.test(.exe) 由go test -c产生 MAINFILE(.exe) 由go build MAINFILE.go产生 *.so 由 SWIG 产生 一般都是利用这个命令清除编译文件。 OPTIONS -i 清除关联的安装的包和可运行文件，也就是通过 go install 安装的文件 -n 把需要执行的清除命令打印出来，但是不执行，这样就可以很容易的知道底层是如何运行的 -r 循环的清除在 import 中引入的包 -x 打印出来执行的详细命令，其实就是 -n 打印的执行版本 go fmt go fmt 命令 它可以帮你格式化你写好的代码文件，使你写代码的时候不需要关心格式，你只需要在写完之后执行 go fmt 文件名.go ， 你的代码就被修改成了标准格式。 OPTIONS -l 显示那些需要格式化的文件 -w 把改写后的内容直接写入到文件中，而不是作为结果打印到标准输出。 -r 添加形如“a[b:len(a)] - a[b:]”的重写规则，方便我们做批量替换 -s 简化文件中的代码 -d 显示格式化前后的diff而不是写入文件，默认是 false -e 打印所有的语法错误到标准输出。如果不使用此标记，则只会打印不同行的前10个错误。 -cpuprofile 支持调试模式，写入相应的cpufile到指定的文件 包文档 注释 在代码中添加注释，用于生成文档。Go 中的文档注释一般是完整的句子， 第一行通常是摘要说明，以被注释者的名字开头。 注释中函数的参数或其它的标识符并不需要额外的引号或其它标记注明。例如 fmt.Fprintf 的文档注释： 1 2 3 // Fprintf formats according to a format specifier and writes to w. // It returns the number of bytes written and any write error encountered. func Fprintf (w io.Writer, format string , a ... interface ) ( int , error) 如果注释后仅跟着包声明语句，那注释对应整个包的文档。包文档注释只能有一个。可以在任意的源文件中。 但是如果包的注释较长，一般会放到一个叫做 doc.go 的源文件中。 go doc 命令 go doc 打印文档。 1 2 3 4 5 6 7 8 # 指定包 go doc time # 指定包成员 go doc time.Since # 一个方法 go doc time.Duration.Seconds godoc服务 godoc 服务提供可以相互交叉引用的 HTML 页面，godoc的 在线服务 。包含了成千上万的开源包的检索工具。 也可以在启动本地的 godoc 服务： 1 2 # 在工作区目录下运行 godoc -http :8080 然后访问 http://localhost:8000/pkg 。 内部包 Go 的构建工具对包含 internal 名字的路径段的包导入路径做了特殊处理。这种包叫 internal 包。如 net/http/internal/chunked 。 一个 internal 包只能被和 internal 目录有同一个父目录的包所导入。如： net/http/internal/chunked 只能被 net/http 包或者 net/http 下的包导入。 什么时候使用 internal 包？ 当我们并不想将内部的子包结构暴露出去。同时，我们可能还希望在内部子包之间共享一些通用的处理包时。 查询包 使用 go list 命令查询可用包的信息。如 go list github.com/go-sql-driver/mysql 1 2 3 4 5 6 7 8 9 10 11 # 列出工作区中的所有包 go list ... # 列出指定目录下的所有包 go list gopl.io/ch3/... # 某个主题相关的所有包 go list ...xml... # 获取包完整的元信息 -json 参数表示用JSON格式打印每个包的元信息 go list -json hash 查看 Go 相关环境变量 使用 go env 命令查看 Go 所有相关的环境变量。 版本 go version 查看go当前的版本"},"commands/build.html#命令":{"title":"&#x547D;&#x4EE4;","path":"\\golang-learn\\commands\\build.html#命令","body":""},"commands/build.html#工具":{"title":"&#x5DE5;&#x5177;","path":"\\golang-learn\\commands\\build.html#工具","body":"Go &#x547D;&#x4EE4;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 $ go Go is a tool for managing Go source code. Usage: go command [arguments] The commands are: build compile packages and dependencies clean remove object files and cached files doc show documentation for package or symbol env print Go environment information bug start a bug report fix update packages to use new APIs fmt gofmt (reformat) package sources generate generate Go files by processing source get download and install packages and dependencies install compile and install packages and dependencies list list packages run compile and run Go program test test packages tool run specified go tool version print Go version vet report likely mistakes in packages Use go help [command] for more information about a command . Additional help topics: c calling between Go and C buildmode build modes cache build and test caching filetype file types gopath GOPATH environment variable environment environment variables importpath import path syntax packages package lists testflag testing flags testfunc testing functions Use go help [topic] for more information about that topic. &#x4E0B;&#x8F7D;&#x5305; &#x4F7F;&#x7528; go get &#x547D;&#x4EE4;&#x4E0B;&#x8F7D;&#x4E00;&#x4E2A;&#x5305;&#x3002;&#x5982; go get github.com/golang/lint/golint &#x4E0B;&#x8F7D;&#x4E86; golint &#x5305;&#xFF0C; src &#x76EE;&#x5F55;&#x4E0B;&#x4F1A;&#x6709; github.com/golang/lint/golint &#x5305;&#x76EE;&#x5F55;&#x3002; bin &#x76EE;&#x5F55;&#x4E0B;&#x53EF;&#x4EE5;&#x770B;&#x5230; golint &#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x3002; go get &#x672C;&#x8D28;&#x4E0A;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x9996;&#x5148;&#x7B2C;&#x4E00;&#x6B65;&#x662F;&#x901A;&#x8FC7;&#x6E90;&#x7801;&#x5DE5;&#x5177; clone &#x4EE3;&#x7801;&#x5230; src &#x4E0B;&#x9762;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C; go install &#x3002; OPTIONS -u &#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x5305;&#x662F;&#x6700;&#x65B0;&#x7248;&#x672C;&#x3002; &#x6784;&#x5EFA;&#x5305; &#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x7F16;&#x8BD1;&#x4EE3;&#x7801;&#xFF0C;&#x4F7F;&#x7528; go build &#x547D;&#x4EE4;&#x7F16;&#x8BD1;&#xFF0C;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x7684;&#x6BCF;&#x4E2A;&#x5305;&#x3002; &#x6709;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF1A; main &#x5305;&#xFF0C; go build &#x5C06;&#x8C03;&#x7528;&#x94FE;&#x63A5;&#x5668;&#x5728;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#xFF0C;&#x4EE5;&#x5BFC;&#x5165;&#x8DEF;&#x5F84;&#x7684;&#x6700;&#x540E;&#x4E00;&#x6BB5;&#x4F5C;&#x4E3A;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x7684;&#x540D;&#x5B57;&#x3002; &#x5982;&#x679C;&#x5305;&#x662F;&#x4E00;&#x4E2A;&#x5E93;&#xFF0C;&#x5219;&#x5FFD;&#x7565;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1B;&#x8FD9;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x68C0;&#x6D4B;&#x5305;&#x662F;&#x53EF;&#x4EE5;&#x6B63;&#x786E;&#x7F16;&#x8BD1;&#x7684;&#x3002; &#x88AB;&#x7F16;&#x8BD1;&#x7684;&#x5305;&#x4F1A;&#x88AB;&#x4FDD;&#x5B58;&#x5230; $GOPATH/pkg &#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x76EE;&#x5F55;&#x8DEF;&#x5F84;&#x548C; src &#x76EE;&#x5F55;&#x8DEF;&#x5F84;&#x5BF9;&#x5E94;&#xFF0C;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x88AB;&#x4FDD;&#x5B58;&#x5230; $GOPATH/bin &#x76EE;&#x5F55;&#x3002; OPTIONS -o &#x6307;&#x5B9A;&#x8F93;&#x51FA;&#x7684;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x53EF;&#x4EE5;&#x5E26;&#x4E0A;&#x8DEF;&#x5F84;&#xFF0C;&#x4F8B;&#x5982; go build -o a/b/c -i &#x5B89;&#x88C5;&#x76F8;&#x5E94;&#x7684;&#x5305;&#xFF0C;&#x7F16;&#x8BD1;&#x5E76;&#x4E14; go install -a &#x66F4;&#x65B0;&#x5168;&#x90E8;&#x5DF2;&#x7ECF;&#x662F;&#x6700;&#x65B0;&#x7684;&#x5305;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x6807;&#x51C6;&#x5305;&#x4E0D;&#x9002;&#x7528; -n &#x628A;&#x9700;&#x8981;&#x6267;&#x884C;&#x7684;&#x7F16;&#x8BD1;&#x547D;&#x4EE4;&#x6253;&#x5370;&#x51FA;&#x6765;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x7684;&#x77E5;&#x9053;&#x5E95;&#x5C42;&#x662F;&#x5982;&#x4F55;&#x8FD0;&#x884C;&#x7684; -p n &#x6307;&#x5B9A;&#x53EF;&#x4EE5;&#x5E76;&#x884C;&#x53EF;&#x8FD0;&#x884C;&#x7684;&#x7F16;&#x8BD1;&#x6570;&#x76EE;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;CPU&#x6570;&#x76EE; -race &#x5F00;&#x542F;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x81EA;&#x52A8;&#x68C0;&#x6D4B;&#x6570;&#x636E;&#x7ADE;&#x4E89;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x76EE;&#x524D;&#x53EA;&#x652F;&#x6301;64&#x4F4D;&#x7684;&#x673A;&#x5668; -v &#x6253;&#x5370;&#x51FA;&#x6765;&#x6211;&#x4EEC;&#x6B63;&#x5728;&#x7F16;&#x8BD1;&#x7684;&#x5305;&#x540D; -work &#x6253;&#x5370;&#x51FA;&#x6765;&#x7F16;&#x8BD1;&#x65F6;&#x5019;&#x7684;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x5939;&#x540D;&#x79F0;&#xFF0C;&#x5E76;&#x4E14;&#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#x5C31;&#x4E0D;&#x8981;&#x5220;&#x9664; -x &#x6253;&#x5370;&#x51FA;&#x6765;&#x6267;&#x884C;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x548C;-n&#x7684;&#x7ED3;&#x679C;&#x7C7B;&#x4F3C;&#xFF0C;&#x53EA;&#x662F;&#x8FD9;&#x4E2A;&#x4F1A;&#x6267;&#x884C; -ccflags &apos;arg list&apos; &#x4F20;&#x9012;&#x53C2;&#x6570;&#x7ED9;5c, 6c, 8c &#x8C03;&#x7528; -compiler name &#x6307;&#x5B9A;&#x76F8;&#x5E94;&#x7684;&#x7F16;&#x8BD1;&#x5668;&#xFF0C;gccgo&#x8FD8;&#x662F;gc -gccgoflags &apos;arg list&apos; &#x4F20;&#x9012;&#x53C2;&#x6570;&#x7ED9;gccgo&#x7F16;&#x8BD1;&#x8FDE;&#x63A5;&#x8C03;&#x7528; -gcflags &apos;arg list&apos; &#x4F20;&#x9012;&#x53C2;&#x6570;&#x7ED9;5g, 6g, 8g &#x8C03;&#x7528; -installsuffix suffix &#x4E3A;&#x4E86;&#x548C;&#x9ED8;&#x8BA4;&#x7684;&#x5B89;&#x88C5;&#x5305;&#x533A;&#x522B;&#x5F00;&#x6765;&#xFF0C;&#x91C7;&#x7528;&#x8FD9;&#x4E2A;&#x524D;&#x7F00;&#x6765;&#x91CD;&#x65B0;&#x5B89;&#x88C5;&#x90A3;&#x4E9B;&#x4F9D;&#x8D56;&#x7684;&#x5305;&#xFF0C;-race&#x7684;&#x65F6;&#x5019;&#x9ED8;&#x8BA4;&#x5DF2;&#x7ECF;&#x662F;-installsuffix race,&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;-n&#x547D;&#x4EE4;&#x6765;&#x9A8C;&#x8BC1; -ldflags &apos;flag list&apos; &#x4F20;&#x9012;&#x53C2;&#x6570;&#x7ED9;5l, 6l, 8l &#x8C03;&#x7528; -tags &apos;tag list&apos; &#x8BBE;&#x7F6E;&#x5728;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x9002;&#x914D;&#x7684;&#x90A3;&#x4E9B;tag&#xFF0C;&#x8BE6;&#x7EC6;&#x7684;tag&#x9650;&#x5236;&#x53C2;&#x8003;&#x91CC;&#x9762;&#x7684; Build Constraints &#x8FD0;&#x884C; go run &#x547D;&#x4EE4;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x7ED3;&#x5408;&#x4E86;&#x6784;&#x5EFA;&#x548C;&#x8FD0;&#x884C;&#x7684;&#x4E24;&#x4E2A;&#x6B65;&#x9AA4;&#x3002; install go install &#x547D;&#x4EE4;&#x548C; go build &#x547D;&#x4EE4;&#x76F8;&#x4F3C;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x662F; go install &#x4F1A;&#x4FDD;&#x5B58;&#x6BCF;&#x4E2A;&#x5305;&#x7684;&#x7F16;&#x8BD1;&#x6210;&#x679C;&#xFF0C;&#x5E76;&#x628A; main &#x5305;&#x751F;&#x4EA7;&#x7684;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x653E;&#x5230; bin &#x76EE;&#x5F55;&#xFF0C; &#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x610F;&#x76EE;&#x5F55;&#x6267;&#x884C;&#x7F16;&#x8BD1;&#x597D;&#x7684;&#x547D;&#x4EE4;&#x3002; clean go clean &#x7528;&#x6765;&#x79FB;&#x9664;&#x5F53;&#x524D;&#x6E90;&#x7801;&#x5305;&#x548C;&#x5173;&#x8054;&#x6E90;&#x7801;&#x5305;&#x91CC;&#x9762;&#x7F16;&#x8BD1;&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 _obj/ &#x65E7;&#x7684;object&#x76EE;&#x5F55;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; _test/ &#x65E7;&#x7684;test&#x76EE;&#x5F55;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; _testmain.go &#x65E7;&#x7684;gotest&#x6587;&#x4EF6;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; test.out &#x65E7;&#x7684;test&#x8BB0;&#x5F55;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; build.out &#x65E7;&#x7684;test&#x8BB0;&#x5F55;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; *.[568ao] object&#x6587;&#x4EF6;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; DIR(.exe) &#x7531;go build&#x4EA7;&#x751F; DIR.test(.exe) &#x7531;go test -c&#x4EA7;&#x751F; MAINFILE(.exe) &#x7531;go build MAINFILE.go&#x4EA7;&#x751F; *.so &#x7531; SWIG &#x4EA7;&#x751F; &#x4E00;&#x822C;&#x90FD;&#x662F;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x6E05;&#x9664;&#x7F16;&#x8BD1;&#x6587;&#x4EF6;&#x3002; OPTIONS -i &#x6E05;&#x9664;&#x5173;&#x8054;&#x7684;&#x5B89;&#x88C5;&#x7684;&#x5305;&#x548C;&#x53EF;&#x8FD0;&#x884C;&#x6587;&#x4EF6;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x901A;&#x8FC7; go install &#x5B89;&#x88C5;&#x7684;&#x6587;&#x4EF6; -n &#x628A;&#x9700;&#x8981;&#x6267;&#x884C;&#x7684;&#x6E05;&#x9664;&#x547D;&#x4EE4;&#x6253;&#x5370;&#x51FA;&#x6765;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x7684;&#x77E5;&#x9053;&#x5E95;&#x5C42;&#x662F;&#x5982;&#x4F55;&#x8FD0;&#x884C;&#x7684; -r &#x5FAA;&#x73AF;&#x7684;&#x6E05;&#x9664;&#x5728; import &#x4E2D;&#x5F15;&#x5165;&#x7684;&#x5305; -x &#x6253;&#x5370;&#x51FA;&#x6765;&#x6267;&#x884C;&#x7684;&#x8BE6;&#x7EC6;&#x547D;&#x4EE4;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F; -n &#x6253;&#x5370;&#x7684;&#x6267;&#x884C;&#x7248;&#x672C; go fmt go fmt &#x547D;&#x4EE4; &#x5B83;&#x53EF;&#x4EE5;&#x5E2E;&#x4F60;&#x683C;&#x5F0F;&#x5316;&#x4F60;&#x5199;&#x597D;&#x7684;&#x4EE3;&#x7801;&#x6587;&#x4EF6;&#xFF0C;&#x4F7F;&#x4F60;&#x5199;&#x4EE3;&#x7801;&#x7684;&#x65F6;&#x5019;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x5FC3;&#x683C;&#x5F0F;&#xFF0C;&#x4F60;&#x53EA;&#x9700;&#x8981;&#x5728;&#x5199;&#x5B8C;&#x4E4B;&#x540E;&#x6267;&#x884C; go fmt &#x6587;&#x4EF6;&#x540D;.go &#xFF0C; &#x4F60;&#x7684;&#x4EE3;&#x7801;&#x5C31;&#x88AB;&#x4FEE;&#x6539;&#x6210;&#x4E86;&#x6807;&#x51C6;&#x683C;&#x5F0F;&#x3002; OPTIONS -l &#x663E;&#x793A;&#x90A3;&#x4E9B;&#x9700;&#x8981;&#x683C;&#x5F0F;&#x5316;&#x7684;&#x6587;&#x4EF6; -w &#x628A;&#x6539;&#x5199;&#x540E;&#x7684;&#x5185;&#x5BB9;&#x76F4;&#x63A5;&#x5199;&#x5165;&#x5230;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C;&#x6253;&#x5370;&#x5230;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#x3002; -r &#x6DFB;&#x52A0;&#x5F62;&#x5982;&#x201C;a[b:len(a)] - a[b:]&#x201D;&#x7684;&#x91CD;&#x5199;&#x89C4;&#x5219;&#xFF0C;&#x65B9;&#x4FBF;&#x6211;&#x4EEC;&#x505A;&#x6279;&#x91CF;&#x66FF;&#x6362; -s &#x7B80;&#x5316;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x4EE3;&#x7801; -d &#x663E;&#x793A;&#x683C;&#x5F0F;&#x5316;&#x524D;&#x540E;&#x7684;diff&#x800C;&#x4E0D;&#x662F;&#x5199;&#x5165;&#x6587;&#x4EF6;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F; false -e &#x6253;&#x5370;&#x6240;&#x6709;&#x7684;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;&#x5230;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x4F7F;&#x7528;&#x6B64;&#x6807;&#x8BB0;&#xFF0C;&#x5219;&#x53EA;&#x4F1A;&#x6253;&#x5370;&#x4E0D;&#x540C;&#x884C;&#x7684;&#x524D;10&#x4E2A;&#x9519;&#x8BEF;&#x3002; -cpuprofile &#x652F;&#x6301;&#x8C03;&#x8BD5;&#x6A21;&#x5F0F;&#xFF0C;&#x5199;&#x5165;&#x76F8;&#x5E94;&#x7684;cpufile&#x5230;&#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6; &#x5305;&#x6587;&#x6863; &#x6CE8;&#x91CA; &#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x6DFB;&#x52A0;&#x6CE8;&#x91CA;&#xFF0C;&#x7528;&#x4E8E;&#x751F;&#x6210;&#x6587;&#x6863;&#x3002;Go &#x4E2D;&#x7684;&#x6587;&#x6863;&#x6CE8;&#x91CA;&#x4E00;&#x822C;&#x662F;&#x5B8C;&#x6574;&#x7684;&#x53E5;&#x5B50;&#xFF0C; &#x7B2C;&#x4E00;&#x884C;&#x901A;&#x5E38;&#x662F;&#x6458;&#x8981;&#x8BF4;&#x660E;&#xFF0C;&#x4EE5;&#x88AB;&#x6CE8;&#x91CA;&#x8005;&#x7684;&#x540D;&#x5B57;&#x5F00;&#x5934;&#x3002; &#x6CE8;&#x91CA;&#x4E2D;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x6216;&#x5176;&#x5B83;&#x7684;&#x6807;&#x8BC6;&#x7B26;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x989D;&#x5916;&#x7684;&#x5F15;&#x53F7;&#x6216;&#x5176;&#x5B83;&#x6807;&#x8BB0;&#x6CE8;&#x660E;&#x3002;&#x4F8B;&#x5982; fmt.Fprintf &#x7684;&#x6587;&#x6863;&#x6CE8;&#x91CA;&#xFF1A; 1 2 3 // Fprintf formats according to a format specifier and writes to w. // It returns the number of bytes written and any write error encountered. func Fprintf (w io.Writer, format string , a ... interface {}) ( int , error) &#x5982;&#x679C;&#x6CE8;&#x91CA;&#x540E;&#x4EC5;&#x8DDF;&#x7740;&#x5305;&#x58F0;&#x660E;&#x8BED;&#x53E5;&#xFF0C;&#x90A3;&#x6CE8;&#x91CA;&#x5BF9;&#x5E94;&#x6574;&#x4E2A;&#x5305;&#x7684;&#x6587;&#x6863;&#x3002;&#x5305;&#x6587;&#x6863;&#x6CE8;&#x91CA;&#x53EA;&#x80FD;&#x6709;&#x4E00;&#x4E2A;&#x3002;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x610F;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x3002; &#x4F46;&#x662F;&#x5982;&#x679C;&#x5305;&#x7684;&#x6CE8;&#x91CA;&#x8F83;&#x957F;&#xFF0C;&#x4E00;&#x822C;&#x4F1A;&#x653E;&#x5230;&#x4E00;&#x4E2A;&#x53EB;&#x505A; doc.go &#x7684;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x3002; go doc &#x547D;&#x4EE4; go doc &#x6253;&#x5370;&#x6587;&#x6863;&#x3002; 1 2 3 4 5 6 7 8 # &#x6307;&#x5B9A;&#x5305; go doc time # &#x6307;&#x5B9A;&#x5305;&#x6210;&#x5458; go doc time.Since # &#x4E00;&#x4E2A;&#x65B9;&#x6CD5; go doc time.Duration.Seconds godoc&#x670D;&#x52A1; godoc &#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x53EF;&#x4EE5;&#x76F8;&#x4E92;&#x4EA4;&#x53C9;&#x5F15;&#x7528;&#x7684; HTML &#x9875;&#x9762;&#xFF0C;godoc&#x7684; &#x5728;&#x7EBF;&#x670D;&#x52A1; &#x3002;&#x5305;&#x542B;&#x4E86;&#x6210;&#x5343;&#x4E0A;&#x4E07;&#x7684;&#x5F00;&#x6E90;&#x5305;&#x7684;&#x68C0;&#x7D22;&#x5DE5;&#x5177;&#x3002; &#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x542F;&#x52A8;&#x672C;&#x5730;&#x7684; godoc &#x670D;&#x52A1;&#xFF1A; 1 2 # &#x5728;&#x5DE5;&#x4F5C;&#x533A;&#x76EE;&#x5F55;&#x4E0B;&#x8FD0;&#x884C; godoc -http :8080 &#x7136;&#x540E;&#x8BBF;&#x95EE; http://localhost:8000/pkg &#x3002; &#x5185;&#x90E8;&#x5305; Go &#x7684;&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x5BF9;&#x5305;&#x542B; internal &#x540D;&#x5B57;&#x7684;&#x8DEF;&#x5F84;&#x6BB5;&#x7684;&#x5305;&#x5BFC;&#x5165;&#x8DEF;&#x5F84;&#x505A;&#x4E86;&#x7279;&#x6B8A;&#x5904;&#x7406;&#x3002;&#x8FD9;&#x79CD;&#x5305;&#x53EB; internal &#x5305;&#x3002;&#x5982; net/http/internal/chunked &#x3002; &#x4E00;&#x4E2A; internal &#x5305;&#x53EA;&#x80FD;&#x88AB;&#x548C; internal &#x76EE;&#x5F55;&#x6709;&#x540C;&#x4E00;&#x4E2A;&#x7236;&#x76EE;&#x5F55;&#x7684;&#x5305;&#x6240;&#x5BFC;&#x5165;&#x3002;&#x5982;&#xFF1A; net/http/internal/chunked &#x53EA;&#x80FD;&#x88AB; net/http &#x5305;&#x6216;&#x8005; net/http &#x4E0B;&#x7684;&#x5305;&#x5BFC;&#x5165;&#x3002; &#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x4F7F;&#x7528; internal &#x5305;&#xFF1F; &#x5F53;&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x60F3;&#x5C06;&#x5185;&#x90E8;&#x7684;&#x5B50;&#x5305;&#x7ED3;&#x6784;&#x66B4;&#x9732;&#x51FA;&#x53BB;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x8FD8;&#x5E0C;&#x671B;&#x5728;&#x5185;&#x90E8;&#x5B50;&#x5305;&#x4E4B;&#x95F4;&#x5171;&#x4EAB;&#x4E00;&#x4E9B;&#x901A;&#x7528;&#x7684;&#x5904;&#x7406;&#x5305;&#x65F6;&#x3002; &#x67E5;&#x8BE2;&#x5305; &#x4F7F;&#x7528; go list &#x547D;&#x4EE4;&#x67E5;&#x8BE2;&#x53EF;&#x7528;&#x5305;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x5982; go list github.com/go-sql-driver/mysql 1 2 3 4 5 6 7 8 9 10 11 # &#x5217;&#x51FA;&#x5DE5;&#x4F5C;&#x533A;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x5305; go list ... # &#x5217;&#x51FA;&#x6307;&#x5B9A;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6240;&#x6709;&#x5305; go list gopl.io/ch3/... # &#x67D0;&#x4E2A;&#x4E3B;&#x9898;&#x76F8;&#x5173;&#x7684;&#x6240;&#x6709;&#x5305; go list ...xml... # &#x83B7;&#x53D6;&#x5305;&#x5B8C;&#x6574;&#x7684;&#x5143;&#x4FE1;&#x606F; -json &#x53C2;&#x6570;&#x8868;&#x793A;&#x7528;JSON&#x683C;&#x5F0F;&#x6253;&#x5370;&#x6BCF;&#x4E2A;&#x5305;&#x7684;&#x5143;&#x4FE1;&#x606F; go list -json hash &#x67E5;&#x770B; Go &#x76F8;&#x5173;&#x73AF;&#x5883;&#x53D8;&#x91CF; &#x4F7F;&#x7528; go env &#x547D;&#x4EE4;&#x67E5;&#x770B; Go &#x6240;&#x6709;&#x76F8;&#x5173;&#x7684;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x3002; &#x7248;&#x672C; go version &#x67E5;&#x770B;go&#x5F53;&#x524D;&#x7684;&#x7248;&#x672C;"},"concurrent/channel.html":{"title":"channel","path":"\\golang-learn\\concurrent\\channel.html","body":"channel 1 2 Don’t communicate by sharing memory; share memory by communicating. （不要通过共享内存来通信，而应该通过通信来共享内存。） 这是作为 Go 语言最重要的编程理念。 通道类型的值是 并发安全 的，这也是 Go 语言自带的、唯一一个可以满足并发安全性的类型 。 channels 是 goroutine 之间的通信机制。 goroutine 通过 channel 向另一个 goroutine 发送消息 channel 和 goroutine 结合，可以实现用通信代替共享内存的 CSP 模型。 创建 channel ： 1 2 3 ch := make ( chan int ) ch = make ( chan int , 3 ) // buffered channel with capacity 3 上面的代码中， int 代表这个 channel 要发送的数据的类型。第二个参数代表创建一带缓存的 channel ，容量为 3 。 channel 的零值是 nil 。 发送和接收两个操作使用 - 运算符，一个左尖括号紧接着一个减号形象地代表了元素值的传输方向： 1 2 3 4 5 6 7 // 发送一个值 ch - x // 将数据 push 到 channel // 接受一个值 x = -ch // 取出 channel 的值并复制给变量x -ch // 接受的值会被丢弃 close 使用 close 函数关闭 channel ， channel 关闭后不能再发送数据，但是可以接受已经发送成功的数据， 如果 channel 中没有数据，那么返回一个零值。 注意， close 函数不是一个清理操作，而是一个控制操作 ，在确定这个 channel 不会继续发送数据时调用。 因为关闭操作只用于断言不再向 channel 发送新的数据，所以只有在 “发送者” 所在的 goroutine 才会调用 close 函数 ， 因此对一个只接收的 channel 调用 close 将是一个编译错误。 使用 range 循环可直接在 channels 上面迭代。它依次从 channel 接收数据，当 channel 被关闭并且没有值可接收时 跳出循环。 1 2 3 4 5 6 7 naturals := make ( chan int ) for x := 0 ; x  100 ; x++  naturals - x  for x := range naturals  fmt.Println(x)  注意上面的代码会报 fatal error: all goroutines are asleep - deadlock! 。这个是死锁的错误，因为 range 不等到信 道关闭是不会结束读取的。也就是如果 channel 没有数据了，那么 range 就会阻塞当前 goroutine , 直到信道关闭，所以导 致了死锁 。 为了避免这种情况，对于有缓存的信道，显式地关闭信道: 1 2 3 4 5 6 7 8 9 10 11 ch := make ( chan int , 3 ) ch - 1 ch - 2 ch - 3 // 显式地关闭信道 close (ch) for v := range ch  fmt.Println(v)  无缓存 channel 无缓存 channel 也叫做同步 channel ，这是因为 如果一个 goroutine 基于一个无缓存 channel 发送数据，那么就会 阻塞，直到另一个 goroutine 在相同的 channel 上执行接收操作 。同样的， 如果一个 goroutine 基于一个无缓存 channel 先执行了接受操作，也会阻塞，直到另一个 goroutine 在相同的 channel 上执行发送操作 。在 channel 成功传输之后，两个 goroutine 之后的语句才会继续执行。 带缓存 channel 1 ch = make ( chan int , 3 ) 带缓存的 channel 内部持有一个元素队列。 make 函数创建 channel 时通过第二个参数指定队列的最大容量。 发送操作会向 channel 的缓存队列 push 元素，接收操作则是 pop 元素，如果队列被塞满了，那么发送操作将阻 塞直到另一个 goroutine 执行接收操作而释放了新的队列空间。 相反，如果 channel 是空的，接收操作将阻塞直到有另一个 goroutine 执行发送操作而向队列插入元素。 在大多数情况下，缓冲通道会作为收发双方的中间件。正如前文所述，元素值会先从发送方复制到缓冲通道，之后再由缓冲通道复制给接收方。 但是，当发送操作在执行的时候发现空的通道中，正好有等待的接收操作，那么它会直接把元素值复制给接收方。 单向 channel 当一个 channel 作为一个函数参数时，它一般总是被专门用于 只发送或者只接收 。 类型 chan- int 表示一个只发送 int 的 channel 。相反，类型 -chan int 表示一个只接收 int 的 channel 。 1 var uselessChan = make ( chan - int , 1 ) cap 和 len cap 函数可以获取 channel 内部缓存的容量。 len 函数可以获取 channel 内部缓存有效元素的个数。 1 2 3 4 5 6 7 8 9 ch = make ( chan int , 3 ) fmt.Println( cap (ch)) // 3 ch - \"A\" ch - \"B\" fmt.Println( len (ch)) // 2 fmt.Println(-ch) // A fmt.Println( len (ch)) // 1 通道的发送和接收操作的特性 对于同一个通道，发送操作之间是互斥的，接收操作之间也是互斥的。Go 语言的运行时系统（以下简称运行时系统）只会执行对同一个通 道的任意个发送操作中的某一个。直到这个元素值被完全复制进该通道之后，其他针对该通道的发送操作才可能被执行。 发送操作和接收操作中对元素值的处理都是不可分割的。发送操作要么还没复制元素值，要么已经复制完毕，绝不会出现只复制了一部分 的情况。接收操作在准备好元素值的副本之后，一定会删除掉通道中的原值，绝不会出现通道中仍有残留的情况。 发送操作在完全完成之前会被阻塞。接收操作也是如此。 元素值从外界进入通道时会被复制。更具体地说，进入通道的并不是在接收操作符右边的那个元素值，而是它的副本 。 对于通道中的同一个元素值来说，发送操作和接收操作之间也是互斥的。例如，虽然会出现，正在被复制进通道但还未复制完成的元素值， 但是这时它绝不会被想接收它的一方看到和取走 。 发送操作和接收操作在什么时候可能被长时间的阻塞 针对 缓冲通道 的情况。如果通道已满，那么对它的所有发送操作都会被阻塞，直到通道中有元素值被接收走。相对的，如果通道已空， 那么对它的所有接收操作都会被阻塞，直到通道中有新的元素值出现。这时，通道会通知最早等待的那个接收操作所在的 goroutine， 并使它再次执行接收操作。 对于 非缓冲通道 ，情况要简单一些。无论是发送操作还是接收操作，一开始执行就会被阻塞，直到配对的操作也开始执行，才会继续传递。 对于值为 nil 的通道，不论它的具体类型是什么，对它的发送操作和接收操作都会永久地处于阻塞状态 。它们所属的 goroutine 中的任何代码，都不再会被执行。注意，由于通道类型是引用类型，所以它的零值就是 nil 。 当我们只声明该类型的变量但没 有用 make 函数对它进行初始化时，该变量的值就会是 nil 。我们一定不要忘记初始化通道 ！ select 多路复用 select 语句是专为通道而设计的， 所以每个 case 表达式中都只能包含操作通道的表达式 ，比如接收表达式。 1 2 3 4 5 6 7 8 select  case communication clause : ... case communication clause : ... default : /* 可选 */ \t\t\t...  如果有多个 channel 需要接受消息，如果第一个 channel 没有消息发过来，那么程序会被阻塞，第二个 channel 的消息就也 无法接收了。这时候就需要使用 select 多路复用。 1 2 3 4 5 6 7 8 9 10 select  case -ch1: ... case x := -ch2: \t\t\t... \t case ch3 - y: \t ...\t\t default : \t\t\t...  每一个 case 代表一个通信操作，发送或者接收。 如果没有 case 可运行，它将阻塞，直到有 case 可运行 。 如果多个 case 同时满足条件， select 会 随机 地选择一个执行。 为了避免因为发送或者接收导致的阻塞，尤其是当 channel 没有准备好写或者读时。 default 可以设置当其它的操作 都不能够马上被处理时程序需要执行哪些逻辑 。 超时 我们可以利用 select 来设置超时，避免 goroutine 阻塞的情况： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 func main ()  \tc := make ( chan int ) \to := make ( chan bool ) \t go func ()  \t\t for  \t\t\t select  \t\t\t\t case v := - c: \t\t\t\t\tfmt. println (v) \t\t\t\t case - time.After( 5 * time.Second): \t\t\t\t\tfmt. println ( \"timeout\" ) \t\t\t\t\to - true \t\t\t\t\t break \t\t\t \t\t \t() \t- o  使用 select 语句的时候，需要注意的事情 如果加入了默认分支，那么无论涉及通道操作的表达式是否有阻塞， select 语句都不会被阻塞。如果那几个表达式都阻塞了，或者 说都没有满足求值的条件，那么默认分支就会被选中并执行。 如果没有加入默认分支，那么一旦所有的 case 表达式都没有满足求值条件，那么 select 语句就会被阻塞。 直到至少有一个 case 表达式满足条件为止。 还记得吗？我们可能会因为通道关闭了，而直接从通道接收到一个其元素类型的零值。所以，在很多时候，我们需要通过接收表达式 的第二个结果值来判断通道是否已经关闭。一旦发现某个通道关闭了，我们就应该及时地屏蔽掉对应的分支或者采取其他措施。这对 于程序逻辑和程序性能都是有好处的。 select 语句只能对其中的每一个 case 表达式各求值一次。所以，如果我们想连续或定时地操作其中的通道的话，就往往需要 通过在 for 语句中嵌入 select 语句的方式实现。但这时要注意， 简单地在 select 语句的分支中使用 break 语句，只能结 束当前的 select 语句的执行，而并不会对外层的 for 语句产生作用。这种错误的用法可能会让这个 for 语句无休止地运行下去 。 break 退出嵌套循环： 1 2 3 4 5 6 7 8 9 10 I: \t for i := 0 ; i  2 ; i++  \t\t for j := 0 ; j  5 ; j++  \t\t\t if j == 2  \t\t\t\t break I \t\t\t \t\t\tfmt.Println( \"hello\" ) \t\t \t\tfmt.Println( \"hi\" ) \t 1 2 3 4 5 6 7 8 9 10 11 12 13 intChan := make ( chan int , 1 ) // 一秒后关闭通道。 time.AfterFunc(time.Second, func ()  close (intChan) ) select  case _, ok := -intChan: if !ok  fmt.Println( \"The candidate case is closed.\" ) break  fmt.Println( \"The candidate case is selected.\" )  上面的代码 select 语句只有一个候选分支，我在其中利用接收表达式的第二个结果值对 intChan 通道是否已关闭做了判断，并在 得到肯定结果后，通过 break 语句立即结束当前 select 语句的执行。"},"concurrent/channel.html#channel":{"title":"channel","path":"\\golang-learn\\concurrent\\channel.html#channel","body":"1 2 Don&#x2019;t communicate by sharing memory; share memory by communicating. &#xFF08;&#x4E0D;&#x8981;&#x901A;&#x8FC7;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x6765;&#x901A;&#x4FE1;&#xFF0C;&#x800C;&#x5E94;&#x8BE5;&#x901A;&#x8FC7;&#x901A;&#x4FE1;&#x6765;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x3002;&#xFF09; &#x8FD9;&#x662F;&#x4F5C;&#x4E3A; Go &#x8BED;&#x8A00;&#x6700;&#x91CD;&#x8981;&#x7684;&#x7F16;&#x7A0B;&#x7406;&#x5FF5;&#x3002; &#x901A;&#x9053;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x662F; &#x5E76;&#x53D1;&#x5B89;&#x5168; &#x7684;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F; Go &#x8BED;&#x8A00;&#x81EA;&#x5E26;&#x7684;&#x3001;&#x552F;&#x4E00;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x6EE1;&#x8DB3;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x6027;&#x7684;&#x7C7B;&#x578B; &#x3002; channels &#x662F; goroutine &#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x673A;&#x5236;&#x3002; goroutine &#x901A;&#x8FC7; channel &#x5411;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x53D1;&#x9001;&#x6D88;&#x606F; channel &#x548C; goroutine &#x7ED3;&#x5408;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7528;&#x901A;&#x4FE1;&#x4EE3;&#x66FF;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x7684; CSP &#x6A21;&#x578B;&#x3002; &#x521B;&#x5EFA; channel &#xFF1A; 1 2 3 ch := make ( chan int ) ch = make ( chan int , 3 ) // buffered channel with capacity 3 &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C; int &#x4EE3;&#x8868;&#x8FD9;&#x4E2A; channel &#x8981;&#x53D1;&#x9001;&#x7684;&#x6570;&#x636E;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x4EE3;&#x8868;&#x521B;&#x5EFA;&#x4E00;&#x5E26;&#x7F13;&#x5B58;&#x7684; channel &#xFF0C;&#x5BB9;&#x91CF;&#x4E3A; 3 &#x3002; channel &#x7684;&#x96F6;&#x503C;&#x662F; nil &#x3002; &#x53D1;&#x9001;&#x548C;&#x63A5;&#x6536;&#x4E24;&#x4E2A;&#x64CD;&#x4F5C;&#x4F7F;&#x7528; - &#x8FD0;&#x7B97;&#x7B26;&#xFF0C;&#x4E00;&#x4E2A;&#x5DE6;&#x5C16;&#x62EC;&#x53F7;&#x7D27;&#x63A5;&#x7740;&#x4E00;&#x4E2A;&#x51CF;&#x53F7;&#x5F62;&#x8C61;&#x5730;&#x4EE3;&#x8868;&#x4E86;&#x5143;&#x7D20;&#x503C;&#x7684;&#x4F20;&#x8F93;&#x65B9;&#x5411;&#xFF1A; 1 2 3 4 5 6 7 // &#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x503C; ch - x // &#x5C06;&#x6570;&#x636E; push &#x5230; channel // &#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x503C; x = -ch // &#x53D6;&#x51FA; channel &#x7684;&#x503C;&#x5E76;&#x590D;&#x5236;&#x7ED9;&#x53D8;&#x91CF;x -ch // &#x63A5;&#x53D7;&#x7684;&#x503C;&#x4F1A;&#x88AB;&#x4E22;&#x5F03; close &#x4F7F;&#x7528; close &#x51FD;&#x6570;&#x5173;&#x95ED; channel &#xFF0C; channel &#x5173;&#x95ED;&#x540E;&#x4E0D;&#x80FD;&#x518D;&#x53D1;&#x9001;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x5DF2;&#x7ECF;&#x53D1;&#x9001;&#x6210;&#x529F;&#x7684;&#x6570;&#x636E;&#xFF0C; &#x5982;&#x679C; channel &#x4E2D;&#x6CA1;&#x6709;&#x6570;&#x636E;&#xFF0C;&#x90A3;&#x4E48;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x96F6;&#x503C;&#x3002; &#x6CE8;&#x610F;&#xFF0C; close &#x51FD;&#x6570;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x6E05;&#x7406;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x4E2A;&#x63A7;&#x5236;&#x64CD;&#x4F5C; &#xFF0C;&#x5728;&#x786E;&#x5B9A;&#x8FD9;&#x4E2A; channel &#x4E0D;&#x4F1A;&#x7EE7;&#x7EED;&#x53D1;&#x9001;&#x6570;&#x636E;&#x65F6;&#x8C03;&#x7528;&#x3002; &#x56E0;&#x4E3A;&#x5173;&#x95ED;&#x64CD;&#x4F5C;&#x53EA;&#x7528;&#x4E8E;&#x65AD;&#x8A00;&#x4E0D;&#x518D;&#x5411; channel &#x53D1;&#x9001;&#x65B0;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x6709;&#x5728; &#x201C;&#x53D1;&#x9001;&#x8005;&#x201D; &#x6240;&#x5728;&#x7684; goroutine &#x624D;&#x4F1A;&#x8C03;&#x7528; close &#x51FD;&#x6570; &#xFF0C; &#x56E0;&#x6B64;&#x5BF9;&#x4E00;&#x4E2A;&#x53EA;&#x63A5;&#x6536;&#x7684; channel &#x8C03;&#x7528; close &#x5C06;&#x662F;&#x4E00;&#x4E2A;&#x7F16;&#x8BD1;&#x9519;&#x8BEF;&#x3002; &#x4F7F;&#x7528; range &#x5FAA;&#x73AF;&#x53EF;&#x76F4;&#x63A5;&#x5728; channels &#x4E0A;&#x9762;&#x8FED;&#x4EE3;&#x3002;&#x5B83;&#x4F9D;&#x6B21;&#x4ECE; channel &#x63A5;&#x6536;&#x6570;&#x636E;&#xFF0C;&#x5F53; channel &#x88AB;&#x5173;&#x95ED;&#x5E76;&#x4E14;&#x6CA1;&#x6709;&#x503C;&#x53EF;&#x63A5;&#x6536;&#x65F6; &#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#x3002; 1 2 3 4 5 6 7 naturals := make ( chan int ) for x := 0 ; x  100 ; x++ { naturals - x } for x := range naturals { fmt.Println(x) } &#x6CE8;&#x610F;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4F1A;&#x62A5; fatal error: all goroutines are asleep - deadlock! &#x3002;&#x8FD9;&#x4E2A;&#x662F;&#x6B7B;&#x9501;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x56E0;&#x4E3A; range &#x4E0D;&#x7B49;&#x5230;&#x4FE1; &#x9053;&#x5173;&#x95ED;&#x662F;&#x4E0D;&#x4F1A;&#x7ED3;&#x675F;&#x8BFB;&#x53D6;&#x7684;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x5982;&#x679C; channel &#x6CA1;&#x6709;&#x6570;&#x636E;&#x4E86;&#xFF0C;&#x90A3;&#x4E48; range &#x5C31;&#x4F1A;&#x963B;&#x585E;&#x5F53;&#x524D; goroutine , &#x76F4;&#x5230;&#x4FE1;&#x9053;&#x5173;&#x95ED;&#xFF0C;&#x6240;&#x4EE5;&#x5BFC; &#x81F4;&#x4E86;&#x6B7B;&#x9501; &#x3002; &#x4E3A;&#x4E86;&#x907F;&#x514D;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x5BF9;&#x4E8E;&#x6709;&#x7F13;&#x5B58;&#x7684;&#x4FE1;&#x9053;&#xFF0C;&#x663E;&#x5F0F;&#x5730;&#x5173;&#x95ED;&#x4FE1;&#x9053;: 1 2 3 4 5 6 7 8 9 10 11 ch := make ( chan int , 3 ) ch - 1 ch - 2 ch - 3 // &#x663E;&#x5F0F;&#x5730;&#x5173;&#x95ED;&#x4FE1;&#x9053; close (ch) for v := range ch { fmt.Println(v) } &#x65E0;&#x7F13;&#x5B58; channel &#x65E0;&#x7F13;&#x5B58; channel &#x4E5F;&#x53EB;&#x505A;&#x540C;&#x6B65; channel &#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A; &#x5982;&#x679C;&#x4E00;&#x4E2A; goroutine &#x57FA;&#x4E8E;&#x4E00;&#x4E2A;&#x65E0;&#x7F13;&#x5B58; channel &#x53D1;&#x9001;&#x6570;&#x636E;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A; &#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x5728;&#x76F8;&#x540C;&#x7684; channel &#x4E0A;&#x6267;&#x884C;&#x63A5;&#x6536;&#x64CD;&#x4F5C; &#x3002;&#x540C;&#x6837;&#x7684;&#xFF0C; &#x5982;&#x679C;&#x4E00;&#x4E2A; goroutine &#x57FA;&#x4E8E;&#x4E00;&#x4E2A;&#x65E0;&#x7F13;&#x5B58; channel &#x5148;&#x6267;&#x884C;&#x4E86;&#x63A5;&#x53D7;&#x64CD;&#x4F5C;&#xFF0C;&#x4E5F;&#x4F1A;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x5728;&#x76F8;&#x540C;&#x7684; channel &#x4E0A;&#x6267;&#x884C;&#x53D1;&#x9001;&#x64CD;&#x4F5C; &#x3002;&#x5728; channel &#x6210;&#x529F;&#x4F20;&#x8F93;&#x4E4B;&#x540E;&#xFF0C;&#x4E24;&#x4E2A; goroutine &#x4E4B;&#x540E;&#x7684;&#x8BED;&#x53E5;&#x624D;&#x4F1A;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x3002; &#x5E26;&#x7F13;&#x5B58; channel 1 ch = make ( chan int , 3 ) &#x5E26;&#x7F13;&#x5B58;&#x7684; channel &#x5185;&#x90E8;&#x6301;&#x6709;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x961F;&#x5217;&#x3002; make &#x51FD;&#x6570;&#x521B;&#x5EFA; channel &#x65F6;&#x901A;&#x8FC7;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x961F;&#x5217;&#x7684;&#x6700;&#x5927;&#x5BB9;&#x91CF;&#x3002; &#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x4F1A;&#x5411; channel &#x7684;&#x7F13;&#x5B58;&#x961F;&#x5217; push &#x5143;&#x7D20;&#xFF0C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x5219;&#x662F; pop &#x5143;&#x7D20;&#xFF0C;&#x5982;&#x679C;&#x961F;&#x5217;&#x88AB;&#x585E;&#x6EE1;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x5C06;&#x963B; &#x585E;&#x76F4;&#x5230;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x6267;&#x884C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x800C;&#x91CA;&#x653E;&#x4E86;&#x65B0;&#x7684;&#x961F;&#x5217;&#x7A7A;&#x95F4;&#x3002; &#x76F8;&#x53CD;&#xFF0C;&#x5982;&#x679C; channel &#x662F;&#x7A7A;&#x7684;&#xFF0C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x5C06;&#x963B;&#x585E;&#x76F4;&#x5230;&#x6709;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x6267;&#x884C;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x800C;&#x5411;&#x961F;&#x5217;&#x63D2;&#x5165;&#x5143;&#x7D20;&#x3002; &#x5728;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7F13;&#x51B2;&#x901A;&#x9053;&#x4F1A;&#x4F5C;&#x4E3A;&#x6536;&#x53D1;&#x53CC;&#x65B9;&#x7684;&#x4E2D;&#x95F4;&#x4EF6;&#x3002;&#x6B63;&#x5982;&#x524D;&#x6587;&#x6240;&#x8FF0;&#xFF0C;&#x5143;&#x7D20;&#x503C;&#x4F1A;&#x5148;&#x4ECE;&#x53D1;&#x9001;&#x65B9;&#x590D;&#x5236;&#x5230;&#x7F13;&#x51B2;&#x901A;&#x9053;&#xFF0C;&#x4E4B;&#x540E;&#x518D;&#x7531;&#x7F13;&#x51B2;&#x901A;&#x9053;&#x590D;&#x5236;&#x7ED9;&#x63A5;&#x6536;&#x65B9;&#x3002; &#x4F46;&#x662F;&#xFF0C;&#x5F53;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x5728;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#x7A7A;&#x7684;&#x901A;&#x9053;&#x4E2D;&#xFF0C;&#x6B63;&#x597D;&#x6709;&#x7B49;&#x5F85;&#x7684;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x4F1A;&#x76F4;&#x63A5;&#x628A;&#x5143;&#x7D20;&#x503C;&#x590D;&#x5236;&#x7ED9;&#x63A5;&#x6536;&#x65B9;&#x3002; &#x5355;&#x5411; channel &#x5F53;&#x4E00;&#x4E2A; channel &#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x65F6;&#xFF0C;&#x5B83;&#x4E00;&#x822C;&#x603B;&#x662F;&#x88AB;&#x4E13;&#x95E8;&#x7528;&#x4E8E; &#x53EA;&#x53D1;&#x9001;&#x6216;&#x8005;&#x53EA;&#x63A5;&#x6536; &#x3002; &#x7C7B;&#x578B; chan- int &#x8868;&#x793A;&#x4E00;&#x4E2A;&#x53EA;&#x53D1;&#x9001; int &#x7684; channel &#x3002;&#x76F8;&#x53CD;&#xFF0C;&#x7C7B;&#x578B; -chan int &#x8868;&#x793A;&#x4E00;&#x4E2A;&#x53EA;&#x63A5;&#x6536; int &#x7684; channel &#x3002; 1 var uselessChan = make ( chan - int , 1 ) cap &#x548C; len cap &#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x83B7;&#x53D6; channel &#x5185;&#x90E8;&#x7F13;&#x5B58;&#x7684;&#x5BB9;&#x91CF;&#x3002; len &#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x83B7;&#x53D6; channel &#x5185;&#x90E8;&#x7F13;&#x5B58;&#x6709;&#x6548;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#x3002; 1 2 3 4 5 6 7 8 9 ch = make ( chan int , 3 ) fmt.Println( cap (ch)) // 3 ch - A ch - B fmt.Println( len (ch)) // 2 fmt.Println(-ch) // A fmt.Println( len (ch)) // 1 &#x901A;&#x9053;&#x7684;&#x53D1;&#x9001;&#x548C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x7684;&#x7279;&#x6027; &#x5BF9;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x4E4B;&#x95F4;&#x662F;&#x4E92;&#x65A5;&#x7684;&#xFF0C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x4E4B;&#x95F4;&#x4E5F;&#x662F;&#x4E92;&#x65A5;&#x7684;&#x3002;Go &#x8BED;&#x8A00;&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#xFF09;&#x53EA;&#x4F1A;&#x6267;&#x884C;&#x5BF9;&#x540C;&#x4E00;&#x4E2A;&#x901A; &#x9053;&#x7684;&#x4EFB;&#x610F;&#x4E2A;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x4E2D;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#x3002;&#x76F4;&#x5230;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x503C;&#x88AB;&#x5B8C;&#x5168;&#x590D;&#x5236;&#x8FDB;&#x8BE5;&#x901A;&#x9053;&#x4E4B;&#x540E;&#xFF0C;&#x5176;&#x4ED6;&#x9488;&#x5BF9;&#x8BE5;&#x901A;&#x9053;&#x7684;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x624D;&#x53EF;&#x80FD;&#x88AB;&#x6267;&#x884C;&#x3002; &#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x548C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x4E2D;&#x5BF9;&#x5143;&#x7D20;&#x503C;&#x7684;&#x5904;&#x7406;&#x90FD;&#x662F;&#x4E0D;&#x53EF;&#x5206;&#x5272;&#x7684;&#x3002;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x8981;&#x4E48;&#x8FD8;&#x6CA1;&#x590D;&#x5236;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x8981;&#x4E48;&#x5DF2;&#x7ECF;&#x590D;&#x5236;&#x5B8C;&#x6BD5;&#xFF0C;&#x7EDD;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x53EA;&#x590D;&#x5236;&#x4E86;&#x4E00;&#x90E8;&#x5206; &#x7684;&#x60C5;&#x51B5;&#x3002;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x5728;&#x51C6;&#x5907;&#x597D;&#x5143;&#x7D20;&#x503C;&#x7684;&#x526F;&#x672C;&#x4E4B;&#x540E;&#xFF0C;&#x4E00;&#x5B9A;&#x4F1A;&#x5220;&#x9664;&#x6389;&#x901A;&#x9053;&#x4E2D;&#x7684;&#x539F;&#x503C;&#xFF0C;&#x7EDD;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x901A;&#x9053;&#x4E2D;&#x4ECD;&#x6709;&#x6B8B;&#x7559;&#x7684;&#x60C5;&#x51B5;&#x3002; &#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x5728;&#x5B8C;&#x5168;&#x5B8C;&#x6210;&#x4E4B;&#x524D;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#x3002;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x4E5F;&#x662F;&#x5982;&#x6B64;&#x3002; &#x5143;&#x7D20;&#x503C;&#x4ECE;&#x5916;&#x754C;&#x8FDB;&#x5165;&#x901A;&#x9053;&#x65F6;&#x4F1A;&#x88AB;&#x590D;&#x5236;&#x3002;&#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#xFF0C;&#x8FDB;&#x5165;&#x901A;&#x9053;&#x7684;&#x5E76;&#x4E0D;&#x662F;&#x5728;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x7B26;&#x53F3;&#x8FB9;&#x7684;&#x90A3;&#x4E2A;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x800C;&#x662F;&#x5B83;&#x7684;&#x526F;&#x672C; &#x3002; &#x5BF9;&#x4E8E;&#x901A;&#x9053;&#x4E2D;&#x7684;&#x540C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x503C;&#x6765;&#x8BF4;&#xFF0C;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x548C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x4E4B;&#x95F4;&#x4E5F;&#x662F;&#x4E92;&#x65A5;&#x7684;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x867D;&#x7136;&#x4F1A;&#x51FA;&#x73B0;&#xFF0C;&#x6B63;&#x5728;&#x88AB;&#x590D;&#x5236;&#x8FDB;&#x901A;&#x9053;&#x4F46;&#x8FD8;&#x672A;&#x590D;&#x5236;&#x5B8C;&#x6210;&#x7684;&#x5143;&#x7D20;&#x503C;&#xFF0C; &#x4F46;&#x662F;&#x8FD9;&#x65F6;&#x5B83;&#x7EDD;&#x4E0D;&#x4F1A;&#x88AB;&#x60F3;&#x63A5;&#x6536;&#x5B83;&#x7684;&#x4E00;&#x65B9;&#x770B;&#x5230;&#x548C;&#x53D6;&#x8D70; &#x3002; &#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x548C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x53EF;&#x80FD;&#x88AB;&#x957F;&#x65F6;&#x95F4;&#x7684;&#x963B;&#x585E; &#x9488;&#x5BF9; &#x7F13;&#x51B2;&#x901A;&#x9053; &#x7684;&#x60C5;&#x51B5;&#x3002;&#x5982;&#x679C;&#x901A;&#x9053;&#x5DF2;&#x6EE1;&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x5B83;&#x7684;&#x6240;&#x6709;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x90FD;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x901A;&#x9053;&#x4E2D;&#x6709;&#x5143;&#x7D20;&#x503C;&#x88AB;&#x63A5;&#x6536;&#x8D70;&#x3002;&#x76F8;&#x5BF9;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x901A;&#x9053;&#x5DF2;&#x7A7A;&#xFF0C; &#x90A3;&#x4E48;&#x5BF9;&#x5B83;&#x7684;&#x6240;&#x6709;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x90FD;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x901A;&#x9053;&#x4E2D;&#x6709;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x503C;&#x51FA;&#x73B0;&#x3002;&#x8FD9;&#x65F6;&#xFF0C;&#x901A;&#x9053;&#x4F1A;&#x901A;&#x77E5;&#x6700;&#x65E9;&#x7B49;&#x5F85;&#x7684;&#x90A3;&#x4E2A;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x6240;&#x5728;&#x7684; goroutine&#xFF0C; &#x5E76;&#x4F7F;&#x5B83;&#x518D;&#x6B21;&#x6267;&#x884C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x3002; &#x5BF9;&#x4E8E; &#x975E;&#x7F13;&#x51B2;&#x901A;&#x9053; &#xFF0C;&#x60C5;&#x51B5;&#x8981;&#x7B80;&#x5355;&#x4E00;&#x4E9B;&#x3002;&#x65E0;&#x8BBA;&#x662F;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x8FD8;&#x662F;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x5C31;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x914D;&#x5BF9;&#x7684;&#x64CD;&#x4F5C;&#x4E5F;&#x5F00;&#x59CB;&#x6267;&#x884C;&#xFF0C;&#x624D;&#x4F1A;&#x7EE7;&#x7EED;&#x4F20;&#x9012;&#x3002; &#x5BF9;&#x4E8E;&#x503C;&#x4E3A; nil &#x7684;&#x901A;&#x9053;&#xFF0C;&#x4E0D;&#x8BBA;&#x5B83;&#x7684;&#x5177;&#x4F53;&#x7C7B;&#x578B;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x5BF9;&#x5B83;&#x7684;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x548C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x90FD;&#x4F1A;&#x6C38;&#x4E45;&#x5730;&#x5904;&#x4E8E;&#x963B;&#x585E;&#x72B6;&#x6001; &#x3002;&#x5B83;&#x4EEC;&#x6240;&#x5C5E;&#x7684; goroutine &#x4E2D;&#x7684;&#x4EFB;&#x4F55;&#x4EE3;&#x7801;&#xFF0C;&#x90FD;&#x4E0D;&#x518D;&#x4F1A;&#x88AB;&#x6267;&#x884C;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x7531;&#x4E8E;&#x901A;&#x9053;&#x7C7B;&#x578B;&#x662F;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x7684;&#x96F6;&#x503C;&#x5C31;&#x662F; nil &#x3002; &#x5F53;&#x6211;&#x4EEC;&#x53EA;&#x58F0;&#x660E;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x4F46;&#x6CA1; &#x6709;&#x7528; make &#x51FD;&#x6570;&#x5BF9;&#x5B83;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#x65F6;&#xFF0C;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x5C31;&#x4F1A;&#x662F; nil &#x3002;&#x6211;&#x4EEC;&#x4E00;&#x5B9A;&#x4E0D;&#x8981;&#x5FD8;&#x8BB0;&#x521D;&#x59CB;&#x5316;&#x901A;&#x9053; &#xFF01; select &#x591A;&#x8DEF;&#x590D;&#x7528; select &#x8BED;&#x53E5;&#x662F;&#x4E13;&#x4E3A;&#x901A;&#x9053;&#x800C;&#x8BBE;&#x8BA1;&#x7684;&#xFF0C; &#x6240;&#x4EE5;&#x6BCF;&#x4E2A; case &#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x90FD;&#x53EA;&#x80FD;&#x5305;&#x542B;&#x64CD;&#x4F5C;&#x901A;&#x9053;&#x7684;&#x8868;&#x8FBE;&#x5F0F; &#xFF0C;&#x6BD4;&#x5982;&#x63A5;&#x6536;&#x8868;&#x8FBE;&#x5F0F;&#x3002; 1 2 3 4 5 6 7 8 select { case communication clause : ... case communication clause : ... default : /* &#x53EF;&#x9009; */ \t\t\t... } &#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A; channel &#x9700;&#x8981;&#x63A5;&#x53D7;&#x6D88;&#x606F;&#xFF0C;&#x5982;&#x679C;&#x7B2C;&#x4E00;&#x4E2A; channel &#x6CA1;&#x6709;&#x6D88;&#x606F;&#x53D1;&#x8FC7;&#x6765;&#xFF0C;&#x90A3;&#x4E48;&#x7A0B;&#x5E8F;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A; channel &#x7684;&#x6D88;&#x606F;&#x5C31;&#x4E5F; &#x65E0;&#x6CD5;&#x63A5;&#x6536;&#x4E86;&#x3002;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;&#x4F7F;&#x7528; select &#x591A;&#x8DEF;&#x590D;&#x7528;&#x3002; 1 2 3 4 5 6 7 8 9 10 select { case -ch1: ... case x := -ch2: \t\t\t... \t case ch3 - y: \t ...\t\t default : \t\t\t... } &#x6BCF;&#x4E00;&#x4E2A; case &#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x901A;&#x4FE1;&#x64CD;&#x4F5C;&#xFF0C;&#x53D1;&#x9001;&#x6216;&#x8005;&#x63A5;&#x6536;&#x3002; &#x5982;&#x679C;&#x6CA1;&#x6709; case &#x53EF;&#x8FD0;&#x884C;&#xFF0C;&#x5B83;&#x5C06;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x6709; case &#x53EF;&#x8FD0;&#x884C; &#x3002; &#x5982;&#x679C;&#x591A;&#x4E2A; case &#x540C;&#x65F6;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#xFF0C; select &#x4F1A; &#x968F;&#x673A; &#x5730;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x6267;&#x884C;&#x3002; &#x4E3A;&#x4E86;&#x907F;&#x514D;&#x56E0;&#x4E3A;&#x53D1;&#x9001;&#x6216;&#x8005;&#x63A5;&#x6536;&#x5BFC;&#x81F4;&#x7684;&#x963B;&#x585E;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5F53; channel &#x6CA1;&#x6709;&#x51C6;&#x5907;&#x597D;&#x5199;&#x6216;&#x8005;&#x8BFB;&#x65F6;&#x3002; default &#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x5F53;&#x5176;&#x5B83;&#x7684;&#x64CD;&#x4F5C; &#x90FD;&#x4E0D;&#x80FD;&#x591F;&#x9A6C;&#x4E0A;&#x88AB;&#x5904;&#x7406;&#x65F6;&#x7A0B;&#x5E8F;&#x9700;&#x8981;&#x6267;&#x884C;&#x54EA;&#x4E9B;&#x903B;&#x8F91; &#x3002; &#x8D85;&#x65F6; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528; select &#x6765;&#x8BBE;&#x7F6E;&#x8D85;&#x65F6;&#xFF0C;&#x907F;&#x514D; goroutine &#x963B;&#x585E;&#x7684;&#x60C5;&#x51B5;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 func main () { \tc := make ( chan int ) \to := make ( chan bool ) \t go func () { \t\t for { \t\t\t select { \t\t\t\t case v := - c: \t\t\t\t\tfmt. println (v) \t\t\t\t case - time.After( 5 * time.Second): \t\t\t\t\tfmt. println ( timeout ) \t\t\t\t\to - true \t\t\t\t\t break \t\t\t} \t\t} \t}() \t- o } &#x4F7F;&#x7528; select &#x8BED;&#x53E5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x4E8B;&#x60C5; &#x5982;&#x679C;&#x52A0;&#x5165;&#x4E86;&#x9ED8;&#x8BA4;&#x5206;&#x652F;&#xFF0C;&#x90A3;&#x4E48;&#x65E0;&#x8BBA;&#x6D89;&#x53CA;&#x901A;&#x9053;&#x64CD;&#x4F5C;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x662F;&#x5426;&#x6709;&#x963B;&#x585E;&#xFF0C; select &#x8BED;&#x53E5;&#x90FD;&#x4E0D;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#x3002;&#x5982;&#x679C;&#x90A3;&#x51E0;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x90FD;&#x963B;&#x585E;&#x4E86;&#xFF0C;&#x6216;&#x8005; &#x8BF4;&#x90FD;&#x6CA1;&#x6709;&#x6EE1;&#x8DB3;&#x6C42;&#x503C;&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x9ED8;&#x8BA4;&#x5206;&#x652F;&#x5C31;&#x4F1A;&#x88AB;&#x9009;&#x4E2D;&#x5E76;&#x6267;&#x884C;&#x3002; &#x5982;&#x679C;&#x6CA1;&#x6709;&#x52A0;&#x5165;&#x9ED8;&#x8BA4;&#x5206;&#x652F;&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x65E6;&#x6240;&#x6709;&#x7684; case &#x8868;&#x8FBE;&#x5F0F;&#x90FD;&#x6CA1;&#x6709;&#x6EE1;&#x8DB3;&#x6C42;&#x503C;&#x6761;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48; select &#x8BED;&#x53E5;&#x5C31;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#x3002; &#x76F4;&#x5230;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A; case &#x8868;&#x8FBE;&#x5F0F;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x4E3A;&#x6B62;&#x3002; &#x8FD8;&#x8BB0;&#x5F97;&#x5417;&#xFF1F;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x4F1A;&#x56E0;&#x4E3A;&#x901A;&#x9053;&#x5173;&#x95ED;&#x4E86;&#xFF0C;&#x800C;&#x76F4;&#x63A5;&#x4ECE;&#x901A;&#x9053;&#x63A5;&#x6536;&#x5230;&#x4E00;&#x4E2A;&#x5176;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x7684;&#x96F6;&#x503C;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5728;&#x5F88;&#x591A;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x63A5;&#x6536;&#x8868;&#x8FBE;&#x5F0F; &#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x6765;&#x5224;&#x65AD;&#x901A;&#x9053;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5173;&#x95ED;&#x3002;&#x4E00;&#x65E6;&#x53D1;&#x73B0;&#x67D0;&#x4E2A;&#x901A;&#x9053;&#x5173;&#x95ED;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5E94;&#x8BE5;&#x53CA;&#x65F6;&#x5730;&#x5C4F;&#x853D;&#x6389;&#x5BF9;&#x5E94;&#x7684;&#x5206;&#x652F;&#x6216;&#x8005;&#x91C7;&#x53D6;&#x5176;&#x4ED6;&#x63AA;&#x65BD;&#x3002;&#x8FD9;&#x5BF9; &#x4E8E;&#x7A0B;&#x5E8F;&#x903B;&#x8F91;&#x548C;&#x7A0B;&#x5E8F;&#x6027;&#x80FD;&#x90FD;&#x662F;&#x6709;&#x597D;&#x5904;&#x7684;&#x3002; select &#x8BED;&#x53E5;&#x53EA;&#x80FD;&#x5BF9;&#x5176;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A; case &#x8868;&#x8FBE;&#x5F0F;&#x5404;&#x6C42;&#x503C;&#x4E00;&#x6B21;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x8FDE;&#x7EED;&#x6216;&#x5B9A;&#x65F6;&#x5730;&#x64CD;&#x4F5C;&#x5176;&#x4E2D;&#x7684;&#x901A;&#x9053;&#x7684;&#x8BDD;&#xFF0C;&#x5C31;&#x5F80;&#x5F80;&#x9700;&#x8981; &#x901A;&#x8FC7;&#x5728; for &#x8BED;&#x53E5;&#x4E2D;&#x5D4C;&#x5165; select &#x8BED;&#x53E5;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x3002;&#x4F46;&#x8FD9;&#x65F6;&#x8981;&#x6CE8;&#x610F;&#xFF0C; &#x7B80;&#x5355;&#x5730;&#x5728; select &#x8BED;&#x53E5;&#x7684;&#x5206;&#x652F;&#x4E2D;&#x4F7F;&#x7528; break &#x8BED;&#x53E5;&#xFF0C;&#x53EA;&#x80FD;&#x7ED3; &#x675F;&#x5F53;&#x524D;&#x7684; select &#x8BED;&#x53E5;&#x7684;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x5E76;&#x4E0D;&#x4F1A;&#x5BF9;&#x5916;&#x5C42;&#x7684; for &#x8BED;&#x53E5;&#x4EA7;&#x751F;&#x4F5C;&#x7528;&#x3002;&#x8FD9;&#x79CD;&#x9519;&#x8BEF;&#x7684;&#x7528;&#x6CD5;&#x53EF;&#x80FD;&#x4F1A;&#x8BA9;&#x8FD9;&#x4E2A; for &#x8BED;&#x53E5;&#x65E0;&#x4F11;&#x6B62;&#x5730;&#x8FD0;&#x884C;&#x4E0B;&#x53BB; &#x3002; break &#x9000;&#x51FA;&#x5D4C;&#x5957;&#x5FAA;&#x73AF;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 I: \t for i := 0 ; i  2 ; i++ { \t\t for j := 0 ; j  5 ; j++ { \t\t\t if j == 2 { \t\t\t\t break I \t\t\t} \t\t\tfmt.Println( hello ) \t\t} \t\tfmt.Println( hi ) \t} 1 2 3 4 5 6 7 8 9 10 11 12 13 intChan := make ( chan int , 1 ) // &#x4E00;&#x79D2;&#x540E;&#x5173;&#x95ED;&#x901A;&#x9053;&#x3002; time.AfterFunc(time.Second, func () { close (intChan) }) select { case _, ok := -intChan: if !ok { fmt.Println( The candidate case is closed. ) break } fmt.Println( The candidate case is selected. ) } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801; select &#x8BED;&#x53E5;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5019;&#x9009;&#x5206;&#x652F;&#xFF0C;&#x6211;&#x5728;&#x5176;&#x4E2D;&#x5229;&#x7528;&#x63A5;&#x6536;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x5BF9; intChan &#x901A;&#x9053;&#x662F;&#x5426;&#x5DF2;&#x5173;&#x95ED;&#x505A;&#x4E86;&#x5224;&#x65AD;&#xFF0C;&#x5E76;&#x5728; &#x5F97;&#x5230;&#x80AF;&#x5B9A;&#x7ED3;&#x679C;&#x540E;&#xFF0C;&#x901A;&#x8FC7; break &#x8BED;&#x53E5;&#x7ACB;&#x5373;&#x7ED3;&#x675F;&#x5F53;&#x524D; select &#x8BED;&#x53E5;&#x7684;&#x6267;&#x884C;&#x3002;"},"basic/function.html":{"title":"函数","path":"\\golang-learn\\basic\\function.html","body":"函数 声明函数 func 关键字声明函数： 1 2 3 func 函数名 (形式参数列表) (返回值列表)  函数体  如果函数返回一个无名变量或者没有返回值，返回值列表的括号可以省略。如果一个函数声明没有返回值列表，那么这个 函数不会返回任何值。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // 两个 int 类型参数 返回一个 int 类型的值 func max (num1, num2 int ) int  /* 定义局部变量 */ var result int if (num1  num2)  result = num1  else  result = num2  return result  // 返回多个类型的值 func swap (x int , y string ) ( string , int )  return y, x  // 有名返回值 func Size (rect image.Rectangle) (width, height int , err error) 在函数体中，函数的形参作为局部变量，被初始化为调用者提供的值（函数调用必须按照声明顺序为所有参数提供实参）。函数的形参和有 名返回值（也就是对返回值命名）作为函数最外层的局部变量，被存储在相同的词法块中。 参数 Go 语言使用的是 值传递 ，当我们传一个参数值到被调用函数里面时，实际上是传了这个值的一份 copy，（不管是指针，引用类型还是其他类型， 区别无非是拷贝目标对象还是拷贝指针）当在被调用函数中修改参数值的时候，调用函数中相应实参不会发生任何变化，因为数值变化只作用在 copy 上。 但是如果是引用传递，在调用函数时将实际参数的地址传递到函数中，那么在函数中对参数所进行的修改，将影响到实际参数。 注意，如果实参是 slice 、 map 、 function 、 channel 等类型（ 引用类型 ），实参可能会由于函数的间接引用被修改。 没有函数体的函数声明，这表示该函数不是以 Go 实现的。这样的声明定义了函数标识符。 表面上看，指针参数性能会更好，但是要注意被复制的指针会延长目标对象的生命周期，还可能导致它被分配到堆上，其性能消耗要加上堆内存分配和 垃圾回收的成本 。 在栈上复制小对象，要比堆上分配内存要快的多。 可变参数 变参本质上就是一个切片，只能接受一到多个同类型参数，而且必须在参数列表的最后一个 。比如 fmt.Printf ， Printf 接收一个的必备参数，之 后接收任意个数的后续参数。 在参数列表的最后一个参数类型之前加上省略符号 ... ，表示该函数会接收任意数量的该类型参数。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 func sum (vals ... int ) int  \ttotal := 0 \t for _, val := range vals  \t\t\ttotal += val \t \t return total  // 调用 fmt.Println(sum()) // \"0\" fmt.Println(sum( 3 )) // \"3\" fmt.Println(sum( 1 , 2 , 3 , 4 )) // \"10\" // 还可以使用类似 ES6 的解构赋值的语法 values := [] int  1 , 2 , 3 , 4  fmt.Println(sum(values...)) // \"10\" 函数作为值 Go 函数被看作第一类值：函数像其他值一样，拥有类型，可以被赋值给其他变量，传递给函数，从函数返回。 1 2 3 4 5 6 7 8 9 func main ()  \t /* 声明函数变量 */ \tgetSquareRoot := func (x float64 ) float64  \t\t return math.Sqrt(x) \t \t /* 使用函数 */ \tfmt.Println(getSquareRoot( 9 )) // 3  函数作为参数 声明一个名叫 operate 的函数类型，它有两个参数和一个结果，都是 int 类型的。 1 type operate func (x, y int ) int 编写 calculate 函数的签名部分。这个函数除了需要两个 int 类型的参数之外，还应该有一个 operate 类型的参数。 1 2 3 4 5 6 func calculate (x int , y int , op operate) ( int , error)  if op == nil  return 0 , errors.New( \"invalid operation\" )  return op(x, y), nil  闭包 Go 语言支持匿名函数，可作为闭包。 1 2 3 4 5 6 7 8 9 // 返回一个函数 func getSequence () func () int  // func() 是没有参数也没有返回值的函数类型 \t i:= 0 \t // 闭包 return func () int  i+= 1 return i   错误 Go 中，对于大部分函数而言，永远无法确保能否成功运行（有一部分函数总是能成功的运行。比如 strings.Contains 和 strconv.FormatBool ）。通常 Go 函数的最后一个返回值用来传递错误信息。如果导致失败的原因只有一个，返回值可以是一个布尔值， 通常被命名为 ok 。否则应该返回一个 error 类型。 关键字 defer 在普通函数或方法前加关键字 defer ，会使函数或方法延迟执行，直到包含该 defer 语句的函数执行完毕时（ 无论函数是否出错 ）， defer 后的函数才会被执行。 defer 语句一般被用于处理成对的操作，如打开、关闭、连接、断开连接、加锁、释放锁。因为 defer 可以保证让你更任何情况下， 资源都会被释放。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package ioutil func ReadFile (filename string ) ([] byte , error)  \tf, err := os.Open(filename) \t if err != nil  \t\t\t return nil , err \t \t defer f.Close() \t return ReadAll(f)  // 互斥锁 var mu sync.Mutex var m = make ( map [ string ] int ) func lookup (key string ) int  \tmu.Lock() \t defer mu.Unlock() \t return m[key]  // 记录何时进入和退出函数 func bigSlowOperation ()  \t defer trace( \"bigSlowOperation\" )() // 运行 trace 函数，记录了进入函数的时间，并返回一个函数值，这个函数值会延迟执行 \textra parentheses \t // ...lots of work… \ttime.Sleep( 10 * time.Second) // simulate slow \toperation by sleeping  func trace (msg string ) func ()  \tstart := time.Now() \tlog.Printf( \"enter %s\" , msg) \t return func ()  \t\tlog.Printf( \"exit %s (%s)\" , msg,time.Since(start)) \t  // 观察函数的返回值 func double (x int ) (result int )  // 有名返回值 // 由于 defer 在 return 之后执行，所以这里的 result 就是函数最终的返回值 \t defer func ()  fmt.Printf( \"double(%d) = %d\\n\" , x,result) () \t return x + x  _ = double( 4 ) // 输出 \"double(4) = 8\" 上面的例子中我们知道 defer 函数可以观察函数返回值， defer 函数还可以修改函数的返回值： 1 2 3 4 5 func triple (x int ) (result int )  \t defer func ()  result += x () \t return double(x)  fmt.Println(triple( 4 )) // \"12\" 如果一个函数中有多条 defer 语句，那么那几个 defer 函数调用的执行顺序是怎样的 在同一个函数中， defer 函数调用的执行顺序与它们分别所属的 defer 语句的出现顺序（更严谨地说，是执行顺序）完全相反 。 在 defer 语句每次执行的时候，Go 语言会把它携带的 defer 函数及其参数值另行存储到一个队列中。 这个队列与该 defer 语句所属的函数是对应的，并且，它是先进后出（FILO）的，相当于一个栈。 在需要执行某个函数中的 defer 函数调用的时候，Go 语言会先拿到对应的队列，然后从该队列中一个一个地取出 defer 函数及 其参数值，并逐个执行调用。 传入函数的那些参数值后来怎么样了 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package main import \"fmt\" func main ()  \tarray1 := [ 3 ] string  \"a\" , \"b\" , \"c\"  \tfmt.Printf( \"The array: %v\\n\" , array1) \tarray2 := modifyArray(array1) \tfmt.Printf( \"The modified array: %v\\n\" , array2) \tfmt.Printf( \"The original array: %v\\n\" , array1)  func modifyArray (a [3] string ) [3] string  \ta[ 1 ] = \"x\" \t return a  在 main 函数中声明了一个数组 array1 ，然后把它传给了函数 modify ， modify 对参数值稍作修改后将其作为结果值返回。 main 函数中的代码拿到这个结果之后打印了它（即 array2 ），以及原来的数组 array1 。关键问题是，原数组会因 modify 函数对参数 值的修改而改变吗？ 答案是：原数组不会改变。为什么呢？原因是， 所有传给函数的参数值都会被复制，函数在其内部使用的并不是参数值的原值， 而是它的副本 。 由于数组是值类型，所以每一次复制都会拷贝它，以及它的所有元素值。 注意， 对于引用类型，比如：切片、字典、通道，像上面那样复制它们的值，只会拷贝它们本身而已，并不会拷贝它们引用的底层数据。 也就是说，这时只是浅表复制，而不是深层复制 。 以切片值为例，如此复制的时候，只是拷贝了它指向底层数组中某一个元素的指针，以及它的长度值和容量值，而它的底层数组并不会被拷贝。"},"basic/function.html#函数":{"title":"&#x51FD;&#x6570;","path":"\\golang-learn\\basic\\function.html#函数","body":""},"basic/function.html#声明函数":{"title":"&#x58F0;&#x660E;&#x51FD;&#x6570;","path":"\\golang-learn\\basic\\function.html#声明函数","body":"func &#x5173;&#x952E;&#x5B57;&#x58F0;&#x660E;&#x51FD;&#x6570;&#xFF1A; 1 2 3 func &#x51FD;&#x6570;&#x540D; (&#x5F62;&#x5F0F;&#x53C2;&#x6570;&#x5217;&#x8868;) (&#x8FD4;&#x56DE;&#x503C;&#x5217;&#x8868;) { &#x51FD;&#x6570;&#x4F53; } &#x5982;&#x679C;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65E0;&#x540D;&#x53D8;&#x91CF;&#x6216;&#x8005;&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x5217;&#x8868;&#x7684;&#x62EC;&#x53F7;&#x53EF;&#x4EE5;&#x7701;&#x7565;&#x3002;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x503C;&#x5217;&#x8868;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A; &#x51FD;&#x6570;&#x4E0D;&#x4F1A;&#x8FD4;&#x56DE;&#x4EFB;&#x4F55;&#x503C;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // &#x4E24;&#x4E2A; int &#x7C7B;&#x578B;&#x53C2;&#x6570; &#x8FD4;&#x56DE;&#x4E00;&#x4E2A; int &#x7C7B;&#x578B;&#x7684;&#x503C; func max (num1, num2 int ) int { /* &#x5B9A;&#x4E49;&#x5C40;&#x90E8;&#x53D8;&#x91CF; */ var result int if (num1  num2) { result = num1 } else { result = num2 } return result } // &#x8FD4;&#x56DE;&#x591A;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x503C; func swap (x int , y string ) ( string , int ) { return y, x } // &#x6709;&#x540D;&#x8FD4;&#x56DE;&#x503C; func Size (rect image.Rectangle) (width, height int , err error) &#x5728;&#x51FD;&#x6570;&#x4F53;&#x4E2D;&#xFF0C;&#x51FD;&#x6570;&#x7684;&#x5F62;&#x53C2;&#x4F5C;&#x4E3A;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF0C;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x8C03;&#x7528;&#x8005;&#x63D0;&#x4F9B;&#x7684;&#x503C;&#xFF08;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5FC5;&#x987B;&#x6309;&#x7167;&#x58F0;&#x660E;&#x987A;&#x5E8F;&#x4E3A;&#x6240;&#x6709;&#x53C2;&#x6570;&#x63D0;&#x4F9B;&#x5B9E;&#x53C2;&#xFF09;&#x3002;&#x51FD;&#x6570;&#x7684;&#x5F62;&#x53C2;&#x548C;&#x6709; &#x540D;&#x8FD4;&#x56DE;&#x503C;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x5BF9;&#x8FD4;&#x56DE;&#x503C;&#x547D;&#x540D;&#xFF09;&#x4F5C;&#x4E3A;&#x51FD;&#x6570;&#x6700;&#x5916;&#x5C42;&#x7684;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF0C;&#x88AB;&#x5B58;&#x50A8;&#x5728;&#x76F8;&#x540C;&#x7684;&#x8BCD;&#x6CD5;&#x5757;&#x4E2D;&#x3002;"},"basic/function.html#参数":{"title":"&#x53C2;&#x6570;","path":"\\golang-learn\\basic\\function.html#参数","body":"Go &#x8BED;&#x8A00;&#x4F7F;&#x7528;&#x7684;&#x662F; &#x503C;&#x4F20;&#x9012; &#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x4F20;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x503C;&#x5230;&#x88AB;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x91CC;&#x9762;&#x65F6;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x4F20;&#x4E86;&#x8FD9;&#x4E2A;&#x503C;&#x7684;&#x4E00;&#x4EFD; copy&#xFF0C;&#xFF08;&#x4E0D;&#x7BA1;&#x662F;&#x6307;&#x9488;&#xFF0C;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x8FD8;&#x662F;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#xFF0C; &#x533A;&#x522B;&#x65E0;&#x975E;&#x662F;&#x62F7;&#x8D1D;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x8FD8;&#x662F;&#x62F7;&#x8D1D;&#x6307;&#x9488;&#xFF09;&#x5F53;&#x5728;&#x88AB;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x4E2D;&#x4FEE;&#x6539;&#x53C2;&#x6570;&#x503C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x4E2D;&#x76F8;&#x5E94;&#x5B9E;&#x53C2;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x4EFB;&#x4F55;&#x53D8;&#x5316;&#xFF0C;&#x56E0;&#x4E3A;&#x6570;&#x503C;&#x53D8;&#x5316;&#x53EA;&#x4F5C;&#x7528;&#x5728; copy &#x4E0A;&#x3002; &#x4F46;&#x662F;&#x5982;&#x679C;&#x662F;&#x5F15;&#x7528;&#x4F20;&#x9012;&#xFF0C;&#x5728;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x65F6;&#x5C06;&#x5B9E;&#x9645;&#x53C2;&#x6570;&#x7684;&#x5730;&#x5740;&#x4F20;&#x9012;&#x5230;&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x51FD;&#x6570;&#x4E2D;&#x5BF9;&#x53C2;&#x6570;&#x6240;&#x8FDB;&#x884C;&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x5C06;&#x5F71;&#x54CD;&#x5230;&#x5B9E;&#x9645;&#x53C2;&#x6570;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x5B9E;&#x53C2;&#x662F; slice &#x3001; map &#x3001; function &#x3001; channel &#x7B49;&#x7C7B;&#x578B;&#xFF08; &#x5F15;&#x7528;&#x7C7B;&#x578B; &#xFF09;&#xFF0C;&#x5B9E;&#x53C2;&#x53EF;&#x80FD;&#x4F1A;&#x7531;&#x4E8E;&#x51FD;&#x6570;&#x7684;&#x95F4;&#x63A5;&#x5F15;&#x7528;&#x88AB;&#x4FEE;&#x6539;&#x3002; &#x6CA1;&#x6709;&#x51FD;&#x6570;&#x4F53;&#x7684;&#x51FD;&#x6570;&#x58F0;&#x660E;&#xFF0C;&#x8FD9;&#x8868;&#x793A;&#x8BE5;&#x51FD;&#x6570;&#x4E0D;&#x662F;&#x4EE5; Go &#x5B9E;&#x73B0;&#x7684;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x58F0;&#x660E;&#x5B9A;&#x4E49;&#x4E86;&#x51FD;&#x6570;&#x6807;&#x8BC6;&#x7B26;&#x3002; &#x8868;&#x9762;&#x4E0A;&#x770B;&#xFF0C;&#x6307;&#x9488;&#x53C2;&#x6570;&#x6027;&#x80FD;&#x4F1A;&#x66F4;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x6CE8;&#x610F;&#x88AB;&#x590D;&#x5236;&#x7684;&#x6307;&#x9488;&#x4F1A;&#x5EF6;&#x957F;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x8FD8;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x5B83;&#x88AB;&#x5206;&#x914D;&#x5230;&#x5806;&#x4E0A;&#xFF0C;&#x5176;&#x6027;&#x80FD;&#x6D88;&#x8017;&#x8981;&#x52A0;&#x4E0A;&#x5806;&#x5185;&#x5B58;&#x5206;&#x914D;&#x548C; &#x5783;&#x573E;&#x56DE;&#x6536;&#x7684;&#x6210;&#x672C; &#x3002; &#x5728;&#x6808;&#x4E0A;&#x590D;&#x5236;&#x5C0F;&#x5BF9;&#x8C61;&#xFF0C;&#x8981;&#x6BD4;&#x5806;&#x4E0A;&#x5206;&#x914D;&#x5185;&#x5B58;&#x8981;&#x5FEB;&#x7684;&#x591A;&#x3002;"},"basic/function.html#可变参数":{"title":"&#x53EF;&#x53D8;&#x53C2;&#x6570;","path":"\\golang-learn\\basic\\function.html#可变参数","body":"&#x53D8;&#x53C2;&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5207;&#x7247;&#xFF0C;&#x53EA;&#x80FD;&#x63A5;&#x53D7;&#x4E00;&#x5230;&#x591A;&#x4E2A;&#x540C;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#xFF0C;&#x800C;&#x4E14;&#x5FC5;&#x987B;&#x5728;&#x53C2;&#x6570;&#x5217;&#x8868;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A; &#x3002;&#x6BD4;&#x5982; fmt.Printf &#xFF0C; Printf &#x63A5;&#x6536;&#x4E00;&#x4E2A;&#x7684;&#x5FC5;&#x5907;&#x53C2;&#x6570;&#xFF0C;&#x4E4B; &#x540E;&#x63A5;&#x6536;&#x4EFB;&#x610F;&#x4E2A;&#x6570;&#x7684;&#x540E;&#x7EED;&#x53C2;&#x6570;&#x3002; &#x5728;&#x53C2;&#x6570;&#x5217;&#x8868;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E4B;&#x524D;&#x52A0;&#x4E0A;&#x7701;&#x7565;&#x7B26;&#x53F7; ... &#xFF0C;&#x8868;&#x793A;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x63A5;&#x6536;&#x4EFB;&#x610F;&#x6570;&#x91CF;&#x7684;&#x8BE5;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 func sum (vals ... int ) int { \ttotal := 0 \t for _, val := range vals { \t\t\ttotal += val \t} \t return total } // &#x8C03;&#x7528; fmt.Println(sum()) // 0 fmt.Println(sum( 3 )) // 3 fmt.Println(sum( 1 , 2 , 3 , 4 )) // 10 // &#x8FD8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7C7B;&#x4F3C; ES6 &#x7684;&#x89E3;&#x6784;&#x8D4B;&#x503C;&#x7684;&#x8BED;&#x6CD5; values := [] int { 1 , 2 , 3 , 4 } fmt.Println(sum(values...)) // 10"},"basic/function.html#函数作为值":{"title":"&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x503C;","path":"\\golang-learn\\basic\\function.html#函数作为值","body":"Go &#x51FD;&#x6570;&#x88AB;&#x770B;&#x4F5C;&#x7B2C;&#x4E00;&#x7C7B;&#x503C;&#xFF1A;&#x51FD;&#x6570;&#x50CF;&#x5176;&#x4ED6;&#x503C;&#x4E00;&#x6837;&#xFF0C;&#x62E5;&#x6709;&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x8D4B;&#x503C;&#x7ED9;&#x5176;&#x4ED6;&#x53D8;&#x91CF;&#xFF0C;&#x4F20;&#x9012;&#x7ED9;&#x51FD;&#x6570;&#xFF0C;&#x4ECE;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x3002; 1 2 3 4 5 6 7 8 9 func main () { \t /* &#x58F0;&#x660E;&#x51FD;&#x6570;&#x53D8;&#x91CF; */ \tgetSquareRoot := func (x float64 ) float64 { \t\t return math.Sqrt(x) \t} \t /* &#x4F7F;&#x7528;&#x51FD;&#x6570; */ \tfmt.Println(getSquareRoot( 9 )) // 3 }"},"basic/function.html#函数作为参数":{"title":"&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;","path":"\\golang-learn\\basic\\function.html#函数作为参数","body":"&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x540D;&#x53EB; operate &#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x6709;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x548C;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#xFF0C;&#x90FD;&#x662F; int &#x7C7B;&#x578B;&#x7684;&#x3002; 1 type operate func (x, y int ) int &#x7F16;&#x5199; calculate &#x51FD;&#x6570;&#x7684;&#x7B7E;&#x540D;&#x90E8;&#x5206;&#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x9664;&#x4E86;&#x9700;&#x8981;&#x4E24;&#x4E2A; int &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x5E94;&#x8BE5;&#x6709;&#x4E00;&#x4E2A; operate &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#x3002; 1 2 3 4 5 6 func calculate (x int , y int , op operate) ( int , error) { if op == nil { return 0 , errors.New( invalid operation ) } return op(x, y), nil }"},"basic/function.html#闭包":{"title":"&#x95ED;&#x5305;","path":"\\golang-learn\\basic\\function.html#闭包","body":"Go &#x8BED;&#x8A00;&#x652F;&#x6301;&#x533F;&#x540D;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x4F5C;&#x4E3A;&#x95ED;&#x5305;&#x3002; 1 2 3 4 5 6 7 8 9 // &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x51FD;&#x6570; func getSequence () func () int { // func() &#x662F;&#x6CA1;&#x6709;&#x53C2;&#x6570;&#x4E5F;&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x503C;&#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B; \t i:= 0 \t // &#x95ED;&#x5305; return func () int { i+= 1 return i } }"},"basic/function.html#错误":{"title":"&#x9519;&#x8BEF;","path":"\\golang-learn\\basic\\function.html#错误","body":"Go &#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x5927;&#x90E8;&#x5206;&#x51FD;&#x6570;&#x800C;&#x8A00;&#xFF0C;&#x6C38;&#x8FDC;&#x65E0;&#x6CD5;&#x786E;&#x4FDD;&#x80FD;&#x5426;&#x6210;&#x529F;&#x8FD0;&#x884C;&#xFF08;&#x6709;&#x4E00;&#x90E8;&#x5206;&#x51FD;&#x6570;&#x603B;&#x662F;&#x80FD;&#x6210;&#x529F;&#x7684;&#x8FD0;&#x884C;&#x3002;&#x6BD4;&#x5982; strings.Contains &#x548C; strconv.FormatBool &#xFF09;&#x3002;&#x901A;&#x5E38; Go &#x51FD;&#x6570;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x503C;&#x7528;&#x6765;&#x4F20;&#x9012;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3002;&#x5982;&#x679C;&#x5BFC;&#x81F4;&#x5931;&#x8D25;&#x7684;&#x539F;&#x56E0;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x4E2A;&#x5E03;&#x5C14;&#x503C;&#xFF0C; &#x901A;&#x5E38;&#x88AB;&#x547D;&#x540D;&#x4E3A; ok &#x3002;&#x5426;&#x5219;&#x5E94;&#x8BE5;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; error &#x7C7B;&#x578B;&#x3002;"},"basic/function.html#关键字-defer":{"title":"&#x5173;&#x952E;&#x5B57; defer","path":"\\golang-learn\\basic\\function.html#关键字-defer","body":"&#x5728;&#x666E;&#x901A;&#x51FD;&#x6570;&#x6216;&#x65B9;&#x6CD5;&#x524D;&#x52A0;&#x5173;&#x952E;&#x5B57; defer &#xFF0C;&#x4F1A;&#x4F7F;&#x51FD;&#x6570;&#x6216;&#x65B9;&#x6CD5;&#x5EF6;&#x8FDF;&#x6267;&#x884C;&#xFF0C;&#x76F4;&#x5230;&#x5305;&#x542B;&#x8BE5; defer &#x8BED;&#x53E5;&#x7684;&#x51FD;&#x6570;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x65F6;&#xFF08; &#x65E0;&#x8BBA;&#x51FD;&#x6570;&#x662F;&#x5426;&#x51FA;&#x9519; &#xFF09;&#xFF0C; defer &#x540E;&#x7684;&#x51FD;&#x6570;&#x624D;&#x4F1A;&#x88AB;&#x6267;&#x884C;&#x3002; defer &#x8BED;&#x53E5;&#x4E00;&#x822C;&#x88AB;&#x7528;&#x4E8E;&#x5904;&#x7406;&#x6210;&#x5BF9;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#x6253;&#x5F00;&#x3001;&#x5173;&#x95ED;&#x3001;&#x8FDE;&#x63A5;&#x3001;&#x65AD;&#x5F00;&#x8FDE;&#x63A5;&#x3001;&#x52A0;&#x9501;&#x3001;&#x91CA;&#x653E;&#x9501;&#x3002;&#x56E0;&#x4E3A; defer &#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x8BA9;&#x4F60;&#x66F4;&#x4EFB;&#x4F55;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C; &#x8D44;&#x6E90;&#x90FD;&#x4F1A;&#x88AB;&#x91CA;&#x653E;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package ioutil func ReadFile (filename string ) ([] byte , error) { \tf, err := os.Open(filename) \t if err != nil { \t\t\t return nil , err \t} \t defer f.Close() \t return ReadAll(f) } // &#x4E92;&#x65A5;&#x9501; var mu sync.Mutex var m = make ( map [ string ] int ) func lookup (key string ) int { \tmu.Lock() \t defer mu.Unlock() \t return m[key] } // &#x8BB0;&#x5F55;&#x4F55;&#x65F6;&#x8FDB;&#x5165;&#x548C;&#x9000;&#x51FA;&#x51FD;&#x6570; func bigSlowOperation () { \t defer trace( bigSlowOperation )() // &#x8FD0;&#x884C; trace &#x51FD;&#x6570;&#xFF0C;&#x8BB0;&#x5F55;&#x4E86;&#x8FDB;&#x5165;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x503C;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x503C;&#x4F1A;&#x5EF6;&#x8FDF;&#x6267;&#x884C; \textra parentheses \t // ...lots of work&#x2026; \ttime.Sleep( 10 * time.Second) // simulate slow \toperation by sleeping } func trace (msg string ) func () { \tstart := time.Now() \tlog.Printf( enter %s , msg) \t return func () { \t\tlog.Printf( exit %s (%s) , msg,time.Since(start)) \t} } // &#x89C2;&#x5BDF;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C; func double (x int ) (result int ) { // &#x6709;&#x540D;&#x8FD4;&#x56DE;&#x503C; // &#x7531;&#x4E8E; defer &#x5728; return &#x4E4B;&#x540E;&#x6267;&#x884C;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x7684; result &#x5C31;&#x662F;&#x51FD;&#x6570;&#x6700;&#x7EC8;&#x7684;&#x8FD4;&#x56DE;&#x503C; \t defer func () { fmt.Printf( double(%d) = %d\\n , x,result) }() \t return x + x } _ = double( 4 ) // &#x8F93;&#x51FA; double(4) = 8 &#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#x6211;&#x4EEC;&#x77E5;&#x9053; defer &#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x89C2;&#x5BDF;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x503C;&#xFF0C; defer &#x51FD;&#x6570;&#x8FD8;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF1A; 1 2 3 4 5 func triple (x int ) (result int ) { \t defer func () { result += x }() \t return double(x) } fmt.Println(triple( 4 )) // 12 &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#x6709;&#x591A;&#x6761; defer &#x8BED;&#x53E5;&#xFF0C;&#x90A3;&#x4E48;&#x90A3;&#x51E0;&#x4E2A; defer &#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x6267;&#x884C;&#x987A;&#x5E8F;&#x662F;&#x600E;&#x6837;&#x7684; &#x5728;&#x540C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#xFF0C; defer &#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x6267;&#x884C;&#x987A;&#x5E8F;&#x4E0E;&#x5B83;&#x4EEC;&#x5206;&#x522B;&#x6240;&#x5C5E;&#x7684; defer &#x8BED;&#x53E5;&#x7684;&#x51FA;&#x73B0;&#x987A;&#x5E8F;&#xFF08;&#x66F4;&#x4E25;&#x8C28;&#x5730;&#x8BF4;&#xFF0C;&#x662F;&#x6267;&#x884C;&#x987A;&#x5E8F;&#xFF09;&#x5B8C;&#x5168;&#x76F8;&#x53CD; &#x3002; &#x5728; defer &#x8BED;&#x53E5;&#x6BCF;&#x6B21;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;Go &#x8BED;&#x8A00;&#x4F1A;&#x628A;&#x5B83;&#x643A;&#x5E26;&#x7684; defer &#x51FD;&#x6570;&#x53CA;&#x5176;&#x53C2;&#x6570;&#x503C;&#x53E6;&#x884C;&#x5B58;&#x50A8;&#x5230;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#x4E2D;&#x3002; &#x8FD9;&#x4E2A;&#x961F;&#x5217;&#x4E0E;&#x8BE5; defer &#x8BED;&#x53E5;&#x6240;&#x5C5E;&#x7684;&#x51FD;&#x6570;&#x662F;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#xFF0C;&#x5B83;&#x662F;&#x5148;&#x8FDB;&#x540E;&#x51FA;&#xFF08;FILO&#xFF09;&#x7684;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x4E2A;&#x6808;&#x3002; &#x5728;&#x9700;&#x8981;&#x6267;&#x884C;&#x67D0;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#x7684; defer &#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;Go &#x8BED;&#x8A00;&#x4F1A;&#x5148;&#x62FF;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x961F;&#x5217;&#xFF0C;&#x7136;&#x540E;&#x4ECE;&#x8BE5;&#x961F;&#x5217;&#x4E2D;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x5730;&#x53D6;&#x51FA; defer &#x51FD;&#x6570;&#x53CA; &#x5176;&#x53C2;&#x6570;&#x503C;&#xFF0C;&#x5E76;&#x9010;&#x4E2A;&#x6267;&#x884C;&#x8C03;&#x7528;&#x3002;"},"basic/function.html#传入函数的那些参数值后来怎么样了":{"title":"&#x4F20;&#x5165;&#x51FD;&#x6570;&#x7684;&#x90A3;&#x4E9B;&#x53C2;&#x6570;&#x503C;&#x540E;&#x6765;&#x600E;&#x4E48;&#x6837;&#x4E86;","path":"\\golang-learn\\basic\\function.html#传入函数的那些参数值后来怎么样了","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package main import fmt func main () { \tarray1 := [ 3 ] string { a , b , c } \tfmt.Printf( The array: %v\\n , array1) \tarray2 := modifyArray(array1) \tfmt.Printf( The modified array: %v\\n , array2) \tfmt.Printf( The original array: %v\\n , array1) } func modifyArray (a [3] string ) [3] string { \ta[ 1 ] = x \t return a } &#x5728; main &#x51FD;&#x6570;&#x4E2D;&#x58F0;&#x660E;&#x4E86;&#x4E00;&#x4E2A;&#x6570;&#x7EC4; array1 &#xFF0C;&#x7136;&#x540E;&#x628A;&#x5B83;&#x4F20;&#x7ED9;&#x4E86;&#x51FD;&#x6570; modify &#xFF0C; modify &#x5BF9;&#x53C2;&#x6570;&#x503C;&#x7A0D;&#x4F5C;&#x4FEE;&#x6539;&#x540E;&#x5C06;&#x5176;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C;&#x503C;&#x8FD4;&#x56DE;&#x3002; main &#x51FD;&#x6570;&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x62FF;&#x5230;&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;&#x4E4B;&#x540E;&#x6253;&#x5370;&#x4E86;&#x5B83;&#xFF08;&#x5373; array2 &#xFF09;&#xFF0C;&#x4EE5;&#x53CA;&#x539F;&#x6765;&#x7684;&#x6570;&#x7EC4; array1 &#x3002;&#x5173;&#x952E;&#x95EE;&#x9898;&#x662F;&#xFF0C;&#x539F;&#x6570;&#x7EC4;&#x4F1A;&#x56E0; modify &#x51FD;&#x6570;&#x5BF9;&#x53C2;&#x6570; &#x503C;&#x7684;&#x4FEE;&#x6539;&#x800C;&#x6539;&#x53D8;&#x5417;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A;&#x539F;&#x6570;&#x7EC4;&#x4E0D;&#x4F1A;&#x6539;&#x53D8;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x539F;&#x56E0;&#x662F;&#xFF0C; &#x6240;&#x6709;&#x4F20;&#x7ED9;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x503C;&#x90FD;&#x4F1A;&#x88AB;&#x590D;&#x5236;&#xFF0C;&#x51FD;&#x6570;&#x5728;&#x5176;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#x7684;&#x5E76;&#x4E0D;&#x662F;&#x53C2;&#x6570;&#x503C;&#x7684;&#x539F;&#x503C;&#xFF0C; &#x800C;&#x662F;&#x5B83;&#x7684;&#x526F;&#x672C; &#x3002; &#x7531;&#x4E8E;&#x6570;&#x7EC4;&#x662F;&#x503C;&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x6BCF;&#x4E00;&#x6B21;&#x590D;&#x5236;&#x90FD;&#x4F1A;&#x62F7;&#x8D1D;&#x5B83;&#xFF0C;&#x4EE5;&#x53CA;&#x5B83;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x503C;&#x3002; &#x6CE8;&#x610F;&#xFF0C; &#x5BF9;&#x4E8E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;&#x5207;&#x7247;&#x3001;&#x5B57;&#x5178;&#x3001;&#x901A;&#x9053;&#xFF0C;&#x50CF;&#x4E0A;&#x9762;&#x90A3;&#x6837;&#x590D;&#x5236;&#x5B83;&#x4EEC;&#x7684;&#x503C;&#xFF0C;&#x53EA;&#x4F1A;&#x62F7;&#x8D1D;&#x5B83;&#x4EEC;&#x672C;&#x8EAB;&#x800C;&#x5DF2;&#xFF0C;&#x5E76;&#x4E0D;&#x4F1A;&#x62F7;&#x8D1D;&#x5B83;&#x4EEC;&#x5F15;&#x7528;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x636E;&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x8FD9;&#x65F6;&#x53EA;&#x662F;&#x6D45;&#x8868;&#x590D;&#x5236;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6DF1;&#x5C42;&#x590D;&#x5236; &#x3002; &#x4EE5;&#x5207;&#x7247;&#x503C;&#x4E3A;&#x4F8B;&#xFF0C;&#x5982;&#x6B64;&#x590D;&#x5236;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x662F;&#x62F7;&#x8D1D;&#x4E86;&#x5B83;&#x6307;&#x5411;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x4E2D;&#x67D0;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x4EE5;&#x53CA;&#x5B83;&#x7684;&#x957F;&#x5EA6;&#x503C;&#x548C;&#x5BB9;&#x91CF;&#x503C;&#xFF0C;&#x800C;&#x5B83;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x5E76;&#x4E0D;&#x4F1A;&#x88AB;&#x62F7;&#x8D1D;&#x3002;"},"standards/time.html":{"title":"time","path":"\\golang-learn\\standards\\time.html","body":"time time 提供了一个数据类型 time.Time （作为值使用）以及显示和测量时间和日期的功能函数，比如： time.Now() 获取当前时间。 t.Day() 、 t.Minute() 获取时间的一部分。 time.After 、 time.Ticker 在经过一定时间或周期执行某项任务（事件处理的特例）。 time.Sleep（Duration d） 暂停某个进程（ goroutine），暂停时长为 d 。 Duration 代表两个时间点之间经过的时间，以 纳秒 为单位，类型为 int64 。 Location 类型映射某个时区的时间，UTC 表示通用协调世界时间。 时区 Go 语言使用 Location 来表示地区相关的时区，一个 Location 可能表示多个时区。 time 包提供了 Location 的两个实例： Local 代表当前系统本地时区； UTC 代表通用协调时间，也就是零时区。 time 包默认（为显示提供时区）使用 UTC 时区。 Local 是如何做到表示本地时区的？ 在初始化 Local 时，通过读取 /etc/localtime （这是一个符号链接，指向 /usr/share/zoneinfo 中某一个时区）可以获取到系统本地时区。 如果设置了 环境变量 TZ ，则会优先使用它。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 tz, ok := syscall.Getenv( \"TZ\" ) switch  case !ok: \tz, err := loadZoneFile( \"\" , \"/etc/localtime\" ) \t if err == nil  \t\tlocalLoc = *z \t\tlocalLoc.name = \"Local\" \t\t return \t case tz != \"\" &amp;&amp; tz != \"UTC\" : \t if z, err := loadLocation(tz); err == nil  \t\tlocalLoc = *z \t\t return \t  获得特定时区的实例 函数 LoadLocation 可以根据名称获取特定时区的实例： 1 func LoadLocation (name string ) (*Location, error) 如果 name 是 “” 或 “UTC”，返回 UTC； 如果 name 是 “Local”，返回 Local ； 否则 name 应该是 IANA 时区数据库里有记录的地点名（该数据库记录了地点和对应的时区），如 “America/New_York”。 Time Time 代表一个纳秒精度的时间点。程序中应使用 time.Time 类型值来保存和传递时间，而不是指针。 程序中应使用 Time 类型值来保存和传递时间，而不是指针。 一个 Time 类型值可以被多个 go 协程同时使用。时间点可以使用 Before、After 和 Equal 方法进行比较。Sub 方法让两个时间点相减， 生成一个 Duration 类型值（代表时间段）。Add 方法给一个时间点加上一个时间段，生成一个新的 Time 类型时间点。 Time 零值代表时间点 January 1, year 1, 00:00:00.000000000 UTC 。因为本时间点一般不会出现在使用中， IsZero 方法提供 了检验时间是否是显式初始化的一个简单途径。 每一个 Time 都具有一个地点信息（即对应地点的时区信息），当计算时间的表示格式时，如 Format、Hour 和 Year 等方法， 都会考虑该信息。Local、UTC 和 In 方法返回一个指定时区（但指向同一时间点）的 Time。修改地点 / 时区信息只是会改变其表示；不会修改被表 示的时间点，因此也不会影响其计算。 通过 == 比较 Time 时，Location 信息也会参与比较，因此 Time 不应该作为 map 的 key。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 type Time struct  \t // sec gives the number of seconds elapsed since \t // January 1, year 1 00:00:00 UTC. \tsec int64 \t // nsec specifies a non-negative nanosecond \t // offset within the second named by Seconds. \t // It must be in the range [0, 999999999]. \tnsec int32 \t // loc specifies the Location that should be used to \t // determine the minute, hour, month, day, and year \t // that correspond to this Time. \t // Only the zero Time has a nil Location. \t // In that case it is interpreted to mean UTC. \tloc *Location  先看 time.Now() 函数。 1 2 3 4 5 // Now returns the current local time. func Now () Time  \tsec, nsec := now() \t return Timesec + unixToInternal, nsec, Local  now() 的具体实现在 runtime 包中。从 Time{sec + unixToInternal, nsec, Local} 可以看出， Time 结构的 sec 并非 Unix 时间戳，实际上，加上的 unixToInternal 是 1-1-1 到 1970-1-1 经历的秒数。也就是 Time 中的 sec 是从 1-1-1 算起的秒数， 而不是 Unix 时间戳。 Time 的最后一个字段表示地点时区信息。本章后面会专门介绍。 常用方法 Time.IsZero() 函数用于判断 Time 表示的时间是否是 0 值。表示 1 年 1 月 1 日。 time.Unix(sec, nsec int64 ) 通过 Unix 时间戳生成 time.Time 实例； time.Time.Unix() 得到 Unix 时间戳； time.Time.UnixNano() 得到 Unix 时间戳的纳秒表示； time.Parse 和 time.ParseInLocation time.Time.Format 1 2 t, _ := time.Parse( \"2006-01-02 15:04:05\" , \"2016-06-13 09:14:00\" ) fmt.Println(time.Now().Sub(t).Hours()) 这段代码的结果跟预期的不一样。原因是 time.Now() 的时区是 time.Local ，而 time.Parse 解析出来的时区却是 time.UTC （可以通过 Time.Location() 函数知道是哪个时区）。在中国，它们相差 8 小时。 所以，一般的，我们应该总是使用 time.ParseInLocation 来解析时间，并给第三个参数传递 time.Local 。 为什么是 2006-01-02 15:04:05 可能你已经注意到： 2006-01-02 15:04:05 这个字符串了。没错，这是固定写法，类似于其他语言中 Y-m-d H:i:s 等。为什么采用这种形式？ 又为什么是这个时间点而不是其他时间点？ 官方说，使用具体的时间，比使用 Y-m-d H:i:s 更容易理解和记忆； 而选择这个时间点，也是出于好记的考虑，官方的例子： Mon Jan 2 15:04:05 MST 2006 ，很好记：2006 年 1 月 2 日 3 点 4 分 5 秒 Round 和 Truncate 方法 比如，有这么个需求：获取当前时间整点的 Time 实例。例如，当前时间是 15:54:23 ，需要的是 15:00:00 。我们可以这么做： 1 2 t, _ := time.ParseInLocation(2006-01-02 15:04:05, time.Now().Format(2006-01-02 15:00:00), time.Local) fmt.Println(t) 实际上， time 包给我们提供了专门的方法，功能更强大，性能也更好，这就是 Round 和 Trunate ，它们区别，一个是取最接近的，一个是向下取整。 1 2 3 4 5 6 7 8 9 10 11 12 13 t, _ := time.ParseInLocation( \"2006-01-02 15:04:05\" , \"2016-06-13 15:34:39\" , time.Local) // 整点（向下取整） fmt.Println(t.Truncate( 1 * time.Hour)) // 整点（最接近） fmt.Println(t.Round( 1 * time.Hour)) // 整分（向下取整） fmt.Println(t.Truncate( 1 * time.Minute)) // 整分（最接近） fmt.Println(t.Round( 1 * time.Minute)) t2, _ := time.ParseInLocation( \"2006-01-02 15:04:05\" , t.Format( \"2006-01-02 15:00:00\" ), time.Local) fmt.Println(t2) Format 自定义时间格式化字符串，例如： fmt.Printf(%02d.%02d.%4d\\n, t.Day(), t.Month(), t.Year()) 将会输出 21.07.2011 。 包中的一个预定义函数 func (t Time) Format(layout string) string 可以根据一个格式化字符串来将一个时间 t 转换为相应 格式的字符串，你可以使用一些预定义的格式，如： time.ANSIC 或 time.RFC822 。 一般的格式化设计是通过对于一个标准时间的格式化描述来展现的，示例： 1 fmt.Println(t.Format( \"02 Jan 2006 15:04\" )) // 21 Jul 2011 10:31 示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 package main import ( \t \"fmt\" \t \"time\" ) var week time.Duration func main ()  \tt := time.Now() \tfmt.Println(t) // e.g. Wed Dec 21 09:52:14 +0100 RST 2011 \tfmt.Printf( \"%02d.%02d.%4d\\n\" , t.Day(), t.Month(), t.Year()) \t // 21.12.2011 \tt = time.Now().UTC() \tfmt.Println(t) // Wed Dec 21 08:52:14 +0000 UTC 2011 \tfmt.Println(time.Now()) // Wed Dec 21 09:52:14 +0100 RST 2011 \t // calculating times: \tweek = 60 * 60 * 24 * 7 * 1e9 // must be in nanosec \tweek_from_now := t.Add(time.Duration(week)) \tfmt.Println(week_from_now) // Wed Dec 28 08:52:14 +0000 UTC 2011 \t // formatting times: \tfmt.Println(t.Format(time.RFC822)) // 21 Dec 11 0852 UTC \tfmt.Println(t.Format(time.ANSIC)) // Wed Dec 21 08:56:34 2011 \tfmt.Println(t.Format( \"02 Jan 2006 15:04\" )) // 21 Dec 2011 08:52 \ts := t.Format( \"20060102\" ) \tfmt.Println(t, \"=\" , s) \t // Wed Dec 21 08:52:14 +0000 UTC 2011 = 20111221  示例，计算函数执行时间： 1 2 3 4 5 start := time.Now() // 起始时间 longCalculation() end := time.Now() // 结束时间 delta := end.Sub(start) // 消耗时间 fmt.Printf( \"longCalculation took this amount of time: %s\\n\" , delta) 定时器 time 包有两种定时器： Timer （到达指定时间触发且只触发一次） Ticker （间隔特定时间触发）。 Timer 1 2 3 4 type Timer struct  \tC - chan Time\t // The channel on which the time is delivered. \tr runtimeTimer  Timer 的实例必须通过 NewTimer 或 AfterFunc 获得。 当 Timer 到期时，当时的时间会被发送给 C (channel)，除非 Timer 是被 AfterFunc 函数创建的 。 runtimeTimer 定义在 sleep.go 文件中，必须和 runtime 包中 time.go 文件中的 timer 保持一致： 1 2 3 4 5 6 7 8 9 10 11 12 type timer struct  \ti int // heap index \t // Timer wakes up at when, and then at when+period, ... (period  0 only) \t // each time calling f(now, arg) in the timer goroutine, so f must be \t // a well-behaved function and not block. \twhen int64 \tperiod int64 \tf func ( interface , uintptr ) \t arg interface  \tseq uintptr  通过 NewTimer() 来看这些字段： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // NewTimer creates a new Timer that will send // the current time on its channel after at least duration d. func NewTimer (d Duration) * Timer  \tc := make ( chan Time, 1 ) \tt := &amp;Timer \t\tC: c, \t\tr: runtimeTimer \t\t\twhen: when(d), \t\t\tf: sendTime, \t\t\targ: c, \t\t, \t \tstartTimer(&amp;t.r) \t return t  在 when 表示的时间到时，会往 Timer.C 中发送当前时间。 when 表示的时间是纳秒时间，正常通过 runtimeNano() + int64(d) 赋值。 f 参数的值是 sendTime ，定时器时间到时，会调用 f ，并将 arg 和 seq 传给 f 。 因为 Timer 是一次性的，所以 period 保留默认值 0。 常用方法 time.After time.After 模拟超时： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 c := make ( chan int ) go func ()  \t // time.Sleep(1 * time.Second) \ttime.Sleep( 3 * time.Second) \t-c () select  case c - 1 : \tfmt.Println( \"channel...\" ) case -time.After( 2 * time.Second): \t close (c) \tfmt.Println( \"timeout...\" )  time.Stop 和 time.Reset 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 start := time.Now() timer := time.AfterFunc( 2 *time.Second, func ()  \tfmt.Println( \"after func callback, elaspe:\" , time.Now().Sub(start)) ) time.Sleep( 1 * time.Second) // time.Sleep(3*time.Second) // Reset 在 Timer 还未触发时返回 true；触发了或 Stop 了，返回 false if timer.Reset( 3 * time.Second)  \tfmt.Println( \"timer has not trigger!\" )  else  \tfmt.Println( \"timer had expired or stop!\" )  time.Sleep( 10 * time.Second) // output: // timer has not trigger! // after func callback, elaspe: 4.00026461s timer.Stop() 不会关闭 Timer.C 这个 channel，可以使用 timer.Reset(0) 代替 timer.Stop() 来停止定时器。 Sleep Sleep 的是通过 Timer 实现的（查看 runtime/time.go 文件）。用于暂停当前 goroutine 。 Ticker Ticker 和 Timer 类似，区别是： Ticker 中的 runtimeTimer 字段的 period 字段会赋值为 NewTicker(d Duration) 中的 d ， 表示每间隔 d 纳秒，定时器就会触发一次。 除非程序终止前定时器一直需要触发，否则，不需要时应该调用 Ticker.Stop 来释放相关资源。 如果程序终止前需要定时器一直触发，可以使用更简单方便的 time.Tick 函数，因为 Ticker 实例隐藏起来了，因此，该函数启动的定时器无法停止。"},"standards/time.html#time":{"title":"time","path":"\\golang-learn\\standards\\time.html#time","body":"time &#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x7C7B;&#x578B; time.Time &#xFF08;&#x4F5C;&#x4E3A;&#x503C;&#x4F7F;&#x7528;&#xFF09;&#x4EE5;&#x53CA;&#x663E;&#x793A;&#x548C;&#x6D4B;&#x91CF;&#x65F6;&#x95F4;&#x548C;&#x65E5;&#x671F;&#x7684;&#x529F;&#x80FD;&#x51FD;&#x6570;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A; time.Now() &#x83B7;&#x53D6;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x3002; t.Day() &#x3001; t.Minute() &#x83B7;&#x53D6;&#x65F6;&#x95F4;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002; time.After &#x3001; time.Ticker &#x5728;&#x7ECF;&#x8FC7;&#x4E00;&#x5B9A;&#x65F6;&#x95F4;&#x6216;&#x5468;&#x671F;&#x6267;&#x884C;&#x67D0;&#x9879;&#x4EFB;&#x52A1;&#xFF08;&#x4E8B;&#x4EF6;&#x5904;&#x7406;&#x7684;&#x7279;&#x4F8B;&#xFF09;&#x3002; time.Sleep&#xFF08;Duration d&#xFF09; &#x6682;&#x505C;&#x67D0;&#x4E2A;&#x8FDB;&#x7A0B;&#xFF08; goroutine&#xFF09;&#xFF0C;&#x6682;&#x505C;&#x65F6;&#x957F;&#x4E3A; d &#x3002; Duration &#x4EE3;&#x8868;&#x4E24;&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#x4E4B;&#x95F4;&#x7ECF;&#x8FC7;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x4EE5; &#x7EB3;&#x79D2; &#x4E3A;&#x5355;&#x4F4D;&#xFF0C;&#x7C7B;&#x578B;&#x4E3A; int64 &#x3002; Location &#x7C7B;&#x578B;&#x6620;&#x5C04;&#x67D0;&#x4E2A;&#x65F6;&#x533A;&#x7684;&#x65F6;&#x95F4;&#xFF0C;UTC &#x8868;&#x793A;&#x901A;&#x7528;&#x534F;&#x8C03;&#x4E16;&#x754C;&#x65F6;&#x95F4;&#x3002;"},"standards/time.html#时区":{"title":"&#x65F6;&#x533A;","path":"\\golang-learn\\standards\\time.html#时区","body":"Go &#x8BED;&#x8A00;&#x4F7F;&#x7528; Location &#x6765;&#x8868;&#x793A;&#x5730;&#x533A;&#x76F8;&#x5173;&#x7684;&#x65F6;&#x533A;&#xFF0C;&#x4E00;&#x4E2A; Location &#x53EF;&#x80FD;&#x8868;&#x793A;&#x591A;&#x4E2A;&#x65F6;&#x533A;&#x3002; time &#x5305;&#x63D0;&#x4F9B;&#x4E86; Location &#x7684;&#x4E24;&#x4E2A;&#x5B9E;&#x4F8B;&#xFF1A; Local &#x4EE3;&#x8868;&#x5F53;&#x524D;&#x7CFB;&#x7EDF;&#x672C;&#x5730;&#x65F6;&#x533A;&#xFF1B; UTC &#x4EE3;&#x8868;&#x901A;&#x7528;&#x534F;&#x8C03;&#x65F6;&#x95F4;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x96F6;&#x65F6;&#x533A;&#x3002; time &#x5305;&#x9ED8;&#x8BA4;&#xFF08;&#x4E3A;&#x663E;&#x793A;&#x63D0;&#x4F9B;&#x65F6;&#x533A;&#xFF09;&#x4F7F;&#x7528; UTC &#x65F6;&#x533A;&#x3002; Local &#x662F;&#x5982;&#x4F55;&#x505A;&#x5230;&#x8868;&#x793A;&#x672C;&#x5730;&#x65F6;&#x533A;&#x7684;&#xFF1F; &#x5728;&#x521D;&#x59CB;&#x5316; Local &#x65F6;&#xFF0C;&#x901A;&#x8FC7;&#x8BFB;&#x53D6; /etc/localtime &#xFF08;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#xFF0C;&#x6307;&#x5411; /usr/share/zoneinfo &#x4E2D;&#x67D0;&#x4E00;&#x4E2A;&#x65F6;&#x533A;&#xFF09;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5230;&#x7CFB;&#x7EDF;&#x672C;&#x5730;&#x65F6;&#x533A;&#x3002; &#x5982;&#x679C;&#x8BBE;&#x7F6E;&#x4E86; &#x73AF;&#x5883;&#x53D8;&#x91CF; TZ &#xFF0C;&#x5219;&#x4F1A;&#x4F18;&#x5148;&#x4F7F;&#x7528;&#x5B83;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 tz, ok := syscall.Getenv( TZ ) switch { case !ok: \tz, err := loadZoneFile(  , /etc/localtime ) \t if err == nil { \t\tlocalLoc = *z \t\tlocalLoc.name = Local \t\t return \t} case tz !=  &amp;&amp; tz != UTC : \t if z, err := loadLocation(tz); err == nil { \t\tlocalLoc = *z \t\t return \t} } &#x83B7;&#x5F97;&#x7279;&#x5B9A;&#x65F6;&#x533A;&#x7684;&#x5B9E;&#x4F8B; &#x51FD;&#x6570; LoadLocation &#x53EF;&#x4EE5;&#x6839;&#x636E;&#x540D;&#x79F0;&#x83B7;&#x53D6;&#x7279;&#x5B9A;&#x65F6;&#x533A;&#x7684;&#x5B9E;&#x4F8B;&#xFF1A; 1 func LoadLocation (name string ) (*Location, error) &#x5982;&#x679C; name &#x662F; &#x201C;&#x201D; &#x6216; &#x201C;UTC&#x201D;&#xFF0C;&#x8FD4;&#x56DE; UTC&#xFF1B; &#x5982;&#x679C; name &#x662F; &#x201C;Local&#x201D;&#xFF0C;&#x8FD4;&#x56DE; Local &#xFF1B; &#x5426;&#x5219; name &#x5E94;&#x8BE5;&#x662F; IANA &#x65F6;&#x533A;&#x6570;&#x636E;&#x5E93;&#x91CC;&#x6709;&#x8BB0;&#x5F55;&#x7684;&#x5730;&#x70B9;&#x540D;&#xFF08;&#x8BE5;&#x6570;&#x636E;&#x5E93;&#x8BB0;&#x5F55;&#x4E86;&#x5730;&#x70B9;&#x548C;&#x5BF9;&#x5E94;&#x7684;&#x65F6;&#x533A;&#xFF09;&#xFF0C;&#x5982; &#x201C;America/New_York&#x201D;&#x3002;"},"standards/time.html#Time":{"title":"Time","path":"\\golang-learn\\standards\\time.html#Time","body":"Time &#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x7EB3;&#x79D2;&#x7CBE;&#x5EA6;&#x7684;&#x65F6;&#x95F4;&#x70B9;&#x3002;&#x7A0B;&#x5E8F;&#x4E2D;&#x5E94;&#x4F7F;&#x7528; time.Time &#x7C7B;&#x578B;&#x503C;&#x6765;&#x4FDD;&#x5B58;&#x548C;&#x4F20;&#x9012;&#x65F6;&#x95F4;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6307;&#x9488;&#x3002; &#x7A0B;&#x5E8F;&#x4E2D;&#x5E94;&#x4F7F;&#x7528; Time &#x7C7B;&#x578B;&#x503C;&#x6765;&#x4FDD;&#x5B58;&#x548C;&#x4F20;&#x9012;&#x65F6;&#x95F4;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6307;&#x9488;&#x3002; &#x4E00;&#x4E2A; Time &#x7C7B;&#x578B;&#x503C;&#x53EF;&#x4EE5;&#x88AB;&#x591A;&#x4E2A; go &#x534F;&#x7A0B;&#x540C;&#x65F6;&#x4F7F;&#x7528;&#x3002;&#x65F6;&#x95F4;&#x70B9;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; Before&#x3001;After &#x548C; Equal &#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#x3002;Sub &#x65B9;&#x6CD5;&#x8BA9;&#x4E24;&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#x76F8;&#x51CF;&#xFF0C; &#x751F;&#x6210;&#x4E00;&#x4E2A; Duration &#x7C7B;&#x578B;&#x503C;&#xFF08;&#x4EE3;&#x8868;&#x65F6;&#x95F4;&#x6BB5;&#xFF09;&#x3002;Add &#x65B9;&#x6CD5;&#x7ED9;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#x52A0;&#x4E0A;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x6BB5;&#xFF0C;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x65B0;&#x7684; Time &#x7C7B;&#x578B;&#x65F6;&#x95F4;&#x70B9;&#x3002; Time &#x96F6;&#x503C;&#x4EE3;&#x8868;&#x65F6;&#x95F4;&#x70B9; January 1, year 1, 00:00:00.000000000 UTC &#x3002;&#x56E0;&#x4E3A;&#x672C;&#x65F6;&#x95F4;&#x70B9;&#x4E00;&#x822C;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x5728;&#x4F7F;&#x7528;&#x4E2D;&#xFF0C; IsZero &#x65B9;&#x6CD5;&#x63D0;&#x4F9B; &#x4E86;&#x68C0;&#x9A8C;&#x65F6;&#x95F4;&#x662F;&#x5426;&#x662F;&#x663E;&#x5F0F;&#x521D;&#x59CB;&#x5316;&#x7684;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x9014;&#x5F84;&#x3002; &#x6BCF;&#x4E00;&#x4E2A; Time &#x90FD;&#x5177;&#x6709;&#x4E00;&#x4E2A;&#x5730;&#x70B9;&#x4FE1;&#x606F;&#xFF08;&#x5373;&#x5BF9;&#x5E94;&#x5730;&#x70B9;&#x7684;&#x65F6;&#x533A;&#x4FE1;&#x606F;&#xFF09;&#xFF0C;&#x5F53;&#x8BA1;&#x7B97;&#x65F6;&#x95F4;&#x7684;&#x8868;&#x793A;&#x683C;&#x5F0F;&#x65F6;&#xFF0C;&#x5982; Format&#x3001;Hour &#x548C; Year &#x7B49;&#x65B9;&#x6CD5;&#xFF0C; &#x90FD;&#x4F1A;&#x8003;&#x8651;&#x8BE5;&#x4FE1;&#x606F;&#x3002;Local&#x3001;UTC &#x548C; In &#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x6307;&#x5B9A;&#x65F6;&#x533A;&#xFF08;&#x4F46;&#x6307;&#x5411;&#x540C;&#x4E00;&#x65F6;&#x95F4;&#x70B9;&#xFF09;&#x7684; Time&#x3002;&#x4FEE;&#x6539;&#x5730;&#x70B9; / &#x65F6;&#x533A;&#x4FE1;&#x606F;&#x53EA;&#x662F;&#x4F1A;&#x6539;&#x53D8;&#x5176;&#x8868;&#x793A;&#xFF1B;&#x4E0D;&#x4F1A;&#x4FEE;&#x6539;&#x88AB;&#x8868; &#x793A;&#x7684;&#x65F6;&#x95F4;&#x70B9;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x5176;&#x8BA1;&#x7B97;&#x3002; &#x901A;&#x8FC7; == &#x6BD4;&#x8F83; Time &#x65F6;&#xFF0C;Location &#x4FE1;&#x606F;&#x4E5F;&#x4F1A;&#x53C2;&#x4E0E;&#x6BD4;&#x8F83;&#xFF0C;&#x56E0;&#x6B64; Time &#x4E0D;&#x5E94;&#x8BE5;&#x4F5C;&#x4E3A; map &#x7684; key&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 type Time struct { \t // sec gives the number of seconds elapsed since \t // January 1, year 1 00:00:00 UTC. \tsec int64 \t // nsec specifies a non-negative nanosecond \t // offset within the second named by Seconds. \t // It must be in the range [0, 999999999]. \tnsec int32 \t // loc specifies the Location that should be used to \t // determine the minute, hour, month, day, and year \t // that correspond to this Time. \t // Only the zero Time has a nil Location. \t // In that case it is interpreted to mean UTC. \tloc *Location } &#x5148;&#x770B; time.Now() &#x51FD;&#x6570;&#x3002; 1 2 3 4 5 // Now returns the current local time. func Now () Time { \tsec, nsec := now() \t return Time{sec + unixToInternal, nsec, Local} } now() &#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x5728; runtime &#x5305;&#x4E2D;&#x3002;&#x4ECE; Time{sec + unixToInternal, nsec, Local} &#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C; Time &#x7ED3;&#x6784;&#x7684; sec &#x5E76;&#x975E; Unix &#x65F6;&#x95F4;&#x6233;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x52A0;&#x4E0A;&#x7684; unixToInternal &#x662F; 1-1-1 &#x5230; 1970-1-1 &#x7ECF;&#x5386;&#x7684;&#x79D2;&#x6570;&#x3002;&#x4E5F;&#x5C31;&#x662F; Time &#x4E2D;&#x7684; sec &#x662F;&#x4ECE; 1-1-1 &#x7B97;&#x8D77;&#x7684;&#x79D2;&#x6570;&#xFF0C; &#x800C;&#x4E0D;&#x662F; Unix &#x65F6;&#x95F4;&#x6233;&#x3002; Time &#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x8868;&#x793A;&#x5730;&#x70B9;&#x65F6;&#x533A;&#x4FE1;&#x606F;&#x3002;&#x672C;&#x7AE0;&#x540E;&#x9762;&#x4F1A;&#x4E13;&#x95E8;&#x4ECB;&#x7ECD;&#x3002; &#x5E38;&#x7528;&#x65B9;&#x6CD5; Time.IsZero() &#x51FD;&#x6570;&#x7528;&#x4E8E;&#x5224;&#x65AD; Time &#x8868;&#x793A;&#x7684;&#x65F6;&#x95F4;&#x662F;&#x5426;&#x662F; 0 &#x503C;&#x3002;&#x8868;&#x793A; 1 &#x5E74; 1 &#x6708; 1 &#x65E5;&#x3002; time.Unix(sec, nsec int64 ) &#x901A;&#x8FC7; Unix &#x65F6;&#x95F4;&#x6233;&#x751F;&#x6210; time.Time &#x5B9E;&#x4F8B;&#xFF1B; time.Time.Unix() &#x5F97;&#x5230; Unix &#x65F6;&#x95F4;&#x6233;&#xFF1B; time.Time.UnixNano() &#x5F97;&#x5230; Unix &#x65F6;&#x95F4;&#x6233;&#x7684;&#x7EB3;&#x79D2;&#x8868;&#x793A;&#xFF1B; time.Parse &#x548C; time.ParseInLocation time.Time.Format 1 2 t, _ := time.Parse( 2006-01-02 15:04:05 , 2016-06-13 09:14:00 ) fmt.Println(time.Now().Sub(t).Hours()) &#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x7684;&#x7ED3;&#x679C;&#x8DDF;&#x9884;&#x671F;&#x7684;&#x4E0D;&#x4E00;&#x6837;&#x3002;&#x539F;&#x56E0;&#x662F; time.Now() &#x7684;&#x65F6;&#x533A;&#x662F; time.Local &#xFF0C;&#x800C; time.Parse &#x89E3;&#x6790;&#x51FA;&#x6765;&#x7684;&#x65F6;&#x533A;&#x5374;&#x662F; time.UTC &#xFF08;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; Time.Location() &#x51FD;&#x6570;&#x77E5;&#x9053;&#x662F;&#x54EA;&#x4E2A;&#x65F6;&#x533A;&#xFF09;&#x3002;&#x5728;&#x4E2D;&#x56FD;&#xFF0C;&#x5B83;&#x4EEC;&#x76F8;&#x5DEE; 8 &#x5C0F;&#x65F6;&#x3002; &#x6240;&#x4EE5;&#xFF0C;&#x4E00;&#x822C;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x603B;&#x662F;&#x4F7F;&#x7528; time.ParseInLocation &#x6765;&#x89E3;&#x6790;&#x65F6;&#x95F4;&#xFF0C;&#x5E76;&#x7ED9;&#x7B2C;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#x4F20;&#x9012; time.Local &#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x662F; 2006-01-02 15:04:05 &#x53EF;&#x80FD;&#x4F60;&#x5DF2;&#x7ECF;&#x6CE8;&#x610F;&#x5230;&#xFF1A; 2006-01-02 15:04:05 &#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E86;&#x3002;&#x6CA1;&#x9519;&#xFF0C;&#x8FD9;&#x662F;&#x56FA;&#x5B9A;&#x5199;&#x6CD5;&#xFF0C;&#x7C7B;&#x4F3C;&#x4E8E;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x4E2D; Y-m-d H:i:s &#x7B49;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x91C7;&#x7528;&#x8FD9;&#x79CD;&#x5F62;&#x5F0F;&#xFF1F; &#x53C8;&#x4E3A;&#x4EC0;&#x4E48;&#x662F;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#x800C;&#x4E0D;&#x662F;&#x5176;&#x4ED6;&#x65F6;&#x95F4;&#x70B9;&#xFF1F; &#x5B98;&#x65B9;&#x8BF4;&#xFF0C;&#x4F7F;&#x7528;&#x5177;&#x4F53;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x6BD4;&#x4F7F;&#x7528; Y-m-d H:i:s &#x66F4;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#x548C;&#x8BB0;&#x5FC6;&#xFF1B; &#x800C;&#x9009;&#x62E9;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x70B9;&#xFF0C;&#x4E5F;&#x662F;&#x51FA;&#x4E8E;&#x597D;&#x8BB0;&#x7684;&#x8003;&#x8651;&#xFF0C;&#x5B98;&#x65B9;&#x7684;&#x4F8B;&#x5B50;&#xFF1A; Mon Jan 2 15:04:05 MST 2006 &#xFF0C;&#x5F88;&#x597D;&#x8BB0;&#xFF1A;2006 &#x5E74; 1 &#x6708; 2 &#x65E5; 3 &#x70B9; 4 &#x5206; 5 &#x79D2; Round &#x548C; Truncate &#x65B9;&#x6CD5; &#x6BD4;&#x5982;&#xFF0C;&#x6709;&#x8FD9;&#x4E48;&#x4E2A;&#x9700;&#x6C42;&#xFF1A;&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x6574;&#x70B9;&#x7684; Time &#x5B9E;&#x4F8B;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x662F; 15:54:23 &#xFF0C;&#x9700;&#x8981;&#x7684;&#x662F; 15:00:00 &#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8FD9;&#x4E48;&#x505A;&#xFF1A; 1 2 t, _ := time.ParseInLocation(2006-01-02 15:04:05, time.Now().Format(2006-01-02 15:00:00), time.Local) fmt.Println(t) &#x5B9E;&#x9645;&#x4E0A;&#xFF0C; time &#x5305;&#x7ED9;&#x6211;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x4E13;&#x95E8;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x529F;&#x80FD;&#x66F4;&#x5F3A;&#x5927;&#xFF0C;&#x6027;&#x80FD;&#x4E5F;&#x66F4;&#x597D;&#xFF0C;&#x8FD9;&#x5C31;&#x662F; Round &#x548C; Trunate &#xFF0C;&#x5B83;&#x4EEC;&#x533A;&#x522B;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x53D6;&#x6700;&#x63A5;&#x8FD1;&#x7684;&#xFF0C;&#x4E00;&#x4E2A;&#x662F;&#x5411;&#x4E0B;&#x53D6;&#x6574;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 t, _ := time.ParseInLocation( 2006-01-02 15:04:05 , 2016-06-13 15:34:39 , time.Local) // &#x6574;&#x70B9;&#xFF08;&#x5411;&#x4E0B;&#x53D6;&#x6574;&#xFF09; fmt.Println(t.Truncate( 1 * time.Hour)) // &#x6574;&#x70B9;&#xFF08;&#x6700;&#x63A5;&#x8FD1;&#xFF09; fmt.Println(t.Round( 1 * time.Hour)) // &#x6574;&#x5206;&#xFF08;&#x5411;&#x4E0B;&#x53D6;&#x6574;&#xFF09; fmt.Println(t.Truncate( 1 * time.Minute)) // &#x6574;&#x5206;&#xFF08;&#x6700;&#x63A5;&#x8FD1;&#xFF09; fmt.Println(t.Round( 1 * time.Minute)) t2, _ := time.ParseInLocation( 2006-01-02 15:04:05 , t.Format( 2006-01-02 15:00:00 ), time.Local) fmt.Println(t2) Format &#x81EA;&#x5B9A;&#x4E49;&#x65F6;&#x95F4;&#x683C;&#x5F0F;&#x5316;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; fmt.Printf(%02d.%02d.%4d\\n, t.Day(), t.Month(), t.Year()) &#x5C06;&#x4F1A;&#x8F93;&#x51FA; 21.07.2011 &#x3002; &#x5305;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x9884;&#x5B9A;&#x4E49;&#x51FD;&#x6570; func (t Time) Format(layout string) string &#x53EF;&#x4EE5;&#x6839;&#x636E;&#x4E00;&#x4E2A;&#x683C;&#x5F0F;&#x5316;&#x5B57;&#x7B26;&#x4E32;&#x6765;&#x5C06;&#x4E00;&#x4E2A;&#x65F6;&#x95F4; t &#x8F6C;&#x6362;&#x4E3A;&#x76F8;&#x5E94; &#x683C;&#x5F0F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E00;&#x4E9B;&#x9884;&#x5B9A;&#x4E49;&#x7684;&#x683C;&#x5F0F;&#xFF0C;&#x5982;&#xFF1A; time.ANSIC &#x6216; time.RFC822 &#x3002; &#x4E00;&#x822C;&#x7684;&#x683C;&#x5F0F;&#x5316;&#x8BBE;&#x8BA1;&#x662F;&#x901A;&#x8FC7;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x6807;&#x51C6;&#x65F6;&#x95F4;&#x7684;&#x683C;&#x5F0F;&#x5316;&#x63CF;&#x8FF0;&#x6765;&#x5C55;&#x73B0;&#x7684;&#xFF0C;&#x793A;&#x4F8B;&#xFF1A; 1 fmt.Println(t.Format( 02 Jan 2006 15:04 )) // 21 Jul 2011 10:31 &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 package main import ( \t fmt \t time ) var week time.Duration func main () { \tt := time.Now() \tfmt.Println(t) // e.g. Wed Dec 21 09:52:14 +0100 RST 2011 \tfmt.Printf( %02d.%02d.%4d\\n , t.Day(), t.Month(), t.Year()) \t // 21.12.2011 \tt = time.Now().UTC() \tfmt.Println(t) // Wed Dec 21 08:52:14 +0000 UTC 2011 \tfmt.Println(time.Now()) // Wed Dec 21 09:52:14 +0100 RST 2011 \t // calculating times: \tweek = 60 * 60 * 24 * 7 * 1e9 // must be in nanosec \tweek_from_now := t.Add(time.Duration(week)) \tfmt.Println(week_from_now) // Wed Dec 28 08:52:14 +0000 UTC 2011 \t // formatting times: \tfmt.Println(t.Format(time.RFC822)) // 21 Dec 11 0852 UTC \tfmt.Println(t.Format(time.ANSIC)) // Wed Dec 21 08:56:34 2011 \tfmt.Println(t.Format( 02 Jan 2006 15:04 )) // 21 Dec 2011 08:52 \ts := t.Format( 20060102 ) \tfmt.Println(t, = , s) \t // Wed Dec 21 08:52:14 +0000 UTC 2011 = 20111221 } &#x793A;&#x4F8B;&#xFF0C;&#x8BA1;&#x7B97;&#x51FD;&#x6570;&#x6267;&#x884C;&#x65F6;&#x95F4;&#xFF1A; 1 2 3 4 5 start := time.Now() // &#x8D77;&#x59CB;&#x65F6;&#x95F4; longCalculation() end := time.Now() // &#x7ED3;&#x675F;&#x65F6;&#x95F4; delta := end.Sub(start) // &#x6D88;&#x8017;&#x65F6;&#x95F4; fmt.Printf( longCalculation took this amount of time: %s\\n , delta)"},"standards/time.html#定时器":{"title":"&#x5B9A;&#x65F6;&#x5668;","path":"\\golang-learn\\standards\\time.html#定时器","body":"time &#x5305;&#x6709;&#x4E24;&#x79CD;&#x5B9A;&#x65F6;&#x5668;&#xFF1A; Timer &#xFF08;&#x5230;&#x8FBE;&#x6307;&#x5B9A;&#x65F6;&#x95F4;&#x89E6;&#x53D1;&#x4E14;&#x53EA;&#x89E6;&#x53D1;&#x4E00;&#x6B21;&#xFF09; Ticker &#xFF08;&#x95F4;&#x9694;&#x7279;&#x5B9A;&#x65F6;&#x95F4;&#x89E6;&#x53D1;&#xFF09;&#x3002; Timer 1 2 3 4 type Timer struct { \tC - chan Time\t // The channel on which the time is delivered. \tr runtimeTimer } Timer &#x7684;&#x5B9E;&#x4F8B;&#x5FC5;&#x987B;&#x901A;&#x8FC7; NewTimer &#x6216; AfterFunc &#x83B7;&#x5F97;&#x3002; &#x5F53; Timer &#x5230;&#x671F;&#x65F6;&#xFF0C;&#x5F53;&#x65F6;&#x7684;&#x65F6;&#x95F4;&#x4F1A;&#x88AB;&#x53D1;&#x9001;&#x7ED9; C (channel)&#xFF0C;&#x9664;&#x975E; Timer &#x662F;&#x88AB; AfterFunc &#x51FD;&#x6570;&#x521B;&#x5EFA;&#x7684; &#x3002; runtimeTimer &#x5B9A;&#x4E49;&#x5728; sleep.go &#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x5FC5;&#x987B;&#x548C; runtime &#x5305;&#x4E2D; time.go &#x6587;&#x4EF6;&#x4E2D;&#x7684; timer &#x4FDD;&#x6301;&#x4E00;&#x81F4;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 type timer struct { \ti int // heap index \t // Timer wakes up at when, and then at when+period, ... (period  0 only) \t // each time calling f(now, arg) in the timer goroutine, so f must be \t // a well-behaved function and not block. \twhen int64 \tperiod int64 \tf func ( interface {}, uintptr ) \t arg interface {} \tseq uintptr } &#x901A;&#x8FC7; NewTimer() &#x6765;&#x770B;&#x8FD9;&#x4E9B;&#x5B57;&#x6BB5;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // NewTimer creates a new Timer that will send // the current time on its channel after at least duration d. func NewTimer (d Duration) * Timer { \tc := make ( chan Time, 1 ) \tt := &amp;Timer{ \t\tC: c, \t\tr: runtimeTimer{ \t\t\twhen: when(d), \t\t\tf: sendTime, \t\t\targ: c, \t\t}, \t} \tstartTimer(&amp;t.r) \t return t } &#x5728; when &#x8868;&#x793A;&#x7684;&#x65F6;&#x95F4;&#x5230;&#x65F6;&#xFF0C;&#x4F1A;&#x5F80; Timer.C &#x4E2D;&#x53D1;&#x9001;&#x5F53;&#x524D;&#x65F6;&#x95F4;&#x3002; when &#x8868;&#x793A;&#x7684;&#x65F6;&#x95F4;&#x662F;&#x7EB3;&#x79D2;&#x65F6;&#x95F4;&#xFF0C;&#x6B63;&#x5E38;&#x901A;&#x8FC7; runtimeNano() + int64(d) &#x8D4B;&#x503C;&#x3002; f &#x53C2;&#x6570;&#x7684;&#x503C;&#x662F; sendTime &#xFF0C;&#x5B9A;&#x65F6;&#x5668;&#x65F6;&#x95F4;&#x5230;&#x65F6;&#xFF0C;&#x4F1A;&#x8C03;&#x7528; f &#xFF0C;&#x5E76;&#x5C06; arg &#x548C; seq &#x4F20;&#x7ED9; f &#x3002; &#x56E0;&#x4E3A; Timer &#x662F;&#x4E00;&#x6B21;&#x6027;&#x7684;&#xFF0C;&#x6240;&#x4EE5; period &#x4FDD;&#x7559;&#x9ED8;&#x8BA4;&#x503C; 0&#x3002; &#x5E38;&#x7528;&#x65B9;&#x6CD5; time.After time.After &#x6A21;&#x62DF;&#x8D85;&#x65F6;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 c := make ( chan int ) go func () { \t // time.Sleep(1 * time.Second) \ttime.Sleep( 3 * time.Second) \t-c }() select { case c - 1 : \tfmt.Println( channel... ) case -time.After( 2 * time.Second): \t close (c) \tfmt.Println( timeout... ) } time.Stop &#x548C; time.Reset 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 start := time.Now() timer := time.AfterFunc( 2 *time.Second, func () { \tfmt.Println( after func callback, elaspe: , time.Now().Sub(start)) }) time.Sleep( 1 * time.Second) // time.Sleep(3*time.Second) // Reset &#x5728; Timer &#x8FD8;&#x672A;&#x89E6;&#x53D1;&#x65F6;&#x8FD4;&#x56DE; true&#xFF1B;&#x89E6;&#x53D1;&#x4E86;&#x6216; Stop &#x4E86;&#xFF0C;&#x8FD4;&#x56DE; false if timer.Reset( 3 * time.Second) { \tfmt.Println( timer has not trigger! ) } else { \tfmt.Println( timer had expired or stop! ) } time.Sleep( 10 * time.Second) // output: // timer has not trigger! // after func callback, elaspe: 4.00026461s timer.Stop() &#x4E0D;&#x4F1A;&#x5173;&#x95ED; Timer.C &#x8FD9;&#x4E2A; channel&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; timer.Reset(0) &#x4EE3;&#x66FF; timer.Stop() &#x6765;&#x505C;&#x6B62;&#x5B9A;&#x65F6;&#x5668;&#x3002; Sleep Sleep &#x7684;&#x662F;&#x901A;&#x8FC7; Timer &#x5B9E;&#x73B0;&#x7684;&#xFF08;&#x67E5;&#x770B; runtime/time.go &#x6587;&#x4EF6;&#xFF09;&#x3002;&#x7528;&#x4E8E;&#x6682;&#x505C;&#x5F53;&#x524D; goroutine &#x3002;"},"standards/time.html#Ticker":{"title":"Ticker","path":"\\golang-learn\\standards\\time.html#Ticker","body":"Ticker &#x548C; Timer &#x7C7B;&#x4F3C;&#xFF0C;&#x533A;&#x522B;&#x662F;&#xFF1A; Ticker &#x4E2D;&#x7684; runtimeTimer &#x5B57;&#x6BB5;&#x7684; period &#x5B57;&#x6BB5;&#x4F1A;&#x8D4B;&#x503C;&#x4E3A; NewTicker(d Duration) &#x4E2D;&#x7684; d &#xFF0C; &#x8868;&#x793A;&#x6BCF;&#x95F4;&#x9694; d &#x7EB3;&#x79D2;&#xFF0C;&#x5B9A;&#x65F6;&#x5668;&#x5C31;&#x4F1A;&#x89E6;&#x53D1;&#x4E00;&#x6B21;&#x3002; &#x9664;&#x975E;&#x7A0B;&#x5E8F;&#x7EC8;&#x6B62;&#x524D;&#x5B9A;&#x65F6;&#x5668;&#x4E00;&#x76F4;&#x9700;&#x8981;&#x89E6;&#x53D1;&#xFF0C;&#x5426;&#x5219;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x65F6;&#x5E94;&#x8BE5;&#x8C03;&#x7528; Ticker.Stop &#x6765;&#x91CA;&#x653E;&#x76F8;&#x5173;&#x8D44;&#x6E90;&#x3002; &#x5982;&#x679C;&#x7A0B;&#x5E8F;&#x7EC8;&#x6B62;&#x524D;&#x9700;&#x8981;&#x5B9A;&#x65F6;&#x5668;&#x4E00;&#x76F4;&#x89E6;&#x53D1;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x66F4;&#x7B80;&#x5355;&#x65B9;&#x4FBF;&#x7684; time.Tick &#x51FD;&#x6570;&#xFF0C;&#x56E0;&#x4E3A; Ticker &#x5B9E;&#x4F8B;&#x9690;&#x85CF;&#x8D77;&#x6765;&#x4E86;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x542F;&#x52A8;&#x7684;&#x5B9A;&#x65F6;&#x5668;&#x65E0;&#x6CD5;&#x505C;&#x6B62;&#x3002;"},"basic/basic_data.html":{"title":"基础据类型","path":"\\golang-learn\\basic\\basic_data.html","body":"基础据类型 数值类型 整型 uint ，无符号 32 或 64 位整型 uint8 ，无符号 8 位整型 (0 到 255) uint16 ，无符号 16 位整型 (0 到 65535) uint32 ，无符号 32 位整型 (0 到 4294967295) uint64 ，无符号 64 位整型 (0 到 18446744073709551615) int ，有符号 32 或 64 位整型 int8 ，有符号 8 位整型 (-128 到 127) int16 ，有符号 16 位整型 (-32768 到 32767) int32 ，有符号 32 位整型 (-2147483648 到 2147483647) int64 ，有符号 64 位整型 (-9223372036854775808 到 9223372036854775807) int 和 uint 对应的是 CPU 平台机器的字大小。 浮点数 float32 ，IEEE-754 32 位浮点型数， math.MaxFloat32 表示 float32 能表示的最大数值，大约是 3.4e38 。 float64 ，IEEE-754 64 位浮点型数， math.MaxFloat64 表示 float64 能表示的最大数值，大约是 1.8e308 。 复数 complex64 ，对应 float32 浮点数精度。 complex128 ，对应 float64 浮点数精度。 内置 complex 函数创建复数。 math/cmplx 包提供了复数处理的许多函数。 其他数值类型 byte ， uint8 的别名 ，通常用于表示一个 Unicode 码点。 rune ， int32 的别名 ，一般用于强调数值是一个原始的数据而不是一个小的整数。 uintptr ，无符号整型，用于存放一个指针，没有指定具体的 bit 大小。 布尔类型 布尔类型的值只有两种： true 和 false 。 字符串 字符串就是一串固定长度的字符连接起来的字符序列，不可改变。Go 的字符串是由单个字节连接起来的。Go 的字符串的字节使 用 UTF-8 编码标识 Unicode 文本。 一个原生的字符串面值形式是 `…`，使用反引号代替双引号。在原生的字符串面值中，没有转义操作；全部的内容都是字面的意思， 包含退格和换行 。 字符串操作 内置函数 len 可以获取字符串的长度。 可以通过 string[index] 获取某个索引位置的字节值，字符串是不可修改的，不能使用 string[index] = string2 这种方式改变字符串 ，要修改字符串，必须将其转为可变类型（ []rune 或 []byte ），完成后再转回来。 string[i, l] 获取 string 从第 i 个字节位置开始的 l 个字节，返回一个新的字符串。如： 1 2 3 4 5 6 s := \"hello, world\" fmt.Println(s[ 0 : 5 ]) // \"hello\" fmt.Println(s[: 5 ]) // \"hello\" fmt.Println(s[ 7 :]) // \"world\" fmt.Println(s[:]) // \"hello, world\" + 拼接字符串，如 fmt.Println(goodbye + s[5:]) 输出 goodbye, world 。这种方式每次运算都会产生一个新的字 符串，需要重新分配内存，会给内存分配和 GC 带来额外的负担，所以性能比较差。 fmt.Sprintf() 拼接字符串，内部使用 []byte 实现，不像直接运算符这种会产生很多临时的字符串，但是内部的逻辑比较复杂，有很 多额外的判断，还用到了 interface ，所以性能一般。 strings.Join() 拼接字符串， Join 会先根据字符串数组的内容，计算出一个拼接之后的长度，然后申请对应大小的内存，一个一个字符 串填入，在已有一个数组的情况下，这种效率会很高，但是本来没有，去构造这个数据的代价也不小。 bytes.Buffer 拼接字符串，比较理想，可以当成可变字符使用，对内存的增长也有优化，如果能预估字符串的长度，还可 以用 buffer.Grow() 接口来设置 capacity 。 1 2 3 4 5 6 var buffer bytes.Buffer buffer.WriteString( \"hello\" ) buffer.WriteString( \", \" ) buffer.WriteString( \"world\" ) fmt.Print(buffer.String()) strings.Builder 内部通过 slice 来保存和管理内容。 slice 内部则是通过一个指针指向实际保存内容的数组。 strings.Builder 是非线程安全，性能上和 bytes.Buffer 相差无几。 1 2 3 4 5 var b1 strings.Builder b1.WriteString( \"ABC\" ) b1.WriteString( \"DEF\" ) fmt.Print(b1.String()) 使用 == 和  进行字符串比较。 strings 包与字符串操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /*字符串基本操作--strings*/ str := \"wangdy\" //是否包含 fmt.Println(strings.Contains(str, \"wang\" ), strings.Contains(str, \"123\" )) //true false //获取字符串长度 fmt.Println( len (str)) //6 //获取字符在字符串的位置 从0开始,如果不存在，返回-1 fmt.Println(strings.Index(str, \"g\" )) //3 fmt.Println(strings.Index(str, \"x\" )) //-1 //判断字符串是否以 xx 开头 fmt.Println(strings.HasPrefix(str, \"wa\" )) //true //判断字符串是否以 xx 结尾 fmt.Println(strings.HasSuffix(str, \"dy\" )) //true //判断2个字符串大小，相等0，左边大于右边-1，其他1 str2 := \"hahaha\" fmt.Println(strings.Compare(str, str2)) //1 //分割字符串 strSplit := strings.Split( \"1-2-3-4-a\" , \"-\" ) fmt.Println(strSplit) //[1 2 3 4 a] //组装字符串 fmt.Println(strings.Join(strSplit, \"#\" )) //1#2#3#4#a //去除字符串2端空格 fmt.Printf( \"%s,%s\\n\" , strings.Trim( \" 我的2边有空格 1 \" , \" \" ), \"/////\" ) //我的2边有空格 1,///// //大小写转换 fmt.Println(strings.ToUpper( \"abDCaE\" )) //ABDCAE fmt.Println(strings.ToLower( \"abDCaE\" )) //abdcae //字符串替换:意思是：在sourceStr中，把oldStr的前n个替换成newStr，返回一个新字符串，如果n0则全部替换 sourceStr := \"123123123\" oldStr := \"12\" newStr := \"ab\" n := 2 fmt.Println(strings.Replace(sourceStr, oldStr, newStr, n)) 在 Go 语言中， string 类型的值是不可变的。如果我们想获得一个不一样的字符串，那么就只能基于原字符串进行裁剪、拼接等操作， 从而生成一个新的字符串 。裁剪操作可以使用切片表达式，而拼接操作可以用操作符 + 实现。 在底层，一个 string 值的内容会被存储到一块连续的内存空间中。同时，这块内存容纳的字节数量也会被记录下来，并用于表示 该 string 值的长度。 你可以把这块内存的内容看成一个字节数组，而相应的 string 值则包含了指向字节数组头部的指针值。如此一来， 我们在 一个 string 值上应用切片表达式，就相当于在对其底层的字节数组做切片 。 另一方面，我们在 进行字符串拼接的时候，Go 语言会把所有被拼接的字符串依次拷贝到一个崭新且足够大的连续内存空间中， 并把持有相应指针值的 string 值作为结果返回 。 显然，当 程序中存在过多的字符串拼接操作的时候，会对内存的分配产生非常大的压力 。 与 string 值相比， strings.Builder 类型的值有哪些优势 已存在的内容不可变，但可以拼接更多的内容； 减少了内存分配和内容拷贝的次数； 可将内容重置，可重用值。 Builder 值中有一个用于承载内容的容器（以下简称内容容器）。它是一个以 byte 为元素类型的切片（以下简称字节切片）。 由于这样的字节切片的底层数组就是一个字节数组，所以我们可以说它与 string 值存储内容的方式是一样的 。实际上，它们都是通过 一个 unsafe.Pointer 类型的字段来持有那个指向了底层字节数组的指针值的。 因为这样的内部构造， Builder 值同样拥有高效利用内存的前提条件。 已存在于 Builder 值中的内容是不可变的。因此，我们可以利用 Builder 值提供的方法拼接更多的内容，而丝毫不用担心这些方法 会影响到已存在的内容。 Builder 值拥有的一系列指针方法，包括： Write 、 WriteByte 、 WriteRune 和 WriteString 。我们可以把它们统称 为 拼接方法 。 调用上述方法把新的内容拼接到已存在的内容的尾部（也就是右边）。这时，如有必要， Builder 值会自动地对自身的内容容器进行扩容。 这里的自动扩容策略与切片的扩容策略一致。 除了 Builder 值的自动扩容，我们还可以选择手动扩容，这通过调用 Builder 值的 Grow 方法就可以做到。 Grow 方法也可以被称 为 扩容方法 ，它接受一个 int 类型的参数 n ，该参数用于代表将要扩充的字节数量。 Grow 方法会把其所属值中内容容器的容量增加 n 个字节。更具体地讲，它会生成一个字节切片作为新的内容容器，该切片的容量会是原 容器容量的二倍再加上 n 。之后，它会把原容器中的所有字节全部拷贝到新容器中。 使用 strings.Builder 类型的约束 只要调用了 Builder 值的拼接方法或扩容方法，就不能再以任何的方式对其所属值进行复制了 。否则，只要在任何副本上调用上述方 法就都会引发 panic。这里所说的复制方式，包括但不限于在函数间传递值、通过通道传递值、把值赋予变量等等。 正是由于已使用的 Builder 值不能再被复制，所以肯定不会出现多个 Builder 值中的内容容器（也就是那个字节切片）共用一个底层字 节数组的情况。这样也就避免了多个同源的 Builder 值在拼接内容时可能产生的冲突问题。 不过，虽然已使用的 Builder 值不能再被复制，但是它的指针值却可以。无论什么时候，我们都可以通过任何方式复制这样的指针值 。 注意，这样的指针值指向的都会是同一个 Builder 值。 strings.Reader 类型 strings.Reader 类型是为了高效读取字符串而存在的。可以让我们很方便地读取一个字符串中的内容。在读取的过程中， Reader 值会 保存已读取的字节的计数（以下简称已读计数）。 已读计数也代表着下一次读取的起始索引位置。 Reader 值正是依靠这样一个计数，以及针对字符串值的切片表达式，从而实现快速读取 。 bytes 包与字节串操作 strings 包和 bytes 包可以说是一对孪生兄弟，它们在 API 方面非常的相似。单从它们提供的函数的数量和功能上讲，差别微乎其微。 只不过， strings 包主要面向的是 Unicode 字符和经过 UTF-8 编码的字符串，而 bytes 包面对的则主要是字节和字节切片。 bytes.Buffer bytes.Buffer 类型的用途主要是作为字节序列的缓冲区。 bytes.Buffer 是开箱即用的。 bytes.Buffer 不但可以拼接、截断其中 的字节序列，以各种形式导出其中的内容，还可以顺序地读取其中的子序列。 在内部， bytes.Buffer 类型同样是使用字节切片作为内容容器的。并且，与 strings.Reader 类型类似， bytes.Buffer 有一个 int 类型的字段，用于代表已读字节的计数，可以简称为 已读计数 。 注意，与 strings.Reader 类型的 Len 方法一样， bytes.Buffer 的 Len 方法返回的也是内容容器中未被读取部分的长度， 而不是其中已存内容的总长度（以下简称内容长度）。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // 示例1。 var buffer1 bytes.Buffer contents := \"Simple byte buffer for marshaling data.\" fmt.Printf( \"Write contents %q ...\\n\" , contents) buffer1.WriteString(contents) fmt.Printf( \"The length of buffer: %d\\n\" , buffer1.Len()) // = 39 fmt.Printf( \"The capacity of buffer: %d\\n\" , buffer1.Cap()) // = 64 fmt.Println() // 示例2。 p1 := make ([] byte , 7 ) n, _ := buffer1.Read(p1) fmt.Printf( \"%d bytes were read. (call Read)\\n\" , n) fmt.Printf( \"The length of buffer: %d\\n\" , buffer1.Len()) // = 32 fmt.Printf( \"The capacity of buffer: %d\\n\" , buffer1.Cap()) // = 64 上面的代码，示例一输出 39 和 64，但是示例二，从 buffer1 中读取一部分内容，并用它们填满长度为7的字节切片 p1 之后， buffer1 的 Len 方法返回的结果值变为了 32。因为我们并没有再向该缓冲区中写入任何内容，所以它的容量会保持不变，仍是 64。 对于处在零值状态的 Buffer 值来说，如果第一次扩容时的另需字节数不大于 64，那么该值就会基于一个预先定义好的、长度为 64 的字节数组来创建内容容器。 由于 strings.Reader 还有一个 Size 方法可以给出内容长度的值，所以我们用内容长度减去未读部分的长度，就可以很方便地得 到它的已读计数。 然而， bytes.Buffer 类型却没有这样一个方法，它只有 Cap 方法。可是 Cap 方法提供的是内容容器的容量，也不是内容长度。 bytes.Buffer 的扩容策略 Buffer 值既可以被手动扩容，也可以进行自动扩容。并且，这两种扩容方式的策略是基本一致的。所以，除非我们完全确定后续内容所需 的字节数，否则让 Buffer 值自动去扩容就好了。 在扩容的时候， Buffer 值中相应的代码（以下简称扩容代码）会先判断内容容器的剩余容量，是否可以满足调用方的要求，或者是否足 够容纳新的内容。 如果可以，那么扩容代码会在当前的内容容器之上，进行长度扩充。更具体地说，如果内容容器的容量与其长度的差，大于或等于另需的字 节数，那么扩容代码就会通过切片操作对原有的内容容器的长度进行扩充，就像下面这样： 1 b.buf = b.buf[:length+need] 反之，如果内容容器的剩余容量不够了，那么扩容代码可能就会用新的内容容器去替代原有的内容容器，从而实现扩容。不过，这里还一步优化。 如果当前内容容器的容量的一半仍然大于或等于其现有长度再加上另需的字节数的和，即： 1 cap (b.buf)/ 2 = len (b.buf)+need 那么，扩容代码就会复用现有的内容容器，并把容器中的未读内容拷贝到它的头部位置。这也意味着其中的已读内容，将会全部被未读内容和 之后的新内容覆盖掉。 这样的复用预计可以至少节省掉一次后续的扩容所带来的内存分配，以及若干字节的拷贝。 若这一步优化未能达成，也就是说，当前内容容器的容量小于新长度的二倍，那么扩容代码就只能再创建一个新的内容容器，并把原有容器 中的未读内容拷贝进去，最后再用新的容器替换掉原有的容器。这个新容器的容量将会等于原有容量的二倍再加上另需字节数的和。 1 新容器的容量 =2* 原有容量 + 所需字节数 bytes.Buffer 中的哪些方法可能会造成内容的泄露 什么叫内容泄露？这里所说的内容泄露是指，使用 Buffer 值的一方通过某种非标准的（或者说不正式的）方式得到了本不该得到的内容。 在 bytes.Buffer 中， Bytes 方法和 Next 方法都可能会造成内容的泄露 。原因在于，它们都把基于内容容器的切片直接返 回给了方法的调用方。 我们都知道， 通过切片，我们可以直接访问和操纵它的底层数组。不论这个切片是基于某个数组得来的，还是通过对另一个切片做切片操作 获得的 ，都是如此。 1 2 3 4 5 6 7 8 contents := \"ab\" buffer1 := bytes.NewBufferString(contents) fmt.Printf( \"The capacity of new buffer with contents %q: %d\\n\" , contents, buffer1.Cap()) // 内容容器的容量为：8。 fmt.Println() unreadBytes := buffer1.Bytes() fmt.Printf( \"The unread bytes of the buffer: %v\\n\" , unreadBytes) 前面通过调用 buffer1 的 Bytes 方法得到的结果值 unreadBytes ，包含了在那时其中的所有未读内容。 但是，由于这个结果值与 buffer1 的内容容器在此时还共用着同一个底层数组，所以，我只需通过简单的再切片操作，就可以利用这个 结果值拿到 buffer1 在此时的所有未读内容。如此一来， buffer1 的新内容就被泄露出来了。 一个 string 类型的值在底层怎样被表达 在底层，一个 string 类型的值是由一系列相对应的 Unicode 代码点的 UTF-8 编码值来表达的。 一个 string 类型的值既可以被拆分为一个包含多个字符的序列，也可以被拆分为一个包含多个字节的序列。 前者可以由一个以 rune （ int32 的别名）为元素类型的切片来表示，而后者则可以由一个以 byte 为元素类型的切片代表。 rune 是 Go 语言特有的一个基本数据类型，它的一个值就代表一个字符，即：一个 Unicode 字符。比如，’G’、’o’、’爱’、’好’、 ‘者’代表的就都是一个 Unicode 字符。一个 rune 类型的值会由四个字节宽度的空间来存储。它的存储空间总是能够存下一 个 UTF-8 编码值。 一个 rune 类型的值在底层其实就是一个 UTF-8 编码值 。前者是（便于我们人类理解的）外部展现，后者是（便于计算机系统理解的） 内在表达。 1 2 3 4 5 str := \"Go 爱好者 \" fmt.Printf( \"The string: %q\\n\" , str) fmt.Printf( \" = runes(char): %q\\n\" , [] rune (str)) fmt.Printf( \" = runes(hex): %x\\n\" , [] rune (str)) fmt.Printf( \" = bytes(hex): [% x]\\n\" , [] byte (str)) 字符串值 “Go 爱好者” 如果被转换为 []rune 类型的值的话，其中的每一个字符（不论是英文字符还是中文字符）就都会独立成为一 个 rune 类型的元素值。因 此，这段代码打印出的第二行内容就会如下所示： 1 = runes(char): [ 'G' 'o' '爱' '好' '者' ] 又由于，每个 rune 类型的值在底层都是由一个 UTF-8 编码值来表达的，所以我们可以换一种方式来展现这个字符序列： 1 = runes(hex): [47 6f 7231 597d 8005] 我们还可以进一步地拆分，把每个字符的 UTF-8 编码值都拆成相应的字节序列。上述代码中的第五行就是这么做的。它会得到如下的输出： 1 = bytes(hex): [47 6f e7 88 b1 e5 a5 bd e8 80 85]"},"basic/basic_data.html#基础据类型":{"title":"&#x57FA;&#x7840;&#x636E;&#x7C7B;&#x578B;","path":"\\golang-learn\\basic\\basic_data.html#基础据类型","body":""},"basic/basic_data.html#数值类型":{"title":"&#x6570;&#x503C;&#x7C7B;&#x578B;","path":"\\golang-learn\\basic\\basic_data.html#数值类型","body":"&#x6574;&#x578B; uint &#xFF0C;&#x65E0;&#x7B26;&#x53F7; 32 &#x6216; 64 &#x4F4D;&#x6574;&#x578B; uint8 &#xFF0C;&#x65E0;&#x7B26;&#x53F7; 8 &#x4F4D;&#x6574;&#x578B; (0 &#x5230; 255) uint16 &#xFF0C;&#x65E0;&#x7B26;&#x53F7; 16 &#x4F4D;&#x6574;&#x578B; (0 &#x5230; 65535) uint32 &#xFF0C;&#x65E0;&#x7B26;&#x53F7; 32 &#x4F4D;&#x6574;&#x578B; (0 &#x5230; 4294967295) uint64 &#xFF0C;&#x65E0;&#x7B26;&#x53F7; 64 &#x4F4D;&#x6574;&#x578B; (0 &#x5230; 18446744073709551615) int &#xFF0C;&#x6709;&#x7B26;&#x53F7; 32 &#x6216; 64 &#x4F4D;&#x6574;&#x578B; int8 &#xFF0C;&#x6709;&#x7B26;&#x53F7; 8 &#x4F4D;&#x6574;&#x578B; (-128 &#x5230; 127) int16 &#xFF0C;&#x6709;&#x7B26;&#x53F7; 16 &#x4F4D;&#x6574;&#x578B; (-32768 &#x5230; 32767) int32 &#xFF0C;&#x6709;&#x7B26;&#x53F7; 32 &#x4F4D;&#x6574;&#x578B; (-2147483648 &#x5230; 2147483647) int64 &#xFF0C;&#x6709;&#x7B26;&#x53F7; 64 &#x4F4D;&#x6574;&#x578B; (-9223372036854775808 &#x5230; 9223372036854775807) int &#x548C; uint &#x5BF9;&#x5E94;&#x7684;&#x662F; CPU &#x5E73;&#x53F0;&#x673A;&#x5668;&#x7684;&#x5B57;&#x5927;&#x5C0F;&#x3002; &#x6D6E;&#x70B9;&#x6570; float32 &#xFF0C;IEEE-754 32 &#x4F4D;&#x6D6E;&#x70B9;&#x578B;&#x6570;&#xFF0C; math.MaxFloat32 &#x8868;&#x793A; float32 &#x80FD;&#x8868;&#x793A;&#x7684;&#x6700;&#x5927;&#x6570;&#x503C;&#xFF0C;&#x5927;&#x7EA6;&#x662F; 3.4e38 &#x3002; float64 &#xFF0C;IEEE-754 64 &#x4F4D;&#x6D6E;&#x70B9;&#x578B;&#x6570;&#xFF0C; math.MaxFloat64 &#x8868;&#x793A; float64 &#x80FD;&#x8868;&#x793A;&#x7684;&#x6700;&#x5927;&#x6570;&#x503C;&#xFF0C;&#x5927;&#x7EA6;&#x662F; 1.8e308 &#x3002; &#x590D;&#x6570; complex64 &#xFF0C;&#x5BF9;&#x5E94; float32 &#x6D6E;&#x70B9;&#x6570;&#x7CBE;&#x5EA6;&#x3002; complex128 &#xFF0C;&#x5BF9;&#x5E94; float64 &#x6D6E;&#x70B9;&#x6570;&#x7CBE;&#x5EA6;&#x3002; &#x5185;&#x7F6E; complex &#x51FD;&#x6570;&#x521B;&#x5EFA;&#x590D;&#x6570;&#x3002; math/cmplx &#x5305;&#x63D0;&#x4F9B;&#x4E86;&#x590D;&#x6570;&#x5904;&#x7406;&#x7684;&#x8BB8;&#x591A;&#x51FD;&#x6570;&#x3002; &#x5176;&#x4ED6;&#x6570;&#x503C;&#x7C7B;&#x578B; byte &#xFF0C; uint8 &#x7684;&#x522B;&#x540D; &#xFF0C;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x4E00;&#x4E2A; Unicode &#x7801;&#x70B9;&#x3002; rune &#xFF0C; int32 &#x7684;&#x522B;&#x540D; &#xFF0C;&#x4E00;&#x822C;&#x7528;&#x4E8E;&#x5F3A;&#x8C03;&#x6570;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x539F;&#x59CB;&#x7684;&#x6570;&#x636E;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;&#x6574;&#x6570;&#x3002; uintptr &#xFF0C;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B;&#xFF0C;&#x7528;&#x4E8E;&#x5B58;&#x653E;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#xFF0C;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x5177;&#x4F53;&#x7684; bit &#x5927;&#x5C0F;&#x3002;"},"basic/basic_data.html#布尔类型":{"title":"&#x5E03;&#x5C14;&#x7C7B;&#x578B;","path":"\\golang-learn\\basic\\basic_data.html#布尔类型","body":"&#x5E03;&#x5C14;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x53EA;&#x6709;&#x4E24;&#x79CD;&#xFF1A; true &#x548C; false &#x3002;"},"basic/basic_data.html#字符串":{"title":"&#x5B57;&#x7B26;&#x4E32;","path":"\\golang-learn\\basic\\basic_data.html#字符串","body":"&#x5B57;&#x7B26;&#x4E32;&#x5C31;&#x662F;&#x4E00;&#x4E32;&#x56FA;&#x5B9A;&#x957F;&#x5EA6;&#x7684;&#x5B57;&#x7B26;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x5E8F;&#x5217;&#xFF0C;&#x4E0D;&#x53EF;&#x6539;&#x53D8;&#x3002;Go &#x7684;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x7531;&#x5355;&#x4E2A;&#x5B57;&#x8282;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x7684;&#x3002;Go &#x7684;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5B57;&#x8282;&#x4F7F; &#x7528; UTF-8 &#x7F16;&#x7801;&#x6807;&#x8BC6; Unicode &#x6587;&#x672C;&#x3002; &#x4E00;&#x4E2A;&#x539F;&#x751F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x9762;&#x503C;&#x5F62;&#x5F0F;&#x662F; `&#x2026;`&#xFF0C;&#x4F7F;&#x7528;&#x53CD;&#x5F15;&#x53F7;&#x4EE3;&#x66FF;&#x53CC;&#x5F15;&#x53F7;&#x3002;&#x5728;&#x539F;&#x751F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x9762;&#x503C;&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;&#x8F6C;&#x4E49;&#x64CD;&#x4F5C;&#xFF1B;&#x5168;&#x90E8;&#x7684;&#x5185;&#x5BB9;&#x90FD;&#x662F;&#x5B57;&#x9762;&#x7684;&#x610F;&#x601D;&#xFF0C; &#x5305;&#x542B;&#x9000;&#x683C;&#x548C;&#x6362;&#x884C; &#x3002; &#x5B57;&#x7B26;&#x4E32;&#x64CD;&#x4F5C; &#x5185;&#x7F6E;&#x51FD;&#x6570; len &#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x3002; &#x53EF;&#x4EE5;&#x901A;&#x8FC7; string[index] &#x83B7;&#x53D6;&#x67D0;&#x4E2A;&#x7D22;&#x5F15;&#x4F4D;&#x7F6E;&#x7684;&#x5B57;&#x8282;&#x503C;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x4E0D;&#x53EF;&#x4FEE;&#x6539;&#x7684;&#xFF0C;&#x4E0D;&#x80FD;&#x4F7F;&#x7528; string[index] = string2 &#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6539;&#x53D8;&#x5B57;&#x7B26;&#x4E32; &#xFF0C;&#x8981;&#x4FEE;&#x6539;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5FC5;&#x987B;&#x5C06;&#x5176;&#x8F6C;&#x4E3A;&#x53EF;&#x53D8;&#x7C7B;&#x578B;&#xFF08; []rune &#x6216; []byte &#xFF09;&#xFF0C;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x8F6C;&#x56DE;&#x6765;&#x3002; string[i, l] &#x83B7;&#x53D6; string &#x4ECE;&#x7B2C; i &#x4E2A;&#x5B57;&#x8282;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;&#x7684; l &#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x5982;&#xFF1A; 1 2 3 4 5 6 s := hello, world fmt.Println(s[ 0 : 5 ]) // hello fmt.Println(s[: 5 ]) // hello fmt.Println(s[ 7 :]) // world fmt.Println(s[:]) // hello, world + &#x62FC;&#x63A5;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982; fmt.Println(goodbye + s[5:]) &#x8F93;&#x51FA; goodbye, world &#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6BCF;&#x6B21;&#x8FD0;&#x7B97;&#x90FD;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5B57; &#x7B26;&#x4E32;&#xFF0C;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C;&#x4F1A;&#x7ED9;&#x5185;&#x5B58;&#x5206;&#x914D;&#x548C; GC &#x5E26;&#x6765;&#x989D;&#x5916;&#x7684;&#x8D1F;&#x62C5;&#xFF0C;&#x6240;&#x4EE5;&#x6027;&#x80FD;&#x6BD4;&#x8F83;&#x5DEE;&#x3002; fmt.Sprintf() &#x62FC;&#x63A5;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5185;&#x90E8;&#x4F7F;&#x7528; []byte &#x5B9E;&#x73B0;&#xFF0C;&#x4E0D;&#x50CF;&#x76F4;&#x63A5;&#x8FD0;&#x7B97;&#x7B26;&#x8FD9;&#x79CD;&#x4F1A;&#x4EA7;&#x751F;&#x5F88;&#x591A;&#x4E34;&#x65F6;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4F46;&#x662F;&#x5185;&#x90E8;&#x7684;&#x903B;&#x8F91;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x6709;&#x5F88; &#x591A;&#x989D;&#x5916;&#x7684;&#x5224;&#x65AD;&#xFF0C;&#x8FD8;&#x7528;&#x5230;&#x4E86; interface &#xFF0C;&#x6240;&#x4EE5;&#x6027;&#x80FD;&#x4E00;&#x822C;&#x3002; strings.Join() &#x62FC;&#x63A5;&#x5B57;&#x7B26;&#x4E32;&#xFF0C; Join &#x4F1A;&#x5148;&#x6839;&#x636E;&#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x8BA1;&#x7B97;&#x51FA;&#x4E00;&#x4E2A;&#x62FC;&#x63A5;&#x4E4B;&#x540E;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x7136;&#x540E;&#x7533;&#x8BF7;&#x5BF9;&#x5E94;&#x5927;&#x5C0F;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26; &#x4E32;&#x586B;&#x5165;&#xFF0C;&#x5728;&#x5DF2;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x79CD;&#x6548;&#x7387;&#x4F1A;&#x5F88;&#x9AD8;&#xFF0C;&#x4F46;&#x662F;&#x672C;&#x6765;&#x6CA1;&#x6709;&#xFF0C;&#x53BB;&#x6784;&#x9020;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7684;&#x4EE3;&#x4EF7;&#x4E5F;&#x4E0D;&#x5C0F;&#x3002; bytes.Buffer &#x62FC;&#x63A5;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6BD4;&#x8F83;&#x7406;&#x60F3;&#xFF0C;&#x53EF;&#x4EE5;&#x5F53;&#x6210;&#x53EF;&#x53D8;&#x5B57;&#x7B26;&#x4F7F;&#x7528;&#xFF0C;&#x5BF9;&#x5185;&#x5B58;&#x7684;&#x589E;&#x957F;&#x4E5F;&#x6709;&#x4F18;&#x5316;&#xFF0C;&#x5982;&#x679C;&#x80FD;&#x9884;&#x4F30;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x8FD8;&#x53EF; &#x4EE5;&#x7528; buffer.Grow() &#x63A5;&#x53E3;&#x6765;&#x8BBE;&#x7F6E; capacity &#x3002; 1 2 3 4 5 6 var buffer bytes.Buffer buffer.WriteString( hello ) buffer.WriteString( ,  ) buffer.WriteString( world ) fmt.Print(buffer.String()) strings.Builder &#x5185;&#x90E8;&#x901A;&#x8FC7; slice &#x6765;&#x4FDD;&#x5B58;&#x548C;&#x7BA1;&#x7406;&#x5185;&#x5BB9;&#x3002; slice &#x5185;&#x90E8;&#x5219;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x6307;&#x5411;&#x5B9E;&#x9645;&#x4FDD;&#x5B58;&#x5185;&#x5BB9;&#x7684;&#x6570;&#x7EC4;&#x3002; strings.Builder &#x662F;&#x975E;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#xFF0C;&#x6027;&#x80FD;&#x4E0A;&#x548C; bytes.Buffer &#x76F8;&#x5DEE;&#x65E0;&#x51E0;&#x3002; 1 2 3 4 5 var b1 strings.Builder b1.WriteString( ABC ) b1.WriteString( DEF ) fmt.Print(b1.String()) &#x4F7F;&#x7528; == &#x548C;  &#x8FDB;&#x884C;&#x5B57;&#x7B26;&#x4E32;&#x6BD4;&#x8F83;&#x3002; strings &#x5305;&#x4E0E;&#x5B57;&#x7B26;&#x4E32;&#x64CD;&#x4F5C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /*&#x5B57;&#x7B26;&#x4E32;&#x57FA;&#x672C;&#x64CD;&#x4F5C;--strings*/ str := wangdy //&#x662F;&#x5426;&#x5305;&#x542B; fmt.Println(strings.Contains(str, wang ), strings.Contains(str, 123 )) //true false //&#x83B7;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6; fmt.Println( len (str)) //6 //&#x83B7;&#x53D6;&#x5B57;&#x7B26;&#x5728;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x4F4D;&#x7F6E; &#x4ECE;0&#x5F00;&#x59CB;,&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x8FD4;&#x56DE;-1 fmt.Println(strings.Index(str, g )) //3 fmt.Println(strings.Index(str, x )) //-1 //&#x5224;&#x65AD;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x5426;&#x4EE5; xx &#x5F00;&#x5934; fmt.Println(strings.HasPrefix(str, wa )) //true //&#x5224;&#x65AD;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x5426;&#x4EE5; xx &#x7ED3;&#x5C3E; fmt.Println(strings.HasSuffix(str, dy )) //true //&#x5224;&#x65AD;2&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5927;&#x5C0F;&#xFF0C;&#x76F8;&#x7B49;0&#xFF0C;&#x5DE6;&#x8FB9;&#x5927;&#x4E8E;&#x53F3;&#x8FB9;-1&#xFF0C;&#x5176;&#x4ED6;1 str2 := hahaha fmt.Println(strings.Compare(str, str2)) //1 //&#x5206;&#x5272;&#x5B57;&#x7B26;&#x4E32; strSplit := strings.Split( 1-2-3-4-a , - ) fmt.Println(strSplit) //[1 2 3 4 a] //&#x7EC4;&#x88C5;&#x5B57;&#x7B26;&#x4E32; fmt.Println(strings.Join(strSplit, # )) //1#2#3#4#a //&#x53BB;&#x9664;&#x5B57;&#x7B26;&#x4E32;2&#x7AEF;&#x7A7A;&#x683C; fmt.Printf( %s,%s\\n , strings.Trim(  &#x6211;&#x7684;2&#x8FB9;&#x6709;&#x7A7A;&#x683C; 1  ,   ), ///// ) //&#x6211;&#x7684;2&#x8FB9;&#x6709;&#x7A7A;&#x683C; 1,///// //&#x5927;&#x5C0F;&#x5199;&#x8F6C;&#x6362; fmt.Println(strings.ToUpper( abDCaE )) //ABDCAE fmt.Println(strings.ToLower( abDCaE )) //abdcae //&#x5B57;&#x7B26;&#x4E32;&#x66FF;&#x6362;:&#x610F;&#x601D;&#x662F;&#xFF1A;&#x5728;sourceStr&#x4E2D;&#xFF0C;&#x628A;oldStr&#x7684;&#x524D;n&#x4E2A;&#x66FF;&#x6362;&#x6210;newStr&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65B0;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;&#x679C;n0&#x5219;&#x5168;&#x90E8;&#x66FF;&#x6362; sourceStr := 123123123 oldStr := 12 newStr := ab n := 2 fmt.Println(strings.Replace(sourceStr, oldStr, newStr, n)) &#x5728; Go &#x8BED;&#x8A00;&#x4E2D;&#xFF0C; string &#x7C7B;&#x578B;&#x7684;&#x503C;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x3002;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x83B7;&#x5F97;&#x4E00;&#x4E2A;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x53EA;&#x80FD;&#x57FA;&#x4E8E;&#x539F;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x88C1;&#x526A;&#x3001;&#x62FC;&#x63A5;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C; &#x4ECE;&#x800C;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5B57;&#x7B26;&#x4E32; &#x3002;&#x88C1;&#x526A;&#x64CD;&#x4F5C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5207;&#x7247;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x800C;&#x62FC;&#x63A5;&#x64CD;&#x4F5C;&#x53EF;&#x4EE5;&#x7528;&#x64CD;&#x4F5C;&#x7B26; + &#x5B9E;&#x73B0;&#x3002; &#x5728;&#x5E95;&#x5C42;&#xFF0C;&#x4E00;&#x4E2A; string &#x503C;&#x7684;&#x5185;&#x5BB9;&#x4F1A;&#x88AB;&#x5B58;&#x50A8;&#x5230;&#x4E00;&#x5757;&#x8FDE;&#x7EED;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x4E2D;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x8FD9;&#x5757;&#x5185;&#x5B58;&#x5BB9;&#x7EB3;&#x7684;&#x5B57;&#x8282;&#x6570;&#x91CF;&#x4E5F;&#x4F1A;&#x88AB;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x5E76;&#x7528;&#x4E8E;&#x8868;&#x793A; &#x8BE5; string &#x503C;&#x7684;&#x957F;&#x5EA6;&#x3002; &#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x5757;&#x5185;&#x5B58;&#x7684;&#x5185;&#x5BB9;&#x770B;&#x6210;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#xFF0C;&#x800C;&#x76F8;&#x5E94;&#x7684; string &#x503C;&#x5219;&#x5305;&#x542B;&#x4E86;&#x6307;&#x5411;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x5934;&#x90E8;&#x7684;&#x6307;&#x9488;&#x503C;&#x3002;&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C; &#x6211;&#x4EEC;&#x5728; &#x4E00;&#x4E2A; string &#x503C;&#x4E0A;&#x5E94;&#x7528;&#x5207;&#x7247;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x5728;&#x5BF9;&#x5176;&#x5E95;&#x5C42;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x505A;&#x5207;&#x7247; &#x3002; &#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x6211;&#x4EEC;&#x5728; &#x8FDB;&#x884C;&#x5B57;&#x7B26;&#x4E32;&#x62FC;&#x63A5;&#x7684;&#x65F6;&#x5019;&#xFF0C;Go &#x8BED;&#x8A00;&#x4F1A;&#x628A;&#x6240;&#x6709;&#x88AB;&#x62FC;&#x63A5;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x4F9D;&#x6B21;&#x62F7;&#x8D1D;&#x5230;&#x4E00;&#x4E2A;&#x5D2D;&#x65B0;&#x4E14;&#x8DB3;&#x591F;&#x5927;&#x7684;&#x8FDE;&#x7EED;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x4E2D;&#xFF0C; &#x5E76;&#x628A;&#x6301;&#x6709;&#x76F8;&#x5E94;&#x6307;&#x9488;&#x503C;&#x7684; string &#x503C;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C;&#x8FD4;&#x56DE; &#x3002; &#x663E;&#x7136;&#xFF0C;&#x5F53; &#x7A0B;&#x5E8F;&#x4E2D;&#x5B58;&#x5728;&#x8FC7;&#x591A;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x62FC;&#x63A5;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x5BF9;&#x5185;&#x5B58;&#x7684;&#x5206;&#x914D;&#x4EA7;&#x751F;&#x975E;&#x5E38;&#x5927;&#x7684;&#x538B;&#x529B; &#x3002; &#x4E0E; string &#x503C;&#x76F8;&#x6BD4;&#xFF0C; strings.Builder &#x7C7B;&#x578B;&#x7684;&#x503C;&#x6709;&#x54EA;&#x4E9B;&#x4F18;&#x52BF; &#x5DF2;&#x5B58;&#x5728;&#x7684;&#x5185;&#x5BB9;&#x4E0D;&#x53EF;&#x53D8;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x62FC;&#x63A5;&#x66F4;&#x591A;&#x7684;&#x5185;&#x5BB9;&#xFF1B; &#x51CF;&#x5C11;&#x4E86;&#x5185;&#x5B58;&#x5206;&#x914D;&#x548C;&#x5185;&#x5BB9;&#x62F7;&#x8D1D;&#x7684;&#x6B21;&#x6570;&#xFF1B; &#x53EF;&#x5C06;&#x5185;&#x5BB9;&#x91CD;&#x7F6E;&#xFF0C;&#x53EF;&#x91CD;&#x7528;&#x503C;&#x3002; Builder &#x503C;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x627F;&#x8F7D;&#x5185;&#x5BB9;&#x7684;&#x5BB9;&#x5668;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF09;&#x3002;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x4EE5; byte &#x4E3A;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x7684;&#x5207;&#x7247;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x5B57;&#x8282;&#x5207;&#x7247;&#xFF09;&#x3002; &#x7531;&#x4E8E;&#x8FD9;&#x6837;&#x7684;&#x5B57;&#x8282;&#x5207;&#x7247;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BF4;&#x5B83;&#x4E0E; string &#x503C;&#x5B58;&#x50A8;&#x5185;&#x5BB9;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x4E00;&#x6837;&#x7684; &#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x662F;&#x901A;&#x8FC7; &#x4E00;&#x4E2A; unsafe.Pointer &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x6765;&#x6301;&#x6709;&#x90A3;&#x4E2A;&#x6307;&#x5411;&#x4E86;&#x5E95;&#x5C42;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x7684;&#x6307;&#x9488;&#x503C;&#x7684;&#x3002; &#x56E0;&#x4E3A;&#x8FD9;&#x6837;&#x7684;&#x5185;&#x90E8;&#x6784;&#x9020;&#xFF0C; Builder &#x503C;&#x540C;&#x6837;&#x62E5;&#x6709;&#x9AD8;&#x6548;&#x5229;&#x7528;&#x5185;&#x5B58;&#x7684;&#x524D;&#x63D0;&#x6761;&#x4EF6;&#x3002; &#x5DF2;&#x5B58;&#x5728;&#x4E8E; Builder &#x503C;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528; Builder &#x503C;&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x6CD5;&#x62FC;&#x63A5;&#x66F4;&#x591A;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x800C;&#x4E1D;&#x6BEB;&#x4E0D;&#x7528;&#x62C5;&#x5FC3;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5; &#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x5185;&#x5BB9;&#x3002; Builder &#x503C;&#x62E5;&#x6709;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#xFF0C;&#x5305;&#x62EC;&#xFF1A; Write &#x3001; WriteByte &#x3001; WriteRune &#x548C; WriteString &#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x628A;&#x5B83;&#x4EEC;&#x7EDF;&#x79F0; &#x4E3A; &#x62FC;&#x63A5;&#x65B9;&#x6CD5; &#x3002; &#x8C03;&#x7528;&#x4E0A;&#x8FF0;&#x65B9;&#x6CD5;&#x628A;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x62FC;&#x63A5;&#x5230;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x5185;&#x5BB9;&#x7684;&#x5C3E;&#x90E8;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x53F3;&#x8FB9;&#xFF09;&#x3002;&#x8FD9;&#x65F6;&#xFF0C;&#x5982;&#x6709;&#x5FC5;&#x8981;&#xFF0C; Builder &#x503C;&#x4F1A;&#x81EA;&#x52A8;&#x5730;&#x5BF9;&#x81EA;&#x8EAB;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x8FDB;&#x884C;&#x6269;&#x5BB9;&#x3002; &#x8FD9;&#x91CC;&#x7684;&#x81EA;&#x52A8;&#x6269;&#x5BB9;&#x7B56;&#x7565;&#x4E0E;&#x5207;&#x7247;&#x7684;&#x6269;&#x5BB9;&#x7B56;&#x7565;&#x4E00;&#x81F4;&#x3002; &#x9664;&#x4E86; Builder &#x503C;&#x7684;&#x81EA;&#x52A8;&#x6269;&#x5BB9;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x624B;&#x52A8;&#x6269;&#x5BB9;&#xFF0C;&#x8FD9;&#x901A;&#x8FC7;&#x8C03;&#x7528; Builder &#x503C;&#x7684; Grow &#x65B9;&#x6CD5;&#x5C31;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x3002; Grow &#x65B9;&#x6CD5;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x79F0; &#x4E3A; &#x6269;&#x5BB9;&#x65B9;&#x6CD5; &#xFF0C;&#x5B83;&#x63A5;&#x53D7;&#x4E00;&#x4E2A; int &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570; n &#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x7528;&#x4E8E;&#x4EE3;&#x8868;&#x5C06;&#x8981;&#x6269;&#x5145;&#x7684;&#x5B57;&#x8282;&#x6570;&#x91CF;&#x3002; Grow &#x65B9;&#x6CD5;&#x4F1A;&#x628A;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x4E2D;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x589E;&#x52A0; n &#x4E2A;&#x5B57;&#x8282;&#x3002;&#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BB2;&#xFF0C;&#x5B83;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x5207;&#x7247;&#x4F5C;&#x4E3A;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF0C;&#x8BE5;&#x5207;&#x7247;&#x7684;&#x5BB9;&#x91CF;&#x4F1A;&#x662F;&#x539F; &#x5BB9;&#x5668;&#x5BB9;&#x91CF;&#x7684;&#x4E8C;&#x500D;&#x518D;&#x52A0;&#x4E0A; n &#x3002;&#x4E4B;&#x540E;&#xFF0C;&#x5B83;&#x4F1A;&#x628A;&#x539F;&#x5BB9;&#x5668;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x5B57;&#x8282;&#x5168;&#x90E8;&#x62F7;&#x8D1D;&#x5230;&#x65B0;&#x5BB9;&#x5668;&#x4E2D;&#x3002; &#x4F7F;&#x7528; strings.Builder &#x7C7B;&#x578B;&#x7684;&#x7EA6;&#x675F; &#x53EA;&#x8981;&#x8C03;&#x7528;&#x4E86; Builder &#x503C;&#x7684;&#x62FC;&#x63A5;&#x65B9;&#x6CD5;&#x6216;&#x6269;&#x5BB9;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x4E0D;&#x80FD;&#x518D;&#x4EE5;&#x4EFB;&#x4F55;&#x7684;&#x65B9;&#x5F0F;&#x5BF9;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x8FDB;&#x884C;&#x590D;&#x5236;&#x4E86; &#x3002;&#x5426;&#x5219;&#xFF0C;&#x53EA;&#x8981;&#x5728;&#x4EFB;&#x4F55;&#x526F;&#x672C;&#x4E0A;&#x8C03;&#x7528;&#x4E0A;&#x8FF0;&#x65B9; &#x6CD5;&#x5C31;&#x90FD;&#x4F1A;&#x5F15;&#x53D1; panic&#x3002;&#x8FD9;&#x91CC;&#x6240;&#x8BF4;&#x7684;&#x590D;&#x5236;&#x65B9;&#x5F0F;&#xFF0C;&#x5305;&#x62EC;&#x4F46;&#x4E0D;&#x9650;&#x4E8E;&#x5728;&#x51FD;&#x6570;&#x95F4;&#x4F20;&#x9012;&#x503C;&#x3001;&#x901A;&#x8FC7;&#x901A;&#x9053;&#x4F20;&#x9012;&#x503C;&#x3001;&#x628A;&#x503C;&#x8D4B;&#x4E88;&#x53D8;&#x91CF;&#x7B49;&#x7B49;&#x3002; &#x6B63;&#x662F;&#x7531;&#x4E8E;&#x5DF2;&#x4F7F;&#x7528;&#x7684; Builder &#x503C;&#x4E0D;&#x80FD;&#x518D;&#x88AB;&#x590D;&#x5236;&#xFF0C;&#x6240;&#x4EE5;&#x80AF;&#x5B9A;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x591A;&#x4E2A; Builder &#x503C;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x90A3;&#x4E2A;&#x5B57;&#x8282;&#x5207;&#x7247;&#xFF09;&#x5171;&#x7528;&#x4E00;&#x4E2A;&#x5E95;&#x5C42;&#x5B57; &#x8282;&#x6570;&#x7EC4;&#x7684;&#x60C5;&#x51B5;&#x3002;&#x8FD9;&#x6837;&#x4E5F;&#x5C31;&#x907F;&#x514D;&#x4E86;&#x591A;&#x4E2A;&#x540C;&#x6E90;&#x7684; Builder &#x503C;&#x5728;&#x62FC;&#x63A5;&#x5185;&#x5BB9;&#x65F6;&#x53EF;&#x80FD;&#x4EA7;&#x751F;&#x7684;&#x51B2;&#x7A81;&#x95EE;&#x9898;&#x3002; &#x4E0D;&#x8FC7;&#xFF0C;&#x867D;&#x7136;&#x5DF2;&#x4F7F;&#x7528;&#x7684; Builder &#x503C;&#x4E0D;&#x80FD;&#x518D;&#x88AB;&#x590D;&#x5236;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x7684;&#x6307;&#x9488;&#x503C;&#x5374;&#x53EF;&#x4EE5;&#x3002;&#x65E0;&#x8BBA;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4EFB;&#x4F55;&#x65B9;&#x5F0F;&#x590D;&#x5236;&#x8FD9;&#x6837;&#x7684;&#x6307;&#x9488;&#x503C; &#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x6307;&#x9488;&#x503C;&#x6307;&#x5411;&#x7684;&#x90FD;&#x4F1A;&#x662F;&#x540C;&#x4E00;&#x4E2A; Builder &#x503C;&#x3002; strings.Reader &#x7C7B;&#x578B; strings.Reader &#x7C7B;&#x578B;&#x662F;&#x4E3A;&#x4E86;&#x9AD8;&#x6548;&#x8BFB;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x800C;&#x5B58;&#x5728;&#x7684;&#x3002;&#x53EF;&#x4EE5;&#x8BA9;&#x6211;&#x4EEC;&#x5F88;&#x65B9;&#x4FBF;&#x5730;&#x8BFB;&#x53D6;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x5728;&#x8BFB;&#x53D6;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C; Reader &#x503C;&#x4F1A; &#x4FDD;&#x5B58;&#x5DF2;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x7684;&#x8BA1;&#x6570;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x5DF2;&#x8BFB;&#x8BA1;&#x6570;&#xFF09;&#x3002; &#x5DF2;&#x8BFB;&#x8BA1;&#x6570;&#x4E5F;&#x4EE3;&#x8868;&#x7740;&#x4E0B;&#x4E00;&#x6B21;&#x8BFB;&#x53D6;&#x7684;&#x8D77;&#x59CB;&#x7D22;&#x5F15;&#x4F4D;&#x7F6E;&#x3002; Reader &#x503C;&#x6B63;&#x662F;&#x4F9D;&#x9760;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#xFF0C;&#x4EE5;&#x53CA;&#x9488;&#x5BF9;&#x5B57;&#x7B26;&#x4E32;&#x503C;&#x7684;&#x5207;&#x7247;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x5FEB;&#x901F;&#x8BFB;&#x53D6; &#x3002; bytes &#x5305;&#x4E0E;&#x5B57;&#x8282;&#x4E32;&#x64CD;&#x4F5C; strings &#x5305;&#x548C; bytes &#x5305;&#x53EF;&#x4EE5;&#x8BF4;&#x662F;&#x4E00;&#x5BF9;&#x5B6A;&#x751F;&#x5144;&#x5F1F;&#xFF0C;&#x5B83;&#x4EEC;&#x5728; API &#x65B9;&#x9762;&#x975E;&#x5E38;&#x7684;&#x76F8;&#x4F3C;&#x3002;&#x5355;&#x4ECE;&#x5B83;&#x4EEC;&#x63D0;&#x4F9B;&#x7684;&#x51FD;&#x6570;&#x7684;&#x6570;&#x91CF;&#x548C;&#x529F;&#x80FD;&#x4E0A;&#x8BB2;&#xFF0C;&#x5DEE;&#x522B;&#x5FAE;&#x4E4E;&#x5176;&#x5FAE;&#x3002; &#x53EA;&#x4E0D;&#x8FC7;&#xFF0C; strings &#x5305;&#x4E3B;&#x8981;&#x9762;&#x5411;&#x7684;&#x662F; Unicode &#x5B57;&#x7B26;&#x548C;&#x7ECF;&#x8FC7; UTF-8 &#x7F16;&#x7801;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x800C; bytes &#x5305;&#x9762;&#x5BF9;&#x7684;&#x5219;&#x4E3B;&#x8981;&#x662F;&#x5B57;&#x8282;&#x548C;&#x5B57;&#x8282;&#x5207;&#x7247;&#x3002; bytes.Buffer bytes.Buffer &#x7C7B;&#x578B;&#x7684;&#x7528;&#x9014;&#x4E3B;&#x8981;&#x662F;&#x4F5C;&#x4E3A;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x3002; bytes.Buffer &#x662F;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x7684;&#x3002; bytes.Buffer &#x4E0D;&#x4F46;&#x53EF;&#x4EE5;&#x62FC;&#x63A5;&#x3001;&#x622A;&#x65AD;&#x5176;&#x4E2D; &#x7684;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#xFF0C;&#x4EE5;&#x5404;&#x79CD;&#x5F62;&#x5F0F;&#x5BFC;&#x51FA;&#x5176;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x987A;&#x5E8F;&#x5730;&#x8BFB;&#x53D6;&#x5176;&#x4E2D;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x3002; &#x5728;&#x5185;&#x90E8;&#xFF0C; bytes.Buffer &#x7C7B;&#x578B;&#x540C;&#x6837;&#x662F;&#x4F7F;&#x7528;&#x5B57;&#x8282;&#x5207;&#x7247;&#x4F5C;&#x4E3A;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x3002;&#x5E76;&#x4E14;&#xFF0C;&#x4E0E; strings.Reader &#x7C7B;&#x578B;&#x7C7B;&#x4F3C;&#xFF0C; bytes.Buffer &#x6709;&#x4E00;&#x4E2A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x7528;&#x4E8E;&#x4EE3;&#x8868;&#x5DF2;&#x8BFB;&#x5B57;&#x8282;&#x7684;&#x8BA1;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x79F0;&#x4E3A; &#x5DF2;&#x8BFB;&#x8BA1;&#x6570; &#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x4E0E; strings.Reader &#x7C7B;&#x578B;&#x7684; Len &#x65B9;&#x6CD5;&#x4E00;&#x6837;&#xFF0C; bytes.Buffer &#x7684; Len &#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x7684;&#x4E5F;&#x662F;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x4E2D;&#x672A;&#x88AB;&#x8BFB;&#x53D6;&#x90E8;&#x5206;&#x7684;&#x957F;&#x5EA6;&#xFF0C; &#x800C;&#x4E0D;&#x662F;&#x5176;&#x4E2D;&#x5DF2;&#x5B58;&#x5185;&#x5BB9;&#x7684;&#x603B;&#x957F;&#x5EA6;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x5185;&#x5BB9;&#x957F;&#x5EA6;&#xFF09;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // &#x793A;&#x4F8B;1&#x3002; var buffer1 bytes.Buffer contents := Simple byte buffer for marshaling data. fmt.Printf( Write contents %q ...\\n , contents) buffer1.WriteString(contents) fmt.Printf( The length of buffer: %d\\n , buffer1.Len()) // = 39 fmt.Printf( The capacity of buffer: %d\\n , buffer1.Cap()) // = 64 fmt.Println() // &#x793A;&#x4F8B;2&#x3002; p1 := make ([] byte , 7 ) n, _ := buffer1.Read(p1) fmt.Printf( %d bytes were read. (call Read)\\n , n) fmt.Printf( The length of buffer: %d\\n , buffer1.Len()) // = 32 fmt.Printf( The capacity of buffer: %d\\n , buffer1.Cap()) // = 64 &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x793A;&#x4F8B;&#x4E00;&#x8F93;&#x51FA; 39 &#x548C; 64&#xFF0C;&#x4F46;&#x662F;&#x793A;&#x4F8B;&#x4E8C;&#xFF0C;&#x4ECE; buffer1 &#x4E2D;&#x8BFB;&#x53D6;&#x4E00;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#xFF0C;&#x5E76;&#x7528;&#x5B83;&#x4EEC;&#x586B;&#x6EE1;&#x957F;&#x5EA6;&#x4E3A;7&#x7684;&#x5B57;&#x8282;&#x5207;&#x7247; p1 &#x4E4B;&#x540E;&#xFF0C; buffer1 &#x7684; Len &#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x53D8;&#x4E3A;&#x4E86; 32&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x5E76;&#x6CA1;&#x6709;&#x518D;&#x5411;&#x8BE5;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x5199;&#x5165;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x7684;&#x5BB9;&#x91CF;&#x4F1A;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#xFF0C;&#x4ECD;&#x662F; 64&#x3002; &#x5BF9;&#x4E8E;&#x5904;&#x5728;&#x96F6;&#x503C;&#x72B6;&#x6001;&#x7684; Buffer &#x503C;&#x6765;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x7B2C;&#x4E00;&#x6B21;&#x6269;&#x5BB9;&#x65F6;&#x7684;&#x53E6;&#x9700;&#x5B57;&#x8282;&#x6570;&#x4E0D;&#x5927;&#x4E8E; 64&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x503C;&#x5C31;&#x4F1A;&#x57FA;&#x4E8E;&#x4E00;&#x4E2A;&#x9884;&#x5148;&#x5B9A;&#x4E49;&#x597D;&#x7684;&#x3001;&#x957F;&#x5EA6;&#x4E3A; 64 &#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x6765;&#x521B;&#x5EFA;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x3002; &#x7531;&#x4E8E; strings.Reader &#x8FD8;&#x6709;&#x4E00;&#x4E2A; Size &#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x7ED9;&#x51FA;&#x5185;&#x5BB9;&#x957F;&#x5EA6;&#x7684;&#x503C;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x7528;&#x5185;&#x5BB9;&#x957F;&#x5EA6;&#x51CF;&#x53BB;&#x672A;&#x8BFB;&#x90E8;&#x5206;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x5730;&#x5F97; &#x5230;&#x5B83;&#x7684;&#x5DF2;&#x8BFB;&#x8BA1;&#x6570;&#x3002; &#x7136;&#x800C;&#xFF0C; bytes.Buffer &#x7C7B;&#x578B;&#x5374;&#x6CA1;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x53EA;&#x6709; Cap &#x65B9;&#x6CD5;&#x3002;&#x53EF;&#x662F; Cap &#x65B9;&#x6CD5;&#x63D0;&#x4F9B;&#x7684;&#x662F;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;&#x5185;&#x5BB9;&#x957F;&#x5EA6;&#x3002; bytes.Buffer &#x7684;&#x6269;&#x5BB9;&#x7B56;&#x7565; Buffer &#x503C;&#x65E2;&#x53EF;&#x4EE5;&#x88AB;&#x624B;&#x52A8;&#x6269;&#x5BB9;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x81EA;&#x52A8;&#x6269;&#x5BB9;&#x3002;&#x5E76;&#x4E14;&#xFF0C;&#x8FD9;&#x4E24;&#x79CD;&#x6269;&#x5BB9;&#x65B9;&#x5F0F;&#x7684;&#x7B56;&#x7565;&#x662F;&#x57FA;&#x672C;&#x4E00;&#x81F4;&#x7684;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x9664;&#x975E;&#x6211;&#x4EEC;&#x5B8C;&#x5168;&#x786E;&#x5B9A;&#x540E;&#x7EED;&#x5185;&#x5BB9;&#x6240;&#x9700; &#x7684;&#x5B57;&#x8282;&#x6570;&#xFF0C;&#x5426;&#x5219;&#x8BA9; Buffer &#x503C;&#x81EA;&#x52A8;&#x53BB;&#x6269;&#x5BB9;&#x5C31;&#x597D;&#x4E86;&#x3002; &#x5728;&#x6269;&#x5BB9;&#x7684;&#x65F6;&#x5019;&#xFF0C; Buffer &#x503C;&#x4E2D;&#x76F8;&#x5E94;&#x7684;&#x4EE3;&#x7801;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#xFF09;&#x4F1A;&#x5148;&#x5224;&#x65AD;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5269;&#x4F59;&#x5BB9;&#x91CF;&#xFF0C;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x6EE1;&#x8DB3;&#x8C03;&#x7528;&#x65B9;&#x7684;&#x8981;&#x6C42;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x5426;&#x8DB3; &#x591F;&#x5BB9;&#x7EB3;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x5982;&#x679C;&#x53EF;&#x4EE5;&#xFF0C;&#x90A3;&#x4E48;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x4F1A;&#x5728;&#x5F53;&#x524D;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x4E4B;&#x4E0A;&#xFF0C;&#x8FDB;&#x884C;&#x957F;&#x5EA6;&#x6269;&#x5145;&#x3002;&#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x4E0E;&#x5176;&#x957F;&#x5EA6;&#x7684;&#x5DEE;&#xFF0C;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x53E6;&#x9700;&#x7684;&#x5B57; &#x8282;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x5C31;&#x4F1A;&#x901A;&#x8FC7;&#x5207;&#x7247;&#x64CD;&#x4F5C;&#x5BF9;&#x539F;&#x6709;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x957F;&#x5EA6;&#x8FDB;&#x884C;&#x6269;&#x5145;&#xFF0C;&#x5C31;&#x50CF;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#xFF1A; 1 b.buf = b.buf[:length+need] &#x53CD;&#x4E4B;&#xFF0C;&#x5982;&#x679C;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5269;&#x4F59;&#x5BB9;&#x91CF;&#x4E0D;&#x591F;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x53EF;&#x80FD;&#x5C31;&#x4F1A;&#x7528;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x53BB;&#x66FF;&#x4EE3;&#x539F;&#x6709;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF0C;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x6269;&#x5BB9;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FD9;&#x91CC;&#x8FD8;&#x4E00;&#x6B65;&#x4F18;&#x5316;&#x3002; &#x5982;&#x679C;&#x5F53;&#x524D;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x7684;&#x4E00;&#x534A;&#x4ECD;&#x7136;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x5176;&#x73B0;&#x6709;&#x957F;&#x5EA6;&#x518D;&#x52A0;&#x4E0A;&#x53E6;&#x9700;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7684;&#x548C;&#xFF0C;&#x5373;&#xFF1A; 1 cap (b.buf)/ 2 = len (b.buf)+need &#x90A3;&#x4E48;&#xFF0C;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x5C31;&#x4F1A;&#x590D;&#x7528;&#x73B0;&#x6709;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF0C;&#x5E76;&#x628A;&#x5BB9;&#x5668;&#x4E2D;&#x7684;&#x672A;&#x8BFB;&#x5185;&#x5BB9;&#x62F7;&#x8D1D;&#x5230;&#x5B83;&#x7684;&#x5934;&#x90E8;&#x4F4D;&#x7F6E;&#x3002;&#x8FD9;&#x4E5F;&#x610F;&#x5473;&#x7740;&#x5176;&#x4E2D;&#x7684;&#x5DF2;&#x8BFB;&#x5185;&#x5BB9;&#xFF0C;&#x5C06;&#x4F1A;&#x5168;&#x90E8;&#x88AB;&#x672A;&#x8BFB;&#x5185;&#x5BB9;&#x548C; &#x4E4B;&#x540E;&#x7684;&#x65B0;&#x5185;&#x5BB9;&#x8986;&#x76D6;&#x6389;&#x3002; &#x8FD9;&#x6837;&#x7684;&#x590D;&#x7528;&#x9884;&#x8BA1;&#x53EF;&#x4EE5;&#x81F3;&#x5C11;&#x8282;&#x7701;&#x6389;&#x4E00;&#x6B21;&#x540E;&#x7EED;&#x7684;&#x6269;&#x5BB9;&#x6240;&#x5E26;&#x6765;&#x7684;&#x5185;&#x5B58;&#x5206;&#x914D;&#xFF0C;&#x4EE5;&#x53CA;&#x82E5;&#x5E72;&#x5B57;&#x8282;&#x7684;&#x62F7;&#x8D1D;&#x3002; &#x82E5;&#x8FD9;&#x4E00;&#x6B65;&#x4F18;&#x5316;&#x672A;&#x80FD;&#x8FBE;&#x6210;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5F53;&#x524D;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x5C0F;&#x4E8E;&#x65B0;&#x957F;&#x5EA6;&#x7684;&#x4E8C;&#x500D;&#xFF0C;&#x90A3;&#x4E48;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x5C31;&#x53EA;&#x80FD;&#x518D;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF0C;&#x5E76;&#x628A;&#x539F;&#x6709;&#x5BB9;&#x5668; &#x4E2D;&#x7684;&#x672A;&#x8BFB;&#x5185;&#x5BB9;&#x62F7;&#x8D1D;&#x8FDB;&#x53BB;&#xFF0C;&#x6700;&#x540E;&#x518D;&#x7528;&#x65B0;&#x7684;&#x5BB9;&#x5668;&#x66FF;&#x6362;&#x6389;&#x539F;&#x6709;&#x7684;&#x5BB9;&#x5668;&#x3002;&#x8FD9;&#x4E2A;&#x65B0;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x5C06;&#x4F1A;&#x7B49;&#x4E8E;&#x539F;&#x6709;&#x5BB9;&#x91CF;&#x7684;&#x4E8C;&#x500D;&#x518D;&#x52A0;&#x4E0A;&#x53E6;&#x9700;&#x5B57;&#x8282;&#x6570;&#x7684;&#x548C;&#x3002; 1 &#x65B0;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF; =2* &#x539F;&#x6709;&#x5BB9;&#x91CF; + &#x6240;&#x9700;&#x5B57;&#x8282;&#x6570; bytes.Buffer &#x4E2D;&#x7684;&#x54EA;&#x4E9B;&#x65B9;&#x6CD5;&#x53EF;&#x80FD;&#x4F1A;&#x9020;&#x6210;&#x5185;&#x5BB9;&#x7684;&#x6CC4;&#x9732; &#x4EC0;&#x4E48;&#x53EB;&#x5185;&#x5BB9;&#x6CC4;&#x9732;&#xFF1F;&#x8FD9;&#x91CC;&#x6240;&#x8BF4;&#x7684;&#x5185;&#x5BB9;&#x6CC4;&#x9732;&#x662F;&#x6307;&#xFF0C;&#x4F7F;&#x7528; Buffer &#x503C;&#x7684;&#x4E00;&#x65B9;&#x901A;&#x8FC7;&#x67D0;&#x79CD;&#x975E;&#x6807;&#x51C6;&#x7684;&#xFF08;&#x6216;&#x8005;&#x8BF4;&#x4E0D;&#x6B63;&#x5F0F;&#x7684;&#xFF09;&#x65B9;&#x5F0F;&#x5F97;&#x5230;&#x4E86;&#x672C;&#x4E0D;&#x8BE5;&#x5F97;&#x5230;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x5728; bytes.Buffer &#x4E2D;&#xFF0C; Bytes &#x65B9;&#x6CD5;&#x548C; Next &#x65B9;&#x6CD5;&#x90FD;&#x53EF;&#x80FD;&#x4F1A;&#x9020;&#x6210;&#x5185;&#x5BB9;&#x7684;&#x6CC4;&#x9732; &#x3002;&#x539F;&#x56E0;&#x5728;&#x4E8E;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x628A;&#x57FA;&#x4E8E;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5207;&#x7247;&#x76F4;&#x63A5;&#x8FD4; &#x56DE;&#x7ED9;&#x4E86;&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x65B9;&#x3002; &#x6211;&#x4EEC;&#x90FD;&#x77E5;&#x9053;&#xFF0C; &#x901A;&#x8FC7;&#x5207;&#x7247;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x548C;&#x64CD;&#x7EB5;&#x5B83;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x3002;&#x4E0D;&#x8BBA;&#x8FD9;&#x4E2A;&#x5207;&#x7247;&#x662F;&#x57FA;&#x4E8E;&#x67D0;&#x4E2A;&#x6570;&#x7EC4;&#x5F97;&#x6765;&#x7684;&#xFF0C;&#x8FD8;&#x662F;&#x901A;&#x8FC7;&#x5BF9;&#x53E6;&#x4E00;&#x4E2A;&#x5207;&#x7247;&#x505A;&#x5207;&#x7247;&#x64CD;&#x4F5C; &#x83B7;&#x5F97;&#x7684; &#xFF0C;&#x90FD;&#x662F;&#x5982;&#x6B64;&#x3002; 1 2 3 4 5 6 7 8 contents := ab buffer1 := bytes.NewBufferString(contents) fmt.Printf( The capacity of new buffer with contents %q: %d\\n , contents, buffer1.Cap()) // &#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x4E3A;&#xFF1A;8&#x3002; fmt.Println() unreadBytes := buffer1.Bytes() fmt.Printf( The unread bytes of the buffer: %v\\n , unreadBytes) &#x524D;&#x9762;&#x901A;&#x8FC7;&#x8C03;&#x7528; buffer1 &#x7684; Bytes &#x65B9;&#x6CD5;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x503C; unreadBytes &#xFF0C;&#x5305;&#x542B;&#x4E86;&#x5728;&#x90A3;&#x65F6;&#x5176;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x672A;&#x8BFB;&#x5185;&#x5BB9;&#x3002; &#x4F46;&#x662F;&#xFF0C;&#x7531;&#x4E8E;&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x4E0E; buffer1 &#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x5728;&#x6B64;&#x65F6;&#x8FD8;&#x5171;&#x7528;&#x7740;&#x540C;&#x4E00;&#x4E2A;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x53EA;&#x9700;&#x901A;&#x8FC7;&#x7B80;&#x5355;&#x7684;&#x518D;&#x5207;&#x7247;&#x64CD;&#x4F5C;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FD9;&#x4E2A; &#x7ED3;&#x679C;&#x503C;&#x62FF;&#x5230; buffer1 &#x5728;&#x6B64;&#x65F6;&#x7684;&#x6240;&#x6709;&#x672A;&#x8BFB;&#x5185;&#x5BB9;&#x3002;&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C; buffer1 &#x7684;&#x65B0;&#x5185;&#x5BB9;&#x5C31;&#x88AB;&#x6CC4;&#x9732;&#x51FA;&#x6765;&#x4E86;&#x3002; &#x4E00;&#x4E2A; string &#x7C7B;&#x578B;&#x7684;&#x503C;&#x5728;&#x5E95;&#x5C42;&#x600E;&#x6837;&#x88AB;&#x8868;&#x8FBE; &#x5728;&#x5E95;&#x5C42;&#xFF0C;&#x4E00;&#x4E2A; string &#x7C7B;&#x578B;&#x7684;&#x503C;&#x662F;&#x7531;&#x4E00;&#x7CFB;&#x5217;&#x76F8;&#x5BF9;&#x5E94;&#x7684; Unicode &#x4EE3;&#x7801;&#x70B9;&#x7684; UTF-8 &#x7F16;&#x7801;&#x503C;&#x6765;&#x8868;&#x8FBE;&#x7684;&#x3002; &#x4E00;&#x4E2A; string &#x7C7B;&#x578B;&#x7684;&#x503C;&#x65E2;&#x53EF;&#x4EE5;&#x88AB;&#x62C6;&#x5206;&#x4E3A;&#x4E00;&#x4E2A;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x62C6;&#x5206;&#x4E3A;&#x4E00;&#x4E2A;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x5E8F;&#x5217;&#x3002; &#x524D;&#x8005;&#x53EF;&#x4EE5;&#x7531;&#x4E00;&#x4E2A;&#x4EE5; rune &#xFF08; int32 &#x7684;&#x522B;&#x540D;&#xFF09;&#x4E3A;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x7684;&#x5207;&#x7247;&#x6765;&#x8868;&#x793A;&#xFF0C;&#x800C;&#x540E;&#x8005;&#x5219;&#x53EF;&#x4EE5;&#x7531;&#x4E00;&#x4E2A;&#x4EE5; byte &#x4E3A;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x7684;&#x5207;&#x7247;&#x4EE3;&#x8868;&#x3002; rune &#x662F; Go &#x8BED;&#x8A00;&#x7279;&#x6709;&#x7684;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x7684;&#x4E00;&#x4E2A;&#x503C;&#x5C31;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x5373;&#xFF1A;&#x4E00;&#x4E2A; Unicode &#x5B57;&#x7B26;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x2019;G&#x2019;&#x3001;&#x2019;o&#x2019;&#x3001;&#x2019;&#x7231;&#x2019;&#x3001;&#x2019;&#x597D;&#x2019;&#x3001; &#x2018;&#x8005;&#x2019;&#x4EE3;&#x8868;&#x7684;&#x5C31;&#x90FD;&#x662F;&#x4E00;&#x4E2A; Unicode &#x5B57;&#x7B26;&#x3002;&#x4E00;&#x4E2A; rune &#x7C7B;&#x578B;&#x7684;&#x503C;&#x4F1A;&#x7531;&#x56DB;&#x4E2A;&#x5B57;&#x8282;&#x5BBD;&#x5EA6;&#x7684;&#x7A7A;&#x95F4;&#x6765;&#x5B58;&#x50A8;&#x3002;&#x5B83;&#x7684;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#x603B;&#x662F;&#x80FD;&#x591F;&#x5B58;&#x4E0B;&#x4E00; &#x4E2A; UTF-8 &#x7F16;&#x7801;&#x503C;&#x3002; &#x4E00;&#x4E2A; rune &#x7C7B;&#x578B;&#x7684;&#x503C;&#x5728;&#x5E95;&#x5C42;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E00;&#x4E2A; UTF-8 &#x7F16;&#x7801;&#x503C; &#x3002;&#x524D;&#x8005;&#x662F;&#xFF08;&#x4FBF;&#x4E8E;&#x6211;&#x4EEC;&#x4EBA;&#x7C7B;&#x7406;&#x89E3;&#x7684;&#xFF09;&#x5916;&#x90E8;&#x5C55;&#x73B0;&#xFF0C;&#x540E;&#x8005;&#x662F;&#xFF08;&#x4FBF;&#x4E8E;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x7406;&#x89E3;&#x7684;&#xFF09; &#x5185;&#x5728;&#x8868;&#x8FBE;&#x3002; 1 2 3 4 5 str := Go &#x7231;&#x597D;&#x8005;  fmt.Printf( The string: %q\\n , str) fmt.Printf(  = runes(char): %q\\n , [] rune (str)) fmt.Printf(  = runes(hex): %x\\n , [] rune (str)) fmt.Printf(  = bytes(hex): [% x]\\n , [] byte (str)) &#x5B57;&#x7B26;&#x4E32;&#x503C; &#x201C;Go &#x7231;&#x597D;&#x8005;&#x201D; &#x5982;&#x679C;&#x88AB;&#x8F6C;&#x6362;&#x4E3A; []rune &#x7C7B;&#x578B;&#x7684;&#x503C;&#x7684;&#x8BDD;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#xFF08;&#x4E0D;&#x8BBA;&#x662F;&#x82F1;&#x6587;&#x5B57;&#x7B26;&#x8FD8;&#x662F;&#x4E2D;&#x6587;&#x5B57;&#x7B26;&#xFF09;&#x5C31;&#x90FD;&#x4F1A;&#x72EC;&#x7ACB;&#x6210;&#x4E3A;&#x4E00; &#x4E2A; rune &#x7C7B;&#x578B;&#x7684;&#x5143;&#x7D20;&#x503C;&#x3002;&#x56E0; &#x6B64;&#xFF0C;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x6253;&#x5370;&#x51FA;&#x7684;&#x7B2C;&#x4E8C;&#x884C;&#x5185;&#x5BB9;&#x5C31;&#x4F1A;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 1 = runes(char): [ &apos;G&apos; &apos;o&apos; &apos;&#x7231;&apos; &apos;&#x597D;&apos; &apos;&#x8005;&apos; ] &#x53C8;&#x7531;&#x4E8E;&#xFF0C;&#x6BCF;&#x4E2A; rune &#x7C7B;&#x578B;&#x7684;&#x503C;&#x5728;&#x5E95;&#x5C42;&#x90FD;&#x662F;&#x7531;&#x4E00;&#x4E2A; UTF-8 &#x7F16;&#x7801;&#x503C;&#x6765;&#x8868;&#x8FBE;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6362;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x6765;&#x5C55;&#x73B0;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x5E8F;&#x5217;&#xFF1A; 1 = runes(hex): [47 6f 7231 597d 8005] &#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x5730;&#x62C6;&#x5206;&#xFF0C;&#x628A;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x7684; UTF-8 &#x7F16;&#x7801;&#x503C;&#x90FD;&#x62C6;&#x6210;&#x76F8;&#x5E94;&#x7684;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x3002;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x7B2C;&#x4E94;&#x884C;&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x505A;&#x7684;&#x3002;&#x5B83;&#x4F1A;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x7684;&#x8F93;&#x51FA;&#xFF1A; 1 = bytes(hex): [47 6f e7 88 b1 e5 a5 bd e8 80 85]"},"basic/test.html":{"title":"测试","path":"\\golang-learn\\basic\\test.html","body":"测试 go test 命令测试代码，包目录内，所有以 _test.go 为后缀名的源文件在执行 go build 时不会被构建成包的一部分， 它们是 go test 测试的一部分。 在 *_test.go 文件中，有三种类型的函数： 测试函数，测试程序的一些逻辑行为是否正确。 go test 命令会调用这些测试函数并报告测试结果是 PASS 或 FAIL 。 基准测试函数，衡量一些函数的性能。 go test 命令会多次运行基准函数以计算一个平均的执行时间。 示例函数，提供一个由编译器保证正确性的示例文档。 go test 会生成一个临时 main 包调用测试函数。 参数 -v ，打印每个测试函数的名字和运行时间。 -run ，指定一个正则表达式，只有匹配到的测试函数名才会被 go test 运行，如 go test -v -run=French|Canal 。 -cover ，测试覆盖率。 -bench ，运行基准测试。例如 go test -bench=. （如果在 Windows Powershell 环境下使用 go test -bench=. ） -c ，生成用于运行测试的可执行文件，但不执行它。这个可执行文件会被命名为 pkg.test ，其中的 pkg 即为被测试代码包的 导入路径的最后一个元素的名称。 -i ，安装/重新安装运行测试所需的依赖包，但不编译和运行测试代码。 -o ，指定用于运行测试的可执行文件的名称。追加该标记不会影响测试代码的运行，除非同时追加了标记 -c 或 -i 。 测试函数 测试函数必须导入 testing 包，并以 Test 为函数名前缀，后缀名必须以大写字母开头，并且参数列表中只应有一个 *testing.T 类型的参数声明 ： 1 2 3 func TestName (t *testing.T)  ...  t 参数用于报告测试失败和附加的日志信息。 t.Error 和 t.Errorf 打印错误日志。 t.Fatal 或 t.Fatalf 停止当前测试函数 go test 命令如果没有参数指定包那么将默认采用当前目录对应的包。 表格驱动测试在我们要创建一系列相同测试方式的测试用例时很有用。例如: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 func TestIsPalindrome (t *testing.T)  var tests = [] struct  input string want bool   \"\" , true ,  \"a\" , true ,  \"aa\" , true ,  \"ab\" , false ,  \"kayak\" , true ,  \"detartrated\" , true ,  \"A man, a plan, a canal: Panama\" , true ,  \"Evil I did dwell; lewd did I live.\" , true ,  \"Able was I ere I saw Elba\" , true ,  \"été\" , true ,  \"Et se resservir, ivresse reste.\" , true ,  \"palindrome\" , false , // non-palindrome  \"desserts\" , false , // semi-palindrome  for _, test := range tests  if got := IsPalindrome(test.input); got != test.want  t.Errorf( \"IsPalindrome(%q) = %v\" , test.input, got)    覆盖率 go test 命令中集成了测试覆盖率工具。 运行 go tool cover ： 1 2 3 4 5 6 7 $ go tool cover Usage of 'go tool cover' : Given a coverage profile produced by 'go test' : go test -coverprofile=c.out Open a web browser displaying annotated source code: go tool cover -html=c.out 添加 -coverprofile 参数，统计覆盖率数据，并将统计日志数据写入指定文件，如 go test -run=Coverage -coverprofile=c.out 。 -covermode=count 参数将在每个代码块插入一个计数器而不是布尔标志量。在统计结果中记录了每个块的执行次数， 这可以用于衡量哪些是被频繁执行的热点代码。 基准测试 测试函数必须导入 testing 包，并以 Benchmark 为函数名前缀，后缀名必须以大写字母开头，并且唯一参数的类型必须 是 *testing.B 类型的 ： 1 2 3 func BenchmarkName (b *testing.B)  ...  *testing.B 参数除了提供和 *testing.T 类似的方法，还有额外一些和性能测量相关的方法。 运行基准测试 运行基准测试需要使用 -bench 参数，指定要运行的基准测试函数。该参数是一个正则表达式，用于匹配要执行的基准测试函数的名字， 默认值是空的。 . 会匹配所有基准测试函数。 剖析 基准测试对于衡量特定操作的性能是有帮助的，Go 语言支持多种类型的剖析性能分析： CPU 剖析数据标识了最耗 CPU 时间的函数。 堆剖析则标识了最耗内存的语句。 阻塞剖析则记录阻塞 goroutine 最久的操作，例如系统调用、管道发送和接收，还有获取锁等。 1 2 3 $ go test -cpuprofile=cpu.out $ go test -blockprofile=block.out $ go test -memprofile=mem.out go tool pprof go tool pprof 命令可以用来分析上面的命令生成的数据。 示例函数 并以 Benchmark 为函数名前缀，示例函数没有函数参数和返回值： 1 2 3 func ExampleName ()  ...  三个用处: 作为文档，如 ExampleIsPalindrome 示例函数将是 IsPalindrome 函数文档的一部分。 go test 会运行示例函数测试。 提供 Go Playground，可以在浏览器中在线编辑和运行每个示例函数。 go test 命令执行的主要测试流程 go test 命令在开始运行时，会先做一些准备工作，比如，确定内部需要用到的命令，检查我们指定的代码包或源码文件的有效性， 以及判断我们给予的标记是否合法，等等。 在准备工作顺利完成之后，go test 命令就会针对每个被测代码包，依次地进行构建、执行包中符合要求的测试函数，清理临时文件， 打印测试结果。这就是通常情况下的主要测试流程。 对于每个被测代码包， go test 命令会 串行地执行测试流程中的每个步骤 。 但是，为了加快测试速度，它通常会并发地对多个被测代码包进行功能测试，只不过，在最后打印测试结果的时候，它会依照我们给定的 顺序逐个进行，这会让我们感觉到它是在完全串行地执行测试流程。 由于 并发的测试会让性能测试的结果存在偏差，所以性能测试一般都是串行进行的 。 功能测试的测试结果 1 2 $ go test puzzlers/article20/q2 ok puzzlers/article20/q2 (cached) (cached) 表明，由于测试代码与被测代码都没有任何变动，所以 go test 命令直接把之前缓存测试成功的结果打印出来了。 go 命令通常会缓存程序构建的结果，以便在将来的构建中重用。我们可以通过运行 go env GOCACHE 命令来查看缓存目录的路径。 运行 go clean -testcache 将会删除所有的测试结果缓存。不过，这样做肯定不会删除任何构建结果缓存。 设置环境变量 GODEBUG 的值也可以稍稍地改变 go 命令的缓存行为。比如，设置值为 gocacheverify=1 将会导致 go 命令绕 过任何的缓存数据，而真正地执行操作并重新生成所有结果，然后再去检查新的结果与现有的缓存数据是否一致。 性能测试的测试结果 1 2 3 4 5 6 7 $ go test -bench=. -run=^$ puzzlers/article20/q3 goos: darwin goarch: amd64 pkg: puzzlers/article20/q3 BenchmarkGetPrimes-8 500000 2314 ns/op PASS ok puzzlers/article20/q3 1.192s 第一个标记及其值为 -bench=. ，只有有了这个标记，命令才会进行性能测试 。该标记的值 . 表明需要执行任意名称的性能测试函数。 第二个标记及其值是 -run=^$ ，这个标记用于表明需要执行哪些功能测试函数，这同样也是以函数名称为依据的。该标记的值 ^$ 意味着： 只执行名称为空的功能测试函数，换句话说，不执行任何功能测试函数。 这两个标记的值都是正则表达式。实际上，它们只能以正则表达式为值。此外，如果运行 go test 命令的时候不加 -run 标记， 那么就会使它执行被测代码包中的所有功能测试函数。 测试结果，重点在倒数第三行的内容。 BenchmarkGetPrimes-8 被称为单个性能测试的名称，它表示命令执行了性能测试 函数 BenchmarkGetPrimes ，并且当时所用的最大 P 数量为 8。 最大 P 数量相当于可以同时运行 goroutine 的逻辑 CPU 的最大个数。这里的逻辑 CPU，也可以被称为 CPU 核心，但它并不等同 于计算机中真正的 CPU 核心，只是 Go 语言运行时系统内部的一个概念，代表着它同时运行 goroutine 的能力。 可以通过调用 runtime.GOMAXPROCS 函数改变最大 P 数量，也可以在运行 go test 命令时，加入标记 -cpu 来设置一个最大 P 数量 的列表，以供命令在多次测试时使用。 测试名称右边的是执行次数。 它指的是被测函数的执行次数，而不是性能测试函数的执行次数 。 -parallel 标记 该标记的作用是：设置同一个被测代码包中的功能测试函数的最大并发执行数。 该标记的默认值是测试运行时的最大 P 数量（这可以通过调用表达 式 runtime.GOMAXPROCS(0) 获得）。 对于功能测试，为了加快测试速度，命令通常会并发地测试多个被测代码包。但是，在默认情况下， 对于同一个被测代码包中的多个功 能测试函数，命令会串行地执行它们 。除非我们在一些功能测试函数中显式地调用 t.Parallel 方 法。 这个时候，这些包含了 t.Parallel 方法调用的功能测试函数就会被 go test 命令并发地执行，而并发执行的最大数量正是 由 -parallel 标记值决定的。要注意，同一个功能测试函数的多次执行之间一定是串行的。 性能测试函数中的计时器 testing.B 类型有这么几个指针方法： StartTimer 、 StopTimer 和 ResetTimer 。这些方法都是用于操作当前的性能测试函数 专属的计时器的。 这些字段用于记录：当前测试函数在当次执行过程中耗费的时间、分配的堆内存的字节数以及分配次数。 性能分析 Go 语言为程序开发者们提供了丰富的性能分析 API，和非常好用的标准工具。这些 API 主要存在于： runtime/pprof ； net/http/pprof ； runtime/trace ； 至于标准工具，主要有 go tool pprof 和 go tool trace 这两个。它们可以解析概要文件中的信息，并以人类易读的方式把这些 信息展示出来。 在 Go 语言中，用于分析程序性能的概要文件有三种，分别是： CPU 概要文件（CPU Profile）、内存概要文件（Mem Profile）和阻塞概 要文件（Block Profile） 。 CPU 概要文件，其中的每一段独立的概要信息都记录着，在进行某一次采样的那个时刻，CPU 上正在执行的 Go 代码。 内存概要文件，其中的每一段概要信息都记载着，在某个采样时刻，正在执行的 Go 代码以及堆内存的使用情况，这里包含已分配和已释放的 字节数量和对象数量。 阻塞概要文件，其中的每一段概要信息，都代表着 Go 程序中的一个 goroutine 阻塞事件。 程序对 CPU 概要信息进行采样 这需要用到 runtime/pprof 包中的 API。想让程序开始对 CPU 概要信息进行采样的时候，需要调用这个代码包中 的 StartCPUProfile 函数，而在停止采样的时候则需要调用该包中的 StopCPUProfile 函数。 设定内存概要信息的采样频率 针对内存概要信息的采样会按照一定比例收集 Go 程序在运行期间的堆内存使用情况。设定内存概要信息采样频率的方法很简单， 只要为 runtime.MemProfileRate 变量赋值即可。 这个变量的含义是，平均每分配多少个字节，就对堆内存的使用情况进行一次采样。如果把该变量的值设为0，那么，Go 语言运行时系统就 会完全停止对内存概要信息的采样。该变量的缺省值是 512 KB，也就是 512 千字节。 如果你要设定这个采样频率，那么越早设定越好，并且只应该设定一次，否则就可能会对 Go 语言运行时系统的采样工作，造成不良影响 。 比如，只在 main 函数的开始处设定一次。 当我们想获取内存概要信息的时候，还需要调用 runtime/pprof 包中的 WriteHeapProfile 函数。该函数会把收集好的内存概要信息， 写到我们指定的写入器中。 注意，我们通过 WriteHeapProfile 函数得到的内存概要信息并不是实时的，它是一个快照，是在最近一次的内存垃圾收集工作完成时产 生的 。如果你想要实时的信息，那么可以调用 runtime.ReadMemStats 函数。不过要特别注意，该函数会引起 Go 语言调度器的短暂停顿。 获取到阻塞概要信息 调用 runtime 包中的 SetBlockProfileRate 函数，即可对阻塞概要信息的采样频率进行设定。该函数有一个名叫 rate 的参数， 它是 int 类型的。 这个参数的含义是，只要发现一个阻塞事件的持续时间达到了多少个纳秒，就可以对其进行采样。如果这个参数的值小于或等于0，那么就意 味着 Go 语言运行时系统将会完全停止对阻塞概要信息的采样。 当我们需要获取阻塞概要信息的时候，需要先调用 runtime/pprof 包中的 Lookup 函数并传入参数值 “block”，从而得到一 个 *runtime/pprof.Profile 类型的值（以下简称Profile值）。在这之后，我们还需要调用这个 Profile 值的 WriteTo 方法， 以驱使它把概要信息写进我们指定的写入器中。 WriteTo 方法有两个参数，一个参数就是我们刚刚提到的写入器，它是 io.Writer 类型的。而另一个参数则是代表了概要信息 详细程度的 int 类型参数 debug 。 debug 参数主要的可选值有两个，即：0 和 1。当 debug 的值为 0 时，通过 WriteTo 方法写进写入器的概要信息仅会包含 go tool pprof 工具所需的内存地址，这些内存地址会以十六进制的形式展现出来。 当该值为 1 时，相应的包名、函数名、源码文件路径、代码行号等信息就都会作为注释被加入进去。另外， debug 为 0 时的概要信息， 会经由 protocol buffers 转换为字节流。而在 debug 为 1 的时候， WriteTo 方法输出的这些概要信息就是我们可以读懂 的普通文本了。 除此之外， debug 的值也可以是 2。这时，被输出的概要信息也会是普通的文本，并且通常会包含更多的细节。至于这些细节都包含了哪些 内容，那就要看们调用 runtime/pprof.Lookup 函数的时候传入的是什么样的参数值了。"},"basic/test.html#测试":{"title":"&#x6D4B;&#x8BD5;","path":"\\golang-learn\\basic\\test.html#测试","body":"go test &#x547D;&#x4EE4;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#xFF0C;&#x5305;&#x76EE;&#x5F55;&#x5185;&#xFF0C;&#x6240;&#x6709;&#x4EE5; _test.go &#x4E3A;&#x540E;&#x7F00;&#x540D;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x5728;&#x6267;&#x884C; go build &#x65F6;&#x4E0D;&#x4F1A;&#x88AB;&#x6784;&#x5EFA;&#x6210;&#x5305;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C; &#x5B83;&#x4EEC;&#x662F; go test &#x6D4B;&#x8BD5;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002; &#x5728; *_test.go &#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x6709;&#x4E09;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x51FD;&#x6570;&#xFF1A; &#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x6D4B;&#x8BD5;&#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x4E9B;&#x903B;&#x8F91;&#x884C;&#x4E3A;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3002; go test &#x547D;&#x4EE4;&#x4F1A;&#x8C03;&#x7528;&#x8FD9;&#x4E9B;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x5E76;&#x62A5;&#x544A;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x662F; PASS &#x6216; FAIL &#x3002; &#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x8861;&#x91CF;&#x4E00;&#x4E9B;&#x51FD;&#x6570;&#x7684;&#x6027;&#x80FD;&#x3002; go test &#x547D;&#x4EE4;&#x4F1A;&#x591A;&#x6B21;&#x8FD0;&#x884C;&#x57FA;&#x51C6;&#x51FD;&#x6570;&#x4EE5;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x5E73;&#x5747;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x3002; &#x793A;&#x4F8B;&#x51FD;&#x6570;&#xFF0C;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x7531;&#x7F16;&#x8BD1;&#x5668;&#x4FDD;&#x8BC1;&#x6B63;&#x786E;&#x6027;&#x7684;&#x793A;&#x4F8B;&#x6587;&#x6863;&#x3002; go test &#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x4E34;&#x65F6; main &#x5305;&#x8C03;&#x7528;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002; &#x53C2;&#x6570; -v &#xFF0C;&#x6253;&#x5370;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x540D;&#x5B57;&#x548C;&#x8FD0;&#x884C;&#x65F6;&#x95F4;&#x3002; -run &#xFF0C;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x53EA;&#x6709;&#x5339;&#x914D;&#x5230;&#x7684;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x540D;&#x624D;&#x4F1A;&#x88AB; go test &#x8FD0;&#x884C;&#xFF0C;&#x5982; go test -v -run=French|Canal &#x3002; -cover &#xFF0C;&#x6D4B;&#x8BD5;&#x8986;&#x76D6;&#x7387;&#x3002; -bench &#xFF0C;&#x8FD0;&#x884C;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x3002;&#x4F8B;&#x5982; go test -bench=. &#xFF08;&#x5982;&#x679C;&#x5728; Windows Powershell &#x73AF;&#x5883;&#x4E0B;&#x4F7F;&#x7528; go test -bench=. &#xFF09; -c &#xFF0C;&#x751F;&#x6210;&#x7528;&#x4E8E;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x4E0D;&#x6267;&#x884C;&#x5B83;&#x3002;&#x8FD9;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x4F1A;&#x88AB;&#x547D;&#x540D;&#x4E3A; pkg.test &#xFF0C;&#x5176;&#x4E2D;&#x7684; pkg &#x5373;&#x4E3A;&#x88AB;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x5305;&#x7684; &#x5BFC;&#x5165;&#x8DEF;&#x5F84;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x540D;&#x79F0;&#x3002; -i &#xFF0C;&#x5B89;&#x88C5;/&#x91CD;&#x65B0;&#x5B89;&#x88C5;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x6240;&#x9700;&#x7684;&#x4F9D;&#x8D56;&#x5305;&#xFF0C;&#x4F46;&#x4E0D;&#x7F16;&#x8BD1;&#x548C;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x3002; -o &#xFF0C;&#x6307;&#x5B9A;&#x7528;&#x4E8E;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x7684;&#x540D;&#x79F0;&#x3002;&#x8FFD;&#x52A0;&#x8BE5;&#x6807;&#x8BB0;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x7684;&#x8FD0;&#x884C;&#xFF0C;&#x9664;&#x975E;&#x540C;&#x65F6;&#x8FFD;&#x52A0;&#x4E86;&#x6807;&#x8BB0; -c &#x6216; -i &#x3002;"},"basic/test.html#测试函数":{"title":"&#x6D4B;&#x8BD5;&#x51FD;&#x6570;","path":"\\golang-learn\\basic\\test.html#测试函数","body":"&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x5FC5;&#x987B;&#x5BFC;&#x5165; testing &#x5305;&#xFF0C;&#x5E76;&#x4EE5; Test &#x4E3A;&#x51FD;&#x6570;&#x540D;&#x524D;&#x7F00;&#xFF0C;&#x540E;&#x7F00;&#x540D;&#x5FC5;&#x987B;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#xFF0C;&#x5E76;&#x4E14;&#x53C2;&#x6570;&#x5217;&#x8868;&#x4E2D;&#x53EA;&#x5E94;&#x6709;&#x4E00;&#x4E2A; *testing.T &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#x58F0;&#x660E; &#xFF1A; 1 2 3 func TestName (t *testing.T) { ... } t &#x53C2;&#x6570;&#x7528;&#x4E8E;&#x62A5;&#x544A;&#x6D4B;&#x8BD5;&#x5931;&#x8D25;&#x548C;&#x9644;&#x52A0;&#x7684;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x3002; t.Error &#x548C; t.Errorf &#x6253;&#x5370;&#x9519;&#x8BEF;&#x65E5;&#x5FD7;&#x3002; t.Fatal &#x6216; t.Fatalf &#x505C;&#x6B62;&#x5F53;&#x524D;&#x6D4B;&#x8BD5;&#x51FD;&#x6570; go test &#x547D;&#x4EE4;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x5305;&#x90A3;&#x4E48;&#x5C06;&#x9ED8;&#x8BA4;&#x91C7;&#x7528;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x5BF9;&#x5E94;&#x7684;&#x5305;&#x3002; &#x8868;&#x683C;&#x9A71;&#x52A8;&#x6D4B;&#x8BD5;&#x5728;&#x6211;&#x4EEC;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x7CFB;&#x5217;&#x76F8;&#x540C;&#x6D4B;&#x8BD5;&#x65B9;&#x5F0F;&#x7684;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x65F6;&#x5F88;&#x6709;&#x7528;&#x3002;&#x4F8B;&#x5982;: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 func TestIsPalindrome (t *testing.T) { var tests = [] struct { input string want bool }{ {  , true }, { a , true }, { aa , true }, { ab , false }, { kayak , true }, { detartrated , true }, { A man, a plan, a canal: Panama , true }, { Evil I did dwell; lewd did I live. , true }, { Able was I ere I saw Elba , true }, { &#xE9;t&#xE9; , true }, { Et se resservir, ivresse reste. , true }, { palindrome , false }, // non-palindrome { desserts , false }, // semi-palindrome } for _, test := range tests { if got := IsPalindrome(test.input); got != test.want { t.Errorf( IsPalindrome(%q) = %v , test.input, got) } } }"},"basic/test.html#覆盖率":{"title":"&#x8986;&#x76D6;&#x7387;","path":"\\golang-learn\\basic\\test.html#覆盖率","body":"go test &#x547D;&#x4EE4;&#x4E2D;&#x96C6;&#x6210;&#x4E86;&#x6D4B;&#x8BD5;&#x8986;&#x76D6;&#x7387;&#x5DE5;&#x5177;&#x3002; &#x8FD0;&#x884C; go tool cover &#xFF1A; 1 2 3 4 5 6 7 $ go tool cover Usage of &apos;go tool cover&apos; : Given a coverage profile produced by &apos;go test&apos; : go test -coverprofile=c.out Open a web browser displaying annotated source code: go tool cover -html=c.out &#x6DFB;&#x52A0; -coverprofile &#x53C2;&#x6570;&#xFF0C;&#x7EDF;&#x8BA1;&#x8986;&#x76D6;&#x7387;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x5C06;&#x7EDF;&#x8BA1;&#x65E5;&#x5FD7;&#x6570;&#x636E;&#x5199;&#x5165;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#xFF0C;&#x5982; go test -run=Coverage -coverprofile=c.out &#x3002; -covermode=count &#x53C2;&#x6570;&#x5C06;&#x5728;&#x6BCF;&#x4E2A;&#x4EE3;&#x7801;&#x5757;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#x800C;&#x4E0D;&#x662F;&#x5E03;&#x5C14;&#x6807;&#x5FD7;&#x91CF;&#x3002;&#x5728;&#x7EDF;&#x8BA1;&#x7ED3;&#x679C;&#x4E2D;&#x8BB0;&#x5F55;&#x4E86;&#x6BCF;&#x4E2A;&#x5757;&#x7684;&#x6267;&#x884C;&#x6B21;&#x6570;&#xFF0C; &#x8FD9;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x8861;&#x91CF;&#x54EA;&#x4E9B;&#x662F;&#x88AB;&#x9891;&#x7E41;&#x6267;&#x884C;&#x7684;&#x70ED;&#x70B9;&#x4EE3;&#x7801;&#x3002;"},"basic/test.html#基准测试":{"title":"&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;","path":"\\golang-learn\\basic\\test.html#基准测试","body":"&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x5FC5;&#x987B;&#x5BFC;&#x5165; testing &#x5305;&#xFF0C;&#x5E76;&#x4EE5; Benchmark &#x4E3A;&#x51FD;&#x6570;&#x540D;&#x524D;&#x7F00;&#xFF0C;&#x540E;&#x7F00;&#x540D;&#x5FC5;&#x987B;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#xFF0C;&#x5E76;&#x4E14;&#x552F;&#x4E00;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x5FC5;&#x987B; &#x662F; *testing.B &#x7C7B;&#x578B;&#x7684; &#xFF1A; 1 2 3 func BenchmarkName (b *testing.B) { ... } *testing.B &#x53C2;&#x6570;&#x9664;&#x4E86;&#x63D0;&#x4F9B;&#x548C; *testing.T &#x7C7B;&#x4F3C;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD8;&#x6709;&#x989D;&#x5916;&#x4E00;&#x4E9B;&#x548C;&#x6027;&#x80FD;&#x6D4B;&#x91CF;&#x76F8;&#x5173;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x8FD0;&#x884C;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5; &#x8FD0;&#x884C;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x9700;&#x8981;&#x4F7F;&#x7528; -bench &#x53C2;&#x6570;&#xFF0C;&#x6307;&#x5B9A;&#x8981;&#x8FD0;&#x884C;&#x7684;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002;&#x8BE5;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x7528;&#x4E8E;&#x5339;&#x914D;&#x8981;&#x6267;&#x884C;&#x7684;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x540D;&#x5B57;&#xFF0C; &#x9ED8;&#x8BA4;&#x503C;&#x662F;&#x7A7A;&#x7684;&#x3002; . &#x4F1A;&#x5339;&#x914D;&#x6240;&#x6709;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002; &#x5256;&#x6790; &#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x5BF9;&#x4E8E;&#x8861;&#x91CF;&#x7279;&#x5B9A;&#x64CD;&#x4F5C;&#x7684;&#x6027;&#x80FD;&#x662F;&#x6709;&#x5E2E;&#x52A9;&#x7684;&#xFF0C;Go &#x8BED;&#x8A00;&#x652F;&#x6301;&#x591A;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x5256;&#x6790;&#x6027;&#x80FD;&#x5206;&#x6790;&#xFF1A; CPU &#x5256;&#x6790;&#x6570;&#x636E;&#x6807;&#x8BC6;&#x4E86;&#x6700;&#x8017; CPU &#x65F6;&#x95F4;&#x7684;&#x51FD;&#x6570;&#x3002; &#x5806;&#x5256;&#x6790;&#x5219;&#x6807;&#x8BC6;&#x4E86;&#x6700;&#x8017;&#x5185;&#x5B58;&#x7684;&#x8BED;&#x53E5;&#x3002; &#x963B;&#x585E;&#x5256;&#x6790;&#x5219;&#x8BB0;&#x5F55;&#x963B;&#x585E; goroutine &#x6700;&#x4E45;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x4F8B;&#x5982;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x3001;&#x7BA1;&#x9053;&#x53D1;&#x9001;&#x548C;&#x63A5;&#x6536;&#xFF0C;&#x8FD8;&#x6709;&#x83B7;&#x53D6;&#x9501;&#x7B49;&#x3002; 1 2 3 $ go test -cpuprofile=cpu.out $ go test -blockprofile=block.out $ go test -memprofile=mem.out go tool pprof go tool pprof &#x547D;&#x4EE4;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5206;&#x6790;&#x4E0A;&#x9762;&#x7684;&#x547D;&#x4EE4;&#x751F;&#x6210;&#x7684;&#x6570;&#x636E;&#x3002;"},"basic/test.html#示例函数":{"title":"&#x793A;&#x4F8B;&#x51FD;&#x6570;","path":"\\golang-learn\\basic\\test.html#示例函数","body":"&#x5E76;&#x4EE5; Benchmark &#x4E3A;&#x51FD;&#x6570;&#x540D;&#x524D;&#x7F00;&#xFF0C;&#x793A;&#x4F8B;&#x51FD;&#x6570;&#x6CA1;&#x6709;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#xFF1A; 1 2 3 func ExampleName () { ... } &#x4E09;&#x4E2A;&#x7528;&#x5904;: &#x4F5C;&#x4E3A;&#x6587;&#x6863;&#xFF0C;&#x5982; ExampleIsPalindrome &#x793A;&#x4F8B;&#x51FD;&#x6570;&#x5C06;&#x662F; IsPalindrome &#x51FD;&#x6570;&#x6587;&#x6863;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002; go test &#x4F1A;&#x8FD0;&#x884C;&#x793A;&#x4F8B;&#x51FD;&#x6570;&#x6D4B;&#x8BD5;&#x3002; &#x63D0;&#x4F9B; Go Playground&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x5728;&#x7EBF;&#x7F16;&#x8F91;&#x548C;&#x8FD0;&#x884C;&#x6BCF;&#x4E2A;&#x793A;&#x4F8B;&#x51FD;&#x6570;&#x3002;"},"basic/test.html#go-test-命令执行的主要测试流程":{"title":"go test &#x547D;&#x4EE4;&#x6267;&#x884C;&#x7684;&#x4E3B;&#x8981;&#x6D4B;&#x8BD5;&#x6D41;&#x7A0B;","path":"\\golang-learn\\basic\\test.html#go-test-命令执行的主要测试流程","body":"go test &#x547D;&#x4EE4;&#x5728;&#x5F00;&#x59CB;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x4F1A;&#x5148;&#x505A;&#x4E00;&#x4E9B;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#xFF0C;&#x6BD4;&#x5982;&#xFF0C;&#x786E;&#x5B9A;&#x5185;&#x90E8;&#x9700;&#x8981;&#x7528;&#x5230;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x68C0;&#x67E5;&#x6211;&#x4EEC;&#x6307;&#x5B9A;&#x7684;&#x4EE3;&#x7801;&#x5305;&#x6216;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x7684;&#x6709;&#x6548;&#x6027;&#xFF0C; &#x4EE5;&#x53CA;&#x5224;&#x65AD;&#x6211;&#x4EEC;&#x7ED9;&#x4E88;&#x7684;&#x6807;&#x8BB0;&#x662F;&#x5426;&#x5408;&#x6CD5;&#xFF0C;&#x7B49;&#x7B49;&#x3002; &#x5728;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#x987A;&#x5229;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;go test &#x547D;&#x4EE4;&#x5C31;&#x4F1A;&#x9488;&#x5BF9;&#x6BCF;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#xFF0C;&#x4F9D;&#x6B21;&#x5730;&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#x3001;&#x6267;&#x884C;&#x5305;&#x4E2D;&#x7B26;&#x5408;&#x8981;&#x6C42;&#x7684;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x6E05;&#x7406;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF0C; &#x6253;&#x5370;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x4E3B;&#x8981;&#x6D4B;&#x8BD5;&#x6D41;&#x7A0B;&#x3002; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#xFF0C; go test &#x547D;&#x4EE4;&#x4F1A; &#x4E32;&#x884C;&#x5730;&#x6267;&#x884C;&#x6D4B;&#x8BD5;&#x6D41;&#x7A0B;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x6B65;&#x9AA4; &#x3002; &#x4F46;&#x662F;&#xFF0C;&#x4E3A;&#x4E86;&#x52A0;&#x5FEB;&#x6D4B;&#x8BD5;&#x901F;&#x5EA6;&#xFF0C;&#x5B83;&#x901A;&#x5E38;&#x4F1A;&#x5E76;&#x53D1;&#x5730;&#x5BF9;&#x591A;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#x8FDB;&#x884C;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#xFF0C;&#x5728;&#x6700;&#x540E;&#x6253;&#x5370;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x4F1A;&#x4F9D;&#x7167;&#x6211;&#x4EEC;&#x7ED9;&#x5B9A;&#x7684; &#x987A;&#x5E8F;&#x9010;&#x4E2A;&#x8FDB;&#x884C;&#xFF0C;&#x8FD9;&#x4F1A;&#x8BA9;&#x6211;&#x4EEC;&#x611F;&#x89C9;&#x5230;&#x5B83;&#x662F;&#x5728;&#x5B8C;&#x5168;&#x4E32;&#x884C;&#x5730;&#x6267;&#x884C;&#x6D4B;&#x8BD5;&#x6D41;&#x7A0B;&#x3002; &#x7531;&#x4E8E; &#x5E76;&#x53D1;&#x7684;&#x6D4B;&#x8BD5;&#x4F1A;&#x8BA9;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x7684;&#x7ED3;&#x679C;&#x5B58;&#x5728;&#x504F;&#x5DEE;&#xFF0C;&#x6240;&#x4EE5;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x4E00;&#x822C;&#x90FD;&#x662F;&#x4E32;&#x884C;&#x8FDB;&#x884C;&#x7684; &#x3002;"},"basic/test.html#功能测试的测试结果":{"title":"&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x7684;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;","path":"\\golang-learn\\basic\\test.html#功能测试的测试结果","body":"1 2 $ go test puzzlers/article20/q2 ok puzzlers/article20/q2 (cached) (cached) &#x8868;&#x660E;&#xFF0C;&#x7531;&#x4E8E;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x4E0E;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x90FD;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x53D8;&#x52A8;&#xFF0C;&#x6240;&#x4EE5; go test &#x547D;&#x4EE4;&#x76F4;&#x63A5;&#x628A;&#x4E4B;&#x524D;&#x7F13;&#x5B58;&#x6D4B;&#x8BD5;&#x6210;&#x529F;&#x7684;&#x7ED3;&#x679C;&#x6253;&#x5370;&#x51FA;&#x6765;&#x4E86;&#x3002; go &#x547D;&#x4EE4;&#x901A;&#x5E38;&#x4F1A;&#x7F13;&#x5B58;&#x7A0B;&#x5E8F;&#x6784;&#x5EFA;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x4EE5;&#x4FBF;&#x5728;&#x5C06;&#x6765;&#x7684;&#x6784;&#x5EFA;&#x4E2D;&#x91CD;&#x7528;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8FD0;&#x884C; go env GOCACHE &#x547D;&#x4EE4;&#x6765;&#x67E5;&#x770B;&#x7F13;&#x5B58;&#x76EE;&#x5F55;&#x7684;&#x8DEF;&#x5F84;&#x3002; &#x8FD0;&#x884C; go clean -testcache &#x5C06;&#x4F1A;&#x5220;&#x9664;&#x6240;&#x6709;&#x7684;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x7F13;&#x5B58;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x80AF;&#x5B9A;&#x4E0D;&#x4F1A;&#x5220;&#x9664;&#x4EFB;&#x4F55;&#x6784;&#x5EFA;&#x7ED3;&#x679C;&#x7F13;&#x5B58;&#x3002; &#x8BBE;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF; GODEBUG &#x7684;&#x503C;&#x4E5F;&#x53EF;&#x4EE5;&#x7A0D;&#x7A0D;&#x5730;&#x6539;&#x53D8; go &#x547D;&#x4EE4;&#x7684;&#x7F13;&#x5B58;&#x884C;&#x4E3A;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x8BBE;&#x7F6E;&#x503C;&#x4E3A; gocacheverify=1 &#x5C06;&#x4F1A;&#x5BFC;&#x81F4; go &#x547D;&#x4EE4;&#x7ED5; &#x8FC7;&#x4EFB;&#x4F55;&#x7684;&#x7F13;&#x5B58;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x771F;&#x6B63;&#x5730;&#x6267;&#x884C;&#x64CD;&#x4F5C;&#x5E76;&#x91CD;&#x65B0;&#x751F;&#x6210;&#x6240;&#x6709;&#x7ED3;&#x679C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x53BB;&#x68C0;&#x67E5;&#x65B0;&#x7684;&#x7ED3;&#x679C;&#x4E0E;&#x73B0;&#x6709;&#x7684;&#x7F13;&#x5B58;&#x6570;&#x636E;&#x662F;&#x5426;&#x4E00;&#x81F4;&#x3002;"},"basic/test.html#性能测试的测试结果":{"title":"&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x7684;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;","path":"\\golang-learn\\basic\\test.html#性能测试的测试结果","body":"1 2 3 4 5 6 7 $ go test -bench=. -run=^$ puzzlers/article20/q3 goos: darwin goarch: amd64 pkg: puzzlers/article20/q3 BenchmarkGetPrimes-8 500000 2314 ns/op PASS ok puzzlers/article20/q3 1.192s &#x7B2C;&#x4E00;&#x4E2A;&#x6807;&#x8BB0;&#x53CA;&#x5176;&#x503C;&#x4E3A; -bench=. &#xFF0C;&#x53EA;&#x6709;&#x6709;&#x4E86;&#x8FD9;&#x4E2A;&#x6807;&#x8BB0;&#xFF0C;&#x547D;&#x4EE4;&#x624D;&#x4F1A;&#x8FDB;&#x884C;&#x6027;&#x80FD;&#x6D4B;&#x8BD5; &#x3002;&#x8BE5;&#x6807;&#x8BB0;&#x7684;&#x503C; . &#x8868;&#x660E;&#x9700;&#x8981;&#x6267;&#x884C;&#x4EFB;&#x610F;&#x540D;&#x79F0;&#x7684;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002; &#x7B2C;&#x4E8C;&#x4E2A;&#x6807;&#x8BB0;&#x53CA;&#x5176;&#x503C;&#x662F; -run=^$ &#xFF0C;&#x8FD9;&#x4E2A;&#x6807;&#x8BB0;&#x7528;&#x4E8E;&#x8868;&#x660E;&#x9700;&#x8981;&#x6267;&#x884C;&#x54EA;&#x4E9B;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x540C;&#x6837;&#x4E5F;&#x662F;&#x4EE5;&#x51FD;&#x6570;&#x540D;&#x79F0;&#x4E3A;&#x4F9D;&#x636E;&#x7684;&#x3002;&#x8BE5;&#x6807;&#x8BB0;&#x7684;&#x503C; ^$ &#x610F;&#x5473;&#x7740;&#xFF1A; &#x53EA;&#x6267;&#x884C;&#x540D;&#x79F0;&#x4E3A;&#x7A7A;&#x7684;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x4E0D;&#x6267;&#x884C;&#x4EFB;&#x4F55;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002; &#x8FD9;&#x4E24;&#x4E2A;&#x6807;&#x8BB0;&#x7684;&#x503C;&#x90FD;&#x662F;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5B83;&#x4EEC;&#x53EA;&#x80FD;&#x4EE5;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x4E3A;&#x503C;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x5982;&#x679C;&#x8FD0;&#x884C; go test &#x547D;&#x4EE4;&#x7684;&#x65F6;&#x5019;&#x4E0D;&#x52A0; -run &#x6807;&#x8BB0;&#xFF0C; &#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x4F7F;&#x5B83;&#x6267;&#x884C;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002; &#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#xFF0C;&#x91CD;&#x70B9;&#x5728;&#x5012;&#x6570;&#x7B2C;&#x4E09;&#x884C;&#x7684;&#x5185;&#x5BB9;&#x3002; BenchmarkGetPrimes-8 &#x88AB;&#x79F0;&#x4E3A;&#x5355;&#x4E2A;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x7684;&#x540D;&#x79F0;&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x547D;&#x4EE4;&#x6267;&#x884C;&#x4E86;&#x6027;&#x80FD;&#x6D4B;&#x8BD5; &#x51FD;&#x6570; BenchmarkGetPrimes &#xFF0C;&#x5E76;&#x4E14;&#x5F53;&#x65F6;&#x6240;&#x7528;&#x7684;&#x6700;&#x5927; P &#x6570;&#x91CF;&#x4E3A; 8&#x3002; &#x6700;&#x5927; P &#x6570;&#x91CF;&#x76F8;&#x5F53;&#x4E8E;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8FD0;&#x884C; goroutine &#x7684;&#x903B;&#x8F91; CPU &#x7684;&#x6700;&#x5927;&#x4E2A;&#x6570;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x903B;&#x8F91; CPU&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x79F0;&#x4E3A; CPU &#x6838;&#x5FC3;&#xFF0C;&#x4F46;&#x5B83;&#x5E76;&#x4E0D;&#x7B49;&#x540C; &#x4E8E;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#x771F;&#x6B63;&#x7684; CPU &#x6838;&#x5FC3;&#xFF0C;&#x53EA;&#x662F; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x5185;&#x90E8;&#x7684;&#x4E00;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x4EE3;&#x8868;&#x7740;&#x5B83;&#x540C;&#x65F6;&#x8FD0;&#x884C; goroutine &#x7684;&#x80FD;&#x529B;&#x3002; &#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528; runtime.GOMAXPROCS &#x51FD;&#x6570;&#x6539;&#x53D8;&#x6700;&#x5927; P &#x6570;&#x91CF;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x8FD0;&#x884C; go test &#x547D;&#x4EE4;&#x65F6;&#xFF0C;&#x52A0;&#x5165;&#x6807;&#x8BB0; -cpu &#x6765;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x6700;&#x5927; P &#x6570;&#x91CF; &#x7684;&#x5217;&#x8868;&#xFF0C;&#x4EE5;&#x4F9B;&#x547D;&#x4EE4;&#x5728;&#x591A;&#x6B21;&#x6D4B;&#x8BD5;&#x65F6;&#x4F7F;&#x7528;&#x3002; &#x6D4B;&#x8BD5;&#x540D;&#x79F0;&#x53F3;&#x8FB9;&#x7684;&#x662F;&#x6267;&#x884C;&#x6B21;&#x6570;&#x3002; &#x5B83;&#x6307;&#x7684;&#x662F;&#x88AB;&#x6D4B;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x6B21;&#x6570;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x6B21;&#x6570; &#x3002;"},"basic/test.html#parallel-标记":{"title":"-parallel &#x6807;&#x8BB0;","path":"\\golang-learn\\basic\\test.html#parallel-标记","body":"&#x8BE5;&#x6807;&#x8BB0;&#x7684;&#x4F5C;&#x7528;&#x662F;&#xFF1A;&#x8BBE;&#x7F6E;&#x540C;&#x4E00;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#x4E2D;&#x7684;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x6700;&#x5927;&#x5E76;&#x53D1;&#x6267;&#x884C;&#x6570;&#x3002; &#x8BE5;&#x6807;&#x8BB0;&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x662F;&#x6D4B;&#x8BD5;&#x8FD0;&#x884C;&#x65F6;&#x7684;&#x6700;&#x5927; P &#x6570;&#x91CF;&#xFF08;&#x8FD9;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x8868;&#x8FBE; &#x5F0F; runtime.GOMAXPROCS(0) &#x83B7;&#x5F97;&#xFF09;&#x3002; &#x5BF9;&#x4E8E;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#xFF0C;&#x4E3A;&#x4E86;&#x52A0;&#x5FEB;&#x6D4B;&#x8BD5;&#x901F;&#x5EA6;&#xFF0C;&#x547D;&#x4EE4;&#x901A;&#x5E38;&#x4F1A;&#x5E76;&#x53D1;&#x5730;&#x6D4B;&#x8BD5;&#x591A;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x5728;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C; &#x5BF9;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#x4E2D;&#x7684;&#x591A;&#x4E2A;&#x529F; &#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x547D;&#x4EE4;&#x4F1A;&#x4E32;&#x884C;&#x5730;&#x6267;&#x884C;&#x5B83;&#x4EEC; &#x3002;&#x9664;&#x975E;&#x6211;&#x4EEC;&#x5728;&#x4E00;&#x4E9B;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x4E2D;&#x663E;&#x5F0F;&#x5730;&#x8C03;&#x7528; t.Parallel &#x65B9; &#x6CD5;&#x3002; &#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x8FD9;&#x4E9B;&#x5305;&#x542B;&#x4E86; t.Parallel &#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x7684;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x5C31;&#x4F1A;&#x88AB; go test &#x547D;&#x4EE4;&#x5E76;&#x53D1;&#x5730;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x5E76;&#x53D1;&#x6267;&#x884C;&#x7684;&#x6700;&#x5927;&#x6570;&#x91CF;&#x6B63;&#x662F; &#x7531; -parallel &#x6807;&#x8BB0;&#x503C;&#x51B3;&#x5B9A;&#x7684;&#x3002;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x540C;&#x4E00;&#x4E2A;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x591A;&#x6B21;&#x6267;&#x884C;&#x4E4B;&#x95F4;&#x4E00;&#x5B9A;&#x662F;&#x4E32;&#x884C;&#x7684;&#x3002;"},"basic/test.html#性能测试函数中的计时器":{"title":"&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x8BA1;&#x65F6;&#x5668;","path":"\\golang-learn\\basic\\test.html#性能测试函数中的计时器","body":"testing.B &#x7C7B;&#x578B;&#x6709;&#x8FD9;&#x4E48;&#x51E0;&#x4E2A;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#xFF1A; StartTimer &#x3001; StopTimer &#x548C; ResetTimer &#x3002;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x7528;&#x4E8E;&#x64CD;&#x4F5C;&#x5F53;&#x524D;&#x7684;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570; &#x4E13;&#x5C5E;&#x7684;&#x8BA1;&#x65F6;&#x5668;&#x7684;&#x3002; &#x8FD9;&#x4E9B;&#x5B57;&#x6BB5;&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#xFF1A;&#x5F53;&#x524D;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x5728;&#x5F53;&#x6B21;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x8017;&#x8D39;&#x7684;&#x65F6;&#x95F4;&#x3001;&#x5206;&#x914D;&#x7684;&#x5806;&#x5185;&#x5B58;&#x7684;&#x5B57;&#x8282;&#x6570;&#x4EE5;&#x53CA;&#x5206;&#x914D;&#x6B21;&#x6570;&#x3002;"},"basic/test.html#性能分析":{"title":"&#x6027;&#x80FD;&#x5206;&#x6790;","path":"\\golang-learn\\basic\\test.html#性能分析","body":"Go &#x8BED;&#x8A00;&#x4E3A;&#x7A0B;&#x5E8F;&#x5F00;&#x53D1;&#x8005;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x4E30;&#x5BCC;&#x7684;&#x6027;&#x80FD;&#x5206;&#x6790; API&#xFF0C;&#x548C;&#x975E;&#x5E38;&#x597D;&#x7528;&#x7684;&#x6807;&#x51C6;&#x5DE5;&#x5177;&#x3002;&#x8FD9;&#x4E9B; API &#x4E3B;&#x8981;&#x5B58;&#x5728;&#x4E8E;&#xFF1A; runtime/pprof &#xFF1B; net/http/pprof &#xFF1B; runtime/trace &#xFF1B; &#x81F3;&#x4E8E;&#x6807;&#x51C6;&#x5DE5;&#x5177;&#xFF0C;&#x4E3B;&#x8981;&#x6709; go tool pprof &#x548C; go tool trace &#x8FD9;&#x4E24;&#x4E2A;&#x3002;&#x5B83;&#x4EEC;&#x53EF;&#x4EE5;&#x89E3;&#x6790;&#x6982;&#x8981;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4EE5;&#x4EBA;&#x7C7B;&#x6613;&#x8BFB;&#x7684;&#x65B9;&#x5F0F;&#x628A;&#x8FD9;&#x4E9B; &#x4FE1;&#x606F;&#x5C55;&#x793A;&#x51FA;&#x6765;&#x3002; &#x5728; Go &#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x7528;&#x4E8E;&#x5206;&#x6790;&#x7A0B;&#x5E8F;&#x6027;&#x80FD;&#x7684;&#x6982;&#x8981;&#x6587;&#x4EF6;&#x6709;&#x4E09;&#x79CD;&#xFF0C;&#x5206;&#x522B;&#x662F;&#xFF1A; CPU &#x6982;&#x8981;&#x6587;&#x4EF6;&#xFF08;CPU Profile&#xFF09;&#x3001;&#x5185;&#x5B58;&#x6982;&#x8981;&#x6587;&#x4EF6;&#xFF08;Mem Profile&#xFF09;&#x548C;&#x963B;&#x585E;&#x6982; &#x8981;&#x6587;&#x4EF6;&#xFF08;Block Profile&#xFF09; &#x3002; CPU &#x6982;&#x8981;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x6BB5;&#x72EC;&#x7ACB;&#x7684;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x90FD;&#x8BB0;&#x5F55;&#x7740;&#xFF0C;&#x5728;&#x8FDB;&#x884C;&#x67D0;&#x4E00;&#x6B21;&#x91C7;&#x6837;&#x7684;&#x90A3;&#x4E2A;&#x65F6;&#x523B;&#xFF0C;CPU &#x4E0A;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684; Go &#x4EE3;&#x7801;&#x3002; &#x5185;&#x5B58;&#x6982;&#x8981;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x6BB5;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x90FD;&#x8BB0;&#x8F7D;&#x7740;&#xFF0C;&#x5728;&#x67D0;&#x4E2A;&#x91C7;&#x6837;&#x65F6;&#x523B;&#xFF0C;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684; Go &#x4EE3;&#x7801;&#x4EE5;&#x53CA;&#x5806;&#x5185;&#x5B58;&#x7684;&#x4F7F;&#x7528;&#x60C5;&#x51B5;&#xFF0C;&#x8FD9;&#x91CC;&#x5305;&#x542B;&#x5DF2;&#x5206;&#x914D;&#x548C;&#x5DF2;&#x91CA;&#x653E;&#x7684; &#x5B57;&#x8282;&#x6570;&#x91CF;&#x548C;&#x5BF9;&#x8C61;&#x6570;&#x91CF;&#x3002; &#x963B;&#x585E;&#x6982;&#x8981;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x6BB5;&#x6982;&#x8981;&#x4FE1;&#x606F;&#xFF0C;&#x90FD;&#x4EE3;&#x8868;&#x7740; Go &#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x4E00;&#x4E2A; goroutine &#x963B;&#x585E;&#x4E8B;&#x4EF6;&#x3002; &#x7A0B;&#x5E8F;&#x5BF9; CPU &#x6982;&#x8981;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x91C7;&#x6837; &#x8FD9;&#x9700;&#x8981;&#x7528;&#x5230; runtime/pprof &#x5305;&#x4E2D;&#x7684; API&#x3002;&#x60F3;&#x8BA9;&#x7A0B;&#x5E8F;&#x5F00;&#x59CB;&#x5BF9; CPU &#x6982;&#x8981;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x91C7;&#x6837;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x5305;&#x4E2D; &#x7684; StartCPUProfile &#x51FD;&#x6570;&#xFF0C;&#x800C;&#x5728;&#x505C;&#x6B62;&#x91C7;&#x6837;&#x7684;&#x65F6;&#x5019;&#x5219;&#x9700;&#x8981;&#x8C03;&#x7528;&#x8BE5;&#x5305;&#x4E2D;&#x7684; StopCPUProfile &#x51FD;&#x6570;&#x3002; &#x8BBE;&#x5B9A;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x91C7;&#x6837;&#x9891;&#x7387; &#x9488;&#x5BF9;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x91C7;&#x6837;&#x4F1A;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x6BD4;&#x4F8B;&#x6536;&#x96C6; Go &#x7A0B;&#x5E8F;&#x5728;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#x7684;&#x5806;&#x5185;&#x5B58;&#x4F7F;&#x7528;&#x60C5;&#x51B5;&#x3002;&#x8BBE;&#x5B9A;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x91C7;&#x6837;&#x9891;&#x7387;&#x7684;&#x65B9;&#x6CD5;&#x5F88;&#x7B80;&#x5355;&#xFF0C; &#x53EA;&#x8981;&#x4E3A; runtime.MemProfileRate &#x53D8;&#x91CF;&#x8D4B;&#x503C;&#x5373;&#x53EF;&#x3002; &#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x542B;&#x4E49;&#x662F;&#xFF0C;&#x5E73;&#x5747;&#x6BCF;&#x5206;&#x914D;&#x591A;&#x5C11;&#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x5C31;&#x5BF9;&#x5806;&#x5185;&#x5B58;&#x7684;&#x4F7F;&#x7528;&#x60C5;&#x51B5;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x91C7;&#x6837;&#x3002;&#x5982;&#x679C;&#x628A;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x8BBE;&#x4E3A;0&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x5C31; &#x4F1A;&#x5B8C;&#x5168;&#x505C;&#x6B62;&#x5BF9;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x91C7;&#x6837;&#x3002;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x7F3A;&#x7701;&#x503C;&#x662F; 512 KB&#xFF0C;&#x4E5F;&#x5C31;&#x662F; 512 &#x5343;&#x5B57;&#x8282;&#x3002; &#x5982;&#x679C;&#x4F60;&#x8981;&#x8BBE;&#x5B9A;&#x8FD9;&#x4E2A;&#x91C7;&#x6837;&#x9891;&#x7387;&#xFF0C;&#x90A3;&#x4E48;&#x8D8A;&#x65E9;&#x8BBE;&#x5B9A;&#x8D8A;&#x597D;&#xFF0C;&#x5E76;&#x4E14;&#x53EA;&#x5E94;&#x8BE5;&#x8BBE;&#x5B9A;&#x4E00;&#x6B21;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x53EF;&#x80FD;&#x4F1A;&#x5BF9; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x7684;&#x91C7;&#x6837;&#x5DE5;&#x4F5C;&#xFF0C;&#x9020;&#x6210;&#x4E0D;&#x826F;&#x5F71;&#x54CD; &#x3002; &#x6BD4;&#x5982;&#xFF0C;&#x53EA;&#x5728; main &#x51FD;&#x6570;&#x7684;&#x5F00;&#x59CB;&#x5904;&#x8BBE;&#x5B9A;&#x4E00;&#x6B21;&#x3002; &#x5F53;&#x6211;&#x4EEC;&#x60F3;&#x83B7;&#x53D6;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x8C03;&#x7528; runtime/pprof &#x5305;&#x4E2D;&#x7684; WriteHeapProfile &#x51FD;&#x6570;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x628A;&#x6536;&#x96C6;&#x597D;&#x7684;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#xFF0C; &#x5199;&#x5230;&#x6211;&#x4EEC;&#x6307;&#x5B9A;&#x7684;&#x5199;&#x5165;&#x5668;&#x4E2D;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7; WriteHeapProfile &#x51FD;&#x6570;&#x5F97;&#x5230;&#x7684;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x5E76;&#x4E0D;&#x662F;&#x5B9E;&#x65F6;&#x7684;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x5FEB;&#x7167;&#xFF0C;&#x662F;&#x5728;&#x6700;&#x8FD1;&#x4E00;&#x6B21;&#x7684;&#x5185;&#x5B58;&#x5783;&#x573E;&#x6536;&#x96C6;&#x5DE5;&#x4F5C;&#x5B8C;&#x6210;&#x65F6;&#x4EA7; &#x751F;&#x7684; &#x3002;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x8981;&#x5B9E;&#x65F6;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x8C03;&#x7528; runtime.ReadMemStats &#x51FD;&#x6570;&#x3002;&#x4E0D;&#x8FC7;&#x8981;&#x7279;&#x522B;&#x6CE8;&#x610F;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x5F15;&#x8D77; Go &#x8BED;&#x8A00;&#x8C03;&#x5EA6;&#x5668;&#x7684;&#x77ED;&#x6682;&#x505C;&#x987F;&#x3002; &#x83B7;&#x53D6;&#x5230;&#x963B;&#x585E;&#x6982;&#x8981;&#x4FE1;&#x606F; &#x8C03;&#x7528; runtime &#x5305;&#x4E2D;&#x7684; SetBlockProfileRate &#x51FD;&#x6570;&#xFF0C;&#x5373;&#x53EF;&#x5BF9;&#x963B;&#x585E;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x91C7;&#x6837;&#x9891;&#x7387;&#x8FDB;&#x884C;&#x8BBE;&#x5B9A;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x53EB; rate &#x7684;&#x53C2;&#x6570;&#xFF0C; &#x5B83;&#x662F; int &#x7C7B;&#x578B;&#x7684;&#x3002; &#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x542B;&#x4E49;&#x662F;&#xFF0C;&#x53EA;&#x8981;&#x53D1;&#x73B0;&#x4E00;&#x4E2A;&#x963B;&#x585E;&#x4E8B;&#x4EF6;&#x7684;&#x6301;&#x7EED;&#x65F6;&#x95F4;&#x8FBE;&#x5230;&#x4E86;&#x591A;&#x5C11;&#x4E2A;&#x7EB3;&#x79D2;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x91C7;&#x6837;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x503C;&#x5C0F;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;0&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x610F; &#x5473;&#x7740; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x5C06;&#x4F1A;&#x5B8C;&#x5168;&#x505C;&#x6B62;&#x5BF9;&#x963B;&#x585E;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x91C7;&#x6837;&#x3002; &#x5F53;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x83B7;&#x53D6;&#x963B;&#x585E;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x8C03;&#x7528; runtime/pprof &#x5305;&#x4E2D;&#x7684; Lookup &#x51FD;&#x6570;&#x5E76;&#x4F20;&#x5165;&#x53C2;&#x6570;&#x503C; &#x201C;block&#x201D;&#xFF0C;&#x4ECE;&#x800C;&#x5F97;&#x5230;&#x4E00; &#x4E2A; *runtime/pprof.Profile &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;Profile&#x503C;&#xFF09;&#x3002;&#x5728;&#x8FD9;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x9700;&#x8981;&#x8C03;&#x7528;&#x8FD9;&#x4E2A; Profile &#x503C;&#x7684; WriteTo &#x65B9;&#x6CD5;&#xFF0C; &#x4EE5;&#x9A71;&#x4F7F;&#x5B83;&#x628A;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x5199;&#x8FDB;&#x6211;&#x4EEC;&#x6307;&#x5B9A;&#x7684;&#x5199;&#x5165;&#x5668;&#x4E2D;&#x3002; WriteTo &#x65B9;&#x6CD5;&#x6709;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x521A;&#x521A;&#x63D0;&#x5230;&#x7684;&#x5199;&#x5165;&#x5668;&#xFF0C;&#x5B83;&#x662F; io.Writer &#x7C7B;&#x578B;&#x7684;&#x3002;&#x800C;&#x53E6;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5219;&#x662F;&#x4EE3;&#x8868;&#x4E86;&#x6982;&#x8981;&#x4FE1;&#x606F; &#x8BE6;&#x7EC6;&#x7A0B;&#x5EA6;&#x7684; int &#x7C7B;&#x578B;&#x53C2;&#x6570; debug &#x3002; debug &#x53C2;&#x6570;&#x4E3B;&#x8981;&#x7684;&#x53EF;&#x9009;&#x503C;&#x6709;&#x4E24;&#x4E2A;&#xFF0C;&#x5373;&#xFF1A;0 &#x548C; 1&#x3002;&#x5F53; debug &#x7684;&#x503C;&#x4E3A; 0 &#x65F6;&#xFF0C;&#x901A;&#x8FC7; WriteTo &#x65B9;&#x6CD5;&#x5199;&#x8FDB;&#x5199;&#x5165;&#x5668;&#x7684;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x4EC5;&#x4F1A;&#x5305;&#x542B; go tool pprof &#x5DE5;&#x5177;&#x6240;&#x9700;&#x7684;&#x5185;&#x5B58;&#x5730;&#x5740;&#xFF0C;&#x8FD9;&#x4E9B;&#x5185;&#x5B58;&#x5730;&#x5740;&#x4F1A;&#x4EE5;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x7684;&#x5F62;&#x5F0F;&#x5C55;&#x73B0;&#x51FA;&#x6765;&#x3002; &#x5F53;&#x8BE5;&#x503C;&#x4E3A; 1 &#x65F6;&#xFF0C;&#x76F8;&#x5E94;&#x7684;&#x5305;&#x540D;&#x3001;&#x51FD;&#x6570;&#x540D;&#x3001;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x3001;&#x4EE3;&#x7801;&#x884C;&#x53F7;&#x7B49;&#x4FE1;&#x606F;&#x5C31;&#x90FD;&#x4F1A;&#x4F5C;&#x4E3A;&#x6CE8;&#x91CA;&#x88AB;&#x52A0;&#x5165;&#x8FDB;&#x53BB;&#x3002;&#x53E6;&#x5916;&#xFF0C; debug &#x4E3A; 0 &#x65F6;&#x7684;&#x6982;&#x8981;&#x4FE1;&#x606F;&#xFF0C; &#x4F1A;&#x7ECF;&#x7531; protocol buffers &#x8F6C;&#x6362;&#x4E3A;&#x5B57;&#x8282;&#x6D41;&#x3002;&#x800C;&#x5728; debug &#x4E3A; 1 &#x7684;&#x65F6;&#x5019;&#xFF0C; WriteTo &#x65B9;&#x6CD5;&#x8F93;&#x51FA;&#x7684;&#x8FD9;&#x4E9B;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BFB;&#x61C2; &#x7684;&#x666E;&#x901A;&#x6587;&#x672C;&#x4E86;&#x3002; &#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C; debug &#x7684;&#x503C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F; 2&#x3002;&#x8FD9;&#x65F6;&#xFF0C;&#x88AB;&#x8F93;&#x51FA;&#x7684;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x4E5F;&#x4F1A;&#x662F;&#x666E;&#x901A;&#x7684;&#x6587;&#x672C;&#xFF0C;&#x5E76;&#x4E14;&#x901A;&#x5E38;&#x4F1A;&#x5305;&#x542B;&#x66F4;&#x591A;&#x7684;&#x7EC6;&#x8282;&#x3002;&#x81F3;&#x4E8E;&#x8FD9;&#x4E9B;&#x7EC6;&#x8282;&#x90FD;&#x5305;&#x542B;&#x4E86;&#x54EA;&#x4E9B; &#x5185;&#x5BB9;&#xFF0C;&#x90A3;&#x5C31;&#x8981;&#x770B;&#x4EEC;&#x8C03;&#x7528; runtime/pprof.Lookup &#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#x4F20;&#x5165;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x53C2;&#x6570;&#x503C;&#x4E86;&#x3002;"},"standards/data/big.html":{"title":"big","path":"\\golang-learn\\standards\\data\\big.html","body":"big big 是 Go 语言提供的进行大数操作的标准库，实现了任意精度算术（大数）。 Go 语言中的 float64 类型进行浮点运算，返回结果将精确到 15 位，足以满足大多数的任务。但是当对超出 int64 或者 uint64 类型这样的大 数进行计算时，如果对精度没有要求， float32 或者 float64 可以胜任，但如果对精度有严格要求的时候，则不能使用浮点数，在内存中它们只能 被近似的表示。 对于整数的高精度计算 Go 语言中提供了 big 包，被包含在 math 包下：有用来表示大整数的 big.Int 和表示大有理数的 big.Rat 类型 （可以表示为 2/5 或 3.1416 这样的分数，而不是无理数或 π ）。这些类型可以实现任意位类型的数字，只要内存足够大。缺点是更大的内存 和处理开销使它们使用起来要比内置的数字类型慢很多。 大的整型数字是通过 big.NewInt(n) 来构造的，其中 n 为 int64 类型整数。而大有理数是通过 big.NewRat(n, d) 方法构造。 n （分子） 和 d （分母）都是 int64 型整数。因为 Go 语言不支持运算符重载，所以所有大数字类型都有像是 Add() 和 Mul() 这样的方法。它们作用 于作为 receiver 的整数和有理数，大多数情况下它们修改 receiver 并以 receiver 作为返回结果。因为没有必要创建 big.Int 类型的临 时变量来存放中间结果，所以运算可以被链式地调用，并节省内存。 示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package main import ( \t \"fmt\" \t \"math\" \t \"math/big\" ) func main ()  \t // Here are some calculations with bigInts: \tim := big.NewInt(math.MaxInt64) \tin := im \tio := big.NewInt( 1956 ) \tip := big.NewInt( 1 ) \tip.Mul(im, in).Add(ip, im).Div(ip, io) \tfmt.Printf( \"Big Int: %v\\n\" , ip) \t // Here are some calculations with bigInts: \trm := big.NewRat(math.MaxInt64, 1956 ) \trn := big.NewRat( -1956 , math.MaxInt64) \tro := big.NewRat( 19 , 56 ) \trp := big.NewRat( 1111 , 2222 ) \trq := big.NewRat( 1 , 1 ) \trq.Mul(rm, rn).Add(rq, ro).Mul(rq, rp) \tfmt.Printf( \"Big Rat: %v\\n\" , rq)  /* Output: Big Int: 43492122561469640008497075573153004 Big Rat: -37/112 */"},"standards/data/big.html#big":{"title":"big","path":"\\golang-learn\\standards\\data\\big.html#big","body":"big &#x662F; Go &#x8BED;&#x8A00;&#x63D0;&#x4F9B;&#x7684;&#x8FDB;&#x884C;&#x5927;&#x6570;&#x64CD;&#x4F5C;&#x7684;&#x6807;&#x51C6;&#x5E93;&#xFF0C;&#x5B9E;&#x73B0;&#x4E86;&#x4EFB;&#x610F;&#x7CBE;&#x5EA6;&#x7B97;&#x672F;&#xFF08;&#x5927;&#x6570;&#xFF09;&#x3002; Go &#x8BED;&#x8A00;&#x4E2D;&#x7684; float64 &#x7C7B;&#x578B;&#x8FDB;&#x884C;&#x6D6E;&#x70B9;&#x8FD0;&#x7B97;&#xFF0C;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x5C06;&#x7CBE;&#x786E;&#x5230; 15 &#x4F4D;&#xFF0C;&#x8DB3;&#x4EE5;&#x6EE1;&#x8DB3;&#x5927;&#x591A;&#x6570;&#x7684;&#x4EFB;&#x52A1;&#x3002;&#x4F46;&#x662F;&#x5F53;&#x5BF9;&#x8D85;&#x51FA; int64 &#x6216;&#x8005; uint64 &#x7C7B;&#x578B;&#x8FD9;&#x6837;&#x7684;&#x5927; &#x6570;&#x8FDB;&#x884C;&#x8BA1;&#x7B97;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x5BF9;&#x7CBE;&#x5EA6;&#x6CA1;&#x6709;&#x8981;&#x6C42;&#xFF0C; float32 &#x6216;&#x8005; float64 &#x53EF;&#x4EE5;&#x80DC;&#x4EFB;&#xFF0C;&#x4F46;&#x5982;&#x679C;&#x5BF9;&#x7CBE;&#x5EA6;&#x6709;&#x4E25;&#x683C;&#x8981;&#x6C42;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5219;&#x4E0D;&#x80FD;&#x4F7F;&#x7528;&#x6D6E;&#x70B9;&#x6570;&#xFF0C;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x5B83;&#x4EEC;&#x53EA;&#x80FD; &#x88AB;&#x8FD1;&#x4F3C;&#x7684;&#x8868;&#x793A;&#x3002; &#x5BF9;&#x4E8E;&#x6574;&#x6570;&#x7684;&#x9AD8;&#x7CBE;&#x5EA6;&#x8BA1;&#x7B97; Go &#x8BED;&#x8A00;&#x4E2D;&#x63D0;&#x4F9B;&#x4E86; big &#x5305;&#xFF0C;&#x88AB;&#x5305;&#x542B;&#x5728; math &#x5305;&#x4E0B;&#xFF1A;&#x6709;&#x7528;&#x6765;&#x8868;&#x793A;&#x5927;&#x6574;&#x6570;&#x7684; big.Int &#x548C;&#x8868;&#x793A;&#x5927;&#x6709;&#x7406;&#x6570;&#x7684; big.Rat &#x7C7B;&#x578B; &#xFF08;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x4E3A; 2/5 &#x6216; 3.1416 &#x8FD9;&#x6837;&#x7684;&#x5206;&#x6570;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x65E0;&#x7406;&#x6570;&#x6216; &#x3C0; &#xFF09;&#x3002;&#x8FD9;&#x4E9B;&#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x4EFB;&#x610F;&#x4F4D;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x5B57;&#xFF0C;&#x53EA;&#x8981;&#x5185;&#x5B58;&#x8DB3;&#x591F;&#x5927;&#x3002;&#x7F3A;&#x70B9;&#x662F;&#x66F4;&#x5927;&#x7684;&#x5185;&#x5B58; &#x548C;&#x5904;&#x7406;&#x5F00;&#x9500;&#x4F7F;&#x5B83;&#x4EEC;&#x4F7F;&#x7528;&#x8D77;&#x6765;&#x8981;&#x6BD4;&#x5185;&#x7F6E;&#x7684;&#x6570;&#x5B57;&#x7C7B;&#x578B;&#x6162;&#x5F88;&#x591A;&#x3002; &#x5927;&#x7684;&#x6574;&#x578B;&#x6570;&#x5B57;&#x662F;&#x901A;&#x8FC7; big.NewInt(n) &#x6765;&#x6784;&#x9020;&#x7684;&#xFF0C;&#x5176;&#x4E2D; n &#x4E3A; int64 &#x7C7B;&#x578B;&#x6574;&#x6570;&#x3002;&#x800C;&#x5927;&#x6709;&#x7406;&#x6570;&#x662F;&#x901A;&#x8FC7; big.NewRat(n, d) &#x65B9;&#x6CD5;&#x6784;&#x9020;&#x3002; n &#xFF08;&#x5206;&#x5B50;&#xFF09; &#x548C; d &#xFF08;&#x5206;&#x6BCD;&#xFF09;&#x90FD;&#x662F; int64 &#x578B;&#x6574;&#x6570;&#x3002;&#x56E0;&#x4E3A; Go &#x8BED;&#x8A00;&#x4E0D;&#x652F;&#x6301;&#x8FD0;&#x7B97;&#x7B26;&#x91CD;&#x8F7D;&#xFF0C;&#x6240;&#x4EE5;&#x6240;&#x6709;&#x5927;&#x6570;&#x5B57;&#x7C7B;&#x578B;&#x90FD;&#x6709;&#x50CF;&#x662F; Add() &#x548C; Mul() &#x8FD9;&#x6837;&#x7684;&#x65B9;&#x6CD5;&#x3002;&#x5B83;&#x4EEC;&#x4F5C;&#x7528; &#x4E8E;&#x4F5C;&#x4E3A; receiver &#x7684;&#x6574;&#x6570;&#x548C;&#x6709;&#x7406;&#x6570;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#x5B83;&#x4EEC;&#x4FEE;&#x6539; receiver &#x5E76;&#x4EE5; receiver &#x4F5C;&#x4E3A;&#x8FD4;&#x56DE;&#x7ED3;&#x679C;&#x3002;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x521B;&#x5EFA; big.Int &#x7C7B;&#x578B;&#x7684;&#x4E34; &#x65F6;&#x53D8;&#x91CF;&#x6765;&#x5B58;&#x653E;&#x4E2D;&#x95F4;&#x7ED3;&#x679C;&#xFF0C;&#x6240;&#x4EE5;&#x8FD0;&#x7B97;&#x53EF;&#x4EE5;&#x88AB;&#x94FE;&#x5F0F;&#x5730;&#x8C03;&#x7528;&#xFF0C;&#x5E76;&#x8282;&#x7701;&#x5185;&#x5B58;&#x3002; &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 package main import ( \t fmt \t math \t math/big ) func main () { \t // Here are some calculations with bigInts: \tim := big.NewInt(math.MaxInt64) \tin := im \tio := big.NewInt( 1956 ) \tip := big.NewInt( 1 ) \tip.Mul(im, in).Add(ip, im).Div(ip, io) \tfmt.Printf( Big Int: %v\\n , ip) \t // Here are some calculations with bigInts: \trm := big.NewRat(math.MaxInt64, 1956 ) \trn := big.NewRat( -1956 , math.MaxInt64) \tro := big.NewRat( 19 , 56 ) \trp := big.NewRat( 1111 , 2222 ) \trq := big.NewRat( 1 , 1 ) \trq.Mul(rm, rn).Add(rq, ro).Mul(rq, rp) \tfmt.Printf( Big Rat: %v\\n , rq) } /* Output: Big Int: 43492122561469640008497075573153004 Big Rat: -37/112 */"},"standards/database/sql.html":{"title":"sql","path":"\\golang-learn\\standards\\database\\sql.html","body":"sql database/sql 提供了操作 SQL/SQL-Like 数据库的通用接口，但 Go 标准库并没有提供具体数据库的实现，需要结合第三方的驱动来使用该接口。 例如 mysql 的驱动： github.com/go-sql-driver/mysql 。 类型 database/sql 提供了一些类型： sql.DB 类型代表了一个数据库。它并 不代表一个到数据库的具体连接，而是一个能操作的数据库对象 ，具体的连接在内部通过连接池来管理， 对外不暴露。 sql.Rows 、 sql.Row 和 sql.Result ，分别用于获取多个多行结果、一行结果和修改数据库影响的行数（或其返回 last insert id ）。 sql.Stmt 代表一个语句，如：DDL、DML 等。 sql.Tx 代表带有特定属性的一个事务。 sql.DB 的使用 sql.DB 是一个数据库句柄，代表一个具有零到多个底层连接的连接池，它可以安全的被多个 goroutine 同时使用。 sql 包会自动创建和释放连接；它也会维护一个闲置连接的连接池。如果数据库具有单连接状态的概念，该状态只有在事务中被观察时才可信。 一旦调用了 BD.Begin ，返回的 Tx 会绑定到单个连接。当调用事务 Tx 的 Commit 或 Rollback 后，该事务使用的连接会归还到 DB 的闲 置连接池中。连接池的大小可以用 SetMaxIdleConns 方法控制。 由于 DB 并非一个实际的到数据库的连接，而且可以被多个 goroutine 并发使用，因此，程序中只需要拥有一个全局的实例即可： 1 2 3 4 5 db, err := sql.Open( \"mysql\" , \"root:@tcp(localhost:3306)/test?charset=utf8\" ) if err != nil  panic (err)  defer db.Close() 通常情况下， defer db.Close() 可以不调用，因为 DB 句柄通常被多个 goroutine 共享，并长期活跃。当然，如果你确定 DB 只会被使用一次， 之后不会使用了，应该调用 Close 。 所以，实际应用时，应该在一个 go 文件中的 init 函数中调用 sql.Open 初始化全局的 sql.DB 对象，供程序中所有需要进 行数据库操作的地方使用。 前面说过， sql.DB 并不是实际的数据库连接，因此， sql.Open 函数并没有进行数据库连接。 例如： db, err := sql.Open(mysql, root:@tcp23(localhost233:3306)/test?charset=utf8) 。虽然这里的 dsn 是错误的， 但依然 err == nil ，只有在实际操作数据库（查询、更新等）或调用 Ping 时才会报错。 关于 Open 函数的参数，第一个是驱动名，为了避免混淆，一般和驱动包名一致，在驱动实现中，会有类似这样的代码： 1 2 3 func init ()  sql.Register( \"mysql\" , &amp;MySQLDriver)  其中 mysql 即是注册的驱动名。由于注册驱动是在 init 函数中进行的，这也就是为什么采用 _ github.com/go-sql-driver/mysql 这种方式引入驱动包。第二个参数是 DSN（数据源名称），这个是和具体驱动相关的， database/sql 包并没有规定，具体书写方式参见驱动文档。 连接池的工作原理 获取 DB 对象后，连接池是空的，第一个连接在需要的时候才会创建： 1 2 3 4 5 6 db, _ := sql.Open( \"mysql\" , \"root:@tcp(localhost:3306)/test?charset=utf8\" ) fmt.Println( \"please exec show processlist\" ) time.Sleep( 10 * time.Second) fmt.Println( \"please exec show processlist again\" ) db.Ping() time.Sleep( 10 * time.Second) 在 Ping 执行之前和之后， show processlist 多了一条记录，即多了一个连接， Command 列是 Sleep 。 连接池的工作方式：当调用一个函数，需要访问数据库时，该函数会请求从连接池中获取一个连接，如果连接池中存在一个空闲连接，它会将该空闲连接给 该函数；否则，会打开一个新的连接。当该函数结束时，该连接要么返回给连接池，要么传递给某个需要该连接的对象，知道该对象完成时，连接才会返回给连 接池。相关方法的处理说明（假设 sql.DB 的对象是 db ）： db.Ping() 会将连接立马返回给连接池。 db.Exec() 会将连接立马返回给连接池，但是它返回的 Result 对象会引用该连接，所以，之后可能会再次被使用。 db.Query() 会传递连接给 sql.Rows 对象，直到完全遍历了所有的行或 Rows 的 Close 方法被调用了，连接才会返回给连接池。 db.QueryRow() 会传递连接给 sql.Row 对象，当该对象的 Scan 方法被调用时，连接会返回给连接池。 db.Begin() 会传递连接给 sql.Tx 对象，当该对象的 Commit 或 Rollback 方法被调用时，该连接会返回给连接池。 大部分时候，我们不需要关心连接不释放问题，它们会自动返回给连接池，只有 Query 方法有点特殊。 注意：如果某个连接有问题（broken connection)，database/sql 内部会进行 最多 10 次 的重试，从连接池中获取 或新开一个连接来服务，因此，你的代码中不需要重试的逻辑。 控制连接池 Go1.2.1 之前，没法控制连接池，Go1.2.1 之后，提供了两个方法来控制连接池。 db.SetMaxOpenConns(n int) 设置连接池中最多保存打开多少个数据库连接。注意，它包括在使用的和空闲的。如果某个方法调用需要一个连接， 但连接池中没有空闲的可用，且打开的连接数达到了该方法设置的最大值，该方法调用将堵塞。默认限制是 0，表示最大打开数没有限制。 db.SetMaxIdleConns(n int) 设置连接池中能够保持的最大空闲连接的数量。 默认值是 2 验证 MaxIdleConns 是 2： 1 2 3 4 5 6 7 8 9 10 11 12 db, _ := sql.Open( \"mysql\" , \"root:@tcp(localhost:3306)/test?charset=utf8\" ) // 去掉注释，可以看看相应的空闲连接是不是变化了 // db.SetMaxIdleConns(3) for i := 0 ; i  10 ; i++  \t go func ()  \t\tdb.Ping() \t()  time.Sleep( 20 * time.Second) 通过 show processlist 命令，可以看到有两个是 Sleep 的连接。"},"standards/database/sql.html#sql":{"title":"sql","path":"\\golang-learn\\standards\\database\\sql.html#sql","body":"database/sql &#x63D0;&#x4F9B;&#x4E86;&#x64CD;&#x4F5C; SQL/SQL-Like &#x6570;&#x636E;&#x5E93;&#x7684;&#x901A;&#x7528;&#x63A5;&#x53E3;&#xFF0C;&#x4F46; Go &#x6807;&#x51C6;&#x5E93;&#x5E76;&#x6CA1;&#x6709;&#x63D0;&#x4F9B;&#x5177;&#x4F53;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x9700;&#x8981;&#x7ED3;&#x5408;&#x7B2C;&#x4E09;&#x65B9;&#x7684;&#x9A71;&#x52A8;&#x6765;&#x4F7F;&#x7528;&#x8BE5;&#x63A5;&#x53E3;&#x3002; &#x4F8B;&#x5982; mysql &#x7684;&#x9A71;&#x52A8;&#xFF1A; github.com/go-sql-driver/mysql &#x3002;"},"standards/database/sql.html#类型":{"title":"&#x7C7B;&#x578B;","path":"\\golang-learn\\standards\\database\\sql.html#类型","body":"database/sql &#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;&#x7C7B;&#x578B;&#xFF1A; sql.DB &#x7C7B;&#x578B;&#x4EE3;&#x8868;&#x4E86;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x3002;&#x5B83;&#x5E76; &#x4E0D;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x5230;&#x6570;&#x636E;&#x5E93;&#x7684;&#x5177;&#x4F53;&#x8FDE;&#x63A5;&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x4E2A;&#x80FD;&#x64CD;&#x4F5C;&#x7684;&#x6570;&#x636E;&#x5E93;&#x5BF9;&#x8C61; &#xFF0C;&#x5177;&#x4F53;&#x7684;&#x8FDE;&#x63A5;&#x5728;&#x5185;&#x90E8;&#x901A;&#x8FC7;&#x8FDE;&#x63A5;&#x6C60;&#x6765;&#x7BA1;&#x7406;&#xFF0C; &#x5BF9;&#x5916;&#x4E0D;&#x66B4;&#x9732;&#x3002; sql.Rows &#x3001; sql.Row &#x548C; sql.Result &#xFF0C;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x83B7;&#x53D6;&#x591A;&#x4E2A;&#x591A;&#x884C;&#x7ED3;&#x679C;&#x3001;&#x4E00;&#x884C;&#x7ED3;&#x679C;&#x548C;&#x4FEE;&#x6539;&#x6570;&#x636E;&#x5E93;&#x5F71;&#x54CD;&#x7684;&#x884C;&#x6570;&#xFF08;&#x6216;&#x5176;&#x8FD4;&#x56DE; last insert id &#xFF09;&#x3002; sql.Stmt &#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x8BED;&#x53E5;&#xFF0C;&#x5982;&#xFF1A;DDL&#x3001;DML &#x7B49;&#x3002; sql.Tx &#x4EE3;&#x8868;&#x5E26;&#x6709;&#x7279;&#x5B9A;&#x5C5E;&#x6027;&#x7684;&#x4E00;&#x4E2A;&#x4E8B;&#x52A1;&#x3002;"},"standards/database/sql.html#sql-DB-的使用":{"title":"sql.DB &#x7684;&#x4F7F;&#x7528;","path":"\\golang-learn\\standards\\database\\sql.html#sql-DB-的使用","body":"sql.DB &#x662F;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x53E5;&#x67C4;&#xFF0C;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x5177;&#x6709;&#x96F6;&#x5230;&#x591A;&#x4E2A;&#x5E95;&#x5C42;&#x8FDE;&#x63A5;&#x7684;&#x8FDE;&#x63A5;&#x6C60;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x5B89;&#x5168;&#x7684;&#x88AB;&#x591A;&#x4E2A; goroutine &#x540C;&#x65F6;&#x4F7F;&#x7528;&#x3002; sql &#x5305;&#x4F1A;&#x81EA;&#x52A8;&#x521B;&#x5EFA;&#x548C;&#x91CA;&#x653E;&#x8FDE;&#x63A5;&#xFF1B;&#x5B83;&#x4E5F;&#x4F1A;&#x7EF4;&#x62A4;&#x4E00;&#x4E2A;&#x95F2;&#x7F6E;&#x8FDE;&#x63A5;&#x7684;&#x8FDE;&#x63A5;&#x6C60;&#x3002;&#x5982;&#x679C;&#x6570;&#x636E;&#x5E93;&#x5177;&#x6709;&#x5355;&#x8FDE;&#x63A5;&#x72B6;&#x6001;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x8BE5;&#x72B6;&#x6001;&#x53EA;&#x6709;&#x5728;&#x4E8B;&#x52A1;&#x4E2D;&#x88AB;&#x89C2;&#x5BDF;&#x65F6;&#x624D;&#x53EF;&#x4FE1;&#x3002; &#x4E00;&#x65E6;&#x8C03;&#x7528;&#x4E86; BD.Begin &#xFF0C;&#x8FD4;&#x56DE;&#x7684; Tx &#x4F1A;&#x7ED1;&#x5B9A;&#x5230;&#x5355;&#x4E2A;&#x8FDE;&#x63A5;&#x3002;&#x5F53;&#x8C03;&#x7528;&#x4E8B;&#x52A1; Tx &#x7684; Commit &#x6216; Rollback &#x540E;&#xFF0C;&#x8BE5;&#x4E8B;&#x52A1;&#x4F7F;&#x7528;&#x7684;&#x8FDE;&#x63A5;&#x4F1A;&#x5F52;&#x8FD8;&#x5230; DB &#x7684;&#x95F2; &#x7F6E;&#x8FDE;&#x63A5;&#x6C60;&#x4E2D;&#x3002;&#x8FDE;&#x63A5;&#x6C60;&#x7684;&#x5927;&#x5C0F;&#x53EF;&#x4EE5;&#x7528; SetMaxIdleConns &#x65B9;&#x6CD5;&#x63A7;&#x5236;&#x3002; &#x7531;&#x4E8E; DB &#x5E76;&#x975E;&#x4E00;&#x4E2A;&#x5B9E;&#x9645;&#x7684;&#x5230;&#x6570;&#x636E;&#x5E93;&#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x800C;&#x4E14;&#x53EF;&#x4EE5;&#x88AB;&#x591A;&#x4E2A; goroutine &#x5E76;&#x53D1;&#x4F7F;&#x7528;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x7A0B;&#x5E8F;&#x4E2D;&#x53EA;&#x9700;&#x8981;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x5168;&#x5C40;&#x7684;&#x5B9E;&#x4F8B;&#x5373;&#x53EF;&#xFF1A; 1 2 3 4 5 db, err := sql.Open( mysql , root:@tcp(localhost:3306)/test?charset=utf8 ) if err != nil { panic (err) } defer db.Close() &#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C; defer db.Close() &#x53EF;&#x4EE5;&#x4E0D;&#x8C03;&#x7528;&#xFF0C;&#x56E0;&#x4E3A; DB &#x53E5;&#x67C4;&#x901A;&#x5E38;&#x88AB;&#x591A;&#x4E2A; goroutine &#x5171;&#x4EAB;&#xFF0C;&#x5E76;&#x957F;&#x671F;&#x6D3B;&#x8DC3;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x786E;&#x5B9A; DB &#x53EA;&#x4F1A;&#x88AB;&#x4F7F;&#x7528;&#x4E00;&#x6B21;&#xFF0C; &#x4E4B;&#x540E;&#x4E0D;&#x4F1A;&#x4F7F;&#x7528;&#x4E86;&#xFF0C;&#x5E94;&#x8BE5;&#x8C03;&#x7528; Close &#x3002; &#x6240;&#x4EE5;&#xFF0C;&#x5B9E;&#x9645;&#x5E94;&#x7528;&#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x5728;&#x4E00;&#x4E2A; go &#x6587;&#x4EF6;&#x4E2D;&#x7684; init &#x51FD;&#x6570;&#x4E2D;&#x8C03;&#x7528; sql.Open &#x521D;&#x59CB;&#x5316;&#x5168;&#x5C40;&#x7684; sql.DB &#x5BF9;&#x8C61;&#xFF0C;&#x4F9B;&#x7A0B;&#x5E8F;&#x4E2D;&#x6240;&#x6709;&#x9700;&#x8981;&#x8FDB; &#x884C;&#x6570;&#x636E;&#x5E93;&#x64CD;&#x4F5C;&#x7684;&#x5730;&#x65B9;&#x4F7F;&#x7528;&#x3002; &#x524D;&#x9762;&#x8BF4;&#x8FC7;&#xFF0C; sql.DB &#x5E76;&#x4E0D;&#x662F;&#x5B9E;&#x9645;&#x7684;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C; sql.Open &#x51FD;&#x6570;&#x5E76;&#x6CA1;&#x6709;&#x8FDB;&#x884C;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x3002; &#x4F8B;&#x5982;&#xFF1A; db, err := sql.Open(mysql, root:@tcp23(localhost233:3306)/test?charset=utf8) &#x3002;&#x867D;&#x7136;&#x8FD9;&#x91CC;&#x7684; dsn &#x662F;&#x9519;&#x8BEF;&#x7684;&#xFF0C; &#x4F46;&#x4F9D;&#x7136; err == nil &#xFF0C;&#x53EA;&#x6709;&#x5728;&#x5B9E;&#x9645;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x5E93;&#xFF08;&#x67E5;&#x8BE2;&#x3001;&#x66F4;&#x65B0;&#x7B49;&#xFF09;&#x6216;&#x8C03;&#x7528; Ping &#x65F6;&#x624D;&#x4F1A;&#x62A5;&#x9519;&#x3002; &#x5173;&#x4E8E; Open &#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x662F;&#x9A71;&#x52A8;&#x540D;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x6DF7;&#x6DC6;&#xFF0C;&#x4E00;&#x822C;&#x548C;&#x9A71;&#x52A8;&#x5305;&#x540D;&#x4E00;&#x81F4;&#xFF0C;&#x5728;&#x9A71;&#x52A8;&#x5B9E;&#x73B0;&#x4E2D;&#xFF0C;&#x4F1A;&#x6709;&#x7C7B;&#x4F3C;&#x8FD9;&#x6837;&#x7684;&#x4EE3;&#x7801;&#xFF1A; 1 2 3 func init () { sql.Register( mysql , &amp;MySQLDriver{}) } &#x5176;&#x4E2D; mysql &#x5373;&#x662F;&#x6CE8;&#x518C;&#x7684;&#x9A71;&#x52A8;&#x540D;&#x3002;&#x7531;&#x4E8E;&#x6CE8;&#x518C;&#x9A71;&#x52A8;&#x662F;&#x5728; init &#x51FD;&#x6570;&#x4E2D;&#x8FDB;&#x884C;&#x7684;&#xFF0C;&#x8FD9;&#x4E5F;&#x5C31;&#x662F;&#x4E3A;&#x4EC0;&#x4E48;&#x91C7;&#x7528; _ github.com/go-sql-driver/mysql &#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x5F15;&#x5165;&#x9A71;&#x52A8;&#x5305;&#x3002;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x662F; DSN&#xFF08;&#x6570;&#x636E;&#x6E90;&#x540D;&#x79F0;&#xFF09;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x548C;&#x5177;&#x4F53;&#x9A71;&#x52A8;&#x76F8;&#x5173;&#x7684;&#xFF0C; database/sql &#x5305;&#x5E76;&#x6CA1;&#x6709;&#x89C4;&#x5B9A;&#xFF0C;&#x5177;&#x4F53;&#x4E66;&#x5199;&#x65B9;&#x5F0F;&#x53C2;&#x89C1;&#x9A71;&#x52A8;&#x6587;&#x6863;&#x3002; &#x8FDE;&#x63A5;&#x6C60;&#x7684;&#x5DE5;&#x4F5C;&#x539F;&#x7406; &#x83B7;&#x53D6; DB &#x5BF9;&#x8C61;&#x540E;&#xFF0C;&#x8FDE;&#x63A5;&#x6C60;&#x662F;&#x7A7A;&#x7684;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#x5728;&#x9700;&#x8981;&#x7684;&#x65F6;&#x5019;&#x624D;&#x4F1A;&#x521B;&#x5EFA;&#xFF1A; 1 2 3 4 5 6 db, _ := sql.Open( mysql , root:@tcp(localhost:3306)/test?charset=utf8 ) fmt.Println( please exec show processlist ) time.Sleep( 10 * time.Second) fmt.Println( please exec show processlist again ) db.Ping() time.Sleep( 10 * time.Second) &#x5728; Ping &#x6267;&#x884C;&#x4E4B;&#x524D;&#x548C;&#x4E4B;&#x540E;&#xFF0C; show processlist &#x591A;&#x4E86;&#x4E00;&#x6761;&#x8BB0;&#x5F55;&#xFF0C;&#x5373;&#x591A;&#x4E86;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#xFF0C; Command &#x5217;&#x662F; Sleep &#x3002; &#x8FDE;&#x63A5;&#x6C60;&#x7684;&#x5DE5;&#x4F5C;&#x65B9;&#x5F0F;&#xFF1A;&#x5F53;&#x8C03;&#x7528;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x9700;&#x8981;&#x8BBF;&#x95EE;&#x6570;&#x636E;&#x5E93;&#x65F6;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x8BF7;&#x6C42;&#x4ECE;&#x8FDE;&#x63A5;&#x6C60;&#x4E2D;&#x83B7;&#x53D6;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#xFF0C;&#x5982;&#x679C;&#x8FDE;&#x63A5;&#x6C60;&#x4E2D;&#x5B58;&#x5728;&#x4E00;&#x4E2A;&#x7A7A;&#x95F2;&#x8FDE;&#x63A5;&#xFF0C;&#x5B83;&#x4F1A;&#x5C06;&#x8BE5;&#x7A7A;&#x95F2;&#x8FDE;&#x63A5;&#x7ED9; &#x8BE5;&#x51FD;&#x6570;&#xFF1B;&#x5426;&#x5219;&#xFF0C;&#x4F1A;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x8FDE;&#x63A5;&#x3002;&#x5F53;&#x8BE5;&#x51FD;&#x6570;&#x7ED3;&#x675F;&#x65F6;&#xFF0C;&#x8BE5;&#x8FDE;&#x63A5;&#x8981;&#x4E48;&#x8FD4;&#x56DE;&#x7ED9;&#x8FDE;&#x63A5;&#x6C60;&#xFF0C;&#x8981;&#x4E48;&#x4F20;&#x9012;&#x7ED9;&#x67D0;&#x4E2A;&#x9700;&#x8981;&#x8BE5;&#x8FDE;&#x63A5;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x77E5;&#x9053;&#x8BE5;&#x5BF9;&#x8C61;&#x5B8C;&#x6210;&#x65F6;&#xFF0C;&#x8FDE;&#x63A5;&#x624D;&#x4F1A;&#x8FD4;&#x56DE;&#x7ED9;&#x8FDE; &#x63A5;&#x6C60;&#x3002;&#x76F8;&#x5173;&#x65B9;&#x6CD5;&#x7684;&#x5904;&#x7406;&#x8BF4;&#x660E;&#xFF08;&#x5047;&#x8BBE; sql.DB &#x7684;&#x5BF9;&#x8C61;&#x662F; db &#xFF09;&#xFF1A; db.Ping() &#x4F1A;&#x5C06;&#x8FDE;&#x63A5;&#x7ACB;&#x9A6C;&#x8FD4;&#x56DE;&#x7ED9;&#x8FDE;&#x63A5;&#x6C60;&#x3002; db.Exec() &#x4F1A;&#x5C06;&#x8FDE;&#x63A5;&#x7ACB;&#x9A6C;&#x8FD4;&#x56DE;&#x7ED9;&#x8FDE;&#x63A5;&#x6C60;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x8FD4;&#x56DE;&#x7684; Result &#x5BF9;&#x8C61;&#x4F1A;&#x5F15;&#x7528;&#x8BE5;&#x8FDE;&#x63A5;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x4E4B;&#x540E;&#x53EF;&#x80FD;&#x4F1A;&#x518D;&#x6B21;&#x88AB;&#x4F7F;&#x7528;&#x3002; db.Query() &#x4F1A;&#x4F20;&#x9012;&#x8FDE;&#x63A5;&#x7ED9; sql.Rows &#x5BF9;&#x8C61;&#xFF0C;&#x76F4;&#x5230;&#x5B8C;&#x5168;&#x904D;&#x5386;&#x4E86;&#x6240;&#x6709;&#x7684;&#x884C;&#x6216; Rows &#x7684; Close &#x65B9;&#x6CD5;&#x88AB;&#x8C03;&#x7528;&#x4E86;&#xFF0C;&#x8FDE;&#x63A5;&#x624D;&#x4F1A;&#x8FD4;&#x56DE;&#x7ED9;&#x8FDE;&#x63A5;&#x6C60;&#x3002; db.QueryRow() &#x4F1A;&#x4F20;&#x9012;&#x8FDE;&#x63A5;&#x7ED9; sql.Row &#x5BF9;&#x8C61;&#xFF0C;&#x5F53;&#x8BE5;&#x5BF9;&#x8C61;&#x7684; Scan &#x65B9;&#x6CD5;&#x88AB;&#x8C03;&#x7528;&#x65F6;&#xFF0C;&#x8FDE;&#x63A5;&#x4F1A;&#x8FD4;&#x56DE;&#x7ED9;&#x8FDE;&#x63A5;&#x6C60;&#x3002; db.Begin() &#x4F1A;&#x4F20;&#x9012;&#x8FDE;&#x63A5;&#x7ED9; sql.Tx &#x5BF9;&#x8C61;&#xFF0C;&#x5F53;&#x8BE5;&#x5BF9;&#x8C61;&#x7684; Commit &#x6216; Rollback &#x65B9;&#x6CD5;&#x88AB;&#x8C03;&#x7528;&#x65F6;&#xFF0C;&#x8BE5;&#x8FDE;&#x63A5;&#x4F1A;&#x8FD4;&#x56DE;&#x7ED9;&#x8FDE;&#x63A5;&#x6C60;&#x3002; &#x5927;&#x90E8;&#x5206;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x5FC3;&#x8FDE;&#x63A5;&#x4E0D;&#x91CA;&#x653E;&#x95EE;&#x9898;&#xFF0C;&#x5B83;&#x4EEC;&#x4F1A;&#x81EA;&#x52A8;&#x8FD4;&#x56DE;&#x7ED9;&#x8FDE;&#x63A5;&#x6C60;&#xFF0C;&#x53EA;&#x6709; Query &#x65B9;&#x6CD5;&#x6709;&#x70B9;&#x7279;&#x6B8A;&#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x5982;&#x679C;&#x67D0;&#x4E2A;&#x8FDE;&#x63A5;&#x6709;&#x95EE;&#x9898;&#xFF08;broken connection)&#xFF0C;database/sql &#x5185;&#x90E8;&#x4F1A;&#x8FDB;&#x884C; &#x6700;&#x591A; 10 &#x6B21; &#x7684;&#x91CD;&#x8BD5;&#xFF0C;&#x4ECE;&#x8FDE;&#x63A5;&#x6C60;&#x4E2D;&#x83B7;&#x53D6; &#x6216;&#x65B0;&#x5F00;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#x6765;&#x670D;&#x52A1;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x4E0D;&#x9700;&#x8981;&#x91CD;&#x8BD5;&#x7684;&#x903B;&#x8F91;&#x3002; &#x63A7;&#x5236;&#x8FDE;&#x63A5;&#x6C60; Go1.2.1 &#x4E4B;&#x524D;&#xFF0C;&#x6CA1;&#x6CD5;&#x63A7;&#x5236;&#x8FDE;&#x63A5;&#x6C60;&#xFF0C;Go1.2.1 &#x4E4B;&#x540E;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x6765;&#x63A7;&#x5236;&#x8FDE;&#x63A5;&#x6C60;&#x3002; db.SetMaxOpenConns(n int) &#x8BBE;&#x7F6E;&#x8FDE;&#x63A5;&#x6C60;&#x4E2D;&#x6700;&#x591A;&#x4FDD;&#x5B58;&#x6253;&#x5F00;&#x591A;&#x5C11;&#x4E2A;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x5B83;&#x5305;&#x62EC;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x548C;&#x7A7A;&#x95F2;&#x7684;&#x3002;&#x5982;&#x679C;&#x67D0;&#x4E2A;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x8FDE;&#x63A5;&#xFF0C; &#x4F46;&#x8FDE;&#x63A5;&#x6C60;&#x4E2D;&#x6CA1;&#x6709;&#x7A7A;&#x95F2;&#x7684;&#x53EF;&#x7528;&#xFF0C;&#x4E14;&#x6253;&#x5F00;&#x7684;&#x8FDE;&#x63A5;&#x6570;&#x8FBE;&#x5230;&#x4E86;&#x8BE5;&#x65B9;&#x6CD5;&#x8BBE;&#x7F6E;&#x7684;&#x6700;&#x5927;&#x503C;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x5C06;&#x5835;&#x585E;&#x3002;&#x9ED8;&#x8BA4;&#x9650;&#x5236;&#x662F; 0&#xFF0C;&#x8868;&#x793A;&#x6700;&#x5927;&#x6253;&#x5F00;&#x6570;&#x6CA1;&#x6709;&#x9650;&#x5236;&#x3002; db.SetMaxIdleConns(n int) &#x8BBE;&#x7F6E;&#x8FDE;&#x63A5;&#x6C60;&#x4E2D;&#x80FD;&#x591F;&#x4FDD;&#x6301;&#x7684;&#x6700;&#x5927;&#x7A7A;&#x95F2;&#x8FDE;&#x63A5;&#x7684;&#x6570;&#x91CF;&#x3002; &#x9ED8;&#x8BA4;&#x503C;&#x662F; 2 &#x9A8C;&#x8BC1; MaxIdleConns &#x662F; 2&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 db, _ := sql.Open( mysql , root:@tcp(localhost:3306)/test?charset=utf8 ) // &#x53BB;&#x6389;&#x6CE8;&#x91CA;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x770B;&#x76F8;&#x5E94;&#x7684;&#x7A7A;&#x95F2;&#x8FDE;&#x63A5;&#x662F;&#x4E0D;&#x662F;&#x53D8;&#x5316;&#x4E86; // db.SetMaxIdleConns(3) for i := 0 ; i  10 ; i++ { \t go func () { \t\tdb.Ping() \t}() } time.Sleep( 20 * time.Second) &#x901A;&#x8FC7; show processlist &#x547D;&#x4EE4;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6709;&#x4E24;&#x4E2A;&#x662F; Sleep &#x7684;&#x8FDE;&#x63A5;&#x3002;"},"standards/io/fmt.html":{"title":"fmt 包","path":"\\golang-learn\\standards\\io\\fmt.html","body":"fmt 包 fmt 包实现了格式化 I/O 函数，有关格式化输入输出的方法有两大类： Scan 和 Print 。 print.go 文件中定义了如下函数： Print 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 普通输出，不带换行符 func Print (a ... interface ) (n int , err error) func Fprint (w io.Writer, a ... interface ) (n int , err error) func Sprint (a ... interface ) string // 输出内容时会加上换行符 func Println (a ... interface ) (n int , err error) func Fprintln (w io.Writer, a ... interface ) (n int , err error) func Sprintln (a ... interface ) string // 按照指定格式化文本输出内容 func Printf (format string , a ... interface ) (n int , err error) func Fprintf (w io.Writer, format string , a ... interface ) (n int , err error) func Sprintf (format string , a ... interface ) string 如果前缀是 “F”, 则指定了 io.Writer 如果前缀是 “S”, 则是输出到字符串 1 2 3 4 5 6 7 8 9 10 11 12 // 输出内容到标准输出 os.Stdout Print Printf Println // 输出内容到指定的 io.Writer Fprint Fprintf Fprintln // 输出内容到字符串，并返回 Sprint Sprintf Sprintln Scan scan.go 文件中定义了如下函数： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 读取内容时不关注换行 func Scan (a ... interface ) (n int , err error) func Fscan (r io.Reader, a ... interface ) (n int , err error) func Sscan (str string , a ... interface ) (n int , err error) // 读取到换行时停止，并要求一次提供一行所有条目 func Scanln (a ... interface ) (n int , err error) func Fscanln (r io.Reader, a ... interface ) (n int , err error) func Sscanln (str string , a ... interface ) (n int , err error) // 根据格式化文本读取 func Scanf (format string , a ... interface ) (n int , err error) func Fscanf (r io.Reader, format string , a ... interface ) (n int , err error) func Sscanf (str string , format string , a ... interface ) (n int , err error) 如果前缀是 “F”, 则指定了 io.Reader 如果前缀是 “S”, 则是从字符串读取 1 2 3 4 5 6 7 8 9 10 11 12 // 从标准输入os.Stdin读取文本 Scan Scanf Scanln // 从指定的 io.Reader 接口读取文本 Fscan Fscanf Fscanln // 从一个参数字符串读取文本 Sscan Sscanf Sscanln 占位符 普通占位符 占位符 说明 举例 输出%v 相应值的默认格式。 Printf(%v, site)，Printf(%+v, site) {studygolang}，{Name:studygolang} 在打印结构体时，“加号”标记（%+v）会添加字段名%#v 相应值的 Go 语法表示 Printf(#v, site) main.Website{Name:studygolang}%T 相应值的类型的 Go 语法表示 Printf(%T, site) main.Website%% 字面上的百分号，并非值的占位符 Printf(%%) % 布尔占位符 占位符 说明 举例 输出%t 单词 true 或 false。 Printf(%t, true) true 整数占位符 占位符 说明 举例 输出%b 二进制表示 Printf(%b, 5) 101%c 相应Unicode码点所表示的字符 Printf(%c, 0x4E2D) 中%d 十进制表示 Printf(%d, 0x12) 18%o 八进制表示 Printf(%d, 10) 12%q 单引号围绕的字符字面值，由 Go 语法安全地转义 Printf(%q, 0x4E2D) &apos;中&apos;%x 十六进制表示，字母形式为小写 a-f Printf(%x, 13) d%X 十六进制表示，字母形式为大写 A-F Printf(%x, 13) D%U Unicode格式：U+1234，等同于 U+%04X Printf(%U, 0x4E2D) U+4E2D 浮点数和复数的组成部分（实部和虚部） 占位符 说明 举例 输出%b 无小数部分的，指数为二的幂的科学计数法，与 strconv.FormatFloat 的 &apos;b&apos; 转换格式一致。例如 -123456p-78%e 科学计数法，例如 -1234.456e+78 Printf(%e, 10.2) 1.020000e+01%E 科学计数法，例如 -1234.456E+78 Printf(%e, 10.2) 1.020000E+01%f 有小数点而无指数，例如 123.456 Printf(%f, 10.2) 10.200000%g 根据情况选择 %e 或 %f 以产生更紧凑的（无末尾的0）输出 Printf(%g, 10.20) 10.2%G 根据情况选择 %E 或 %f 以产生更紧凑的（无末尾的0）输出 Printf(%G, 10.20+2i) (10.2+2i) 字符串与字节切片 占位符 说明 举例 输出%s 输出字符串表示（string 类型或 []byte) Printf(%s, []byte (Hello world)) Hello world%q 双引号围绕的字符串，由 Go 语法安全地转义 Printf(%q, Hello world) Hello world%x 十六进制，小写字母，每字节两个字符 Printf(%x, golang) 676f6c616e67%X 十六进制，大写字母，每字节两个字符 Printf(%X, golang) 676F6C616E67 指针 占位符 说明 举例 输出%p 十六进制表示，前缀 0x Printf(%p, &amp;site) 0x4f57f0 其它标记 占位符 说明 举例 输出+ 总打印数值的正负号；对于%q（%+q）保证只输出 ASCII 编码的字符。 Printf(%+q, 中文) \\u4e2d\\u6587- 在右侧而非左侧填充空格（左对齐该区域）# 备用格式：为八进制添加前导 0（%#o），为十六进制添加前导 0x（%#x）或 Printf(%#U, &apos;中&apos;) U+4E2D &apos;中&apos; 0X（%#X），为 %p（%#p）去掉前导 0x；如果可能的话，%q（%#q）会打印原始 （即反引号围绕的）字符串；如果是可打印字符，%U（%#U）会写出该字符的 Unicode 编码形式（如字符 x 会被打印成 U+0078 &apos;x&apos;）。&apos; &apos; （空格）为数值中省略的正负号留出空白（% d）； 以十六进制（% x, % X）打印字符串或切片时，在字节之间用空格隔开0 填充前导的0而非空格；对于数字，这会将填充移到正负号之后 示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 type user struct  \tname string  func main ()  \tu := user \"tang\"  \tfmt.Printf( \"% + v\\n\" , u) // 格式化输出结构 name: tang \tfmt.Printf( \"%#v\\n\" , u) // 输出值的 Go 语言表示方法 main.username: \"tang\" \tfmt.Printf( \"%T\\n\" , u) // 输出值的类型的 Go 语言表示 main.user \tfmt.Printf( \"%t\\n\" , true ) // 输出值的 true 或 false true \tfmt.Printf( \"%b\\n\" , 1024 ) // 二进制表示 10000000000 \tfmt.Printf( \"%c\\n\" , 11111111 ) // 数值对应的 Unicode 编码字符 \tfmt.Printf( \"%d\\n\" , 10 ) // 十进制表示 10 \tfmt.Printf( \"%o\\n\" , 8 ) // 八进制表示 10 \tfmt.Printf( \"%q\\n\" , 22 ) // 转化为十六进制并附上单引号 '\\x16' \tfmt.Printf( \"%x\\n\" , 1223 ) // 十六进制表示，用 a-f 表示 4c7 \tfmt.Printf( \"%X\\n\" , 1223 ) // 十六进制表示，用 A-F 表示 4c7 \tfmt.Printf( \"%U\\n\" , 1233 ) // Unicode 表示 \tfmt.Printf( \"%b\\n\" , 12.34 ) // 无小数部分，两位指数的科学计数法 6946802425218990p-49 \tfmt.Printf( \"%e\\n\" , 12.345 ) // 科学计数法，e 表示 1.234500e+01 \tfmt.Printf( \"%E\\n\" , 12.34455 ) // 科学计数法，E 表示 1.234455E+01 \tfmt.Printf( \"%f\\n\" , 12.3456 ) // 有小数部分，无指数部分 12.345600 \tfmt.Printf( \"%g\\n\" , 12.3456 ) // 根据实际情况采用 %e 或 %f 输出 12.3456 \tfmt.Printf( \"%G\\n\" , 12.3456 ) // 根据实际情况采用 %E 或 %f 输出 12.3456 \tfmt.Printf( \"%s\\n\" , \"wqdew\" ) // 直接输出字符串或者 []byte wqdew \tfmt.Printf( \"%q\\n\" , \"dedede\" ) // 双引号括起来的字符串 \"dedede\" \tfmt.Printf( \"%x\\n\" , \"abczxc\" ) // 每个字节用两字节十六进制表示，a-f 表示 6162637a7863 \tfmt.Printf( \"%X\\n\" , \"asdzxc\" ) // 每个字节用两字节十六进制表示，A-F 表示 6173647A7863 \tfmt.Printf( \"%p\\n\" , 0x123 ) // 0x 开头的十六进制数表示 "},"standards/io/fmt.html#fmt-包":{"title":"fmt &#x5305;","path":"\\golang-learn\\standards\\io\\fmt.html#fmt-包","body":"fmt &#x5305;&#x5B9E;&#x73B0;&#x4E86;&#x683C;&#x5F0F;&#x5316; I/O &#x51FD;&#x6570;&#xFF0C;&#x6709;&#x5173;&#x683C;&#x5F0F;&#x5316;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x7684;&#x65B9;&#x6CD5;&#x6709;&#x4E24;&#x5927;&#x7C7B;&#xFF1A; Scan &#x548C; Print &#x3002; print.go &#x6587;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#x4E86;&#x5982;&#x4E0B;&#x51FD;&#x6570;&#xFF1A;"},"standards/io/fmt.html#Print":{"title":"Print","path":"\\golang-learn\\standards\\io\\fmt.html#Print","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 // &#x666E;&#x901A;&#x8F93;&#x51FA;&#xFF0C;&#x4E0D;&#x5E26;&#x6362;&#x884C;&#x7B26; func Print (a ... interface {}) (n int , err error) func Fprint (w io.Writer, a ... interface {}) (n int , err error) func Sprint (a ... interface {}) string // &#x8F93;&#x51FA;&#x5185;&#x5BB9;&#x65F6;&#x4F1A;&#x52A0;&#x4E0A;&#x6362;&#x884C;&#x7B26; func Println (a ... interface {}) (n int , err error) func Fprintln (w io.Writer, a ... interface {}) (n int , err error) func Sprintln (a ... interface {}) string // &#x6309;&#x7167;&#x6307;&#x5B9A;&#x683C;&#x5F0F;&#x5316;&#x6587;&#x672C;&#x8F93;&#x51FA;&#x5185;&#x5BB9; func Printf (format string , a ... interface {}) (n int , err error) func Fprintf (w io.Writer, format string , a ... interface {}) (n int , err error) func Sprintf (format string , a ... interface {}) string &#x5982;&#x679C;&#x524D;&#x7F00;&#x662F; &#x201C;F&#x201D;, &#x5219;&#x6307;&#x5B9A;&#x4E86; io.Writer &#x5982;&#x679C;&#x524D;&#x7F00;&#x662F; &#x201C;S&#x201D;, &#x5219;&#x662F;&#x8F93;&#x51FA;&#x5230;&#x5B57;&#x7B26;&#x4E32; 1 2 3 4 5 6 7 8 9 10 11 12 // &#x8F93;&#x51FA;&#x5185;&#x5BB9;&#x5230;&#x6807;&#x51C6;&#x8F93;&#x51FA; os.Stdout Print Printf Println // &#x8F93;&#x51FA;&#x5185;&#x5BB9;&#x5230;&#x6307;&#x5B9A;&#x7684; io.Writer Fprint Fprintf Fprintln // &#x8F93;&#x51FA;&#x5185;&#x5BB9;&#x5230;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE; Sprint Sprintf Sprintln"},"standards/io/fmt.html#Scan":{"title":"Scan","path":"\\golang-learn\\standards\\io\\fmt.html#Scan","body":"scan.go &#x6587;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#x4E86;&#x5982;&#x4E0B;&#x51FD;&#x6570;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // &#x8BFB;&#x53D6;&#x5185;&#x5BB9;&#x65F6;&#x4E0D;&#x5173;&#x6CE8;&#x6362;&#x884C; func Scan (a ... interface {}) (n int , err error) func Fscan (r io.Reader, a ... interface {}) (n int , err error) func Sscan (str string , a ... interface {}) (n int , err error) // &#x8BFB;&#x53D6;&#x5230;&#x6362;&#x884C;&#x65F6;&#x505C;&#x6B62;&#xFF0C;&#x5E76;&#x8981;&#x6C42;&#x4E00;&#x6B21;&#x63D0;&#x4F9B;&#x4E00;&#x884C;&#x6240;&#x6709;&#x6761;&#x76EE; func Scanln (a ... interface {}) (n int , err error) func Fscanln (r io.Reader, a ... interface {}) (n int , err error) func Sscanln (str string , a ... interface {}) (n int , err error) // &#x6839;&#x636E;&#x683C;&#x5F0F;&#x5316;&#x6587;&#x672C;&#x8BFB;&#x53D6; func Scanf (format string , a ... interface {}) (n int , err error) func Fscanf (r io.Reader, format string , a ... interface {}) (n int , err error) func Sscanf (str string , format string , a ... interface {}) (n int , err error) &#x5982;&#x679C;&#x524D;&#x7F00;&#x662F; &#x201C;F&#x201D;, &#x5219;&#x6307;&#x5B9A;&#x4E86; io.Reader &#x5982;&#x679C;&#x524D;&#x7F00;&#x662F; &#x201C;S&#x201D;, &#x5219;&#x662F;&#x4ECE;&#x5B57;&#x7B26;&#x4E32;&#x8BFB;&#x53D6; 1 2 3 4 5 6 7 8 9 10 11 12 // &#x4ECE;&#x6807;&#x51C6;&#x8F93;&#x5165;os.Stdin&#x8BFB;&#x53D6;&#x6587;&#x672C; Scan Scanf Scanln // &#x4ECE;&#x6307;&#x5B9A;&#x7684; io.Reader &#x63A5;&#x53E3;&#x8BFB;&#x53D6;&#x6587;&#x672C; Fscan Fscanf Fscanln // &#x4ECE;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5B57;&#x7B26;&#x4E32;&#x8BFB;&#x53D6;&#x6587;&#x672C; Sscan Sscanf Sscanln"},"standards/io/fmt.html#占位符":{"title":"&#x5360;&#x4F4D;&#x7B26;","path":"\\golang-learn\\standards\\io\\fmt.html#占位符","body":"&#x666E;&#x901A;&#x5360;&#x4F4D;&#x7B26; &#x5360;&#x4F4D;&#x7B26; &#x8BF4;&#x660E; &#x4E3E;&#x4F8B; &#x8F93;&#x51FA;%v &#x76F8;&#x5E94;&#x503C;&#x7684;&#x9ED8;&#x8BA4;&#x683C;&#x5F0F;&#x3002; Printf(%v, site)&#xFF0C;Printf(%+v, site) {studygolang}&#xFF0C;{Name:studygolang} &#x5728;&#x6253;&#x5370;&#x7ED3;&#x6784;&#x4F53;&#x65F6;&#xFF0C;&#x201C;&#x52A0;&#x53F7;&#x201D;&#x6807;&#x8BB0;&#xFF08;%+v&#xFF09;&#x4F1A;&#x6DFB;&#x52A0;&#x5B57;&#x6BB5;&#x540D;%#v &#x76F8;&#x5E94;&#x503C;&#x7684; Go &#x8BED;&#x6CD5;&#x8868;&#x793A; Printf(#v, site) main.Website{Name:studygolang}%T &#x76F8;&#x5E94;&#x503C;&#x7684;&#x7C7B;&#x578B;&#x7684; Go &#x8BED;&#x6CD5;&#x8868;&#x793A; Printf(%T, site) main.Website%% &#x5B57;&#x9762;&#x4E0A;&#x7684;&#x767E;&#x5206;&#x53F7;&#xFF0C;&#x5E76;&#x975E;&#x503C;&#x7684;&#x5360;&#x4F4D;&#x7B26; Printf(%%) % &#x5E03;&#x5C14;&#x5360;&#x4F4D;&#x7B26; &#x5360;&#x4F4D;&#x7B26; &#x8BF4;&#x660E; &#x4E3E;&#x4F8B; &#x8F93;&#x51FA;%t &#x5355;&#x8BCD; true &#x6216; false&#x3002; Printf(%t, true) true &#x6574;&#x6570;&#x5360;&#x4F4D;&#x7B26; &#x5360;&#x4F4D;&#x7B26; &#x8BF4;&#x660E; &#x4E3E;&#x4F8B; &#x8F93;&#x51FA;%b &#x4E8C;&#x8FDB;&#x5236;&#x8868;&#x793A; Printf(%b, 5) 101%c &#x76F8;&#x5E94;Unicode&#x7801;&#x70B9;&#x6240;&#x8868;&#x793A;&#x7684;&#x5B57;&#x7B26; Printf(%c, 0x4E2D) &#x4E2D;%d &#x5341;&#x8FDB;&#x5236;&#x8868;&#x793A; Printf(%d, 0x12) 18%o &#x516B;&#x8FDB;&#x5236;&#x8868;&#x793A; Printf(%d, 10) 12%q &#x5355;&#x5F15;&#x53F7;&#x56F4;&#x7ED5;&#x7684;&#x5B57;&#x7B26;&#x5B57;&#x9762;&#x503C;&#xFF0C;&#x7531; Go &#x8BED;&#x6CD5;&#x5B89;&#x5168;&#x5730;&#x8F6C;&#x4E49; Printf(%q, 0x4E2D) &apos;&#x4E2D;&apos;%x &#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A;&#xFF0C;&#x5B57;&#x6BCD;&#x5F62;&#x5F0F;&#x4E3A;&#x5C0F;&#x5199; a-f Printf(%x, 13) d%X &#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A;&#xFF0C;&#x5B57;&#x6BCD;&#x5F62;&#x5F0F;&#x4E3A;&#x5927;&#x5199; A-F Printf(%x, 13) D%U Unicode&#x683C;&#x5F0F;&#xFF1A;U+1234&#xFF0C;&#x7B49;&#x540C;&#x4E8E; U+%04X Printf(%U, 0x4E2D) U+4E2D &#x6D6E;&#x70B9;&#x6570;&#x548C;&#x590D;&#x6570;&#x7684;&#x7EC4;&#x6210;&#x90E8;&#x5206;&#xFF08;&#x5B9E;&#x90E8;&#x548C;&#x865A;&#x90E8;&#xFF09; &#x5360;&#x4F4D;&#x7B26; &#x8BF4;&#x660E; &#x4E3E;&#x4F8B; &#x8F93;&#x51FA;%b &#x65E0;&#x5C0F;&#x6570;&#x90E8;&#x5206;&#x7684;&#xFF0C;&#x6307;&#x6570;&#x4E3A;&#x4E8C;&#x7684;&#x5E42;&#x7684;&#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5;&#xFF0C;&#x4E0E; strconv.FormatFloat &#x7684; &apos;b&apos; &#x8F6C;&#x6362;&#x683C;&#x5F0F;&#x4E00;&#x81F4;&#x3002;&#x4F8B;&#x5982; -123456p-78%e &#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5;&#xFF0C;&#x4F8B;&#x5982; -1234.456e+78 Printf(%e, 10.2) 1.020000e+01%E &#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5;&#xFF0C;&#x4F8B;&#x5982; -1234.456E+78 Printf(%e, 10.2) 1.020000E+01%f &#x6709;&#x5C0F;&#x6570;&#x70B9;&#x800C;&#x65E0;&#x6307;&#x6570;&#xFF0C;&#x4F8B;&#x5982; 123.456 Printf(%f, 10.2) 10.200000%g &#x6839;&#x636E;&#x60C5;&#x51B5;&#x9009;&#x62E9; %e &#x6216; %f &#x4EE5;&#x4EA7;&#x751F;&#x66F4;&#x7D27;&#x51D1;&#x7684;&#xFF08;&#x65E0;&#x672B;&#x5C3E;&#x7684;0&#xFF09;&#x8F93;&#x51FA; Printf(%g, 10.20) 10.2%G &#x6839;&#x636E;&#x60C5;&#x51B5;&#x9009;&#x62E9; %E &#x6216; %f &#x4EE5;&#x4EA7;&#x751F;&#x66F4;&#x7D27;&#x51D1;&#x7684;&#xFF08;&#x65E0;&#x672B;&#x5C3E;&#x7684;0&#xFF09;&#x8F93;&#x51FA; Printf(%G, 10.20+2i) (10.2+2i) &#x5B57;&#x7B26;&#x4E32;&#x4E0E;&#x5B57;&#x8282;&#x5207;&#x7247; &#x5360;&#x4F4D;&#x7B26; &#x8BF4;&#x660E; &#x4E3E;&#x4F8B; &#x8F93;&#x51FA;%s &#x8F93;&#x51FA;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x793A;&#xFF08;string &#x7C7B;&#x578B;&#x6216; []byte) Printf(%s, []byte (Hello world)) Hello world%q &#x53CC;&#x5F15;&#x53F7;&#x56F4;&#x7ED5;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x7531; Go &#x8BED;&#x6CD5;&#x5B89;&#x5168;&#x5730;&#x8F6C;&#x4E49; Printf(%q, Hello world) Hello world%x &#x5341;&#x516D;&#x8FDB;&#x5236;&#xFF0C;&#x5C0F;&#x5199;&#x5B57;&#x6BCD;&#xFF0C;&#x6BCF;&#x5B57;&#x8282;&#x4E24;&#x4E2A;&#x5B57;&#x7B26; Printf(%x, golang) 676f6c616e67%X &#x5341;&#x516D;&#x8FDB;&#x5236;&#xFF0C;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#xFF0C;&#x6BCF;&#x5B57;&#x8282;&#x4E24;&#x4E2A;&#x5B57;&#x7B26; Printf(%X, golang) 676F6C616E67 &#x6307;&#x9488; &#x5360;&#x4F4D;&#x7B26; &#x8BF4;&#x660E; &#x4E3E;&#x4F8B; &#x8F93;&#x51FA;%p &#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A;&#xFF0C;&#x524D;&#x7F00; 0x Printf(%p, &amp;site) 0x4f57f0 &#x5176;&#x5B83;&#x6807;&#x8BB0; &#x5360;&#x4F4D;&#x7B26; &#x8BF4;&#x660E; &#x4E3E;&#x4F8B; &#x8F93;&#x51FA;+ &#x603B;&#x6253;&#x5370;&#x6570;&#x503C;&#x7684;&#x6B63;&#x8D1F;&#x53F7;&#xFF1B;&#x5BF9;&#x4E8E;%q&#xFF08;%+q&#xFF09;&#x4FDD;&#x8BC1;&#x53EA;&#x8F93;&#x51FA; ASCII &#x7F16;&#x7801;&#x7684;&#x5B57;&#x7B26;&#x3002; Printf(%+q, &#x4E2D;&#x6587;) \\u4e2d\\u6587- &#x5728;&#x53F3;&#x4FA7;&#x800C;&#x975E;&#x5DE6;&#x4FA7;&#x586B;&#x5145;&#x7A7A;&#x683C;&#xFF08;&#x5DE6;&#x5BF9;&#x9F50;&#x8BE5;&#x533A;&#x57DF;&#xFF09;# &#x5907;&#x7528;&#x683C;&#x5F0F;&#xFF1A;&#x4E3A;&#x516B;&#x8FDB;&#x5236;&#x6DFB;&#x52A0;&#x524D;&#x5BFC; 0&#xFF08;%#o&#xFF09;&#xFF0C;&#x4E3A;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x6DFB;&#x52A0;&#x524D;&#x5BFC; 0x&#xFF08;%#x&#xFF09;&#x6216; Printf(%#U, &apos;&#x4E2D;&apos;) U+4E2D &apos;&#x4E2D;&apos; 0X&#xFF08;%#X&#xFF09;&#xFF0C;&#x4E3A; %p&#xFF08;%#p&#xFF09;&#x53BB;&#x6389;&#x524D;&#x5BFC; 0x&#xFF1B;&#x5982;&#x679C;&#x53EF;&#x80FD;&#x7684;&#x8BDD;&#xFF0C;%q&#xFF08;%#q&#xFF09;&#x4F1A;&#x6253;&#x5370;&#x539F;&#x59CB; &#xFF08;&#x5373;&#x53CD;&#x5F15;&#x53F7;&#x56F4;&#x7ED5;&#x7684;&#xFF09;&#x5B57;&#x7B26;&#x4E32;&#xFF1B;&#x5982;&#x679C;&#x662F;&#x53EF;&#x6253;&#x5370;&#x5B57;&#x7B26;&#xFF0C;%U&#xFF08;%#U&#xFF09;&#x4F1A;&#x5199;&#x51FA;&#x8BE5;&#x5B57;&#x7B26;&#x7684; Unicode &#x7F16;&#x7801;&#x5F62;&#x5F0F;&#xFF08;&#x5982;&#x5B57;&#x7B26; x &#x4F1A;&#x88AB;&#x6253;&#x5370;&#x6210; U+0078 &apos;x&apos;&#xFF09;&#x3002;&apos; &apos; &#xFF08;&#x7A7A;&#x683C;&#xFF09;&#x4E3A;&#x6570;&#x503C;&#x4E2D;&#x7701;&#x7565;&#x7684;&#x6B63;&#x8D1F;&#x53F7;&#x7559;&#x51FA;&#x7A7A;&#x767D;&#xFF08;% d&#xFF09;&#xFF1B; &#x4EE5;&#x5341;&#x516D;&#x8FDB;&#x5236;&#xFF08;% x, % X&#xFF09;&#x6253;&#x5370;&#x5B57;&#x7B26;&#x4E32;&#x6216;&#x5207;&#x7247;&#x65F6;&#xFF0C;&#x5728;&#x5B57;&#x8282;&#x4E4B;&#x95F4;&#x7528;&#x7A7A;&#x683C;&#x9694;&#x5F00;0 &#x586B;&#x5145;&#x524D;&#x5BFC;&#x7684;0&#x800C;&#x975E;&#x7A7A;&#x683C;&#xFF1B;&#x5BF9;&#x4E8E;&#x6570;&#x5B57;&#xFF0C;&#x8FD9;&#x4F1A;&#x5C06;&#x586B;&#x5145;&#x79FB;&#x5230;&#x6B63;&#x8D1F;&#x53F7;&#x4E4B;&#x540E; &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 type user struct { \tname string } func main () { \tu := user{ tang } \tfmt.Printf( % + v\\n , u) // &#x683C;&#x5F0F;&#x5316;&#x8F93;&#x51FA;&#x7ED3;&#x6784; {name: tang} \tfmt.Printf( %#v\\n , u) // &#x8F93;&#x51FA;&#x503C;&#x7684; Go &#x8BED;&#x8A00;&#x8868;&#x793A;&#x65B9;&#x6CD5; main.user{name: tang} \tfmt.Printf( %T\\n , u) // &#x8F93;&#x51FA;&#x503C;&#x7684;&#x7C7B;&#x578B;&#x7684; Go &#x8BED;&#x8A00;&#x8868;&#x793A; main.user \tfmt.Printf( %t\\n , true ) // &#x8F93;&#x51FA;&#x503C;&#x7684; true &#x6216; false true \tfmt.Printf( %b\\n , 1024 ) // &#x4E8C;&#x8FDB;&#x5236;&#x8868;&#x793A; 10000000000 \tfmt.Printf( %c\\n , 11111111 ) // &#x6570;&#x503C;&#x5BF9;&#x5E94;&#x7684; Unicode &#x7F16;&#x7801;&#x5B57;&#x7B26; \tfmt.Printf( %d\\n , 10 ) // &#x5341;&#x8FDB;&#x5236;&#x8868;&#x793A; 10 \tfmt.Printf( %o\\n , 8 ) // &#x516B;&#x8FDB;&#x5236;&#x8868;&#x793A; 10 \tfmt.Printf( %q\\n , 22 ) // &#x8F6C;&#x5316;&#x4E3A;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x5E76;&#x9644;&#x4E0A;&#x5355;&#x5F15;&#x53F7; &apos;\\x16&apos; \tfmt.Printf( %x\\n , 1223 ) // &#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A;&#xFF0C;&#x7528; a-f &#x8868;&#x793A; 4c7 \tfmt.Printf( %X\\n , 1223 ) // &#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A;&#xFF0C;&#x7528; A-F &#x8868;&#x793A; 4c7 \tfmt.Printf( %U\\n , 1233 ) // Unicode &#x8868;&#x793A; \tfmt.Printf( %b\\n , 12.34 ) // &#x65E0;&#x5C0F;&#x6570;&#x90E8;&#x5206;&#xFF0C;&#x4E24;&#x4F4D;&#x6307;&#x6570;&#x7684;&#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5; 6946802425218990p-49 \tfmt.Printf( %e\\n , 12.345 ) // &#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5;&#xFF0C;e &#x8868;&#x793A; 1.234500e+01 \tfmt.Printf( %E\\n , 12.34455 ) // &#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5;&#xFF0C;E &#x8868;&#x793A; 1.234455E+01 \tfmt.Printf( %f\\n , 12.3456 ) // &#x6709;&#x5C0F;&#x6570;&#x90E8;&#x5206;&#xFF0C;&#x65E0;&#x6307;&#x6570;&#x90E8;&#x5206; 12.345600 \tfmt.Printf( %g\\n , 12.3456 ) // &#x6839;&#x636E;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x91C7;&#x7528; %e &#x6216; %f &#x8F93;&#x51FA; 12.3456 \tfmt.Printf( %G\\n , 12.3456 ) // &#x6839;&#x636E;&#x5B9E;&#x9645;&#x60C5;&#x51B5;&#x91C7;&#x7528; %E &#x6216; %f &#x8F93;&#x51FA; 12.3456 \tfmt.Printf( %s\\n , wqdew ) // &#x76F4;&#x63A5;&#x8F93;&#x51FA;&#x5B57;&#x7B26;&#x4E32;&#x6216;&#x8005; []byte wqdew \tfmt.Printf( %q\\n , dedede ) // &#x53CC;&#x5F15;&#x53F7;&#x62EC;&#x8D77;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x4E32; dedede \tfmt.Printf( %x\\n , abczxc ) // &#x6BCF;&#x4E2A;&#x5B57;&#x8282;&#x7528;&#x4E24;&#x5B57;&#x8282;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A;&#xFF0C;a-f &#x8868;&#x793A; 6162637a7863 \tfmt.Printf( %X\\n , asdzxc ) // &#x6BCF;&#x4E2A;&#x5B57;&#x8282;&#x7528;&#x4E24;&#x5B57;&#x8282;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A;&#xFF0C;A-F &#x8868;&#x793A; 6173647A7863 \tfmt.Printf( %p\\n , 0x123 ) // 0x &#x5F00;&#x5934;&#x7684;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x6570;&#x8868;&#x793A; }"},"standards/io/ioutil.html":{"title":"ioutil","path":"\\golang-learn\\standards\\io\\ioutil.html","body":"ioutil ioutil 提供了一些常用、方便的 IO 操作函数。 NopCloser 函数 有时候我们需要传递一个 io.ReadCloser 的实例，而我们现在有一个 io.Reader 的实例，比如： strings.Reader ，这个时候 NopCloser 就派上用场了。它包装一个 io.Reader ，返回一个 io.ReadCloser ，而相应的 Close 方法啥也不做，只是返回 nil 。 比如，在标准库 net/http 包中的 NewRequest ，接收一个 io.Reader 的 body ，而实际上， Request 的 Body 的类 型是 io.ReadCloser ，因此，代码内部进行了判断，如果传递的 io.Reader 也实现了 io.ReadCloser 接口，则转换，否则通 过 ioutil.NopCloser 包装转换一下。相关代码如下： 1 2 3 4 rc, ok := body.(io.ReadCloser) if !ok &amp;&amp; body != nil  rc = ioutil.NopCloser(body)  ReadAll 函数 很多时候，我们需要一次性读取 io.Reader 中的数据，考虑到读取所有数据的需求比较多，Go 提供了 ReadAll 这个函数，用来从 io.Reader 中 一次读取所有数据。 1 func ReadAll (r io.Reader) ([] byte , error) 该函数成功调用后会返回 err == nil 而不是 err == EOF 。 ReadDir 函数 在 Go 中如何输出目录下的所有文件呢？ 在 ioutil 中提供了一个方便的函数： ReadDir ，它读取目录并返回排好序的文件和子目录名（ []os.FileInfo ）。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 func main ()  \tdir := os.Args[ 1 ] \tlistAll(dir, 0 )  func listAll (path string , curHier int )  \tfileInfos, err := ioutil.ReadDir(path) \t if err != nil fmt.Println(err); return  \t for _, info := range fileInfos \t\t if info.IsDir() \t\t\t for tmpHier := curHier; tmpHier  0 ; tmpHier-- \t\t\t\tfmt.Printf( \"|\\t\" ) \t\t\t \t\t\tfmt.Println(info.Name(), \"\\\\\" ) \t\t\tlistAll(path + \"/\" + info.Name(),curHier + 1 ) \t\t else  \t\t\t for tmpHier := curHier; tmpHier  0 ; tmpHier-- \t\t\t\tfmt.Printf( \"|\\t\" ) \t\t\t \t\t\tfmt.Println(info.Name()) \t\t \t  ReadFile 和 WriteFile 函数 ReadFile 读取整个文件的内容， ReadFile 会先判断文件的大小，给 bytes.Buffer 一个预定义容量，避免额外分配内存。 1 func ReadFile (filename string ) ([] byte , error) ReadFile 从 filename 指定的文件中读取数据并返回文件的内容。成功的调用返回的 err 为 nil 而非 EOF 。因为本函数定义为 读取整个文件，它不会将读取返回的 EOF 视为应报告的错误。 WriteFile ： 1 func WriteFile (filename string , data [] byte , perm os.FileMode) error WriteFile 将 data 写入 filename 文件中，当文件不存在时会根据 perm 指定的权限进行创建一个,文件存在时会先清空文件内容。 对于 perm 参数，我们一般可以指定为： 0666 。 TempDir 和 TempFile 函数 操作系统中一般都会提供临时目录，比如 linux 下的 /tmp 目录（通过 os.TempDir() 可以获取到)。有时候，我们自己需要创建临时目录， 比如 Go 工具链源码中（ src/cmd/go/build.go ），通过 TempDir 创建一个临时目录，用于存放编译过程的临时文件： 1 b.work, err = ioutil.TempDir( \"\" , \"go-build\" ) 第一个参数如果为空，表明在系统默认的临时目录（ os.TempDir ）中创建临时目录；第二个参数指定临时目录名的前缀，该函数返回临时目录的路径。 相应的， TempFile 用于创建临时文件。如 gofmt 命令的源码中创建临时文件： 1 f1, err := ioutil.TempFile( \"\" , \"gofmt\" ) 参数和 ioutil.TempDir 参数含义类似。 这里需要 注意 ：创建者创建的临时文件和临时目录要负责删除这些临时目录和文件。如删除临时文件： 1 2 3 4 defer func ()  f.Close() os.Remove(f.Name()) ()"},"standards/io/ioutil.html#ioutil":{"title":"ioutil","path":"\\golang-learn\\standards\\io\\ioutil.html#ioutil","body":"ioutil &#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;&#x5E38;&#x7528;&#x3001;&#x65B9;&#x4FBF;&#x7684; IO &#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x3002;"},"standards/io/ioutil.html#NopCloser-函数":{"title":"NopCloser &#x51FD;&#x6570;","path":"\\golang-learn\\standards\\io\\ioutil.html#NopCloser-函数","body":"&#x6709;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4F20;&#x9012;&#x4E00;&#x4E2A; io.ReadCloser &#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x73B0;&#x5728;&#x6709;&#x4E00;&#x4E2A; io.Reader &#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A; strings.Reader &#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019; NopCloser &#x5C31;&#x6D3E;&#x4E0A;&#x7528;&#x573A;&#x4E86;&#x3002;&#x5B83;&#x5305;&#x88C5;&#x4E00;&#x4E2A; io.Reader &#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; io.ReadCloser &#xFF0C;&#x800C;&#x76F8;&#x5E94;&#x7684; Close &#x65B9;&#x6CD5;&#x5565;&#x4E5F;&#x4E0D;&#x505A;&#xFF0C;&#x53EA;&#x662F;&#x8FD4;&#x56DE; nil &#x3002; &#x6BD4;&#x5982;&#xFF0C;&#x5728;&#x6807;&#x51C6;&#x5E93; net/http &#x5305;&#x4E2D;&#x7684; NewRequest &#xFF0C;&#x63A5;&#x6536;&#x4E00;&#x4E2A; io.Reader &#x7684; body &#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C; Request &#x7684; Body &#x7684;&#x7C7B; &#x578B;&#x662F; io.ReadCloser &#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x4EE3;&#x7801;&#x5185;&#x90E8;&#x8FDB;&#x884C;&#x4E86;&#x5224;&#x65AD;&#xFF0C;&#x5982;&#x679C;&#x4F20;&#x9012;&#x7684; io.Reader &#x4E5F;&#x5B9E;&#x73B0;&#x4E86; io.ReadCloser &#x63A5;&#x53E3;&#xFF0C;&#x5219;&#x8F6C;&#x6362;&#xFF0C;&#x5426;&#x5219;&#x901A; &#x8FC7; ioutil.NopCloser &#x5305;&#x88C5;&#x8F6C;&#x6362;&#x4E00;&#x4E0B;&#x3002;&#x76F8;&#x5173;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 rc, ok := body.(io.ReadCloser) if !ok &amp;&amp; body != nil { rc = ioutil.NopCloser(body) }"},"standards/io/ioutil.html#ReadAll-函数":{"title":"ReadAll &#x51FD;&#x6570;","path":"\\golang-learn\\standards\\io\\ioutil.html#ReadAll-函数","body":"&#x5F88;&#x591A;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E00;&#x6B21;&#x6027;&#x8BFB;&#x53D6; io.Reader &#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x8003;&#x8651;&#x5230;&#x8BFB;&#x53D6;&#x6240;&#x6709;&#x6570;&#x636E;&#x7684;&#x9700;&#x6C42;&#x6BD4;&#x8F83;&#x591A;&#xFF0C;Go &#x63D0;&#x4F9B;&#x4E86; ReadAll &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x7528;&#x6765;&#x4ECE; io.Reader &#x4E2D; &#x4E00;&#x6B21;&#x8BFB;&#x53D6;&#x6240;&#x6709;&#x6570;&#x636E;&#x3002; 1 func ReadAll (r io.Reader) ([] byte , error) &#x8BE5;&#x51FD;&#x6570;&#x6210;&#x529F;&#x8C03;&#x7528;&#x540E;&#x4F1A;&#x8FD4;&#x56DE; err == nil &#x800C;&#x4E0D;&#x662F; err == EOF &#x3002;"},"standards/io/ioutil.html#ReadDir-函数":{"title":"ReadDir &#x51FD;&#x6570;","path":"\\golang-learn\\standards\\io\\ioutil.html#ReadDir-函数","body":"&#x5728; Go &#x4E2D;&#x5982;&#x4F55;&#x8F93;&#x51FA;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x5462;&#xFF1F; &#x5728; ioutil &#x4E2D;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x65B9;&#x4FBF;&#x7684;&#x51FD;&#x6570;&#xFF1A; ReadDir &#xFF0C;&#x5B83;&#x8BFB;&#x53D6;&#x76EE;&#x5F55;&#x5E76;&#x8FD4;&#x56DE;&#x6392;&#x597D;&#x5E8F;&#x7684;&#x6587;&#x4EF6;&#x548C;&#x5B50;&#x76EE;&#x5F55;&#x540D;&#xFF08; []os.FileInfo &#xFF09;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 func main () { \tdir := os.Args[ 1 ] \tlistAll(dir, 0 ) } func listAll (path string , curHier int ) { \tfileInfos, err := ioutil.ReadDir(path) \t if err != nil {fmt.Println(err); return } \t for _, info := range fileInfos{ \t\t if info.IsDir(){ \t\t\t for tmpHier := curHier; tmpHier  0 ; tmpHier--{ \t\t\t\tfmt.Printf( |\\t ) \t\t\t} \t\t\tfmt.Println(info.Name(), \\\\ ) \t\t\tlistAll(path + / + info.Name(),curHier + 1 ) \t\t} else { \t\t\t for tmpHier := curHier; tmpHier  0 ; tmpHier--{ \t\t\t\tfmt.Printf( |\\t ) \t\t\t} \t\t\tfmt.Println(info.Name()) \t\t} \t} }"},"standards/io/ioutil.html#ReadFile-和-WriteFile-函数":{"title":"ReadFile &#x548C; WriteFile &#x51FD;&#x6570;","path":"\\golang-learn\\standards\\io\\ioutil.html#ReadFile-和-WriteFile-函数","body":"ReadFile &#x8BFB;&#x53D6;&#x6574;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x5185;&#x5BB9;&#xFF0C; ReadFile &#x4F1A;&#x5148;&#x5224;&#x65AD;&#x6587;&#x4EF6;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x7ED9; bytes.Buffer &#x4E00;&#x4E2A;&#x9884;&#x5B9A;&#x4E49;&#x5BB9;&#x91CF;&#xFF0C;&#x907F;&#x514D;&#x989D;&#x5916;&#x5206;&#x914D;&#x5185;&#x5B58;&#x3002; 1 func ReadFile (filename string ) ([] byte , error) ReadFile &#x4ECE; filename &#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#x4E2D;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x5E76;&#x8FD4;&#x56DE;&#x6587;&#x4EF6;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x6210;&#x529F;&#x7684;&#x8C03;&#x7528;&#x8FD4;&#x56DE;&#x7684; err &#x4E3A; nil &#x800C;&#x975E; EOF &#x3002;&#x56E0;&#x4E3A;&#x672C;&#x51FD;&#x6570;&#x5B9A;&#x4E49;&#x4E3A; &#x8BFB;&#x53D6;&#x6574;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x4E0D;&#x4F1A;&#x5C06;&#x8BFB;&#x53D6;&#x8FD4;&#x56DE;&#x7684; EOF &#x89C6;&#x4E3A;&#x5E94;&#x62A5;&#x544A;&#x7684;&#x9519;&#x8BEF;&#x3002; WriteFile &#xFF1A; 1 func WriteFile (filename string , data [] byte , perm os.FileMode) error WriteFile &#x5C06; data &#x5199;&#x5165; filename &#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x5F53;&#x6587;&#x4EF6;&#x4E0D;&#x5B58;&#x5728;&#x65F6;&#x4F1A;&#x6839;&#x636E; perm &#x6307;&#x5B9A;&#x7684;&#x6743;&#x9650;&#x8FDB;&#x884C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;,&#x6587;&#x4EF6;&#x5B58;&#x5728;&#x65F6;&#x4F1A;&#x5148;&#x6E05;&#x7A7A;&#x6587;&#x4EF6;&#x5185;&#x5BB9;&#x3002; &#x5BF9;&#x4E8E; perm &#x53C2;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x4E00;&#x822C;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x4E3A;&#xFF1A; 0666 &#x3002;"},"standards/io/ioutil.html#TempDir-和-TempFile-函数":{"title":"TempDir &#x548C; TempFile &#x51FD;&#x6570;","path":"\\golang-learn\\standards\\io\\ioutil.html#TempDir-和-TempFile-函数","body":"&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#x4E00;&#x822C;&#x90FD;&#x4F1A;&#x63D0;&#x4F9B;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#xFF0C;&#x6BD4;&#x5982; linux &#x4E0B;&#x7684; /tmp &#x76EE;&#x5F55;&#xFF08;&#x901A;&#x8FC7; os.TempDir() &#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5230;)&#x3002;&#x6709;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x9700;&#x8981;&#x521B;&#x5EFA;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#xFF0C; &#x6BD4;&#x5982; Go &#x5DE5;&#x5177;&#x94FE;&#x6E90;&#x7801;&#x4E2D;&#xFF08; src/cmd/go/build.go &#xFF09;&#xFF0C;&#x901A;&#x8FC7; TempDir &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#xFF0C;&#x7528;&#x4E8E;&#x5B58;&#x653E;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x7684;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF1A; 1 b.work, err = ioutil.TempDir(  , go-build ) &#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5982;&#x679C;&#x4E3A;&#x7A7A;&#xFF0C;&#x8868;&#x660E;&#x5728;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x7684;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#xFF08; os.TempDir &#xFF09;&#x4E2D;&#x521B;&#x5EFA;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#xFF1B;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#x540D;&#x7684;&#x524D;&#x7F00;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#x7684;&#x8DEF;&#x5F84;&#x3002; &#x76F8;&#x5E94;&#x7684;&#xFF0C; TempFile &#x7528;&#x4E8E;&#x521B;&#x5EFA;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x3002;&#x5982; gofmt &#x547D;&#x4EE4;&#x7684;&#x6E90;&#x7801;&#x4E2D;&#x521B;&#x5EFA;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF1A; 1 f1, err := ioutil.TempFile(  , gofmt ) &#x53C2;&#x6570;&#x548C; ioutil.TempDir &#x53C2;&#x6570;&#x542B;&#x4E49;&#x7C7B;&#x4F3C;&#x3002; &#x8FD9;&#x91CC;&#x9700;&#x8981; &#x6CE8;&#x610F; &#xFF1A;&#x521B;&#x5EFA;&#x8005;&#x521B;&#x5EFA;&#x7684;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x548C;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#x8981;&#x8D1F;&#x8D23;&#x5220;&#x9664;&#x8FD9;&#x4E9B;&#x4E34;&#x65F6;&#x76EE;&#x5F55;&#x548C;&#x6587;&#x4EF6;&#x3002;&#x5982;&#x5220;&#x9664;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF1A; 1 2 3 4 defer func () { f.Close() os.Remove(f.Name()) }()"},"standards/text/strconv.html":{"title":"strconv","path":"\\golang-learn\\standards\\text\\strconv.html","body":"strconv strconv 包包含了一系列字符串与相关的类型转换的函数。 转换错误处理 strconv 中的错误处理。 由于将字符串转为其他数据类型可能会出错， strconv 包定义了两个 error 类型的变量： ErrRange 和 ErrSyntax 。其中， ErrRange 表示 值超过了类型能表示的最大范围，比如将 “128” 转为 int8 就会返回这个错误； ErrSyntax 表示语法错误，比如将  转为 int 类型会返 回这个错误。 然而，在返回错误的时候，通过构造一个 NumError 类型的 error 对象返回。 NumError 结构的定义如下： 1 2 3 4 5 6 // A NumError records a failed conversion. type NumError struct  Func string // the failing function (ParseBool, ParseInt, ParseUint, ParseFloat) Num string // the input Err error // the reason the conversion failed (ErrRange, ErrSyntax)  该结构记录了转换过程中发生的错误信息。该结构不仅包含了一个 error 类型的成员，记录具体的错误信息，包的实现中，定义了两个便捷函数， 用于构造 NumError 对象： 1 2 3 4 5 6 7 func syntaxError (fn, str string ) * NumError  return &amp;NumErrorfn, str, ErrSyntax  func rangeError (fn, str string ) * NumError  return &amp;NumErrorfn, str, ErrRange  字符串转为整型 包括三个函数： ParseInt 、 ParseUint 和 Atoi ，函数原型如下： 1 2 3 4 5 // 转为有符号整型 func ParseInt (s string , base int , bitSize int ) (i int64 , err error) // 转为无符号整型 func ParseUint (s string , base int , bitSize int ) (n uint64 , err error) func Atoi (s string ) (i int , err error) Atoi 内部通过调用 ParseInt(s, 10, 0) 来实现的 。 ParseInt 1 func ParseInt (s string , base int , bitSize int ) (i int64 , err error) 参数： base 进制，取值为 2~36 ，如果 base 的值为 0，则会根据字符串的前缀来确定 base 的值： “0x” 表示 16 进制； “0” 表示 8 进制；否则就是 10 进制。 bitSize 表示的是整数取值范围，或者说整数的具体类型。取值 0、8、16、32 和 64 分别代表 int 、 int8 、 int16 、 int32 和 int64 。 Go 中， int/uint 类型，不同系统能表示的范围是不一样的，目前的实现是，32 位系统占 4 个字节；64 位系统占 8 个字节。 当 bitSize==0 时，应该表示 32 位还是 64 位呢？ strconv.IntSize 变量用于获取程序运行的操作系统平台下 int 类型所占的位数。 下面的代码 n 和 err 的值分别是什么？ 1 n, err := strconv.ParseInt( \"128\" , 10 , 8 ) 在 ParseInt/ParseUint 的实现中，如果字符串表示的整数超过了 bitSize 参数能够表示的范围，则会返回 ErrRange ，同时会 返回 bitSize 能够表示的最大或最小值。 int8 占 8 位，最高位代表符号位 （1-负号；0-正号）。所以这里 n 是 127。 另外， ParseInt 返回的是 int64 ，这是为了能够容纳所有的整型，在实际使用中，可以根据传递的 bitSize ，然后将结果转为实 际需要的类型。 整型转为字符串 遇到需要将字符串和整型连接起来，在 Go 语言中，你需要将整型转为字符串类型，然后才能进行连接。 1 2 3 4 5 // 无符号整型转字符串 func FormatUint (i uint64 , base int ) string \t // 有符号整型转字符串 func FormatInt (i int64 , base int ) string \t func Itoa (i int ) string Itoa 内部直接调用 FormatInt(i, 10) 实现的 。 除了使用上述方法将整数转为字符串外，经常见到有人使用 fmt 包来做这件事。如： 1 fmt.Sprintf( \"%d\" , 127 ) 那么，这两种方式我们该怎么选择呢？我们主要来考察一下性能。 1 2 3 4 5 6 7 8 9 10 11 startTime := time.Now() for i := 0 ; i  10000 ; i++  fmt.Sprintf( \"%d\" , i)  fmt.Println(time.Now().Sub(startTime)) startTime := time.Now() for i := 0 ; i  10000 ; i++  strconv.Itoa(i)  fmt.Println(time.Now().Sub(startTime)) Sprintf 的时间是 3.549761ms，而 Itoa 的时间是 848.208us，相差 4 倍多。 Sprintf 性能差些可以预见，因为它接收的是 interface ，需要进行反射等操作。建议使用 strconv 包中的方法进行转换。 字符串和布尔值之间的转换 Go 中字符串和布尔值之间的转换比较简单，主要有三个函数： 1 2 3 4 5 6 // 接受 1, t, T, TRUE, true, True, 0, f, F, FALSE, false, False 等字符串； // 其他形式的字符串会返回错误 // 返回转换后的布尔值 func ParseBool (str string ) (value bool , err error) // 直接返回 \" true \" 或 \" false \" func FormatBool (b bool ) string 字符串和浮点数之间的转换 类似的，包含三个函数： 1 2 3 4 5 // 无论 bitSize 取值如何，函数返回值类型都是 float64。 func ParseFloat (s string , bitSize int ) (f float64 , err error) // 第一个参数是输入浮点数 // 第二个是浮点数的显示格式（可以是 b , e , E , f , g , G ） func FormatFloat (f float64 , fmt byte , prec, bitSize int ) string prec 表示有效数字（对 fmt=&#39;b&#39; 无效），对于 ‘e’, ‘E’ 和 ‘f’，有效数字用于小数点之后的位数； 对于 ‘g’ 和 ‘G’，则是所有的有效数字。例如： 1 2 strconv.FormatFloat( 1223.13252 , 'e' , 3 , 32 )\t // 结果：1.223e+03 strconv.FormatFloat( 1223.13252 , 'g' , 3 , 32 )\t // 结果：1.22e+03 由于浮点数有精度的问题，精度不一样， ParseFloat 和 FormatFloat 可能达不到互逆的效果。如： 1 2 s := strconv.FormatFloat( 1234.5678 , 'g' , 6 , 64 ) strconv.ParseFloat(s, 64 ) 另外， fmt=&#39;b&#39; 时，得到的字符串是无法通过 ParseFloat 还原的。 同样的，基于性能的考虑，应该使用 FormatFloat 而不是 fmt.Sprintf 。"},"standards/text/strconv.html#strconv":{"title":"strconv","path":"\\golang-learn\\standards\\text\\strconv.html#strconv","body":"strconv &#x5305;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x7CFB;&#x5217;&#x5B57;&#x7B26;&#x4E32;&#x4E0E;&#x76F8;&#x5173;&#x7684;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x7684;&#x51FD;&#x6570;&#x3002;"},"standards/text/strconv.html#转换错误处理":{"title":"&#x8F6C;&#x6362;&#x9519;&#x8BEF;&#x5904;&#x7406;","path":"\\golang-learn\\standards\\text\\strconv.html#转换错误处理","body":"strconv &#x4E2D;&#x7684;&#x9519;&#x8BEF;&#x5904;&#x7406;&#x3002; &#x7531;&#x4E8E;&#x5C06;&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x4E3A;&#x5176;&#x4ED6;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x9519;&#xFF0C; strconv &#x5305;&#x5B9A;&#x4E49;&#x4E86;&#x4E24;&#x4E2A; error &#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#xFF1A; ErrRange &#x548C; ErrSyntax &#x3002;&#x5176;&#x4E2D;&#xFF0C; ErrRange &#x8868;&#x793A; &#x503C;&#x8D85;&#x8FC7;&#x4E86;&#x7C7B;&#x578B;&#x80FD;&#x8868;&#x793A;&#x7684;&#x6700;&#x5927;&#x8303;&#x56F4;&#xFF0C;&#x6BD4;&#x5982;&#x5C06; &#x201C;128&#x201D; &#x8F6C;&#x4E3A; int8 &#x5C31;&#x4F1A;&#x8FD4;&#x56DE;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#xFF1B; ErrSyntax &#x8868;&#x793A;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;&#xFF0C;&#x6BD4;&#x5982;&#x5C06;  &#x8F6C;&#x4E3A; int &#x7C7B;&#x578B;&#x4F1A;&#x8FD4; &#x56DE;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#x3002; &#x7136;&#x800C;&#xFF0C;&#x5728;&#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x901A;&#x8FC7;&#x6784;&#x9020;&#x4E00;&#x4E2A; NumError &#x7C7B;&#x578B;&#x7684; error &#x5BF9;&#x8C61;&#x8FD4;&#x56DE;&#x3002; NumError &#x7ED3;&#x6784;&#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 // A NumError records a failed conversion. type NumError struct { Func string // the failing function (ParseBool, ParseInt, ParseUint, ParseFloat) Num string // the input Err error // the reason the conversion failed (ErrRange, ErrSyntax) } &#x8BE5;&#x7ED3;&#x6784;&#x8BB0;&#x5F55;&#x4E86;&#x8F6C;&#x6362;&#x8FC7;&#x7A0B;&#x4E2D;&#x53D1;&#x751F;&#x7684;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3002;&#x8BE5;&#x7ED3;&#x6784;&#x4E0D;&#x4EC5;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x4E2A; error &#x7C7B;&#x578B;&#x7684;&#x6210;&#x5458;&#xFF0C;&#x8BB0;&#x5F55;&#x5177;&#x4F53;&#x7684;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF0C;&#x5305;&#x7684;&#x5B9E;&#x73B0;&#x4E2D;&#xFF0C;&#x5B9A;&#x4E49;&#x4E86;&#x4E24;&#x4E2A;&#x4FBF;&#x6377;&#x51FD;&#x6570;&#xFF0C; &#x7528;&#x4E8E;&#x6784;&#x9020; NumError &#x5BF9;&#x8C61;&#xFF1A; 1 2 3 4 5 6 7 func syntaxError (fn, str string ) * NumError { return &amp;NumError{fn, str, ErrSyntax} } func rangeError (fn, str string ) * NumError { return &amp;NumError{fn, str, ErrRange} }"},"standards/text/strconv.html#字符串转为整型":{"title":"&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x4E3A;&#x6574;&#x578B;","path":"\\golang-learn\\standards\\text\\strconv.html#字符串转为整型","body":"&#x5305;&#x62EC;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#xFF1A; ParseInt &#x3001; ParseUint &#x548C; Atoi &#xFF0C;&#x51FD;&#x6570;&#x539F;&#x578B;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 // &#x8F6C;&#x4E3A;&#x6709;&#x7B26;&#x53F7;&#x6574;&#x578B; func ParseInt (s string , base int , bitSize int ) (i int64 , err error) // &#x8F6C;&#x4E3A;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B; func ParseUint (s string , base int , bitSize int ) (n uint64 , err error) func Atoi (s string ) (i int , err error) Atoi &#x5185;&#x90E8;&#x901A;&#x8FC7;&#x8C03;&#x7528; ParseInt(s, 10, 0) &#x6765;&#x5B9E;&#x73B0;&#x7684; &#x3002; ParseInt 1 func ParseInt (s string , base int , bitSize int ) (i int64 , err error) &#x53C2;&#x6570;&#xFF1A; base &#x8FDB;&#x5236;&#xFF0C;&#x53D6;&#x503C;&#x4E3A; 2~36 &#xFF0C;&#x5982;&#x679C; base &#x7684;&#x503C;&#x4E3A; 0&#xFF0C;&#x5219;&#x4F1A;&#x6839;&#x636E;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x524D;&#x7F00;&#x6765;&#x786E;&#x5B9A; base &#x7684;&#x503C;&#xFF1A; &#x201C;0x&#x201D; &#x8868;&#x793A; 16 &#x8FDB;&#x5236;&#xFF1B; &#x201C;0&#x201D; &#x8868;&#x793A; 8 &#x8FDB;&#x5236;&#xFF1B;&#x5426;&#x5219;&#x5C31;&#x662F; 10 &#x8FDB;&#x5236;&#x3002; bitSize &#x8868;&#x793A;&#x7684;&#x662F;&#x6574;&#x6570;&#x53D6;&#x503C;&#x8303;&#x56F4;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x6574;&#x6570;&#x7684;&#x5177;&#x4F53;&#x7C7B;&#x578B;&#x3002;&#x53D6;&#x503C; 0&#x3001;8&#x3001;16&#x3001;32 &#x548C; 64 &#x5206;&#x522B;&#x4EE3;&#x8868; int &#x3001; int8 &#x3001; int16 &#x3001; int32 &#x548C; int64 &#x3002; Go &#x4E2D;&#xFF0C; int/uint &#x7C7B;&#x578B;&#xFF0C;&#x4E0D;&#x540C;&#x7CFB;&#x7EDF;&#x80FD;&#x8868;&#x793A;&#x7684;&#x8303;&#x56F4;&#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x76EE;&#x524D;&#x7684;&#x5B9E;&#x73B0;&#x662F;&#xFF0C;32 &#x4F4D;&#x7CFB;&#x7EDF;&#x5360; 4 &#x4E2A;&#x5B57;&#x8282;&#xFF1B;64 &#x4F4D;&#x7CFB;&#x7EDF;&#x5360; 8 &#x4E2A;&#x5B57;&#x8282;&#x3002; &#x5F53; bitSize==0 &#x65F6;&#xFF0C;&#x5E94;&#x8BE5;&#x8868;&#x793A; 32 &#x4F4D;&#x8FD8;&#x662F; 64 &#x4F4D;&#x5462;&#xFF1F; strconv.IntSize &#x53D8;&#x91CF;&#x7528;&#x4E8E;&#x83B7;&#x53D6;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5E73;&#x53F0;&#x4E0B; int &#x7C7B;&#x578B;&#x6240;&#x5360;&#x7684;&#x4F4D;&#x6570;&#x3002; &#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801; n &#x548C; err &#x7684;&#x503C;&#x5206;&#x522B;&#x662F;&#x4EC0;&#x4E48;&#xFF1F; 1 n, err := strconv.ParseInt( 128 , 10 , 8 ) &#x5728; ParseInt/ParseUint &#x7684;&#x5B9E;&#x73B0;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x793A;&#x7684;&#x6574;&#x6570;&#x8D85;&#x8FC7;&#x4E86; bitSize &#x53C2;&#x6570;&#x80FD;&#x591F;&#x8868;&#x793A;&#x7684;&#x8303;&#x56F4;&#xFF0C;&#x5219;&#x4F1A;&#x8FD4;&#x56DE; ErrRange &#xFF0C;&#x540C;&#x65F6;&#x4F1A; &#x8FD4;&#x56DE; bitSize &#x80FD;&#x591F;&#x8868;&#x793A;&#x7684;&#x6700;&#x5927;&#x6216;&#x6700;&#x5C0F;&#x503C;&#x3002; int8 &#x5360; 8 &#x4F4D;&#xFF0C;&#x6700;&#x9AD8;&#x4F4D;&#x4EE3;&#x8868;&#x7B26;&#x53F7;&#x4F4D; &#xFF08;1-&#x8D1F;&#x53F7;&#xFF1B;0-&#x6B63;&#x53F7;&#xFF09;&#x3002;&#x6240;&#x4EE5;&#x8FD9;&#x91CC; n &#x662F; 127&#x3002; &#x53E6;&#x5916;&#xFF0C; ParseInt &#x8FD4;&#x56DE;&#x7684;&#x662F; int64 &#xFF0C;&#x8FD9;&#x662F;&#x4E3A;&#x4E86;&#x80FD;&#x591F;&#x5BB9;&#x7EB3;&#x6240;&#x6709;&#x7684;&#x6574;&#x578B;&#xFF0C;&#x5728;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x4E2D;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x4F20;&#x9012;&#x7684; bitSize &#xFF0C;&#x7136;&#x540E;&#x5C06;&#x7ED3;&#x679C;&#x8F6C;&#x4E3A;&#x5B9E; &#x9645;&#x9700;&#x8981;&#x7684;&#x7C7B;&#x578B;&#x3002;"},"standards/text/strconv.html#整型转为字符串":{"title":"&#x6574;&#x578B;&#x8F6C;&#x4E3A;&#x5B57;&#x7B26;&#x4E32;","path":"\\golang-learn\\standards\\text\\strconv.html#整型转为字符串","body":"&#x9047;&#x5230;&#x9700;&#x8981;&#x5C06;&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x6574;&#x578B;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#xFF0C;&#x5728; Go &#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x5C06;&#x6574;&#x578B;&#x8F6C;&#x4E3A;&#x5B57;&#x7B26;&#x4E32;&#x7C7B;&#x578B;&#xFF0C;&#x7136;&#x540E;&#x624D;&#x80FD;&#x8FDB;&#x884C;&#x8FDE;&#x63A5;&#x3002; 1 2 3 4 5 // &#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B;&#x8F6C;&#x5B57;&#x7B26;&#x4E32; func FormatUint (i uint64 , base int ) string \t // &#x6709;&#x7B26;&#x53F7;&#x6574;&#x578B;&#x8F6C;&#x5B57;&#x7B26;&#x4E32; func FormatInt (i int64 , base int ) string \t func Itoa (i int ) string Itoa &#x5185;&#x90E8;&#x76F4;&#x63A5;&#x8C03;&#x7528; FormatInt(i, 10) &#x5B9E;&#x73B0;&#x7684; &#x3002; &#x9664;&#x4E86;&#x4F7F;&#x7528;&#x4E0A;&#x8FF0;&#x65B9;&#x6CD5;&#x5C06;&#x6574;&#x6570;&#x8F6C;&#x4E3A;&#x5B57;&#x7B26;&#x4E32;&#x5916;&#xFF0C;&#x7ECF;&#x5E38;&#x89C1;&#x5230;&#x6709;&#x4EBA;&#x4F7F;&#x7528; fmt &#x5305;&#x6765;&#x505A;&#x8FD9;&#x4EF6;&#x4E8B;&#x3002;&#x5982;&#xFF1A; 1 fmt.Sprintf( %d , 127 ) &#x90A3;&#x4E48;&#xFF0C;&#x8FD9;&#x4E24;&#x79CD;&#x65B9;&#x5F0F;&#x6211;&#x4EEC;&#x8BE5;&#x600E;&#x4E48;&#x9009;&#x62E9;&#x5462;&#xFF1F;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x6765;&#x8003;&#x5BDF;&#x4E00;&#x4E0B;&#x6027;&#x80FD;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 startTime := time.Now() for i := 0 ; i  10000 ; i++ { fmt.Sprintf( %d , i) } fmt.Println(time.Now().Sub(startTime)) startTime := time.Now() for i := 0 ; i  10000 ; i++ { strconv.Itoa(i) } fmt.Println(time.Now().Sub(startTime)) Sprintf &#x7684;&#x65F6;&#x95F4;&#x662F; 3.549761ms&#xFF0C;&#x800C; Itoa &#x7684;&#x65F6;&#x95F4;&#x662F; 848.208us&#xFF0C;&#x76F8;&#x5DEE; 4 &#x500D;&#x591A;&#x3002; Sprintf &#x6027;&#x80FD;&#x5DEE;&#x4E9B;&#x53EF;&#x4EE5;&#x9884;&#x89C1;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x63A5;&#x6536;&#x7684;&#x662F; interface &#xFF0C;&#x9700;&#x8981;&#x8FDB;&#x884C;&#x53CD;&#x5C04;&#x7B49;&#x64CD;&#x4F5C;&#x3002;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528; strconv &#x5305;&#x4E2D;&#x7684;&#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#x3002;"},"standards/text/strconv.html#字符串和布尔值之间的转换":{"title":"&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5E03;&#x5C14;&#x503C;&#x4E4B;&#x95F4;&#x7684;&#x8F6C;&#x6362;","path":"\\golang-learn\\standards\\text\\strconv.html#字符串和布尔值之间的转换","body":"Go &#x4E2D;&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5E03;&#x5C14;&#x503C;&#x4E4B;&#x95F4;&#x7684;&#x8F6C;&#x6362;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x4E3B;&#x8981;&#x6709;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#xFF1A; 1 2 3 4 5 6 // &#x63A5;&#x53D7; 1, t, T, TRUE, true, True, 0, f, F, FALSE, false, False &#x7B49;&#x5B57;&#x7B26;&#x4E32;&#xFF1B; // &#x5176;&#x4ED6;&#x5F62;&#x5F0F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x4F1A;&#x8FD4;&#x56DE;&#x9519;&#x8BEF; // &#x8FD4;&#x56DE;&#x8F6C;&#x6362;&#x540E;&#x7684;&#x5E03;&#x5C14;&#x503C; func ParseBool (str string ) (value bool , err error) // &#x76F4;&#x63A5;&#x8FD4;&#x56DE;  true  &#x6216;  false  func FormatBool (b bool ) string"},"standards/text/strconv.html#字符串和浮点数之间的转换":{"title":"&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x6D6E;&#x70B9;&#x6570;&#x4E4B;&#x95F4;&#x7684;&#x8F6C;&#x6362;","path":"\\golang-learn\\standards\\text\\strconv.html#字符串和浮点数之间的转换","body":"&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x5305;&#x542B;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#xFF1A; 1 2 3 4 5 // &#x65E0;&#x8BBA; bitSize &#x53D6;&#x503C;&#x5982;&#x4F55;&#xFF0C;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x90FD;&#x662F; float64&#x3002; func ParseFloat (s string , bitSize int ) (f float64 , err error) // &#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x8F93;&#x5165;&#x6D6E;&#x70B9;&#x6570; // &#x7B2C;&#x4E8C;&#x4E2A;&#x662F;&#x6D6E;&#x70B9;&#x6570;&#x7684;&#x663E;&#x793A;&#x683C;&#x5F0F;&#xFF08;&#x53EF;&#x4EE5;&#x662F; b , e , E , f , g , G &#xFF09; func FormatFloat (f float64 , fmt byte , prec, bitSize int ) string prec &#x8868;&#x793A;&#x6709;&#x6548;&#x6570;&#x5B57;&#xFF08;&#x5BF9; fmt=&apos;b&apos; &#x65E0;&#x6548;&#xFF09;&#xFF0C;&#x5BF9;&#x4E8E; &#x2018;e&#x2019;, &#x2018;E&#x2019; &#x548C; &#x2018;f&#x2019;&#xFF0C;&#x6709;&#x6548;&#x6570;&#x5B57;&#x7528;&#x4E8E;&#x5C0F;&#x6570;&#x70B9;&#x4E4B;&#x540E;&#x7684;&#x4F4D;&#x6570;&#xFF1B; &#x5BF9;&#x4E8E; &#x2018;g&#x2019; &#x548C; &#x2018;G&#x2019;&#xFF0C;&#x5219;&#x662F;&#x6240;&#x6709;&#x7684;&#x6709;&#x6548;&#x6570;&#x5B57;&#x3002;&#x4F8B;&#x5982;&#xFF1A; 1 2 strconv.FormatFloat( 1223.13252 , &apos;e&apos; , 3 , 32 )\t // &#x7ED3;&#x679C;&#xFF1A;1.223e+03 strconv.FormatFloat( 1223.13252 , &apos;g&apos; , 3 , 32 )\t // &#x7ED3;&#x679C;&#xFF1A;1.22e+03 &#x7531;&#x4E8E;&#x6D6E;&#x70B9;&#x6570;&#x6709;&#x7CBE;&#x5EA6;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x7CBE;&#x5EA6;&#x4E0D;&#x4E00;&#x6837;&#xFF0C; ParseFloat &#x548C; FormatFloat &#x53EF;&#x80FD;&#x8FBE;&#x4E0D;&#x5230;&#x4E92;&#x9006;&#x7684;&#x6548;&#x679C;&#x3002;&#x5982;&#xFF1A; 1 2 s := strconv.FormatFloat( 1234.5678 , &apos;g&apos; , 6 , 64 ) strconv.ParseFloat(s, 64 ) &#x53E6;&#x5916;&#xFF0C; fmt=&apos;b&apos; &#x65F6;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x65E0;&#x6CD5;&#x901A;&#x8FC7; ParseFloat &#x8FD8;&#x539F;&#x7684;&#x3002; &#x540C;&#x6837;&#x7684;&#xFF0C;&#x57FA;&#x4E8E;&#x6027;&#x80FD;&#x7684;&#x8003;&#x8651;&#xFF0C;&#x5E94;&#x8BE5;&#x4F7F;&#x7528; FormatFloat &#x800C;&#x4E0D;&#x662F; fmt.Sprintf &#x3002;"},"basic/reflect.html":{"title":"反射","path":"\\golang-learn\\basic\\reflect.html","body":"反射 反射机制，能够在运行时更新变量和检查它们的值、调用它们的方法和它们支持的内在操作，而不需要在编译时就知道 这些变量的具体类型。弥补了静态语言在动态行为上的一些不足。 reflect.TypeOf reflect.TypeOf 获取类型信息。 reflect.TypeOf 接受任意的 interface{} 类型, 并以 reflect.Type 形式返回其动态类型： 1 2 3 4 5 6 7 8 9 10 t := reflect.TypeOf( 3 ) // a reflect.Type fmt.Println(t.String()) // \"int\" fmt.Println(t) // \"int\" type X int func main ()  \t var a X = 20 \tt := reflect.TypeOf(a) \tfmt.Println(t.Name(), t.Kind()) // X int  上面的代码， 注意区分 Type 和 Kind，前者表示真实类型（静态类型），后者表示底层类型 。所以在判断类型时， 要选择正确的方式。 1 2 3 4 5 6 7 8 9 type X int type Y int func main ()  \t var a, b X = 10 , 20 \t var c Y = 30 \tta, tb, tc := reflect.TypeOf(a), reflect.TypeOf(b), reflect.TypeOf(c) \tfmt.Println(ta == tb, ta == tc) // true false \tfmt.Println(ta.Kind() == tc.Kind()) // true  reflect.ValueOf reflect.ValueOf 专注于对象实例数据读写。 reflect.ValueOf 接受任意的 interface{} 类型, 并以 reflect.Value 形式返回其动态值： 1 2 3 4 5 6 7 8 9 10 11 12 13 v := reflect.ValueOf( 3 ) // a reflect.Value fmt.Println(v) // \"3\" fmt.Printf( \"%v\\n\" , v) // \"3\" fmt.Println(v.String()) // NOTE: \"int Value\" x := struct  Name string expected val := reflect.ValueOf(x) field := val.Field( 0 ) fmt.Println(val) // Chris fmt.Println(field) // Chris fmt.Println(field.String()) // Chris 在 Go 中不能对切片使用等号运算符。你可以写一个函数迭代每个元素来检查它们的值。但是一种 比较简单的办法是使用 reflect.DeepEqual ，它在判断两个变量是否相等时十分有用。 1 2 3 4 5 6 7 8 9 func TestSumAll (t *testing.T)  got := SumAll([] int  1 , 2 , [] int  0 , 9 ) want := [] int  3 , 9  if !reflect.DeepEqual(got, want)  t.Errorf( \"got %v want %v\" , got, want)   注意 ， reflect.DeepEqual 不是「类型安全」的，所以有时候会发生比较怪异的行为。比如： 1 2 3 4 5 6 7 8 9 func TestSumAll (t *testing.T)  got := SumAll([] int  1 , 2 , [] int  0 , 9 ) want := \"bob\" if !reflect.DeepEqual(got, want)  t.Errorf( \"got %v want %v\" , got, want)   尝试比较 slice 和 string 。这显然是不合理的，但是却通过了测试。所以使用 reflect.DeepEqual 比较简洁但是在使用时需多加小心。"},"basic/reflect.html#反射":{"title":"&#x53CD;&#x5C04;","path":"\\golang-learn\\basic\\reflect.html#反射","body":"&#x53CD;&#x5C04;&#x673A;&#x5236;&#xFF0C;&#x80FD;&#x591F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x66F4;&#x65B0;&#x53D8;&#x91CF;&#x548C;&#x68C0;&#x67E5;&#x5B83;&#x4EEC;&#x7684;&#x503C;&#x3001;&#x8C03;&#x7528;&#x5B83;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x5B83;&#x4EEC;&#x652F;&#x6301;&#x7684;&#x5185;&#x5728;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x5C31;&#x77E5;&#x9053; &#x8FD9;&#x4E9B;&#x53D8;&#x91CF;&#x7684;&#x5177;&#x4F53;&#x7C7B;&#x578B;&#x3002;&#x5F25;&#x8865;&#x4E86;&#x9759;&#x6001;&#x8BED;&#x8A00;&#x5728;&#x52A8;&#x6001;&#x884C;&#x4E3A;&#x4E0A;&#x7684;&#x4E00;&#x4E9B;&#x4E0D;&#x8DB3;&#x3002;"},"basic/reflect.html#reflect-TypeOf":{"title":"reflect.TypeOf","path":"\\golang-learn\\basic\\reflect.html#reflect-TypeOf","body":"reflect.TypeOf &#x83B7;&#x53D6;&#x7C7B;&#x578B;&#x4FE1;&#x606F;&#x3002; reflect.TypeOf &#x63A5;&#x53D7;&#x4EFB;&#x610F;&#x7684; interface{} &#x7C7B;&#x578B;, &#x5E76;&#x4EE5; reflect.Type &#x5F62;&#x5F0F;&#x8FD4;&#x56DE;&#x5176;&#x52A8;&#x6001;&#x7C7B;&#x578B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 t := reflect.TypeOf( 3 ) // a reflect.Type fmt.Println(t.String()) // int fmt.Println(t) // int type X int func main () { \t var a X = 20 \tt := reflect.TypeOf(a) \tfmt.Println(t.Name(), t.Kind()) // X int } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C; &#x6CE8;&#x610F;&#x533A;&#x5206; Type &#x548C; Kind&#xFF0C;&#x524D;&#x8005;&#x8868;&#x793A;&#x771F;&#x5B9E;&#x7C7B;&#x578B;&#xFF08;&#x9759;&#x6001;&#x7C7B;&#x578B;&#xFF09;&#xFF0C;&#x540E;&#x8005;&#x8868;&#x793A;&#x5E95;&#x5C42;&#x7C7B;&#x578B; &#x3002;&#x6240;&#x4EE5;&#x5728;&#x5224;&#x65AD;&#x7C7B;&#x578B;&#x65F6;&#xFF0C; &#x8981;&#x9009;&#x62E9;&#x6B63;&#x786E;&#x7684;&#x65B9;&#x5F0F;&#x3002; 1 2 3 4 5 6 7 8 9 type X int type Y int func main () { \t var a, b X = 10 , 20 \t var c Y = 30 \tta, tb, tc := reflect.TypeOf(a), reflect.TypeOf(b), reflect.TypeOf(c) \tfmt.Println(ta == tb, ta == tc) // true false \tfmt.Println(ta.Kind() == tc.Kind()) // true }"},"basic/reflect.html#reflect-ValueOf":{"title":"reflect.ValueOf","path":"\\golang-learn\\basic\\reflect.html#reflect-ValueOf","body":"reflect.ValueOf &#x4E13;&#x6CE8;&#x4E8E;&#x5BF9;&#x8C61;&#x5B9E;&#x4F8B;&#x6570;&#x636E;&#x8BFB;&#x5199;&#x3002; reflect.ValueOf &#x63A5;&#x53D7;&#x4EFB;&#x610F;&#x7684; interface{} &#x7C7B;&#x578B;, &#x5E76;&#x4EE5; reflect.Value &#x5F62;&#x5F0F;&#x8FD4;&#x56DE;&#x5176;&#x52A8;&#x6001;&#x503C;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 v := reflect.ValueOf( 3 ) // a reflect.Value fmt.Println(v) // 3 fmt.Printf( %v\\n , v) // 3 fmt.Println(v.String()) // NOTE: int Value x := struct { Name string }{expected} val := reflect.ValueOf(x) field := val.Field( 0 ) fmt.Println(val) // {Chris} fmt.Println(field) // Chris fmt.Println(field.String()) // Chris &#x5728; Go &#x4E2D;&#x4E0D;&#x80FD;&#x5BF9;&#x5207;&#x7247;&#x4F7F;&#x7528;&#x7B49;&#x53F7;&#x8FD0;&#x7B97;&#x7B26;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x5199;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x8FED;&#x4EE3;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x6765;&#x68C0;&#x67E5;&#x5B83;&#x4EEC;&#x7684;&#x503C;&#x3002;&#x4F46;&#x662F;&#x4E00;&#x79CD; &#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x4F7F;&#x7528; reflect.DeepEqual &#xFF0C;&#x5B83;&#x5728;&#x5224;&#x65AD;&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x662F;&#x5426;&#x76F8;&#x7B49;&#x65F6;&#x5341;&#x5206;&#x6709;&#x7528;&#x3002; 1 2 3 4 5 6 7 8 9 func TestSumAll (t *testing.T) { got := SumAll([] int { 1 , 2 }, [] int { 0 , 9 }) want := [] int { 3 , 9 } if !reflect.DeepEqual(got, want) { t.Errorf( got %v want %v , got, want) } } &#x6CE8;&#x610F; &#xFF0C; reflect.DeepEqual &#x4E0D;&#x662F;&#x300C;&#x7C7B;&#x578B;&#x5B89;&#x5168;&#x300D;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6709;&#x65F6;&#x5019;&#x4F1A;&#x53D1;&#x751F;&#x6BD4;&#x8F83;&#x602A;&#x5F02;&#x7684;&#x884C;&#x4E3A;&#x3002;&#x6BD4;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 func TestSumAll (t *testing.T) { got := SumAll([] int { 1 , 2 }, [] int { 0 , 9 }) want := bob if !reflect.DeepEqual(got, want) { t.Errorf( got %v want %v , got, want) } } &#x5C1D;&#x8BD5;&#x6BD4;&#x8F83; slice &#x548C; string &#x3002;&#x8FD9;&#x663E;&#x7136;&#x662F;&#x4E0D;&#x5408;&#x7406;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5374;&#x901A;&#x8FC7;&#x4E86;&#x6D4B;&#x8BD5;&#x3002;&#x6240;&#x4EE5;&#x4F7F;&#x7528; reflect.DeepEqual &#x6BD4;&#x8F83;&#x7B80;&#x6D01;&#x4F46;&#x662F;&#x5728;&#x4F7F;&#x7528;&#x65F6;&#x9700;&#x591A;&#x52A0;&#x5C0F;&#x5FC3;&#x3002;"},"standards/text/unicode.html":{"title":"unicode","path":"\\golang-learn\\standards\\text\\unicode.html","body":"unicode go 对 unicode 的支持包含三个包 : unicode unicode/utf8 unicode/utf16 unicode 包包含基本的字符判断函数。utf8 包主要负责 rune 和 byte 之间的转换。utf16 包负责 rune 和 uint16 数组之间 的转换。 unicode 包 unicode 包含了对 rune 的判断。这个包把所有 unicode 涉及到的编码进行了分类，使用结构 1 2 3 4 5 type RangeTable struct  \tR16 []Range16 \tR32 []Range32 \tLatinOffset int  来表示这个功能的字符集。这些字符集都集中列表在 table.go 这个源码里面。 比如控制字符集： 1 2 3 4 5 6 7 8 9 var _Pc = &amp;RangeTable \tR16: []Range16 \t\t 0x005f , 0x203f , 8160 , \t\t 0x2040 , 0x2054 , 20 , \t\t 0xfe33 , 0xfe34 , 1 , \t\t 0xfe4d , 0xfe4f , 1 , \t\t 0xff3f , 0xff3f , 1 , \t,  回到包的函数，我们看到有下面这些判断函数： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 func IsControl(r rune) bool // 是否控制字符 func IsDigit(r rune) bool // 是否阿拉伯数字字符，即 0-9 func IsGraphic(r rune) bool // 是否图形字符 func IsLetter(r rune) bool // 是否字母 func IsLower(r rune) bool // 是否小写字符 func IsMark(r rune) bool // 是否符号字符 func IsNumber(r rune) bool // 是否数字字符，比如罗马数字Ⅷ也是数字字符 func IsOneOf(ranges []*RangeTable, r rune) bool // 是否是 RangeTable 中的一个 func IsPrint(r rune) bool // 是否可打印字符 func IsPunct(r rune) bool // 是否标点符号 func IsSpace(r rune) bool // 是否空格 func IsSymbol(r rune) bool // 是否符号字符 func IsTitle(r rune) bool // 是否 title case func IsUpper(r rune) bool // 是否大写字符 例子： 1 2 3 4 5 6 7 8 9 10 11 12 13 func main ()  \tsingle := '\\u0015' \tfmt.Println(unicode.IsControl(single)) //true \tsingle = '\\ufe35' \tfmt.Println(unicode.IsControl(single)) // false \tdigit := rune ( '1' ) \tfmt.Println(unicode.IsDigit(digit)) //true \tfmt.Println(unicode.IsNumber(digit)) //true \tletter := rune ( ' Ⅷ ' ) \tfmt.Println(unicode.IsDigit(letter)) //false \tfmt.Println(unicode.IsNumber(letter)) //true  utf8 包 utf8 里面的函数就有一些字节和字符的转换。 判断是否符合 utf8 编码的函数： 1 2 3 func Valid (p [] byte ) bool func ValidRune (r rune ) bool func ValidString (s string ) bool 判断 rune 的长度的函数： func RuneLen(r rune) int 判断字节串或者字符串的 rune 数 func RuneCount(p []byte) int func RuneCountInString(s string) (n int) 编码和解码 rune 到 byte func DecodeRune(p []byte) (r rune, size int) func EncodeRune(p []byte, r rune) int 2.5.3 utf16 包 utf16 的包的函数就比较少了。 将 int16 和 rune 进行转换 func Decode(s []uint16) []rune func Encode(s []rune) []uint16"},"standards/text/unicode.html#unicode":{"title":"unicode","path":"\\golang-learn\\standards\\text\\unicode.html#unicode","body":"go &#x5BF9; unicode &#x7684;&#x652F;&#x6301;&#x5305;&#x542B;&#x4E09;&#x4E2A;&#x5305; : unicode unicode/utf8 unicode/utf16 unicode &#x5305;&#x5305;&#x542B;&#x57FA;&#x672C;&#x7684;&#x5B57;&#x7B26;&#x5224;&#x65AD;&#x51FD;&#x6570;&#x3002;utf8 &#x5305;&#x4E3B;&#x8981;&#x8D1F;&#x8D23; rune &#x548C; byte &#x4E4B;&#x95F4;&#x7684;&#x8F6C;&#x6362;&#x3002;utf16 &#x5305;&#x8D1F;&#x8D23; rune &#x548C; uint16 &#x6570;&#x7EC4;&#x4E4B;&#x95F4; &#x7684;&#x8F6C;&#x6362;&#x3002;"},"standards/text/unicode.html#unicode-包":{"title":"unicode &#x5305;","path":"\\golang-learn\\standards\\text\\unicode.html#unicode-包","body":"unicode &#x5305;&#x542B;&#x4E86;&#x5BF9; rune &#x7684;&#x5224;&#x65AD;&#x3002;&#x8FD9;&#x4E2A;&#x5305;&#x628A;&#x6240;&#x6709; unicode &#x6D89;&#x53CA;&#x5230;&#x7684;&#x7F16;&#x7801;&#x8FDB;&#x884C;&#x4E86;&#x5206;&#x7C7B;&#xFF0C;&#x4F7F;&#x7528;&#x7ED3;&#x6784; 1 2 3 4 5 type RangeTable struct { \tR16 []Range16 \tR32 []Range32 \tLatinOffset int } &#x6765;&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x529F;&#x80FD;&#x7684;&#x5B57;&#x7B26;&#x96C6;&#x3002;&#x8FD9;&#x4E9B;&#x5B57;&#x7B26;&#x96C6;&#x90FD;&#x96C6;&#x4E2D;&#x5217;&#x8868;&#x5728; table.go &#x8FD9;&#x4E2A;&#x6E90;&#x7801;&#x91CC;&#x9762;&#x3002; &#x6BD4;&#x5982;&#x63A7;&#x5236;&#x5B57;&#x7B26;&#x96C6;&#xFF1A; 1 2 3 4 5 6 7 8 9 var _Pc = &amp;RangeTable{ \tR16: []Range16{ \t\t{ 0x005f , 0x203f , 8160 }, \t\t{ 0x2040 , 0x2054 , 20 }, \t\t{ 0xfe33 , 0xfe34 , 1 }, \t\t{ 0xfe4d , 0xfe4f , 1 }, \t\t{ 0xff3f , 0xff3f , 1 }, \t}, } &#x56DE;&#x5230;&#x5305;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x770B;&#x5230;&#x6709;&#x4E0B;&#x9762;&#x8FD9;&#x4E9B;&#x5224;&#x65AD;&#x51FD;&#x6570;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 func IsControl(r rune) bool // &#x662F;&#x5426;&#x63A7;&#x5236;&#x5B57;&#x7B26; func IsDigit(r rune) bool // &#x662F;&#x5426;&#x963F;&#x62C9;&#x4F2F;&#x6570;&#x5B57;&#x5B57;&#x7B26;&#xFF0C;&#x5373; 0-9 func IsGraphic(r rune) bool // &#x662F;&#x5426;&#x56FE;&#x5F62;&#x5B57;&#x7B26; func IsLetter(r rune) bool // &#x662F;&#x5426;&#x5B57;&#x6BCD; func IsLower(r rune) bool // &#x662F;&#x5426;&#x5C0F;&#x5199;&#x5B57;&#x7B26; func IsMark(r rune) bool // &#x662F;&#x5426;&#x7B26;&#x53F7;&#x5B57;&#x7B26; func IsNumber(r rune) bool // &#x662F;&#x5426;&#x6570;&#x5B57;&#x5B57;&#x7B26;&#xFF0C;&#x6BD4;&#x5982;&#x7F57;&#x9A6C;&#x6570;&#x5B57;&#x2167;&#x4E5F;&#x662F;&#x6570;&#x5B57;&#x5B57;&#x7B26; func IsOneOf(ranges []*RangeTable, r rune) bool // &#x662F;&#x5426;&#x662F; RangeTable &#x4E2D;&#x7684;&#x4E00;&#x4E2A; func IsPrint(r rune) bool // &#x662F;&#x5426;&#x53EF;&#x6253;&#x5370;&#x5B57;&#x7B26; func IsPunct(r rune) bool // &#x662F;&#x5426;&#x6807;&#x70B9;&#x7B26;&#x53F7; func IsSpace(r rune) bool // &#x662F;&#x5426;&#x7A7A;&#x683C; func IsSymbol(r rune) bool // &#x662F;&#x5426;&#x7B26;&#x53F7;&#x5B57;&#x7B26; func IsTitle(r rune) bool // &#x662F;&#x5426; title case func IsUpper(r rune) bool // &#x662F;&#x5426;&#x5927;&#x5199;&#x5B57;&#x7B26; &#x4F8B;&#x5B50;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 func main () { \tsingle := &apos;\\u0015&apos; \tfmt.Println(unicode.IsControl(single)) //true \tsingle = &apos;\\ufe35&apos; \tfmt.Println(unicode.IsControl(single)) // false \tdigit := rune ( &apos;1&apos; ) \tfmt.Println(unicode.IsDigit(digit)) //true \tfmt.Println(unicode.IsNumber(digit)) //true \tletter := rune ( &apos; &#x2167; &apos; ) \tfmt.Println(unicode.IsDigit(letter)) //false \tfmt.Println(unicode.IsNumber(letter)) //true }"},"standards/text/unicode.html#utf8-包":{"title":"utf8 &#x5305;","path":"\\golang-learn\\standards\\text\\unicode.html#utf8-包","body":"utf8 &#x91CC;&#x9762;&#x7684;&#x51FD;&#x6570;&#x5C31;&#x6709;&#x4E00;&#x4E9B;&#x5B57;&#x8282;&#x548C;&#x5B57;&#x7B26;&#x7684;&#x8F6C;&#x6362;&#x3002; &#x5224;&#x65AD;&#x662F;&#x5426;&#x7B26;&#x5408; utf8 &#x7F16;&#x7801;&#x7684;&#x51FD;&#x6570;&#xFF1A; 1 2 3 func Valid (p [] byte ) bool func ValidRune (r rune ) bool func ValidString (s string ) bool &#x5224;&#x65AD; rune &#x7684;&#x957F;&#x5EA6;&#x7684;&#x51FD;&#x6570;&#xFF1A; func RuneLen(r rune) int &#x5224;&#x65AD;&#x5B57;&#x8282;&#x4E32;&#x6216;&#x8005;&#x5B57;&#x7B26;&#x4E32;&#x7684; rune &#x6570; func RuneCount(p []byte) int func RuneCountInString(s string) (n int) &#x7F16;&#x7801;&#x548C;&#x89E3;&#x7801; rune &#x5230; byte func DecodeRune(p []byte) (r rune, size int) func EncodeRune(p []byte, r rune) int"},"standards/text/unicode.html#2-5-3-utf16-包":{"title":"2.5.3 utf16 &#x5305;","path":"\\golang-learn\\standards\\text\\unicode.html#2-5-3-utf16-包","body":"utf16 &#x7684;&#x5305;&#x7684;&#x51FD;&#x6570;&#x5C31;&#x6BD4;&#x8F83;&#x5C11;&#x4E86;&#x3002; &#x5C06; int16 &#x548C; rune &#x8FDB;&#x884C;&#x8F6C;&#x6362; func Decode(s []uint16) []rune func Encode(s []rune) []uint16"},"standards/data/container.html":{"title":"container","path":"\\golang-learn\\standards\\data\\container.html","body":"container container 该包实现了三个复杂的数据结构：链表，环，堆。也就是说使用这三个数据结构的时候不需要再从头开始写算法了。 链表 链表就是一个有 prev 和 next 指针的数组了。 container 包中有两个公开的结构—— List 和 Element ， List 实现了一个双向链表（简称链表）， 而 Element 则代表了链表中元素的结构。 1 2 3 4 5 6 7 8 9 10 type Element struct  \tnext, prev *Element // 上一个元素和下一个元素 \tlist *List // 元素所在链表 \tValue interface  // 元素  type List struct  \troot Element // 链表的根元素 \t len int // 链表的长度  List的四种方法: MoveBefore 方法和 MoveAfter 方法，它们分别用于把给定的元素移动到另一个元素的前面和后面。 MoveToFront 方法和 MoveToBack 方法，分别用于把给定的元素移动到链表的最前端和最后端。 1 2 3 4 5 6 7 8 9 // moves element \"e\" to its new position before \"mark\". func (l *List) MoveBefore (e, mark *Element) // moves element \" e \" to its new position after \" mark \". func (l *List) MoveAfter (e, mark *Element) // moves element \" e \" to the front of list \" l \". func (l *List) MoveToFront (e *Element) // moves element \" e \" to the back of list \" l \". func (l *List) MoveToBack (e *Element) “给定的元素”都是 *Element 类型。 如果我们自己生成这样的值，然后把它作为“给定的元素”传给链表的方法，那么会发生什么？链表会接受它吗？ 不会接受，这些方法将不会对链表做出任何改动。因为我们自己生成的 Element 值并不在链表中，所以也就谈不上“在链表中移动元素”。 InsertBefore 和 InsertAfter 方法分别用于在指定的元素之前和之后插入新元素。 PushFront 和 PushBack 方法则分别用于在链表的最前端和最后端插入新元素。 示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import ( \t \"container/list\" \t \"fmt\" ) func main ()  list := list.New() list.PushBack( 1 ) list.PushBack( 2 ) fmt.Printf( \"len: %v\\n\" , list.Len()) fmt.Printf( \"first: %#v\\n\" , list.Front()) fmt.Printf( \"second: %#v\\n\" , list.Front().Next())  output: len : 2 first: &amp;list.Elementnext:(*list.Element)( 0x2081be1b0 ), prev:(*list.Element)( 0x2081be150 ), list:(*list.List)( 0x2081be150 ), Value: 1  second: &amp;list.Elementnext:(*list.Element)( 0x2081be150 ), prev:(*list.Element)( 0x2081be180 ), list:(*list.List)( 0x2081be150 ), Value: 2  List 的其他方法： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 type Element func (e *Element) Next () * Element func (e *Element) Prev () * Element type List func New () * List func (l *List) Back () * Element // 最后一个元素 func (l *List) Front () * Element // 第一个元素 func (l *List) Init () * List // 链表初始化 func (l *List) InsertAfter (v interface , mark *Element) * Element // 在某个元素后插入 func (l *List) InsertBefore (v interface , mark *Element) * Element // 在某个元素前插入 func (l *List) Len () int // 在链表长度 func (l *List) PushBackList (other *List) // 在队列最后插入接上新队列 func (l *List) PushFrontList (other *List) // 在队列头部插入接上新队列 func (l *List) Remove (e *Element) interface  // 删除某个元素 环 环的结构有点特殊，环的尾部就是头部，指向环形链表任一元素的指针都可以作为整个环形链表看待。 它不需要像 List 一样保持 List 和 Element 两个结构，只需要保持一个结构就行。 1 2 3 4 type Ring struct  \tnext, prev *Ring \tValue interface   初始化环的时候，需要定义好环的大小，然后对环的每个元素进行赋值。环还提供一个 Do 方法，能遍历一遍环，对每个元素执行 一个 function 。 示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 package main import ( \t \"container/ring\" \t \"fmt\" ) func main ()  ring := ring.New( 3 ) for i := 1 ; i = 3 ; i++  ring.Value = i ring = ring.Next()  // 计算 1+2+3 s := 0 ring.Do( func (p interface )  s += p.( int ) ) fmt.Println( \"sum is\" , s)  output: sum is 6 ring 提供的方法有 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 type Ring func New (n int ) * Ring // 创建一个长度为 n 的环形链表 func (r *Ring) Do (f func ( interface ) ) // 遍历环形链表中的每一个元素 x 进行 f (x) 操作 func (r *Ring) Len () int // 获取环形链表长度 // 如果 r 和 s 在同一环形链表中，则删除 r 和 s 之间的元素， // 被删除的元素组成一个新的环形链表，返回值为该环形链表的指针（即删除前， r - Next () 表示的元素） // 如果 r 和 s 不在同一个环形链表中，则将 s 插入到 r 后面，返回值为 // 插入 s 后， s 最后一个元素的下一个元素（即插入前， r - Next () 表示的元素） func (r *Ring) Link (s *Ring) * Ring func (r *Ring) Move (n int ) * Ring // 移动 n % r . Len () 个位置， n 正负均可 func (r *Ring) Next () * Ring // 返回下一个元素 func (r *Ring) Prev () * Ring // 返回前一个元素 func (r *Ring) Unlink (n int ) * Ring // 删除 r 后面的 n % r . Len () 个元素 堆 什么是堆 堆（Heap，也叫优先队列）是计算机科学中一类特殊的数据结构的统称。 堆通常是一个可以被看做一棵树的数组对象 。 堆具有以下特性： 任意节点小于（或大于）它的所有后裔，最小元（或最大元）在堆的根上（堆序性）。 堆总是一棵完全树。即除了最底层，其他层的节点都被元素填满，且最底层尽可能地从左到右填入。 将根节点最大的堆叫做最大堆或大根堆，根节点最小的堆叫做最小堆或小根堆。 Heap heap 使用的数据结构是最小堆， heap 包只是实现了一个接口： 1 2 3 4 5 type Interface interface  sort.Interface Push(x interface ) // add x as element Len() Pop() interface  // remove and return element Len() - 1.  这个接口内嵌了 sort.Interface ，那么要实现 heap.Interface 要实现下面的方法： Len() int Less(i, j int) bool Swap(i, j int) Push(x interface{}) Pop() interface{} 示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 type IntHeap [] int func (h IntHeap) Len () int  return len (h)  func (h IntHeap) Less (i, j int ) bool  return h[i]  h[j]  func (h IntHeap) Swap (i, j int )  h[i], h[j] = h[j], h[i]  func (h *IntHeap) Push (x interface )  *h = append (*h, x.( int ))  func (h *IntHeap) Pop () interface   old := *h n := len (old) x := old[n -1 ] *h = old[ 0 : n -1 ] return x  heap 提供的方法 1 2 3 4 5 6 h := &amp;IntHeap 3 , 8 , 6  // 创建 IntHeap 类型的原始数据 func Init (h Interface) // 对 heap 进行初始化，生成小根堆（或大根堆） func Push (h Interface, x interface ) // 往堆里面插入内容 func Pop (h Interface) interface  // 从堆顶 pop 出内容 func Remove (h Interface, i int ) interface  // 从指定位置删除数据，并返回删除的数据 func Fix (h Interface, i int ) // 从 i 位置数据发生改变后，对堆再平衡，优先级队列使用到了该方法 实现优先级队列 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 package main import ( \"container/heap\" \"fmt\" ) type Item struct  value string // 优先级队列中的数据，可以是任意类型，这里使用 string priority int // 优先级队列中节点的优先级 index int // index 是该节点在堆中的位置  // 优先级队列需要实现 heap 的 Interface type PriorityQueue []*Item func (pq PriorityQueue) Len () int  return len (pq)  // 这里用的是小于号，生成的是最小堆 func (pq PriorityQueue) Less (i, j int ) bool  return pq[i].priority  pq[j].priority  func (pq PriorityQueue) Swap (i, j int )  pq[i], pq[j] = pq[j], pq[i] pq[i].index, pq[j].index = i, j  // 将 index 置为 -1 是为了标识该数据已经出了优先级队列了 func (pq *PriorityQueue) Pop () interface   old := *pq n := len (old) item := old[n -1 ] *pq = old[ 0 : n -1 ] item.index = -1 return item  func (pq *PriorityQueue) Push (x interface )  n := len (*pq) item := x.(*Item) item.index = n *pq = append (*pq, item)  // 更新修改了优先级和值的 item 在优先级队列中的位置 func (pq *PriorityQueue) update (item *Item, value string , priority int )  item.value = value item.priority = priority heap.Fix(pq, item.index)  func main ()  // 创建节点并设计他们的优先级 items := map [ string ] int  \"二毛\" : 5 , \"张三\" : 3 , \"狗蛋\" : 9  i := 0 pq := make (PriorityQueue, len (items)) // 创建优先级队列，并初始化 for k, v := range items  // 将节点放到优先级队列中 pq[i] = &amp;Item value: k, priority: v, index: i i++  heap.Init(&amp;pq) // 初始化堆 item := &amp;Item // 创建一个 item value: \"李四\" , priority: 1 ,  heap.Push(&amp;pq, item) // 入优先级队列 pq.update(item, item.value, 6 ) // 更新 item 的优先级 for len (pq)  0  item := heap.Pop(&amp;pq).(*Item) fmt.Printf( \"%.2d:%s index:%.2d\\n\" , item.priority, item.value, item.index)   // 输出结果： // 03:张三 index:-01 // 05:二毛 index:-01 // 06:李四 index:-01 // 09:狗蛋 index:-01"},"standards/data/container.html#container":{"title":"container","path":"\\golang-learn\\standards\\data\\container.html#container","body":"container &#x8BE5;&#x5305;&#x5B9E;&#x73B0;&#x4E86;&#x4E09;&#x4E2A;&#x590D;&#x6742;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF1A;&#x94FE;&#x8868;&#xFF0C;&#x73AF;&#xFF0C;&#x5806;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x4F7F;&#x7528;&#x8FD9;&#x4E09;&#x4E2A;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x65F6;&#x5019;&#x4E0D;&#x9700;&#x8981;&#x518D;&#x4ECE;&#x5934;&#x5F00;&#x59CB;&#x5199;&#x7B97;&#x6CD5;&#x4E86;&#x3002;"},"standards/data/container.html#链表":{"title":"&#x94FE;&#x8868;","path":"\\golang-learn\\standards\\data\\container.html#链表","body":"&#x94FE;&#x8868;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6709; prev &#x548C; next &#x6307;&#x9488;&#x7684;&#x6570;&#x7EC4;&#x4E86;&#x3002; container &#x5305;&#x4E2D;&#x6709;&#x4E24;&#x4E2A;&#x516C;&#x5F00;&#x7684;&#x7ED3;&#x6784;&#x2014;&#x2014; List &#x548C; Element &#xFF0C; List &#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x53CC;&#x5411;&#x94FE;&#x8868;&#xFF08;&#x7B80;&#x79F0;&#x94FE;&#x8868;&#xFF09;&#xFF0C; &#x800C; Element &#x5219;&#x4EE3;&#x8868;&#x4E86;&#x94FE;&#x8868;&#x4E2D;&#x5143;&#x7D20;&#x7684;&#x7ED3;&#x6784;&#x3002; 1 2 3 4 5 6 7 8 9 10 type Element struct { \tnext, prev *Element // &#x4E0A;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x548C;&#x4E0B;&#x4E00;&#x4E2A;&#x5143;&#x7D20; \tlist *List // &#x5143;&#x7D20;&#x6240;&#x5728;&#x94FE;&#x8868; \tValue interface {} // &#x5143;&#x7D20; } type List struct { \troot Element // &#x94FE;&#x8868;&#x7684;&#x6839;&#x5143;&#x7D20; \t len int // &#x94FE;&#x8868;&#x7684;&#x957F;&#x5EA6; } List&#x7684;&#x56DB;&#x79CD;&#x65B9;&#x6CD5;: MoveBefore &#x65B9;&#x6CD5;&#x548C; MoveAfter &#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x4EEC;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x628A;&#x7ED9;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x79FB;&#x52A8;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x524D;&#x9762;&#x548C;&#x540E;&#x9762;&#x3002; MoveToFront &#x65B9;&#x6CD5;&#x548C; MoveToBack &#x65B9;&#x6CD5;&#xFF0C;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x628A;&#x7ED9;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x79FB;&#x52A8;&#x5230;&#x94FE;&#x8868;&#x7684;&#x6700;&#x524D;&#x7AEF;&#x548C;&#x6700;&#x540E;&#x7AEF;&#x3002; 1 2 3 4 5 6 7 8 9 // moves element e to its new position before mark. func (l *List) MoveBefore (e, mark *Element) // moves element  e  to its new position after  mark . func (l *List) MoveAfter (e, mark *Element) // moves element  e  to the front of list  l . func (l *List) MoveToFront (e *Element) // moves element  e  to the back of list  l . func (l *List) MoveToBack (e *Element) &#x201C;&#x7ED9;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x201D;&#x90FD;&#x662F; *Element &#x7C7B;&#x578B;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x751F;&#x6210;&#x8FD9;&#x6837;&#x7684;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x5B83;&#x4F5C;&#x4E3A;&#x201C;&#x7ED9;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x201D;&#x4F20;&#x7ED9;&#x94FE;&#x8868;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x53D1;&#x751F;&#x4EC0;&#x4E48;&#xFF1F;&#x94FE;&#x8868;&#x4F1A;&#x63A5;&#x53D7;&#x5B83;&#x5417;&#xFF1F; &#x4E0D;&#x4F1A;&#x63A5;&#x53D7;&#xFF0C;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x5C06;&#x4E0D;&#x4F1A;&#x5BF9;&#x94FE;&#x8868;&#x505A;&#x51FA;&#x4EFB;&#x4F55;&#x6539;&#x52A8;&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x751F;&#x6210;&#x7684; Element &#x503C;&#x5E76;&#x4E0D;&#x5728;&#x94FE;&#x8868;&#x4E2D;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x5C31;&#x8C08;&#x4E0D;&#x4E0A;&#x201C;&#x5728;&#x94FE;&#x8868;&#x4E2D;&#x79FB;&#x52A8;&#x5143;&#x7D20;&#x201D;&#x3002; InsertBefore &#x548C; InsertAfter &#x65B9;&#x6CD5;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5728;&#x6307;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x4E4B;&#x524D;&#x548C;&#x4E4B;&#x540E;&#x63D2;&#x5165;&#x65B0;&#x5143;&#x7D20;&#x3002; PushFront &#x548C; PushBack &#x65B9;&#x6CD5;&#x5219;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5728;&#x94FE;&#x8868;&#x7684;&#x6700;&#x524D;&#x7AEF;&#x548C;&#x6700;&#x540E;&#x7AEF;&#x63D2;&#x5165;&#x65B0;&#x5143;&#x7D20;&#x3002; &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import ( \t container/list \t fmt ) func main () { list := list.New() list.PushBack( 1 ) list.PushBack( 2 ) fmt.Printf( len: %v\\n , list.Len()) fmt.Printf( first: %#v\\n , list.Front()) fmt.Printf( second: %#v\\n , list.Front().Next()) } output: len : 2 first: &amp;list.Element{next:(*list.Element)( 0x2081be1b0 ), prev:(*list.Element)( 0x2081be150 ), list:(*list.List)( 0x2081be150 ), Value: 1 } second: &amp;list.Element{next:(*list.Element)( 0x2081be150 ), prev:(*list.Element)( 0x2081be180 ), list:(*list.List)( 0x2081be150 ), Value: 2 } List &#x7684;&#x5176;&#x4ED6;&#x65B9;&#x6CD5;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 type Element func (e *Element) Next () * Element func (e *Element) Prev () * Element type List func New () * List func (l *List) Back () * Element // &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20; func (l *List) Front () * Element // &#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20; func (l *List) Init () * List // &#x94FE;&#x8868;&#x521D;&#x59CB;&#x5316; func (l *List) InsertAfter (v interface {}, mark *Element) * Element // &#x5728;&#x67D0;&#x4E2A;&#x5143;&#x7D20;&#x540E;&#x63D2;&#x5165; func (l *List) InsertBefore (v interface {}, mark *Element) * Element // &#x5728;&#x67D0;&#x4E2A;&#x5143;&#x7D20;&#x524D;&#x63D2;&#x5165; func (l *List) Len () int // &#x5728;&#x94FE;&#x8868;&#x957F;&#x5EA6; func (l *List) PushBackList (other *List) // &#x5728;&#x961F;&#x5217;&#x6700;&#x540E;&#x63D2;&#x5165;&#x63A5;&#x4E0A;&#x65B0;&#x961F;&#x5217; func (l *List) PushFrontList (other *List) // &#x5728;&#x961F;&#x5217;&#x5934;&#x90E8;&#x63D2;&#x5165;&#x63A5;&#x4E0A;&#x65B0;&#x961F;&#x5217; func (l *List) Remove (e *Element) interface {} // &#x5220;&#x9664;&#x67D0;&#x4E2A;&#x5143;&#x7D20;"},"standards/data/container.html#环":{"title":"&#x73AF;","path":"\\golang-learn\\standards\\data\\container.html#环","body":"&#x73AF;&#x7684;&#x7ED3;&#x6784;&#x6709;&#x70B9;&#x7279;&#x6B8A;&#xFF0C;&#x73AF;&#x7684;&#x5C3E;&#x90E8;&#x5C31;&#x662F;&#x5934;&#x90E8;&#xFF0C;&#x6307;&#x5411;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x4EFB;&#x4E00;&#x5143;&#x7D20;&#x7684;&#x6307;&#x9488;&#x90FD;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x6574;&#x4E2A;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x770B;&#x5F85;&#x3002; &#x5B83;&#x4E0D;&#x9700;&#x8981;&#x50CF; List &#x4E00;&#x6837;&#x4FDD;&#x6301; List &#x548C; Element &#x4E24;&#x4E2A;&#x7ED3;&#x6784;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4FDD;&#x6301;&#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x5C31;&#x884C;&#x3002; 1 2 3 4 type Ring struct { \tnext, prev *Ring \tValue interface {} } &#x521D;&#x59CB;&#x5316;&#x73AF;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x5B9A;&#x4E49;&#x597D;&#x73AF;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x7136;&#x540E;&#x5BF9;&#x73AF;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x8FDB;&#x884C;&#x8D4B;&#x503C;&#x3002;&#x73AF;&#x8FD8;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A; Do &#x65B9;&#x6CD5;&#xFF0C;&#x80FD;&#x904D;&#x5386;&#x4E00;&#x904D;&#x73AF;&#xFF0C;&#x5BF9;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x6267;&#x884C; &#x4E00;&#x4E2A; function &#x3002; &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 package main import ( \t container/ring \t fmt ) func main () { ring := ring.New( 3 ) for i := 1 ; i = 3 ; i++ { ring.Value = i ring = ring.Next() } // &#x8BA1;&#x7B97; 1+2+3 s := 0 ring.Do( func (p interface {}) { s += p.( int ) }) fmt.Println( sum is , s) } output: sum is 6 ring &#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x6CD5;&#x6709; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 type Ring func New (n int ) * Ring // &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x957F;&#x5EA6;&#x4E3A; n &#x7684;&#x73AF;&#x5F62;&#x94FE;&#x8868; func (r *Ring) Do (f func ( interface {}) ) // &#x904D;&#x5386;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5143;&#x7D20; x &#x8FDB;&#x884C; f (x) &#x64CD;&#x4F5C; func (r *Ring) Len () int // &#x83B7;&#x53D6;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x957F;&#x5EA6; // &#x5982;&#x679C; r &#x548C; s &#x5728;&#x540C;&#x4E00;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x4E2D;&#xFF0C;&#x5219;&#x5220;&#x9664; r &#x548C; s &#x4E4B;&#x95F4;&#x7684;&#x5143;&#x7D20;&#xFF0C; // &#x88AB;&#x5220;&#x9664;&#x7684;&#x5143;&#x7D20;&#x7EC4;&#x6210;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x4E3A;&#x8BE5;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x7684;&#x6307;&#x9488;&#xFF08;&#x5373;&#x5220;&#x9664;&#x524D;&#xFF0C; r - Next () &#x8868;&#x793A;&#x7684;&#x5143;&#x7D20;&#xFF09; // &#x5982;&#x679C; r &#x548C; s &#x4E0D;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x73AF;&#x5F62;&#x94FE;&#x8868;&#x4E2D;&#xFF0C;&#x5219;&#x5C06; s &#x63D2;&#x5165;&#x5230; r &#x540E;&#x9762;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x4E3A; // &#x63D2;&#x5165; s &#x540E;&#xFF0C; s &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF08;&#x5373;&#x63D2;&#x5165;&#x524D;&#xFF0C; r - Next () &#x8868;&#x793A;&#x7684;&#x5143;&#x7D20;&#xFF09; func (r *Ring) Link (s *Ring) * Ring func (r *Ring) Move (n int ) * Ring // &#x79FB;&#x52A8; n % r . Len () &#x4E2A;&#x4F4D;&#x7F6E;&#xFF0C; n &#x6B63;&#x8D1F;&#x5747;&#x53EF; func (r *Ring) Next () * Ring // &#x8FD4;&#x56DE;&#x4E0B;&#x4E00;&#x4E2A;&#x5143;&#x7D20; func (r *Ring) Prev () * Ring // &#x8FD4;&#x56DE;&#x524D;&#x4E00;&#x4E2A;&#x5143;&#x7D20; func (r *Ring) Unlink (n int ) * Ring // &#x5220;&#x9664; r &#x540E;&#x9762;&#x7684; n % r . Len () &#x4E2A;&#x5143;&#x7D20;"},"standards/data/container.html#堆":{"title":"&#x5806;","path":"\\golang-learn\\standards\\data\\container.html#堆","body":"&#x4EC0;&#x4E48;&#x662F;&#x5806; &#x5806;&#xFF08;Heap&#xFF0C;&#x4E5F;&#x53EB;&#x4F18;&#x5148;&#x961F;&#x5217;&#xFF09;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x79D1;&#x5B66;&#x4E2D;&#x4E00;&#x7C7B;&#x7279;&#x6B8A;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x7EDF;&#x79F0;&#x3002; &#x5806;&#x901A;&#x5E38;&#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x88AB;&#x770B;&#x505A;&#x4E00;&#x68F5;&#x6811;&#x7684;&#x6570;&#x7EC4;&#x5BF9;&#x8C61; &#x3002; &#x5806;&#x5177;&#x6709;&#x4EE5;&#x4E0B;&#x7279;&#x6027;&#xFF1A; &#x4EFB;&#x610F;&#x8282;&#x70B9;&#x5C0F;&#x4E8E;&#xFF08;&#x6216;&#x5927;&#x4E8E;&#xFF09;&#x5B83;&#x7684;&#x6240;&#x6709;&#x540E;&#x88D4;&#xFF0C;&#x6700;&#x5C0F;&#x5143;&#xFF08;&#x6216;&#x6700;&#x5927;&#x5143;&#xFF09;&#x5728;&#x5806;&#x7684;&#x6839;&#x4E0A;&#xFF08;&#x5806;&#x5E8F;&#x6027;&#xFF09;&#x3002; &#x5806;&#x603B;&#x662F;&#x4E00;&#x68F5;&#x5B8C;&#x5168;&#x6811;&#x3002;&#x5373;&#x9664;&#x4E86;&#x6700;&#x5E95;&#x5C42;&#xFF0C;&#x5176;&#x4ED6;&#x5C42;&#x7684;&#x8282;&#x70B9;&#x90FD;&#x88AB;&#x5143;&#x7D20;&#x586B;&#x6EE1;&#xFF0C;&#x4E14;&#x6700;&#x5E95;&#x5C42;&#x5C3D;&#x53EF;&#x80FD;&#x5730;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x586B;&#x5165;&#x3002; &#x5C06;&#x6839;&#x8282;&#x70B9;&#x6700;&#x5927;&#x7684;&#x5806;&#x53EB;&#x505A;&#x6700;&#x5927;&#x5806;&#x6216;&#x5927;&#x6839;&#x5806;&#xFF0C;&#x6839;&#x8282;&#x70B9;&#x6700;&#x5C0F;&#x7684;&#x5806;&#x53EB;&#x505A;&#x6700;&#x5C0F;&#x5806;&#x6216;&#x5C0F;&#x6839;&#x5806;&#x3002; Heap heap &#x4F7F;&#x7528;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x662F;&#x6700;&#x5C0F;&#x5806;&#xFF0C; heap &#x5305;&#x53EA;&#x662F;&#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF1A; 1 2 3 4 5 type Interface interface { sort.Interface Push(x interface {}) // add x as element Len() Pop() interface {} // remove and return element Len() - 1. } &#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x5185;&#x5D4C;&#x4E86; sort.Interface &#xFF0C;&#x90A3;&#x4E48;&#x8981;&#x5B9E;&#x73B0; heap.Interface &#x8981;&#x5B9E;&#x73B0;&#x4E0B;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#xFF1A; Len() int Less(i, j int) bool Swap(i, j int) Push(x interface{}) Pop() interface{} &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 type IntHeap [] int func (h IntHeap) Len () int { return len (h) } func (h IntHeap) Less (i, j int ) bool { return h[i]  h[j] } func (h IntHeap) Swap (i, j int ) { h[i], h[j] = h[j], h[i] } func (h *IntHeap) Push (x interface {}) { *h = append (*h, x.( int )) } func (h *IntHeap) Pop () interface {} { old := *h n := len (old) x := old[n -1 ] *h = old[ 0 : n -1 ] return x } heap &#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x6CD5; 1 2 3 4 5 6 h := &amp;IntHeap{ 3 , 8 , 6 } // &#x521B;&#x5EFA; IntHeap &#x7C7B;&#x578B;&#x7684;&#x539F;&#x59CB;&#x6570;&#x636E; func Init (h Interface) // &#x5BF9; heap &#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x751F;&#x6210;&#x5C0F;&#x6839;&#x5806;&#xFF08;&#x6216;&#x5927;&#x6839;&#x5806;&#xFF09; func Push (h Interface, x interface {}) // &#x5F80;&#x5806;&#x91CC;&#x9762;&#x63D2;&#x5165;&#x5185;&#x5BB9; func Pop (h Interface) interface {} // &#x4ECE;&#x5806;&#x9876; pop &#x51FA;&#x5185;&#x5BB9; func Remove (h Interface, i int ) interface {} // &#x4ECE;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x5220;&#x9664;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x5220;&#x9664;&#x7684;&#x6570;&#x636E; func Fix (h Interface, i int ) // &#x4ECE; i &#x4F4D;&#x7F6E;&#x6570;&#x636E;&#x53D1;&#x751F;&#x6539;&#x53D8;&#x540E;&#xFF0C;&#x5BF9;&#x5806;&#x518D;&#x5E73;&#x8861;&#xFF0C;&#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217;&#x4F7F;&#x7528;&#x5230;&#x4E86;&#x8BE5;&#x65B9;&#x6CD5; &#x5B9E;&#x73B0;&#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 package main import ( container/heap fmt ) type Item struct { value string // &#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#xFF0C;&#x8FD9;&#x91CC;&#x4F7F;&#x7528; string priority int // &#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217;&#x4E2D;&#x8282;&#x70B9;&#x7684;&#x4F18;&#x5148;&#x7EA7; index int // index &#x662F;&#x8BE5;&#x8282;&#x70B9;&#x5728;&#x5806;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E; } // &#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217;&#x9700;&#x8981;&#x5B9E;&#x73B0; heap &#x7684; Interface type PriorityQueue []*Item func (pq PriorityQueue) Len () int { return len (pq) } // &#x8FD9;&#x91CC;&#x7528;&#x7684;&#x662F;&#x5C0F;&#x4E8E;&#x53F7;&#xFF0C;&#x751F;&#x6210;&#x7684;&#x662F;&#x6700;&#x5C0F;&#x5806; func (pq PriorityQueue) Less (i, j int ) bool { return pq[i].priority  pq[j].priority } func (pq PriorityQueue) Swap (i, j int ) { pq[i], pq[j] = pq[j], pq[i] pq[i].index, pq[j].index = i, j } // &#x5C06; index &#x7F6E;&#x4E3A; -1 &#x662F;&#x4E3A;&#x4E86;&#x6807;&#x8BC6;&#x8BE5;&#x6570;&#x636E;&#x5DF2;&#x7ECF;&#x51FA;&#x4E86;&#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217;&#x4E86; func (pq *PriorityQueue) Pop () interface {} { old := *pq n := len (old) item := old[n -1 ] *pq = old[ 0 : n -1 ] item.index = -1 return item } func (pq *PriorityQueue) Push (x interface {}) { n := len (*pq) item := x.(*Item) item.index = n *pq = append (*pq, item) } // &#x66F4;&#x65B0;&#x4FEE;&#x6539;&#x4E86;&#x4F18;&#x5148;&#x7EA7;&#x548C;&#x503C;&#x7684; item &#x5728;&#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E; func (pq *PriorityQueue) update (item *Item, value string , priority int ) { item.value = value item.priority = priority heap.Fix(pq, item.index) } func main () { // &#x521B;&#x5EFA;&#x8282;&#x70B9;&#x5E76;&#x8BBE;&#x8BA1;&#x4ED6;&#x4EEC;&#x7684;&#x4F18;&#x5148;&#x7EA7; items := map [ string ] int { &#x4E8C;&#x6BDB; : 5 , &#x5F20;&#x4E09; : 3 , &#x72D7;&#x86CB; : 9 } i := 0 pq := make (PriorityQueue, len (items)) // &#x521B;&#x5EFA;&#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217;&#xFF0C;&#x5E76;&#x521D;&#x59CB;&#x5316; for k, v := range items { // &#x5C06;&#x8282;&#x70B9;&#x653E;&#x5230;&#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217;&#x4E2D; pq[i] = &amp;Item{ value: k, priority: v, index: i} i++ } heap.Init(&amp;pq) // &#x521D;&#x59CB;&#x5316;&#x5806; item := &amp;Item{ // &#x521B;&#x5EFA;&#x4E00;&#x4E2A; item value: &#x674E;&#x56DB; , priority: 1 , } heap.Push(&amp;pq, item) // &#x5165;&#x4F18;&#x5148;&#x7EA7;&#x961F;&#x5217; pq.update(item, item.value, 6 ) // &#x66F4;&#x65B0; item &#x7684;&#x4F18;&#x5148;&#x7EA7; for len (pq)  0 { item := heap.Pop(&amp;pq).(*Item) fmt.Printf( %.2d:%s index:%.2d\\n , item.priority, item.value, item.index) } } // &#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1A; // 03:&#x5F20;&#x4E09; index:-01 // 05:&#x4E8C;&#x6BDB; index:-01 // 06:&#x674E;&#x56DB; index:-01 // 09:&#x72D7;&#x86CB; index:-01"},"standards/io/bufio.html":{"title":"bufio","path":"\\golang-learn\\standards\\io\\bufio.html","body":"bufio bufio 包实现了缓存 IO。提供了数据缓冲功能，能够一定程度减少大块数据读写带来的开销。封装了 io.Reader 和 io.Writer 对象。 bufio包中的数据类型 bufio包中的数据类型主要有： Reader ； Scanner ； Writer 和 ReadWriter 。 bufio.Reader 两个用于初始化 bufio.Reader 的函数： NewReader 函数初始化的 Reader 值会拥有一个默认尺寸的缓冲区。这个默认尺寸是 4096 个字节，即： 4 KB 。 NewReaderSize 函数则将缓冲区尺寸的决定权抛给了使用方。 1 2 3 func NewReader (rd io.Reader) * Reader func NewReaderSize (rd io.Reader, size int ) * Reader // 可以配置缓冲区的大小 bufio.Reader 类型值中的缓冲区的作用 缓冲区其实就是一个 数据存储中介，它介于底层读取器与读取方法及其调用方之间 。所谓的底层读取器是指 io.Reader 。 Reader 值的读取方法一般都会先从其所属值的缓冲区中读取数据。同时，在必要的时候，它们还会预先从底层读取器那里读出一部分数据，并暂 存于缓冲区之中以备后用。 缓冲区的好处是，可以在大多数的时候降低读取方法的执行时间。 1 2 3 4 5 6 7 8 type Reader struct  buf [] byte rd io.Reader r, w int err error lastByte int lastRuneSize int  bufio.Reader 字段： buf ： []byte 类型的字段，即字节切片，代表缓冲区。虽然它是切片类型的，但是其长度却会在初始化的时候指定，并在之后保持不变。 rd ： io.Reader 类型的字段，代表底层读取器。缓冲区中的数据就是从这里拷贝来的。 r ： int 类型的字段，代表对缓冲区进行下一次读取时的开始索引。我们可以称它为已读计数。 w ： int 类型的字段，代表对缓冲区进行下一次写入时的开始索引。我们可以称之为已写计数。 err ： error 类型的字段。它的值用于表示在从底层读取器获得数据时发生的错误。这里的值在被读取或忽略之后，该字段会被置为 nil 。 lastByte ： int 类型的字段，用于记录缓冲区中最后一个被读取的字节。读回退时会用到它的值。 lastRuneSize ： int 类型的字段，用于记录缓冲区中最后一个被读取的 Unicode 字符所占用的字节数。读回退的时候会用到它的值。这个字 段只会在其所属值的 ReadRune 方法中才会被赋予有意义的值。在其他情况下，它都会被置为 -1 。 bufio.Reader 类型读取方法 ReadSlice、ReadBytes、ReadString 和 ReadLine 后三个方法最终都是调用 ReadSlice 来实现的。所以，我们先来看看 ReadSlice 方法。 ReadSlice方法 ： 1 func (b *Reader) ReadSlice (delim byte ) (line [] byte , err error) ReadSlice 从输入中读取，直到遇到第一个界定符（delim）为止，返回一个指向缓存中字节的 slice ，在下次调用读操作（ read ）时，这些字节会 无效： 1 2 3 4 5 6 reader := bufio.NewReader(strings.NewReader( \"Hello \\nworld\" )) line, _ := reader.ReadSlice( '\\n' ) fmt.Printf( \"the line:%s\\n\" , line) // the line:Hello n, _ := reader.ReadSlice( '\\n' ) fmt.Printf( \"the line:%s\\n\" , line) // the line:world fmt.Println( string (n)) // world 从结果可以看出，第一次 ReadSlice 的结果 line ，在第二次调用读操作后，内容发生了变化。也就是说， ReadSlice 返回的 []byte 是指 向 Reader 中的 buffer ，而不是 copy 一份返回。正因为 ReadSlice 返回的数据会被下次的 I/O 操作重写，因此许多的客户端会选择 使用 ReadBytes 或者 ReadString 来代替。 注意，这里的界定符可以是任意的字符。同时，返回的结果是包含界定符本身的。 如果 ReadSlice 在找到界定符之前遇到了 error ，它就会返回缓存中所有的数据和错误本身（经常是 io.EOF ）。如果在找到界定符之前缓存已经 满了， ReadSlice 会返回 bufio.ErrBufferFull 错误。当且仅当返回的结果（ line ）没有以界定符结束的时候， ReadSlice 返 回 err != nil ，也就是说，如果 ReadSlice 返回的结果 line 不是以界定符 delim 结尾，那么返回的 err 也一定不等于 nil 。 ReadBytes 方法 ： 1 func (b *Reader) ReadBytes (delim byte ) (line [] byte , err error) 该方法的参数和返回值类型与 ReadSlice 都一样。 ReadBytes 从输入中读取直到遇到界定符（delim）为止，返回的 slice 包含了从当前到 界定符的内容 （包括界定符） 。 ReadBytes 源码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 func (b *Reader) ReadBytes (delim byte ) ([] byte , error)  \t // Use ReadSlice to look for array, \t // accumulating full buffers. \t var frag [] byte \t var full [][] byte \t var err error \t for  \t\t var e error \t\tfrag, e = b.ReadSlice(delim) \t\t if e == nil  // got final fragment \t\t\t break \t\t \t\t if e != ErrBufferFull  // unexpected error \t\t\terr = e \t\t\t break \t\t \t\t // Make a copy of the buffer. \t\tbuf := make ([] byte , len (frag)) // 这里把 ReadSlice 的返回值 copy 了一份，不再是指向 Reader 中的 buffer \t\t copy (buf, frag) \t\tfull = append (full, buf) \t \t // Allocate new buffer to hold the full pieces and the fragment. \tn := 0 \t for i := range full  \t\tn += len (full[i]) \t \tn += len (frag) \t // Copy full pieces and fragment in. \tbuf := make ([] byte , n) \tn = 0 \t for i := range full  \t\tn += copy (buf[n:], full[i]) \t \t copy (buf[n:], frag) \t return buf, err  ReadString 方法 ReadString 源码： 1 2 3 4 func (b *Reader) ReadString (delim byte ) (line string , err error)  bytes, err := b.ReadBytes(delim) return string (bytes), err  调用了 ReadBytes 方法，并将结果的 []byte 转为 string 类型。 ReadLine 方法 1 func (b *Reader) ReadLine () (line [] byte , isPrefix bool , err error) ReadLine 是一个底层的原始行读取命令。可以使用 ReadBytes(&#39;\\n&#39;) 或者 ReadString(&#39;\\n&#39;) 来代替这个方法。 ReadLine 尝试返回单独的行，不包括行尾的换行符 。如果一行大于缓存， isPrefix 会被设置为 true ，同时返回该行的开始部分 （等于缓存大小的部分）。该行剩余的部分就会在下次调用的时候返回。当下次调用返回该行剩余部分时， isPrefix 将会是 false 。 跟 ReadSlice 一样， 返回的 line 是 buffer 的引用 ，在下次执行 IO 操作时， line 会无效。 建议读取一行使用下面的方式： 1 2 line, err := reader.ReadBytes( '\\n' ) line = bytes.TrimRight(line, \"\\r\\n\" ) Peek 方法 Peek 是 “窥视” 的意思， Peek 一个鲜明的特点，就是：即使它读取了缓冲区中的数据，也不会更改已读计数的值。 1 func (b *Reader) Peek (n int ) ([] byte , error) 返回的 []byte 是 buffer 中的引用 ，该切片引用缓存中前 n 字节数据。 Peek 方法、 ReadSlice 方法和 ReadLine 方法都有可能会造成内容泄露。这主要是因为它们在正常的情况下都会返回直接基于缓冲区的字节切片， 也因为为这个原因对多 goroutine 是不安全的，也就是在多并发环境下，不能依赖其结果。 。 另外，Reader 的 Peek 方法如果返回的 []byte 长度小于 n，这时返回的 err != nil ，用于解释为啥会小于 n。如果 n 大于 reader 的 buffer 长度，err 会是 ErrBufferFull。 其他方法 1 2 3 4 5 6 func (b *Reader) Read (p [] byte ) (n int , err error) func (b *Reader) ReadByte () (c byte , err error) func (b *Reader) ReadRune () (r rune , size int , err error) func (b *Reader) UnreadByte () error func (b *Reader) UnreadRune () error func (b *Reader) WriteTo (w io.Writer) (n int64 , err error) bufio.Writer bufio.Writer 结构封装了一个 io.Writer 对象。同时实现了 io.Writer 接口。 1 2 3 4 5 6 type Writer struct  err error\t\t // 写过程中遇到的错误 buf [] byte \t\t // 缓存 n int \t\t\t // 当前缓存中的字节数 wr io.Writer\t // 底层的 io.Writer 对象  bufio.Writer 类型的字段: err ： error 类型的字段。它的值用于表示在向底层写入器写数据时发生的错误。 buf ： []byte 类型的字段，代表缓冲区。在初始化之后，它的长度会保持不变。 n ： int 类型的字段，代表对缓冲区进行下一次写入时的开始索引。我们可以称之为已写计数。 wr ： io.Writer 类型的字段，代表底层写入器。 两个用于初始化 bufio.Writer 的函数： NewWriter 函数初始化的 Writer 值会拥有一个默认尺寸的缓冲区。这个默认尺寸是 4096 个字节，即： 4 KB 。 NewWriterSize 函数则将缓冲区尺寸的决定权抛给了使用方。 1 2 3 func NewWriter (wr io.Writer) * Writer func NewWriterSize (wr io.Writer, size int ) * Writer // 可以配置缓冲区的大小 方法 Available 方法获取缓存中还未使用的字节数（缓存大小 - 字段 n 的值） Buffered 方法获取写入当前缓存中的字节数（字段 n 的值） Flush 方法将缓存中的所有数据写入底层的 io.Writer 对象中。 其他实现了 io 包的接口方法： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 实现了 io.ReaderFrom 接口 func (b *Writer) ReadFrom (r io.Reader) (n int64 , err error) // 实现了 io . Writer 接口 func (b *Writer) Write (p [] byte ) (nn int , err error) // 实现了 io . ByteWriter 接口 func (b *Writer) WriteByte (c byte ) error // io 中没有该方法的接口，它用于写入单个 Unicode 码点，返回写入的字节数（码点占用的字节），内部实现会根据当前 rune 的范围调用 WriteByte 或 WriteString func (b *Writer) WriteRune (r rune ) (size int , err error) // 写入字符串，如果返回写入的字节数比 len (s) 小，返回的 error 会解释原因 func (b *Writer) WriteString (s string ) ( int , error) bufio.Writer 类型值中缓冲的数据什么时候会被写到它的底层写入器 bufio.Writer 类型有一个名为 Flush 的方法，它的主要功能是把相应缓冲区中暂存的所有数据，都写到底层写入器中。数据一旦被写进底层写入器， 该方法就会把它们从缓冲区中删除掉。 bufio.Writer 类型值（以下简称 Writer 值）拥有的所有数据写入方法都会在必要的时候调用它的 Flush 方法。 比如， Write 方法有时候会在把数据写进缓冲区之后，调用 Flush 方法，以便为后续的新数据腾出空间。 WriteString 方法的行为与之类似。 WriteByte 方法和 WriteRune 方法，都会在发现缓冲区中的可写空间不足以容纳新的字节，或 Unicode 字符的时候，调用 Flush 方法。 在 通常情况下，只要缓冲区中的可写空间无法容纳需要写入的新数据， Flush 方法就一定会被调用 。 ReadWriter 1 2 3 4 type ReadWriter struct  *Reader *Writer  通过调用 bufio.NewReadWriter 函数来初始化： 1 func NewReadWriter (r *Reader, w *Writer) * ReadWriter"},"standards/io/bufio.html#bufio":{"title":"bufio","path":"\\golang-learn\\standards\\io\\bufio.html#bufio","body":"bufio &#x5305;&#x5B9E;&#x73B0;&#x4E86;&#x7F13;&#x5B58; IO&#x3002;&#x63D0;&#x4F9B;&#x4E86;&#x6570;&#x636E;&#x7F13;&#x51B2;&#x529F;&#x80FD;&#xFF0C;&#x80FD;&#x591F;&#x4E00;&#x5B9A;&#x7A0B;&#x5EA6;&#x51CF;&#x5C11;&#x5927;&#x5757;&#x6570;&#x636E;&#x8BFB;&#x5199;&#x5E26;&#x6765;&#x7684;&#x5F00;&#x9500;&#x3002;&#x5C01;&#x88C5;&#x4E86; io.Reader &#x548C; io.Writer &#x5BF9;&#x8C61;&#x3002;"},"standards/io/bufio.html#bufio包中的数据类型":{"title":"bufio&#x5305;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;","path":"\\golang-learn\\standards\\io\\bufio.html#bufio包中的数据类型","body":"bufio&#x5305;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E3B;&#x8981;&#x6709;&#xFF1A; Reader &#xFF1B; Scanner &#xFF1B; Writer &#x548C; ReadWriter &#x3002;"},"standards/io/bufio.html#bufio-Reader":{"title":"bufio.Reader","path":"\\golang-learn\\standards\\io\\bufio.html#bufio-Reader","body":"&#x4E24;&#x4E2A;&#x7528;&#x4E8E;&#x521D;&#x59CB;&#x5316; bufio.Reader &#x7684;&#x51FD;&#x6570;&#xFF1A; NewReader &#x51FD;&#x6570;&#x521D;&#x59CB;&#x5316;&#x7684; Reader &#x503C;&#x4F1A;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x5C3A;&#x5BF8;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x8FD9;&#x4E2A;&#x9ED8;&#x8BA4;&#x5C3A;&#x5BF8;&#x662F; 4096 &#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x5373;&#xFF1A; 4 KB &#x3002; NewReaderSize &#x51FD;&#x6570;&#x5219;&#x5C06;&#x7F13;&#x51B2;&#x533A;&#x5C3A;&#x5BF8;&#x7684;&#x51B3;&#x5B9A;&#x6743;&#x629B;&#x7ED9;&#x4E86;&#x4F7F;&#x7528;&#x65B9;&#x3002; 1 2 3 func NewReader (rd io.Reader) * Reader func NewReaderSize (rd io.Reader, size int ) * Reader // &#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x5927;&#x5C0F; bufio.Reader &#x7C7B;&#x578B;&#x503C;&#x4E2D;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x4F5C;&#x7528; &#x7F13;&#x51B2;&#x533A;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E00;&#x4E2A; &#x6570;&#x636E;&#x5B58;&#x50A8;&#x4E2D;&#x4ECB;&#xFF0C;&#x5B83;&#x4ECB;&#x4E8E;&#x5E95;&#x5C42;&#x8BFB;&#x53D6;&#x5668;&#x4E0E;&#x8BFB;&#x53D6;&#x65B9;&#x6CD5;&#x53CA;&#x5176;&#x8C03;&#x7528;&#x65B9;&#x4E4B;&#x95F4; &#x3002;&#x6240;&#x8C13;&#x7684;&#x5E95;&#x5C42;&#x8BFB;&#x53D6;&#x5668;&#x662F;&#x6307; io.Reader &#x3002; Reader &#x503C;&#x7684;&#x8BFB;&#x53D6;&#x65B9;&#x6CD5;&#x4E00;&#x822C;&#x90FD;&#x4F1A;&#x5148;&#x4ECE;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x5728;&#x5FC5;&#x8981;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x4EEC;&#x8FD8;&#x4F1A;&#x9884;&#x5148;&#x4ECE;&#x5E95;&#x5C42;&#x8BFB;&#x53D6;&#x5668;&#x90A3;&#x91CC;&#x8BFB;&#x51FA;&#x4E00;&#x90E8;&#x5206;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x6682; &#x5B58;&#x4E8E;&#x7F13;&#x51B2;&#x533A;&#x4E4B;&#x4E2D;&#x4EE5;&#x5907;&#x540E;&#x7528;&#x3002; &#x7F13;&#x51B2;&#x533A;&#x7684;&#x597D;&#x5904;&#x662F;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5927;&#x591A;&#x6570;&#x7684;&#x65F6;&#x5019;&#x964D;&#x4F4E;&#x8BFB;&#x53D6;&#x65B9;&#x6CD5;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x3002; 1 2 3 4 5 6 7 8 type Reader struct { buf [] byte rd io.Reader r, w int err error lastByte int lastRuneSize int } bufio.Reader &#x5B57;&#x6BB5;&#xFF1A; buf &#xFF1A; []byte &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x5373;&#x5B57;&#x8282;&#x5207;&#x7247;&#xFF0C;&#x4EE3;&#x8868;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x867D;&#x7136;&#x5B83;&#x662F;&#x5207;&#x7247;&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x957F;&#x5EA6;&#x5374;&#x4F1A;&#x5728;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#x6307;&#x5B9A;&#xFF0C;&#x5E76;&#x5728;&#x4E4B;&#x540E;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#x3002; rd &#xFF1A; io.Reader &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x5E95;&#x5C42;&#x8BFB;&#x53D6;&#x5668;&#x3002;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x5C31;&#x662F;&#x4ECE;&#x8FD9;&#x91CC;&#x62F7;&#x8D1D;&#x6765;&#x7684;&#x3002; r &#xFF1A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x5BF9;&#x7F13;&#x51B2;&#x533A;&#x8FDB;&#x884C;&#x4E0B;&#x4E00;&#x6B21;&#x8BFB;&#x53D6;&#x65F6;&#x7684;&#x5F00;&#x59CB;&#x7D22;&#x5F15;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x79F0;&#x5B83;&#x4E3A;&#x5DF2;&#x8BFB;&#x8BA1;&#x6570;&#x3002; w &#xFF1A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x5BF9;&#x7F13;&#x51B2;&#x533A;&#x8FDB;&#x884C;&#x4E0B;&#x4E00;&#x6B21;&#x5199;&#x5165;&#x65F6;&#x7684;&#x5F00;&#x59CB;&#x7D22;&#x5F15;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x79F0;&#x4E4B;&#x4E3A;&#x5DF2;&#x5199;&#x8BA1;&#x6570;&#x3002; err &#xFF1A; error &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x3002;&#x5B83;&#x7684;&#x503C;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x5728;&#x4ECE;&#x5E95;&#x5C42;&#x8BFB;&#x53D6;&#x5668;&#x83B7;&#x5F97;&#x6570;&#x636E;&#x65F6;&#x53D1;&#x751F;&#x7684;&#x9519;&#x8BEF;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x503C;&#x5728;&#x88AB;&#x8BFB;&#x53D6;&#x6216;&#x5FFD;&#x7565;&#x4E4B;&#x540E;&#xFF0C;&#x8BE5;&#x5B57;&#x6BB5;&#x4F1A;&#x88AB;&#x7F6E;&#x4E3A; nil &#x3002; lastByte &#xFF1A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x88AB;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x3002;&#x8BFB;&#x56DE;&#x9000;&#x65F6;&#x4F1A;&#x7528;&#x5230;&#x5B83;&#x7684;&#x503C;&#x3002; lastRuneSize &#xFF1A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x88AB;&#x8BFB;&#x53D6;&#x7684; Unicode &#x5B57;&#x7B26;&#x6240;&#x5360;&#x7528;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002;&#x8BFB;&#x56DE;&#x9000;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x7528;&#x5230;&#x5B83;&#x7684;&#x503C;&#x3002;&#x8FD9;&#x4E2A;&#x5B57; &#x6BB5;&#x53EA;&#x4F1A;&#x5728;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x7684; ReadRune &#x65B9;&#x6CD5;&#x4E2D;&#x624D;&#x4F1A;&#x88AB;&#x8D4B;&#x4E88;&#x6709;&#x610F;&#x4E49;&#x7684;&#x503C;&#x3002;&#x5728;&#x5176;&#x4ED6;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5B83;&#x90FD;&#x4F1A;&#x88AB;&#x7F6E;&#x4E3A; -1 &#x3002; bufio.Reader &#x7C7B;&#x578B;&#x8BFB;&#x53D6;&#x65B9;&#x6CD5; ReadSlice&#x3001;ReadBytes&#x3001;ReadString &#x548C; ReadLine &#x540E;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#x6700;&#x7EC8;&#x90FD;&#x662F;&#x8C03;&#x7528; ReadSlice &#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x4EEC;&#x5148;&#x6765;&#x770B;&#x770B; ReadSlice &#x65B9;&#x6CD5;&#x3002; ReadSlice&#x65B9;&#x6CD5; &#xFF1A; 1 func (b *Reader) ReadSlice (delim byte ) (line [] byte , err error) ReadSlice &#x4ECE;&#x8F93;&#x5165;&#x4E2D;&#x8BFB;&#x53D6;&#xFF0C;&#x76F4;&#x5230;&#x9047;&#x5230;&#x7B2C;&#x4E00;&#x4E2A;&#x754C;&#x5B9A;&#x7B26;&#xFF08;delim&#xFF09;&#x4E3A;&#x6B62;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x6307;&#x5411;&#x7F13;&#x5B58;&#x4E2D;&#x5B57;&#x8282;&#x7684; slice &#xFF0C;&#x5728;&#x4E0B;&#x6B21;&#x8C03;&#x7528;&#x8BFB;&#x64CD;&#x4F5C;&#xFF08; read &#xFF09;&#x65F6;&#xFF0C;&#x8FD9;&#x4E9B;&#x5B57;&#x8282;&#x4F1A; &#x65E0;&#x6548;&#xFF1A; 1 2 3 4 5 6 reader := bufio.NewReader(strings.NewReader( Hello \\nworld )) line, _ := reader.ReadSlice( &apos;\\n&apos; ) fmt.Printf( the line:%s\\n , line) // the line:Hello n, _ := reader.ReadSlice( &apos;\\n&apos; ) fmt.Printf( the line:%s\\n , line) // the line:world fmt.Println( string (n)) // world &#x4ECE;&#x7ED3;&#x679C;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21; ReadSlice &#x7684;&#x7ED3;&#x679C; line &#xFF0C;&#x5728;&#x7B2C;&#x4E8C;&#x6B21;&#x8C03;&#x7528;&#x8BFB;&#x64CD;&#x4F5C;&#x540E;&#xFF0C;&#x5185;&#x5BB9;&#x53D1;&#x751F;&#x4E86;&#x53D8;&#x5316;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C; ReadSlice &#x8FD4;&#x56DE;&#x7684; []byte &#x662F;&#x6307; &#x5411; Reader &#x4E2D;&#x7684; buffer &#xFF0C;&#x800C;&#x4E0D;&#x662F; copy &#x4E00;&#x4EFD;&#x8FD4;&#x56DE;&#x3002;&#x6B63;&#x56E0;&#x4E3A; ReadSlice &#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;&#x4F1A;&#x88AB;&#x4E0B;&#x6B21;&#x7684; I/O &#x64CD;&#x4F5C;&#x91CD;&#x5199;&#xFF0C;&#x56E0;&#x6B64;&#x8BB8;&#x591A;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x4F1A;&#x9009;&#x62E9; &#x4F7F;&#x7528; ReadBytes &#x6216;&#x8005; ReadString &#x6765;&#x4EE3;&#x66FF;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x754C;&#x5B9A;&#x7B26;&#x53EF;&#x4EE5;&#x662F;&#x4EFB;&#x610F;&#x7684;&#x5B57;&#x7B26;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x5305;&#x542B;&#x754C;&#x5B9A;&#x7B26;&#x672C;&#x8EAB;&#x7684;&#x3002; &#x5982;&#x679C; ReadSlice &#x5728;&#x627E;&#x5230;&#x754C;&#x5B9A;&#x7B26;&#x4E4B;&#x524D;&#x9047;&#x5230;&#x4E86; error &#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x8FD4;&#x56DE;&#x7F13;&#x5B58;&#x4E2D;&#x6240;&#x6709;&#x7684;&#x6570;&#x636E;&#x548C;&#x9519;&#x8BEF;&#x672C;&#x8EAB;&#xFF08;&#x7ECF;&#x5E38;&#x662F; io.EOF &#xFF09;&#x3002;&#x5982;&#x679C;&#x5728;&#x627E;&#x5230;&#x754C;&#x5B9A;&#x7B26;&#x4E4B;&#x524D;&#x7F13;&#x5B58;&#x5DF2;&#x7ECF; &#x6EE1;&#x4E86;&#xFF0C; ReadSlice &#x4F1A;&#x8FD4;&#x56DE; bufio.ErrBufferFull &#x9519;&#x8BEF;&#x3002;&#x5F53;&#x4E14;&#x4EC5;&#x5F53;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#xFF08; line &#xFF09;&#x6CA1;&#x6709;&#x4EE5;&#x754C;&#x5B9A;&#x7B26;&#x7ED3;&#x675F;&#x7684;&#x65F6;&#x5019;&#xFF0C; ReadSlice &#x8FD4; &#x56DE; err != nil &#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5982;&#x679C; ReadSlice &#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C; line &#x4E0D;&#x662F;&#x4EE5;&#x754C;&#x5B9A;&#x7B26; delim &#x7ED3;&#x5C3E;&#xFF0C;&#x90A3;&#x4E48;&#x8FD4;&#x56DE;&#x7684; err &#x4E5F;&#x4E00;&#x5B9A;&#x4E0D;&#x7B49;&#x4E8E; nil &#x3002; ReadBytes &#x65B9;&#x6CD5; &#xFF1A; 1 func (b *Reader) ReadBytes (delim byte ) (line [] byte , err error) &#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x4E0E; ReadSlice &#x90FD;&#x4E00;&#x6837;&#x3002; ReadBytes &#x4ECE;&#x8F93;&#x5165;&#x4E2D;&#x8BFB;&#x53D6;&#x76F4;&#x5230;&#x9047;&#x5230;&#x754C;&#x5B9A;&#x7B26;&#xFF08;delim&#xFF09;&#x4E3A;&#x6B62;&#xFF0C;&#x8FD4;&#x56DE;&#x7684; slice &#x5305;&#x542B;&#x4E86;&#x4ECE;&#x5F53;&#x524D;&#x5230; &#x754C;&#x5B9A;&#x7B26;&#x7684;&#x5185;&#x5BB9; &#xFF08;&#x5305;&#x62EC;&#x754C;&#x5B9A;&#x7B26;&#xFF09; &#x3002; ReadBytes &#x6E90;&#x7801;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 func (b *Reader) ReadBytes (delim byte ) ([] byte , error) { \t // Use ReadSlice to look for array, \t // accumulating full buffers. \t var frag [] byte \t var full [][] byte \t var err error \t for { \t\t var e error \t\tfrag, e = b.ReadSlice(delim) \t\t if e == nil { // got final fragment \t\t\t break \t\t} \t\t if e != ErrBufferFull { // unexpected error \t\t\terr = e \t\t\t break \t\t} \t\t // Make a copy of the buffer. \t\tbuf := make ([] byte , len (frag)) // &#x8FD9;&#x91CC;&#x628A; ReadSlice &#x7684;&#x8FD4;&#x56DE;&#x503C; copy &#x4E86;&#x4E00;&#x4EFD;&#xFF0C;&#x4E0D;&#x518D;&#x662F;&#x6307;&#x5411; Reader &#x4E2D;&#x7684; buffer \t\t copy (buf, frag) \t\tfull = append (full, buf) \t} \t // Allocate new buffer to hold the full pieces and the fragment. \tn := 0 \t for i := range full { \t\tn += len (full[i]) \t} \tn += len (frag) \t // Copy full pieces and fragment in. \tbuf := make ([] byte , n) \tn = 0 \t for i := range full { \t\tn += copy (buf[n:], full[i]) \t} \t copy (buf[n:], frag) \t return buf, err } ReadString &#x65B9;&#x6CD5; ReadString &#x6E90;&#x7801;&#xFF1A; 1 2 3 4 func (b *Reader) ReadString (delim byte ) (line string , err error) { bytes, err := b.ReadBytes(delim) return string (bytes), err } &#x8C03;&#x7528;&#x4E86; ReadBytes &#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x5C06;&#x7ED3;&#x679C;&#x7684; []byte &#x8F6C;&#x4E3A; string &#x7C7B;&#x578B;&#x3002; ReadLine &#x65B9;&#x6CD5; 1 func (b *Reader) ReadLine () (line [] byte , isPrefix bool , err error) ReadLine &#x662F;&#x4E00;&#x4E2A;&#x5E95;&#x5C42;&#x7684;&#x539F;&#x59CB;&#x884C;&#x8BFB;&#x53D6;&#x547D;&#x4EE4;&#x3002;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; ReadBytes(&apos;\\n&apos;) &#x6216;&#x8005; ReadString(&apos;\\n&apos;) &#x6765;&#x4EE3;&#x66FF;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x3002; ReadLine &#x5C1D;&#x8BD5;&#x8FD4;&#x56DE;&#x5355;&#x72EC;&#x7684;&#x884C;&#xFF0C;&#x4E0D;&#x5305;&#x62EC;&#x884C;&#x5C3E;&#x7684;&#x6362;&#x884C;&#x7B26; &#x3002;&#x5982;&#x679C;&#x4E00;&#x884C;&#x5927;&#x4E8E;&#x7F13;&#x5B58;&#xFF0C; isPrefix &#x4F1A;&#x88AB;&#x8BBE;&#x7F6E;&#x4E3A; true &#xFF0C;&#x540C;&#x65F6;&#x8FD4;&#x56DE;&#x8BE5;&#x884C;&#x7684;&#x5F00;&#x59CB;&#x90E8;&#x5206; &#xFF08;&#x7B49;&#x4E8E;&#x7F13;&#x5B58;&#x5927;&#x5C0F;&#x7684;&#x90E8;&#x5206;&#xFF09;&#x3002;&#x8BE5;&#x884C;&#x5269;&#x4F59;&#x7684;&#x90E8;&#x5206;&#x5C31;&#x4F1A;&#x5728;&#x4E0B;&#x6B21;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#x8FD4;&#x56DE;&#x3002;&#x5F53;&#x4E0B;&#x6B21;&#x8C03;&#x7528;&#x8FD4;&#x56DE;&#x8BE5;&#x884C;&#x5269;&#x4F59;&#x90E8;&#x5206;&#x65F6;&#xFF0C; isPrefix &#x5C06;&#x4F1A;&#x662F; false &#x3002; &#x8DDF; ReadSlice &#x4E00;&#x6837;&#xFF0C; &#x8FD4;&#x56DE;&#x7684; line &#x662F; buffer &#x7684;&#x5F15;&#x7528; &#xFF0C;&#x5728;&#x4E0B;&#x6B21;&#x6267;&#x884C; IO &#x64CD;&#x4F5C;&#x65F6;&#xFF0C; line &#x4F1A;&#x65E0;&#x6548;&#x3002; &#x5EFA;&#x8BAE;&#x8BFB;&#x53D6;&#x4E00;&#x884C;&#x4F7F;&#x7528;&#x4E0B;&#x9762;&#x7684;&#x65B9;&#x5F0F;&#xFF1A; 1 2 line, err := reader.ReadBytes( &apos;\\n&apos; ) line = bytes.TrimRight(line, \\r\\n ) Peek &#x65B9;&#x6CD5; Peek &#x662F; &#x201C;&#x7AA5;&#x89C6;&#x201D; &#x7684;&#x610F;&#x601D;&#xFF0C; Peek &#x4E00;&#x4E2A;&#x9C9C;&#x660E;&#x7684;&#x7279;&#x70B9;&#xFF0C;&#x5C31;&#x662F;&#xFF1A;&#x5373;&#x4F7F;&#x5B83;&#x8BFB;&#x53D6;&#x4E86;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x4E0D;&#x4F1A;&#x66F4;&#x6539;&#x5DF2;&#x8BFB;&#x8BA1;&#x6570;&#x7684;&#x503C;&#x3002; 1 func (b *Reader) Peek (n int ) ([] byte , error) &#x8FD4;&#x56DE;&#x7684; []byte &#x662F; buffer &#x4E2D;&#x7684;&#x5F15;&#x7528; &#xFF0C;&#x8BE5;&#x5207;&#x7247;&#x5F15;&#x7528;&#x7F13;&#x5B58;&#x4E2D;&#x524D; n &#x5B57;&#x8282;&#x6570;&#x636E;&#x3002; Peek &#x65B9;&#x6CD5;&#x3001; ReadSlice &#x65B9;&#x6CD5;&#x548C; ReadLine &#x65B9;&#x6CD5;&#x90FD;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x9020;&#x6210;&#x5185;&#x5BB9;&#x6CC4;&#x9732;&#x3002;&#x8FD9;&#x4E3B;&#x8981;&#x662F;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x5728;&#x6B63;&#x5E38;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x90FD;&#x4F1A;&#x8FD4;&#x56DE;&#x76F4;&#x63A5;&#x57FA;&#x4E8E;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x5B57;&#x8282;&#x5207;&#x7247;&#xFF0C; &#x4E5F;&#x56E0;&#x4E3A;&#x4E3A;&#x8FD9;&#x4E2A;&#x539F;&#x56E0;&#x5BF9;&#x591A; goroutine &#x662F;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x591A;&#x5E76;&#x53D1;&#x73AF;&#x5883;&#x4E0B;&#xFF0C;&#x4E0D;&#x80FD;&#x4F9D;&#x8D56;&#x5176;&#x7ED3;&#x679C;&#x3002; &#x3002; &#x53E6;&#x5916;&#xFF0C;Reader &#x7684; Peek &#x65B9;&#x6CD5;&#x5982;&#x679C;&#x8FD4;&#x56DE;&#x7684; []byte &#x957F;&#x5EA6;&#x5C0F;&#x4E8E; n&#xFF0C;&#x8FD9;&#x65F6;&#x8FD4;&#x56DE;&#x7684; err != nil &#xFF0C;&#x7528;&#x4E8E;&#x89E3;&#x91CA;&#x4E3A;&#x5565;&#x4F1A;&#x5C0F;&#x4E8E; n&#x3002;&#x5982;&#x679C; n &#x5927;&#x4E8E; reader &#x7684; buffer &#x957F;&#x5EA6;&#xFF0C;err &#x4F1A;&#x662F; ErrBufferFull&#x3002; &#x5176;&#x4ED6;&#x65B9;&#x6CD5; 1 2 3 4 5 6 func (b *Reader) Read (p [] byte ) (n int , err error) func (b *Reader) ReadByte () (c byte , err error) func (b *Reader) ReadRune () (r rune , size int , err error) func (b *Reader) UnreadByte () error func (b *Reader) UnreadRune () error func (b *Reader) WriteTo (w io.Writer) (n int64 , err error)"},"standards/io/bufio.html#bufio-Writer":{"title":"bufio.Writer","path":"\\golang-learn\\standards\\io\\bufio.html#bufio-Writer","body":"bufio.Writer &#x7ED3;&#x6784;&#x5C01;&#x88C5;&#x4E86;&#x4E00;&#x4E2A; io.Writer &#x5BF9;&#x8C61;&#x3002;&#x540C;&#x65F6;&#x5B9E;&#x73B0;&#x4E86; io.Writer &#x63A5;&#x53E3;&#x3002; 1 2 3 4 5 6 type Writer struct { err error\t\t // &#x5199;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x9519;&#x8BEF; buf [] byte \t\t // &#x7F13;&#x5B58; n int \t\t\t // &#x5F53;&#x524D;&#x7F13;&#x5B58;&#x4E2D;&#x7684;&#x5B57;&#x8282;&#x6570; wr io.Writer\t // &#x5E95;&#x5C42;&#x7684; io.Writer &#x5BF9;&#x8C61; } bufio.Writer &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;: err &#xFF1A; error &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x3002;&#x5B83;&#x7684;&#x503C;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x5728;&#x5411;&#x5E95;&#x5C42;&#x5199;&#x5165;&#x5668;&#x5199;&#x6570;&#x636E;&#x65F6;&#x53D1;&#x751F;&#x7684;&#x9519;&#x8BEF;&#x3002; buf &#xFF1A; []byte &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x5728;&#x521D;&#x59CB;&#x5316;&#x4E4B;&#x540E;&#xFF0C;&#x5B83;&#x7684;&#x957F;&#x5EA6;&#x4F1A;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#x3002; n &#xFF1A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x5BF9;&#x7F13;&#x51B2;&#x533A;&#x8FDB;&#x884C;&#x4E0B;&#x4E00;&#x6B21;&#x5199;&#x5165;&#x65F6;&#x7684;&#x5F00;&#x59CB;&#x7D22;&#x5F15;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x79F0;&#x4E4B;&#x4E3A;&#x5DF2;&#x5199;&#x8BA1;&#x6570;&#x3002; wr &#xFF1A; io.Writer &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x5E95;&#x5C42;&#x5199;&#x5165;&#x5668;&#x3002; &#x4E24;&#x4E2A;&#x7528;&#x4E8E;&#x521D;&#x59CB;&#x5316; bufio.Writer &#x7684;&#x51FD;&#x6570;&#xFF1A; NewWriter &#x51FD;&#x6570;&#x521D;&#x59CB;&#x5316;&#x7684; Writer &#x503C;&#x4F1A;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x5C3A;&#x5BF8;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x8FD9;&#x4E2A;&#x9ED8;&#x8BA4;&#x5C3A;&#x5BF8;&#x662F; 4096 &#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x5373;&#xFF1A; 4 KB &#x3002; NewWriterSize &#x51FD;&#x6570;&#x5219;&#x5C06;&#x7F13;&#x51B2;&#x533A;&#x5C3A;&#x5BF8;&#x7684;&#x51B3;&#x5B9A;&#x6743;&#x629B;&#x7ED9;&#x4E86;&#x4F7F;&#x7528;&#x65B9;&#x3002; 1 2 3 func NewWriter (wr io.Writer) * Writer func NewWriterSize (wr io.Writer, size int ) * Writer // &#x53EF;&#x4EE5;&#x914D;&#x7F6E;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x5927;&#x5C0F; &#x65B9;&#x6CD5; Available &#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x7F13;&#x5B58;&#x4E2D;&#x8FD8;&#x672A;&#x4F7F;&#x7528;&#x7684;&#x5B57;&#x8282;&#x6570;&#xFF08;&#x7F13;&#x5B58;&#x5927;&#x5C0F; - &#x5B57;&#x6BB5; n &#x7684;&#x503C;&#xFF09; Buffered &#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5199;&#x5165;&#x5F53;&#x524D;&#x7F13;&#x5B58;&#x4E2D;&#x7684;&#x5B57;&#x8282;&#x6570;&#xFF08;&#x5B57;&#x6BB5; n &#x7684;&#x503C;&#xFF09; Flush &#x65B9;&#x6CD5;&#x5C06;&#x7F13;&#x5B58;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x5199;&#x5165;&#x5E95;&#x5C42;&#x7684; io.Writer &#x5BF9;&#x8C61;&#x4E2D;&#x3002; &#x5176;&#x4ED6;&#x5B9E;&#x73B0;&#x4E86; io &#x5305;&#x7684;&#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // &#x5B9E;&#x73B0;&#x4E86; io.ReaderFrom &#x63A5;&#x53E3; func (b *Writer) ReadFrom (r io.Reader) (n int64 , err error) // &#x5B9E;&#x73B0;&#x4E86; io . Writer &#x63A5;&#x53E3; func (b *Writer) Write (p [] byte ) (nn int , err error) // &#x5B9E;&#x73B0;&#x4E86; io . ByteWriter &#x63A5;&#x53E3; func (b *Writer) WriteByte (c byte ) error // io &#x4E2D;&#x6CA1;&#x6709;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x5B83;&#x7528;&#x4E8E;&#x5199;&#x5165;&#x5355;&#x4E2A; Unicode &#x7801;&#x70B9;&#xFF0C;&#x8FD4;&#x56DE;&#x5199;&#x5165;&#x7684;&#x5B57;&#x8282;&#x6570;&#xFF08;&#x7801;&#x70B9;&#x5360;&#x7528;&#x7684;&#x5B57;&#x8282;&#xFF09;&#xFF0C;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x4F1A;&#x6839;&#x636E;&#x5F53;&#x524D; rune &#x7684;&#x8303;&#x56F4;&#x8C03;&#x7528; WriteByte &#x6216; WriteString func (b *Writer) WriteRune (r rune ) (size int , err error) // &#x5199;&#x5165;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;&#x679C;&#x8FD4;&#x56DE;&#x5199;&#x5165;&#x7684;&#x5B57;&#x8282;&#x6570;&#x6BD4; len (s) &#x5C0F;&#xFF0C;&#x8FD4;&#x56DE;&#x7684; error &#x4F1A;&#x89E3;&#x91CA;&#x539F;&#x56E0; func (b *Writer) WriteString (s string ) ( int , error) bufio.Writer &#x7C7B;&#x578B;&#x503C;&#x4E2D;&#x7F13;&#x51B2;&#x7684;&#x6570;&#x636E;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x4F1A;&#x88AB;&#x5199;&#x5230;&#x5B83;&#x7684;&#x5E95;&#x5C42;&#x5199;&#x5165;&#x5668; bufio.Writer &#x7C7B;&#x578B;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; Flush &#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x7684;&#x4E3B;&#x8981;&#x529F;&#x80FD;&#x662F;&#x628A;&#x76F8;&#x5E94;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x6682;&#x5B58;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#xFF0C;&#x90FD;&#x5199;&#x5230;&#x5E95;&#x5C42;&#x5199;&#x5165;&#x5668;&#x4E2D;&#x3002;&#x6570;&#x636E;&#x4E00;&#x65E6;&#x88AB;&#x5199;&#x8FDB;&#x5E95;&#x5C42;&#x5199;&#x5165;&#x5668;&#xFF0C; &#x8BE5;&#x65B9;&#x6CD5;&#x5C31;&#x4F1A;&#x628A;&#x5B83;&#x4EEC;&#x4ECE;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x5220;&#x9664;&#x6389;&#x3002; bufio.Writer &#x7C7B;&#x578B;&#x503C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0; Writer &#x503C;&#xFF09;&#x62E5;&#x6709;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x5199;&#x5165;&#x65B9;&#x6CD5;&#x90FD;&#x4F1A;&#x5728;&#x5FC5;&#x8981;&#x7684;&#x65F6;&#x5019;&#x8C03;&#x7528;&#x5B83;&#x7684; Flush &#x65B9;&#x6CD5;&#x3002; &#x6BD4;&#x5982;&#xFF0C; Write &#x65B9;&#x6CD5;&#x6709;&#x65F6;&#x5019;&#x4F1A;&#x5728;&#x628A;&#x6570;&#x636E;&#x5199;&#x8FDB;&#x7F13;&#x51B2;&#x533A;&#x4E4B;&#x540E;&#xFF0C;&#x8C03;&#x7528; Flush &#x65B9;&#x6CD5;&#xFF0C;&#x4EE5;&#x4FBF;&#x4E3A;&#x540E;&#x7EED;&#x7684;&#x65B0;&#x6570;&#x636E;&#x817E;&#x51FA;&#x7A7A;&#x95F4;&#x3002; WriteString &#x65B9;&#x6CD5;&#x7684;&#x884C;&#x4E3A;&#x4E0E;&#x4E4B;&#x7C7B;&#x4F3C;&#x3002; WriteByte &#x65B9;&#x6CD5;&#x548C; WriteRune &#x65B9;&#x6CD5;&#xFF0C;&#x90FD;&#x4F1A;&#x5728;&#x53D1;&#x73B0;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x7684;&#x53EF;&#x5199;&#x7A7A;&#x95F4;&#x4E0D;&#x8DB3;&#x4EE5;&#x5BB9;&#x7EB3;&#x65B0;&#x7684;&#x5B57;&#x8282;&#xFF0C;&#x6216; Unicode &#x5B57;&#x7B26;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8C03;&#x7528; Flush &#x65B9;&#x6CD5;&#x3002; &#x5728; &#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EA;&#x8981;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x7684;&#x53EF;&#x5199;&#x7A7A;&#x95F4;&#x65E0;&#x6CD5;&#x5BB9;&#x7EB3;&#x9700;&#x8981;&#x5199;&#x5165;&#x7684;&#x65B0;&#x6570;&#x636E;&#xFF0C; Flush &#x65B9;&#x6CD5;&#x5C31;&#x4E00;&#x5B9A;&#x4F1A;&#x88AB;&#x8C03;&#x7528; &#x3002;"},"standards/io/bufio.html#ReadWriter":{"title":"ReadWriter","path":"\\golang-learn\\standards\\io\\bufio.html#ReadWriter","body":"1 2 3 4 type ReadWriter struct { *Reader *Writer } &#x901A;&#x8FC7;&#x8C03;&#x7528; bufio.NewReadWriter &#x51FD;&#x6570;&#x6765;&#x521D;&#x59CB;&#x5316;&#xFF1A; 1 func NewReadWriter (r *Reader, w *Writer) * ReadWriter"},"standards/os/filepath.html":{"title":"filepath","path":"\\golang-learn\\standards\\os\\filepath.html","body":"filepath filepath 的功能和 path 包类似，但是对于不同操作系统提供了更好的支持。 filepath 包能够自动的根据不同的操作系统文件路径进行转换， 通常情况下应该总是使用 filepath 包，而不是 path 包。 path/filepath 包涉及到路径操作时，路径分隔符使用 os.PathSeparator 。不同系统，路径表示方式有所不同，比如 Unix 和 Windows 差别很大。 例如，在 Unix 中，路径的分隔符是 / ，但 Windows 是 \\ 。 path/filepath 能够处理所有的文件路径，不管是什么系统。注意，路径操作函数并不会校验路径是否真实存在。 解析路径名字符串 Dir() 和 Base() 函数将一个路径名字符串分解成目录和文件名两部分。（一般情况，这些函数与 Unix 中 dirname 和 basename 命令类似，但如果 路径以 / 结尾， Dir 的行为和 dirname 不太一致。） 1 2 func Dir (path string ) string func Base (path string ) string Dir 返回路径中除去最后一个路径元素的部分，即该路径最后一个元素所在的目录。在使用 Split 去掉最后一个元素后，会简化路径并去掉末尾的斜杠。 如果路径是空字符串，会返回 . ；如果路径由 1 到多个斜杠后跟 0 到多个非斜杠字符组成，会返回 / ；其他任何情况下都不会返回以斜杠结尾的路径。 Base 函数返回路径的最后一个元素。在提取元素前会去掉末尾的斜杠。如果路径是 “”，会返回 . ；如果路径是只有一个斜杆构成的，会返回 / 。 比如，给定路径名 /home/polaris/learngo.go ， Dir 返回 /home/polaris ，而 Base 返回 learngo.go 。 如果给定路径名 /home/polaris/learngo/ ， Dir 返回 /home/polaris/learngo （这与 Unix 中的 dirname 不一致， dirname 会返回 /home/polaris ），而 Base 返回 learngo 。 如果需要和 dirname 一样的功能，应该自己处理，比如在调用 Dir 之前，先将末尾的 / 去掉。 此外， Ext 可以获得路径中文件名的扩展名。 1 func Ext (path string ) string Ext 函数返回 path 文件扩展名。扩展名是路径中最后一个从 . 开始的部分，包括 . 。如果该元素没有 . 会返回空字符串。 相对路径和绝对路径 某个进程都会有当前工作目录，一般的相对路径，就是针对进程 当前工作目录 而言的。当然，可以针对某个目录指定相对路径。 绝对路径，在 Unix 中，以 / 开始；在 Windows 下以某个盘符开始，比如 C:\\Program Files 。 1 func IsAbs (path string ) bool IsAbs 返回路径是否是一个绝对路径。而 1 func Abs (path string ) ( string , error) Abs 函数返回 path 代表的绝对路径，如果 path 不是绝对路径，会加入当前工作目录以使之成为绝对路径。因为硬链接的存在，不能保证返 回的绝对路径是唯一指向该地址的绝对路径。在 os.Getwd 出错时， Abs 会返回该错误，一般不会出错，如果路径名长度超过系统限制，则会报错。 1 func Rel (basepath, targpath string ) ( string , error) Rel 函数返回一个相对路径，返回值是 targpath 相对于 basepath 的相对路径， 即使 basepath 和 targpath 没有共享的路径元素。如果两个参数一个是相对路径而另一个是绝对路径，或者 targpath 无法表示为相对 于 basepath 的路径，将返回错误。 1 2 3 4 5 6 fmt.Println(filepath.Rel( \"/home/polaris/learngo\" , \"/home/polaris/learngo/src/logic/topic.go\" )) fmt.Println(filepath.Rel( \"/home/polaris/learngo\" , \"/data/learngo\" )) // Output: // src/logic/topic.go nil // ../../../data/learngo nil 路径的切分和拼接 对于一个常规文件路径，我们可以通过 Split 函数得到它的目录路径和文件名： 1 func Split (path string ) (dir, file string ) Split 函数根据最后一个路径分隔符将路径 path 分隔为目录和文件名两部分（ dir 和 file ）。如果路径中没有路径分隔符，函数返回 值 dir 为空字符串， file 等于 path ；反之，如果路径中最后一个字符是 / ，则 dir 等于 path ， file 为空字符串。 返回值满足 path == dir+file 。 dir 非空时，最后一个字符总是 / 。 1 2 3 4 5 6 7 8 // dir == /home/polaris/，file == learngo filepath.Split( \"/home/polaris/learngo\" ) // dir == /home/polaris/learngo/，file == \"\" filepath.Split( \"/home/polaris/learngo/\" ) // dir == \"\"，file == learngo filepath.Split( \"learngo\" ) 相对路径到绝对路径的转变，需要经过路径的拼接。 Join 用于将多个路径拼接起来，会根据情况添加路径分隔符。 1 func Join (elem ... string ) string Join 函数可以将任意数量的路径元素放入一个单一路径里，会根据需要添加路径分隔符。结果是经过 Clean 的，所有的空字符串元素会被忽略。 对于拼接路径的需求，我们应该总是使用 Join 函数来处理。 有时，我们需要分割 PATH 或 GOPATH 之类的环境变量（这些路径被特定于 OS 的列表分隔符连接起来）， filepath.SplitList 就是这个用途： 1 func SplitList (path string ) [] string 注意，与 strings.Split 函数的不同之处是：对 “”， SplitList 返回 []string{} ，而 strings.Split 返回 []string{} 。 SplitList 内部调用的是 strings.Split 。 规整化路径 1 func Clean (path string ) string Clean 函数通过单纯的词法操作返回和 path 代表同一地址的最短路径。 它会不断的依次应用如下的规则，直到不能再进行任何处理： 将连续的多个路径分隔符替换为单个路径分隔符 剔除每一个 . 路径名元素（代表当前目录） 剔除每一个路径内的 .. 路径名元素（代表父目录）和它前面的非 .. 路径名元素 剔除开始于根路径的 .. 路径名元素，即将路径开始处的 /.. 替换为 / （假设路径分隔符是 / ） 返回的路径只有其代表一个根地址时才以路径分隔符结尾，如 Unix 的 / 或 Windows 的 C:\\ 。 如果处理的结果是空字符串，Clean 会返回 . ，代表当前路径。 符号链接指向的路径名 filepath.EvalSymlinks 会将所有路径的符号链接都解析出来。除此之外，它返回的路径，是直接可访问的。 1 func EvalSymlinks (path string ) ( string , error) 如果 path 或返回值是相对路径，则是相对于进程当前工作目录。 os.Readlink 和 filepath.EvalSymlinks 区别示例： 1 2 3 4 5 6 7 // 在当前目录下创建一个 learngo.txt 文件和一个 symlink 目录，在 symlink 目录下对 learngo.txt 建一个符号链接 learngo.txt.2 fmt.Println(filepath.EvalSymlinks( \"symlink/learngo.txt.2\" )) fmt.Println(os.Readlink( \"symlink/learngo.txt.2\" )) // Ouput: // learngo.txt nil // ../learngo.txt nil 文件路径匹配 1 func Match (pattern, name string ) (matched bool , err error) Match 指示 name 是否和 shell 的文件模式匹配。模式语法如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 pattern: \t term  term: \t '*' 匹配 0 或多个非路径分隔符的字符 \t '?' 匹配 1 个非路径分隔符的字符 \t '[' [ '^' ]  character- range  ']' \t\t\t\t 字符组（必须非空） \tc 匹配字符 c（c != '*' , '?' , '\\\\', ' [ '） \t' \\\\ ' c 匹配字符 c character-range: \tc 匹配字符 c（c != ' \\\\ ', ' - ', ' ] '） \t' \\\\ ' c 匹配字符 c \tlo ' - ' hi 匹配区间[lo, hi]内的字符 匹配要求 pattern 必须和 name 全匹配上，不只是子串。在 Windows 下转义字符被禁用。 Match 函数很少使用，搜索了一遍，标准库没有用到这个函数。而 Glob 函数在模板标准库中被用到了。 1 func Glob (pattern string ) (matches [] string , err error) Glob 函数返回所有匹配了 模式字符串 pattern 的文件列表或者 nil（如果没有匹配的文件）。 pattern 的语法和 Match 函数相同。 pattern 可以描述多层的名字，如 /usr/*/bin/ed （假设路径分隔符是 / ）。 注意， Glob 会忽略任何文件系统相关的错误，如读目录引发的 I/O 错误。唯一的错误和 Match 一样，在 pattern 不合法时， 返回 filepath.ErrBadPattern 。返回的结果是根据文件名字典顺序进行了排序的。 Glob 的常见用法，是读取某个目录下所有的文件，比如写单元测试时，读取 testdata 目录下所有测试数据： 1 filepath.Glob( \"testdata/*.input\" ) 遍历目录 在 filepath 中，提供了 Walk 函数，用于遍历目录树。 1 func Walk (root string , walkFn WalkFunc) error Walk 函数会遍历 root 指定的目录下的文件树，对每一个该文件树中的目录和文件都会调用 walkFn ，包括 root 自身。所有访问文件 / 目录 时遇到的错误都会传递给 walkFn 过滤。文件是按字典顺序遍历的，这让输出更漂亮，但也导致处理非常大的目录时效率会降低。 Walk 函数不会遍历 文件树中的符号链接（快捷方式）文件包含的路径。 walkFn 的类型 WalkFunc 的定义如下： 1 type WalkFunc func (path string , info os.FileInfo, err error) error Walk 函数对每一个文件 / 目录都会调用 WalkFunc 函数类型值。调用时 path 参数会包含 Walk 的 root 参数作为前缀；就是说， 如果 Walk 函数的 root 为 “dir”，该目录下有文件 “a”，将会使用 “dir/a” 作为调用 walkFn 的参数。 walkFn 参数被调用时的 info 参数是 path 指定的地址（文件 / 目录）的文件信息，类型为 os.FileInfo 。 如果遍历 path 指定的文件或目录时出现了问题，传入的参数 err 会描述该问题， WalkFunc 类型函数可以决定如何去处理该错误 （ Walk 函数将不会深入该目录）；如果该函数返回一个错误， Walk 函数的执行会中止；只有一个例外，如果 Walk 的 walkFn 返回 值是 SkipDir ，将会跳过该目录的内容而 Walk 函数照常执行处理下一个文件。 Windows 起作用的函数 filepath 中有三个函数： VolumeName 、 FromSlash 和 ToSlash ，针对非 Unix 平台的。"},"standards/os/filepath.html#filepath":{"title":"filepath","path":"\\golang-learn\\standards\\os\\filepath.html#filepath","body":"filepath &#x7684;&#x529F;&#x80FD;&#x548C; path &#x5305;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x4E0D;&#x540C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x597D;&#x7684;&#x652F;&#x6301;&#x3002; filepath &#x5305;&#x80FD;&#x591F;&#x81EA;&#x52A8;&#x7684;&#x6839;&#x636E;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x8FDB;&#x884C;&#x8F6C;&#x6362;&#xFF0C; &#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#x5E94;&#x8BE5;&#x603B;&#x662F;&#x4F7F;&#x7528; filepath &#x5305;&#xFF0C;&#x800C;&#x4E0D;&#x662F; path &#x5305;&#x3002; path/filepath &#x5305;&#x6D89;&#x53CA;&#x5230;&#x8DEF;&#x5F84;&#x64CD;&#x4F5C;&#x65F6;&#xFF0C;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#x4F7F;&#x7528; os.PathSeparator &#x3002;&#x4E0D;&#x540C;&#x7CFB;&#x7EDF;&#xFF0C;&#x8DEF;&#x5F84;&#x8868;&#x793A;&#x65B9;&#x5F0F;&#x6709;&#x6240;&#x4E0D;&#x540C;&#xFF0C;&#x6BD4;&#x5982; Unix &#x548C; Windows &#x5DEE;&#x522B;&#x5F88;&#x5927;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5728; Unix &#x4E2D;&#xFF0C;&#x8DEF;&#x5F84;&#x7684;&#x5206;&#x9694;&#x7B26;&#x662F; / &#xFF0C;&#x4F46; Windows &#x662F; \\ &#x3002; path/filepath &#x80FD;&#x591F;&#x5904;&#x7406;&#x6240;&#x6709;&#x7684;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#xFF0C;&#x4E0D;&#x7BA1;&#x662F;&#x4EC0;&#x4E48;&#x7CFB;&#x7EDF;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x8DEF;&#x5F84;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x5E76;&#x4E0D;&#x4F1A;&#x6821;&#x9A8C;&#x8DEF;&#x5F84;&#x662F;&#x5426;&#x771F;&#x5B9E;&#x5B58;&#x5728;&#x3002;"},"standards/os/filepath.html#解析路径名字符串":{"title":"&#x89E3;&#x6790;&#x8DEF;&#x5F84;&#x540D;&#x5B57;&#x7B26;&#x4E32;","path":"\\golang-learn\\standards\\os\\filepath.html#解析路径名字符串","body":"Dir() &#x548C; Base() &#x51FD;&#x6570;&#x5C06;&#x4E00;&#x4E2A;&#x8DEF;&#x5F84;&#x540D;&#x5B57;&#x7B26;&#x4E32;&#x5206;&#x89E3;&#x6210;&#x76EE;&#x5F55;&#x548C;&#x6587;&#x4EF6;&#x540D;&#x4E24;&#x90E8;&#x5206;&#x3002;&#xFF08;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#xFF0C;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x4E0E; Unix &#x4E2D; dirname &#x548C; basename &#x547D;&#x4EE4;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x5982;&#x679C; &#x8DEF;&#x5F84;&#x4EE5; / &#x7ED3;&#x5C3E;&#xFF0C; Dir &#x7684;&#x884C;&#x4E3A;&#x548C; dirname &#x4E0D;&#x592A;&#x4E00;&#x81F4;&#x3002;&#xFF09; 1 2 func Dir (path string ) string func Base (path string ) string Dir &#x8FD4;&#x56DE;&#x8DEF;&#x5F84;&#x4E2D;&#x9664;&#x53BB;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8DEF;&#x5F84;&#x5143;&#x7D20;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x5373;&#x8BE5;&#x8DEF;&#x5F84;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x6240;&#x5728;&#x7684;&#x76EE;&#x5F55;&#x3002;&#x5728;&#x4F7F;&#x7528; Split &#x53BB;&#x6389;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x540E;&#xFF0C;&#x4F1A;&#x7B80;&#x5316;&#x8DEF;&#x5F84;&#x5E76;&#x53BB;&#x6389;&#x672B;&#x5C3E;&#x7684;&#x659C;&#x6760;&#x3002; &#x5982;&#x679C;&#x8DEF;&#x5F84;&#x662F;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE; . &#xFF1B;&#x5982;&#x679C;&#x8DEF;&#x5F84;&#x7531; 1 &#x5230;&#x591A;&#x4E2A;&#x659C;&#x6760;&#x540E;&#x8DDF; 0 &#x5230;&#x591A;&#x4E2A;&#x975E;&#x659C;&#x6760;&#x5B57;&#x7B26;&#x7EC4;&#x6210;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE; / &#xFF1B;&#x5176;&#x4ED6;&#x4EFB;&#x4F55;&#x60C5;&#x51B5;&#x4E0B;&#x90FD;&#x4E0D;&#x4F1A;&#x8FD4;&#x56DE;&#x4EE5;&#x659C;&#x6760;&#x7ED3;&#x5C3E;&#x7684;&#x8DEF;&#x5F84;&#x3002; Base &#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x8DEF;&#x5F84;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x3002;&#x5728;&#x63D0;&#x53D6;&#x5143;&#x7D20;&#x524D;&#x4F1A;&#x53BB;&#x6389;&#x672B;&#x5C3E;&#x7684;&#x659C;&#x6760;&#x3002;&#x5982;&#x679C;&#x8DEF;&#x5F84;&#x662F; &#x201C;&#x201D;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE; . &#xFF1B;&#x5982;&#x679C;&#x8DEF;&#x5F84;&#x662F;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x659C;&#x6746;&#x6784;&#x6210;&#x7684;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE; / &#x3002; &#x6BD4;&#x5982;&#xFF0C;&#x7ED9;&#x5B9A;&#x8DEF;&#x5F84;&#x540D; /home/polaris/learngo.go &#xFF0C; Dir &#x8FD4;&#x56DE; /home/polaris &#xFF0C;&#x800C; Base &#x8FD4;&#x56DE; learngo.go &#x3002; &#x5982;&#x679C;&#x7ED9;&#x5B9A;&#x8DEF;&#x5F84;&#x540D; /home/polaris/learngo/ &#xFF0C; Dir &#x8FD4;&#x56DE; /home/polaris/learngo &#xFF08;&#x8FD9;&#x4E0E; Unix &#x4E2D;&#x7684; dirname &#x4E0D;&#x4E00;&#x81F4;&#xFF0C; dirname &#x4F1A;&#x8FD4;&#x56DE; /home/polaris &#xFF09;&#xFF0C;&#x800C; Base &#x8FD4;&#x56DE; learngo &#x3002; &#x5982;&#x679C;&#x9700;&#x8981;&#x548C; dirname &#x4E00;&#x6837;&#x7684;&#x529F;&#x80FD;&#xFF0C;&#x5E94;&#x8BE5;&#x81EA;&#x5DF1;&#x5904;&#x7406;&#xFF0C;&#x6BD4;&#x5982;&#x5728;&#x8C03;&#x7528; Dir &#x4E4B;&#x524D;&#xFF0C;&#x5148;&#x5C06;&#x672B;&#x5C3E;&#x7684; / &#x53BB;&#x6389;&#x3002; &#x6B64;&#x5916;&#xFF0C; Ext &#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x8DEF;&#x5F84;&#x4E2D;&#x6587;&#x4EF6;&#x540D;&#x7684;&#x6269;&#x5C55;&#x540D;&#x3002; 1 func Ext (path string ) string Ext &#x51FD;&#x6570;&#x8FD4;&#x56DE; path &#x6587;&#x4EF6;&#x6269;&#x5C55;&#x540D;&#x3002;&#x6269;&#x5C55;&#x540D;&#x662F;&#x8DEF;&#x5F84;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x4ECE; . &#x5F00;&#x59CB;&#x7684;&#x90E8;&#x5206;&#xFF0C;&#x5305;&#x62EC; . &#x3002;&#x5982;&#x679C;&#x8BE5;&#x5143;&#x7D20;&#x6CA1;&#x6709; . &#x4F1A;&#x8FD4;&#x56DE;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#x3002;"},"standards/os/filepath.html#相对路径和绝对路径":{"title":"&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x548C;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;","path":"\\golang-learn\\standards\\os\\filepath.html#相对路径和绝对路径","body":"&#x67D0;&#x4E2A;&#x8FDB;&#x7A0B;&#x90FD;&#x4F1A;&#x6709;&#x5F53;&#x524D;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#xFF0C;&#x4E00;&#x822C;&#x7684;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x5C31;&#x662F;&#x9488;&#x5BF9;&#x8FDB;&#x7A0B; &#x5F53;&#x524D;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55; &#x800C;&#x8A00;&#x7684;&#x3002;&#x5F53;&#x7136;&#xFF0C;&#x53EF;&#x4EE5;&#x9488;&#x5BF9;&#x67D0;&#x4E2A;&#x76EE;&#x5F55;&#x6307;&#x5B9A;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x3002; &#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x5728; Unix &#x4E2D;&#xFF0C;&#x4EE5; / &#x5F00;&#x59CB;&#xFF1B;&#x5728; Windows &#x4E0B;&#x4EE5;&#x67D0;&#x4E2A;&#x76D8;&#x7B26;&#x5F00;&#x59CB;&#xFF0C;&#x6BD4;&#x5982; C:\\Program Files &#x3002; 1 func IsAbs (path string ) bool IsAbs &#x8FD4;&#x56DE;&#x8DEF;&#x5F84;&#x662F;&#x5426;&#x662F;&#x4E00;&#x4E2A;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x3002;&#x800C; 1 func Abs (path string ) ( string , error) Abs &#x51FD;&#x6570;&#x8FD4;&#x56DE; path &#x4EE3;&#x8868;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x5982;&#x679C; path &#x4E0D;&#x662F;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x4F1A;&#x52A0;&#x5165;&#x5F53;&#x524D;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#x4EE5;&#x4F7F;&#x4E4B;&#x6210;&#x4E3A;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x3002;&#x56E0;&#x4E3A;&#x786C;&#x94FE;&#x63A5;&#x7684;&#x5B58;&#x5728;&#xFF0C;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x8FD4; &#x56DE;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x662F;&#x552F;&#x4E00;&#x6307;&#x5411;&#x8BE5;&#x5730;&#x5740;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x3002;&#x5728; os.Getwd &#x51FA;&#x9519;&#x65F6;&#xFF0C; Abs &#x4F1A;&#x8FD4;&#x56DE;&#x8BE5;&#x9519;&#x8BEF;&#xFF0C;&#x4E00;&#x822C;&#x4E0D;&#x4F1A;&#x51FA;&#x9519;&#xFF0C;&#x5982;&#x679C;&#x8DEF;&#x5F84;&#x540D;&#x957F;&#x5EA6;&#x8D85;&#x8FC7;&#x7CFB;&#x7EDF;&#x9650;&#x5236;&#xFF0C;&#x5219;&#x4F1A;&#x62A5;&#x9519;&#x3002; 1 func Rel (basepath, targpath string ) ( string , error) Rel &#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x662F; targpath &#x76F8;&#x5BF9;&#x4E8E; basepath &#x7684;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C; &#x5373;&#x4F7F; basepath &#x548C; targpath &#x6CA1;&#x6709;&#x5171;&#x4EAB;&#x7684;&#x8DEF;&#x5F84;&#x5143;&#x7D20;&#x3002;&#x5982;&#x679C;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x4E00;&#x4E2A;&#x662F;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x800C;&#x53E6;&#x4E00;&#x4E2A;&#x662F;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x6216;&#x8005; targpath &#x65E0;&#x6CD5;&#x8868;&#x793A;&#x4E3A;&#x76F8;&#x5BF9; &#x4E8E; basepath &#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x5C06;&#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#x3002; 1 2 3 4 5 6 fmt.Println(filepath.Rel( /home/polaris/learngo , /home/polaris/learngo/src/logic/topic.go )) fmt.Println(filepath.Rel( /home/polaris/learngo , /data/learngo )) // Output: // src/logic/topic.go nil // ../../../data/learngo nil"},"standards/os/filepath.html#路径的切分和拼接":{"title":"&#x8DEF;&#x5F84;&#x7684;&#x5207;&#x5206;&#x548C;&#x62FC;&#x63A5;","path":"\\golang-learn\\standards\\os\\filepath.html#路径的切分和拼接","body":"&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x5E38;&#x89C4;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; Split &#x51FD;&#x6570;&#x5F97;&#x5230;&#x5B83;&#x7684;&#x76EE;&#x5F55;&#x8DEF;&#x5F84;&#x548C;&#x6587;&#x4EF6;&#x540D;&#xFF1A; 1 func Split (path string ) (dir, file string ) Split &#x51FD;&#x6570;&#x6839;&#x636E;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#x5C06;&#x8DEF;&#x5F84; path &#x5206;&#x9694;&#x4E3A;&#x76EE;&#x5F55;&#x548C;&#x6587;&#x4EF6;&#x540D;&#x4E24;&#x90E8;&#x5206;&#xFF08; dir &#x548C; file &#xFF09;&#x3002;&#x5982;&#x679C;&#x8DEF;&#x5F84;&#x4E2D;&#x6CA1;&#x6709;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#xFF0C;&#x51FD;&#x6570;&#x8FD4;&#x56DE; &#x503C; dir &#x4E3A;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C; file &#x7B49;&#x4E8E; path &#xFF1B;&#x53CD;&#x4E4B;&#xFF0C;&#x5982;&#x679C;&#x8DEF;&#x5F84;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x662F; / &#xFF0C;&#x5219; dir &#x7B49;&#x4E8E; path &#xFF0C; file &#x4E3A;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#x3002; &#x8FD4;&#x56DE;&#x503C;&#x6EE1;&#x8DB3; path == dir+file &#x3002; dir &#x975E;&#x7A7A;&#x65F6;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x603B;&#x662F; / &#x3002; 1 2 3 4 5 6 7 8 // dir == /home/polaris/&#xFF0C;file == learngo filepath.Split( /home/polaris/learngo ) // dir == /home/polaris/learngo/&#xFF0C;file ==  filepath.Split( /home/polaris/learngo/ ) // dir == &#xFF0C;file == learngo filepath.Split( learngo ) &#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x5230;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x7684;&#x8F6C;&#x53D8;&#xFF0C;&#x9700;&#x8981;&#x7ECF;&#x8FC7;&#x8DEF;&#x5F84;&#x7684;&#x62FC;&#x63A5;&#x3002; Join &#x7528;&#x4E8E;&#x5C06;&#x591A;&#x4E2A;&#x8DEF;&#x5F84;&#x62FC;&#x63A5;&#x8D77;&#x6765;&#xFF0C;&#x4F1A;&#x6839;&#x636E;&#x60C5;&#x51B5;&#x6DFB;&#x52A0;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#x3002; 1 func Join (elem ... string ) string Join &#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x5C06;&#x4EFB;&#x610F;&#x6570;&#x91CF;&#x7684;&#x8DEF;&#x5F84;&#x5143;&#x7D20;&#x653E;&#x5165;&#x4E00;&#x4E2A;&#x5355;&#x4E00;&#x8DEF;&#x5F84;&#x91CC;&#xFF0C;&#x4F1A;&#x6839;&#x636E;&#x9700;&#x8981;&#x6DFB;&#x52A0;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#x3002;&#x7ED3;&#x679C;&#x662F;&#x7ECF;&#x8FC7; Clean &#x7684;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#x5143;&#x7D20;&#x4F1A;&#x88AB;&#x5FFD;&#x7565;&#x3002; &#x5BF9;&#x4E8E;&#x62FC;&#x63A5;&#x8DEF;&#x5F84;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x603B;&#x662F;&#x4F7F;&#x7528; Join &#x51FD;&#x6570;&#x6765;&#x5904;&#x7406;&#x3002; &#x6709;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5206;&#x5272; PATH &#x6216; GOPATH &#x4E4B;&#x7C7B;&#x7684;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#xFF08;&#x8FD9;&#x4E9B;&#x8DEF;&#x5F84;&#x88AB;&#x7279;&#x5B9A;&#x4E8E; OS &#x7684;&#x5217;&#x8868;&#x5206;&#x9694;&#x7B26;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#xFF09;&#xFF0C; filepath.SplitList &#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x7528;&#x9014;&#xFF1A; 1 func SplitList (path string ) [] string &#x6CE8;&#x610F;&#xFF0C;&#x4E0E; strings.Split &#x51FD;&#x6570;&#x7684;&#x4E0D;&#x540C;&#x4E4B;&#x5904;&#x662F;&#xFF1A;&#x5BF9; &#x201C;&#x201D;&#xFF0C; SplitList &#x8FD4;&#x56DE; []string{} &#xFF0C;&#x800C; strings.Split &#x8FD4;&#x56DE; []string{} &#x3002; SplitList &#x5185;&#x90E8;&#x8C03;&#x7528;&#x7684;&#x662F; strings.Split &#x3002;"},"standards/os/filepath.html#规整化路径":{"title":"&#x89C4;&#x6574;&#x5316;&#x8DEF;&#x5F84;","path":"\\golang-learn\\standards\\os\\filepath.html#规整化路径","body":"1 func Clean (path string ) string Clean &#x51FD;&#x6570;&#x901A;&#x8FC7;&#x5355;&#x7EAF;&#x7684;&#x8BCD;&#x6CD5;&#x64CD;&#x4F5C;&#x8FD4;&#x56DE;&#x548C; path &#x4EE3;&#x8868;&#x540C;&#x4E00;&#x5730;&#x5740;&#x7684;&#x6700;&#x77ED;&#x8DEF;&#x5F84;&#x3002; &#x5B83;&#x4F1A;&#x4E0D;&#x65AD;&#x7684;&#x4F9D;&#x6B21;&#x5E94;&#x7528;&#x5982;&#x4E0B;&#x7684;&#x89C4;&#x5219;&#xFF0C;&#x76F4;&#x5230;&#x4E0D;&#x80FD;&#x518D;&#x8FDB;&#x884C;&#x4EFB;&#x4F55;&#x5904;&#x7406;&#xFF1A; &#x5C06;&#x8FDE;&#x7EED;&#x7684;&#x591A;&#x4E2A;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#x66FF;&#x6362;&#x4E3A;&#x5355;&#x4E2A;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26; &#x5254;&#x9664;&#x6BCF;&#x4E00;&#x4E2A; . &#x8DEF;&#x5F84;&#x540D;&#x5143;&#x7D20;&#xFF08;&#x4EE3;&#x8868;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#xFF09; &#x5254;&#x9664;&#x6BCF;&#x4E00;&#x4E2A;&#x8DEF;&#x5F84;&#x5185;&#x7684; .. &#x8DEF;&#x5F84;&#x540D;&#x5143;&#x7D20;&#xFF08;&#x4EE3;&#x8868;&#x7236;&#x76EE;&#x5F55;&#xFF09;&#x548C;&#x5B83;&#x524D;&#x9762;&#x7684;&#x975E; .. &#x8DEF;&#x5F84;&#x540D;&#x5143;&#x7D20; &#x5254;&#x9664;&#x5F00;&#x59CB;&#x4E8E;&#x6839;&#x8DEF;&#x5F84;&#x7684; .. &#x8DEF;&#x5F84;&#x540D;&#x5143;&#x7D20;&#xFF0C;&#x5373;&#x5C06;&#x8DEF;&#x5F84;&#x5F00;&#x59CB;&#x5904;&#x7684; /.. &#x66FF;&#x6362;&#x4E3A; / &#xFF08;&#x5047;&#x8BBE;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#x662F; / &#xFF09; &#x8FD4;&#x56DE;&#x7684;&#x8DEF;&#x5F84;&#x53EA;&#x6709;&#x5176;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x6839;&#x5730;&#x5740;&#x65F6;&#x624D;&#x4EE5;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#x7ED3;&#x5C3E;&#xFF0C;&#x5982; Unix &#x7684; / &#x6216; Windows &#x7684; C:\\ &#x3002; &#x5982;&#x679C;&#x5904;&#x7406;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;Clean &#x4F1A;&#x8FD4;&#x56DE; . &#xFF0C;&#x4EE3;&#x8868;&#x5F53;&#x524D;&#x8DEF;&#x5F84;&#x3002;"},"standards/os/filepath.html#符号链接指向的路径名":{"title":"&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#x6307;&#x5411;&#x7684;&#x8DEF;&#x5F84;&#x540D;","path":"\\golang-learn\\standards\\os\\filepath.html#符号链接指向的路径名","body":"filepath.EvalSymlinks &#x4F1A;&#x5C06;&#x6240;&#x6709;&#x8DEF;&#x5F84;&#x7684;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#x90FD;&#x89E3;&#x6790;&#x51FA;&#x6765;&#x3002;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x5B83;&#x8FD4;&#x56DE;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x662F;&#x76F4;&#x63A5;&#x53EF;&#x8BBF;&#x95EE;&#x7684;&#x3002; 1 func EvalSymlinks (path string ) ( string , error) &#x5982;&#x679C; path &#x6216;&#x8FD4;&#x56DE;&#x503C;&#x662F;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x5219;&#x662F;&#x76F8;&#x5BF9;&#x4E8E;&#x8FDB;&#x7A0B;&#x5F53;&#x524D;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#x3002; os.Readlink &#x548C; filepath.EvalSymlinks &#x533A;&#x522B;&#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 // &#x5728;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x4E0B;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; learngo.txt &#x6587;&#x4EF6;&#x548C;&#x4E00;&#x4E2A; symlink &#x76EE;&#x5F55;&#xFF0C;&#x5728; symlink &#x76EE;&#x5F55;&#x4E0B;&#x5BF9; learngo.txt &#x5EFA;&#x4E00;&#x4E2A;&#x7B26;&#x53F7;&#x94FE;&#x63A5; learngo.txt.2 fmt.Println(filepath.EvalSymlinks( symlink/learngo.txt.2 )) fmt.Println(os.Readlink( symlink/learngo.txt.2 )) // Ouput: // learngo.txt nil // ../learngo.txt nil"},"standards/os/filepath.html#文件路径匹配":{"title":"&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x5339;&#x914D;","path":"\\golang-learn\\standards\\os\\filepath.html#文件路径匹配","body":"1 func Match (pattern, name string ) (matched bool , err error) Match &#x6307;&#x793A; name &#x662F;&#x5426;&#x548C; shell &#x7684;&#x6587;&#x4EF6;&#x6A21;&#x5F0F;&#x5339;&#x914D;&#x3002;&#x6A21;&#x5F0F;&#x8BED;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 pattern: \t{ term } term: \t &apos;*&apos; &#x5339;&#x914D; 0 &#x6216;&#x591A;&#x4E2A;&#x975E;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#x7684;&#x5B57;&#x7B26; \t &apos;?&apos; &#x5339;&#x914D; 1 &#x4E2A;&#x975E;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#x7684;&#x5B57;&#x7B26; \t &apos;[&apos; [ &apos;^&apos; ] { character- range } &apos;]&apos; \t\t\t\t &#x5B57;&#x7B26;&#x7EC4;&#xFF08;&#x5FC5;&#x987B;&#x975E;&#x7A7A;&#xFF09; \tc &#x5339;&#x914D;&#x5B57;&#x7B26; c&#xFF08;c != &apos;*&apos; , &apos;?&apos; , &apos;\\\\&apos;, &apos; [ &apos;&#xFF09; \t&apos; \\\\ &apos; c &#x5339;&#x914D;&#x5B57;&#x7B26; c character-range: \tc &#x5339;&#x914D;&#x5B57;&#x7B26; c&#xFF08;c != &apos; \\\\ &apos;, &apos; - &apos;, &apos; ] &apos;&#xFF09; \t&apos; \\\\ &apos; c &#x5339;&#x914D;&#x5B57;&#x7B26; c \tlo &apos; - &apos; hi &#x5339;&#x914D;&#x533A;&#x95F4;[lo, hi]&#x5185;&#x7684;&#x5B57;&#x7B26; &#x5339;&#x914D;&#x8981;&#x6C42; pattern &#x5FC5;&#x987B;&#x548C; name &#x5168;&#x5339;&#x914D;&#x4E0A;&#xFF0C;&#x4E0D;&#x53EA;&#x662F;&#x5B50;&#x4E32;&#x3002;&#x5728; Windows &#x4E0B;&#x8F6C;&#x4E49;&#x5B57;&#x7B26;&#x88AB;&#x7981;&#x7528;&#x3002; Match &#x51FD;&#x6570;&#x5F88;&#x5C11;&#x4F7F;&#x7528;&#xFF0C;&#x641C;&#x7D22;&#x4E86;&#x4E00;&#x904D;&#xFF0C;&#x6807;&#x51C6;&#x5E93;&#x6CA1;&#x6709;&#x7528;&#x5230;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x3002;&#x800C; Glob &#x51FD;&#x6570;&#x5728;&#x6A21;&#x677F;&#x6807;&#x51C6;&#x5E93;&#x4E2D;&#x88AB;&#x7528;&#x5230;&#x4E86;&#x3002; 1 func Glob (pattern string ) (matches [] string , err error) Glob &#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x6240;&#x6709;&#x5339;&#x914D;&#x4E86; &#x6A21;&#x5F0F;&#x5B57;&#x7B26;&#x4E32; pattern &#x7684;&#x6587;&#x4EF6;&#x5217;&#x8868;&#x6216;&#x8005; nil&#xFF08;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5339;&#x914D;&#x7684;&#x6587;&#x4EF6;&#xFF09;&#x3002; pattern &#x7684;&#x8BED;&#x6CD5;&#x548C; Match &#x51FD;&#x6570;&#x76F8;&#x540C;&#x3002; pattern &#x53EF;&#x4EE5;&#x63CF;&#x8FF0;&#x591A;&#x5C42;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x5982; /usr/*/bin/ed &#xFF08;&#x5047;&#x8BBE;&#x8DEF;&#x5F84;&#x5206;&#x9694;&#x7B26;&#x662F; / &#xFF09;&#x3002; &#x6CE8;&#x610F;&#xFF0C; Glob &#x4F1A;&#x5FFD;&#x7565;&#x4EFB;&#x4F55;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x76F8;&#x5173;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x5982;&#x8BFB;&#x76EE;&#x5F55;&#x5F15;&#x53D1;&#x7684; I/O &#x9519;&#x8BEF;&#x3002;&#x552F;&#x4E00;&#x7684;&#x9519;&#x8BEF;&#x548C; Match &#x4E00;&#x6837;&#xFF0C;&#x5728; pattern &#x4E0D;&#x5408;&#x6CD5;&#x65F6;&#xFF0C; &#x8FD4;&#x56DE; filepath.ErrBadPattern &#x3002;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x6839;&#x636E;&#x6587;&#x4EF6;&#x540D;&#x5B57;&#x5178;&#x987A;&#x5E8F;&#x8FDB;&#x884C;&#x4E86;&#x6392;&#x5E8F;&#x7684;&#x3002; Glob &#x7684;&#x5E38;&#x89C1;&#x7528;&#x6CD5;&#xFF0C;&#x662F;&#x8BFB;&#x53D6;&#x67D0;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x6240;&#x6709;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x6BD4;&#x5982;&#x5199;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x65F6;&#xFF0C;&#x8BFB;&#x53D6; testdata &#x76EE;&#x5F55;&#x4E0B;&#x6240;&#x6709;&#x6D4B;&#x8BD5;&#x6570;&#x636E;&#xFF1A; 1 filepath.Glob( testdata/*.input )"},"standards/os/filepath.html#遍历目录":{"title":"&#x904D;&#x5386;&#x76EE;&#x5F55;","path":"\\golang-learn\\standards\\os\\filepath.html#遍历目录","body":"&#x5728; filepath &#x4E2D;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86; Walk &#x51FD;&#x6570;&#xFF0C;&#x7528;&#x4E8E;&#x904D;&#x5386;&#x76EE;&#x5F55;&#x6811;&#x3002; 1 func Walk (root string , walkFn WalkFunc) error Walk &#x51FD;&#x6570;&#x4F1A;&#x904D;&#x5386; root &#x6307;&#x5B9A;&#x7684;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6587;&#x4EF6;&#x6811;&#xFF0C;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x8BE5;&#x6587;&#x4EF6;&#x6811;&#x4E2D;&#x7684;&#x76EE;&#x5F55;&#x548C;&#x6587;&#x4EF6;&#x90FD;&#x4F1A;&#x8C03;&#x7528; walkFn &#xFF0C;&#x5305;&#x62EC; root &#x81EA;&#x8EAB;&#x3002;&#x6240;&#x6709;&#x8BBF;&#x95EE;&#x6587;&#x4EF6; / &#x76EE;&#x5F55; &#x65F6;&#x9047;&#x5230;&#x7684;&#x9519;&#x8BEF;&#x90FD;&#x4F1A;&#x4F20;&#x9012;&#x7ED9; walkFn &#x8FC7;&#x6EE4;&#x3002;&#x6587;&#x4EF6;&#x662F;&#x6309;&#x5B57;&#x5178;&#x987A;&#x5E8F;&#x904D;&#x5386;&#x7684;&#xFF0C;&#x8FD9;&#x8BA9;&#x8F93;&#x51FA;&#x66F4;&#x6F02;&#x4EAE;&#xFF0C;&#x4F46;&#x4E5F;&#x5BFC;&#x81F4;&#x5904;&#x7406;&#x975E;&#x5E38;&#x5927;&#x7684;&#x76EE;&#x5F55;&#x65F6;&#x6548;&#x7387;&#x4F1A;&#x964D;&#x4F4E;&#x3002; Walk &#x51FD;&#x6570;&#x4E0D;&#x4F1A;&#x904D;&#x5386; &#x6587;&#x4EF6;&#x6811;&#x4E2D;&#x7684;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#xFF08;&#x5FEB;&#x6377;&#x65B9;&#x5F0F;&#xFF09;&#x6587;&#x4EF6;&#x5305;&#x542B;&#x7684;&#x8DEF;&#x5F84;&#x3002; walkFn &#x7684;&#x7C7B;&#x578B; WalkFunc &#x7684;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; 1 type WalkFunc func (path string , info os.FileInfo, err error) error Walk &#x51FD;&#x6570;&#x5BF9;&#x6BCF;&#x4E00;&#x4E2A;&#x6587;&#x4EF6; / &#x76EE;&#x5F55;&#x90FD;&#x4F1A;&#x8C03;&#x7528; WalkFunc &#x51FD;&#x6570;&#x7C7B;&#x578B;&#x503C;&#x3002;&#x8C03;&#x7528;&#x65F6; path &#x53C2;&#x6570;&#x4F1A;&#x5305;&#x542B; Walk &#x7684; root &#x53C2;&#x6570;&#x4F5C;&#x4E3A;&#x524D;&#x7F00;&#xFF1B;&#x5C31;&#x662F;&#x8BF4;&#xFF0C; &#x5982;&#x679C; Walk &#x51FD;&#x6570;&#x7684; root &#x4E3A; &#x201C;dir&#x201D;&#xFF0C;&#x8BE5;&#x76EE;&#x5F55;&#x4E0B;&#x6709;&#x6587;&#x4EF6; &#x201C;a&#x201D;&#xFF0C;&#x5C06;&#x4F1A;&#x4F7F;&#x7528; &#x201C;dir/a&#x201D; &#x4F5C;&#x4E3A;&#x8C03;&#x7528; walkFn &#x7684;&#x53C2;&#x6570;&#x3002; walkFn &#x53C2;&#x6570;&#x88AB;&#x8C03;&#x7528;&#x65F6;&#x7684; info &#x53C2;&#x6570;&#x662F; path &#x6307;&#x5B9A;&#x7684;&#x5730;&#x5740;&#xFF08;&#x6587;&#x4EF6; / &#x76EE;&#x5F55;&#xFF09;&#x7684;&#x6587;&#x4EF6;&#x4FE1;&#x606F;&#xFF0C;&#x7C7B;&#x578B;&#x4E3A; os.FileInfo &#x3002; &#x5982;&#x679C;&#x904D;&#x5386; path &#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#x6216;&#x76EE;&#x5F55;&#x65F6;&#x51FA;&#x73B0;&#x4E86;&#x95EE;&#x9898;&#xFF0C;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570; err &#x4F1A;&#x63CF;&#x8FF0;&#x8BE5;&#x95EE;&#x9898;&#xFF0C; WalkFunc &#x7C7B;&#x578B;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x51B3;&#x5B9A;&#x5982;&#x4F55;&#x53BB;&#x5904;&#x7406;&#x8BE5;&#x9519;&#x8BEF; &#xFF08; Walk &#x51FD;&#x6570;&#x5C06;&#x4E0D;&#x4F1A;&#x6DF1;&#x5165;&#x8BE5;&#x76EE;&#x5F55;&#xFF09;&#xFF1B;&#x5982;&#x679C;&#x8BE5;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#xFF0C; Walk &#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x4F1A;&#x4E2D;&#x6B62;&#xFF1B;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x4F8B;&#x5916;&#xFF0C;&#x5982;&#x679C; Walk &#x7684; walkFn &#x8FD4;&#x56DE; &#x503C;&#x662F; SkipDir &#xFF0C;&#x5C06;&#x4F1A;&#x8DF3;&#x8FC7;&#x8BE5;&#x76EE;&#x5F55;&#x7684;&#x5185;&#x5BB9;&#x800C; Walk &#x51FD;&#x6570;&#x7167;&#x5E38;&#x6267;&#x884C;&#x5904;&#x7406;&#x4E0B;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x3002;"},"standards/os/filepath.html#Windows-起作用的函数":{"title":"Windows &#x8D77;&#x4F5C;&#x7528;&#x7684;&#x51FD;&#x6570;","path":"\\golang-learn\\standards\\os\\filepath.html#Windows-起作用的函数","body":"filepath &#x4E2D;&#x6709;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#xFF1A; VolumeName &#x3001; FromSlash &#x548C; ToSlash &#xFF0C;&#x9488;&#x5BF9;&#x975E; Unix &#x5E73;&#x53F0;&#x7684;&#x3002;"},"standards/text/strings.html":{"title":"strings","path":"\\golang-learn\\standards\\text\\strings.html","body":"strings 字符串常见操作有： 字符串长度； 求子串； 是否存在某个字符或子串； 子串出现的次数（字符串匹配）； 字符串分割（切分）为 []string ； 字符串是否有某个前缀或后缀； 字符或子串在字符串中首次出现的位置或最后一次出现的位置； 通过某个字符串将 []string 连接起来； 字符串重复几次； 字符串中子串替换； 大小写转换； Trim 操作； … 前缀和后缀 HasPrefix 判断字符串 s 是否以 prefix 开头： 1 strings.HasPrefix(s, prefix string ) bool HasSuffix 判断字符串 s 是否以 suffix 结尾： 1 strings.HasSuffix(s, suffix string ) bool 示例： 1 2 3 4 5 6 7 8 9 10 11 12 package main import ( \t \"fmt\" \t \"strings\" ) func main ()  \t var str string = \"This is an example of a string\" \tfmt.Printf( \"T/F? Does the string \\\"%s\\\" have prefix %s? \" , str, \"Th\" ) \tfmt.Printf( \"%t\\n\" , strings.HasPrefix(str, \"Th\" ))  输出： 1 T/F? Does the string This is an example of a string have prefix Th? true 判断是否包含字符串 Contains 判断字符串 s 是否包含 substr ： 1 strings.Contains(s, substr string ) bool 获取某个子字串在字符串中的位置（索引） Index 返回字符串 str 在字符串 s 中的索引（ str 的第一个字符的索引）， -1 表示字符串 s 不包含字符串 str ： 1 strings.Index(s, str string ) int LastIndex 返回字符串 str 在字符串 s 中最后出现位置的索引（ str 的第一个字符的索引）， -1 表示字符串 s 不包含字符 串 str ： 1 strings.LastIndex(s, str string ) int 示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import ( \t \"fmt\" \t \"strings\" ) func main ()  \t var str string = \"Hi, I'm Marc, Hi.\" \tfmt.Printf( \"The position of \\\"Marc\\\" is: \" ) \tfmt.Printf( \"%d\\n\" , strings.Index(str, \"Marc\" )) \tfmt.Printf( \"The position of the first instance of \\\"Hi\\\" is: \" ) \tfmt.Printf( \"%d\\n\" , strings.Index(str, \"Hi\" )) \tfmt.Printf( \"The position of the last instance of \\\"Hi\\\" is: \" ) \tfmt.Printf( \"%d\\n\" , strings.LastIndex(str, \"Hi\" )) \tfmt.Printf( \"The position of \\\"Burger\\\" is: \" ) \tfmt.Printf( \"%d\\n\" , strings.Index(str, \"Burger\" ))  输出： 1 2 3 4 The position of Marc is: 8 The position of the first instance of Hi is: 0 The position of the last instance of Hi is: 14 The position of Burger is: -1 计算字符串出现次数 Count 用于计算字符串 str 在字符串 s 中出现的非重叠次数： 1 strings.Count(s, str string ) int 示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import ( \t \"fmt\" \t \"strings\" ) func main ()  \t var str string = \"Hello, how is it going, Hugo?\" \t var manyG = \"gggggggggg\" \tfmt.Printf( \"Number of H's in %s is: \" , str) \tfmt.Printf( \"%d\\n\" , strings.Count(str, \"H\" )) \tfmt.Printf( \"Number of double g's in %s is: \" , manyG) \tfmt.Printf( \"%d\\n\" , strings.Count(manyG, \"gg\" ))  输出： 1 2 Number of H&apos;s in Hello, how is it going, Hugo? is: 2 Number of double g’s in gggggggggg is: 5 字符串替换 尽量不使用正则，否则会影响性能。 Replace 用于将字符串 str 中的前 n 个字符串 old 替换为字符串 new ，并返回一个新的字符串，如果 n = -1 则替换所 有字符串 old 为字符串 new ： 1 strings.Replace(str, old, new , n) string 示例： 1 2 3 4 5 6 7 8 9 10 11 package main import ( \t \"fmt\" \t \"strings\" ) func main ()  fmt.Println(strings.Replace( \"oink oink oink\" , \"k\" , \"ky\" , 2 )) fmt.Println(strings.Replace( \"oink oink oink\" , \"oink\" , \"moo\" , -1 ))  输出： 1 2 oinky oinky oink moo moo moo 重复字符串 Repeat 用于重复 count 次字符串 s 并返回一个新的字符串： 1 strings.Repeat(s, count int ) string 示例： 1 2 3 4 5 6 7 8 9 10 package main import ( \t \"fmt\" \t \"strings\" ) func main ()  fmt.Println( \"ba\" + strings.Repeat( \"na\" , 2 ))  输出： 1 banana 大小写转换 ToLower 将字符串中的 Unicode 字符全部转换为小写字符： 1 strings.ToLower(s) string ToUpper 将字符串中的 Unicode 字符全部转换为大写字符： 1 strings.ToUpper(s) string 示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package main import ( \t \"fmt\" \t \"strings\" ) func main ()  \t var orig string = \"Hey, how are you George?\" \t var lower string \t var upper string \tfmt.Printf( \"The original string is: %s\\n\" , orig) \tlower = strings.ToLower(orig) \tfmt.Printf( \"The lowercase string is: %s\\n\" , lower) \tupper = strings.ToUpper(orig) \tfmt.Printf( \"The uppercase string is: %s\\n\" , upper)  输出： 1 2 3 The original string is: Hey, how are you George? The lowercase string is: hey, how are you george? The uppercase string is: HEY, HOW ARE YOU GEORGE? 修改字符串 Trim 系列函数可以删除字符串首尾的连续多余字符，包括： 1 2 3 4 5 6 7 8 9 10 11 // 删除字符串首尾的字符 func Trim (s string , cutset string ) string // 删除字符串首的字符 func TrimLeft (s string , cutset string ) string // 删除字符串尾部的字符 func TrimRight (s string , cutset string ) string // 删除字符串首尾的空格 func TrimSpace (s string ) string 示例： 1 2 3 4 5 s := \"cutjjjcut\" // 将字符串 s 首尾的 `cut` 去除掉 newStr := strings.Trim(s, \"cut\" ) fmt.Println(newStr) 输出： 1 jjj JOIN Join 函数将字符串数组（或 slice ）连接起来： 1 func Join (a [] string , sep string ) string 示例： 1 fmt.Println(strings.Join([] string  \"name=xxx\" , \"age=xx\" , \"&amp;\" )) 输出： 1 name=xxx&amp;age=xx 分割字符串 Fields 1 2 // 用一个或多个连续的空格分隔字符串 s，返回子字符串的数组（slice） func Fields (s string ) [] string 示例： 1 fmt.Printf( \"Fields are: %q\" , strings.Fields( \" foo bar baz \" )) // Fields are: [\"foo\" \"bar\" \"baz\"] Fields 使用一个或多个空格分隔，也就是说返回的字符串中不会包含空格字符串。 如果字符串 s 只包含空格，则返回空列表 ( []string 的长度为 0 ） Split 和 SplitAfter、 SplitN 和 SplitAfterN 1 2 3 4 func Split (s, sep string ) [] string  return genSplit(s, sep, 0 , -1 )  func SplitAfter (s, sep string ) [] string  return genSplit(s, sep, len (sep), -1 )  func SplitN (s, sep string , n int ) [] string  return genSplit(s, sep, 0 , n)  func SplitAfterN (s, sep string , n int ) [] string  return genSplit(s, sep, len (sep), n)  它们都调用了 genSplit 函数。这四个函数都是通过 sep 进行分割，返回 []string 。 如果 sep 为空，相当于分成一个个的 UTF-8 字符，如 Split(abc,) ，得到的是 [a b c] 。 Split(s, sep) 和 SplitN(s, sep, -1) 等价。 SplitAfter(s, sep) 和 SplitAfterN(s, sep, -1) 等价。 Split 和 SplitAfter 的区别 1 2 fmt.Printf( \"%q\\n\" , strings.Split( \"foo,bar,baz\" , \",\" )) // [\"foo\" \"bar\" \"baz\"] fmt.Printf( \"%q\\n\" , strings.SplitAfter( \"foo,bar,baz\" , \",\" )) // [\"foo,\" \"bar,\" \"baz\"] 从输出可以看出， SplitAfter 会保留 sep 。 SplitN 和 SplitAfterN 这两个函数通过最后一个参数 n 控制返回的结果中的 slice 中的元素个数： 当 n  0 时，返回所有的子字符串 当 n == 0 时，返回的结果是 nil 当 n  0 时，表示返回的 slice 中最多只有 n 个元素，其中，最后一个元素不会分割 1 2 3 4 5 fmt.Printf( \"%q\\n\" , strings.SplitN( \"foo,bar,baz\" , \",\" , 2 )) // [\"foo\" \"bar,baz\"] fmt.Printf( \"%q\\n\" , strings.Split( \"a,b,c\" , \",\" )) // [\"a\" \"b\" \"c\"] fmt.Printf( \"%q\\n\" , strings.Split( \"a man a plan a canal panama\" , \"a \" )) // [\"\" \"man \" \"plan \" \"canal panama\"] fmt.Printf( \"%q\\n\" , strings.Split( \" xyz \" , \"\" )) // [\" \" \"x\" \"y\" \"z\" \" \"] fmt.Printf( \"%q\\n\" , strings.Split( \"\" , \"Bernardo O'Higgins\" )) // [\"\"] 从字符串中读取内容 函数 strings.NewReader(str) 用于生成一个 Reader 并读取字符串中的内容，然后返回指向该 Reader 的指针，从其它类型读取 内容的函数还有： Read() 从 []byte 中读取内容。 ReadByte() 和 ReadRune() 从字符串中读取下一个 byte 或者 rune。"},"standards/text/strings.html#strings":{"title":"strings","path":"\\golang-learn\\standards\\text\\strings.html#strings","body":"&#x5B57;&#x7B26;&#x4E32;&#x5E38;&#x89C1;&#x64CD;&#x4F5C;&#x6709;&#xFF1A; &#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6;&#xFF1B; &#x6C42;&#x5B50;&#x4E32;&#xFF1B; &#x662F;&#x5426;&#x5B58;&#x5728;&#x67D0;&#x4E2A;&#x5B57;&#x7B26;&#x6216;&#x5B50;&#x4E32;&#xFF1B; &#x5B50;&#x4E32;&#x51FA;&#x73B0;&#x7684;&#x6B21;&#x6570;&#xFF08;&#x5B57;&#x7B26;&#x4E32;&#x5339;&#x914D;&#xFF09;&#xFF1B; &#x5B57;&#x7B26;&#x4E32;&#x5206;&#x5272;&#xFF08;&#x5207;&#x5206;&#xFF09;&#x4E3A; []string &#xFF1B; &#x5B57;&#x7B26;&#x4E32;&#x662F;&#x5426;&#x6709;&#x67D0;&#x4E2A;&#x524D;&#x7F00;&#x6216;&#x540E;&#x7F00;&#xFF1B; &#x5B57;&#x7B26;&#x6216;&#x5B50;&#x4E32;&#x5728;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x9996;&#x6B21;&#x51FA;&#x73B0;&#x7684;&#x4F4D;&#x7F6E;&#x6216;&#x6700;&#x540E;&#x4E00;&#x6B21;&#x51FA;&#x73B0;&#x7684;&#x4F4D;&#x7F6E;&#xFF1B; &#x901A;&#x8FC7;&#x67D0;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5C06; []string &#x8FDE;&#x63A5;&#x8D77;&#x6765;&#xFF1B; &#x5B57;&#x7B26;&#x4E32;&#x91CD;&#x590D;&#x51E0;&#x6B21;&#xFF1B; &#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x5B50;&#x4E32;&#x66FF;&#x6362;&#xFF1B; &#x5927;&#x5C0F;&#x5199;&#x8F6C;&#x6362;&#xFF1B; Trim &#x64CD;&#x4F5C;&#xFF1B; &#x2026;"},"standards/text/strings.html#前缀和后缀":{"title":"&#x524D;&#x7F00;&#x548C;&#x540E;&#x7F00;","path":"\\golang-learn\\standards\\text\\strings.html#前缀和后缀","body":"HasPrefix &#x5224;&#x65AD;&#x5B57;&#x7B26;&#x4E32; s &#x662F;&#x5426;&#x4EE5; prefix &#x5F00;&#x5934;&#xFF1A; 1 strings.HasPrefix(s, prefix string ) bool HasSuffix &#x5224;&#x65AD;&#x5B57;&#x7B26;&#x4E32; s &#x662F;&#x5426;&#x4EE5; suffix &#x7ED3;&#x5C3E;&#xFF1A; 1 strings.HasSuffix(s, suffix string ) bool &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 package main import ( \t fmt \t strings ) func main () { \t var str string = This is an example of a string \tfmt.Printf( T/F? Does the string \\%s\\ have prefix %s?  , str, Th ) \tfmt.Printf( %t\\n , strings.HasPrefix(str, Th )) } &#x8F93;&#x51FA;&#xFF1A; 1 T/F? Does the string This is an example of a string have prefix Th? true"},"standards/text/strings.html#判断是否包含字符串":{"title":"&#x5224;&#x65AD;&#x662F;&#x5426;&#x5305;&#x542B;&#x5B57;&#x7B26;&#x4E32;","path":"\\golang-learn\\standards\\text\\strings.html#判断是否包含字符串","body":"Contains &#x5224;&#x65AD;&#x5B57;&#x7B26;&#x4E32; s &#x662F;&#x5426;&#x5305;&#x542B; substr &#xFF1A; 1 strings.Contains(s, substr string ) bool"},"standards/text/strings.html#获取某个子字串在字符串中的位置（索引）":{"title":"&#x83B7;&#x53D6;&#x67D0;&#x4E2A;&#x5B50;&#x5B57;&#x4E32;&#x5728;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#xFF08;&#x7D22;&#x5F15;&#xFF09;","path":"\\golang-learn\\standards\\text\\strings.html#获取某个子字串在字符串中的位置（索引）","body":"Index &#x8FD4;&#x56DE;&#x5B57;&#x7B26;&#x4E32; str &#x5728;&#x5B57;&#x7B26;&#x4E32; s &#x4E2D;&#x7684;&#x7D22;&#x5F15;&#xFF08; str &#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x7D22;&#x5F15;&#xFF09;&#xFF0C; -1 &#x8868;&#x793A;&#x5B57;&#x7B26;&#x4E32; s &#x4E0D;&#x5305;&#x542B;&#x5B57;&#x7B26;&#x4E32; str &#xFF1A; 1 strings.Index(s, str string ) int LastIndex &#x8FD4;&#x56DE;&#x5B57;&#x7B26;&#x4E32; str &#x5728;&#x5B57;&#x7B26;&#x4E32; s &#x4E2D;&#x6700;&#x540E;&#x51FA;&#x73B0;&#x4F4D;&#x7F6E;&#x7684;&#x7D22;&#x5F15;&#xFF08; str &#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x7D22;&#x5F15;&#xFF09;&#xFF0C; -1 &#x8868;&#x793A;&#x5B57;&#x7B26;&#x4E32; s &#x4E0D;&#x5305;&#x542B;&#x5B57;&#x7B26; &#x4E32; str &#xFF1A; 1 strings.LastIndex(s, str string ) int &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import ( \t fmt \t strings ) func main () { \t var str string = Hi, I&apos;m Marc, Hi. \tfmt.Printf( The position of \\Marc\\ is:  ) \tfmt.Printf( %d\\n , strings.Index(str, Marc )) \tfmt.Printf( The position of the first instance of \\Hi\\ is:  ) \tfmt.Printf( %d\\n , strings.Index(str, Hi )) \tfmt.Printf( The position of the last instance of \\Hi\\ is:  ) \tfmt.Printf( %d\\n , strings.LastIndex(str, Hi )) \tfmt.Printf( The position of \\Burger\\ is:  ) \tfmt.Printf( %d\\n , strings.Index(str, Burger )) } &#x8F93;&#x51FA;&#xFF1A; 1 2 3 4 The position of Marc is: 8 The position of the first instance of Hi is: 0 The position of the last instance of Hi is: 14 The position of Burger is: -1"},"standards/text/strings.html#计算字符串出现次数":{"title":"&#x8BA1;&#x7B97;&#x5B57;&#x7B26;&#x4E32;&#x51FA;&#x73B0;&#x6B21;&#x6570;","path":"\\golang-learn\\standards\\text\\strings.html#计算字符串出现次数","body":"Count &#x7528;&#x4E8E;&#x8BA1;&#x7B97;&#x5B57;&#x7B26;&#x4E32; str &#x5728;&#x5B57;&#x7B26;&#x4E32; s &#x4E2D;&#x51FA;&#x73B0;&#x7684;&#x975E;&#x91CD;&#x53E0;&#x6B21;&#x6570;&#xFF1A; 1 strings.Count(s, str string ) int &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import ( \t fmt \t strings ) func main () { \t var str string = Hello, how is it going, Hugo? \t var manyG = gggggggggg \tfmt.Printf( Number of H&apos;s in %s is:  , str) \tfmt.Printf( %d\\n , strings.Count(str, H )) \tfmt.Printf( Number of double g&apos;s in %s is:  , manyG) \tfmt.Printf( %d\\n , strings.Count(manyG, gg )) } &#x8F93;&#x51FA;&#xFF1A; 1 2 Number of H&apos;s in Hello, how is it going, Hugo? is: 2 Number of double g&#x2019;s in gggggggggg is: 5"},"standards/text/strings.html#字符串替换":{"title":"&#x5B57;&#x7B26;&#x4E32;&#x66FF;&#x6362;","path":"\\golang-learn\\standards\\text\\strings.html#字符串替换","body":"&#x5C3D;&#x91CF;&#x4E0D;&#x4F7F;&#x7528;&#x6B63;&#x5219;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x5F71;&#x54CD;&#x6027;&#x80FD;&#x3002; Replace &#x7528;&#x4E8E;&#x5C06;&#x5B57;&#x7B26;&#x4E32; str &#x4E2D;&#x7684;&#x524D; n &#x4E2A;&#x5B57;&#x7B26;&#x4E32; old &#x66FF;&#x6362;&#x4E3A;&#x5B57;&#x7B26;&#x4E32; new &#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;&#x679C; n = -1 &#x5219;&#x66FF;&#x6362;&#x6240; &#x6709;&#x5B57;&#x7B26;&#x4E32; old &#x4E3A;&#x5B57;&#x7B26;&#x4E32; new &#xFF1A; 1 strings.Replace(str, old, new , n) string &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 package main import ( \t fmt \t strings ) func main () { fmt.Println(strings.Replace( oink oink oink , k , ky , 2 )) fmt.Println(strings.Replace( oink oink oink , oink , moo , -1 )) } &#x8F93;&#x51FA;&#xFF1A; 1 2 oinky oinky oink moo moo moo"},"standards/text/strings.html#重复字符串":{"title":"&#x91CD;&#x590D;&#x5B57;&#x7B26;&#x4E32;","path":"\\golang-learn\\standards\\text\\strings.html#重复字符串","body":"Repeat &#x7528;&#x4E8E;&#x91CD;&#x590D; count &#x6B21;&#x5B57;&#x7B26;&#x4E32; s &#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF1A; 1 strings.Repeat(s, count int ) string &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 package main import ( \t fmt \t strings ) func main () { fmt.Println( ba + strings.Repeat( na , 2 )) } &#x8F93;&#x51FA;&#xFF1A; 1 banana"},"standards/text/strings.html#大小写转换":{"title":"&#x5927;&#x5C0F;&#x5199;&#x8F6C;&#x6362;","path":"\\golang-learn\\standards\\text\\strings.html#大小写转换","body":"ToLower &#x5C06;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684; Unicode &#x5B57;&#x7B26;&#x5168;&#x90E8;&#x8F6C;&#x6362;&#x4E3A;&#x5C0F;&#x5199;&#x5B57;&#x7B26;&#xFF1A; 1 strings.ToLower(s) string ToUpper &#x5C06;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684; Unicode &#x5B57;&#x7B26;&#x5168;&#x90E8;&#x8F6C;&#x6362;&#x4E3A;&#x5927;&#x5199;&#x5B57;&#x7B26;&#xFF1A; 1 strings.ToUpper(s) string &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 package main import ( \t fmt \t strings ) func main () { \t var orig string = Hey, how are you George? \t var lower string \t var upper string \tfmt.Printf( The original string is: %s\\n , orig) \tlower = strings.ToLower(orig) \tfmt.Printf( The lowercase string is: %s\\n , lower) \tupper = strings.ToUpper(orig) \tfmt.Printf( The uppercase string is: %s\\n , upper) } &#x8F93;&#x51FA;&#xFF1A; 1 2 3 The original string is: Hey, how are you George? The lowercase string is: hey, how are you george? The uppercase string is: HEY, HOW ARE YOU GEORGE?"},"standards/text/strings.html#修改字符串":{"title":"&#x4FEE;&#x6539;&#x5B57;&#x7B26;&#x4E32;","path":"\\golang-learn\\standards\\text\\strings.html#修改字符串","body":"Trim &#x7CFB;&#x5217;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x5220;&#x9664;&#x5B57;&#x7B26;&#x4E32;&#x9996;&#x5C3E;&#x7684;&#x8FDE;&#x7EED;&#x591A;&#x4F59;&#x5B57;&#x7B26;&#xFF0C;&#x5305;&#x62EC;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 // &#x5220;&#x9664;&#x5B57;&#x7B26;&#x4E32;&#x9996;&#x5C3E;&#x7684;&#x5B57;&#x7B26; func Trim (s string , cutset string ) string // &#x5220;&#x9664;&#x5B57;&#x7B26;&#x4E32;&#x9996;&#x7684;&#x5B57;&#x7B26; func TrimLeft (s string , cutset string ) string // &#x5220;&#x9664;&#x5B57;&#x7B26;&#x4E32;&#x5C3E;&#x90E8;&#x7684;&#x5B57;&#x7B26; func TrimRight (s string , cutset string ) string // &#x5220;&#x9664;&#x5B57;&#x7B26;&#x4E32;&#x9996;&#x5C3E;&#x7684;&#x7A7A;&#x683C; func TrimSpace (s string ) string &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 s := cutjjjcut // &#x5C06;&#x5B57;&#x7B26;&#x4E32; s &#x9996;&#x5C3E;&#x7684; `cut` &#x53BB;&#x9664;&#x6389; newStr := strings.Trim(s, cut ) fmt.Println(newStr) &#x8F93;&#x51FA;&#xFF1A; 1 jjj"},"standards/text/strings.html#JOIN":{"title":"JOIN","path":"\\golang-learn\\standards\\text\\strings.html#JOIN","body":"Join &#x51FD;&#x6570;&#x5C06;&#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4;&#xFF08;&#x6216; slice &#xFF09;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#xFF1A; 1 func Join (a [] string , sep string ) string &#x793A;&#x4F8B;&#xFF1A; 1 fmt.Println(strings.Join([] string { name=xxx , age=xx }, &amp; )) &#x8F93;&#x51FA;&#xFF1A; 1 name=xxx&amp;age=xx"},"standards/text/strings.html#分割字符串":{"title":"&#x5206;&#x5272;&#x5B57;&#x7B26;&#x4E32;","path":"\\golang-learn\\standards\\text\\strings.html#分割字符串","body":"Fields 1 2 // &#x7528;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x8FDE;&#x7EED;&#x7684;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x5B57;&#x7B26;&#x4E32; s&#xFF0C;&#x8FD4;&#x56DE;&#x5B50;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x6570;&#x7EC4;&#xFF08;slice&#xFF09; func Fields (s string ) [] string &#x793A;&#x4F8B;&#xFF1A; 1 fmt.Printf( Fields are: %q , strings.Fields(  foo bar baz  )) // Fields are: [foo bar baz] Fields &#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x7A7A;&#x683C;&#x5206;&#x9694;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x8FD4;&#x56DE;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x4E0D;&#x4F1A;&#x5305;&#x542B;&#x7A7A;&#x683C;&#x5B57;&#x7B26;&#x4E32;&#x3002; &#x5982;&#x679C;&#x5B57;&#x7B26;&#x4E32; s &#x53EA;&#x5305;&#x542B;&#x7A7A;&#x683C;&#xFF0C;&#x5219;&#x8FD4;&#x56DE;&#x7A7A;&#x5217;&#x8868; ( []string &#x7684;&#x957F;&#x5EA6;&#x4E3A; 0 &#xFF09; Split &#x548C; SplitAfter&#x3001; SplitN &#x548C; SplitAfterN 1 2 3 4 func Split (s, sep string ) [] string { return genSplit(s, sep, 0 , -1 ) } func SplitAfter (s, sep string ) [] string { return genSplit(s, sep, len (sep), -1 ) } func SplitN (s, sep string , n int ) [] string { return genSplit(s, sep, 0 , n) } func SplitAfterN (s, sep string , n int ) [] string { return genSplit(s, sep, len (sep), n) } &#x5B83;&#x4EEC;&#x90FD;&#x8C03;&#x7528;&#x4E86; genSplit &#x51FD;&#x6570;&#x3002;&#x8FD9;&#x56DB;&#x4E2A;&#x51FD;&#x6570;&#x90FD;&#x662F;&#x901A;&#x8FC7; sep &#x8FDB;&#x884C;&#x5206;&#x5272;&#xFF0C;&#x8FD4;&#x56DE; []string &#x3002; &#x5982;&#x679C; sep &#x4E3A;&#x7A7A;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x5206;&#x6210;&#x4E00;&#x4E2A;&#x4E2A;&#x7684; UTF-8 &#x5B57;&#x7B26;&#xFF0C;&#x5982; Split(abc,) &#xFF0C;&#x5F97;&#x5230;&#x7684;&#x662F; [a b c] &#x3002; Split(s, sep) &#x548C; SplitN(s, sep, -1) &#x7B49;&#x4EF7;&#x3002; SplitAfter(s, sep) &#x548C; SplitAfterN(s, sep, -1) &#x7B49;&#x4EF7;&#x3002; Split &#x548C; SplitAfter &#x7684;&#x533A;&#x522B; 1 2 fmt.Printf( %q\\n , strings.Split( foo,bar,baz , , )) // [foo bar baz] fmt.Printf( %q\\n , strings.SplitAfter( foo,bar,baz , , )) // [foo, bar, baz] &#x4ECE;&#x8F93;&#x51FA;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C; SplitAfter &#x4F1A;&#x4FDD;&#x7559; sep &#x3002; SplitN &#x548C; SplitAfterN &#x8FD9;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x901A;&#x8FC7;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570; n &#x63A7;&#x5236;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x4E2D;&#x7684; slice &#x4E2D;&#x7684;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#xFF1A; &#x5F53; n  0 &#x65F6;&#xFF0C;&#x8FD4;&#x56DE;&#x6240;&#x6709;&#x7684;&#x5B50;&#x5B57;&#x7B26;&#x4E32; &#x5F53; n == 0 &#x65F6;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x662F; nil &#x5F53; n  0 &#x65F6;&#xFF0C;&#x8868;&#x793A;&#x8FD4;&#x56DE;&#x7684; slice &#x4E2D;&#x6700;&#x591A;&#x53EA;&#x6709; n &#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x5176;&#x4E2D;&#xFF0C;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x4E0D;&#x4F1A;&#x5206;&#x5272; 1 2 3 4 5 fmt.Printf( %q\\n , strings.SplitN( foo,bar,baz , , , 2 )) // [foo bar,baz] fmt.Printf( %q\\n , strings.Split( a,b,c , , )) // [a b c] fmt.Printf( %q\\n , strings.Split( a man a plan a canal panama , a  )) // [ man  plan  canal panama] fmt.Printf( %q\\n , strings.Split(  xyz  ,  )) // [  x y z  ] fmt.Printf( %q\\n , strings.Split(  , Bernardo O&apos;Higgins )) // []"},"standards/text/strings.html#从字符串中读取内容":{"title":"&#x4ECE;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x8BFB;&#x53D6;&#x5185;&#x5BB9;","path":"\\golang-learn\\standards\\text\\strings.html#从字符串中读取内容","body":"&#x51FD;&#x6570; strings.NewReader(str) &#x7528;&#x4E8E;&#x751F;&#x6210;&#x4E00;&#x4E2A; Reader &#x5E76;&#x8BFB;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x7136;&#x540E;&#x8FD4;&#x56DE;&#x6307;&#x5411;&#x8BE5; Reader &#x7684;&#x6307;&#x9488;&#xFF0C;&#x4ECE;&#x5176;&#x5B83;&#x7C7B;&#x578B;&#x8BFB;&#x53D6; &#x5185;&#x5BB9;&#x7684;&#x51FD;&#x6570;&#x8FD8;&#x6709;&#xFF1A; Read() &#x4ECE; []byte &#x4E2D;&#x8BFB;&#x53D6;&#x5185;&#x5BB9;&#x3002; ReadByte() &#x548C; ReadRune() &#x4ECE;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x8BFB;&#x53D6;&#x4E0B;&#x4E00;&#x4E2A; byte &#x6216;&#x8005; rune&#x3002;"},"standards/data/math.html":{"title":"math","path":"\\golang-learn\\standards\\data\\math.html","body":"math math 包实现的就是数学函数计算。 三角函数 正弦函数，反正弦函数，双曲正弦，反双曲正弦 1 2 3 4 - func Sin(x float64) float64 - func Asin(x float64) float64 - func Sinh(x float64) float64 - func Asinh(x float64) float64 一次性返回 sin , cos func Sincos(x float64) (sin, cos float64) 余弦函数，反余弦函数，双曲余弦，反双曲余弦 1 2 3 4 - func Cos(x float64) float64 - func Acos(x float64) float64 - func Cosh(x float64) float64 - func Acosh(x float64) float64 正切函数，反正切函数，双曲正切，反双曲正切 1 2 3 4 - func Tan(x float64) float64 - func Atan(x float64) float64 和 func Atan2(y, x float64) float64 - func Tanh(x float64) float64 - func Atanh(x float64) float64 幂次函数 1 2 3 4 5 6 7 8 9 10 11 12 13 - func Cbrt(x float64) float64 // 立方根函数 - func Pow(x, y float64) float64 // x 的幂函数 - func Pow10(e int) float64 // 10 根的幂函数 - func Sqrt(x float64) float64 // 平方根 - func Log(x float64) float64 // 对数函数 - func Log10(x float64) float64 // 10 为底的对数函数 - func Log2(x float64) float64 // 2 为底的对数函数 - func Log1p(x float64) float64 // log(1 + x) - func Logb(x float64) float64 // 相当于 log2(x) 的绝对值 - func Ilogb(x float64) int // 相当于 log2(x) 的绝对值的整数部分 - func Exp(x float64) float64 // 指数函数 - func Exp2(x float64) float64 // 2 为底的指数函数 - func Expm1(x float64) float64 // Exp(x) - 1 特殊函数 1 2 3 4 5 - func Inf(sign int) float64 // 正无穷 - func IsInf(f float64, sign int) bool // 是否正无穷 - func NaN() float64 // 无穷值 - func IsNaN(f float64) (is bool) // 是否是无穷值 - func Hypot(p, q float64) float64 // 计算直角三角形的斜边长 类型转化函数 1 2 3 4 - func Float32bits(f float32) uint32 // float32 和 unit32 的转换 - func Float32frombits(b uint32) float32 // uint32 和 float32 的转换 - func Float64bits(f float64) uint64 // float64 和 uint64 的转换 - func Float64frombits(b uint64) float64 // uint64 和 float64 的转换 其他函数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 - func Abs(x float64) float64 // 绝对值函数 - func Ceil(x float64) float64 // 向上取整 - func Floor(x float64) float64 // 向下取整 - func Mod(x, y float64) float64 // 取模 - func Modf(f float64) (int float64, frac float64) // 分解 f，以得到 f 的整数和小数部分 - func Frexp(f float64) (frac float64, exp int) // 分解 f，得到 f 的位数和指数 - func Max(x, y float64) float64 // 取大值 - func Min(x, y float64) float64 // 取小值 - func Dim(x, y float64) float64 // 复数的维数 - func J0(x float64) float64 // 0 阶贝塞尔函数 - func J1(x float64) float64 // 1 阶贝塞尔函数 - func Jn(n int, x float64) float64 // n 阶贝塞尔函数 - func Y0(x float64) float64 // 第二类贝塞尔函数 0 阶 - func Y1(x float64) float64 // 第二类贝塞尔函数 1 阶 - func Yn(n int, x float64) float64 // 第二类贝塞尔函数 n 阶 - func Erf(x float64) float64 // 误差函数 - func Erfc(x float64) float64 // 余补误差函数 - func Copysign(x, y float64) float64 // 以 y 的符号返回 x 值 - func Signbit(x float64) bool // 获取 x 的符号 - func Gamma(x float64) float64 // 伽玛函数 - func Lgamma(x float64) (lgamma float64, sign int) // 伽玛函数的自然对数 - func Ldexp(frac float64, exp int) float64 // value 乘以 2 的 exp 次幂 - func Nextafter(x, y float64) (r float64) // 返回参数 x 在参数 y 方向上可以表示的最接近的数值，若 x 等于 y，则返回 x - func Nextafter32(x, y float32) (r float32) // 返回参数 x 在参数 y 方向上可以表示的最接近的数值，若 x 等于 y，则返回 x - func Remainder(x, y float64) float64 // 取余运算 - func Trunc(x float64) float64 // 截取函数"},"standards/data/math.html#math":{"title":"math","path":"\\golang-learn\\standards\\data\\math.html#math","body":"math &#x5305;&#x5B9E;&#x73B0;&#x7684;&#x5C31;&#x662F;&#x6570;&#x5B66;&#x51FD;&#x6570;&#x8BA1;&#x7B97;&#x3002;"},"standards/data/math.html#三角函数":{"title":"&#x4E09;&#x89D2;&#x51FD;&#x6570;","path":"\\golang-learn\\standards\\data\\math.html#三角函数","body":"&#x6B63;&#x5F26;&#x51FD;&#x6570;&#xFF0C;&#x53CD;&#x6B63;&#x5F26;&#x51FD;&#x6570;&#xFF0C;&#x53CC;&#x66F2;&#x6B63;&#x5F26;&#xFF0C;&#x53CD;&#x53CC;&#x66F2;&#x6B63;&#x5F26; 1 2 3 4 - func Sin(x float64) float64 - func Asin(x float64) float64 - func Sinh(x float64) float64 - func Asinh(x float64) float64 &#x4E00;&#x6B21;&#x6027;&#x8FD4;&#x56DE; sin , cos func Sincos(x float64) (sin, cos float64) &#x4F59;&#x5F26;&#x51FD;&#x6570;&#xFF0C;&#x53CD;&#x4F59;&#x5F26;&#x51FD;&#x6570;&#xFF0C;&#x53CC;&#x66F2;&#x4F59;&#x5F26;&#xFF0C;&#x53CD;&#x53CC;&#x66F2;&#x4F59;&#x5F26; 1 2 3 4 - func Cos(x float64) float64 - func Acos(x float64) float64 - func Cosh(x float64) float64 - func Acosh(x float64) float64 &#x6B63;&#x5207;&#x51FD;&#x6570;&#xFF0C;&#x53CD;&#x6B63;&#x5207;&#x51FD;&#x6570;&#xFF0C;&#x53CC;&#x66F2;&#x6B63;&#x5207;&#xFF0C;&#x53CD;&#x53CC;&#x66F2;&#x6B63;&#x5207; 1 2 3 4 - func Tan(x float64) float64 - func Atan(x float64) float64 &#x548C; func Atan2(y, x float64) float64 - func Tanh(x float64) float64 - func Atanh(x float64) float64"},"standards/data/math.html#幂次函数":{"title":"&#x5E42;&#x6B21;&#x51FD;&#x6570;","path":"\\golang-learn\\standards\\data\\math.html#幂次函数","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 - func Cbrt(x float64) float64 // &#x7ACB;&#x65B9;&#x6839;&#x51FD;&#x6570; - func Pow(x, y float64) float64 // x &#x7684;&#x5E42;&#x51FD;&#x6570; - func Pow10(e int) float64 // 10 &#x6839;&#x7684;&#x5E42;&#x51FD;&#x6570; - func Sqrt(x float64) float64 // &#x5E73;&#x65B9;&#x6839; - func Log(x float64) float64 // &#x5BF9;&#x6570;&#x51FD;&#x6570; - func Log10(x float64) float64 // 10 &#x4E3A;&#x5E95;&#x7684;&#x5BF9;&#x6570;&#x51FD;&#x6570; - func Log2(x float64) float64 // 2 &#x4E3A;&#x5E95;&#x7684;&#x5BF9;&#x6570;&#x51FD;&#x6570; - func Log1p(x float64) float64 // log(1 + x) - func Logb(x float64) float64 // &#x76F8;&#x5F53;&#x4E8E; log2(x) &#x7684;&#x7EDD;&#x5BF9;&#x503C; - func Ilogb(x float64) int // &#x76F8;&#x5F53;&#x4E8E; log2(x) &#x7684;&#x7EDD;&#x5BF9;&#x503C;&#x7684;&#x6574;&#x6570;&#x90E8;&#x5206; - func Exp(x float64) float64 // &#x6307;&#x6570;&#x51FD;&#x6570; - func Exp2(x float64) float64 // 2 &#x4E3A;&#x5E95;&#x7684;&#x6307;&#x6570;&#x51FD;&#x6570; - func Expm1(x float64) float64 // Exp(x) - 1"},"standards/data/math.html#特殊函数":{"title":"&#x7279;&#x6B8A;&#x51FD;&#x6570;","path":"\\golang-learn\\standards\\data\\math.html#特殊函数","body":"1 2 3 4 5 - func Inf(sign int) float64 // &#x6B63;&#x65E0;&#x7A77; - func IsInf(f float64, sign int) bool // &#x662F;&#x5426;&#x6B63;&#x65E0;&#x7A77; - func NaN() float64 // &#x65E0;&#x7A77;&#x503C; - func IsNaN(f float64) (is bool) // &#x662F;&#x5426;&#x662F;&#x65E0;&#x7A77;&#x503C; - func Hypot(p, q float64) float64 // &#x8BA1;&#x7B97;&#x76F4;&#x89D2;&#x4E09;&#x89D2;&#x5F62;&#x7684;&#x659C;&#x8FB9;&#x957F;"},"standards/data/math.html#类型转化函数":{"title":"&#x7C7B;&#x578B;&#x8F6C;&#x5316;&#x51FD;&#x6570;","path":"\\golang-learn\\standards\\data\\math.html#类型转化函数","body":"1 2 3 4 - func Float32bits(f float32) uint32 // float32 &#x548C; unit32 &#x7684;&#x8F6C;&#x6362; - func Float32frombits(b uint32) float32 // uint32 &#x548C; float32 &#x7684;&#x8F6C;&#x6362; - func Float64bits(f float64) uint64 // float64 &#x548C; uint64 &#x7684;&#x8F6C;&#x6362; - func Float64frombits(b uint64) float64 // uint64 &#x548C; float64 &#x7684;&#x8F6C;&#x6362;"},"standards/data/math.html#其他函数":{"title":"&#x5176;&#x4ED6;&#x51FD;&#x6570;","path":"\\golang-learn\\standards\\data\\math.html#其他函数","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 - func Abs(x float64) float64 // &#x7EDD;&#x5BF9;&#x503C;&#x51FD;&#x6570; - func Ceil(x float64) float64 // &#x5411;&#x4E0A;&#x53D6;&#x6574; - func Floor(x float64) float64 // &#x5411;&#x4E0B;&#x53D6;&#x6574; - func Mod(x, y float64) float64 // &#x53D6;&#x6A21; - func Modf(f float64) (int float64, frac float64) // &#x5206;&#x89E3; f&#xFF0C;&#x4EE5;&#x5F97;&#x5230; f &#x7684;&#x6574;&#x6570;&#x548C;&#x5C0F;&#x6570;&#x90E8;&#x5206; - func Frexp(f float64) (frac float64, exp int) // &#x5206;&#x89E3; f&#xFF0C;&#x5F97;&#x5230; f &#x7684;&#x4F4D;&#x6570;&#x548C;&#x6307;&#x6570; - func Max(x, y float64) float64 // &#x53D6;&#x5927;&#x503C; - func Min(x, y float64) float64 // &#x53D6;&#x5C0F;&#x503C; - func Dim(x, y float64) float64 // &#x590D;&#x6570;&#x7684;&#x7EF4;&#x6570; - func J0(x float64) float64 // 0 &#x9636;&#x8D1D;&#x585E;&#x5C14;&#x51FD;&#x6570; - func J1(x float64) float64 // 1 &#x9636;&#x8D1D;&#x585E;&#x5C14;&#x51FD;&#x6570; - func Jn(n int, x float64) float64 // n &#x9636;&#x8D1D;&#x585E;&#x5C14;&#x51FD;&#x6570; - func Y0(x float64) float64 // &#x7B2C;&#x4E8C;&#x7C7B;&#x8D1D;&#x585E;&#x5C14;&#x51FD;&#x6570; 0 &#x9636; - func Y1(x float64) float64 // &#x7B2C;&#x4E8C;&#x7C7B;&#x8D1D;&#x585E;&#x5C14;&#x51FD;&#x6570; 1 &#x9636; - func Yn(n int, x float64) float64 // &#x7B2C;&#x4E8C;&#x7C7B;&#x8D1D;&#x585E;&#x5C14;&#x51FD;&#x6570; n &#x9636; - func Erf(x float64) float64 // &#x8BEF;&#x5DEE;&#x51FD;&#x6570; - func Erfc(x float64) float64 // &#x4F59;&#x8865;&#x8BEF;&#x5DEE;&#x51FD;&#x6570; - func Copysign(x, y float64) float64 // &#x4EE5; y &#x7684;&#x7B26;&#x53F7;&#x8FD4;&#x56DE; x &#x503C; - func Signbit(x float64) bool // &#x83B7;&#x53D6; x &#x7684;&#x7B26;&#x53F7; - func Gamma(x float64) float64 // &#x4F3D;&#x739B;&#x51FD;&#x6570; - func Lgamma(x float64) (lgamma float64, sign int) // &#x4F3D;&#x739B;&#x51FD;&#x6570;&#x7684;&#x81EA;&#x7136;&#x5BF9;&#x6570; - func Ldexp(frac float64, exp int) float64 // value &#x4E58;&#x4EE5; 2 &#x7684; exp &#x6B21;&#x5E42; - func Nextafter(x, y float64) (r float64) // &#x8FD4;&#x56DE;&#x53C2;&#x6570; x &#x5728;&#x53C2;&#x6570; y &#x65B9;&#x5411;&#x4E0A;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x7684;&#x6700;&#x63A5;&#x8FD1;&#x7684;&#x6570;&#x503C;&#xFF0C;&#x82E5; x &#x7B49;&#x4E8E; y&#xFF0C;&#x5219;&#x8FD4;&#x56DE; x - func Nextafter32(x, y float32) (r float32) // &#x8FD4;&#x56DE;&#x53C2;&#x6570; x &#x5728;&#x53C2;&#x6570; y &#x65B9;&#x5411;&#x4E0A;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#x7684;&#x6700;&#x63A5;&#x8FD1;&#x7684;&#x6570;&#x503C;&#xFF0C;&#x82E5; x &#x7B49;&#x4E8E; y&#xFF0C;&#x5219;&#x8FD4;&#x56DE; x - func Remainder(x, y float64) float64 // &#x53D6;&#x4F59;&#x8FD0;&#x7B97; - func Trunc(x float64) float64 // &#x622A;&#x53D6;&#x51FD;&#x6570;"},"concurrent/goroutine.html":{"title":"goroutine","path":"\\golang-learn\\concurrent\\goroutine.html","body":"goroutine 并发和并行 并发 一个 cpu 上能同时执行多项任务，在很短时间内，cpu 来回切换任务执行(在某段很短时间内执行程序 a，然后又迅速得切换到程序 b 去执行)， 有时间上的重叠（宏观上是同时的，微观仍是顺序执行）,这样看起来多个任务像是同时执行，这就是 并发 。 并行 当系统有多个 CPU 时,每个 CPU 同一时刻都运行任务，互不抢占自己所在的 CPU 资源，同时进行，称为 并行 。并行是并发设计的 理想模式。 进程 cpu 在切换程序的时候，如果不保存上一个程序的状态（也就是我们常说的 context –上下文），直接切换下一个程序，就会丢失上一个 程序的一系列状态，于是引入了进程这个概念，用以划分好程序运行时所需要的资源。因此进程就是一个程序运行时候的所需要的基本资源单 位（也可以说是程序运行的一个实体）。 线程 cpu 切换多个进程的时候，会花费不少的时间，因为切换进程需要切换到内核态，而每次调度需要内核态都需要读取用户态的数据，进程 一旦多起来，cpu 调度会消耗一大堆资源，因此引入了线程的概念，线程本身几乎不占有资源，他们共享进程里的资源，内核调度起来不 会那么像进程切换那么耗费资源。 协程 多线程和多进程是并行的基本条件，但是单线程可以利用 协程 做到并发。协程拥有自己的寄存器上下文和栈。协程在线程上通过主动 切换来实现并发，减少了阻塞时间，还避免了线程切换的开销。但协程运行的并发本质上还是串行的。线程和进程的操作是由程序触发系统 接口，最后的执行者是系统；协程的操作执行者则是用户自身程序。 goroutine Go 语言在语言层面上支持了并发，简单将 goroutine 归为协程并不合适。Go runtime 会创建多个线程来执行并发任务，而且任务 可以跨线程调度。所以 goroutine 更像是多线程和协程的结合体。 goroutine 可以简单理解为协程，开销较低 (大概是 4~5KB )，当然会根据相应的数据伸缩。也正因为如此，可同时运行成千 上万个并发任务。 goroutine 比 thread 更易用、更高效、更轻便。我们程序运行的 main 函数在一个单独的 goroutine 中运行， 叫做 主 goroutine 。在代码中可以使用 go 关键字创建 goroutine 。 1 go f() main 函数返回时，所有 goroutine 都会被打断，程序退出 。除了从 main 函数退出或者直接终止程序之外，没有其它 的编程方法能够让一个 goroutine 来打断另一个的执行，但是之后可以看到一种方式来实现这个目的，通过 goroutine 之间 的通信来让一个 goroutine 请求其它的 goroutine ，使被请求 goroutine 自行结束执行。 什么是主 goroutine，它与我们启用的其他 goroutine 有什么不同 1 2 3 4 5 6 7 8 9 10 11 package main import \"fmt\" func main ()  \t for i := 0 ; i  10 ; i++  \t\t go func ()  \t\t\tfmt.Println(i) \t\t() \t  上面的代码会打印出什么内容？ 回答是：不会有任何内容被打印出来。 Go 语言不但有着独特的并发编程模型，以及用户级线程 goroutine ，还拥有强大的用于调度 goroutine 、对接系统级线程的 调度器 。 调度器的主要有 3 个重要部分，分别是 M、G、P。 G（goroutine 的缩写）， 协程的实体，包括了调用栈，重要的调度信息，例如 channel 等。 P（processor 的缩写），是衔接 M 和 G 的调度上下文，一个 P 可以承载若干个 G，且能够使这些 G 适时地与 M 进行 对接，并得到真正运行的中介。P 的数量可以通过 runtime.GOMAXPROCS() 来设置，P 的数量决定了系统内最大可并行的 G 的数量， 即有多少个 goroutine 可以同时运行。 M（machine 的缩写），代表的是系统级线程，由操作系统管理。 与一个进程总会有一个主线程类似，每一个独立的 Go 程序在运行时也总会有一个主 goroutine 。这个主 goroutine 会在 Go 程 序的运行准备工作完成后被自动地启用，并不需要我们做任何手动的操作。 每条 go 语句一般都会携带一个函数调用，这个被调用的函数常常被称为 go 函数。而主 goroutine 的 go 函数就是 那个作为程序入口的 main 函数 。 go 函数真正被执行的时间总会与其所属的 go 语句被执行的时间不同 。 当程序执行到一条 go 语句的时候， go 关键字并不是执行并发操作，而是创建一个并发任务单元 。Go 语言的运行时系统，会先试图从某个 存放空闲的 G 的队列中获取一个 G（也就是 goroutine ），它只有在找不到空闲 G 的情况下才会去创建一个新的 G。已存在 的 goroutine 总是会被优先复用。 在拿到了一个空闲的 G 之后，Go 语言运行时系统会用这个 G 去包装当前的那个 go 函数（或者说该函数中的那些代码），然后再把这 个 G 追加到某个存放可运行的 G 的队列中。这类队列中的 G 总是会按照先入先出的顺序，很快地由运行时系统内部的调度器安排运行。 虽然这会很快，但是由于上面所说的那些准备工作还是不可避免的，所以耗时还是存在的。 因此， go 函数的执行时间总是会明显滞后于它所属的 go 语句的执行时间 。当然了，这里所说的“明显滞后”是对于计算机 的 CPU 时钟和 Go 程序来说的。我们在大多数时候都不会有明显的感觉。 请记住， 只要 go 语句本身执行完毕，Go 程序完全不会等待 go 函数的执行，它会立刻去执行后边的语句 。这就是所谓 的 异步并发 地执行。 上面的代码中那 10 个包装了 go 函数的 goroutine 往往还没有获得运行的机会。但是如果有机会运行，打印的结果是什么， 全是 10 ？ 当 for 语句的最后一个迭代运行的时候，其中的那条 go 语句即是最后一条语句。所以，在执行完这条 go 语句之后， 主 goroutine 中的代码也就执行完了，Go 程序会立即结束运行。那么，如果这样的话，还会有任何内容被打印出来吗？ Go 语言并不会去保证这些 goroutine 会以怎样的顺序运行。由于主 goroutine 会与我们手动启用的其他 goroutine 一起接受 调度，又因为调度器很可能会在 goroutine 中的代码只执行了一部分的时候暂停，以期所有的 goroutine 有更公平的运行机会。 所以哪个 goroutine 先执行完、哪个 goroutine 后执行完往往是不可预知的，除非我们使用了某种 Go 语言提供的方式进行了人为 干预。 怎样才能让主 goroutine 等待其他 goroutine 刚才说过，一旦主 goroutine 中的代码执行完毕，当前的 Go 程序就会结束运行，无论其他的 goroutine 是否已经在运行了。 那么，怎样才能做到等其他的 goroutine 运行完毕之后，再让主 goroutine 结束运行呢？ 使用 time 包 ，可以简单粗暴的 time.Sleep(time.Millisecond * 500) 让主 goroutine “小睡”一会儿。 在这里传入了“500 毫秒” 问题是我们让主 goroutine “睡眠”多长时间才是合适的呢？如果“睡眠”太短，则很可能不足以让其他的 goroutine 运行完毕， 而若“睡眠”太长则纯属浪费时间，这个时间就太难把握了。 使用通道 。 使用 sync 包的 sync.WaitGroup 类型 怎样让启用的多个 goroutine 按照既定的顺序运行 首先，我们需要稍微改造一下 for 语句中的那个 go 函数: 1 2 3 4 5 for i := 0 ; i  10 ; i++  go func (i int )  fmt.Println(i) (i)  只有这样，Go 语言才能保证每个 goroutine 都可以拿到一个唯一的整数。这里有点像 js。 在 go 语句被执行时，我们 传给 go 函数的参数 i 会先被求值 ，如此就得到了当次迭代的序号。之后，无论 go 函数 会在什么时候执行，这个参数值都不会变。也就是说， go 函数中调用的 fmt.Println 函数打印的一定会是那个当次迭代的序号。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var count uint32 = 0 trigger := func (i uint32 , fn func () )  // func() 代表的是既无参数声明也无结果声明的函数类型 for  if n := atomic.LoadUint32(&amp;count); n == i  fn() atomic.AddUint32(&amp;count, 1 ) break  time.Sleep(time.Nanosecond)   for i := uint32 ( 0 ); i  10 ; i++  go func (i uint32 )  fn := func ()  fmt.Println(i)  trigger(i, fn) (i)  trigger( 10 , func () ) 上面的代码中调用了一个名叫 trigger 的函数，并把 go 函数的参数 i 和刚刚声明的变量 fn 作为参数传给了它。 func() 代表的是既无参数声明也无结果声明的函数类型 。 trigger 函数会不断地获取一个名叫 count 的变量的值，并判断该值是否与参数 i 的值相同。如果相同，那么就立 即调用 fn 代表的函数，然后把 count 变量的值加 1 ，最后显式地退出当前的循环。否则，我们就先让当前的 goroutine “睡眠”一个纳秒再进入下一个迭代。 操作变量 count 的时候使用的都是原子操作。这是由于 trigger 函数会被多个 goroutine 并发地调用，所以它用到的 非本地变量 count ，就被多个用户级线程共用了。因此，对它的操作就产生了竞态条件（race condition），破坏了程序的并 发安全性。在 sync/atomic 包中声明了很多用于原子操作的函数。由于我选用的原子操作函数对被操作的数值的类型有约束，所 以对 count 以及相关的变量和参数的类型进行了统一的变更（由 int 变为了 uint32 ）。 纵观 count 变量、 trigger 函数以及改造后的 for 语句和 go 函数，我要做的是，让 count 变量成为一个信号， 它的值总是下一个可以调用打印函数的 go 函数的序号。 这个序号其实就是启用 goroutine 时，那个当次迭代的序号。 依然想让主 goroutine 最后一个运行完毕，所以还需要加一行代码。不过既然有了 trigger 函数，就没有再使用通道。 1 trigger( 10 , func () ) Gosched runtime.Gosched() 暂停，释放线程去执行其他任务。 Goexit runtime.Goexit() 立即终止当前任务，runtime 会确保所有 defer 函数被执行。该函数不会影响其他并发任务。 goroutine 泄漏 goroutine 被永远卡住，就会导致 goroutine 泄漏，例如当使用了无缓存的 channel ， goroutine 因为 channel 的 数据没有被接收而被卡住。泄漏的 goroutine 不会被自动回收。 Goroutine 调度器 调度器 Go 的 runtime 负责对 goroutine 进行“调度”。调度本质上就是决定何时哪个 goroutine 将获得资源开始执行、哪个 goroutine 应该停止执行让出资源、哪个 goroutine 应该被唤醒恢复执行等。 操作系统对进程、线程的调度是指操作系统调度器将系统中的多个线程按照一定算法调度到物理 CPU 上去运行。C、C++ 等的并发实现就是基 于操作系统调度的，即程序负责创建线程，操作系统负责调度。但是这种支持并发的方式有不少缺陷： 对于很多网络服务程序，由于不能大量创建 thread，就要在少量 thread 里做网络多路复用，即： 使用 epoll/kqueue/IoCompletionPort 这套机制，即便有 libevent/libev 这样的第三方库帮忙，写起这样的程序也是很不易的 一个 thread 的代价已经比进程小了很多了，但我们依然不能大量创建 thread，因为除了每个 thread 占用的资源不小之外，操 作系统调度切换 thread 的代价也不小； 并发单元间通信困难，易错：多个 thread 之间的通信虽然有多种机制可选，但用起来是相当复杂； Go采用了 用户层轻量级 thread 或者说是 类 coroutine 的概念来解决这些问题，Go 将之称为 goroutine 。 goroutine 占用的资源非常小(goroutine stack 的 size 默认为 2k)，goroutine 调度的切换也不用操作系统内核层完成，代价很低 。 所有的 Go 代码都在 goroutine 中执行，go runtime 也一样。将这些 goroutines 按照一定算法放到“CPU”上执行的程序就叫做 goroutine 调度器 或 goroutine scheduler 。 一个 Go 程序对于操作系统来说只是一个用户层程序，对于操作系统而言，它的眼中只有 thread，它并不知道什么是 Goroutine。 goroutine 的调度全要靠 Go 自己完成，实现 Go 程序内 goroutine 之间“公平”的竞争 CPU 资源，这个任务就落到了 Go runtime 头上 ， 在一个 Go 程序中，除了用户代码，剩下的就是 go runtime 了。 Goroutine 的调度问题就变成了 go runtime 如何将程序内的众多 goroutine 按照一定算法调度到 CPU 资源上运行 了。 但是在 操作系统层面，Thread 竞争的 CPU 资源是真实的物理 CPU ，但在 Go 程序层面，各个 Goroutine 要竞争的 CPU 资源是什么呢？ Go 程序是用户层程序，它本身整体是运行在一个或多个操作系统线程上的，因此 goroutine 们要竞争的所谓 CPU 资源就是操作系统线程 。 Go scheduler 的任务： 将 goroutines 按照一定算法放到不同的操作系统线程中去执行 。这种在语言层面自带调度器的，我们称 之为 原生支持并发 。 G-P-M 模型 调度器的主要有 3 个重要部分，分别是 M、G、P。 G（goroutine 的缩写）， 协程的实体，并不是执行体，仅保存了并发任务的状态，包括了调用栈，重要的调度信息，例如 channel 等。 G 任务创建之后被放置在 P 本地队列或者全局队列，等待工作线程调度。 P（processor 的缩写），是衔接 M 和 G 的调度上下文，一个 P 可以承载若干个 G，且能够使这些 G 适时地与 M 进行 对接，并得到真正运行的中介。P 的数量可以通过 runtime.GOMAXPROCS() 来设置，P 的数量决定了系统内最大可并行的 G 的数量， 即有多少个 goroutine 可以同时运行。（前提：系统的物理 cpu 核数 = P 的数量 ），它维护了一个 G 队列（ runq ），里面存储 了所有需要它来执行的 G。 M（machine 的缩写），代表的是系统线程。G 就是跑在 M 之上的。在绑定有效的 P 后，进入 schedule 循环； 而 schedule 循环的机制大致是从各种队列、P 的本地队列中获取 G，切换到 G 的执行栈上并执行 G 的函数，调用 goexit 做清理工作 并回到 M，如此反复。M 并不保留 G 状态，这是 G 可以跨 M 调度的基础。 简单来说，一个 G 的执行需要 P 和 M 的支持，P 和 M 绑定之后，就形成了一个 G 的运行环境（内核线程和上下文）。 P 和 M 构成执行组合体，但两者的数量并不是一一对应的。一般情况下， P 的数量相对恒定，默认与 CPU 核数相同，可能更多或更少。 M 是由调度器按需创建的 。比如，如果一个 M 因系统调用时间长而阻塞，P 就会被监控线程抢走，并且新建一个 M 执行其他任务，M 的数量就增加了。 所有 P 是在调度器初始化阶段创建的，虽然可以使用 runtime.GOMAXPROCS() 在运行期间修改 P 的数量，但是代价很大。 抢占式调度 Go 并没有时间片的概念，只是在目标 G 上设置一个抢占标志。如果某个 G 没有进行 syscall、没有进行 I/O 操作、没有阻塞在一 个 channel 操作上，那么 M 是 如何让 G 停下来并调度下一个 runnable G 的呢？ 答案是：G 是被抢占调度的。 Go 在设计之初并没考虑将 goroutine 设计成抢占式的。用户负责让各个 goroutine 交互合作完成任务。一个 goroutine 只有在涉及到加锁， 读写通道或者主动让出 CPU 等操作时才会触发切换。 垃圾回收器是需要 stop the world 的。如果垃圾回收器想要运行了，那么它必须先通知其它的 goroutine 合作停下来，这会造成较长时 间的等待时间。考虑一种很极端的情况，所有的 goroutine 都停下来了，只有其中一个没有停，那么垃圾回收就会一直等待着没有停的那一个。 抢占式调度可以解决这种问题，在抢占式情况下，如果一个 goroutine 运行时间过长，它就会被剥夺运行权。Go 还只是引入了一些很初级 的抢占，只有长时间阻塞于系统调用，或者运行了较长时间才会被抢占。runtime 会在后台有一个检测线程，它会检测这些情况， 并通知 goroutine 执行调度。 Go 程序的初始化过程中，runtime 开了一条后台线程，运行一个 sysmon 函数(一般称为监控线程)。这个函数会周期性地做 epoll 操作， 同时它还会检测每个 P 是否运行了较长时间。该 M 无需绑定 P 即可运行，该 M 在整个 Go 程序的运行过程中至关重要。 sysmon 每 20us~10ms 运行一次， sysmon 主要完成如下工作： 释放闲置超过 5 分钟的 span 物理内存； 如果超过 2 分钟没有垃圾回收，强制执行； 将长时间未处理的 netpoll 结果添加到任务队列； 向长时间运行的 G 任务发出抢占调度； 收回因 syscall 长时间阻塞的 P； channel 阻塞或 network I/O 情况下的调度 如果 G 被阻塞在某个 channel 操作或 network I/O 操作上时，G 会被放置到某个 wait 队列中，而 M 会尝试运行下一个 runnable 的 G；如果此时没有 runnable 的 G 供 M 运行，那么 M 将解绑 P，并进入 sleep 状态。当 I/O available 或 channel 操作完成， 在 wait 队列中的 G 会被唤醒，标记为 runnable，放入到某 P 的队列中，绑定一个 M 继续执行。 system call 阻塞情况下的调度 如果 G 被阻塞在某个 system call 操作上，那么不光 G 会阻塞，执行该 G 的 M 也会解绑 P(实质是被 sysmon 抢走了)， 与 G 一起进入 sleep 状态。如果此时有 idle 的 M，则 P 与其绑定继续执行其他 G；如果没有 idle M，但仍然有其他 G 要去执行， 那么就会创建一个新 M。 当阻塞在 syscall 上的 G 完成 syscall 调用后，G 会去尝试获取一个可用的 P，如果没有可用的 P，那么 G 会被标记为 runnable， 之前的那个 sleep 的 M 将再次进入 sleep。"},"concurrent/goroutine.html#goroutine":{"title":"goroutine","path":"\\golang-learn\\concurrent\\goroutine.html#goroutine","body":""},"concurrent/goroutine.html#并发和并行":{"title":"&#x5E76;&#x53D1;&#x548C;&#x5E76;&#x884C;","path":"\\golang-learn\\concurrent\\goroutine.html#并发和并行","body":"&#x5E76;&#x53D1; &#x4E00;&#x4E2A; cpu &#x4E0A;&#x80FD;&#x540C;&#x65F6;&#x6267;&#x884C;&#x591A;&#x9879;&#x4EFB;&#x52A1;&#xFF0C;&#x5728;&#x5F88;&#x77ED;&#x65F6;&#x95F4;&#x5185;&#xFF0C;cpu &#x6765;&#x56DE;&#x5207;&#x6362;&#x4EFB;&#x52A1;&#x6267;&#x884C;(&#x5728;&#x67D0;&#x6BB5;&#x5F88;&#x77ED;&#x65F6;&#x95F4;&#x5185;&#x6267;&#x884C;&#x7A0B;&#x5E8F; a&#xFF0C;&#x7136;&#x540E;&#x53C8;&#x8FC5;&#x901F;&#x5F97;&#x5207;&#x6362;&#x5230;&#x7A0B;&#x5E8F; b &#x53BB;&#x6267;&#x884C;)&#xFF0C; &#x6709;&#x65F6;&#x95F4;&#x4E0A;&#x7684;&#x91CD;&#x53E0;&#xFF08;&#x5B8F;&#x89C2;&#x4E0A;&#x662F;&#x540C;&#x65F6;&#x7684;&#xFF0C;&#x5FAE;&#x89C2;&#x4ECD;&#x662F;&#x987A;&#x5E8F;&#x6267;&#x884C;&#xFF09;,&#x8FD9;&#x6837;&#x770B;&#x8D77;&#x6765;&#x591A;&#x4E2A;&#x4EFB;&#x52A1;&#x50CF;&#x662F;&#x540C;&#x65F6;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x5C31;&#x662F; &#x5E76;&#x53D1; &#x3002; &#x5E76;&#x884C; &#x5F53;&#x7CFB;&#x7EDF;&#x6709;&#x591A;&#x4E2A; CPU &#x65F6;,&#x6BCF;&#x4E2A; CPU &#x540C;&#x4E00;&#x65F6;&#x523B;&#x90FD;&#x8FD0;&#x884C;&#x4EFB;&#x52A1;&#xFF0C;&#x4E92;&#x4E0D;&#x62A2;&#x5360;&#x81EA;&#x5DF1;&#x6240;&#x5728;&#x7684; CPU &#x8D44;&#x6E90;&#xFF0C;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#xFF0C;&#x79F0;&#x4E3A; &#x5E76;&#x884C; &#x3002;&#x5E76;&#x884C;&#x662F;&#x5E76;&#x53D1;&#x8BBE;&#x8BA1;&#x7684; &#x7406;&#x60F3;&#x6A21;&#x5F0F;&#x3002; &#x8FDB;&#x7A0B; cpu &#x5728;&#x5207;&#x6362;&#x7A0B;&#x5E8F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4FDD;&#x5B58;&#x4E0A;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x7684;&#x72B6;&#x6001;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x5E38;&#x8BF4;&#x7684; context &#x2013;&#x4E0A;&#x4E0B;&#x6587;&#xFF09;&#xFF0C;&#x76F4;&#x63A5;&#x5207;&#x6362;&#x4E0B;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#xFF0C;&#x5C31;&#x4F1A;&#x4E22;&#x5931;&#x4E0A;&#x4E00;&#x4E2A; &#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x72B6;&#x6001;&#xFF0C;&#x4E8E;&#x662F;&#x5F15;&#x5165;&#x4E86;&#x8FDB;&#x7A0B;&#x8FD9;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x7528;&#x4EE5;&#x5212;&#x5206;&#x597D;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x6240;&#x9700;&#x8981;&#x7684;&#x8D44;&#x6E90;&#x3002;&#x56E0;&#x6B64;&#x8FDB;&#x7A0B;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x5019;&#x7684;&#x6240;&#x9700;&#x8981;&#x7684;&#x57FA;&#x672C;&#x8D44;&#x6E90;&#x5355; &#x4F4D;&#xFF08;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF4;&#x662F;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x7684;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#xFF09;&#x3002; &#x7EBF;&#x7A0B; cpu &#x5207;&#x6362;&#x591A;&#x4E2A;&#x8FDB;&#x7A0B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x82B1;&#x8D39;&#x4E0D;&#x5C11;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x56E0;&#x4E3A;&#x5207;&#x6362;&#x8FDB;&#x7A0B;&#x9700;&#x8981;&#x5207;&#x6362;&#x5230;&#x5185;&#x6838;&#x6001;&#xFF0C;&#x800C;&#x6BCF;&#x6B21;&#x8C03;&#x5EA6;&#x9700;&#x8981;&#x5185;&#x6838;&#x6001;&#x90FD;&#x9700;&#x8981;&#x8BFB;&#x53D6;&#x7528;&#x6237;&#x6001;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x8FDB;&#x7A0B; &#x4E00;&#x65E6;&#x591A;&#x8D77;&#x6765;&#xFF0C;cpu &#x8C03;&#x5EA6;&#x4F1A;&#x6D88;&#x8017;&#x4E00;&#x5927;&#x5806;&#x8D44;&#x6E90;&#xFF0C;&#x56E0;&#x6B64;&#x5F15;&#x5165;&#x4E86;&#x7EBF;&#x7A0B;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x7EBF;&#x7A0B;&#x672C;&#x8EAB;&#x51E0;&#x4E4E;&#x4E0D;&#x5360;&#x6709;&#x8D44;&#x6E90;&#xFF0C;&#x4ED6;&#x4EEC;&#x5171;&#x4EAB;&#x8FDB;&#x7A0B;&#x91CC;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x5185;&#x6838;&#x8C03;&#x5EA6;&#x8D77;&#x6765;&#x4E0D; &#x4F1A;&#x90A3;&#x4E48;&#x50CF;&#x8FDB;&#x7A0B;&#x5207;&#x6362;&#x90A3;&#x4E48;&#x8017;&#x8D39;&#x8D44;&#x6E90;&#x3002; &#x534F;&#x7A0B; &#x591A;&#x7EBF;&#x7A0B;&#x548C;&#x591A;&#x8FDB;&#x7A0B;&#x662F;&#x5E76;&#x884C;&#x7684;&#x57FA;&#x672C;&#x6761;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;&#x5355;&#x7EBF;&#x7A0B;&#x53EF;&#x4EE5;&#x5229;&#x7528; &#x534F;&#x7A0B; &#x505A;&#x5230;&#x5E76;&#x53D1;&#x3002;&#x534F;&#x7A0B;&#x62E5;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x4E0A;&#x4E0B;&#x6587;&#x548C;&#x6808;&#x3002;&#x534F;&#x7A0B;&#x5728;&#x7EBF;&#x7A0B;&#x4E0A;&#x901A;&#x8FC7;&#x4E3B;&#x52A8; &#x5207;&#x6362;&#x6765;&#x5B9E;&#x73B0;&#x5E76;&#x53D1;&#xFF0C;&#x51CF;&#x5C11;&#x4E86;&#x963B;&#x585E;&#x65F6;&#x95F4;&#xFF0C;&#x8FD8;&#x907F;&#x514D;&#x4E86;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x5F00;&#x9500;&#x3002;&#x4F46;&#x534F;&#x7A0B;&#x8FD0;&#x884C;&#x7684;&#x5E76;&#x53D1;&#x672C;&#x8D28;&#x4E0A;&#x8FD8;&#x662F;&#x4E32;&#x884C;&#x7684;&#x3002;&#x7EBF;&#x7A0B;&#x548C;&#x8FDB;&#x7A0B;&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x7531;&#x7A0B;&#x5E8F;&#x89E6;&#x53D1;&#x7CFB;&#x7EDF; &#x63A5;&#x53E3;&#xFF0C;&#x6700;&#x540E;&#x7684;&#x6267;&#x884C;&#x8005;&#x662F;&#x7CFB;&#x7EDF;&#xFF1B;&#x534F;&#x7A0B;&#x7684;&#x64CD;&#x4F5C;&#x6267;&#x884C;&#x8005;&#x5219;&#x662F;&#x7528;&#x6237;&#x81EA;&#x8EAB;&#x7A0B;&#x5E8F;&#x3002;"},"concurrent/goroutine.html#goroutine-1":{"title":"goroutine","path":"\\golang-learn\\concurrent\\goroutine.html#goroutine-1","body":"Go &#x8BED;&#x8A00;&#x5728;&#x8BED;&#x8A00;&#x5C42;&#x9762;&#x4E0A;&#x652F;&#x6301;&#x4E86;&#x5E76;&#x53D1;&#xFF0C;&#x7B80;&#x5355;&#x5C06; goroutine &#x5F52;&#x4E3A;&#x534F;&#x7A0B;&#x5E76;&#x4E0D;&#x5408;&#x9002;&#x3002;Go runtime &#x4F1A;&#x521B;&#x5EFA;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x6765;&#x6267;&#x884C;&#x5E76;&#x53D1;&#x4EFB;&#x52A1;&#xFF0C;&#x800C;&#x4E14;&#x4EFB;&#x52A1; &#x53EF;&#x4EE5;&#x8DE8;&#x7EBF;&#x7A0B;&#x8C03;&#x5EA6;&#x3002;&#x6240;&#x4EE5; goroutine &#x66F4;&#x50CF;&#x662F;&#x591A;&#x7EBF;&#x7A0B;&#x548C;&#x534F;&#x7A0B;&#x7684;&#x7ED3;&#x5408;&#x4F53;&#x3002; goroutine &#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7406;&#x89E3;&#x4E3A;&#x534F;&#x7A0B;&#xFF0C;&#x5F00;&#x9500;&#x8F83;&#x4F4E; (&#x5927;&#x6982;&#x662F; 4~5KB )&#xFF0C;&#x5F53;&#x7136;&#x4F1A;&#x6839;&#x636E;&#x76F8;&#x5E94;&#x7684;&#x6570;&#x636E;&#x4F38;&#x7F29;&#x3002;&#x4E5F;&#x6B63;&#x56E0;&#x4E3A;&#x5982;&#x6B64;&#xFF0C;&#x53EF;&#x540C;&#x65F6;&#x8FD0;&#x884C;&#x6210;&#x5343; &#x4E0A;&#x4E07;&#x4E2A;&#x5E76;&#x53D1;&#x4EFB;&#x52A1;&#x3002; goroutine &#x6BD4; thread &#x66F4;&#x6613;&#x7528;&#x3001;&#x66F4;&#x9AD8;&#x6548;&#x3001;&#x66F4;&#x8F7B;&#x4FBF;&#x3002;&#x6211;&#x4EEC;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x7684; main &#x51FD;&#x6570;&#x5728;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684; goroutine &#x4E2D;&#x8FD0;&#x884C;&#xFF0C; &#x53EB;&#x505A; &#x4E3B; goroutine &#x3002;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; go &#x5173;&#x952E;&#x5B57;&#x521B;&#x5EFA; goroutine &#x3002; 1 go f() main &#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x65F6;&#xFF0C;&#x6240;&#x6709; goroutine &#x90FD;&#x4F1A;&#x88AB;&#x6253;&#x65AD;&#xFF0C;&#x7A0B;&#x5E8F;&#x9000;&#x51FA; &#x3002;&#x9664;&#x4E86;&#x4ECE; main &#x51FD;&#x6570;&#x9000;&#x51FA;&#x6216;&#x8005;&#x76F4;&#x63A5;&#x7EC8;&#x6B62;&#x7A0B;&#x5E8F;&#x4E4B;&#x5916;&#xFF0C;&#x6CA1;&#x6709;&#x5176;&#x5B83; &#x7684;&#x7F16;&#x7A0B;&#x65B9;&#x6CD5;&#x80FD;&#x591F;&#x8BA9;&#x4E00;&#x4E2A; goroutine &#x6765;&#x6253;&#x65AD;&#x53E6;&#x4E00;&#x4E2A;&#x7684;&#x6267;&#x884C;&#xFF0C;&#x4F46;&#x662F;&#x4E4B;&#x540E;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x6765;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x76EE;&#x7684;&#xFF0C;&#x901A;&#x8FC7; goroutine &#x4E4B;&#x95F4; &#x7684;&#x901A;&#x4FE1;&#x6765;&#x8BA9;&#x4E00;&#x4E2A; goroutine &#x8BF7;&#x6C42;&#x5176;&#x5B83;&#x7684; goroutine &#xFF0C;&#x4F7F;&#x88AB;&#x8BF7;&#x6C42; goroutine &#x81EA;&#x884C;&#x7ED3;&#x675F;&#x6267;&#x884C;&#x3002; &#x4EC0;&#x4E48;&#x662F;&#x4E3B; goroutine&#xFF0C;&#x5B83;&#x4E0E;&#x6211;&#x4EEC;&#x542F;&#x7528;&#x7684;&#x5176;&#x4ED6; goroutine &#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C; 1 2 3 4 5 6 7 8 9 10 11 package main import fmt func main () { \t for i := 0 ; i  10 ; i++ { \t\t go func () { \t\t\tfmt.Println(i) \t\t}() \t} } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4F1A;&#x6253;&#x5370;&#x51FA;&#x4EC0;&#x4E48;&#x5185;&#x5BB9;&#xFF1F; &#x56DE;&#x7B54;&#x662F;&#xFF1A;&#x4E0D;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x88AB;&#x6253;&#x5370;&#x51FA;&#x6765;&#x3002; Go &#x8BED;&#x8A00;&#x4E0D;&#x4F46;&#x6709;&#x7740;&#x72EC;&#x7279;&#x7684;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x6A21;&#x578B;&#xFF0C;&#x4EE5;&#x53CA;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B; goroutine &#xFF0C;&#x8FD8;&#x62E5;&#x6709;&#x5F3A;&#x5927;&#x7684;&#x7528;&#x4E8E;&#x8C03;&#x5EA6; goroutine &#x3001;&#x5BF9;&#x63A5;&#x7CFB;&#x7EDF;&#x7EA7;&#x7EBF;&#x7A0B;&#x7684; &#x8C03;&#x5EA6;&#x5668; &#x3002; &#x8C03;&#x5EA6;&#x5668;&#x7684;&#x4E3B;&#x8981;&#x6709; 3 &#x4E2A;&#x91CD;&#x8981;&#x90E8;&#x5206;&#xFF0C;&#x5206;&#x522B;&#x662F; M&#x3001;G&#x3001;P&#x3002; G&#xFF08;goroutine &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C; &#x534F;&#x7A0B;&#x7684;&#x5B9E;&#x4F53;&#xFF0C;&#x5305;&#x62EC;&#x4E86;&#x8C03;&#x7528;&#x6808;&#xFF0C;&#x91CD;&#x8981;&#x7684;&#x8C03;&#x5EA6;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982; channel &#x7B49;&#x3002; P&#xFF08;processor &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C;&#x662F;&#x8854;&#x63A5; M &#x548C; G &#x7684;&#x8C03;&#x5EA6;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x4E00;&#x4E2A; P &#x53EF;&#x4EE5;&#x627F;&#x8F7D;&#x82E5;&#x5E72;&#x4E2A; G&#xFF0C;&#x4E14;&#x80FD;&#x591F;&#x4F7F;&#x8FD9;&#x4E9B; G &#x9002;&#x65F6;&#x5730;&#x4E0E; M &#x8FDB;&#x884C; &#x5BF9;&#x63A5;&#xFF0C;&#x5E76;&#x5F97;&#x5230;&#x771F;&#x6B63;&#x8FD0;&#x884C;&#x7684;&#x4E2D;&#x4ECB;&#x3002;P &#x7684;&#x6570;&#x91CF;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; runtime.GOMAXPROCS() &#x6765;&#x8BBE;&#x7F6E;&#xFF0C;P &#x7684;&#x6570;&#x91CF;&#x51B3;&#x5B9A;&#x4E86;&#x7CFB;&#x7EDF;&#x5185;&#x6700;&#x5927;&#x53EF;&#x5E76;&#x884C;&#x7684; G &#x7684;&#x6570;&#x91CF;&#xFF0C; &#x5373;&#x6709;&#x591A;&#x5C11;&#x4E2A; goroutine &#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8FD0;&#x884C;&#x3002; M&#xFF08;machine &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C;&#x4EE3;&#x8868;&#x7684;&#x662F;&#x7CFB;&#x7EDF;&#x7EA7;&#x7EBF;&#x7A0B;&#xFF0C;&#x7531;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x3002; &#x4E0E;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x603B;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x4E3B;&#x7EBF;&#x7A0B;&#x7C7B;&#x4F3C;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684; Go &#x7A0B;&#x5E8F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x4E5F;&#x603B;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x4E3B; goroutine &#x3002;&#x8FD9;&#x4E2A;&#x4E3B; goroutine &#x4F1A;&#x5728; Go &#x7A0B; &#x5E8F;&#x7684;&#x8FD0;&#x884C;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#x5B8C;&#x6210;&#x540E;&#x88AB;&#x81EA;&#x52A8;&#x5730;&#x542F;&#x7528;&#xFF0C;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x505A;&#x4EFB;&#x4F55;&#x624B;&#x52A8;&#x7684;&#x64CD;&#x4F5C;&#x3002; &#x6BCF;&#x6761; go &#x8BED;&#x53E5;&#x4E00;&#x822C;&#x90FD;&#x4F1A;&#x643A;&#x5E26;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x8C03;&#x7528;&#xFF0C;&#x8FD9;&#x4E2A;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x51FD;&#x6570;&#x5E38;&#x5E38;&#x88AB;&#x79F0;&#x4E3A; go &#x51FD;&#x6570;&#x3002;&#x800C;&#x4E3B; goroutine &#x7684; go &#x51FD;&#x6570;&#x5C31;&#x662F; &#x90A3;&#x4E2A;&#x4F5C;&#x4E3A;&#x7A0B;&#x5E8F;&#x5165;&#x53E3;&#x7684; main &#x51FD;&#x6570; &#x3002; go &#x51FD;&#x6570;&#x771F;&#x6B63;&#x88AB;&#x6267;&#x884C;&#x7684;&#x65F6;&#x95F4;&#x603B;&#x4F1A;&#x4E0E;&#x5176;&#x6240;&#x5C5E;&#x7684; go &#x8BED;&#x53E5;&#x88AB;&#x6267;&#x884C;&#x7684;&#x65F6;&#x95F4;&#x4E0D;&#x540C; &#x3002; &#x5F53;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x5230;&#x4E00;&#x6761; go &#x8BED;&#x53E5;&#x7684;&#x65F6;&#x5019;&#xFF0C; go &#x5173;&#x952E;&#x5B57;&#x5E76;&#x4E0D;&#x662F;&#x6267;&#x884C;&#x5E76;&#x53D1;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x662F;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5E76;&#x53D1;&#x4EFB;&#x52A1;&#x5355;&#x5143; &#x3002;Go &#x8BED;&#x8A00;&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#xFF0C;&#x4F1A;&#x5148;&#x8BD5;&#x56FE;&#x4ECE;&#x67D0;&#x4E2A; &#x5B58;&#x653E;&#x7A7A;&#x95F2;&#x7684; G &#x7684;&#x961F;&#x5217;&#x4E2D;&#x83B7;&#x53D6;&#x4E00;&#x4E2A; G&#xFF08;&#x4E5F;&#x5C31;&#x662F; goroutine &#xFF09;&#xFF0C;&#x5B83;&#x53EA;&#x6709;&#x5728;&#x627E;&#x4E0D;&#x5230;&#x7A7A;&#x95F2; G &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x4F1A;&#x53BB;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684; G&#x3002;&#x5DF2;&#x5B58;&#x5728; &#x7684; goroutine &#x603B;&#x662F;&#x4F1A;&#x88AB;&#x4F18;&#x5148;&#x590D;&#x7528;&#x3002; &#x5728;&#x62FF;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x7A7A;&#x95F2;&#x7684; G &#x4E4B;&#x540E;&#xFF0C;Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x4F1A;&#x7528;&#x8FD9;&#x4E2A; G &#x53BB;&#x5305;&#x88C5;&#x5F53;&#x524D;&#x7684;&#x90A3;&#x4E2A; go &#x51FD;&#x6570;&#xFF08;&#x6216;&#x8005;&#x8BF4;&#x8BE5;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x90A3;&#x4E9B;&#x4EE3;&#x7801;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x628A;&#x8FD9; &#x4E2A; G &#x8FFD;&#x52A0;&#x5230;&#x67D0;&#x4E2A;&#x5B58;&#x653E;&#x53EF;&#x8FD0;&#x884C;&#x7684; G &#x7684;&#x961F;&#x5217;&#x4E2D;&#x3002;&#x8FD9;&#x7C7B;&#x961F;&#x5217;&#x4E2D;&#x7684; G &#x603B;&#x662F;&#x4F1A;&#x6309;&#x7167;&#x5148;&#x5165;&#x5148;&#x51FA;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x5F88;&#x5FEB;&#x5730;&#x7531;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x5185;&#x90E8;&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x5B89;&#x6392;&#x8FD0;&#x884C;&#x3002; &#x867D;&#x7136;&#x8FD9;&#x4F1A;&#x5F88;&#x5FEB;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x4E0A;&#x9762;&#x6240;&#x8BF4;&#x7684;&#x90A3;&#x4E9B;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#x8FD8;&#x662F;&#x4E0D;&#x53EF;&#x907F;&#x514D;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x8017;&#x65F6;&#x8FD8;&#x662F;&#x5B58;&#x5728;&#x7684;&#x3002; &#x56E0;&#x6B64;&#xFF0C; go &#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x603B;&#x662F;&#x4F1A;&#x660E;&#x663E;&#x6EDE;&#x540E;&#x4E8E;&#x5B83;&#x6240;&#x5C5E;&#x7684; go &#x8BED;&#x53E5;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4; &#x3002;&#x5F53;&#x7136;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x6240;&#x8BF4;&#x7684;&#x201C;&#x660E;&#x663E;&#x6EDE;&#x540E;&#x201D;&#x662F;&#x5BF9;&#x4E8E;&#x8BA1;&#x7B97;&#x673A; &#x7684; CPU &#x65F6;&#x949F;&#x548C; Go &#x7A0B;&#x5E8F;&#x6765;&#x8BF4;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x5927;&#x591A;&#x6570;&#x65F6;&#x5019;&#x90FD;&#x4E0D;&#x4F1A;&#x6709;&#x660E;&#x663E;&#x7684;&#x611F;&#x89C9;&#x3002; &#x8BF7;&#x8BB0;&#x4F4F;&#xFF0C; &#x53EA;&#x8981; go &#x8BED;&#x53E5;&#x672C;&#x8EAB;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C;Go &#x7A0B;&#x5E8F;&#x5B8C;&#x5168;&#x4E0D;&#x4F1A;&#x7B49;&#x5F85; go &#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#xFF0C;&#x5B83;&#x4F1A;&#x7ACB;&#x523B;&#x53BB;&#x6267;&#x884C;&#x540E;&#x8FB9;&#x7684;&#x8BED;&#x53E5; &#x3002;&#x8FD9;&#x5C31;&#x662F;&#x6240;&#x8C13; &#x7684; &#x5F02;&#x6B65;&#x5E76;&#x53D1; &#x5730;&#x6267;&#x884C;&#x3002; &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x90A3; 10 &#x4E2A;&#x5305;&#x88C5;&#x4E86; go &#x51FD;&#x6570;&#x7684; goroutine &#x5F80;&#x5F80;&#x8FD8;&#x6CA1;&#x6709;&#x83B7;&#x5F97;&#x8FD0;&#x884C;&#x7684;&#x673A;&#x4F1A;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;&#x6709;&#x673A;&#x4F1A;&#x8FD0;&#x884C;&#xFF0C;&#x6253;&#x5370;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x4EC0;&#x4E48;&#xFF0C; &#x5168;&#x662F; 10 &#xFF1F; &#x5F53; for &#x8BED;&#x53E5;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8FED;&#x4EE3;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x90A3;&#x6761; go &#x8BED;&#x53E5;&#x5373;&#x662F;&#x6700;&#x540E;&#x4E00;&#x6761;&#x8BED;&#x53E5;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5728;&#x6267;&#x884C;&#x5B8C;&#x8FD9;&#x6761; go &#x8BED;&#x53E5;&#x4E4B;&#x540E;&#xFF0C; &#x4E3B; goroutine &#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x4E5F;&#x5C31;&#x6267;&#x884C;&#x5B8C;&#x4E86;&#xFF0C;Go &#x7A0B;&#x5E8F;&#x4F1A;&#x7ACB;&#x5373;&#x7ED3;&#x675F;&#x8FD0;&#x884C;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x6837;&#x7684;&#x8BDD;&#xFF0C;&#x8FD8;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x88AB;&#x6253;&#x5370;&#x51FA;&#x6765;&#x5417;&#xFF1F; Go &#x8BED;&#x8A00;&#x5E76;&#x4E0D;&#x4F1A;&#x53BB;&#x4FDD;&#x8BC1;&#x8FD9;&#x4E9B; goroutine &#x4F1A;&#x4EE5;&#x600E;&#x6837;&#x7684;&#x987A;&#x5E8F;&#x8FD0;&#x884C;&#x3002;&#x7531;&#x4E8E;&#x4E3B; goroutine &#x4F1A;&#x4E0E;&#x6211;&#x4EEC;&#x624B;&#x52A8;&#x542F;&#x7528;&#x7684;&#x5176;&#x4ED6; goroutine &#x4E00;&#x8D77;&#x63A5;&#x53D7; &#x8C03;&#x5EA6;&#xFF0C;&#x53C8;&#x56E0;&#x4E3A;&#x8C03;&#x5EA6;&#x5668;&#x5F88;&#x53EF;&#x80FD;&#x4F1A;&#x5728; goroutine &#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x53EA;&#x6267;&#x884C;&#x4E86;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x65F6;&#x5019;&#x6682;&#x505C;&#xFF0C;&#x4EE5;&#x671F;&#x6240;&#x6709;&#x7684; goroutine &#x6709;&#x66F4;&#x516C;&#x5E73;&#x7684;&#x8FD0;&#x884C;&#x673A;&#x4F1A;&#x3002; &#x6240;&#x4EE5;&#x54EA;&#x4E2A; goroutine &#x5148;&#x6267;&#x884C;&#x5B8C;&#x3001;&#x54EA;&#x4E2A; goroutine &#x540E;&#x6267;&#x884C;&#x5B8C;&#x5F80;&#x5F80;&#x662F;&#x4E0D;&#x53EF;&#x9884;&#x77E5;&#x7684;&#xFF0C;&#x9664;&#x975E;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E86;&#x67D0;&#x79CD; Go &#x8BED;&#x8A00;&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x4E86;&#x4EBA;&#x4E3A; &#x5E72;&#x9884;&#x3002; &#x600E;&#x6837;&#x624D;&#x80FD;&#x8BA9;&#x4E3B; goroutine &#x7B49;&#x5F85;&#x5176;&#x4ED6; goroutine &#x521A;&#x624D;&#x8BF4;&#x8FC7;&#xFF0C;&#x4E00;&#x65E6;&#x4E3B; goroutine &#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C;&#x5F53;&#x524D;&#x7684; Go &#x7A0B;&#x5E8F;&#x5C31;&#x4F1A;&#x7ED3;&#x675F;&#x8FD0;&#x884C;&#xFF0C;&#x65E0;&#x8BBA;&#x5176;&#x4ED6;&#x7684; goroutine &#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5728;&#x8FD0;&#x884C;&#x4E86;&#x3002; &#x90A3;&#x4E48;&#xFF0C;&#x600E;&#x6837;&#x624D;&#x80FD;&#x505A;&#x5230;&#x7B49;&#x5176;&#x4ED6;&#x7684; goroutine &#x8FD0;&#x884C;&#x5B8C;&#x6BD5;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x8BA9;&#x4E3B; goroutine &#x7ED3;&#x675F;&#x8FD0;&#x884C;&#x5462;&#xFF1F; &#x4F7F;&#x7528; time &#x5305; &#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7C97;&#x66B4;&#x7684; time.Sleep(time.Millisecond * 500) &#x8BA9;&#x4E3B; goroutine &#x201C;&#x5C0F;&#x7761;&#x201D;&#x4E00;&#x4F1A;&#x513F;&#x3002; &#x5728;&#x8FD9;&#x91CC;&#x4F20;&#x5165;&#x4E86;&#x201C;500 &#x6BEB;&#x79D2;&#x201D; &#x95EE;&#x9898;&#x662F;&#x6211;&#x4EEC;&#x8BA9;&#x4E3B; goroutine &#x201C;&#x7761;&#x7720;&#x201D;&#x591A;&#x957F;&#x65F6;&#x95F4;&#x624D;&#x662F;&#x5408;&#x9002;&#x7684;&#x5462;&#xFF1F;&#x5982;&#x679C;&#x201C;&#x7761;&#x7720;&#x201D;&#x592A;&#x77ED;&#xFF0C;&#x5219;&#x5F88;&#x53EF;&#x80FD;&#x4E0D;&#x8DB3;&#x4EE5;&#x8BA9;&#x5176;&#x4ED6;&#x7684; goroutine &#x8FD0;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C; &#x800C;&#x82E5;&#x201C;&#x7761;&#x7720;&#x201D;&#x592A;&#x957F;&#x5219;&#x7EAF;&#x5C5E;&#x6D6A;&#x8D39;&#x65F6;&#x95F4;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x5C31;&#x592A;&#x96BE;&#x628A;&#x63E1;&#x4E86;&#x3002; &#x4F7F;&#x7528;&#x901A;&#x9053; &#x3002; &#x4F7F;&#x7528; sync &#x5305;&#x7684; sync.WaitGroup &#x7C7B;&#x578B; &#x600E;&#x6837;&#x8BA9;&#x542F;&#x7528;&#x7684;&#x591A;&#x4E2A; goroutine &#x6309;&#x7167;&#x65E2;&#x5B9A;&#x7684;&#x987A;&#x5E8F;&#x8FD0;&#x884C; &#x9996;&#x5148;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7A0D;&#x5FAE;&#x6539;&#x9020;&#x4E00;&#x4E0B; for &#x8BED;&#x53E5;&#x4E2D;&#x7684;&#x90A3;&#x4E2A; go &#x51FD;&#x6570;: 1 2 3 4 5 for i := 0 ; i  10 ; i++ { go func (i int ) { fmt.Println(i) }(i) } &#x53EA;&#x6709;&#x8FD9;&#x6837;&#xFF0C;Go &#x8BED;&#x8A00;&#x624D;&#x80FD;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A; goroutine &#x90FD;&#x53EF;&#x4EE5;&#x62FF;&#x5230;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x6574;&#x6570;&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x70B9;&#x50CF; js&#x3002; &#x5728; go &#x8BED;&#x53E5;&#x88AB;&#x6267;&#x884C;&#x65F6;&#xFF0C;&#x6211;&#x4EEC; &#x4F20;&#x7ED9; go &#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570; i &#x4F1A;&#x5148;&#x88AB;&#x6C42;&#x503C; &#xFF0C;&#x5982;&#x6B64;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x5F53;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x5E8F;&#x53F7;&#x3002;&#x4E4B;&#x540E;&#xFF0C;&#x65E0;&#x8BBA; go &#x51FD;&#x6570; &#x4F1A;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x503C;&#x90FD;&#x4E0D;&#x4F1A;&#x53D8;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C; go &#x51FD;&#x6570;&#x4E2D;&#x8C03;&#x7528;&#x7684; fmt.Println &#x51FD;&#x6570;&#x6253;&#x5370;&#x7684;&#x4E00;&#x5B9A;&#x4F1A;&#x662F;&#x90A3;&#x4E2A;&#x5F53;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x5E8F;&#x53F7;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var count uint32 = 0 trigger := func (i uint32 , fn func () ) { // func() &#x4EE3;&#x8868;&#x7684;&#x662F;&#x65E2;&#x65E0;&#x53C2;&#x6570;&#x58F0;&#x660E;&#x4E5F;&#x65E0;&#x7ED3;&#x679C;&#x58F0;&#x660E;&#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B; for { if n := atomic.LoadUint32(&amp;count); n == i { fn() atomic.AddUint32(&amp;count, 1 ) break } time.Sleep(time.Nanosecond) } } for i := uint32 ( 0 ); i  10 ; i++ { go func (i uint32 ) { fn := func () { fmt.Println(i) } trigger(i, fn) }(i) } trigger( 10 , func () {}) &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x8C03;&#x7528;&#x4E86;&#x4E00;&#x4E2A;&#x540D;&#x53EB; trigger &#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x628A; go &#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570; i &#x548C;&#x521A;&#x521A;&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF; fn &#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x4F20;&#x7ED9;&#x4E86;&#x5B83;&#x3002; func() &#x4EE3;&#x8868;&#x7684;&#x662F;&#x65E2;&#x65E0;&#x53C2;&#x6570;&#x58F0;&#x660E;&#x4E5F;&#x65E0;&#x7ED3;&#x679C;&#x58F0;&#x660E;&#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B; &#x3002; trigger &#x51FD;&#x6570;&#x4F1A;&#x4E0D;&#x65AD;&#x5730;&#x83B7;&#x53D6;&#x4E00;&#x4E2A;&#x540D;&#x53EB; count &#x7684;&#x53D8;&#x91CF;&#x7684;&#x503C;&#xFF0C;&#x5E76;&#x5224;&#x65AD;&#x8BE5;&#x503C;&#x662F;&#x5426;&#x4E0E;&#x53C2;&#x6570; i &#x7684;&#x503C;&#x76F8;&#x540C;&#x3002;&#x5982;&#x679C;&#x76F8;&#x540C;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x7ACB; &#x5373;&#x8C03;&#x7528; fn &#x4EE3;&#x8868;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x628A; count &#x53D8;&#x91CF;&#x7684;&#x503C;&#x52A0; 1 &#xFF0C;&#x6700;&#x540E;&#x663E;&#x5F0F;&#x5730;&#x9000;&#x51FA;&#x5F53;&#x524D;&#x7684;&#x5FAA;&#x73AF;&#x3002;&#x5426;&#x5219;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5148;&#x8BA9;&#x5F53;&#x524D;&#x7684; goroutine &#x201C;&#x7761;&#x7720;&#x201D;&#x4E00;&#x4E2A;&#x7EB3;&#x79D2;&#x518D;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x4E2A;&#x8FED;&#x4EE3;&#x3002; &#x64CD;&#x4F5C;&#x53D8;&#x91CF; count &#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#x7684;&#x90FD;&#x662F;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x3002;&#x8FD9;&#x662F;&#x7531;&#x4E8E; trigger &#x51FD;&#x6570;&#x4F1A;&#x88AB;&#x591A;&#x4E2A; goroutine &#x5E76;&#x53D1;&#x5730;&#x8C03;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x7528;&#x5230;&#x7684; &#x975E;&#x672C;&#x5730;&#x53D8;&#x91CF; count &#xFF0C;&#x5C31;&#x88AB;&#x591A;&#x4E2A;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x5171;&#x7528;&#x4E86;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5BF9;&#x5B83;&#x7684;&#x64CD;&#x4F5C;&#x5C31;&#x4EA7;&#x751F;&#x4E86;&#x7ADE;&#x6001;&#x6761;&#x4EF6;&#xFF08;race condition&#xFF09;&#xFF0C;&#x7834;&#x574F;&#x4E86;&#x7A0B;&#x5E8F;&#x7684;&#x5E76; &#x53D1;&#x5B89;&#x5168;&#x6027;&#x3002;&#x5728; sync/atomic &#x5305;&#x4E2D;&#x58F0;&#x660E;&#x4E86;&#x5F88;&#x591A;&#x7528;&#x4E8E;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x7684;&#x51FD;&#x6570;&#x3002;&#x7531;&#x4E8E;&#x6211;&#x9009;&#x7528;&#x7684;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x5BF9;&#x88AB;&#x64CD;&#x4F5C;&#x7684;&#x6570;&#x503C;&#x7684;&#x7C7B;&#x578B;&#x6709;&#x7EA6;&#x675F;&#xFF0C;&#x6240; &#x4EE5;&#x5BF9; count &#x4EE5;&#x53CA;&#x76F8;&#x5173;&#x7684;&#x53D8;&#x91CF;&#x548C;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x8FDB;&#x884C;&#x4E86;&#x7EDF;&#x4E00;&#x7684;&#x53D8;&#x66F4;&#xFF08;&#x7531; int &#x53D8;&#x4E3A;&#x4E86; uint32 &#xFF09;&#x3002; &#x7EB5;&#x89C2; count &#x53D8;&#x91CF;&#x3001; trigger &#x51FD;&#x6570;&#x4EE5;&#x53CA;&#x6539;&#x9020;&#x540E;&#x7684; for &#x8BED;&#x53E5;&#x548C; go &#x51FD;&#x6570;&#xFF0C;&#x6211;&#x8981;&#x505A;&#x7684;&#x662F;&#xFF0C;&#x8BA9; count &#x53D8;&#x91CF;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x4FE1;&#x53F7;&#xFF0C; &#x5B83;&#x7684;&#x503C;&#x603B;&#x662F;&#x4E0B;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x6253;&#x5370;&#x51FD;&#x6570;&#x7684; go &#x51FD;&#x6570;&#x7684;&#x5E8F;&#x53F7;&#x3002; &#x8FD9;&#x4E2A;&#x5E8F;&#x53F7;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x542F;&#x7528; goroutine &#x65F6;&#xFF0C;&#x90A3;&#x4E2A;&#x5F53;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x5E8F;&#x53F7;&#x3002; &#x4F9D;&#x7136;&#x60F3;&#x8BA9;&#x4E3B; goroutine &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8FD0;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x9700;&#x8981;&#x52A0;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x3002;&#x4E0D;&#x8FC7;&#x65E2;&#x7136;&#x6709;&#x4E86; trigger &#x51FD;&#x6570;&#xFF0C;&#x5C31;&#x6CA1;&#x6709;&#x518D;&#x4F7F;&#x7528;&#x901A;&#x9053;&#x3002; 1 trigger( 10 , func () {}) Gosched runtime.Gosched() &#x6682;&#x505C;&#xFF0C;&#x91CA;&#x653E;&#x7EBF;&#x7A0B;&#x53BB;&#x6267;&#x884C;&#x5176;&#x4ED6;&#x4EFB;&#x52A1;&#x3002; Goexit runtime.Goexit() &#x7ACB;&#x5373;&#x7EC8;&#x6B62;&#x5F53;&#x524D;&#x4EFB;&#x52A1;&#xFF0C;runtime &#x4F1A;&#x786E;&#x4FDD;&#x6240;&#x6709; defer &#x51FD;&#x6570;&#x88AB;&#x6267;&#x884C;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x5176;&#x4ED6;&#x5E76;&#x53D1;&#x4EFB;&#x52A1;&#x3002; goroutine &#x6CC4;&#x6F0F; goroutine &#x88AB;&#x6C38;&#x8FDC;&#x5361;&#x4F4F;&#xFF0C;&#x5C31;&#x4F1A;&#x5BFC;&#x81F4; goroutine &#x6CC4;&#x6F0F;&#xFF0C;&#x4F8B;&#x5982;&#x5F53;&#x4F7F;&#x7528;&#x4E86;&#x65E0;&#x7F13;&#x5B58;&#x7684; channel &#xFF0C; goroutine &#x56E0;&#x4E3A; channel &#x7684; &#x6570;&#x636E;&#x6CA1;&#x6709;&#x88AB;&#x63A5;&#x6536;&#x800C;&#x88AB;&#x5361;&#x4F4F;&#x3002;&#x6CC4;&#x6F0F;&#x7684; goroutine &#x4E0D;&#x4F1A;&#x88AB;&#x81EA;&#x52A8;&#x56DE;&#x6536;&#x3002;"},"concurrent/goroutine.html#Goroutine-调度器":{"title":"Goroutine &#x8C03;&#x5EA6;&#x5668;","path":"\\golang-learn\\concurrent\\goroutine.html#Goroutine-调度器","body":"&#x8C03;&#x5EA6;&#x5668; Go &#x7684; runtime &#x8D1F;&#x8D23;&#x5BF9; goroutine &#x8FDB;&#x884C;&#x201C;&#x8C03;&#x5EA6;&#x201D;&#x3002;&#x8C03;&#x5EA6;&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x51B3;&#x5B9A;&#x4F55;&#x65F6;&#x54EA;&#x4E2A; goroutine &#x5C06;&#x83B7;&#x5F97;&#x8D44;&#x6E90;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x3001;&#x54EA;&#x4E2A; goroutine &#x5E94;&#x8BE5;&#x505C;&#x6B62;&#x6267;&#x884C;&#x8BA9;&#x51FA;&#x8D44;&#x6E90;&#x3001;&#x54EA;&#x4E2A; goroutine &#x5E94;&#x8BE5;&#x88AB;&#x5524;&#x9192;&#x6062;&#x590D;&#x6267;&#x884C;&#x7B49;&#x3002; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BF9;&#x8FDB;&#x7A0B;&#x3001;&#x7EBF;&#x7A0B;&#x7684;&#x8C03;&#x5EA6;&#x662F;&#x6307;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8C03;&#x5EA6;&#x5668;&#x5C06;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7B97;&#x6CD5;&#x8C03;&#x5EA6;&#x5230;&#x7269;&#x7406; CPU &#x4E0A;&#x53BB;&#x8FD0;&#x884C;&#x3002;C&#x3001;C++ &#x7B49;&#x7684;&#x5E76;&#x53D1;&#x5B9E;&#x73B0;&#x5C31;&#x662F;&#x57FA; &#x4E8E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8C03;&#x5EA6;&#x7684;&#xFF0C;&#x5373;&#x7A0B;&#x5E8F;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x7EBF;&#x7A0B;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8D1F;&#x8D23;&#x8C03;&#x5EA6;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x652F;&#x6301;&#x5E76;&#x53D1;&#x7684;&#x65B9;&#x5F0F;&#x6709;&#x4E0D;&#x5C11;&#x7F3A;&#x9677;&#xFF1A; &#x5BF9;&#x4E8E;&#x5F88;&#x591A;&#x7F51;&#x7EDC;&#x670D;&#x52A1;&#x7A0B;&#x5E8F;&#xFF0C;&#x7531;&#x4E8E;&#x4E0D;&#x80FD;&#x5927;&#x91CF;&#x521B;&#x5EFA; thread&#xFF0C;&#x5C31;&#x8981;&#x5728;&#x5C11;&#x91CF; thread &#x91CC;&#x505A;&#x7F51;&#x7EDC;&#x591A;&#x8DEF;&#x590D;&#x7528;&#xFF0C;&#x5373;&#xFF1A; &#x4F7F;&#x7528; epoll/kqueue/IoCompletionPort &#x8FD9;&#x5957;&#x673A;&#x5236;&#xFF0C;&#x5373;&#x4FBF;&#x6709; libevent/libev &#x8FD9;&#x6837;&#x7684;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x5E2E;&#x5FD9;&#xFF0C;&#x5199;&#x8D77;&#x8FD9;&#x6837;&#x7684;&#x7A0B;&#x5E8F;&#x4E5F;&#x662F;&#x5F88;&#x4E0D;&#x6613;&#x7684; &#x4E00;&#x4E2A; thread &#x7684;&#x4EE3;&#x4EF7;&#x5DF2;&#x7ECF;&#x6BD4;&#x8FDB;&#x7A0B;&#x5C0F;&#x4E86;&#x5F88;&#x591A;&#x4E86;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x4F9D;&#x7136;&#x4E0D;&#x80FD;&#x5927;&#x91CF;&#x521B;&#x5EFA; thread&#xFF0C;&#x56E0;&#x4E3A;&#x9664;&#x4E86;&#x6BCF;&#x4E2A; thread &#x5360;&#x7528;&#x7684;&#x8D44;&#x6E90;&#x4E0D;&#x5C0F;&#x4E4B;&#x5916;&#xFF0C;&#x64CD; &#x4F5C;&#x7CFB;&#x7EDF;&#x8C03;&#x5EA6;&#x5207;&#x6362; thread &#x7684;&#x4EE3;&#x4EF7;&#x4E5F;&#x4E0D;&#x5C0F;&#xFF1B; &#x5E76;&#x53D1;&#x5355;&#x5143;&#x95F4;&#x901A;&#x4FE1;&#x56F0;&#x96BE;&#xFF0C;&#x6613;&#x9519;&#xFF1A;&#x591A;&#x4E2A; thread &#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x867D;&#x7136;&#x6709;&#x591A;&#x79CD;&#x673A;&#x5236;&#x53EF;&#x9009;&#xFF0C;&#x4F46;&#x7528;&#x8D77;&#x6765;&#x662F;&#x76F8;&#x5F53;&#x590D;&#x6742;&#xFF1B; Go&#x91C7;&#x7528;&#x4E86; &#x7528;&#x6237;&#x5C42;&#x8F7B;&#x91CF;&#x7EA7; thread &#x6216;&#x8005;&#x8BF4;&#x662F; &#x7C7B; coroutine &#x7684;&#x6982;&#x5FF5;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;Go &#x5C06;&#x4E4B;&#x79F0;&#x4E3A; goroutine &#x3002; goroutine &#x5360;&#x7528;&#x7684;&#x8D44;&#x6E90;&#x975E;&#x5E38;&#x5C0F;(goroutine stack &#x7684; size &#x9ED8;&#x8BA4;&#x4E3A; 2k)&#xFF0C;goroutine &#x8C03;&#x5EA6;&#x7684;&#x5207;&#x6362;&#x4E5F;&#x4E0D;&#x7528;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5185;&#x6838;&#x5C42;&#x5B8C;&#x6210;&#xFF0C;&#x4EE3;&#x4EF7;&#x5F88;&#x4F4E; &#x3002; &#x6240;&#x6709;&#x7684; Go &#x4EE3;&#x7801;&#x90FD;&#x5728; goroutine &#x4E2D;&#x6267;&#x884C;&#xFF0C;go runtime &#x4E5F;&#x4E00;&#x6837;&#x3002;&#x5C06;&#x8FD9;&#x4E9B; goroutines &#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7B97;&#x6CD5;&#x653E;&#x5230;&#x201C;CPU&#x201D;&#x4E0A;&#x6267;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#x5C31;&#x53EB;&#x505A; goroutine &#x8C03;&#x5EA6;&#x5668; &#x6216; goroutine scheduler &#x3002; &#x4E00;&#x4E2A; Go &#x7A0B;&#x5E8F;&#x5BF9;&#x4E8E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x6765;&#x8BF4;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x5C42;&#x7A0B;&#x5E8F;&#xFF0C;&#x5BF9;&#x4E8E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x800C;&#x8A00;&#xFF0C;&#x5B83;&#x7684;&#x773C;&#x4E2D;&#x53EA;&#x6709; thread&#xFF0C;&#x5B83;&#x5E76;&#x4E0D;&#x77E5;&#x9053;&#x4EC0;&#x4E48;&#x662F; Goroutine&#x3002; goroutine &#x7684;&#x8C03;&#x5EA6;&#x5168;&#x8981;&#x9760; Go &#x81EA;&#x5DF1;&#x5B8C;&#x6210;&#xFF0C;&#x5B9E;&#x73B0; Go &#x7A0B;&#x5E8F;&#x5185; goroutine &#x4E4B;&#x95F4;&#x201C;&#x516C;&#x5E73;&#x201D;&#x7684;&#x7ADE;&#x4E89; CPU &#x8D44;&#x6E90;&#xFF0C;&#x8FD9;&#x4E2A;&#x4EFB;&#x52A1;&#x5C31;&#x843D;&#x5230;&#x4E86; Go runtime &#x5934;&#x4E0A; &#xFF0C; &#x5728;&#x4E00;&#x4E2A; Go &#x7A0B;&#x5E8F;&#x4E2D;&#xFF0C;&#x9664;&#x4E86;&#x7528;&#x6237;&#x4EE3;&#x7801;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x5C31;&#x662F; go runtime &#x4E86;&#x3002; Goroutine &#x7684;&#x8C03;&#x5EA6;&#x95EE;&#x9898;&#x5C31;&#x53D8;&#x6210;&#x4E86; go runtime &#x5982;&#x4F55;&#x5C06;&#x7A0B;&#x5E8F;&#x5185;&#x7684;&#x4F17;&#x591A; goroutine &#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7B97;&#x6CD5;&#x8C03;&#x5EA6;&#x5230; CPU &#x8D44;&#x6E90;&#x4E0A;&#x8FD0;&#x884C; &#x4E86;&#x3002; &#x4F46;&#x662F;&#x5728; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5C42;&#x9762;&#xFF0C;Thread &#x7ADE;&#x4E89;&#x7684; CPU &#x8D44;&#x6E90;&#x662F;&#x771F;&#x5B9E;&#x7684;&#x7269;&#x7406; CPU &#xFF0C;&#x4F46;&#x5728; Go &#x7A0B;&#x5E8F;&#x5C42;&#x9762;&#xFF0C;&#x5404;&#x4E2A; Goroutine &#x8981;&#x7ADE;&#x4E89;&#x7684; CPU &#x8D44;&#x6E90;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F; Go &#x7A0B;&#x5E8F;&#x662F;&#x7528;&#x6237;&#x5C42;&#x7A0B;&#x5E8F;&#xFF0C;&#x5B83;&#x672C;&#x8EAB;&#x6574;&#x4F53;&#x662F;&#x8FD0;&#x884C;&#x5728;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7EBF;&#x7A0B;&#x4E0A;&#x7684;&#xFF0C;&#x56E0;&#x6B64; goroutine &#x4EEC;&#x8981;&#x7ADE;&#x4E89;&#x7684;&#x6240;&#x8C13; CPU &#x8D44;&#x6E90;&#x5C31;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7EBF;&#x7A0B; &#x3002; Go scheduler &#x7684;&#x4EFB;&#x52A1;&#xFF1A; &#x5C06; goroutines &#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7B97;&#x6CD5;&#x653E;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7EBF;&#x7A0B;&#x4E2D;&#x53BB;&#x6267;&#x884C; &#x3002;&#x8FD9;&#x79CD;&#x5728;&#x8BED;&#x8A00;&#x5C42;&#x9762;&#x81EA;&#x5E26;&#x8C03;&#x5EA6;&#x5668;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x79F0; &#x4E4B;&#x4E3A; &#x539F;&#x751F;&#x652F;&#x6301;&#x5E76;&#x53D1; &#x3002; G-P-M &#x6A21;&#x578B; &#x8C03;&#x5EA6;&#x5668;&#x7684;&#x4E3B;&#x8981;&#x6709; 3 &#x4E2A;&#x91CD;&#x8981;&#x90E8;&#x5206;&#xFF0C;&#x5206;&#x522B;&#x662F; M&#x3001;G&#x3001;P&#x3002; G&#xFF08;goroutine &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C; &#x534F;&#x7A0B;&#x7684;&#x5B9E;&#x4F53;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x6267;&#x884C;&#x4F53;&#xFF0C;&#x4EC5;&#x4FDD;&#x5B58;&#x4E86;&#x5E76;&#x53D1;&#x4EFB;&#x52A1;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x5305;&#x62EC;&#x4E86;&#x8C03;&#x7528;&#x6808;&#xFF0C;&#x91CD;&#x8981;&#x7684;&#x8C03;&#x5EA6;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982; channel &#x7B49;&#x3002; G &#x4EFB;&#x52A1;&#x521B;&#x5EFA;&#x4E4B;&#x540E;&#x88AB;&#x653E;&#x7F6E;&#x5728; P &#x672C;&#x5730;&#x961F;&#x5217;&#x6216;&#x8005;&#x5168;&#x5C40;&#x961F;&#x5217;&#xFF0C;&#x7B49;&#x5F85;&#x5DE5;&#x4F5C;&#x7EBF;&#x7A0B;&#x8C03;&#x5EA6;&#x3002; P&#xFF08;processor &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C;&#x662F;&#x8854;&#x63A5; M &#x548C; G &#x7684;&#x8C03;&#x5EA6;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x4E00;&#x4E2A; P &#x53EF;&#x4EE5;&#x627F;&#x8F7D;&#x82E5;&#x5E72;&#x4E2A; G&#xFF0C;&#x4E14;&#x80FD;&#x591F;&#x4F7F;&#x8FD9;&#x4E9B; G &#x9002;&#x65F6;&#x5730;&#x4E0E; M &#x8FDB;&#x884C; &#x5BF9;&#x63A5;&#xFF0C;&#x5E76;&#x5F97;&#x5230;&#x771F;&#x6B63;&#x8FD0;&#x884C;&#x7684;&#x4E2D;&#x4ECB;&#x3002;P &#x7684;&#x6570;&#x91CF;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; runtime.GOMAXPROCS() &#x6765;&#x8BBE;&#x7F6E;&#xFF0C;P &#x7684;&#x6570;&#x91CF;&#x51B3;&#x5B9A;&#x4E86;&#x7CFB;&#x7EDF;&#x5185;&#x6700;&#x5927;&#x53EF;&#x5E76;&#x884C;&#x7684; G &#x7684;&#x6570;&#x91CF;&#xFF0C; &#x5373;&#x6709;&#x591A;&#x5C11;&#x4E2A; goroutine &#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8FD0;&#x884C;&#x3002;&#xFF08;&#x524D;&#x63D0;&#xFF1A;&#x7CFB;&#x7EDF;&#x7684;&#x7269;&#x7406; cpu &#x6838;&#x6570; = P &#x7684;&#x6570;&#x91CF; &#xFF09;&#xFF0C;&#x5B83;&#x7EF4;&#x62A4;&#x4E86;&#x4E00;&#x4E2A; G &#x961F;&#x5217;&#xFF08; runq &#xFF09;&#xFF0C;&#x91CC;&#x9762;&#x5B58;&#x50A8; &#x4E86;&#x6240;&#x6709;&#x9700;&#x8981;&#x5B83;&#x6765;&#x6267;&#x884C;&#x7684; G&#x3002; M&#xFF08;machine &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C;&#x4EE3;&#x8868;&#x7684;&#x662F;&#x7CFB;&#x7EDF;&#x7EBF;&#x7A0B;&#x3002;G &#x5C31;&#x662F;&#x8DD1;&#x5728; M &#x4E4B;&#x4E0A;&#x7684;&#x3002;&#x5728;&#x7ED1;&#x5B9A;&#x6709;&#x6548;&#x7684; P &#x540E;&#xFF0C;&#x8FDB;&#x5165; schedule &#x5FAA;&#x73AF;&#xFF1B; &#x800C; schedule &#x5FAA;&#x73AF;&#x7684;&#x673A;&#x5236;&#x5927;&#x81F4;&#x662F;&#x4ECE;&#x5404;&#x79CD;&#x961F;&#x5217;&#x3001;P &#x7684;&#x672C;&#x5730;&#x961F;&#x5217;&#x4E2D;&#x83B7;&#x53D6; G&#xFF0C;&#x5207;&#x6362;&#x5230; G &#x7684;&#x6267;&#x884C;&#x6808;&#x4E0A;&#x5E76;&#x6267;&#x884C; G &#x7684;&#x51FD;&#x6570;&#xFF0C;&#x8C03;&#x7528; goexit &#x505A;&#x6E05;&#x7406;&#x5DE5;&#x4F5C; &#x5E76;&#x56DE;&#x5230; M&#xFF0C;&#x5982;&#x6B64;&#x53CD;&#x590D;&#x3002;M &#x5E76;&#x4E0D;&#x4FDD;&#x7559; G &#x72B6;&#x6001;&#xFF0C;&#x8FD9;&#x662F; G &#x53EF;&#x4EE5;&#x8DE8; M &#x8C03;&#x5EA6;&#x7684;&#x57FA;&#x7840;&#x3002; &#x7B80;&#x5355;&#x6765;&#x8BF4;&#xFF0C;&#x4E00;&#x4E2A; G &#x7684;&#x6267;&#x884C;&#x9700;&#x8981; P &#x548C; M &#x7684;&#x652F;&#x6301;&#xFF0C;P &#x548C; M &#x7ED1;&#x5B9A;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x5F62;&#x6210;&#x4E86;&#x4E00;&#x4E2A; G &#x7684;&#x8FD0;&#x884C;&#x73AF;&#x5883;&#xFF08;&#x5185;&#x6838;&#x7EBF;&#x7A0B;&#x548C;&#x4E0A;&#x4E0B;&#x6587;&#xFF09;&#x3002; P &#x548C; M &#x6784;&#x6210;&#x6267;&#x884C;&#x7EC4;&#x5408;&#x4F53;&#xFF0C;&#x4F46;&#x4E24;&#x8005;&#x7684;&#x6570;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x4E00;&#x4E00;&#x5BF9;&#x5E94;&#x7684;&#x3002;&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C; P &#x7684;&#x6570;&#x91CF;&#x76F8;&#x5BF9;&#x6052;&#x5B9A;&#xFF0C;&#x9ED8;&#x8BA4;&#x4E0E; CPU &#x6838;&#x6570;&#x76F8;&#x540C;&#xFF0C;&#x53EF;&#x80FD;&#x66F4;&#x591A;&#x6216;&#x66F4;&#x5C11;&#x3002; M &#x662F;&#x7531;&#x8C03;&#x5EA6;&#x5668;&#x6309;&#x9700;&#x521B;&#x5EFA;&#x7684; &#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A; M &#x56E0;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x65F6;&#x95F4;&#x957F;&#x800C;&#x963B;&#x585E;&#xFF0C;P &#x5C31;&#x4F1A;&#x88AB;&#x76D1;&#x63A7;&#x7EBF;&#x7A0B;&#x62A2;&#x8D70;&#xFF0C;&#x5E76;&#x4E14;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A; M &#x6267;&#x884C;&#x5176;&#x4ED6;&#x4EFB;&#x52A1;&#xFF0C;M &#x7684;&#x6570;&#x91CF;&#x5C31;&#x589E;&#x52A0;&#x4E86;&#x3002; &#x6240;&#x6709; P &#x662F;&#x5728;&#x8C03;&#x5EA6;&#x5668;&#x521D;&#x59CB;&#x5316;&#x9636;&#x6BB5;&#x521B;&#x5EFA;&#x7684;&#xFF0C;&#x867D;&#x7136;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; runtime.GOMAXPROCS() &#x5728;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#x4FEE;&#x6539; P &#x7684;&#x6570;&#x91CF;&#xFF0C;&#x4F46;&#x662F;&#x4EE3;&#x4EF7;&#x5F88;&#x5927;&#x3002; &#x62A2;&#x5360;&#x5F0F;&#x8C03;&#x5EA6; Go &#x5E76;&#x6CA1;&#x6709;&#x65F6;&#x95F4;&#x7247;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x53EA;&#x662F;&#x5728;&#x76EE;&#x6807; G &#x4E0A;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x62A2;&#x5360;&#x6807;&#x5FD7;&#x3002;&#x5982;&#x679C;&#x67D0;&#x4E2A; G &#x6CA1;&#x6709;&#x8FDB;&#x884C; syscall&#x3001;&#x6CA1;&#x6709;&#x8FDB;&#x884C; I/O &#x64CD;&#x4F5C;&#x3001;&#x6CA1;&#x6709;&#x963B;&#x585E;&#x5728;&#x4E00; &#x4E2A; channel &#x64CD;&#x4F5C;&#x4E0A;&#xFF0C;&#x90A3;&#x4E48; M &#x662F; &#x5982;&#x4F55;&#x8BA9; G &#x505C;&#x4E0B;&#x6765;&#x5E76;&#x8C03;&#x5EA6;&#x4E0B;&#x4E00;&#x4E2A; runnable G &#x7684;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A;G &#x662F;&#x88AB;&#x62A2;&#x5360;&#x8C03;&#x5EA6;&#x7684;&#x3002; Go &#x5728;&#x8BBE;&#x8BA1;&#x4E4B;&#x521D;&#x5E76;&#x6CA1;&#x8003;&#x8651;&#x5C06; goroutine &#x8BBE;&#x8BA1;&#x6210;&#x62A2;&#x5360;&#x5F0F;&#x7684;&#x3002;&#x7528;&#x6237;&#x8D1F;&#x8D23;&#x8BA9;&#x5404;&#x4E2A; goroutine &#x4EA4;&#x4E92;&#x5408;&#x4F5C;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#x3002;&#x4E00;&#x4E2A; goroutine &#x53EA;&#x6709;&#x5728;&#x6D89;&#x53CA;&#x5230;&#x52A0;&#x9501;&#xFF0C; &#x8BFB;&#x5199;&#x901A;&#x9053;&#x6216;&#x8005;&#x4E3B;&#x52A8;&#x8BA9;&#x51FA; CPU &#x7B49;&#x64CD;&#x4F5C;&#x65F6;&#x624D;&#x4F1A;&#x89E6;&#x53D1;&#x5207;&#x6362;&#x3002; &#x5783;&#x573E;&#x56DE;&#x6536;&#x5668;&#x662F;&#x9700;&#x8981; stop the world &#x7684;&#x3002;&#x5982;&#x679C;&#x5783;&#x573E;&#x56DE;&#x6536;&#x5668;&#x60F3;&#x8981;&#x8FD0;&#x884C;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5FC5;&#x987B;&#x5148;&#x901A;&#x77E5;&#x5176;&#x5B83;&#x7684; goroutine &#x5408;&#x4F5C;&#x505C;&#x4E0B;&#x6765;&#xFF0C;&#x8FD9;&#x4F1A;&#x9020;&#x6210;&#x8F83;&#x957F;&#x65F6; &#x95F4;&#x7684;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#x3002;&#x8003;&#x8651;&#x4E00;&#x79CD;&#x5F88;&#x6781;&#x7AEF;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x6240;&#x6709;&#x7684; goroutine &#x90FD;&#x505C;&#x4E0B;&#x6765;&#x4E86;&#xFF0C;&#x53EA;&#x6709;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x6CA1;&#x6709;&#x505C;&#xFF0C;&#x90A3;&#x4E48;&#x5783;&#x573E;&#x56DE;&#x6536;&#x5C31;&#x4F1A;&#x4E00;&#x76F4;&#x7B49;&#x5F85;&#x7740;&#x6CA1;&#x6709;&#x505C;&#x7684;&#x90A3;&#x4E00;&#x4E2A;&#x3002; &#x62A2;&#x5360;&#x5F0F;&#x8C03;&#x5EA6;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x8FD9;&#x79CD;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x62A2;&#x5360;&#x5F0F;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A; goroutine &#x8FD0;&#x884C;&#x65F6;&#x95F4;&#x8FC7;&#x957F;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x88AB;&#x5265;&#x593A;&#x8FD0;&#x884C;&#x6743;&#x3002;Go &#x8FD8;&#x53EA;&#x662F;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E9B;&#x5F88;&#x521D;&#x7EA7; &#x7684;&#x62A2;&#x5360;&#xFF0C;&#x53EA;&#x6709;&#x957F;&#x65F6;&#x95F4;&#x963B;&#x585E;&#x4E8E;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF0C;&#x6216;&#x8005;&#x8FD0;&#x884C;&#x4E86;&#x8F83;&#x957F;&#x65F6;&#x95F4;&#x624D;&#x4F1A;&#x88AB;&#x62A2;&#x5360;&#x3002;runtime &#x4F1A;&#x5728;&#x540E;&#x53F0;&#x6709;&#x4E00;&#x4E2A;&#x68C0;&#x6D4B;&#x7EBF;&#x7A0B;&#xFF0C;&#x5B83;&#x4F1A;&#x68C0;&#x6D4B;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#xFF0C; &#x5E76;&#x901A;&#x77E5; goroutine &#x6267;&#x884C;&#x8C03;&#x5EA6;&#x3002; Go &#x7A0B;&#x5E8F;&#x7684;&#x521D;&#x59CB;&#x5316;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;runtime &#x5F00;&#x4E86;&#x4E00;&#x6761;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#xFF0C;&#x8FD0;&#x884C;&#x4E00;&#x4E2A; sysmon &#x51FD;&#x6570;(&#x4E00;&#x822C;&#x79F0;&#x4E3A;&#x76D1;&#x63A7;&#x7EBF;&#x7A0B;)&#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4F1A;&#x5468;&#x671F;&#x6027;&#x5730;&#x505A; epoll &#x64CD;&#x4F5C;&#xFF0C; &#x540C;&#x65F6;&#x5B83;&#x8FD8;&#x4F1A;&#x68C0;&#x6D4B;&#x6BCF;&#x4E2A; P &#x662F;&#x5426;&#x8FD0;&#x884C;&#x4E86;&#x8F83;&#x957F;&#x65F6;&#x95F4;&#x3002;&#x8BE5; M &#x65E0;&#x9700;&#x7ED1;&#x5B9A; P &#x5373;&#x53EF;&#x8FD0;&#x884C;&#xFF0C;&#x8BE5; M &#x5728;&#x6574;&#x4E2A; Go &#x7A0B;&#x5E8F;&#x7684;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x81F3;&#x5173;&#x91CD;&#x8981;&#x3002; sysmon &#x6BCF; 20us~10ms &#x8FD0;&#x884C;&#x4E00;&#x6B21;&#xFF0C; sysmon &#x4E3B;&#x8981;&#x5B8C;&#x6210;&#x5982;&#x4E0B;&#x5DE5;&#x4F5C;&#xFF1A; &#x91CA;&#x653E;&#x95F2;&#x7F6E;&#x8D85;&#x8FC7; 5 &#x5206;&#x949F;&#x7684; span &#x7269;&#x7406;&#x5185;&#x5B58;&#xFF1B; &#x5982;&#x679C;&#x8D85;&#x8FC7; 2 &#x5206;&#x949F;&#x6CA1;&#x6709;&#x5783;&#x573E;&#x56DE;&#x6536;&#xFF0C;&#x5F3A;&#x5236;&#x6267;&#x884C;&#xFF1B; &#x5C06;&#x957F;&#x65F6;&#x95F4;&#x672A;&#x5904;&#x7406;&#x7684; netpoll &#x7ED3;&#x679C;&#x6DFB;&#x52A0;&#x5230;&#x4EFB;&#x52A1;&#x961F;&#x5217;&#xFF1B; &#x5411;&#x957F;&#x65F6;&#x95F4;&#x8FD0;&#x884C;&#x7684; G &#x4EFB;&#x52A1;&#x53D1;&#x51FA;&#x62A2;&#x5360;&#x8C03;&#x5EA6;&#xFF1B; &#x6536;&#x56DE;&#x56E0; syscall &#x957F;&#x65F6;&#x95F4;&#x963B;&#x585E;&#x7684; P&#xFF1B; channel &#x963B;&#x585E;&#x6216; network I/O &#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x8C03;&#x5EA6; &#x5982;&#x679C; G &#x88AB;&#x963B;&#x585E;&#x5728;&#x67D0;&#x4E2A; channel &#x64CD;&#x4F5C;&#x6216; network I/O &#x64CD;&#x4F5C;&#x4E0A;&#x65F6;&#xFF0C;G &#x4F1A;&#x88AB;&#x653E;&#x7F6E;&#x5230;&#x67D0;&#x4E2A; wait &#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x800C; M &#x4F1A;&#x5C1D;&#x8BD5;&#x8FD0;&#x884C;&#x4E0B;&#x4E00;&#x4E2A; runnable &#x7684; G&#xFF1B;&#x5982;&#x679C;&#x6B64;&#x65F6;&#x6CA1;&#x6709; runnable &#x7684; G &#x4F9B; M &#x8FD0;&#x884C;&#xFF0C;&#x90A3;&#x4E48; M &#x5C06;&#x89E3;&#x7ED1; P&#xFF0C;&#x5E76;&#x8FDB;&#x5165; sleep &#x72B6;&#x6001;&#x3002;&#x5F53; I/O available &#x6216; channel &#x64CD;&#x4F5C;&#x5B8C;&#x6210;&#xFF0C; &#x5728; wait &#x961F;&#x5217;&#x4E2D;&#x7684; G &#x4F1A;&#x88AB;&#x5524;&#x9192;&#xFF0C;&#x6807;&#x8BB0;&#x4E3A; runnable&#xFF0C;&#x653E;&#x5165;&#x5230;&#x67D0; P &#x7684;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x7ED1;&#x5B9A;&#x4E00;&#x4E2A; M &#x7EE7;&#x7EED;&#x6267;&#x884C;&#x3002; system call &#x963B;&#x585E;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x8C03;&#x5EA6; &#x5982;&#x679C; G &#x88AB;&#x963B;&#x585E;&#x5728;&#x67D0;&#x4E2A; system call &#x64CD;&#x4F5C;&#x4E0A;&#xFF0C;&#x90A3;&#x4E48;&#x4E0D;&#x5149; G &#x4F1A;&#x963B;&#x585E;&#xFF0C;&#x6267;&#x884C;&#x8BE5; G &#x7684; M &#x4E5F;&#x4F1A;&#x89E3;&#x7ED1; P(&#x5B9E;&#x8D28;&#x662F;&#x88AB; sysmon &#x62A2;&#x8D70;&#x4E86;)&#xFF0C; &#x4E0E; G &#x4E00;&#x8D77;&#x8FDB;&#x5165; sleep &#x72B6;&#x6001;&#x3002;&#x5982;&#x679C;&#x6B64;&#x65F6;&#x6709; idle &#x7684; M&#xFF0C;&#x5219; P &#x4E0E;&#x5176;&#x7ED1;&#x5B9A;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x5176;&#x4ED6; G&#xFF1B;&#x5982;&#x679C;&#x6CA1;&#x6709; idle M&#xFF0C;&#x4F46;&#x4ECD;&#x7136;&#x6709;&#x5176;&#x4ED6; G &#x8981;&#x53BB;&#x6267;&#x884C;&#xFF0C; &#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0; M&#x3002; &#x5F53;&#x963B;&#x585E;&#x5728; syscall &#x4E0A;&#x7684; G &#x5B8C;&#x6210; syscall &#x8C03;&#x7528;&#x540E;&#xFF0C;G &#x4F1A;&#x53BB;&#x5C1D;&#x8BD5;&#x83B7;&#x53D6;&#x4E00;&#x4E2A;&#x53EF;&#x7528;&#x7684; P&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x53EF;&#x7528;&#x7684; P&#xFF0C;&#x90A3;&#x4E48; G &#x4F1A;&#x88AB;&#x6807;&#x8BB0;&#x4E3A; runnable&#xFF0C; &#x4E4B;&#x524D;&#x7684;&#x90A3;&#x4E2A; sleep &#x7684; M &#x5C06;&#x518D;&#x6B21;&#x8FDB;&#x5165; sleep&#x3002;"},"standards/io/io.html":{"title":"io","path":"\\golang-learn\\standards\\io\\io.html","body":"io io 是对输入输出设备的抽象。 io 库对这些功能进行了抽象，通过统一的接口对输入输出设备进行操作。 最重要的是两个接口： Reader 和 Writer 。 Reader Reader 接口： 1 2 3 type Reader interface  Read(p [] byte ) (n int , err error)  Read 将 len(p) 个字节读取到 p 中。它返回读取的字节数 n （ 0 = n = len(p) ） 以及任何遇到的错误。 即使 Read 返回的 n  len(p) ，它也会在调用过程中占用 len(p) 个字节作为暂存空间。若可读取的数据不到 len(p) 个 字节， Read 会返回可用数据，而不是等待更多数据。 当 Read 在成功读取 n  0 个字节后遇到一个错误或 EOF ( end-of-file )，它会返回读取的字节数。它可能会同时在本次的调 用中返回一个 non-nil 错误,或在下一次的调用中返回这个错误（且 n 为 0）。 一般情况下, Reader 会返回一个 非 0 字节数 n , 若 n = len(p) 个字节从输入源的结尾处由 Read 返回， Read 可能返回 err == EOF 或者 err == nil 。并且之后的 Read 都应该返回 ( n:0, err:EOF )。 调用者在考虑错误之前应当首先处理返回的数据。这样做可以正确地处理在读取一些字节后产生的 I/O 错误，同时允许 EOF 的出现。 1 2 3 4 5 6 7 8 func ReadFrom (reader io.Reader, num int ) ([] byte , error)  \tp := make ([] byte , num) \tn, err := reader.Read(p) \t if n  0  \t\t return p[:n], nil \t \t return p, err  ReadFrom 函数将 io.Reader 作为参数，也就是说， ReadFrom 可以从任意的地方读取数据，只要来源实现了 io.Reader 接口。 比如，我们可以从标准输入、文件、字符串等读取数据，示例代码如下： 1 2 3 4 5 6 7 8 // 从标准输入读取 data, err = ReadFrom(os.Stdin, 11 ) // 从普通文件读取，其中 file 是 os.File 的实例 data, err = ReadFrom(file, 9 ) // 从字符串读取 data, err = ReadFrom(strings.NewReader( \"from string\" ), 12 ) io.EOF 变量的定义： var EOF = errors.New(EOF) ，是 error 类型。根据 reader 接口的说明，在 n  0 且数据被读完了 的情况下，当次返回的 error 有可能是 EOF 也有可能是 nil 。 Writer Writer 接口： 1 2 3 type Writer interface  Write(p [] byte ) (n int , err error)  Write 将 len(p) 个字节从 p 中写入到基本数据流中。它返回从 p 中被写入的字节数 n （ 0 = n = len(p) ）以及任何遇到的引 起写入提前停止的错误。若 Write 返回的 n  len(p) ，它就必须返回一个 非 nil 的错误。 以 fmt.Fprintln 为例： 1 2 3 func Println (a ... interface ) (n int , err error)  \t return Fprintln(os.Stdout, a...)  可以看出 fmt.Println 会将内容输出到标准输出中。 实现了 io.Reader 接口或 io.Writer 接口的类型 标准库中有哪些类型实现了 io.Reader 或 io.Writer 接口？ 例如 os.Stdin/Stdout ，它们分别实现了 io.Reader/io.Writer 接口： 1 2 3 4 5 var ( Stdin = NewFile( uintptr (syscall.Stdin), \"/dev/stdin\" ) Stdout = NewFile( uintptr (syscall.Stdout), \"/dev/stdout\" ) Stderr = NewFile( uintptr (syscall.Stderr), \"/dev/stderr\" ) ) 上面的代码可以看出， Stdin/Stdout/Stderr 只是三个特殊的文件类型的标识（都是 os.File 的实例）， os.File 实现 了 io.Reader 和 io.Writer 。 实现了 io.Reader 或 io.Writer 接口的类型： os.File 同时实现了 io.Reader 和 io.Writer strings.Reader 实现了 io.Reader bufio.Reader/Writer 分别实现了 io.Reader 和 io.Writer bytes.Buffer 同时实现了 io.Reader 和 io.Writer bytes.Reader 实现了 io.Reader compress/gzip.Reader/Writer 分别实现了 io.Reader 和 io.Writer crypto/cipher.StreamReader/StreamWriter 分别实现了 io.Reader 和 io.Writer crypto/tls.Conn 同时实现了 io.Reader 和 io.Writer encoding/csv.Reader/Writer 分别实现了 io.Reader 和 io.Writer mime/multipart.Part 实现了 io.Reader net/conn 分别实现了 io.Reader 和 io.Writer (Conn接口定义了Read/Write) io 包本身实现这两个接口的类型 ： 实现了 Reader 的类型： LimitedReader 、 PipeReader 、 SectionReader 实现了 Writer 的类型： PipeWriter ReaderAt 和 WriterAt ReaderAt 接口 ： 1 2 3 type ReaderAt interface  ReadAt(p [] byte , off int64 ) (n int , err error)  ReadAt 从基本输入源的偏移量 off 处开始，将 len(p) 个字节读到 p 中。它返回读取的字节数 n （ 0 = n = len(p) ）以及任 何遇到的错误。 当 ReadAt 返回的 n  len(p) 时，它就会返回一个 非 nil 的错误来解释为什么没有返回更多的字节。 即使 ReadAt 返回的 n  len(p) ，它也会在调用过程中使用 p 的全部作为暂存空间。若可读取的数据不到 len(p) 字节， ReadAt 就会 阻塞,直到所有数据都可用或一个错误发生。 若 n = len(p) 个字节从输入源的结尾处由 ReadAt 返回， Read 可能返回 err == EOF 或者 err == nil 若 ReadAt 携带一个偏移量从输入源读取， ReadAt 应当既不影响偏移量也不被它所影响。 可对相同的输入源并行执行 ReadAt 调用。 可见， ReadAt 接口使得可以从指定偏移量处开始读取数据。 简单示例代码如下： 1 2 3 4 5 6 7 reader := strings.NewReader( \"Hello world\" ) p := make ([] byte , 6 ) n, err := reader.ReadAt(p, 2 ) if err != nil  panic (err)  fmt.Printf( \"%s, %d\\n\" , p, n) // llo wo, 6 WriterAt 接口 ： 1 2 3 type WriterAt interface  WriteAt(p [] byte , off int64 ) (n int , err error)  WriteAt 从 p 中将 len(p) 个字节写入到偏移量 off 处的基本数据流中。它返回从 p 中被写入的字节数 n （ 0 = n = len(p) ） 以及任何遇到的引起写入提前停止的错误。若 WriteAt 返回的 n  len(p) ，它就必须返回一个 非 nil 的错误。 若 WriteAt 携带一个偏移量写入到目标中， WriteAt 应当既不影响偏移量也不被它所影响。 若被写区域没有重叠，可对相同的目标并行执行 WriteAt 调用。 我们可以通过该接口将数据写入到数据流的特定偏移量之后。 1 2 3 4 5 6 7 8 9 10 11 file, err := os.Create( \"writeAt.txt\" ) if err != nil  panic (err)  defer file.Close() _, _ = file.WriteString( \"Hello world----ignore\" ) n, err := file.WriteAt([] byte ( \"Golang\" ), 15 ) if err != nil  panic (err)  fmt.Println(n) 打开文件 WriteAt.txt ，内容是： Hello world----Golang 。 分析： file.WriteString(Hello world----ignore) 往文件中写入 Hello world----ignore ，之后 file.WriteAt([]byte(Golang), 15) 在文件流的 offset=15 处写入 Golang （会覆盖该位置的内容）。 ReaderFrom 和 WriterTo 这两个接口实现了 一次性从某个地方读或写到某个地方去 。 ReaderFrom ： 1 2 3 type ReaderFrom interface  ReadFrom(r Reader) (n int64 , err error)  ReadFrom 从 r 中读取数据，直到 EOF 或发生错误。其返回值 n 为读取的字节数。除 io.EOF 之外，在读取过程中遇到的任何错误也 将被返回。 如果 ReaderFrom 可用， Copy 函数就会使用它。 注意： ReadFrom 方法不会返回 err == EOF 。 将文件中的数据全部读取（显示在标准输出）： 1 2 3 4 5 6 7 8 file, err := os.Open( \"writeAt.txt\" ) if err != nil  panic (err)  defer file.Close() writer := bufio.NewWriter(os.Stdout) writer.ReadFrom(file) writer.Flush() 也可以通过 ioutil 包的 ReadFile 函数获取文件全部内容。其实，跟踪一下 ioutil.ReadFile 的源码，会发现其实也是通过 ReadFrom 方 法实现（用的是 bytes.Buffer ，它实现了 ReaderFrom 接口）。 WriterTo ： 1 2 3 type WriterTo interface  WriteTo(w Writer) (n int64 , err error)  WriteTo 将数据写入 w 中，直到没有数据可写或发生错误。其返回值 n 为写入的字节数。 在写入过程中遇到的任何错误也将被返回。 如果 WriterTo 可用， Copy 函数就会使用它。 将一段文本输出到标准输出： 1 2 reader := bytes.NewReader([] byte ( \"Hello world\" )) reader.WriteTo(os.Stdout) Seeker 1 2 3 type Seeker interface  Seek(offset int64 , whence int ) (ret int64 , err error)  Seek 设置下一次 Read 或 Write 的偏移量为 offset ，它的解释取决于 whence ： 0 表示相对于文件的起始处，1 表示相对 于当前的偏移，而 2 表示相对于其结尾处 。 Seek 返回新的偏移量和一个错误，如果有的话。 也就是说， Seek 方法是用于设置偏移量的，这样可以从某个特定位置开始操作数据流。听起来和 ReaderAt/WriteAt 接口有些类似， 不过 Seeker 接口更灵活，可以更好的控制读写数据流的位置。 获取倒数第二个字符（需要考虑 UTF-8 编码，这里的代码只是一个示例）： 1 2 3 4 reader := strings.NewReader( \"Hello world\" ) reader.Seek( -6 , io.SeekEnd) r, _, _ := reader.ReadRune() fmt.Printf( \"%c\\n\" , r) whence 的值，在 io 包中定义了相应的常量，应该使用这些常量 1 2 3 4 5 const ( SeekStart = 0 // seek relative to the origin of the file SeekCurrent = 1 // seek relative to the current offset SeekEnd = 2 // seek relative to the end ) 而原先 os 包中的常量已经被标注为 Deprecated 1 2 3 4 5 6 // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd. const ( SEEK_SET int = 0 // seek relative to the origin of the file SEEK_CUR int = 1 // seek relative to the current offset SEEK_END int = 2 // seek relative to the end ) Closer 1 2 3 type Closer interface  Close() error  该接口比较简单，只有一个 Close() 方法，用于关闭数据流。 文件 ( os.File )、归档（压缩包）、数据库连接、 Socket 等需要手动关闭的资源都实现了 Closer 接口。 实际编程中，经常将 Close 方法的调用放在 defer 语句中。 1 2 3 4 5 file, err := os.Open( \"studygolang.txt\" ) defer file.Close() if err != nil  \t...  当文件 studygolang.txt 不存在或找不到时， file.Close() 会返回错误，因为 file 是 nil 。 因此，应该 将 defer file.Close() 放在错误检查之后 。 1 2 3 4 5 6 func (f *File) Close () error  \t if f == nil  \t\t return ErrInvalid \t \t return f.file. close ()  其他接口 ByteReader 和 ByteWriter 读或写一个字节： 1 2 3 4 5 6 7 type ByteReader interface  ReadByte() (c byte , err error)  type ByteWriter interface  WriteByte(c byte ) error  下面类型都实现了这两个接口: bufio.Reader/Writer 分别实现了 io.ByteReader 和 io.ByteWriter bytes.Buffer 同时实现了 io.ByteReader 和 io.ByteWriter bytes.Reader 实现了 io.ByteReader strings.Reader 实现了 io.ByteReader 通过 bytes.Buffer 来一次读取或写入一个字节： 1 2 3 4 5 6 7 8 9 10 11 12 var ch byte fmt.Scanf( \"%c\\n\" , &amp;ch) buffer := new (bytes.Buffer) err := buffer.WriteByte(ch) if err == nil  \tfmt.Println( \"写入一个字节成功！准备读取该字节……\" ) \tnewCh, _ := buffer.ReadByte() \tfmt.Printf( \"读取的字节：%c\\n\" , newCh)  else  \tfmt.Println( \"写入错误\" )  程序从标准输入接收一个字节（ASCII 字符），调用 buffer 的 WriteByte 将该字节写入 buffer 中，之后通过 ReadByte 读取该字节。 ByteScanner、RuneReader 和 RuneScanner ByteScanner 接口： 1 2 3 4 type ByteScanner interface  ByteReader UnreadByte() error  内嵌了 ByteReader 接口， UnreadByte 方法的意思是：将上一次 ReadByte 的字节还原，使得再次调用 ReadByte 返回的结果和上一次调 用相同，也就是说， UnreadByte 是重置上一次的 ReadByte 。注意， UnreadByte 调用之前必须调用了 ReadByte ，且不能连续调 用 UnreadByte 。即： 1 2 buffer := bytes.NewBuffer([] byte  'a' , 'b' ) err := buffer.UnreadByte() 和 1 2 3 4 buffer := bytes.NewBuffer([] byte  'a' , 'b' ) buffer.ReadByte() err := buffer.UnreadByte() err = buffer.UnreadByte() err 都 非 nil ，错误为： bytes.Buffer: UnreadByte: previous operation was not a read RuneReader 接口和 ByteReader 类似，只是 ReadRune 方法读取单个 UTF-8 字符，返回其 rune 和该字符占用的字节数。 RuneScanner 接口和 ByteScanner 类似。 ReadCloser、ReadSeeker、ReadWriteCloser、ReadWriteSeeker、ReadWriter、WriteCloser 和 WriteSeeker 这些接口是上面介绍的接口的两个或三个组合而成的新接口。 ReadWriter 接口： 1 2 3 4 type ReadWriter interface  Reader Writer  Reader 和 Writer 接口的组合。 这些接口的作用是：有些时候同时需要某两个接口的所有功能，即必须同时实现了某两个接口的类型才能够被传入使用。 SectionReader 类型 SectionReader 是一个 struct ，实现了 Read , Seek 和 ReadAt ，同时，内嵌了 ReaderAt 接口。结构定义如下： 1 2 3 4 5 6 type SectionReader struct  \tr ReaderAt\t // 该类型最终的 Read/ReadAt 最终都是通过 r 的 ReadAt 实现 \tbase int64 \t\t // NewSectionReader 会将 base 设置为 off \toff int64 \t\t // 从 r 中的 off 偏移处开始读取数据 \tlimit int64 \t\t // limit - off = SectionReader 流的长度  该类型读取数据流中部分数据。 1 func NewSectionReader (r ReaderAt, off int64 , n int64 ) * SectionReader NewSectionReader 返回一个 SectionReader ，它从 r 中的偏移量 off 处读取 n 个字节后以 EOF 停止。 也就是说，SectionReader 只是内部 ReaderAt 表示的数据流的一部分：从 off 开始后的 n 个字节。 这个类型的作用是：方便重复操作某一段 (section) 数据流；或者同时需要 ReadAt 和 Seek 的功能。 由于该类型所支持的操作，前面都有介绍，因此不提供示例代码了。 LimitedReader 类型 1 2 3 4 type LimitedReader struct  R Reader // underlying reader，最终的读取操作通过 R.Read 完成 N int64 // max bytes remaining  从 R 读取但将返回的数据量限制为 N 字节。每调用一次 Read 都将更新 N 来反应新的剩余数量。 也就是说，最多只能返回 N 字节数据。 LimitedReader 只实现了 Read 方法。 示例： 1 2 3 4 5 6 7 8 content := \"This Is LimitReader Example\" reader := strings.NewReader(content) limitReader := &amp;io.LimitedReaderR: reader, N: 8  for limitReader.N  0  \ttmp := make ([] byte , 2 ) \tlimitReader.Read(tmp) \tfmt.Printf( \"%s\" , tmp) // This Is  通过该类型可以达到 只允许读取一定长度数据 的目的。 在 io 包中， LimitReader 函数的实现其实就是调用 LimitedReader ： 1 func LimitReader (r Reader, n int64 ) Reader  return &amp;LimitedReaderr, n  PipeReader 和 PipeWriter 类型 PipeReader 是管道的读取端。它实现了 io.Reader 和 io.Closer 接口： 1 2 3 type PipeReader struct  \tp *pipe  从管道中读取数据。该方法会堵塞，直到管道写入端开始写入数据或写入端被关闭。如果写入端关闭时带有 error （即调用 CloseWithError 关闭）， 该 Read 返回的 err 就是写入端传递的 error ；否则 err 为 EOF 。 PipeWriter 是管道的写入端。它实现了 io.Writer 和 io.Closer 接口： 1 2 3 type PipeWriter struct  \tp *pipe  写数据到管道中。该方法会堵塞，直到管道读取端读完所有数据或读取端被关闭。如果读取端关闭时 带有 error （即调用 CloseWithError 关闭），该 Write 返回的 err 就是读取端传递的 error ；否则 err 为 ErrClosedPipe 。 示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 func main ()  pipeReader, pipeWriter := io.Pipe() go PipeWrite(pipeWriter) go PipeRead(pipeReader) time.Sleep( 30 * time.Second)  func PipeWrite (writer *io.PipeWriter)  \tdata := [] byte ( \"Go语言中文网\" ) \t for i := 0 ; i  3 ; i++ \t\tn, err := writer.Write(data) \t\t if err != nil  \t\t\tfmt.Println(err) \t\t\t return \t\t \t\tfmt.Printf( \"写入字节 %d\\n\" ,n) \t \twriter.CloseWithError(errors.New( \"写入段已关闭\" ))  func PipeRead (reader *io.PipeReader)  \tbuf := make ([] byte , 128 ) \t for  \t\tfmt.Println( \"接口端开始阻塞5秒钟...\" ) \t\ttime.Sleep( 5 * time.Second) \t\tfmt.Println( \"接收端开始接受\" ) \t\tn, err := reader.Read(buf) \t\t if err != nil  \t\t\tfmt.Println(err) \t\t\t return \t\t \t\tfmt.Printf( \"收到字节: %d\\n buf内容: %s\\n\" ,n,buf) \t  io.Pipe() 用于创建一个同步的内存管道： 1 func Pipe () (*PipeReader, *PipeWriter) 它将 io.Reader 连接到 io.Writer 。一端的读取匹配另一端的写入，直接在这两端之间复制数据；它没有内部缓存。它对于并行调用 Read 和 Write 以及其它函数或 Close 来说都是安全的。一旦等待的 I/O 结束， Close 就会完成。并行调用 Read 或并行调用 Write 也 同样安全：同种类的调用将按顺序进行控制。 正因为是 同步 的，因此不能在一个 goroutine 中进行读和写。 另外，对于管道的 close 方法（非 CloseWithError 时）， err 会被置为 EOF 。 Copy 和 CopyN 函数 Copy 函数 ： 1 func Copy (dst Writer, src Reader) (written int64 , err error) 函数文档： Copy 将 src 复制到 dst ，直到在 src 上到达 EOF 或发生错误。它返回复制的字节数，如果有错误的话，还会返回在复制时遇到的第一 个错误。 成功的 Copy 返回 err == nil ，而非 err == EOF 。由于 Copy 被定义为从 src 读取直到 EOF 为止，因此它不会将来 自 Read 的 EOF 当做错误来报告。 若 dst 实现了 ReaderFrom 接口，其复制操作可通过调用 dst.ReadFrom(src) 实现。此外，若 src 实现了 WriterTo 接口，其复 制操作可通过调用 src.WriteTo(dst) 实现。 代码： 1 io.Copy(os.Stdout, strings.NewReader( \"Go语言中文网\" )) 直接将内容输出（写入 Stdout 中）： 1 2 3 4 5 6 7 8 9 10 11 12 package main import ( \t \"fmt\" \t \"io\" \t \"os\" ) func main ()  \t_, _ = io.Copy(os.Stdout, os.Stdin) \tfmt.Println( \"Got EOF -- bye\" )  执行： echo Hello, World | go run main.go CopyN 函数 ： 1 func CopyN (dst Writer, src Reader, n int64 ) (written int64 , err error) CopyN 将 n 个字节(或到一个 error )从 src 复制到 dst 。 它返回复制的字节数以及在复制时遇到的最早的错误。 当且仅当 err == nil 时, written == n 。 若 dst 实现了 ReaderFrom 接口，复制操作也就会使用它来实现。 代码： 1 io.CopyN(os.Stdout, strings.NewReader( \"Go语言中文网\" ), 8 ) // Go语言 ReadAtLeast 和 ReadFull 函数 ReadAtLeast 函数 ： 1 func ReadAtLeast (r Reader, buf [] byte , min int ) (n int , err error) 函数文档： ReadAtLeast 将 r 读取到 buf 中，直到读了最少 min 个字节为止。它返回复制的字节数，如果读取的字节较少，还会返回一个错误。 若没有读取到字节，错误就只是 EOF 。如果一个 EOF 发生在读取了少于 min 个字节之后， ReadAtLeast 就会返回 ErrUnexpectedEOF 。 若 min 大于 buf 的长度， ReadAtLeast 就会返回 ErrShortBuffer 。对于返回值，当且仅当 err == nil 时，才有 n = min 。 ReadFull 函数 ： 1 func ReadFull (r Reader, buf [] byte ) (n int , err error) 函数文档： ReadFull 精确地从 r 中将 len(buf) 个字节读取到 buf 中。它返回复制的字节数，如果读取的字节较少，还会返回一个错误。若没有读 取到字节，错误就只是 EOF 。如果一个 EOF 发生在读取了一些但不是所有的字节后， ReadFull 就会返回 ErrUnexpectedEOF 。对于返回值， 当且仅当 err == nil 时，才有 n == len(buf) 。 注意该函数和 ReadAtLeast 的区别： ReadFull 将 buf 读满 ReadAtLeast 是最少读取 min 个字节。 WriteString 函数 这是为了方便写入 string 类型提供的函数，函数签名： 1 func WriteString (w Writer, s string ) (n int , err error) 函数文档： WriteString 将 s 的内容写入 w 中，当 w 实现了 WriteString 方法时，会直接调用该方法，否则执行 w.Write([]byte(s)) 。 MultiReader 和 MultiWriter 函数 1 2 func MultiReader (readers ...Reader) Reader func MultiWriter (writers ...Writer) Writer 它们接收多个 Reader 或 Writer ，返回一个 Reader 或 Writer 。我们可以猜想到这两个函数就是操作多个 Reader 或 Writer 就像 操作一个。 事实上，在 io 包中定义了两个非导出类型： mutilReader 和 multiWriter ，它们分别实现了 io.Reader 和 io.Writer 接口： 1 2 3 4 5 6 7 type multiReader struct  \treaders []Reader  type multiWriter struct  \twriters []Writer  对于这两种类型对应的实现方法（ Read 和 Write 方法）的使用，示例： MultiReader 的使用 ： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 readers := []io.Reader \tstrings.NewReader( \"from strings reader\" ), \tbytes.NewBufferString( \"from bytes buffer\" ),  reader := io.MultiReader(readers...) data := make ([] byte , 0 , 128 ) buf := make ([] byte , 10 ) \t for n, err := reader.Read(buf); err != io.EOF ; n, err = reader.Read(buf) \t if err != nil  \t\t panic (err) \t \tdata = append (data,buf[:n]...)  fmt.Printf( \"%s\\n\" , data) // from strings readerfrom bytes buffer 代码中首先构造了一个 io.Reader 的 slice ，然后通过 MultiReader 得到新的 Reader ，循环读取新 Reader 中的内容。从输出结果 可以看到，第一次调用 Reader 的 Read 方法获取到的是 slice 中第一个元素的内容……也就是说， MultiReader 只是逻辑上将多 个 Reader 组合起来，并不能通过调用一次 Read 方法获取所有 Reader 的内容。在所有的 Reader 内容都被读 完后， Reader 会返回 EOF 。 MultiWriter 的使用 ： 1 2 3 4 5 6 7 8 9 10 11 file, err := os.Create( \"tmp.txt\" ) if err != nil  panic (err)  defer file.Close() writers := []io.Writer \tfile, \tos.Stdout,  writer := io.MultiWriter(writers...) writer.Write([] byte ( \"Go语言中文网\" )) 这段程序执行后在生成 tmp.txt 文件，同时在文件和屏幕中都输出： Go语言中文网 。这和 Unix 中的 tee 命令类似。 TeeReader 函数 1 func TeeReader (r Reader, w Writer) Reader TeeReader 返回一个 Reader ，它将从 r 中读到的数据写入 w 中。所有经由它处理的从 r 的读取都匹配于对应的对 w 的写入。它没 有内部缓存，即写入必须在读取完成前完成。任何在写入时遇到的错误都将作为读取错误返回。 也就是说，我们通过 Reader 读取内容后，会自动写入到 Writer 中去。例子代码如下： 1 2 reader := io.TeeReader(strings.NewReader( \"Go语言中文网\" ), os.Stdout) reader.Read( make ([] byte , 20 )) // Go语言中文网 这种功能的实现其实挺简单，无非是在 Read 完后执行 Write 。"},"standards/io/io.html#io":{"title":"io","path":"\\golang-learn\\standards\\io\\io.html#io","body":"io &#x662F;&#x5BF9;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x8BBE;&#x5907;&#x7684;&#x62BD;&#x8C61;&#x3002; io &#x5E93;&#x5BF9;&#x8FD9;&#x4E9B;&#x529F;&#x80FD;&#x8FDB;&#x884C;&#x4E86;&#x62BD;&#x8C61;&#xFF0C;&#x901A;&#x8FC7;&#x7EDF;&#x4E00;&#x7684;&#x63A5;&#x53E3;&#x5BF9;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x8BBE;&#x5907;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x3002; &#x6700;&#x91CD;&#x8981;&#x7684;&#x662F;&#x4E24;&#x4E2A;&#x63A5;&#x53E3;&#xFF1A; Reader &#x548C; Writer &#x3002;"},"standards/io/io.html#Reader":{"title":"Reader","path":"\\golang-learn\\standards\\io\\io.html#Reader","body":"Reader &#x63A5;&#x53E3;&#xFF1A; 1 2 3 type Reader interface { Read(p [] byte ) (n int , err error) } Read &#x5C06; len(p) &#x4E2A;&#x5B57;&#x8282;&#x8BFB;&#x53D6;&#x5230; p &#x4E2D;&#x3002;&#x5B83;&#x8FD4;&#x56DE;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x6570; n &#xFF08; 0 = n = len(p) &#xFF09; &#x4EE5;&#x53CA;&#x4EFB;&#x4F55;&#x9047;&#x5230;&#x7684;&#x9519;&#x8BEF;&#x3002; &#x5373;&#x4F7F; Read &#x8FD4;&#x56DE;&#x7684; n  len(p) &#xFF0C;&#x5B83;&#x4E5F;&#x4F1A;&#x5728;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x4E2D;&#x5360;&#x7528; len(p) &#x4E2A;&#x5B57;&#x8282;&#x4F5C;&#x4E3A;&#x6682;&#x5B58;&#x7A7A;&#x95F4;&#x3002;&#x82E5;&#x53EF;&#x8BFB;&#x53D6;&#x7684;&#x6570;&#x636E;&#x4E0D;&#x5230; len(p) &#x4E2A; &#x5B57;&#x8282;&#xFF0C; Read &#x4F1A;&#x8FD4;&#x56DE;&#x53EF;&#x7528;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x7B49;&#x5F85;&#x66F4;&#x591A;&#x6570;&#x636E;&#x3002; &#x5F53; Read &#x5728;&#x6210;&#x529F;&#x8BFB;&#x53D6; n  0 &#x4E2A;&#x5B57;&#x8282;&#x540E;&#x9047;&#x5230;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x6216; EOF ( end-of-file )&#xFF0C;&#x5B83;&#x4F1A;&#x8FD4;&#x56DE;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002;&#x5B83;&#x53EF;&#x80FD;&#x4F1A;&#x540C;&#x65F6;&#x5728;&#x672C;&#x6B21;&#x7684;&#x8C03; &#x7528;&#x4E2D;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; non-nil &#x9519;&#x8BEF;,&#x6216;&#x5728;&#x4E0B;&#x4E00;&#x6B21;&#x7684;&#x8C03;&#x7528;&#x4E2D;&#x8FD4;&#x56DE;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#xFF08;&#x4E14; n &#x4E3A; 0&#xFF09;&#x3002; &#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;, Reader &#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; &#x975E; 0 &#x5B57;&#x8282;&#x6570; n , &#x82E5; n = len(p) &#x4E2A;&#x5B57;&#x8282;&#x4ECE;&#x8F93;&#x5165;&#x6E90;&#x7684;&#x7ED3;&#x5C3E;&#x5904;&#x7531; Read &#x8FD4;&#x56DE;&#xFF0C; Read &#x53EF;&#x80FD;&#x8FD4;&#x56DE; err == EOF &#x6216;&#x8005; err == nil &#x3002;&#x5E76;&#x4E14;&#x4E4B;&#x540E;&#x7684; Read &#x90FD;&#x5E94;&#x8BE5;&#x8FD4;&#x56DE; ( n:0, err:EOF )&#x3002; &#x8C03;&#x7528;&#x8005;&#x5728;&#x8003;&#x8651;&#x9519;&#x8BEF;&#x4E4B;&#x524D;&#x5E94;&#x5F53;&#x9996;&#x5148;&#x5904;&#x7406;&#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;&#x3002;&#x8FD9;&#x6837;&#x505A;&#x53EF;&#x4EE5;&#x6B63;&#x786E;&#x5730;&#x5904;&#x7406;&#x5728;&#x8BFB;&#x53D6;&#x4E00;&#x4E9B;&#x5B57;&#x8282;&#x540E;&#x4EA7;&#x751F;&#x7684; I/O &#x9519;&#x8BEF;&#xFF0C;&#x540C;&#x65F6;&#x5141;&#x8BB8; EOF &#x7684;&#x51FA;&#x73B0;&#x3002; 1 2 3 4 5 6 7 8 func ReadFrom (reader io.Reader, num int ) ([] byte , error) { \tp := make ([] byte , num) \tn, err := reader.Read(p) \t if n  0 { \t\t return p[:n], nil \t} \t return p, err } ReadFrom &#x51FD;&#x6570;&#x5C06; io.Reader &#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C; ReadFrom &#x53EF;&#x4EE5;&#x4ECE;&#x4EFB;&#x610F;&#x7684;&#x5730;&#x65B9;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x53EA;&#x8981;&#x6765;&#x6E90;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x63A5;&#x53E3;&#x3002; &#x6BD4;&#x5982;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4ECE;&#x6807;&#x51C6;&#x8F93;&#x5165;&#x3001;&#x6587;&#x4EF6;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x7B49;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 // &#x4ECE;&#x6807;&#x51C6;&#x8F93;&#x5165;&#x8BFB;&#x53D6; data, err = ReadFrom(os.Stdin, 11 ) // &#x4ECE;&#x666E;&#x901A;&#x6587;&#x4EF6;&#x8BFB;&#x53D6;&#xFF0C;&#x5176;&#x4E2D; file &#x662F; os.File &#x7684;&#x5B9E;&#x4F8B; data, err = ReadFrom(file, 9 ) // &#x4ECE;&#x5B57;&#x7B26;&#x4E32;&#x8BFB;&#x53D6; data, err = ReadFrom(strings.NewReader( from string ), 12 ) io.EOF &#x53D8;&#x91CF;&#x7684;&#x5B9A;&#x4E49;&#xFF1A; var EOF = errors.New(EOF) &#xFF0C;&#x662F; error &#x7C7B;&#x578B;&#x3002;&#x6839;&#x636E; reader &#x63A5;&#x53E3;&#x7684;&#x8BF4;&#x660E;&#xFF0C;&#x5728; n  0 &#x4E14;&#x6570;&#x636E;&#x88AB;&#x8BFB;&#x5B8C;&#x4E86; &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5F53;&#x6B21;&#x8FD4;&#x56DE;&#x7684; error &#x6709;&#x53EF;&#x80FD;&#x662F; EOF &#x4E5F;&#x6709;&#x53EF;&#x80FD;&#x662F; nil &#x3002;"},"standards/io/io.html#Writer":{"title":"Writer","path":"\\golang-learn\\standards\\io\\io.html#Writer","body":"Writer &#x63A5;&#x53E3;&#xFF1A; 1 2 3 type Writer interface { Write(p [] byte ) (n int , err error) } Write &#x5C06; len(p) &#x4E2A;&#x5B57;&#x8282;&#x4ECE; p &#x4E2D;&#x5199;&#x5165;&#x5230;&#x57FA;&#x672C;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x3002;&#x5B83;&#x8FD4;&#x56DE;&#x4ECE; p &#x4E2D;&#x88AB;&#x5199;&#x5165;&#x7684;&#x5B57;&#x8282;&#x6570; n &#xFF08; 0 = n = len(p) &#xFF09;&#x4EE5;&#x53CA;&#x4EFB;&#x4F55;&#x9047;&#x5230;&#x7684;&#x5F15; &#x8D77;&#x5199;&#x5165;&#x63D0;&#x524D;&#x505C;&#x6B62;&#x7684;&#x9519;&#x8BEF;&#x3002;&#x82E5; Write &#x8FD4;&#x56DE;&#x7684; n  len(p) &#xFF0C;&#x5B83;&#x5C31;&#x5FC5;&#x987B;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; &#x975E; nil &#x7684;&#x9519;&#x8BEF;&#x3002; &#x4EE5; fmt.Fprintln &#x4E3A;&#x4F8B;&#xFF1A; 1 2 3 func Println (a ... interface {}) (n int , err error) { \t return Fprintln(os.Stdout, a...) } &#x53EF;&#x4EE5;&#x770B;&#x51FA; fmt.Println &#x4F1A;&#x5C06;&#x5185;&#x5BB9;&#x8F93;&#x51FA;&#x5230;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#x4E2D;&#x3002;"},"standards/io/io.html#实现了-io-Reader-接口或-io-Writer-接口的类型":{"title":"&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x63A5;&#x53E3;&#x6216; io.Writer &#x63A5;&#x53E3;&#x7684;&#x7C7B;&#x578B;","path":"\\golang-learn\\standards\\io\\io.html#实现了-io-Reader-接口或-io-Writer-接口的类型","body":"&#x6807;&#x51C6;&#x5E93;&#x4E2D;&#x6709;&#x54EA;&#x4E9B;&#x7C7B;&#x578B;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x6216; io.Writer &#x63A5;&#x53E3;&#xFF1F; &#x4F8B;&#x5982; os.Stdin/Stdout &#xFF0C;&#x5B83;&#x4EEC;&#x5206;&#x522B;&#x5B9E;&#x73B0;&#x4E86; io.Reader/io.Writer &#x63A5;&#x53E3;&#xFF1A; 1 2 3 4 5 var ( Stdin = NewFile( uintptr (syscall.Stdin), /dev/stdin ) Stdout = NewFile( uintptr (syscall.Stdout), /dev/stdout ) Stderr = NewFile( uintptr (syscall.Stderr), /dev/stderr ) ) &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C; Stdin/Stdout/Stderr &#x53EA;&#x662F;&#x4E09;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x7684;&#x6807;&#x8BC6;&#xFF08;&#x90FD;&#x662F; os.File &#x7684;&#x5B9E;&#x4F8B;&#xFF09;&#xFF0C; os.File &#x5B9E;&#x73B0; &#x4E86; io.Reader &#x548C; io.Writer &#x3002; &#x5B9E;&#x73B0;&#x4E86; io.Reader &#x6216; io.Writer &#x63A5;&#x53E3;&#x7684;&#x7C7B;&#x578B;&#xFF1A; os.File &#x540C;&#x65F6;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x548C; io.Writer strings.Reader &#x5B9E;&#x73B0;&#x4E86; io.Reader bufio.Reader/Writer &#x5206;&#x522B;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x548C; io.Writer bytes.Buffer &#x540C;&#x65F6;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x548C; io.Writer bytes.Reader &#x5B9E;&#x73B0;&#x4E86; io.Reader compress/gzip.Reader/Writer &#x5206;&#x522B;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x548C; io.Writer crypto/cipher.StreamReader/StreamWriter &#x5206;&#x522B;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x548C; io.Writer crypto/tls.Conn &#x540C;&#x65F6;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x548C; io.Writer encoding/csv.Reader/Writer &#x5206;&#x522B;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x548C; io.Writer mime/multipart.Part &#x5B9E;&#x73B0;&#x4E86; io.Reader net/conn &#x5206;&#x522B;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x548C; io.Writer (Conn&#x63A5;&#x53E3;&#x5B9A;&#x4E49;&#x4E86;Read/Write) io &#x5305;&#x672C;&#x8EAB;&#x5B9E;&#x73B0;&#x8FD9;&#x4E24;&#x4E2A;&#x63A5;&#x53E3;&#x7684;&#x7C7B;&#x578B; &#xFF1A; &#x5B9E;&#x73B0;&#x4E86; Reader &#x7684;&#x7C7B;&#x578B;&#xFF1A; LimitedReader &#x3001; PipeReader &#x3001; SectionReader &#x5B9E;&#x73B0;&#x4E86; Writer &#x7684;&#x7C7B;&#x578B;&#xFF1A; PipeWriter"},"standards/io/io.html#ReaderAt-和-WriterAt":{"title":"ReaderAt &#x548C; WriterAt","path":"\\golang-learn\\standards\\io\\io.html#ReaderAt-和-WriterAt","body":"ReaderAt &#x63A5;&#x53E3; &#xFF1A; 1 2 3 type ReaderAt interface { ReadAt(p [] byte , off int64 ) (n int , err error) } ReadAt &#x4ECE;&#x57FA;&#x672C;&#x8F93;&#x5165;&#x6E90;&#x7684;&#x504F;&#x79FB;&#x91CF; off &#x5904;&#x5F00;&#x59CB;&#xFF0C;&#x5C06; len(p) &#x4E2A;&#x5B57;&#x8282;&#x8BFB;&#x5230; p &#x4E2D;&#x3002;&#x5B83;&#x8FD4;&#x56DE;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x6570; n &#xFF08; 0 = n = len(p) &#xFF09;&#x4EE5;&#x53CA;&#x4EFB; &#x4F55;&#x9047;&#x5230;&#x7684;&#x9519;&#x8BEF;&#x3002; &#x5F53; ReadAt &#x8FD4;&#x56DE;&#x7684; n  len(p) &#x65F6;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; &#x975E; nil &#x7684;&#x9519;&#x8BEF;&#x6765;&#x89E3;&#x91CA;&#x4E3A;&#x4EC0;&#x4E48;&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x66F4;&#x591A;&#x7684;&#x5B57;&#x8282;&#x3002; &#x5373;&#x4F7F; ReadAt &#x8FD4;&#x56DE;&#x7684; n  len(p) &#xFF0C;&#x5B83;&#x4E5F;&#x4F1A;&#x5728;&#x8C03;&#x7528;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F7F;&#x7528; p &#x7684;&#x5168;&#x90E8;&#x4F5C;&#x4E3A;&#x6682;&#x5B58;&#x7A7A;&#x95F4;&#x3002;&#x82E5;&#x53EF;&#x8BFB;&#x53D6;&#x7684;&#x6570;&#x636E;&#x4E0D;&#x5230; len(p) &#x5B57;&#x8282;&#xFF0C; ReadAt &#x5C31;&#x4F1A; &#x963B;&#x585E;,&#x76F4;&#x5230;&#x6240;&#x6709;&#x6570;&#x636E;&#x90FD;&#x53EF;&#x7528;&#x6216;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x53D1;&#x751F;&#x3002; &#x82E5; n = len(p) &#x4E2A;&#x5B57;&#x8282;&#x4ECE;&#x8F93;&#x5165;&#x6E90;&#x7684;&#x7ED3;&#x5C3E;&#x5904;&#x7531; ReadAt &#x8FD4;&#x56DE;&#xFF0C; Read &#x53EF;&#x80FD;&#x8FD4;&#x56DE; err == EOF &#x6216;&#x8005; err == nil &#x82E5; ReadAt &#x643A;&#x5E26;&#x4E00;&#x4E2A;&#x504F;&#x79FB;&#x91CF;&#x4ECE;&#x8F93;&#x5165;&#x6E90;&#x8BFB;&#x53D6;&#xFF0C; ReadAt &#x5E94;&#x5F53;&#x65E2;&#x4E0D;&#x5F71;&#x54CD;&#x504F;&#x79FB;&#x91CF;&#x4E5F;&#x4E0D;&#x88AB;&#x5B83;&#x6240;&#x5F71;&#x54CD;&#x3002; &#x53EF;&#x5BF9;&#x76F8;&#x540C;&#x7684;&#x8F93;&#x5165;&#x6E90;&#x5E76;&#x884C;&#x6267;&#x884C; ReadAt &#x8C03;&#x7528;&#x3002; &#x53EF;&#x89C1;&#xFF0C; ReadAt &#x63A5;&#x53E3;&#x4F7F;&#x5F97;&#x53EF;&#x4EE5;&#x4ECE;&#x6307;&#x5B9A;&#x504F;&#x79FB;&#x91CF;&#x5904;&#x5F00;&#x59CB;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x3002; &#x7B80;&#x5355;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 reader := strings.NewReader( Hello world ) p := make ([] byte , 6 ) n, err := reader.ReadAt(p, 2 ) if err != nil { panic (err) } fmt.Printf( %s, %d\\n , p, n) // llo wo, 6 WriterAt &#x63A5;&#x53E3; &#xFF1A; 1 2 3 type WriterAt interface { WriteAt(p [] byte , off int64 ) (n int , err error) } WriteAt &#x4ECE; p &#x4E2D;&#x5C06; len(p) &#x4E2A;&#x5B57;&#x8282;&#x5199;&#x5165;&#x5230;&#x504F;&#x79FB;&#x91CF; off &#x5904;&#x7684;&#x57FA;&#x672C;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x3002;&#x5B83;&#x8FD4;&#x56DE;&#x4ECE; p &#x4E2D;&#x88AB;&#x5199;&#x5165;&#x7684;&#x5B57;&#x8282;&#x6570; n &#xFF08; 0 = n = len(p) &#xFF09; &#x4EE5;&#x53CA;&#x4EFB;&#x4F55;&#x9047;&#x5230;&#x7684;&#x5F15;&#x8D77;&#x5199;&#x5165;&#x63D0;&#x524D;&#x505C;&#x6B62;&#x7684;&#x9519;&#x8BEF;&#x3002;&#x82E5; WriteAt &#x8FD4;&#x56DE;&#x7684; n  len(p) &#xFF0C;&#x5B83;&#x5C31;&#x5FC5;&#x987B;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; &#x975E; nil &#x7684;&#x9519;&#x8BEF;&#x3002; &#x82E5; WriteAt &#x643A;&#x5E26;&#x4E00;&#x4E2A;&#x504F;&#x79FB;&#x91CF;&#x5199;&#x5165;&#x5230;&#x76EE;&#x6807;&#x4E2D;&#xFF0C; WriteAt &#x5E94;&#x5F53;&#x65E2;&#x4E0D;&#x5F71;&#x54CD;&#x504F;&#x79FB;&#x91CF;&#x4E5F;&#x4E0D;&#x88AB;&#x5B83;&#x6240;&#x5F71;&#x54CD;&#x3002; &#x82E5;&#x88AB;&#x5199;&#x533A;&#x57DF;&#x6CA1;&#x6709;&#x91CD;&#x53E0;&#xFF0C;&#x53EF;&#x5BF9;&#x76F8;&#x540C;&#x7684;&#x76EE;&#x6807;&#x5E76;&#x884C;&#x6267;&#x884C; WriteAt &#x8C03;&#x7528;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8BE5;&#x63A5;&#x53E3;&#x5C06;&#x6570;&#x636E;&#x5199;&#x5165;&#x5230;&#x6570;&#x636E;&#x6D41;&#x7684;&#x7279;&#x5B9A;&#x504F;&#x79FB;&#x91CF;&#x4E4B;&#x540E;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 file, err := os.Create( writeAt.txt ) if err != nil { panic (err) } defer file.Close() _, _ = file.WriteString( Hello world----ignore ) n, err := file.WriteAt([] byte ( Golang ), 15 ) if err != nil { panic (err) } fmt.Println(n) &#x6253;&#x5F00;&#x6587;&#x4EF6; WriteAt.txt &#xFF0C;&#x5185;&#x5BB9;&#x662F;&#xFF1A; Hello world----Golang &#x3002; &#x5206;&#x6790;&#xFF1A; file.WriteString(Hello world----ignore) &#x5F80;&#x6587;&#x4EF6;&#x4E2D;&#x5199;&#x5165; Hello world----ignore &#xFF0C;&#x4E4B;&#x540E; file.WriteAt([]byte(Golang), 15) &#x5728;&#x6587;&#x4EF6;&#x6D41;&#x7684; offset=15 &#x5904;&#x5199;&#x5165; Golang &#xFF08;&#x4F1A;&#x8986;&#x76D6;&#x8BE5;&#x4F4D;&#x7F6E;&#x7684;&#x5185;&#x5BB9;&#xFF09;&#x3002;"},"standards/io/io.html#ReaderFrom-和-WriterTo":{"title":"ReaderFrom &#x548C; WriterTo","path":"\\golang-learn\\standards\\io\\io.html#ReaderFrom-和-WriterTo","body":"&#x8FD9;&#x4E24;&#x4E2A;&#x63A5;&#x53E3;&#x5B9E;&#x73B0;&#x4E86; &#x4E00;&#x6B21;&#x6027;&#x4ECE;&#x67D0;&#x4E2A;&#x5730;&#x65B9;&#x8BFB;&#x6216;&#x5199;&#x5230;&#x67D0;&#x4E2A;&#x5730;&#x65B9;&#x53BB; &#x3002; ReaderFrom &#xFF1A; 1 2 3 type ReaderFrom interface { ReadFrom(r Reader) (n int64 , err error) } ReadFrom &#x4ECE; r &#x4E2D;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#xFF0C;&#x76F4;&#x5230; EOF &#x6216;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#x3002;&#x5176;&#x8FD4;&#x56DE;&#x503C; n &#x4E3A;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002;&#x9664; io.EOF &#x4E4B;&#x5916;&#xFF0C;&#x5728;&#x8BFB;&#x53D6;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x4EFB;&#x4F55;&#x9519;&#x8BEF;&#x4E5F; &#x5C06;&#x88AB;&#x8FD4;&#x56DE;&#x3002; &#x5982;&#x679C; ReaderFrom &#x53EF;&#x7528;&#xFF0C; Copy &#x51FD;&#x6570;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x5B83;&#x3002; &#x6CE8;&#x610F;&#xFF1A; ReadFrom &#x65B9;&#x6CD5;&#x4E0D;&#x4F1A;&#x8FD4;&#x56DE; err == EOF &#x3002; &#x5C06;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x5168;&#x90E8;&#x8BFB;&#x53D6;&#xFF08;&#x663E;&#x793A;&#x5728;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#xFF09;&#xFF1A; 1 2 3 4 5 6 7 8 file, err := os.Open( writeAt.txt ) if err != nil { panic (err) } defer file.Close() writer := bufio.NewWriter(os.Stdout) writer.ReadFrom(file) writer.Flush() &#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; ioutil &#x5305;&#x7684; ReadFile &#x51FD;&#x6570;&#x83B7;&#x53D6;&#x6587;&#x4EF6;&#x5168;&#x90E8;&#x5185;&#x5BB9;&#x3002;&#x5176;&#x5B9E;&#xFF0C;&#x8DDF;&#x8E2A;&#x4E00;&#x4E0B; ioutil.ReadFile &#x7684;&#x6E90;&#x7801;&#xFF0C;&#x4F1A;&#x53D1;&#x73B0;&#x5176;&#x5B9E;&#x4E5F;&#x662F;&#x901A;&#x8FC7; ReadFrom &#x65B9; &#x6CD5;&#x5B9E;&#x73B0;&#xFF08;&#x7528;&#x7684;&#x662F; bytes.Buffer &#xFF0C;&#x5B83;&#x5B9E;&#x73B0;&#x4E86; ReaderFrom &#x63A5;&#x53E3;&#xFF09;&#x3002; WriterTo &#xFF1A; 1 2 3 type WriterTo interface { WriteTo(w Writer) (n int64 , err error) } WriteTo &#x5C06;&#x6570;&#x636E;&#x5199;&#x5165; w &#x4E2D;&#xFF0C;&#x76F4;&#x5230;&#x6CA1;&#x6709;&#x6570;&#x636E;&#x53EF;&#x5199;&#x6216;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#x3002;&#x5176;&#x8FD4;&#x56DE;&#x503C; n &#x4E3A;&#x5199;&#x5165;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002; &#x5728;&#x5199;&#x5165;&#x8FC7;&#x7A0B;&#x4E2D;&#x9047;&#x5230;&#x7684;&#x4EFB;&#x4F55;&#x9519;&#x8BEF;&#x4E5F;&#x5C06;&#x88AB;&#x8FD4;&#x56DE;&#x3002; &#x5982;&#x679C; WriterTo &#x53EF;&#x7528;&#xFF0C; Copy &#x51FD;&#x6570;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x5B83;&#x3002; &#x5C06;&#x4E00;&#x6BB5;&#x6587;&#x672C;&#x8F93;&#x51FA;&#x5230;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#xFF1A; 1 2 reader := bytes.NewReader([] byte ( Hello world )) reader.WriteTo(os.Stdout)"},"standards/io/io.html#Seeker":{"title":"Seeker","path":"\\golang-learn\\standards\\io\\io.html#Seeker","body":"1 2 3 type Seeker interface { Seek(offset int64 , whence int ) (ret int64 , err error) } Seek &#x8BBE;&#x7F6E;&#x4E0B;&#x4E00;&#x6B21; Read &#x6216; Write &#x7684;&#x504F;&#x79FB;&#x91CF;&#x4E3A; offset &#xFF0C;&#x5B83;&#x7684;&#x89E3;&#x91CA;&#x53D6;&#x51B3;&#x4E8E; whence &#xFF1A; 0 &#x8868;&#x793A;&#x76F8;&#x5BF9;&#x4E8E;&#x6587;&#x4EF6;&#x7684;&#x8D77;&#x59CB;&#x5904;&#xFF0C;1 &#x8868;&#x793A;&#x76F8;&#x5BF9; &#x4E8E;&#x5F53;&#x524D;&#x7684;&#x504F;&#x79FB;&#xFF0C;&#x800C; 2 &#x8868;&#x793A;&#x76F8;&#x5BF9;&#x4E8E;&#x5176;&#x7ED3;&#x5C3E;&#x5904; &#x3002; Seek &#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x504F;&#x79FB;&#x91CF;&#x548C;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x7684;&#x8BDD;&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C; Seek &#x65B9;&#x6CD5;&#x662F;&#x7528;&#x4E8E;&#x8BBE;&#x7F6E;&#x504F;&#x79FB;&#x91CF;&#x7684;&#xFF0C;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x4ECE;&#x67D0;&#x4E2A;&#x7279;&#x5B9A;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;&#x64CD;&#x4F5C;&#x6570;&#x636E;&#x6D41;&#x3002;&#x542C;&#x8D77;&#x6765;&#x548C; ReaderAt/WriteAt &#x63A5;&#x53E3;&#x6709;&#x4E9B;&#x7C7B;&#x4F3C;&#xFF0C; &#x4E0D;&#x8FC7; Seeker &#x63A5;&#x53E3;&#x66F4;&#x7075;&#x6D3B;&#xFF0C;&#x53EF;&#x4EE5;&#x66F4;&#x597D;&#x7684;&#x63A7;&#x5236;&#x8BFB;&#x5199;&#x6570;&#x636E;&#x6D41;&#x7684;&#x4F4D;&#x7F6E;&#x3002; &#x83B7;&#x53D6;&#x5012;&#x6570;&#x7B2C;&#x4E8C;&#x4E2A;&#x5B57;&#x7B26;&#xFF08;&#x9700;&#x8981;&#x8003;&#x8651; UTF-8 &#x7F16;&#x7801;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x4EE3;&#x7801;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x793A;&#x4F8B;&#xFF09;&#xFF1A; 1 2 3 4 reader := strings.NewReader( Hello world ) reader.Seek( -6 , io.SeekEnd) r, _, _ := reader.ReadRune() fmt.Printf( %c\\n , r) whence &#x7684;&#x503C;&#xFF0C;&#x5728; io &#x5305;&#x4E2D;&#x5B9A;&#x4E49;&#x4E86;&#x76F8;&#x5E94;&#x7684;&#x5E38;&#x91CF;&#xFF0C;&#x5E94;&#x8BE5;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x5E38;&#x91CF; 1 2 3 4 5 const ( SeekStart = 0 // seek relative to the origin of the file SeekCurrent = 1 // seek relative to the current offset SeekEnd = 2 // seek relative to the end ) &#x800C;&#x539F;&#x5148; os &#x5305;&#x4E2D;&#x7684;&#x5E38;&#x91CF;&#x5DF2;&#x7ECF;&#x88AB;&#x6807;&#x6CE8;&#x4E3A; Deprecated 1 2 3 4 5 6 // Deprecated: Use io.SeekStart, io.SeekCurrent, and io.SeekEnd. const ( SEEK_SET int = 0 // seek relative to the origin of the file SEEK_CUR int = 1 // seek relative to the current offset SEEK_END int = 2 // seek relative to the end )"},"standards/io/io.html#Closer":{"title":"Closer","path":"\\golang-learn\\standards\\io\\io.html#Closer","body":"1 2 3 type Closer interface { Close() error } &#x8BE5;&#x63A5;&#x53E3;&#x6BD4;&#x8F83;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x4E2A; Close() &#x65B9;&#x6CD5;&#xFF0C;&#x7528;&#x4E8E;&#x5173;&#x95ED;&#x6570;&#x636E;&#x6D41;&#x3002; &#x6587;&#x4EF6; ( os.File )&#x3001;&#x5F52;&#x6863;&#xFF08;&#x538B;&#x7F29;&#x5305;&#xFF09;&#x3001;&#x6570;&#x636E;&#x5E93;&#x8FDE;&#x63A5;&#x3001; Socket &#x7B49;&#x9700;&#x8981;&#x624B;&#x52A8;&#x5173;&#x95ED;&#x7684;&#x8D44;&#x6E90;&#x90FD;&#x5B9E;&#x73B0;&#x4E86; Closer &#x63A5;&#x53E3;&#x3002; &#x5B9E;&#x9645;&#x7F16;&#x7A0B;&#x4E2D;&#xFF0C;&#x7ECF;&#x5E38;&#x5C06; Close &#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x653E;&#x5728; defer &#x8BED;&#x53E5;&#x4E2D;&#x3002; 1 2 3 4 5 file, err := os.Open( studygolang.txt ) defer file.Close() if err != nil { \t... } &#x5F53;&#x6587;&#x4EF6; studygolang.txt &#x4E0D;&#x5B58;&#x5728;&#x6216;&#x627E;&#x4E0D;&#x5230;&#x65F6;&#xFF0C; file.Close() &#x4F1A;&#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#xFF0C;&#x56E0;&#x4E3A; file &#x662F; nil &#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5E94;&#x8BE5; &#x5C06; defer file.Close() &#x653E;&#x5728;&#x9519;&#x8BEF;&#x68C0;&#x67E5;&#x4E4B;&#x540E; &#x3002; 1 2 3 4 5 6 func (f *File) Close () error { \t if f == nil { \t\t return ErrInvalid \t} \t return f.file. close () }"},"standards/io/io.html#其他接口":{"title":"&#x5176;&#x4ED6;&#x63A5;&#x53E3;","path":"\\golang-learn\\standards\\io\\io.html#其他接口","body":"ByteReader &#x548C; ByteWriter &#x8BFB;&#x6216;&#x5199;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#xFF1A; 1 2 3 4 5 6 7 type ByteReader interface { ReadByte() (c byte , err error) } type ByteWriter interface { WriteByte(c byte ) error } &#x4E0B;&#x9762;&#x7C7B;&#x578B;&#x90FD;&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x4E24;&#x4E2A;&#x63A5;&#x53E3;: bufio.Reader/Writer &#x5206;&#x522B;&#x5B9E;&#x73B0;&#x4E86; io.ByteReader &#x548C; io.ByteWriter bytes.Buffer &#x540C;&#x65F6;&#x5B9E;&#x73B0;&#x4E86; io.ByteReader &#x548C; io.ByteWriter bytes.Reader &#x5B9E;&#x73B0;&#x4E86; io.ByteReader strings.Reader &#x5B9E;&#x73B0;&#x4E86; io.ByteReader &#x901A;&#x8FC7; bytes.Buffer &#x6765;&#x4E00;&#x6B21;&#x8BFB;&#x53D6;&#x6216;&#x5199;&#x5165;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 var ch byte fmt.Scanf( %c\\n , &amp;ch) buffer := new (bytes.Buffer) err := buffer.WriteByte(ch) if err == nil { \tfmt.Println( &#x5199;&#x5165;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x6210;&#x529F;&#xFF01;&#x51C6;&#x5907;&#x8BFB;&#x53D6;&#x8BE5;&#x5B57;&#x8282;&#x2026;&#x2026; ) \tnewCh, _ := buffer.ReadByte() \tfmt.Printf( &#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#xFF1A;%c\\n , newCh) } else { \tfmt.Println( &#x5199;&#x5165;&#x9519;&#x8BEF; ) } &#x7A0B;&#x5E8F;&#x4ECE;&#x6807;&#x51C6;&#x8F93;&#x5165;&#x63A5;&#x6536;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#xFF08;ASCII &#x5B57;&#x7B26;&#xFF09;&#xFF0C;&#x8C03;&#x7528; buffer &#x7684; WriteByte &#x5C06;&#x8BE5;&#x5B57;&#x8282;&#x5199;&#x5165; buffer &#x4E2D;&#xFF0C;&#x4E4B;&#x540E;&#x901A;&#x8FC7; ReadByte &#x8BFB;&#x53D6;&#x8BE5;&#x5B57;&#x8282;&#x3002; ByteScanner&#x3001;RuneReader &#x548C; RuneScanner ByteScanner &#x63A5;&#x53E3;&#xFF1A; 1 2 3 4 type ByteScanner interface { ByteReader UnreadByte() error } &#x5185;&#x5D4C;&#x4E86; ByteReader &#x63A5;&#x53E3;&#xFF0C; UnreadByte &#x65B9;&#x6CD5;&#x7684;&#x610F;&#x601D;&#x662F;&#xFF1A;&#x5C06;&#x4E0A;&#x4E00;&#x6B21; ReadByte &#x7684;&#x5B57;&#x8282;&#x8FD8;&#x539F;&#xFF0C;&#x4F7F;&#x5F97;&#x518D;&#x6B21;&#x8C03;&#x7528; ReadByte &#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x548C;&#x4E0A;&#x4E00;&#x6B21;&#x8C03; &#x7528;&#x76F8;&#x540C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C; UnreadByte &#x662F;&#x91CD;&#x7F6E;&#x4E0A;&#x4E00;&#x6B21;&#x7684; ReadByte &#x3002;&#x6CE8;&#x610F;&#xFF0C; UnreadByte &#x8C03;&#x7528;&#x4E4B;&#x524D;&#x5FC5;&#x987B;&#x8C03;&#x7528;&#x4E86; ReadByte &#xFF0C;&#x4E14;&#x4E0D;&#x80FD;&#x8FDE;&#x7EED;&#x8C03; &#x7528; UnreadByte &#x3002;&#x5373;&#xFF1A; 1 2 buffer := bytes.NewBuffer([] byte { &apos;a&apos; , &apos;b&apos; }) err := buffer.UnreadByte() &#x548C; 1 2 3 4 buffer := bytes.NewBuffer([] byte { &apos;a&apos; , &apos;b&apos; }) buffer.ReadByte() err := buffer.UnreadByte() err = buffer.UnreadByte() err &#x90FD; &#x975E; nil &#xFF0C;&#x9519;&#x8BEF;&#x4E3A;&#xFF1A; bytes.Buffer: UnreadByte: previous operation was not a read RuneReader &#x63A5;&#x53E3;&#x548C; ByteReader &#x7C7B;&#x4F3C;&#xFF0C;&#x53EA;&#x662F; ReadRune &#x65B9;&#x6CD5;&#x8BFB;&#x53D6;&#x5355;&#x4E2A; UTF-8 &#x5B57;&#x7B26;&#xFF0C;&#x8FD4;&#x56DE;&#x5176; rune &#x548C;&#x8BE5;&#x5B57;&#x7B26;&#x5360;&#x7528;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002; RuneScanner &#x63A5;&#x53E3;&#x548C; ByteScanner &#x7C7B;&#x4F3C;&#x3002; ReadCloser&#x3001;ReadSeeker&#x3001;ReadWriteCloser&#x3001;ReadWriteSeeker&#x3001;ReadWriter&#x3001;WriteCloser &#x548C; WriteSeeker &#x8FD9;&#x4E9B;&#x63A5;&#x53E3;&#x662F;&#x4E0A;&#x9762;&#x4ECB;&#x7ECD;&#x7684;&#x63A5;&#x53E3;&#x7684;&#x4E24;&#x4E2A;&#x6216;&#x4E09;&#x4E2A;&#x7EC4;&#x5408;&#x800C;&#x6210;&#x7684;&#x65B0;&#x63A5;&#x53E3;&#x3002; ReadWriter &#x63A5;&#x53E3;&#xFF1A; 1 2 3 4 type ReadWriter interface { Reader Writer } Reader &#x548C; Writer &#x63A5;&#x53E3;&#x7684;&#x7EC4;&#x5408;&#x3002; &#x8FD9;&#x4E9B;&#x63A5;&#x53E3;&#x7684;&#x4F5C;&#x7528;&#x662F;&#xFF1A;&#x6709;&#x4E9B;&#x65F6;&#x5019;&#x540C;&#x65F6;&#x9700;&#x8981;&#x67D0;&#x4E24;&#x4E2A;&#x63A5;&#x53E3;&#x7684;&#x6240;&#x6709;&#x529F;&#x80FD;&#xFF0C;&#x5373;&#x5FC5;&#x987B;&#x540C;&#x65F6;&#x5B9E;&#x73B0;&#x4E86;&#x67D0;&#x4E24;&#x4E2A;&#x63A5;&#x53E3;&#x7684;&#x7C7B;&#x578B;&#x624D;&#x80FD;&#x591F;&#x88AB;&#x4F20;&#x5165;&#x4F7F;&#x7528;&#x3002;"},"standards/io/io.html#SectionReader-类型":{"title":"SectionReader &#x7C7B;&#x578B;","path":"\\golang-learn\\standards\\io\\io.html#SectionReader-类型","body":"SectionReader &#x662F;&#x4E00;&#x4E2A; struct &#xFF0C;&#x5B9E;&#x73B0;&#x4E86; Read , Seek &#x548C; ReadAt &#xFF0C;&#x540C;&#x65F6;&#xFF0C;&#x5185;&#x5D4C;&#x4E86; ReaderAt &#x63A5;&#x53E3;&#x3002;&#x7ED3;&#x6784;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 type SectionReader struct { \tr ReaderAt\t // &#x8BE5;&#x7C7B;&#x578B;&#x6700;&#x7EC8;&#x7684; Read/ReadAt &#x6700;&#x7EC8;&#x90FD;&#x662F;&#x901A;&#x8FC7; r &#x7684; ReadAt &#x5B9E;&#x73B0; \tbase int64 \t\t // NewSectionReader &#x4F1A;&#x5C06; base &#x8BBE;&#x7F6E;&#x4E3A; off \toff int64 \t\t // &#x4ECE; r &#x4E2D;&#x7684; off &#x504F;&#x79FB;&#x5904;&#x5F00;&#x59CB;&#x8BFB;&#x53D6;&#x6570;&#x636E; \tlimit int64 \t\t // limit - off = SectionReader &#x6D41;&#x7684;&#x957F;&#x5EA6; } &#x8BE5;&#x7C7B;&#x578B;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x6D41;&#x4E2D;&#x90E8;&#x5206;&#x6570;&#x636E;&#x3002; 1 func NewSectionReader (r ReaderAt, off int64 , n int64 ) * SectionReader NewSectionReader &#x8FD4;&#x56DE;&#x4E00;&#x4E2A; SectionReader &#xFF0C;&#x5B83;&#x4ECE; r &#x4E2D;&#x7684;&#x504F;&#x79FB;&#x91CF; off &#x5904;&#x8BFB;&#x53D6; n &#x4E2A;&#x5B57;&#x8282;&#x540E;&#x4EE5; EOF &#x505C;&#x6B62;&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;SectionReader &#x53EA;&#x662F;&#x5185;&#x90E8; ReaderAt &#x8868;&#x793A;&#x7684;&#x6570;&#x636E;&#x6D41;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF1A;&#x4ECE; off &#x5F00;&#x59CB;&#x540E;&#x7684; n &#x4E2A;&#x5B57;&#x8282;&#x3002; &#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x4F5C;&#x7528;&#x662F;&#xFF1A;&#x65B9;&#x4FBF;&#x91CD;&#x590D;&#x64CD;&#x4F5C;&#x67D0;&#x4E00;&#x6BB5; (section) &#x6570;&#x636E;&#x6D41;&#xFF1B;&#x6216;&#x8005;&#x540C;&#x65F6;&#x9700;&#x8981; ReadAt &#x548C; Seek &#x7684;&#x529F;&#x80FD;&#x3002; &#x7531;&#x4E8E;&#x8BE5;&#x7C7B;&#x578B;&#x6240;&#x652F;&#x6301;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x524D;&#x9762;&#x90FD;&#x6709;&#x4ECB;&#x7ECD;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x63D0;&#x4F9B;&#x793A;&#x4F8B;&#x4EE3;&#x7801;&#x4E86;&#x3002;"},"standards/io/io.html#LimitedReader-类型":{"title":"LimitedReader &#x7C7B;&#x578B;","path":"\\golang-learn\\standards\\io\\io.html#LimitedReader-类型","body":"1 2 3 4 type LimitedReader struct { R Reader // underlying reader&#xFF0C;&#x6700;&#x7EC8;&#x7684;&#x8BFB;&#x53D6;&#x64CD;&#x4F5C;&#x901A;&#x8FC7; R.Read &#x5B8C;&#x6210; N int64 // max bytes remaining } &#x4ECE; R &#x8BFB;&#x53D6;&#x4F46;&#x5C06;&#x8FD4;&#x56DE;&#x7684;&#x6570;&#x636E;&#x91CF;&#x9650;&#x5236;&#x4E3A; N &#x5B57;&#x8282;&#x3002;&#x6BCF;&#x8C03;&#x7528;&#x4E00;&#x6B21; Read &#x90FD;&#x5C06;&#x66F4;&#x65B0; N &#x6765;&#x53CD;&#x5E94;&#x65B0;&#x7684;&#x5269;&#x4F59;&#x6570;&#x91CF;&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6700;&#x591A;&#x53EA;&#x80FD;&#x8FD4;&#x56DE; N &#x5B57;&#x8282;&#x6570;&#x636E;&#x3002; LimitedReader &#x53EA;&#x5B9E;&#x73B0;&#x4E86; Read &#x65B9;&#x6CD5;&#x3002; &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 content := This Is LimitReader Example reader := strings.NewReader(content) limitReader := &amp;io.LimitedReader{R: reader, N: 8 } for limitReader.N  0 { \ttmp := make ([] byte , 2 ) \tlimitReader.Read(tmp) \tfmt.Printf( %s , tmp) // This Is } &#x901A;&#x8FC7;&#x8BE5;&#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x8FBE;&#x5230; &#x53EA;&#x5141;&#x8BB8;&#x8BFB;&#x53D6;&#x4E00;&#x5B9A;&#x957F;&#x5EA6;&#x6570;&#x636E; &#x7684;&#x76EE;&#x7684;&#x3002; &#x5728; io &#x5305;&#x4E2D;&#xFF0C; LimitReader &#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x8C03;&#x7528; LimitedReader &#xFF1A; 1 func LimitReader (r Reader, n int64 ) Reader { return &amp;LimitedReader{r, n} }"},"standards/io/io.html#PipeReader-和-PipeWriter-类型":{"title":"PipeReader &#x548C; PipeWriter &#x7C7B;&#x578B;","path":"\\golang-learn\\standards\\io\\io.html#PipeReader-和-PipeWriter-类型","body":"PipeReader &#x662F;&#x7BA1;&#x9053;&#x7684;&#x8BFB;&#x53D6;&#x7AEF;&#x3002;&#x5B83;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x548C; io.Closer &#x63A5;&#x53E3;&#xFF1A; 1 2 3 type PipeReader struct { \tp *pipe } &#x4ECE;&#x7BA1;&#x9053;&#x4E2D;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x4F1A;&#x5835;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x7BA1;&#x9053;&#x5199;&#x5165;&#x7AEF;&#x5F00;&#x59CB;&#x5199;&#x5165;&#x6570;&#x636E;&#x6216;&#x5199;&#x5165;&#x7AEF;&#x88AB;&#x5173;&#x95ED;&#x3002;&#x5982;&#x679C;&#x5199;&#x5165;&#x7AEF;&#x5173;&#x95ED;&#x65F6;&#x5E26;&#x6709; error &#xFF08;&#x5373;&#x8C03;&#x7528; CloseWithError &#x5173;&#x95ED;&#xFF09;&#xFF0C; &#x8BE5; Read &#x8FD4;&#x56DE;&#x7684; err &#x5C31;&#x662F;&#x5199;&#x5165;&#x7AEF;&#x4F20;&#x9012;&#x7684; error &#xFF1B;&#x5426;&#x5219; err &#x4E3A; EOF &#x3002; PipeWriter &#x662F;&#x7BA1;&#x9053;&#x7684;&#x5199;&#x5165;&#x7AEF;&#x3002;&#x5B83;&#x5B9E;&#x73B0;&#x4E86; io.Writer &#x548C; io.Closer &#x63A5;&#x53E3;&#xFF1A; 1 2 3 type PipeWriter struct { \tp *pipe } &#x5199;&#x6570;&#x636E;&#x5230;&#x7BA1;&#x9053;&#x4E2D;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x4F1A;&#x5835;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x7BA1;&#x9053;&#x8BFB;&#x53D6;&#x7AEF;&#x8BFB;&#x5B8C;&#x6240;&#x6709;&#x6570;&#x636E;&#x6216;&#x8BFB;&#x53D6;&#x7AEF;&#x88AB;&#x5173;&#x95ED;&#x3002;&#x5982;&#x679C;&#x8BFB;&#x53D6;&#x7AEF;&#x5173;&#x95ED;&#x65F6; &#x5E26;&#x6709; error &#xFF08;&#x5373;&#x8C03;&#x7528; CloseWithError &#x5173;&#x95ED;&#xFF09;&#xFF0C;&#x8BE5; Write &#x8FD4;&#x56DE;&#x7684; err &#x5C31;&#x662F;&#x8BFB;&#x53D6;&#x7AEF;&#x4F20;&#x9012;&#x7684; error &#xFF1B;&#x5426;&#x5219; err &#x4E3A; ErrClosedPipe &#x3002; &#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 func main () { pipeReader, pipeWriter := io.Pipe() go PipeWrite(pipeWriter) go PipeRead(pipeReader) time.Sleep( 30 * time.Second) } func PipeWrite (writer *io.PipeWriter) { \tdata := [] byte ( Go&#x8BED;&#x8A00;&#x4E2D;&#x6587;&#x7F51; ) \t for i := 0 ; i  3 ; i++{ \t\tn, err := writer.Write(data) \t\t if err != nil { \t\t\tfmt.Println(err) \t\t\t return \t\t} \t\tfmt.Printf( &#x5199;&#x5165;&#x5B57;&#x8282; %d\\n ,n) \t} \twriter.CloseWithError(errors.New( &#x5199;&#x5165;&#x6BB5;&#x5DF2;&#x5173;&#x95ED; )) } func PipeRead (reader *io.PipeReader) { \tbuf := make ([] byte , 128 ) \t for { \t\tfmt.Println( &#x63A5;&#x53E3;&#x7AEF;&#x5F00;&#x59CB;&#x963B;&#x585E;5&#x79D2;&#x949F;... ) \t\ttime.Sleep( 5 * time.Second) \t\tfmt.Println( &#x63A5;&#x6536;&#x7AEF;&#x5F00;&#x59CB;&#x63A5;&#x53D7; ) \t\tn, err := reader.Read(buf) \t\t if err != nil { \t\t\tfmt.Println(err) \t\t\t return \t\t} \t\tfmt.Printf( &#x6536;&#x5230;&#x5B57;&#x8282;: %d\\n buf&#x5185;&#x5BB9;: %s\\n ,n,buf) \t} } io.Pipe() &#x7528;&#x4E8E;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x540C;&#x6B65;&#x7684;&#x5185;&#x5B58;&#x7BA1;&#x9053;&#xFF1A; 1 func Pipe () (*PipeReader, *PipeWriter) &#x5B83;&#x5C06; io.Reader &#x8FDE;&#x63A5;&#x5230; io.Writer &#x3002;&#x4E00;&#x7AEF;&#x7684;&#x8BFB;&#x53D6;&#x5339;&#x914D;&#x53E6;&#x4E00;&#x7AEF;&#x7684;&#x5199;&#x5165;&#xFF0C;&#x76F4;&#x63A5;&#x5728;&#x8FD9;&#x4E24;&#x7AEF;&#x4E4B;&#x95F4;&#x590D;&#x5236;&#x6570;&#x636E;&#xFF1B;&#x5B83;&#x6CA1;&#x6709;&#x5185;&#x90E8;&#x7F13;&#x5B58;&#x3002;&#x5B83;&#x5BF9;&#x4E8E;&#x5E76;&#x884C;&#x8C03;&#x7528; Read &#x548C; Write &#x4EE5;&#x53CA;&#x5176;&#x5B83;&#x51FD;&#x6570;&#x6216; Close &#x6765;&#x8BF4;&#x90FD;&#x662F;&#x5B89;&#x5168;&#x7684;&#x3002;&#x4E00;&#x65E6;&#x7B49;&#x5F85;&#x7684; I/O &#x7ED3;&#x675F;&#xFF0C; Close &#x5C31;&#x4F1A;&#x5B8C;&#x6210;&#x3002;&#x5E76;&#x884C;&#x8C03;&#x7528; Read &#x6216;&#x5E76;&#x884C;&#x8C03;&#x7528; Write &#x4E5F; &#x540C;&#x6837;&#x5B89;&#x5168;&#xFF1A;&#x540C;&#x79CD;&#x7C7B;&#x7684;&#x8C03;&#x7528;&#x5C06;&#x6309;&#x987A;&#x5E8F;&#x8FDB;&#x884C;&#x63A7;&#x5236;&#x3002; &#x6B63;&#x56E0;&#x4E3A;&#x662F; &#x540C;&#x6B65; &#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x4E0D;&#x80FD;&#x5728;&#x4E00;&#x4E2A; goroutine &#x4E2D;&#x8FDB;&#x884C;&#x8BFB;&#x548C;&#x5199;&#x3002; &#x53E6;&#x5916;&#xFF0C;&#x5BF9;&#x4E8E;&#x7BA1;&#x9053;&#x7684; close &#x65B9;&#x6CD5;&#xFF08;&#x975E; CloseWithError &#x65F6;&#xFF09;&#xFF0C; err &#x4F1A;&#x88AB;&#x7F6E;&#x4E3A; EOF &#x3002;"},"standards/io/io.html#Copy-和-CopyN-函数":{"title":"Copy &#x548C; CopyN &#x51FD;&#x6570;","path":"\\golang-learn\\standards\\io\\io.html#Copy-和-CopyN-函数","body":"Copy &#x51FD;&#x6570; &#xFF1A; 1 func Copy (dst Writer, src Reader) (written int64 , err error) &#x51FD;&#x6570;&#x6587;&#x6863;&#xFF1A; Copy &#x5C06; src &#x590D;&#x5236;&#x5230; dst &#xFF0C;&#x76F4;&#x5230;&#x5728; src &#x4E0A;&#x5230;&#x8FBE; EOF &#x6216;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#x3002;&#x5B83;&#x8FD4;&#x56DE;&#x590D;&#x5236;&#x7684;&#x5B57;&#x8282;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x9519;&#x8BEF;&#x7684;&#x8BDD;&#xFF0C;&#x8FD8;&#x4F1A;&#x8FD4;&#x56DE;&#x5728;&#x590D;&#x5236;&#x65F6;&#x9047;&#x5230;&#x7684;&#x7B2C;&#x4E00; &#x4E2A;&#x9519;&#x8BEF;&#x3002; &#x6210;&#x529F;&#x7684; Copy &#x8FD4;&#x56DE; err == nil &#xFF0C;&#x800C;&#x975E; err == EOF &#x3002;&#x7531;&#x4E8E; Copy &#x88AB;&#x5B9A;&#x4E49;&#x4E3A;&#x4ECE; src &#x8BFB;&#x53D6;&#x76F4;&#x5230; EOF &#x4E3A;&#x6B62;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x4E0D;&#x4F1A;&#x5C06;&#x6765; &#x81EA; Read &#x7684; EOF &#x5F53;&#x505A;&#x9519;&#x8BEF;&#x6765;&#x62A5;&#x544A;&#x3002; &#x82E5; dst &#x5B9E;&#x73B0;&#x4E86; ReaderFrom &#x63A5;&#x53E3;&#xFF0C;&#x5176;&#x590D;&#x5236;&#x64CD;&#x4F5C;&#x53EF;&#x901A;&#x8FC7;&#x8C03;&#x7528; dst.ReadFrom(src) &#x5B9E;&#x73B0;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x82E5; src &#x5B9E;&#x73B0;&#x4E86; WriterTo &#x63A5;&#x53E3;&#xFF0C;&#x5176;&#x590D; &#x5236;&#x64CD;&#x4F5C;&#x53EF;&#x901A;&#x8FC7;&#x8C03;&#x7528; src.WriteTo(dst) &#x5B9E;&#x73B0;&#x3002; &#x4EE3;&#x7801;&#xFF1A; 1 io.Copy(os.Stdout, strings.NewReader( Go&#x8BED;&#x8A00;&#x4E2D;&#x6587;&#x7F51; )) &#x76F4;&#x63A5;&#x5C06;&#x5185;&#x5BB9;&#x8F93;&#x51FA;&#xFF08;&#x5199;&#x5165; Stdout &#x4E2D;&#xFF09;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 package main import ( \t fmt \t io \t os ) func main () { \t_, _ = io.Copy(os.Stdout, os.Stdin) \tfmt.Println( Got EOF -- bye ) } &#x6267;&#x884C;&#xFF1A; echo Hello, World | go run main.go CopyN &#x51FD;&#x6570; &#xFF1A; 1 func CopyN (dst Writer, src Reader, n int64 ) (written int64 , err error) CopyN &#x5C06; n &#x4E2A;&#x5B57;&#x8282;(&#x6216;&#x5230;&#x4E00;&#x4E2A; error )&#x4ECE; src &#x590D;&#x5236;&#x5230; dst &#x3002; &#x5B83;&#x8FD4;&#x56DE;&#x590D;&#x5236;&#x7684;&#x5B57;&#x8282;&#x6570;&#x4EE5;&#x53CA;&#x5728;&#x590D;&#x5236;&#x65F6;&#x9047;&#x5230;&#x7684;&#x6700;&#x65E9;&#x7684;&#x9519;&#x8BEF;&#x3002; &#x5F53;&#x4E14;&#x4EC5;&#x5F53; err == nil &#x65F6;, written == n &#x3002; &#x82E5; dst &#x5B9E;&#x73B0;&#x4E86; ReaderFrom &#x63A5;&#x53E3;&#xFF0C;&#x590D;&#x5236;&#x64CD;&#x4F5C;&#x4E5F;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x5B83;&#x6765;&#x5B9E;&#x73B0;&#x3002; &#x4EE3;&#x7801;&#xFF1A; 1 io.CopyN(os.Stdout, strings.NewReader( Go&#x8BED;&#x8A00;&#x4E2D;&#x6587;&#x7F51; ), 8 ) // Go&#x8BED;&#x8A00;"},"standards/io/io.html#ReadAtLeast-和-ReadFull-函数":{"title":"ReadAtLeast &#x548C; ReadFull &#x51FD;&#x6570;","path":"\\golang-learn\\standards\\io\\io.html#ReadAtLeast-和-ReadFull-函数","body":"ReadAtLeast &#x51FD;&#x6570; &#xFF1A; 1 func ReadAtLeast (r Reader, buf [] byte , min int ) (n int , err error) &#x51FD;&#x6570;&#x6587;&#x6863;&#xFF1A; ReadAtLeast &#x5C06; r &#x8BFB;&#x53D6;&#x5230; buf &#x4E2D;&#xFF0C;&#x76F4;&#x5230;&#x8BFB;&#x4E86;&#x6700;&#x5C11; min &#x4E2A;&#x5B57;&#x8282;&#x4E3A;&#x6B62;&#x3002;&#x5B83;&#x8FD4;&#x56DE;&#x590D;&#x5236;&#x7684;&#x5B57;&#x8282;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x8F83;&#x5C11;&#xFF0C;&#x8FD8;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x3002; &#x82E5;&#x6CA1;&#x6709;&#x8BFB;&#x53D6;&#x5230;&#x5B57;&#x8282;&#xFF0C;&#x9519;&#x8BEF;&#x5C31;&#x53EA;&#x662F; EOF &#x3002;&#x5982;&#x679C;&#x4E00;&#x4E2A; EOF &#x53D1;&#x751F;&#x5728;&#x8BFB;&#x53D6;&#x4E86;&#x5C11;&#x4E8E; min &#x4E2A;&#x5B57;&#x8282;&#x4E4B;&#x540E;&#xFF0C; ReadAtLeast &#x5C31;&#x4F1A;&#x8FD4;&#x56DE; ErrUnexpectedEOF &#x3002; &#x82E5; min &#x5927;&#x4E8E; buf &#x7684;&#x957F;&#x5EA6;&#xFF0C; ReadAtLeast &#x5C31;&#x4F1A;&#x8FD4;&#x56DE; ErrShortBuffer &#x3002;&#x5BF9;&#x4E8E;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x5F53;&#x4E14;&#x4EC5;&#x5F53; err == nil &#x65F6;&#xFF0C;&#x624D;&#x6709; n = min &#x3002; ReadFull &#x51FD;&#x6570; &#xFF1A; 1 func ReadFull (r Reader, buf [] byte ) (n int , err error) &#x51FD;&#x6570;&#x6587;&#x6863;&#xFF1A; ReadFull &#x7CBE;&#x786E;&#x5730;&#x4ECE; r &#x4E2D;&#x5C06; len(buf) &#x4E2A;&#x5B57;&#x8282;&#x8BFB;&#x53D6;&#x5230; buf &#x4E2D;&#x3002;&#x5B83;&#x8FD4;&#x56DE;&#x590D;&#x5236;&#x7684;&#x5B57;&#x8282;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x8F83;&#x5C11;&#xFF0C;&#x8FD8;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x3002;&#x82E5;&#x6CA1;&#x6709;&#x8BFB; &#x53D6;&#x5230;&#x5B57;&#x8282;&#xFF0C;&#x9519;&#x8BEF;&#x5C31;&#x53EA;&#x662F; EOF &#x3002;&#x5982;&#x679C;&#x4E00;&#x4E2A; EOF &#x53D1;&#x751F;&#x5728;&#x8BFB;&#x53D6;&#x4E86;&#x4E00;&#x4E9B;&#x4F46;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x5B57;&#x8282;&#x540E;&#xFF0C; ReadFull &#x5C31;&#x4F1A;&#x8FD4;&#x56DE; ErrUnexpectedEOF &#x3002;&#x5BF9;&#x4E8E;&#x8FD4;&#x56DE;&#x503C;&#xFF0C; &#x5F53;&#x4E14;&#x4EC5;&#x5F53; err == nil &#x65F6;&#xFF0C;&#x624D;&#x6709; n == len(buf) &#x3002; &#x6CE8;&#x610F;&#x8BE5;&#x51FD;&#x6570;&#x548C; ReadAtLeast &#x7684;&#x533A;&#x522B;&#xFF1A; ReadFull &#x5C06; buf &#x8BFB;&#x6EE1; ReadAtLeast &#x662F;&#x6700;&#x5C11;&#x8BFB;&#x53D6; min &#x4E2A;&#x5B57;&#x8282;&#x3002;"},"standards/io/io.html#WriteString-函数":{"title":"WriteString &#x51FD;&#x6570;","path":"\\golang-learn\\standards\\io\\io.html#WriteString-函数","body":"&#x8FD9;&#x662F;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x5199;&#x5165; string &#x7C7B;&#x578B;&#x63D0;&#x4F9B;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#xFF1A; 1 func WriteString (w Writer, s string ) (n int , err error) &#x51FD;&#x6570;&#x6587;&#x6863;&#xFF1A; WriteString &#x5C06; s &#x7684;&#x5185;&#x5BB9;&#x5199;&#x5165; w &#x4E2D;&#xFF0C;&#x5F53; w &#x5B9E;&#x73B0;&#x4E86; WriteString &#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x4F1A;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x8BE5;&#x65B9;&#x6CD5;&#xFF0C;&#x5426;&#x5219;&#x6267;&#x884C; w.Write([]byte(s)) &#x3002;"},"standards/io/io.html#MultiReader-和-MultiWriter-函数":{"title":"MultiReader &#x548C; MultiWriter &#x51FD;&#x6570;","path":"\\golang-learn\\standards\\io\\io.html#MultiReader-和-MultiWriter-函数","body":"1 2 func MultiReader (readers ...Reader) Reader func MultiWriter (writers ...Writer) Writer &#x5B83;&#x4EEC;&#x63A5;&#x6536;&#x591A;&#x4E2A; Reader &#x6216; Writer &#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; Reader &#x6216; Writer &#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x731C;&#x60F3;&#x5230;&#x8FD9;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x5C31;&#x662F;&#x64CD;&#x4F5C;&#x591A;&#x4E2A; Reader &#x6216; Writer &#x5C31;&#x50CF; &#x64CD;&#x4F5C;&#x4E00;&#x4E2A;&#x3002; &#x4E8B;&#x5B9E;&#x4E0A;&#xFF0C;&#x5728; io &#x5305;&#x4E2D;&#x5B9A;&#x4E49;&#x4E86;&#x4E24;&#x4E2A;&#x975E;&#x5BFC;&#x51FA;&#x7C7B;&#x578B;&#xFF1A; mutilReader &#x548C; multiWriter &#xFF0C;&#x5B83;&#x4EEC;&#x5206;&#x522B;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x548C; io.Writer &#x63A5;&#x53E3;&#xFF1A; 1 2 3 4 5 6 7 type multiReader struct { \treaders []Reader } type multiWriter struct { \twriters []Writer } &#x5BF9;&#x4E8E;&#x8FD9;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#x5BF9;&#x5E94;&#x7684;&#x5B9E;&#x73B0;&#x65B9;&#x6CD5;&#xFF08; Read &#x548C; Write &#x65B9;&#x6CD5;&#xFF09;&#x7684;&#x4F7F;&#x7528;&#xFF0C;&#x793A;&#x4F8B;&#xFF1A; MultiReader &#x7684;&#x4F7F;&#x7528; &#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 readers := []io.Reader{ \tstrings.NewReader( from strings reader ), \tbytes.NewBufferString( from bytes buffer ), } reader := io.MultiReader(readers...) data := make ([] byte , 0 , 128 ) buf := make ([] byte , 10 ) \t for n, err := reader.Read(buf); err != io.EOF ; n, err = reader.Read(buf){ \t if err != nil { \t\t panic (err) \t} \tdata = append (data,buf[:n]...) } fmt.Printf( %s\\n , data) // from strings readerfrom bytes buffer &#x4EE3;&#x7801;&#x4E2D;&#x9996;&#x5148;&#x6784;&#x9020;&#x4E86;&#x4E00;&#x4E2A; io.Reader &#x7684; slice &#xFF0C;&#x7136;&#x540E;&#x901A;&#x8FC7; MultiReader &#x5F97;&#x5230;&#x65B0;&#x7684; Reader &#xFF0C;&#x5FAA;&#x73AF;&#x8BFB;&#x53D6;&#x65B0; Reader &#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x4ECE;&#x8F93;&#x51FA;&#x7ED3;&#x679C; &#x53EF;&#x4EE5;&#x770B;&#x5230;&#xFF0C;&#x7B2C;&#x4E00;&#x6B21;&#x8C03;&#x7528; Reader &#x7684; Read &#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5230;&#x7684;&#x662F; slice &#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x5185;&#x5BB9;&#x2026;&#x2026;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C; MultiReader &#x53EA;&#x662F;&#x903B;&#x8F91;&#x4E0A;&#x5C06;&#x591A; &#x4E2A; Reader &#x7EC4;&#x5408;&#x8D77;&#x6765;&#xFF0C;&#x5E76;&#x4E0D;&#x80FD;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x4E00;&#x6B21; Read &#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x6240;&#x6709; Reader &#x7684;&#x5185;&#x5BB9;&#x3002;&#x5728;&#x6240;&#x6709;&#x7684; Reader &#x5185;&#x5BB9;&#x90FD;&#x88AB;&#x8BFB; &#x5B8C;&#x540E;&#xFF0C; Reader &#x4F1A;&#x8FD4;&#x56DE; EOF &#x3002; MultiWriter &#x7684;&#x4F7F;&#x7528; &#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 file, err := os.Create( tmp.txt ) if err != nil { panic (err) } defer file.Close() writers := []io.Writer{ \tfile, \tos.Stdout, } writer := io.MultiWriter(writers...) writer.Write([] byte ( Go&#x8BED;&#x8A00;&#x4E2D;&#x6587;&#x7F51; )) &#x8FD9;&#x6BB5;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x540E;&#x5728;&#x751F;&#x6210; tmp.txt &#x6587;&#x4EF6;&#xFF0C;&#x540C;&#x65F6;&#x5728;&#x6587;&#x4EF6;&#x548C;&#x5C4F;&#x5E55;&#x4E2D;&#x90FD;&#x8F93;&#x51FA;&#xFF1A; Go&#x8BED;&#x8A00;&#x4E2D;&#x6587;&#x7F51; &#x3002;&#x8FD9;&#x548C; Unix &#x4E2D;&#x7684; tee &#x547D;&#x4EE4;&#x7C7B;&#x4F3C;&#x3002;"},"standards/io/io.html#TeeReader-函数":{"title":"TeeReader &#x51FD;&#x6570;","path":"\\golang-learn\\standards\\io\\io.html#TeeReader-函数","body":"1 func TeeReader (r Reader, w Writer) Reader TeeReader &#x8FD4;&#x56DE;&#x4E00;&#x4E2A; Reader &#xFF0C;&#x5B83;&#x5C06;&#x4ECE; r &#x4E2D;&#x8BFB;&#x5230;&#x7684;&#x6570;&#x636E;&#x5199;&#x5165; w &#x4E2D;&#x3002;&#x6240;&#x6709;&#x7ECF;&#x7531;&#x5B83;&#x5904;&#x7406;&#x7684;&#x4ECE; r &#x7684;&#x8BFB;&#x53D6;&#x90FD;&#x5339;&#x914D;&#x4E8E;&#x5BF9;&#x5E94;&#x7684;&#x5BF9; w &#x7684;&#x5199;&#x5165;&#x3002;&#x5B83;&#x6CA1; &#x6709;&#x5185;&#x90E8;&#x7F13;&#x5B58;&#xFF0C;&#x5373;&#x5199;&#x5165;&#x5FC5;&#x987B;&#x5728;&#x8BFB;&#x53D6;&#x5B8C;&#x6210;&#x524D;&#x5B8C;&#x6210;&#x3002;&#x4EFB;&#x4F55;&#x5728;&#x5199;&#x5165;&#x65F6;&#x9047;&#x5230;&#x7684;&#x9519;&#x8BEF;&#x90FD;&#x5C06;&#x4F5C;&#x4E3A;&#x8BFB;&#x53D6;&#x9519;&#x8BEF;&#x8FD4;&#x56DE;&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7; Reader &#x8BFB;&#x53D6;&#x5185;&#x5BB9;&#x540E;&#xFF0C;&#x4F1A;&#x81EA;&#x52A8;&#x5199;&#x5165;&#x5230; Writer &#x4E2D;&#x53BB;&#x3002;&#x4F8B;&#x5B50;&#x4EE3;&#x7801;&#x5982;&#x4E0B;&#xFF1A; 1 2 reader := io.TeeReader(strings.NewReader( Go&#x8BED;&#x8A00;&#x4E2D;&#x6587;&#x7F51; ), os.Stdout) reader.Read( make ([] byte , 20 )) // Go&#x8BED;&#x8A00;&#x4E2D;&#x6587;&#x7F51; &#x8FD9;&#x79CD;&#x529F;&#x80FD;&#x7684;&#x5B9E;&#x73B0;&#x5176;&#x5B9E;&#x633A;&#x7B80;&#x5355;&#xFF0C;&#x65E0;&#x975E;&#x662F;&#x5728; Read &#x5B8C;&#x540E;&#x6267;&#x884C; Write &#x3002;"},"standards/os/os.html":{"title":"os","path":"\\golang-learn\\standards\\os\\os.html","body":"os os 包提供了平台无关的操作系统功能接口。例如 Linux、macOS、Windows 等系统 os 包提供统一的使用接口。 例子，打开一个文件并从中读取一些数据： 1 2 3 4 file, err := os.Open( \"file.go\" ) // For read access. if err != nil  \tlog.Fatal(err) // `open file.go: no such file or directory`  文件 I/O 在 Go 中，文件描述符封装在 os.File 结构中，通过 File.Fd() 可以获得底层的文件描述符： fd 。 大多数程序都期望能够使用 3 种标准的文件描述符：0- 标准输入；1- 标准输出；2- 标准错误。 os 包提供了 3 个 File 对象，分别 代表这 3 种标准描述符： Stdin 、 Stdout 和 Stderr ，它们对应的文件名分别是： /dev/stdin 、 /dev/stdout 和 /dev/stderr 。 注意，这里说的文件名，并不一定存在，比如 Windows 下就没有。 OpenFile 1 func OpenFile (name string , flag int , perm FileMode) (*File, error) OpenFile 既能打开一个已经存在的文件，也能创建并打开一个新文件。 OpenFile 是一个更一般性的文件打开函数，大多数调用者都应用 Open 或 Create 代替本函数。它会使用指定的选项（如 O_RDONLY 等）、 指定的模式（如 0666 等）打开指定名称的文件。如果操作成功，返回的文件对象可用于 I/O。如果出错，错误底层类型是 *PathError 。 要打开的文件由参数 name 指定，它可以是绝对路径或相对路径（相对于进程当前工作目录），也可以是一个符号链接（会对其进行解引用）。 位掩码参数 flag 用于指定文件的访问模式，可用的值在 os 中定义为常量（以下值并非所有操作系统都可用）： 1 2 3 4 5 6 7 8 9 10 const ( O_RDONLY int = syscall.O_RDONLY // 只读模式打开文件 O_WRONLY int = syscall.O_WRONLY // 只写模式打开文件 O_RDWR int = syscall.O_RDWR // 读写模式打开文件 O_APPEND int = syscall.O_APPEND // 写操作时将数据附加到文件尾部 O_CREATE int = syscall.O_CREAT // 如果不存在将创建一个新文件 O_EXCL int = syscall.O_EXCL // 和 O_CREATE 配合使用，文件必须不存在 O_SYNC int = syscall.O_SYNC // 打开文件用于同步 I/O O_TRUNC int = syscall.O_TRUNC // 如果可能，打开时清空文件 ) 其中， O_RDONLY 、 O_WRONLY 、 O_RDWR 只指定一个，剩下的通过 | 操作符来指定。该函数内部会给 flags 加上 syscall.O_CLOEXEC ， 在 fork 子进程时会关闭通过 OpenFile 打开的文件，即子进程不会重用该文件描述符。 位掩码参数 perm 指定了文件的模式和权限位，类型是 os.FileMode ，文件模式位常量定义在 os 中： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 const ( // 单字符是被 String 方法用于格式化的属性缩写。 ModeDir FileMode = 1  ( 32 - 1 - iota ) // d: 目录 ModeAppend // a: 只能写入，且只能写入到末尾 ModeExclusive // l: 用于执行 ModeTemporary // T: 临时文件（非备份文件） ModeSymlink // L: 符号链接（不是快捷方式文件） ModeDevice // D: 设备 ModeNamedPipe // p: 命名管道（FIFO） ModeSocket // S: Unix 域 socket ModeSetuid // u: 表示文件具有其创建者用户 id 权限 ModeSetgid // g: 表示文件具有其创建者组 id 的权限 ModeCharDevice // c: 字符设备，需已设置 ModeDevice ModeSticky // t: 只有 root/ 创建者能删除 / 移动文件 // 覆盖所有类型位（用于通过 &amp; 获取类型位），对普通文件，所有这些位都不应被设置 ModeType = ModeDir | ModeSymlink | ModeNamedPipe | ModeSocket | ModeDevice ModePerm FileMode = 0777 // 覆盖所有 Unix 权限位（用于通过 &amp; 获取类型位） ) 以上常量在所有操作系统都有相同的含义（可用时），因此文件的信息可以在不同的操作系统之间安全的移植。不是所有的位都能用于所有的系统， 唯一共有的是用于表示目录的 ModeDir 位。 以上这些被定义的位是 FileMode 最重要的位。另外 9 个位（权限位）为标准 Unix rwxrwxrwx 权限（所有人都可读、写、运行）。 FileMode 还定义了几个方法，用于判断文件类型的 IsDir() 和 IsRegular() ，用于获取权限的 Perm() 。 返回的 error ，具体实现是 *os.PathError ，它会记录具体操作、文件路径和错误原因。 另外，在 OpenFile 内部会调用 NewFile ，来得到 File 对象。 使用方法 打开一个文件，一般通过 Open 或 Create ，这两个函数的实现。 1 2 3 4 5 6 7 func Open (name string ) (*File, error)  \t return OpenFile(name, O_RDONLY, 0 )  func Create (name string ) (*File, error)  \t return OpenFile(name, O_RDWR|O_CREATE|O_TRUNC, 0666 )  Read 1 func (f *File) Read (b [] byte ) (n int , err error) Read 方法从 f 中读取最多 len(b) 字节数据并写入 b 。它返回读取的字节数和可能遇到的任何错误。文件终止标志是读取 0 个字节且返回 值 err 为 io.EOF 。 对比下 ReadAt 方法： 1 func (f *File) ReadAt (b [] byte , off int64 ) (n int , err error) ReadAt 从指定的位置（相对于文件开始位置）读取长度为 len(b) 个字节数据并写入 b 。它返回读取的字节数和可能遇到的任何错误。 当 nlen(b) 时，本方法总是会返回错误；如果是因为到达文件结尾，返回值 err 会是 io.EOF 。它对应的系统调用是 pread 。 Read 和 ReadAt 的区别 ：前者从文件当前偏移量处读，且会改变文件当前的偏移量；而后者从 off 指定的位置开始读，且 不会改变 文件 当前偏移量。 Write 1 func (f *File) Write (b [] byte ) (n int , err error) Write 向文件中写入 len(b) 字节数据。它返回写入的字节数和可能遇到的任何错误。如果返回值 n != len(b) ，本方法会返回一个 非 nil 的错误。 Write 与 WriteAt 的区别同 Read 与 ReadAt 的区别一样。为了方便，还提供了 WriteString 方法，它实际是对 Write 的封装。 注意： Write 调用成功并不能保证数据已经写入磁盘，因为内核会缓存磁盘的 I/O 操作。如果希望立刻将数据写入磁盘（一般场景不建议这么做，因为会 影响性能），有两种办法： 打开文件时指定 os.O_SYNC ； 调用 File.Sync() 方法。 说明： File.Sync() 底层调用的是 fsync 系统调用，这会将数据和元数据都刷到磁盘；如果只想刷数据到磁盘（比如，文件大小没变，只是变了文件 数据），需要自己封装，调用 fdatasync 系统调用。（ syscall.Fdatasync ） Close 1 func (f *File) Close () error close() 系统调用关闭一个打开的文件描述符，并将其释放回调用进程，供该进程继续使用。当进程终止时，将自动关闭其已打开的所有文件描述符。 os.File.Close() 是对 close() 的封装。文件描述符是资源，Go 的 gc 是针对内存的，并不会自动回收资源，如果不关闭文件描述符， 长期运行的服务可能会把文件描述符耗尽。 所以，通常的写法如下： 1 2 3 4 5 6 file, err := os.Open( \"/tmp/studygolang.txt\" ) if err != nil  \t // 错误处理，一般会阻止程序往下执行 \t return  defer file.Close() 关于返回值 error 以下两种情况会导致 Close 返回错误： 关闭一个未打开的文件； 两次关闭同一个文件； 通常，不会去检查 Close 的错误。 Seek 对于每个打开的文件，系统内核会记录其文件偏移量，有时也将文件偏移量称为读写偏移量或指针。文件偏移量是指执行下一个 Read 或 Write 操作 的文件真实位置，会以相对于文件头部起始点的文件当前位置来表示。文件第一个字节的偏移量为 0。 文件打开时，会将文件偏移量设置为指向文件开始，以后每次 Read 或 Write 调用将自动对其进行调整，以指向已读或已写数据后的下一个字节。因 此，连续的 Read 和 Write 调用将按顺序递进，对文件进行操作。 Seek 可以调整文件偏移量： 1 func (f *File) Seek (offset int64 , whence int ) (ret int64 , err error) Seek 设置下一次读/写的位置。 offset 为相对偏移量，而 whence 决定相对位置：0 为相对文件开头，1 为相对当前位置，2 为相对文件结尾。它 返回新的偏移量（相对开头）和可能的错误。 注意： Seek 只是调整内核中与文件描述符相关的文件偏移量记录，并没有访问任何物理设备。 一些 Seek 的使用例子（file 为打开的文件对象），注释说明了将文件偏移量移动到的具体位置： 1 2 3 4 5 file.Seek( 0 , os.SEEK_SET)\t // 文件开始处 file.Seek( 0 , SEEK_END)\t\t // 文件结尾处的下一个字节 file.Seek( -1 , SEEK_END)\t\t // 文件最后一个字节 file.Seek( -10 , SEEK_CUR) \t // 当前位置前 10 个字节 file.Seek( 1000 , SEEK_END)\t // 文件结尾处的下 1001 个字节 最后一个例子在文件中会产生“空洞”。 Seek 对应系统调用 lseek 。该系统调用并不适用于所有类型，不允许将 lseek 应用于管道、FIFO、socket 或 终端。 截断文件 trucate 和 ftruncate 系统调用将文件大小设置为 size 参数指定的值；Go 语言中相应的包装函数是 os.Truncate 和 os.File.Truncate 。 1 2 func Truncate (name string , size int64 ) error func (f *File) Truncate (size int64 ) error 如果文件当前长度大于参数 size ，调用将丢弃超出部分，若小于参数 size ，调用将在文件尾部添加一系列空字节或是一个文件空洞。 它们之间的区别在于如何指定操作文件： Truncate 以路径名称字符串来指定文件，并要求可访问该文件（即对组成路径名的各目录拥有可执行 (x) 权限），且对文件拥有写权限。 若文件名为符号链接，那么调用将对其进行解引用。 很明显，调用 File.Truncate 前，需要先以可写方式打开操作文件，该方法不会修改文件偏移量。 文件属性 文件属性，也即文件元数据。在 Go 中，文件属性具体信息通过 os.FileInfo 接口获取。函数 Stat 、 Lstat 和 File.Stat 可以得到该接口 的实例。这三个函数对应三个系统调用： stat 、 lstat 和 fstat 。 这三个函数的区别： stat 会返回所命名文件的相关信息。 lstat 与 stat 类似，区别在于如果文件是符号链接，那么所返回的信息针对的是符号链接自身（而非符号链接所指向的文件）。 fstat 则会返回由某个打开文件描述符（Go 中则是当前打开文件 File）所指代文件的相关信息。 Stat 和 Lstat 无需对其所操作的文件本身拥有任何权限，但针对指定 name 的父目录要有执行（搜索）权限。而只要 File 对象 ok ， File.Stat 总是成功。 FileInfo 接口如下： 1 2 3 4 5 6 7 8 type FileInfo interface  Name() string // 文件的名字（不含扩展名） Size() int64 // 普通文件返回值表示其大小；其他文件的返回值含义各系统不同 Mode() FileMode // 文件的模式位 ModTime() time.Time // 文件的修改时间 IsDir() bool // 等价于 Mode().IsDir() Sys() interface  // 底层数据来源（可以返回 nil）  Sys() 底层数据的 C 语言 结构 statbuf 格式如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 struct stat  \tdev_t\tst_dev;\t // 设备 ID \tino_t\tst_ino;\t // 文件 i 节点号 \tmode_t\tst_mode;\t // 位掩码，文件类型和文件权限 \tnlink_t\tst_nlink;\t // 硬链接数 \tuid_t\tst_uid;\t // 文件属主，用户 ID \tgid_t\tst_gid;\t // 文件属组，组 ID \tdev_t\tst_rdev;\t // 如果针对设备 i 节点，则此字段包含主、辅 ID \toff_t\tst_size;\t // 常规文件，则是文件字节数；符号链接，则是链接所指路径名的长度，字节为单位；对于共享内存对象，则是对象大小 \tblksize_t\tst_blsize;\t // 分配给文件的总块数，块大小为 512 字节 \tblkcnt_t\tst_blocks;\t // 实际分配给文件的磁盘块数量 \ttime_t\tst_atime;\t\t // 对文件上次访问时间 \ttime_t\tst_mtime;\t\t // 对文件上次修改时间 \ttime_t\tst_ctime;\t\t // 文件状态发生改变的上次时间  Go 中 syscal.Stat_t 与该结构对应。 如果我们要获取 FileInfo 接口没法直接返回的信息，比如想获取文件的上次访问时间，示例如下： 1 2 3 4 5 6 7 fileInfo, err := os.Stat( \"test.log\" ) if err != nil  \tlog.Fatal(err)  sys := fileInfo.Sys() stat := sys.(*syscall.Stat_t) fmt.Println(time.Unix(stat.Atimespec.Unix())) 改变文件时间戳 可以显式改变文件的访问时间和修改时间。 1 func Chtimes (name string , atime time.Time, mtime time.Time) error Chtimes 修改 name 指定的文件对象的访问时间和修改时间，类似 Unix 的 utime() 或 utimes() 函数。底层的文件系统可能会截断/舍入 时间单位到更低的精确度。如果出错，会返回 *PathError 类型的错误。在 Unix 中，底层实现会调用 utimenstat() ，它提供纳秒级别的精度。 文件属主 每个文件都有一个与之关联的用户 ID（UID）和组 ID（GID），籍此可以判定文件的属主和属组。系统调用 chown 、 lchown 和 fchown 可用来 改变文件的属主和属组，Go 中对应的函数或方法： 1 2 3 func Chown (name string , uid, gid int ) error func Lchown (name string , uid, gid int ) error func (f *File) Chown (uid, gid int ) error 它们的区别和上文提到的 Stat 相关函数类似。 文件权限 这里介绍是应用于文件和目录的权限方案，尽管此处讨论的权限主要是针对普通文件和目录，但其规则可适用于所有文件类型，包括设备文件、FIFO 以 及 Unix 域套接字等。 相关函数或方法 在文件相关操作报错时，可以通过 os.IsPermission 检查是否是权限的问题。 1 func IsPermission (err error) bool 返回一个布尔值说明该错误是否表示因权限不足要求被拒绝。 ErrPermission 和一些系统调用错误会使它返回真。 另外， syscall.Access 可以获取文件的权限。这对应系统调用 access 。 Sticky 位 除了 9 位用来表明属主、属组和其他用户的权限外，文件权限掩码还另设有 3 个附加位，分别是 set-user-ID (bit 04000)、 set-group-ID (bit 02000) 和 sticky (bit 01000) 位。 Sticky 位一般用于目录，起限制删除位的作用，表明仅当非特权进程具有对目录的写权限，且为文件或目录的属主时，才能对目录下的文件进行删除和重命名操 作。根据这个机制来创建为多个用户共享的一个目录，各个用户可在其下创建或删除属于自己的文件，但不能删除隶属于其他用户的文件。 /tmp 目录就设 置了 sticky 位，正是出于这个原因。 chmod 命令或系统调用可以设置文件的 sticky 位。若对某文件设置了 sticky 位，则 ls -l 显示文件时，会在其他用户执行权限字段上看到字 母 t（有执行权限时） 或 T（无执行权限时）。 os.Chmod 和 os.File.Chmod 可以修改文件权限（包括 sticky 位），分别对应系统调用 chmod 和 fchmod 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 func main ()  file, err := os.Create( \"studygolang.txt\" ) if err != nil  log.Fatal( \"error:\" , err)  defer file.Close() fileMode := getFileMode(file) log.Println( \"file mode:\" , fileMode) file.Chmod(fileMode | os.ModeSticky) log.Println( \"change after, file mode:\" , getFileMode(file))  func getFileMode (file *os.File) os . FileMode  fileInfo, err := file.Stat() if err != nil  log.Fatal( \"file stat error:\" , err)  return fileInfo.Mode()  // Output: // 2016/06/18 15:59:06 file mode: -rw-rw-r-- // 2016/06/18 15:59:06 change after, file mode: trw-rw-r-- // ls -l 看到的 studygolang.tx 是：-rw-rw-r-T // 当然这里是给文件设置了 sticky 位，对权限不起作用。系统会忽略它。 目录与链接 在 Unix 文件系统中，目录的存储方式类似于普通文件。目录和普通文件的区别有二： 在其 i-node 条目中，会将目录标记为一种不同的文件类型。 目录是经特殊组织而成的文件。本质上说就是一个表格，包含文件名和 i-node 标号。 创建和移除（硬）链接 硬链接是针对文件而言的，目录不允许创建硬链接。 link 和 unlink 系统调用用于创建和移除（硬）链接。Go 中 os.Link 对应 link 系统调用；但 os.Remove 的实现会先执行 unlink 系统调用，如果要移除的是目录，则 unlink 会失败，这时 Remove 会再调用 rmdir 系统调用。 1 func Link (oldname, newname string ) error Link 创建一个名为 newname 指向 oldname 的硬链接。如果出错，会返回 *LinkError 类型的错误。 1 func Remove (name string ) error Remove 删除 name 指定的文件或目录。如果出错，会返回 *PathError 类型的错误。如果目录不为空， Remove 会返回失败。 更改文件名 系统调用 rename 既可以重命名文件，又可以将文件移至同一个文件系统中的另一个目录。该系统调用既可以用于文件，也可以用于目录。相关细节， 请查阅相关资料。 Go 中的 os.Rename 是对应的封装函数。 1 func Rename (oldpath, newpath string ) error Rename 修改一个文件的名字或移动一个文件。如果 newpath 已经存在，则替换它。注意，可能会有一些个操作系统特定的限制。 使用符号链接 symlink 系统调用用于为指定路径名创建一个新的符号链接（想要移除符号链接，使用 unlink ）。Go 中的 os.Symlink 是对应的封装函数。 1 func Symlink (oldname, newname string ) error Symlink 创建一个名为 newname 指向 oldname 的符号链接。如果出错，会返回 *LinkError 类型的错误。 由 oldname 所命名的文件或目录在调用时无需存在。因为即便当时存在，也无法阻止后来将其删除。这时， newname 成为“悬空链接”，其他系统 调用试图对其进行解引用操作都将错误（通常错误号是 ENOENT ）。 有时候，我们希望通过符号链接，能获取其所指向的路径名。系统调用 readlink 能做到，Go 的封装函数是 os.Readlink ： 1 func Readlink (name string ) ( string , error) Readlink 获取 name 指定的符号链接指向的文件的路径。如果出错，会返回 *PathError 类型的错误。我们看看 Readlink 的实现。 1 2 3 4 5 6 7 8 9 10 11 12 func Readlink (name string ) ( string , error)  \t for len := 128 ; ; len *= 2  \t\tb := make ([] byte , len ) \t\tn, e := fixCount(syscall.Readlink(name, b)) \t\t if e != nil  \t\t\t return \"\" , &amp;PathError \"readlink\" , name, e \t\t \t\t if n  len  \t\t\t return string (b[ 0 :n]), nil \t\t \t  这里之所以用循环，是因为我们没法知道文件的路径到底多长，如果 b 长度不够，文件名会被截断，而 readlink 系统调用无非分辨所返回的字 符串到底是经过截断处理，还是恰巧将 b 填满。这里采用的验证方法是分配一个更大的（两倍） b 并再次调用 readlink 。 创建和移除目录 mkdir 系统调用创建一个新目录，Go 中的 os.Mkdir 是对应的封装函数。 1 func Mkdir (name string , perm FileMode) error Mkdir 使用指定的权限和名称创建一个目录。如果出错，会返回 *PathError 类型的错误。 name 参数指定了新目录的路径名，可以是相对路径，也可以是绝对路径。如果已经存在，则调用失败并返回 os.ErrExist 错误。 perm 参数指定了新目录的权限。对该位掩码值的指定方式和 os.OpenFile 相同，也可以直接赋予八进制数值。注意， perm 值还将于进程掩码相 与（&amp;）。如果 perm 中设置了 sticky 位，那么将对新目录设置该权限。 因为 Mkdir 所创建的只是路径名中的最后一部分，如果父目录不存在，创建会失败。 os.MkdirAll 用于递归创建所有不存在的目录。 建议读者阅读下 os.MkdirAll 的源码，了解其实现方式、技巧。 rmdir 系统调用移除一个指定的目录，目录可以是绝对路径或相对路径。在讲解 unlink 时，已经介绍了 Go 中的 os.Remove 。注意，这里要求 目录必须为空。为了方便使用，Go 中封装了一个 os.RemoveAll 函数： 1 func RemoveAll (path string ) error RemoveAll 删除 path 指定的文件，或目录及它包含的任何下级对象。它会尝试删除所有东西，除非遇到错误并返回。如果 path 指定的对象不 存在， RemoveAll 会返回 nil 而不返回错误。 RemoveAll 的内部实现逻辑如下： 调用 Remove 尝试进行删除，如果成功或返回 path 不存在，则直接返回 nil； 调用 Lstat 获取 path 信息，以便判断是否是目录。注意，这里使用 Lstat ，表示不对符号链接解引用； 调用 Open 打开目录，递归读取目录中内容，执行删除操作。 读目录 POSIX 与 SUS 定义了读取目录相关的 C 语言标准，各个操作系统提供的系统调用却不尽相同。Go 没有基于 C 语言，而是自己通过系统调用实现 了读目录功能。 1 func (f *File) Readdirnames (n int ) (names [] string , err error) Readdirnames 读取目录 f 的内容，返回一个最多有 n 个成员的 []string ，切片成员为目录中文件对象的名字，采用目录顺序。对本函数的下一 次调用会返回上一次调用未读取的内容的信息。 如果 n0 ， Readdirnames 函数会返回一个最多 n 个成员的切片。这时，如果 Readdirnames 返回一个空切片，它会返回一个非 nil 的错 误说明原因。如果到达了目录 f 的结尾，返回值 err 会是 io.EOF 。 如果 n=0 ， Readdirnames 函数返回目录中剩余所有文件对象的名字构成的切片。此时，如果 Readdirnames 调用成功（读取所有内容直到结尾）， 它会返回该切片和 nil 的错误值。如果在到达结尾前遇到错误，会返回之前成功读取的名字构成的切片和该错误。 1 func (f *File) Readdir (n int ) (fi []FileInfo, err error) Readdir 内部会调用 Readdirnames ，将得到的 names 构造路径，通过 Lstat 构造出 []FileInfo 。 ioutil.ReadDir 也可以实现类似的功能。"},"standards/os/os.html#os":{"title":"os","path":"\\golang-learn\\standards\\os\\os.html#os","body":"os &#x5305;&#x63D0;&#x4F9B;&#x4E86;&#x5E73;&#x53F0;&#x65E0;&#x5173;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x529F;&#x80FD;&#x63A5;&#x53E3;&#x3002;&#x4F8B;&#x5982; Linux&#x3001;macOS&#x3001;Windows &#x7B49;&#x7CFB;&#x7EDF; os &#x5305;&#x63D0;&#x4F9B;&#x7EDF;&#x4E00;&#x7684;&#x4F7F;&#x7528;&#x63A5;&#x53E3;&#x3002; &#x4F8B;&#x5B50;&#xFF0C;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5E76;&#x4ECE;&#x4E2D;&#x8BFB;&#x53D6;&#x4E00;&#x4E9B;&#x6570;&#x636E;&#xFF1A; 1 2 3 4 file, err := os.Open( file.go ) // For read access. if err != nil { \tlog.Fatal(err) // `open file.go: no such file or directory` }"},"standards/os/os.html#文件-I-O":{"title":"&#x6587;&#x4EF6; I/O","path":"\\golang-learn\\standards\\os\\os.html#文件-I-O","body":"&#x5728; Go &#x4E2D;&#xFF0C;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x5C01;&#x88C5;&#x5728; os.File &#x7ED3;&#x6784;&#x4E2D;&#xFF0C;&#x901A;&#x8FC7; File.Fd() &#x53EF;&#x4EE5;&#x83B7;&#x5F97;&#x5E95;&#x5C42;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF1A; fd &#x3002; &#x5927;&#x591A;&#x6570;&#x7A0B;&#x5E8F;&#x90FD;&#x671F;&#x671B;&#x80FD;&#x591F;&#x4F7F;&#x7528; 3 &#x79CD;&#x6807;&#x51C6;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF1A;0- &#x6807;&#x51C6;&#x8F93;&#x5165;&#xFF1B;1- &#x6807;&#x51C6;&#x8F93;&#x51FA;&#xFF1B;2- &#x6807;&#x51C6;&#x9519;&#x8BEF;&#x3002; os &#x5305;&#x63D0;&#x4F9B;&#x4E86; 3 &#x4E2A; File &#x5BF9;&#x8C61;&#xFF0C;&#x5206;&#x522B; &#x4EE3;&#x8868;&#x8FD9; 3 &#x79CD;&#x6807;&#x51C6;&#x63CF;&#x8FF0;&#x7B26;&#xFF1A; Stdin &#x3001; Stdout &#x548C; Stderr &#xFF0C;&#x5B83;&#x4EEC;&#x5BF9;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x540D;&#x5206;&#x522B;&#x662F;&#xFF1A; /dev/stdin &#x3001; /dev/stdout &#x548C; /dev/stderr &#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x91CC;&#x8BF4;&#x7684;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x5E76;&#x4E0D;&#x4E00;&#x5B9A;&#x5B58;&#x5728;&#xFF0C;&#x6BD4;&#x5982; Windows &#x4E0B;&#x5C31;&#x6CA1;&#x6709;&#x3002; OpenFile 1 func OpenFile (name string , flag int , perm FileMode) (*File, error) OpenFile &#x65E2;&#x80FD;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x4E5F;&#x80FD;&#x521B;&#x5EFA;&#x5E76;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x65B0;&#x6587;&#x4EF6;&#x3002; OpenFile &#x662F;&#x4E00;&#x4E2A;&#x66F4;&#x4E00;&#x822C;&#x6027;&#x7684;&#x6587;&#x4EF6;&#x6253;&#x5F00;&#x51FD;&#x6570;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x8C03;&#x7528;&#x8005;&#x90FD;&#x5E94;&#x7528; Open &#x6216; Create &#x4EE3;&#x66FF;&#x672C;&#x51FD;&#x6570;&#x3002;&#x5B83;&#x4F1A;&#x4F7F;&#x7528;&#x6307;&#x5B9A;&#x7684;&#x9009;&#x9879;&#xFF08;&#x5982; O_RDONLY &#x7B49;&#xFF09;&#x3001; &#x6307;&#x5B9A;&#x7684;&#x6A21;&#x5F0F;&#xFF08;&#x5982; 0666 &#x7B49;&#xFF09;&#x6253;&#x5F00;&#x6307;&#x5B9A;&#x540D;&#x79F0;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x5982;&#x679C;&#x64CD;&#x4F5C;&#x6210;&#x529F;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x6587;&#x4EF6;&#x5BF9;&#x8C61;&#x53EF;&#x7528;&#x4E8E; I/O&#x3002;&#x5982;&#x679C;&#x51FA;&#x9519;&#xFF0C;&#x9519;&#x8BEF;&#x5E95;&#x5C42;&#x7C7B;&#x578B;&#x662F; *PathError &#x3002; &#x8981;&#x6253;&#x5F00;&#x7684;&#x6587;&#x4EF6;&#x7531;&#x53C2;&#x6570; name &#x6307;&#x5B9A;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x662F;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x6216;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#xFF08;&#x76F8;&#x5BF9;&#x4E8E;&#x8FDB;&#x7A0B;&#x5F53;&#x524D;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#xFF09;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x4E2A;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#xFF08;&#x4F1A;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x89E3;&#x5F15;&#x7528;&#xFF09;&#x3002; &#x4F4D;&#x63A9;&#x7801;&#x53C2;&#x6570; flag &#x7528;&#x4E8E;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#x7684;&#x8BBF;&#x95EE;&#x6A21;&#x5F0F;&#xFF0C;&#x53EF;&#x7528;&#x7684;&#x503C;&#x5728; os &#x4E2D;&#x5B9A;&#x4E49;&#x4E3A;&#x5E38;&#x91CF;&#xFF08;&#x4EE5;&#x4E0B;&#x503C;&#x5E76;&#x975E;&#x6240;&#x6709;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x90FD;&#x53EF;&#x7528;&#xFF09;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 const ( O_RDONLY int = syscall.O_RDONLY // &#x53EA;&#x8BFB;&#x6A21;&#x5F0F;&#x6253;&#x5F00;&#x6587;&#x4EF6; O_WRONLY int = syscall.O_WRONLY // &#x53EA;&#x5199;&#x6A21;&#x5F0F;&#x6253;&#x5F00;&#x6587;&#x4EF6; O_RDWR int = syscall.O_RDWR // &#x8BFB;&#x5199;&#x6A21;&#x5F0F;&#x6253;&#x5F00;&#x6587;&#x4EF6; O_APPEND int = syscall.O_APPEND // &#x5199;&#x64CD;&#x4F5C;&#x65F6;&#x5C06;&#x6570;&#x636E;&#x9644;&#x52A0;&#x5230;&#x6587;&#x4EF6;&#x5C3E;&#x90E8; O_CREATE int = syscall.O_CREAT // &#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#x5C06;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x6587;&#x4EF6; O_EXCL int = syscall.O_EXCL // &#x548C; O_CREATE &#x914D;&#x5408;&#x4F7F;&#x7528;&#xFF0C;&#x6587;&#x4EF6;&#x5FC5;&#x987B;&#x4E0D;&#x5B58;&#x5728; O_SYNC int = syscall.O_SYNC // &#x6253;&#x5F00;&#x6587;&#x4EF6;&#x7528;&#x4E8E;&#x540C;&#x6B65; I/O O_TRUNC int = syscall.O_TRUNC // &#x5982;&#x679C;&#x53EF;&#x80FD;&#xFF0C;&#x6253;&#x5F00;&#x65F6;&#x6E05;&#x7A7A;&#x6587;&#x4EF6; ) &#x5176;&#x4E2D;&#xFF0C; O_RDONLY &#x3001; O_WRONLY &#x3001; O_RDWR &#x53EA;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x901A;&#x8FC7; | &#x64CD;&#x4F5C;&#x7B26;&#x6765;&#x6307;&#x5B9A;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x4F1A;&#x7ED9; flags &#x52A0;&#x4E0A; syscall.O_CLOEXEC &#xFF0C; &#x5728; fork &#x5B50;&#x8FDB;&#x7A0B;&#x65F6;&#x4F1A;&#x5173;&#x95ED;&#x901A;&#x8FC7; OpenFile &#x6253;&#x5F00;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x5373;&#x5B50;&#x8FDB;&#x7A0B;&#x4E0D;&#x4F1A;&#x91CD;&#x7528;&#x8BE5;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x3002; &#x4F4D;&#x63A9;&#x7801;&#x53C2;&#x6570; perm &#x6307;&#x5B9A;&#x4E86;&#x6587;&#x4EF6;&#x7684;&#x6A21;&#x5F0F;&#x548C;&#x6743;&#x9650;&#x4F4D;&#xFF0C;&#x7C7B;&#x578B;&#x662F; os.FileMode &#xFF0C;&#x6587;&#x4EF6;&#x6A21;&#x5F0F;&#x4F4D;&#x5E38;&#x91CF;&#x5B9A;&#x4E49;&#x5728; os &#x4E2D;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 const ( // &#x5355;&#x5B57;&#x7B26;&#x662F;&#x88AB; String &#x65B9;&#x6CD5;&#x7528;&#x4E8E;&#x683C;&#x5F0F;&#x5316;&#x7684;&#x5C5E;&#x6027;&#x7F29;&#x5199;&#x3002; ModeDir FileMode = 1  ( 32 - 1 - iota ) // d: &#x76EE;&#x5F55; ModeAppend // a: &#x53EA;&#x80FD;&#x5199;&#x5165;&#xFF0C;&#x4E14;&#x53EA;&#x80FD;&#x5199;&#x5165;&#x5230;&#x672B;&#x5C3E; ModeExclusive // l: &#x7528;&#x4E8E;&#x6267;&#x884C; ModeTemporary // T: &#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF08;&#x975E;&#x5907;&#x4EFD;&#x6587;&#x4EF6;&#xFF09; ModeSymlink // L: &#x7B26;&#x53F7;&#x94FE;&#x63A5;&#xFF08;&#x4E0D;&#x662F;&#x5FEB;&#x6377;&#x65B9;&#x5F0F;&#x6587;&#x4EF6;&#xFF09; ModeDevice // D: &#x8BBE;&#x5907; ModeNamedPipe // p: &#x547D;&#x540D;&#x7BA1;&#x9053;&#xFF08;FIFO&#xFF09; ModeSocket // S: Unix &#x57DF; socket ModeSetuid // u: &#x8868;&#x793A;&#x6587;&#x4EF6;&#x5177;&#x6709;&#x5176;&#x521B;&#x5EFA;&#x8005;&#x7528;&#x6237; id &#x6743;&#x9650; ModeSetgid // g: &#x8868;&#x793A;&#x6587;&#x4EF6;&#x5177;&#x6709;&#x5176;&#x521B;&#x5EFA;&#x8005;&#x7EC4; id &#x7684;&#x6743;&#x9650; ModeCharDevice // c: &#x5B57;&#x7B26;&#x8BBE;&#x5907;&#xFF0C;&#x9700;&#x5DF2;&#x8BBE;&#x7F6E; ModeDevice ModeSticky // t: &#x53EA;&#x6709; root/ &#x521B;&#x5EFA;&#x8005;&#x80FD;&#x5220;&#x9664; / &#x79FB;&#x52A8;&#x6587;&#x4EF6; // &#x8986;&#x76D6;&#x6240;&#x6709;&#x7C7B;&#x578B;&#x4F4D;&#xFF08;&#x7528;&#x4E8E;&#x901A;&#x8FC7; &amp; &#x83B7;&#x53D6;&#x7C7B;&#x578B;&#x4F4D;&#xFF09;&#xFF0C;&#x5BF9;&#x666E;&#x901A;&#x6587;&#x4EF6;&#xFF0C;&#x6240;&#x6709;&#x8FD9;&#x4E9B;&#x4F4D;&#x90FD;&#x4E0D;&#x5E94;&#x88AB;&#x8BBE;&#x7F6E; ModeType = ModeDir | ModeSymlink | ModeNamedPipe | ModeSocket | ModeDevice ModePerm FileMode = 0777 // &#x8986;&#x76D6;&#x6240;&#x6709; Unix &#x6743;&#x9650;&#x4F4D;&#xFF08;&#x7528;&#x4E8E;&#x901A;&#x8FC7; &amp; &#x83B7;&#x53D6;&#x7C7B;&#x578B;&#x4F4D;&#xFF09; ) &#x4EE5;&#x4E0A;&#x5E38;&#x91CF;&#x5728;&#x6240;&#x6709;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x90FD;&#x6709;&#x76F8;&#x540C;&#x7684;&#x542B;&#x4E49;&#xFF08;&#x53EF;&#x7528;&#x65F6;&#xFF09;&#xFF0C;&#x56E0;&#x6B64;&#x6587;&#x4EF6;&#x7684;&#x4FE1;&#x606F;&#x53EF;&#x4EE5;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E4B;&#x95F4;&#x5B89;&#x5168;&#x7684;&#x79FB;&#x690D;&#x3002;&#x4E0D;&#x662F;&#x6240;&#x6709;&#x7684;&#x4F4D;&#x90FD;&#x80FD;&#x7528;&#x4E8E;&#x6240;&#x6709;&#x7684;&#x7CFB;&#x7EDF;&#xFF0C; &#x552F;&#x4E00;&#x5171;&#x6709;&#x7684;&#x662F;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x76EE;&#x5F55;&#x7684; ModeDir &#x4F4D;&#x3002; &#x4EE5;&#x4E0A;&#x8FD9;&#x4E9B;&#x88AB;&#x5B9A;&#x4E49;&#x7684;&#x4F4D;&#x662F; FileMode &#x6700;&#x91CD;&#x8981;&#x7684;&#x4F4D;&#x3002;&#x53E6;&#x5916; 9 &#x4E2A;&#x4F4D;&#xFF08;&#x6743;&#x9650;&#x4F4D;&#xFF09;&#x4E3A;&#x6807;&#x51C6; Unix rwxrwxrwx &#x6743;&#x9650;&#xFF08;&#x6240;&#x6709;&#x4EBA;&#x90FD;&#x53EF;&#x8BFB;&#x3001;&#x5199;&#x3001;&#x8FD0;&#x884C;&#xFF09;&#x3002; FileMode &#x8FD8;&#x5B9A;&#x4E49;&#x4E86;&#x51E0;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x7528;&#x4E8E;&#x5224;&#x65AD;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x7684; IsDir() &#x548C; IsRegular() &#xFF0C;&#x7528;&#x4E8E;&#x83B7;&#x53D6;&#x6743;&#x9650;&#x7684; Perm() &#x3002; &#x8FD4;&#x56DE;&#x7684; error &#xFF0C;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#x662F; *os.PathError &#xFF0C;&#x5B83;&#x4F1A;&#x8BB0;&#x5F55;&#x5177;&#x4F53;&#x64CD;&#x4F5C;&#x3001;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x548C;&#x9519;&#x8BEF;&#x539F;&#x56E0;&#x3002; &#x53E6;&#x5916;&#xFF0C;&#x5728; OpenFile &#x5185;&#x90E8;&#x4F1A;&#x8C03;&#x7528; NewFile &#xFF0C;&#x6765;&#x5F97;&#x5230; File &#x5BF9;&#x8C61;&#x3002; &#x4F7F;&#x7528;&#x65B9;&#x6CD5; &#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x4E00;&#x822C;&#x901A;&#x8FC7; Open &#x6216; Create &#xFF0C;&#x8FD9;&#x4E24;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x5B9E;&#x73B0;&#x3002; 1 2 3 4 5 6 7 func Open (name string ) (*File, error) { \t return OpenFile(name, O_RDONLY, 0 ) } func Create (name string ) (*File, error) { \t return OpenFile(name, O_RDWR|O_CREATE|O_TRUNC, 0666 ) } Read 1 func (f *File) Read (b [] byte ) (n int , err error) Read &#x65B9;&#x6CD5;&#x4ECE; f &#x4E2D;&#x8BFB;&#x53D6;&#x6700;&#x591A; len(b) &#x5B57;&#x8282;&#x6570;&#x636E;&#x5E76;&#x5199;&#x5165; b &#x3002;&#x5B83;&#x8FD4;&#x56DE;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x6570;&#x548C;&#x53EF;&#x80FD;&#x9047;&#x5230;&#x7684;&#x4EFB;&#x4F55;&#x9519;&#x8BEF;&#x3002;&#x6587;&#x4EF6;&#x7EC8;&#x6B62;&#x6807;&#x5FD7;&#x662F;&#x8BFB;&#x53D6; 0 &#x4E2A;&#x5B57;&#x8282;&#x4E14;&#x8FD4;&#x56DE; &#x503C; err &#x4E3A; io.EOF &#x3002; &#x5BF9;&#x6BD4;&#x4E0B; ReadAt &#x65B9;&#x6CD5;&#xFF1A; 1 func (f *File) ReadAt (b [] byte , off int64 ) (n int , err error) ReadAt &#x4ECE;&#x6307;&#x5B9A;&#x7684;&#x4F4D;&#x7F6E;&#xFF08;&#x76F8;&#x5BF9;&#x4E8E;&#x6587;&#x4EF6;&#x5F00;&#x59CB;&#x4F4D;&#x7F6E;&#xFF09;&#x8BFB;&#x53D6;&#x957F;&#x5EA6;&#x4E3A; len(b) &#x4E2A;&#x5B57;&#x8282;&#x6570;&#x636E;&#x5E76;&#x5199;&#x5165; b &#x3002;&#x5B83;&#x8FD4;&#x56DE;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x6570;&#x548C;&#x53EF;&#x80FD;&#x9047;&#x5230;&#x7684;&#x4EFB;&#x4F55;&#x9519;&#x8BEF;&#x3002; &#x5F53; nlen(b) &#x65F6;&#xFF0C;&#x672C;&#x65B9;&#x6CD5;&#x603B;&#x662F;&#x4F1A;&#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#xFF1B;&#x5982;&#x679C;&#x662F;&#x56E0;&#x4E3A;&#x5230;&#x8FBE;&#x6587;&#x4EF6;&#x7ED3;&#x5C3E;&#xFF0C;&#x8FD4;&#x56DE;&#x503C; err &#x4F1A;&#x662F; io.EOF &#x3002;&#x5B83;&#x5BF9;&#x5E94;&#x7684;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x662F; pread &#x3002; Read &#x548C; ReadAt &#x7684;&#x533A;&#x522B; &#xFF1A;&#x524D;&#x8005;&#x4ECE;&#x6587;&#x4EF6;&#x5F53;&#x524D;&#x504F;&#x79FB;&#x91CF;&#x5904;&#x8BFB;&#xFF0C;&#x4E14;&#x4F1A;&#x6539;&#x53D8;&#x6587;&#x4EF6;&#x5F53;&#x524D;&#x7684;&#x504F;&#x79FB;&#x91CF;&#xFF1B;&#x800C;&#x540E;&#x8005;&#x4ECE; off &#x6307;&#x5B9A;&#x7684;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;&#x8BFB;&#xFF0C;&#x4E14; &#x4E0D;&#x4F1A;&#x6539;&#x53D8; &#x6587;&#x4EF6; &#x5F53;&#x524D;&#x504F;&#x79FB;&#x91CF;&#x3002; Write 1 func (f *File) Write (b [] byte ) (n int , err error) Write &#x5411;&#x6587;&#x4EF6;&#x4E2D;&#x5199;&#x5165; len(b) &#x5B57;&#x8282;&#x6570;&#x636E;&#x3002;&#x5B83;&#x8FD4;&#x56DE;&#x5199;&#x5165;&#x7684;&#x5B57;&#x8282;&#x6570;&#x548C;&#x53EF;&#x80FD;&#x9047;&#x5230;&#x7684;&#x4EFB;&#x4F55;&#x9519;&#x8BEF;&#x3002;&#x5982;&#x679C;&#x8FD4;&#x56DE;&#x503C; n != len(b) &#xFF0C;&#x672C;&#x65B9;&#x6CD5;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; &#x975E; nil &#x7684;&#x9519;&#x8BEF;&#x3002; Write &#x4E0E; WriteAt &#x7684;&#x533A;&#x522B;&#x540C; Read &#x4E0E; ReadAt &#x7684;&#x533A;&#x522B;&#x4E00;&#x6837;&#x3002;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#xFF0C;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86; WriteString &#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x5B9E;&#x9645;&#x662F;&#x5BF9; Write &#x7684;&#x5C01;&#x88C5;&#x3002; &#x6CE8;&#x610F;&#xFF1A; Write &#x8C03;&#x7528;&#x6210;&#x529F;&#x5E76;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x6570;&#x636E;&#x5DF2;&#x7ECF;&#x5199;&#x5165;&#x78C1;&#x76D8;&#xFF0C;&#x56E0;&#x4E3A;&#x5185;&#x6838;&#x4F1A;&#x7F13;&#x5B58;&#x78C1;&#x76D8;&#x7684; I/O &#x64CD;&#x4F5C;&#x3002;&#x5982;&#x679C;&#x5E0C;&#x671B;&#x7ACB;&#x523B;&#x5C06;&#x6570;&#x636E;&#x5199;&#x5165;&#x78C1;&#x76D8;&#xFF08;&#x4E00;&#x822C;&#x573A;&#x666F;&#x4E0D;&#x5EFA;&#x8BAE;&#x8FD9;&#x4E48;&#x505A;&#xFF0C;&#x56E0;&#x4E3A;&#x4F1A; &#x5F71;&#x54CD;&#x6027;&#x80FD;&#xFF09;&#xFF0C;&#x6709;&#x4E24;&#x79CD;&#x529E;&#x6CD5;&#xFF1A; &#x6253;&#x5F00;&#x6587;&#x4EF6;&#x65F6;&#x6307;&#x5B9A; os.O_SYNC &#xFF1B; &#x8C03;&#x7528; File.Sync() &#x65B9;&#x6CD5;&#x3002; &#x8BF4;&#x660E;&#xFF1A; File.Sync() &#x5E95;&#x5C42;&#x8C03;&#x7528;&#x7684;&#x662F; fsync &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF0C;&#x8FD9;&#x4F1A;&#x5C06;&#x6570;&#x636E;&#x548C;&#x5143;&#x6570;&#x636E;&#x90FD;&#x5237;&#x5230;&#x78C1;&#x76D8;&#xFF1B;&#x5982;&#x679C;&#x53EA;&#x60F3;&#x5237;&#x6570;&#x636E;&#x5230;&#x78C1;&#x76D8;&#xFF08;&#x6BD4;&#x5982;&#xFF0C;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x6CA1;&#x53D8;&#xFF0C;&#x53EA;&#x662F;&#x53D8;&#x4E86;&#x6587;&#x4EF6; &#x6570;&#x636E;&#xFF09;&#xFF0C;&#x9700;&#x8981;&#x81EA;&#x5DF1;&#x5C01;&#x88C5;&#xFF0C;&#x8C03;&#x7528; fdatasync &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x3002;&#xFF08; syscall.Fdatasync &#xFF09; Close 1 func (f *File) Close () error close() &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x5173;&#x95ED;&#x4E00;&#x4E2A;&#x6253;&#x5F00;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x5E76;&#x5C06;&#x5176;&#x91CA;&#x653E;&#x56DE;&#x8C03;&#x7528;&#x8FDB;&#x7A0B;&#xFF0C;&#x4F9B;&#x8BE5;&#x8FDB;&#x7A0B;&#x7EE7;&#x7EED;&#x4F7F;&#x7528;&#x3002;&#x5F53;&#x8FDB;&#x7A0B;&#x7EC8;&#x6B62;&#x65F6;&#xFF0C;&#x5C06;&#x81EA;&#x52A8;&#x5173;&#x95ED;&#x5176;&#x5DF2;&#x6253;&#x5F00;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x3002; os.File.Close() &#x662F;&#x5BF9; close() &#x7684;&#x5C01;&#x88C5;&#x3002;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x662F;&#x8D44;&#x6E90;&#xFF0C;Go &#x7684; gc &#x662F;&#x9488;&#x5BF9;&#x5185;&#x5B58;&#x7684;&#xFF0C;&#x5E76;&#x4E0D;&#x4F1A;&#x81EA;&#x52A8;&#x56DE;&#x6536;&#x8D44;&#x6E90;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x5173;&#x95ED;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C; &#x957F;&#x671F;&#x8FD0;&#x884C;&#x7684;&#x670D;&#x52A1;&#x53EF;&#x80FD;&#x4F1A;&#x628A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x8017;&#x5C3D;&#x3002; &#x6240;&#x4EE5;&#xFF0C;&#x901A;&#x5E38;&#x7684;&#x5199;&#x6CD5;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 file, err := os.Open( /tmp/studygolang.txt ) if err != nil { \t // &#x9519;&#x8BEF;&#x5904;&#x7406;&#xFF0C;&#x4E00;&#x822C;&#x4F1A;&#x963B;&#x6B62;&#x7A0B;&#x5E8F;&#x5F80;&#x4E0B;&#x6267;&#x884C; \t return } defer file.Close() &#x5173;&#x4E8E;&#x8FD4;&#x56DE;&#x503C; error &#x4EE5;&#x4E0B;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#x4F1A;&#x5BFC;&#x81F4; Close &#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#xFF1A; &#x5173;&#x95ED;&#x4E00;&#x4E2A;&#x672A;&#x6253;&#x5F00;&#x7684;&#x6587;&#x4EF6;&#xFF1B; &#x4E24;&#x6B21;&#x5173;&#x95ED;&#x540C;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF1B; &#x901A;&#x5E38;&#xFF0C;&#x4E0D;&#x4F1A;&#x53BB;&#x68C0;&#x67E5; Close &#x7684;&#x9519;&#x8BEF;&#x3002; Seek &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x6253;&#x5F00;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x7CFB;&#x7EDF;&#x5185;&#x6838;&#x4F1A;&#x8BB0;&#x5F55;&#x5176;&#x6587;&#x4EF6;&#x504F;&#x79FB;&#x91CF;&#xFF0C;&#x6709;&#x65F6;&#x4E5F;&#x5C06;&#x6587;&#x4EF6;&#x504F;&#x79FB;&#x91CF;&#x79F0;&#x4E3A;&#x8BFB;&#x5199;&#x504F;&#x79FB;&#x91CF;&#x6216;&#x6307;&#x9488;&#x3002;&#x6587;&#x4EF6;&#x504F;&#x79FB;&#x91CF;&#x662F;&#x6307;&#x6267;&#x884C;&#x4E0B;&#x4E00;&#x4E2A; Read &#x6216; Write &#x64CD;&#x4F5C; &#x7684;&#x6587;&#x4EF6;&#x771F;&#x5B9E;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F1A;&#x4EE5;&#x76F8;&#x5BF9;&#x4E8E;&#x6587;&#x4EF6;&#x5934;&#x90E8;&#x8D77;&#x59CB;&#x70B9;&#x7684;&#x6587;&#x4EF6;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#x6765;&#x8868;&#x793A;&#x3002;&#x6587;&#x4EF6;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x504F;&#x79FB;&#x91CF;&#x4E3A; 0&#x3002; &#x6587;&#x4EF6;&#x6253;&#x5F00;&#x65F6;&#xFF0C;&#x4F1A;&#x5C06;&#x6587;&#x4EF6;&#x504F;&#x79FB;&#x91CF;&#x8BBE;&#x7F6E;&#x4E3A;&#x6307;&#x5411;&#x6587;&#x4EF6;&#x5F00;&#x59CB;&#xFF0C;&#x4EE5;&#x540E;&#x6BCF;&#x6B21; Read &#x6216; Write &#x8C03;&#x7528;&#x5C06;&#x81EA;&#x52A8;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x8C03;&#x6574;&#xFF0C;&#x4EE5;&#x6307;&#x5411;&#x5DF2;&#x8BFB;&#x6216;&#x5DF2;&#x5199;&#x6570;&#x636E;&#x540E;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x3002;&#x56E0; &#x6B64;&#xFF0C;&#x8FDE;&#x7EED;&#x7684; Read &#x548C; Write &#x8C03;&#x7528;&#x5C06;&#x6309;&#x987A;&#x5E8F;&#x9012;&#x8FDB;&#xFF0C;&#x5BF9;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x3002; Seek &#x53EF;&#x4EE5;&#x8C03;&#x6574;&#x6587;&#x4EF6;&#x504F;&#x79FB;&#x91CF;&#xFF1A; 1 func (f *File) Seek (offset int64 , whence int ) (ret int64 , err error) Seek &#x8BBE;&#x7F6E;&#x4E0B;&#x4E00;&#x6B21;&#x8BFB;/&#x5199;&#x7684;&#x4F4D;&#x7F6E;&#x3002; offset &#x4E3A;&#x76F8;&#x5BF9;&#x504F;&#x79FB;&#x91CF;&#xFF0C;&#x800C; whence &#x51B3;&#x5B9A;&#x76F8;&#x5BF9;&#x4F4D;&#x7F6E;&#xFF1A;0 &#x4E3A;&#x76F8;&#x5BF9;&#x6587;&#x4EF6;&#x5F00;&#x5934;&#xFF0C;1 &#x4E3A;&#x76F8;&#x5BF9;&#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#xFF0C;2 &#x4E3A;&#x76F8;&#x5BF9;&#x6587;&#x4EF6;&#x7ED3;&#x5C3E;&#x3002;&#x5B83; &#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x504F;&#x79FB;&#x91CF;&#xFF08;&#x76F8;&#x5BF9;&#x5F00;&#x5934;&#xFF09;&#x548C;&#x53EF;&#x80FD;&#x7684;&#x9519;&#x8BEF;&#x3002; &#x6CE8;&#x610F;&#xFF1A; Seek &#x53EA;&#x662F;&#x8C03;&#x6574;&#x5185;&#x6838;&#x4E2D;&#x4E0E;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x76F8;&#x5173;&#x7684;&#x6587;&#x4EF6;&#x504F;&#x79FB;&#x91CF;&#x8BB0;&#x5F55;&#xFF0C;&#x5E76;&#x6CA1;&#x6709;&#x8BBF;&#x95EE;&#x4EFB;&#x4F55;&#x7269;&#x7406;&#x8BBE;&#x5907;&#x3002; &#x4E00;&#x4E9B; Seek &#x7684;&#x4F7F;&#x7528;&#x4F8B;&#x5B50;&#xFF08;file &#x4E3A;&#x6253;&#x5F00;&#x7684;&#x6587;&#x4EF6;&#x5BF9;&#x8C61;&#xFF09;&#xFF0C;&#x6CE8;&#x91CA;&#x8BF4;&#x660E;&#x4E86;&#x5C06;&#x6587;&#x4EF6;&#x504F;&#x79FB;&#x91CF;&#x79FB;&#x52A8;&#x5230;&#x7684;&#x5177;&#x4F53;&#x4F4D;&#x7F6E;&#xFF1A; 1 2 3 4 5 file.Seek( 0 , os.SEEK_SET)\t // &#x6587;&#x4EF6;&#x5F00;&#x59CB;&#x5904; file.Seek( 0 , SEEK_END)\t\t // &#x6587;&#x4EF6;&#x7ED3;&#x5C3E;&#x5904;&#x7684;&#x4E0B;&#x4E00;&#x4E2A;&#x5B57;&#x8282; file.Seek( -1 , SEEK_END)\t\t // &#x6587;&#x4EF6;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5B57;&#x8282; file.Seek( -10 , SEEK_CUR) \t // &#x5F53;&#x524D;&#x4F4D;&#x7F6E;&#x524D; 10 &#x4E2A;&#x5B57;&#x8282; file.Seek( 1000 , SEEK_END)\t // &#x6587;&#x4EF6;&#x7ED3;&#x5C3E;&#x5904;&#x7684;&#x4E0B; 1001 &#x4E2A;&#x5B57;&#x8282; &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#x5728;&#x6587;&#x4EF6;&#x4E2D;&#x4F1A;&#x4EA7;&#x751F;&#x201C;&#x7A7A;&#x6D1E;&#x201D;&#x3002; Seek &#x5BF9;&#x5E94;&#x7CFB;&#x7EDF;&#x8C03;&#x7528; lseek &#x3002;&#x8BE5;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x5E76;&#x4E0D;&#x9002;&#x7528;&#x4E8E;&#x6240;&#x6709;&#x7C7B;&#x578B;&#xFF0C;&#x4E0D;&#x5141;&#x8BB8;&#x5C06; lseek &#x5E94;&#x7528;&#x4E8E;&#x7BA1;&#x9053;&#x3001;FIFO&#x3001;socket &#x6216; &#x7EC8;&#x7AEF;&#x3002;"},"standards/os/os.html#截断文件":{"title":"&#x622A;&#x65AD;&#x6587;&#x4EF6;","path":"\\golang-learn\\standards\\os\\os.html#截断文件","body":"trucate &#x548C; ftruncate &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x5C06;&#x6587;&#x4EF6;&#x5927;&#x5C0F;&#x8BBE;&#x7F6E;&#x4E3A; size &#x53C2;&#x6570;&#x6307;&#x5B9A;&#x7684;&#x503C;&#xFF1B;Go &#x8BED;&#x8A00;&#x4E2D;&#x76F8;&#x5E94;&#x7684;&#x5305;&#x88C5;&#x51FD;&#x6570;&#x662F; os.Truncate &#x548C; os.File.Truncate &#x3002; 1 2 func Truncate (name string , size int64 ) error func (f *File) Truncate (size int64 ) error &#x5982;&#x679C;&#x6587;&#x4EF6;&#x5F53;&#x524D;&#x957F;&#x5EA6;&#x5927;&#x4E8E;&#x53C2;&#x6570; size &#xFF0C;&#x8C03;&#x7528;&#x5C06;&#x4E22;&#x5F03;&#x8D85;&#x51FA;&#x90E8;&#x5206;&#xFF0C;&#x82E5;&#x5C0F;&#x4E8E;&#x53C2;&#x6570; size &#xFF0C;&#x8C03;&#x7528;&#x5C06;&#x5728;&#x6587;&#x4EF6;&#x5C3E;&#x90E8;&#x6DFB;&#x52A0;&#x4E00;&#x7CFB;&#x5217;&#x7A7A;&#x5B57;&#x8282;&#x6216;&#x662F;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x7A7A;&#x6D1E;&#x3002; &#x5B83;&#x4EEC;&#x4E4B;&#x95F4;&#x7684;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x5982;&#x4F55;&#x6307;&#x5B9A;&#x64CD;&#x4F5C;&#x6587;&#x4EF6;&#xFF1A; Truncate &#x4EE5;&#x8DEF;&#x5F84;&#x540D;&#x79F0;&#x5B57;&#x7B26;&#x4E32;&#x6765;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x8981;&#x6C42;&#x53EF;&#x8BBF;&#x95EE;&#x8BE5;&#x6587;&#x4EF6;&#xFF08;&#x5373;&#x5BF9;&#x7EC4;&#x6210;&#x8DEF;&#x5F84;&#x540D;&#x7684;&#x5404;&#x76EE;&#x5F55;&#x62E5;&#x6709;&#x53EF;&#x6267;&#x884C; (x) &#x6743;&#x9650;&#xFF09;&#xFF0C;&#x4E14;&#x5BF9;&#x6587;&#x4EF6;&#x62E5;&#x6709;&#x5199;&#x6743;&#x9650;&#x3002; &#x82E5;&#x6587;&#x4EF6;&#x540D;&#x4E3A;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#xFF0C;&#x90A3;&#x4E48;&#x8C03;&#x7528;&#x5C06;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x89E3;&#x5F15;&#x7528;&#x3002; &#x5F88;&#x660E;&#x663E;&#xFF0C;&#x8C03;&#x7528; File.Truncate &#x524D;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x4EE5;&#x53EF;&#x5199;&#x65B9;&#x5F0F;&#x6253;&#x5F00;&#x64CD;&#x4F5C;&#x6587;&#x4EF6;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x4E0D;&#x4F1A;&#x4FEE;&#x6539;&#x6587;&#x4EF6;&#x504F;&#x79FB;&#x91CF;&#x3002;"},"standards/os/os.html#文件属性":{"title":"&#x6587;&#x4EF6;&#x5C5E;&#x6027;","path":"\\golang-learn\\standards\\os\\os.html#文件属性","body":"&#x6587;&#x4EF6;&#x5C5E;&#x6027;&#xFF0C;&#x4E5F;&#x5373;&#x6587;&#x4EF6;&#x5143;&#x6570;&#x636E;&#x3002;&#x5728; Go &#x4E2D;&#xFF0C;&#x6587;&#x4EF6;&#x5C5E;&#x6027;&#x5177;&#x4F53;&#x4FE1;&#x606F;&#x901A;&#x8FC7; os.FileInfo &#x63A5;&#x53E3;&#x83B7;&#x53D6;&#x3002;&#x51FD;&#x6570; Stat &#x3001; Lstat &#x548C; File.Stat &#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x8BE5;&#x63A5;&#x53E3; &#x7684;&#x5B9E;&#x4F8B;&#x3002;&#x8FD9;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#x5BF9;&#x5E94;&#x4E09;&#x4E2A;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF1A; stat &#x3001; lstat &#x548C; fstat &#x3002; &#x8FD9;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x533A;&#x522B;&#xFF1A; stat &#x4F1A;&#x8FD4;&#x56DE;&#x6240;&#x547D;&#x540D;&#x6587;&#x4EF6;&#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x3002; lstat &#x4E0E; stat &#x7C7B;&#x4F3C;&#xFF0C;&#x533A;&#x522B;&#x5728;&#x4E8E;&#x5982;&#x679C;&#x6587;&#x4EF6;&#x662F;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#xFF0C;&#x90A3;&#x4E48;&#x6240;&#x8FD4;&#x56DE;&#x7684;&#x4FE1;&#x606F;&#x9488;&#x5BF9;&#x7684;&#x662F;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#x81EA;&#x8EAB;&#xFF08;&#x800C;&#x975E;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#x6240;&#x6307;&#x5411;&#x7684;&#x6587;&#x4EF6;&#xFF09;&#x3002; fstat &#x5219;&#x4F1A;&#x8FD4;&#x56DE;&#x7531;&#x67D0;&#x4E2A;&#x6253;&#x5F00;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF08;Go &#x4E2D;&#x5219;&#x662F;&#x5F53;&#x524D;&#x6253;&#x5F00;&#x6587;&#x4EF6; File&#xFF09;&#x6240;&#x6307;&#x4EE3;&#x6587;&#x4EF6;&#x7684;&#x76F8;&#x5173;&#x4FE1;&#x606F;&#x3002; Stat &#x548C; Lstat &#x65E0;&#x9700;&#x5BF9;&#x5176;&#x6240;&#x64CD;&#x4F5C;&#x7684;&#x6587;&#x4EF6;&#x672C;&#x8EAB;&#x62E5;&#x6709;&#x4EFB;&#x4F55;&#x6743;&#x9650;&#xFF0C;&#x4F46;&#x9488;&#x5BF9;&#x6307;&#x5B9A; name &#x7684;&#x7236;&#x76EE;&#x5F55;&#x8981;&#x6709;&#x6267;&#x884C;&#xFF08;&#x641C;&#x7D22;&#xFF09;&#x6743;&#x9650;&#x3002;&#x800C;&#x53EA;&#x8981; File &#x5BF9;&#x8C61; ok &#xFF0C; File.Stat &#x603B;&#x662F;&#x6210;&#x529F;&#x3002; FileInfo &#x63A5;&#x53E3;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 type FileInfo interface { Name() string // &#x6587;&#x4EF6;&#x7684;&#x540D;&#x5B57;&#xFF08;&#x4E0D;&#x542B;&#x6269;&#x5C55;&#x540D;&#xFF09; Size() int64 // &#x666E;&#x901A;&#x6587;&#x4EF6;&#x8FD4;&#x56DE;&#x503C;&#x8868;&#x793A;&#x5176;&#x5927;&#x5C0F;&#xFF1B;&#x5176;&#x4ED6;&#x6587;&#x4EF6;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x542B;&#x4E49;&#x5404;&#x7CFB;&#x7EDF;&#x4E0D;&#x540C; Mode() FileMode // &#x6587;&#x4EF6;&#x7684;&#x6A21;&#x5F0F;&#x4F4D; ModTime() time.Time // &#x6587;&#x4EF6;&#x7684;&#x4FEE;&#x6539;&#x65F6;&#x95F4; IsDir() bool // &#x7B49;&#x4EF7;&#x4E8E; Mode().IsDir() Sys() interface {} // &#x5E95;&#x5C42;&#x6570;&#x636E;&#x6765;&#x6E90;&#xFF08;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE; nil&#xFF09; } Sys() &#x5E95;&#x5C42;&#x6570;&#x636E;&#x7684; C &#x8BED;&#x8A00; &#x7ED3;&#x6784; statbuf &#x683C;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 struct stat { \tdev_t\tst_dev;\t // &#x8BBE;&#x5907; ID \tino_t\tst_ino;\t // &#x6587;&#x4EF6; i &#x8282;&#x70B9;&#x53F7; \tmode_t\tst_mode;\t // &#x4F4D;&#x63A9;&#x7801;&#xFF0C;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x548C;&#x6587;&#x4EF6;&#x6743;&#x9650; \tnlink_t\tst_nlink;\t // &#x786C;&#x94FE;&#x63A5;&#x6570; \tuid_t\tst_uid;\t // &#x6587;&#x4EF6;&#x5C5E;&#x4E3B;&#xFF0C;&#x7528;&#x6237; ID \tgid_t\tst_gid;\t // &#x6587;&#x4EF6;&#x5C5E;&#x7EC4;&#xFF0C;&#x7EC4; ID \tdev_t\tst_rdev;\t // &#x5982;&#x679C;&#x9488;&#x5BF9;&#x8BBE;&#x5907; i &#x8282;&#x70B9;&#xFF0C;&#x5219;&#x6B64;&#x5B57;&#x6BB5;&#x5305;&#x542B;&#x4E3B;&#x3001;&#x8F85; ID \toff_t\tst_size;\t // &#x5E38;&#x89C4;&#x6587;&#x4EF6;&#xFF0C;&#x5219;&#x662F;&#x6587;&#x4EF6;&#x5B57;&#x8282;&#x6570;&#xFF1B;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#xFF0C;&#x5219;&#x662F;&#x94FE;&#x63A5;&#x6240;&#x6307;&#x8DEF;&#x5F84;&#x540D;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x5B57;&#x8282;&#x4E3A;&#x5355;&#x4F4D;&#xFF1B;&#x5BF9;&#x4E8E;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x5BF9;&#x8C61;&#xFF0C;&#x5219;&#x662F;&#x5BF9;&#x8C61;&#x5927;&#x5C0F; \tblksize_t\tst_blsize;\t // &#x5206;&#x914D;&#x7ED9;&#x6587;&#x4EF6;&#x7684;&#x603B;&#x5757;&#x6570;&#xFF0C;&#x5757;&#x5927;&#x5C0F;&#x4E3A; 512 &#x5B57;&#x8282; \tblkcnt_t\tst_blocks;\t // &#x5B9E;&#x9645;&#x5206;&#x914D;&#x7ED9;&#x6587;&#x4EF6;&#x7684;&#x78C1;&#x76D8;&#x5757;&#x6570;&#x91CF; \ttime_t\tst_atime;\t\t // &#x5BF9;&#x6587;&#x4EF6;&#x4E0A;&#x6B21;&#x8BBF;&#x95EE;&#x65F6;&#x95F4; \ttime_t\tst_mtime;\t\t // &#x5BF9;&#x6587;&#x4EF6;&#x4E0A;&#x6B21;&#x4FEE;&#x6539;&#x65F6;&#x95F4; \ttime_t\tst_ctime;\t\t // &#x6587;&#x4EF6;&#x72B6;&#x6001;&#x53D1;&#x751F;&#x6539;&#x53D8;&#x7684;&#x4E0A;&#x6B21;&#x65F6;&#x95F4; } Go &#x4E2D; syscal.Stat_t &#x4E0E;&#x8BE5;&#x7ED3;&#x6784;&#x5BF9;&#x5E94;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x8981;&#x83B7;&#x53D6; FileInfo &#x63A5;&#x53E3;&#x6CA1;&#x6CD5;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x6BD4;&#x5982;&#x60F3;&#x83B7;&#x53D6;&#x6587;&#x4EF6;&#x7684;&#x4E0A;&#x6B21;&#x8BBF;&#x95EE;&#x65F6;&#x95F4;&#xFF0C;&#x793A;&#x4F8B;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 fileInfo, err := os.Stat( test.log ) if err != nil { \tlog.Fatal(err) } sys := fileInfo.Sys() stat := sys.(*syscall.Stat_t) fmt.Println(time.Unix(stat.Atimespec.Unix())) &#x6539;&#x53D8;&#x6587;&#x4EF6;&#x65F6;&#x95F4;&#x6233; &#x53EF;&#x4EE5;&#x663E;&#x5F0F;&#x6539;&#x53D8;&#x6587;&#x4EF6;&#x7684;&#x8BBF;&#x95EE;&#x65F6;&#x95F4;&#x548C;&#x4FEE;&#x6539;&#x65F6;&#x95F4;&#x3002; 1 func Chtimes (name string , atime time.Time, mtime time.Time) error Chtimes &#x4FEE;&#x6539; name &#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#x5BF9;&#x8C61;&#x7684;&#x8BBF;&#x95EE;&#x65F6;&#x95F4;&#x548C;&#x4FEE;&#x6539;&#x65F6;&#x95F4;&#xFF0C;&#x7C7B;&#x4F3C; Unix &#x7684; utime() &#x6216; utimes() &#x51FD;&#x6570;&#x3002;&#x5E95;&#x5C42;&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x53EF;&#x80FD;&#x4F1A;&#x622A;&#x65AD;/&#x820D;&#x5165; &#x65F6;&#x95F4;&#x5355;&#x4F4D;&#x5230;&#x66F4;&#x4F4E;&#x7684;&#x7CBE;&#x786E;&#x5EA6;&#x3002;&#x5982;&#x679C;&#x51FA;&#x9519;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE; *PathError &#x7C7B;&#x578B;&#x7684;&#x9519;&#x8BEF;&#x3002;&#x5728; Unix &#x4E2D;&#xFF0C;&#x5E95;&#x5C42;&#x5B9E;&#x73B0;&#x4F1A;&#x8C03;&#x7528; utimenstat() &#xFF0C;&#x5B83;&#x63D0;&#x4F9B;&#x7EB3;&#x79D2;&#x7EA7;&#x522B;&#x7684;&#x7CBE;&#x5EA6;&#x3002; &#x6587;&#x4EF6;&#x5C5E;&#x4E3B; &#x6BCF;&#x4E2A;&#x6587;&#x4EF6;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x4E0E;&#x4E4B;&#x5173;&#x8054;&#x7684;&#x7528;&#x6237; ID&#xFF08;UID&#xFF09;&#x548C;&#x7EC4; ID&#xFF08;GID&#xFF09;&#xFF0C;&#x7C4D;&#x6B64;&#x53EF;&#x4EE5;&#x5224;&#x5B9A;&#x6587;&#x4EF6;&#x7684;&#x5C5E;&#x4E3B;&#x548C;&#x5C5E;&#x7EC4;&#x3002;&#x7CFB;&#x7EDF;&#x8C03;&#x7528; chown &#x3001; lchown &#x548C; fchown &#x53EF;&#x7528;&#x6765; &#x6539;&#x53D8;&#x6587;&#x4EF6;&#x7684;&#x5C5E;&#x4E3B;&#x548C;&#x5C5E;&#x7EC4;&#xFF0C;Go &#x4E2D;&#x5BF9;&#x5E94;&#x7684;&#x51FD;&#x6570;&#x6216;&#x65B9;&#x6CD5;&#xFF1A; 1 2 3 func Chown (name string , uid, gid int ) error func Lchown (name string , uid, gid int ) error func (f *File) Chown (uid, gid int ) error &#x5B83;&#x4EEC;&#x7684;&#x533A;&#x522B;&#x548C;&#x4E0A;&#x6587;&#x63D0;&#x5230;&#x7684; Stat &#x76F8;&#x5173;&#x51FD;&#x6570;&#x7C7B;&#x4F3C;&#x3002; &#x6587;&#x4EF6;&#x6743;&#x9650; &#x8FD9;&#x91CC;&#x4ECB;&#x7ECD;&#x662F;&#x5E94;&#x7528;&#x4E8E;&#x6587;&#x4EF6;&#x548C;&#x76EE;&#x5F55;&#x7684;&#x6743;&#x9650;&#x65B9;&#x6848;&#xFF0C;&#x5C3D;&#x7BA1;&#x6B64;&#x5904;&#x8BA8;&#x8BBA;&#x7684;&#x6743;&#x9650;&#x4E3B;&#x8981;&#x662F;&#x9488;&#x5BF9;&#x666E;&#x901A;&#x6587;&#x4EF6;&#x548C;&#x76EE;&#x5F55;&#xFF0C;&#x4F46;&#x5176;&#x89C4;&#x5219;&#x53EF;&#x9002;&#x7528;&#x4E8E;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#xFF0C;&#x5305;&#x62EC;&#x8BBE;&#x5907;&#x6587;&#x4EF6;&#x3001;FIFO &#x4EE5; &#x53CA; Unix &#x57DF;&#x5957;&#x63A5;&#x5B57;&#x7B49;&#x3002; &#x76F8;&#x5173;&#x51FD;&#x6570;&#x6216;&#x65B9;&#x6CD5; &#x5728;&#x6587;&#x4EF6;&#x76F8;&#x5173;&#x64CD;&#x4F5C;&#x62A5;&#x9519;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; os.IsPermission &#x68C0;&#x67E5;&#x662F;&#x5426;&#x662F;&#x6743;&#x9650;&#x7684;&#x95EE;&#x9898;&#x3002; 1 func IsPermission (err error) bool &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5E03;&#x5C14;&#x503C;&#x8BF4;&#x660E;&#x8BE5;&#x9519;&#x8BEF;&#x662F;&#x5426;&#x8868;&#x793A;&#x56E0;&#x6743;&#x9650;&#x4E0D;&#x8DB3;&#x8981;&#x6C42;&#x88AB;&#x62D2;&#x7EDD;&#x3002; ErrPermission &#x548C;&#x4E00;&#x4E9B;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x9519;&#x8BEF;&#x4F1A;&#x4F7F;&#x5B83;&#x8FD4;&#x56DE;&#x771F;&#x3002; &#x53E6;&#x5916;&#xFF0C; syscall.Access &#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x6587;&#x4EF6;&#x7684;&#x6743;&#x9650;&#x3002;&#x8FD9;&#x5BF9;&#x5E94;&#x7CFB;&#x7EDF;&#x8C03;&#x7528; access &#x3002; Sticky &#x4F4D; &#x9664;&#x4E86; 9 &#x4F4D;&#x7528;&#x6765;&#x8868;&#x660E;&#x5C5E;&#x4E3B;&#x3001;&#x5C5E;&#x7EC4;&#x548C;&#x5176;&#x4ED6;&#x7528;&#x6237;&#x7684;&#x6743;&#x9650;&#x5916;&#xFF0C;&#x6587;&#x4EF6;&#x6743;&#x9650;&#x63A9;&#x7801;&#x8FD8;&#x53E6;&#x8BBE;&#x6709; 3 &#x4E2A;&#x9644;&#x52A0;&#x4F4D;&#xFF0C;&#x5206;&#x522B;&#x662F; set-user-ID (bit 04000)&#x3001; set-group-ID (bit 02000) &#x548C; sticky (bit 01000) &#x4F4D;&#x3002; Sticky &#x4F4D;&#x4E00;&#x822C;&#x7528;&#x4E8E;&#x76EE;&#x5F55;&#xFF0C;&#x8D77;&#x9650;&#x5236;&#x5220;&#x9664;&#x4F4D;&#x7684;&#x4F5C;&#x7528;&#xFF0C;&#x8868;&#x660E;&#x4EC5;&#x5F53;&#x975E;&#x7279;&#x6743;&#x8FDB;&#x7A0B;&#x5177;&#x6709;&#x5BF9;&#x76EE;&#x5F55;&#x7684;&#x5199;&#x6743;&#x9650;&#xFF0C;&#x4E14;&#x4E3A;&#x6587;&#x4EF6;&#x6216;&#x76EE;&#x5F55;&#x7684;&#x5C5E;&#x4E3B;&#x65F6;&#xFF0C;&#x624D;&#x80FD;&#x5BF9;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x5220;&#x9664;&#x548C;&#x91CD;&#x547D;&#x540D;&#x64CD; &#x4F5C;&#x3002;&#x6839;&#x636E;&#x8FD9;&#x4E2A;&#x673A;&#x5236;&#x6765;&#x521B;&#x5EFA;&#x4E3A;&#x591A;&#x4E2A;&#x7528;&#x6237;&#x5171;&#x4EAB;&#x7684;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#xFF0C;&#x5404;&#x4E2A;&#x7528;&#x6237;&#x53EF;&#x5728;&#x5176;&#x4E0B;&#x521B;&#x5EFA;&#x6216;&#x5220;&#x9664;&#x5C5E;&#x4E8E;&#x81EA;&#x5DF1;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x4E0D;&#x80FD;&#x5220;&#x9664;&#x96B6;&#x5C5E;&#x4E8E;&#x5176;&#x4ED6;&#x7528;&#x6237;&#x7684;&#x6587;&#x4EF6;&#x3002; /tmp &#x76EE;&#x5F55;&#x5C31;&#x8BBE; &#x7F6E;&#x4E86; sticky &#x4F4D;&#xFF0C;&#x6B63;&#x662F;&#x51FA;&#x4E8E;&#x8FD9;&#x4E2A;&#x539F;&#x56E0;&#x3002; chmod &#x547D;&#x4EE4;&#x6216;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x6587;&#x4EF6;&#x7684; sticky &#x4F4D;&#x3002;&#x82E5;&#x5BF9;&#x67D0;&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;&#x4E86; sticky &#x4F4D;&#xFF0C;&#x5219; ls -l &#x663E;&#x793A;&#x6587;&#x4EF6;&#x65F6;&#xFF0C;&#x4F1A;&#x5728;&#x5176;&#x4ED6;&#x7528;&#x6237;&#x6267;&#x884C;&#x6743;&#x9650;&#x5B57;&#x6BB5;&#x4E0A;&#x770B;&#x5230;&#x5B57; &#x6BCD; t&#xFF08;&#x6709;&#x6267;&#x884C;&#x6743;&#x9650;&#x65F6;&#xFF09; &#x6216; T&#xFF08;&#x65E0;&#x6267;&#x884C;&#x6743;&#x9650;&#x65F6;&#xFF09;&#x3002; os.Chmod &#x548C; os.File.Chmod &#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x6587;&#x4EF6;&#x6743;&#x9650;&#xFF08;&#x5305;&#x62EC; sticky &#x4F4D;&#xFF09;&#xFF0C;&#x5206;&#x522B;&#x5BF9;&#x5E94;&#x7CFB;&#x7EDF;&#x8C03;&#x7528; chmod &#x548C; fchmod &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 func main () { file, err := os.Create( studygolang.txt ) if err != nil { log.Fatal( error: , err) } defer file.Close() fileMode := getFileMode(file) log.Println( file mode: , fileMode) file.Chmod(fileMode | os.ModeSticky) log.Println( change after, file mode: , getFileMode(file)) } func getFileMode (file *os.File) os . FileMode { fileInfo, err := file.Stat() if err != nil { log.Fatal( file stat error: , err) } return fileInfo.Mode() } // Output: // 2016/06/18 15:59:06 file mode: -rw-rw-r-- // 2016/06/18 15:59:06 change after, file mode: trw-rw-r-- // ls -l &#x770B;&#x5230;&#x7684; studygolang.tx &#x662F;&#xFF1A;-rw-rw-r-T // &#x5F53;&#x7136;&#x8FD9;&#x91CC;&#x662F;&#x7ED9;&#x6587;&#x4EF6;&#x8BBE;&#x7F6E;&#x4E86; sticky &#x4F4D;&#xFF0C;&#x5BF9;&#x6743;&#x9650;&#x4E0D;&#x8D77;&#x4F5C;&#x7528;&#x3002;&#x7CFB;&#x7EDF;&#x4F1A;&#x5FFD;&#x7565;&#x5B83;&#x3002;"},"standards/os/os.html#目录与链接":{"title":"&#x76EE;&#x5F55;&#x4E0E;&#x94FE;&#x63A5;","path":"\\golang-learn\\standards\\os\\os.html#目录与链接","body":"&#x5728; Unix &#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x76EE;&#x5F55;&#x7684;&#x5B58;&#x50A8;&#x65B9;&#x5F0F;&#x7C7B;&#x4F3C;&#x4E8E;&#x666E;&#x901A;&#x6587;&#x4EF6;&#x3002;&#x76EE;&#x5F55;&#x548C;&#x666E;&#x901A;&#x6587;&#x4EF6;&#x7684;&#x533A;&#x522B;&#x6709;&#x4E8C;&#xFF1A; &#x5728;&#x5176; i-node &#x6761;&#x76EE;&#x4E2D;&#xFF0C;&#x4F1A;&#x5C06;&#x76EE;&#x5F55;&#x6807;&#x8BB0;&#x4E3A;&#x4E00;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x3002; &#x76EE;&#x5F55;&#x662F;&#x7ECF;&#x7279;&#x6B8A;&#x7EC4;&#x7EC7;&#x800C;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x672C;&#x8D28;&#x4E0A;&#x8BF4;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x8868;&#x683C;&#xFF0C;&#x5305;&#x542B;&#x6587;&#x4EF6;&#x540D;&#x548C; i-node &#x6807;&#x53F7;&#x3002; &#x521B;&#x5EFA;&#x548C;&#x79FB;&#x9664;&#xFF08;&#x786C;&#xFF09;&#x94FE;&#x63A5; &#x786C;&#x94FE;&#x63A5;&#x662F;&#x9488;&#x5BF9;&#x6587;&#x4EF6;&#x800C;&#x8A00;&#x7684;&#xFF0C;&#x76EE;&#x5F55;&#x4E0D;&#x5141;&#x8BB8;&#x521B;&#x5EFA;&#x786C;&#x94FE;&#x63A5;&#x3002; link &#x548C; unlink &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x7528;&#x4E8E;&#x521B;&#x5EFA;&#x548C;&#x79FB;&#x9664;&#xFF08;&#x786C;&#xFF09;&#x94FE;&#x63A5;&#x3002;Go &#x4E2D; os.Link &#x5BF9;&#x5E94; link &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF1B;&#x4F46; os.Remove &#x7684;&#x5B9E;&#x73B0;&#x4F1A;&#x5148;&#x6267;&#x884C; unlink &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x79FB;&#x9664;&#x7684;&#x662F;&#x76EE;&#x5F55;&#xFF0C;&#x5219; unlink &#x4F1A;&#x5931;&#x8D25;&#xFF0C;&#x8FD9;&#x65F6; Remove &#x4F1A;&#x518D;&#x8C03;&#x7528; rmdir &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x3002; 1 func Link (oldname, newname string ) error Link &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; newname &#x6307;&#x5411; oldname &#x7684;&#x786C;&#x94FE;&#x63A5;&#x3002;&#x5982;&#x679C;&#x51FA;&#x9519;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE; *LinkError &#x7C7B;&#x578B;&#x7684;&#x9519;&#x8BEF;&#x3002; 1 func Remove (name string ) error Remove &#x5220;&#x9664; name &#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#x6216;&#x76EE;&#x5F55;&#x3002;&#x5982;&#x679C;&#x51FA;&#x9519;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE; *PathError &#x7C7B;&#x578B;&#x7684;&#x9519;&#x8BEF;&#x3002;&#x5982;&#x679C;&#x76EE;&#x5F55;&#x4E0D;&#x4E3A;&#x7A7A;&#xFF0C; Remove &#x4F1A;&#x8FD4;&#x56DE;&#x5931;&#x8D25;&#x3002; &#x66F4;&#x6539;&#x6587;&#x4EF6;&#x540D; &#x7CFB;&#x7EDF;&#x8C03;&#x7528; rename &#x65E2;&#x53EF;&#x4EE5;&#x91CD;&#x547D;&#x540D;&#x6587;&#x4EF6;&#xFF0C;&#x53C8;&#x53EF;&#x4EE5;&#x5C06;&#x6587;&#x4EF6;&#x79FB;&#x81F3;&#x540C;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x3002;&#x8BE5;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x65E2;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x6587;&#x4EF6;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x76EE;&#x5F55;&#x3002;&#x76F8;&#x5173;&#x7EC6;&#x8282;&#xFF0C; &#x8BF7;&#x67E5;&#x9605;&#x76F8;&#x5173;&#x8D44;&#x6599;&#x3002; Go &#x4E2D;&#x7684; os.Rename &#x662F;&#x5BF9;&#x5E94;&#x7684;&#x5C01;&#x88C5;&#x51FD;&#x6570;&#x3002; 1 func Rename (oldpath, newpath string ) error Rename &#x4FEE;&#x6539;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x540D;&#x5B57;&#x6216;&#x79FB;&#x52A8;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x3002;&#x5982;&#x679C; newpath &#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x66FF;&#x6362;&#x5B83;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x4E00;&#x4E9B;&#x4E2A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7279;&#x5B9A;&#x7684;&#x9650;&#x5236;&#x3002; &#x4F7F;&#x7528;&#x7B26;&#x53F7;&#x94FE;&#x63A5; symlink &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x7528;&#x4E8E;&#x4E3A;&#x6307;&#x5B9A;&#x8DEF;&#x5F84;&#x540D;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#xFF08;&#x60F3;&#x8981;&#x79FB;&#x9664;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#xFF0C;&#x4F7F;&#x7528; unlink &#xFF09;&#x3002;Go &#x4E2D;&#x7684; os.Symlink &#x662F;&#x5BF9;&#x5E94;&#x7684;&#x5C01;&#x88C5;&#x51FD;&#x6570;&#x3002; 1 func Symlink (oldname, newname string ) error Symlink &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; newname &#x6307;&#x5411; oldname &#x7684;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#x3002;&#x5982;&#x679C;&#x51FA;&#x9519;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE; *LinkError &#x7C7B;&#x578B;&#x7684;&#x9519;&#x8BEF;&#x3002; &#x7531; oldname &#x6240;&#x547D;&#x540D;&#x7684;&#x6587;&#x4EF6;&#x6216;&#x76EE;&#x5F55;&#x5728;&#x8C03;&#x7528;&#x65F6;&#x65E0;&#x9700;&#x5B58;&#x5728;&#x3002;&#x56E0;&#x4E3A;&#x5373;&#x4FBF;&#x5F53;&#x65F6;&#x5B58;&#x5728;&#xFF0C;&#x4E5F;&#x65E0;&#x6CD5;&#x963B;&#x6B62;&#x540E;&#x6765;&#x5C06;&#x5176;&#x5220;&#x9664;&#x3002;&#x8FD9;&#x65F6;&#xFF0C; newname &#x6210;&#x4E3A;&#x201C;&#x60AC;&#x7A7A;&#x94FE;&#x63A5;&#x201D;&#xFF0C;&#x5176;&#x4ED6;&#x7CFB;&#x7EDF; &#x8C03;&#x7528;&#x8BD5;&#x56FE;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x89E3;&#x5F15;&#x7528;&#x64CD;&#x4F5C;&#x90FD;&#x5C06;&#x9519;&#x8BEF;&#xFF08;&#x901A;&#x5E38;&#x9519;&#x8BEF;&#x53F7;&#x662F; ENOENT &#xFF09;&#x3002; &#x6709;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x5E0C;&#x671B;&#x901A;&#x8FC7;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#xFF0C;&#x80FD;&#x83B7;&#x53D6;&#x5176;&#x6240;&#x6307;&#x5411;&#x7684;&#x8DEF;&#x5F84;&#x540D;&#x3002;&#x7CFB;&#x7EDF;&#x8C03;&#x7528; readlink &#x80FD;&#x505A;&#x5230;&#xFF0C;Go &#x7684;&#x5C01;&#x88C5;&#x51FD;&#x6570;&#x662F; os.Readlink &#xFF1A; 1 func Readlink (name string ) ( string , error) Readlink &#x83B7;&#x53D6; name &#x6307;&#x5B9A;&#x7684;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#x6307;&#x5411;&#x7684;&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#x3002;&#x5982;&#x679C;&#x51FA;&#x9519;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE; *PathError &#x7C7B;&#x578B;&#x7684;&#x9519;&#x8BEF;&#x3002;&#x6211;&#x4EEC;&#x770B;&#x770B; Readlink &#x7684;&#x5B9E;&#x73B0;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 func Readlink (name string ) ( string , error) { \t for len := 128 ; ; len *= 2 { \t\tb := make ([] byte , len ) \t\tn, e := fixCount(syscall.Readlink(name, b)) \t\t if e != nil { \t\t\t return  , &amp;PathError{ readlink , name, e} \t\t} \t\t if n  len { \t\t\t return string (b[ 0 :n]), nil \t\t} \t} } &#x8FD9;&#x91CC;&#x4E4B;&#x6240;&#x4EE5;&#x7528;&#x5FAA;&#x73AF;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x6CA1;&#x6CD5;&#x77E5;&#x9053;&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#x5230;&#x5E95;&#x591A;&#x957F;&#xFF0C;&#x5982;&#x679C; b &#x957F;&#x5EA6;&#x4E0D;&#x591F;&#xFF0C;&#x6587;&#x4EF6;&#x540D;&#x4F1A;&#x88AB;&#x622A;&#x65AD;&#xFF0C;&#x800C; readlink &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x65E0;&#x975E;&#x5206;&#x8FA8;&#x6240;&#x8FD4;&#x56DE;&#x7684;&#x5B57; &#x7B26;&#x4E32;&#x5230;&#x5E95;&#x662F;&#x7ECF;&#x8FC7;&#x622A;&#x65AD;&#x5904;&#x7406;&#xFF0C;&#x8FD8;&#x662F;&#x6070;&#x5DE7;&#x5C06; b &#x586B;&#x6EE1;&#x3002;&#x8FD9;&#x91CC;&#x91C7;&#x7528;&#x7684;&#x9A8C;&#x8BC1;&#x65B9;&#x6CD5;&#x662F;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x66F4;&#x5927;&#x7684;&#xFF08;&#x4E24;&#x500D;&#xFF09; b &#x5E76;&#x518D;&#x6B21;&#x8C03;&#x7528; readlink &#x3002; &#x521B;&#x5EFA;&#x548C;&#x79FB;&#x9664;&#x76EE;&#x5F55; mkdir &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x76EE;&#x5F55;&#xFF0C;Go &#x4E2D;&#x7684; os.Mkdir &#x662F;&#x5BF9;&#x5E94;&#x7684;&#x5C01;&#x88C5;&#x51FD;&#x6570;&#x3002; 1 func Mkdir (name string , perm FileMode) error Mkdir &#x4F7F;&#x7528;&#x6307;&#x5B9A;&#x7684;&#x6743;&#x9650;&#x548C;&#x540D;&#x79F0;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x3002;&#x5982;&#x679C;&#x51FA;&#x9519;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE; *PathError &#x7C7B;&#x578B;&#x7684;&#x9519;&#x8BEF;&#x3002; name &#x53C2;&#x6570;&#x6307;&#x5B9A;&#x4E86;&#x65B0;&#x76EE;&#x5F55;&#x7684;&#x8DEF;&#x5F84;&#x540D;&#xFF0C;&#x53EF;&#x4EE5;&#x662F;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x3002;&#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x8C03;&#x7528;&#x5931;&#x8D25;&#x5E76;&#x8FD4;&#x56DE; os.ErrExist &#x9519;&#x8BEF;&#x3002; perm &#x53C2;&#x6570;&#x6307;&#x5B9A;&#x4E86;&#x65B0;&#x76EE;&#x5F55;&#x7684;&#x6743;&#x9650;&#x3002;&#x5BF9;&#x8BE5;&#x4F4D;&#x63A9;&#x7801;&#x503C;&#x7684;&#x6307;&#x5B9A;&#x65B9;&#x5F0F;&#x548C; os.OpenFile &#x76F8;&#x540C;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8D4B;&#x4E88;&#x516B;&#x8FDB;&#x5236;&#x6570;&#x503C;&#x3002;&#x6CE8;&#x610F;&#xFF0C; perm &#x503C;&#x8FD8;&#x5C06;&#x4E8E;&#x8FDB;&#x7A0B;&#x63A9;&#x7801;&#x76F8; &#x4E0E;&#xFF08;&amp;&#xFF09;&#x3002;&#x5982;&#x679C; perm &#x4E2D;&#x8BBE;&#x7F6E;&#x4E86; sticky &#x4F4D;&#xFF0C;&#x90A3;&#x4E48;&#x5C06;&#x5BF9;&#x65B0;&#x76EE;&#x5F55;&#x8BBE;&#x7F6E;&#x8BE5;&#x6743;&#x9650;&#x3002; &#x56E0;&#x4E3A; Mkdir &#x6240;&#x521B;&#x5EFA;&#x7684;&#x53EA;&#x662F;&#x8DEF;&#x5F84;&#x540D;&#x4E2D;&#x7684;&#x6700;&#x540E;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x5982;&#x679C;&#x7236;&#x76EE;&#x5F55;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x521B;&#x5EFA;&#x4F1A;&#x5931;&#x8D25;&#x3002; os.MkdirAll &#x7528;&#x4E8E;&#x9012;&#x5F52;&#x521B;&#x5EFA;&#x6240;&#x6709;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x76EE;&#x5F55;&#x3002; &#x5EFA;&#x8BAE;&#x8BFB;&#x8005;&#x9605;&#x8BFB;&#x4E0B; os.MkdirAll &#x7684;&#x6E90;&#x7801;&#xFF0C;&#x4E86;&#x89E3;&#x5176;&#x5B9E;&#x73B0;&#x65B9;&#x5F0F;&#x3001;&#x6280;&#x5DE7;&#x3002; rmdir &#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x79FB;&#x9664;&#x4E00;&#x4E2A;&#x6307;&#x5B9A;&#x7684;&#x76EE;&#x5F55;&#xFF0C;&#x76EE;&#x5F55;&#x53EF;&#x4EE5;&#x662F;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x6216;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x3002;&#x5728;&#x8BB2;&#x89E3; unlink &#x65F6;&#xFF0C;&#x5DF2;&#x7ECF;&#x4ECB;&#x7ECD;&#x4E86; Go &#x4E2D;&#x7684; os.Remove &#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x91CC;&#x8981;&#x6C42; &#x76EE;&#x5F55;&#x5FC5;&#x987B;&#x4E3A;&#x7A7A;&#x3002;&#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x4F7F;&#x7528;&#xFF0C;Go &#x4E2D;&#x5C01;&#x88C5;&#x4E86;&#x4E00;&#x4E2A; os.RemoveAll &#x51FD;&#x6570;&#xFF1A; 1 func RemoveAll (path string ) error RemoveAll &#x5220;&#x9664; path &#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x6216;&#x76EE;&#x5F55;&#x53CA;&#x5B83;&#x5305;&#x542B;&#x7684;&#x4EFB;&#x4F55;&#x4E0B;&#x7EA7;&#x5BF9;&#x8C61;&#x3002;&#x5B83;&#x4F1A;&#x5C1D;&#x8BD5;&#x5220;&#x9664;&#x6240;&#x6709;&#x4E1C;&#x897F;&#xFF0C;&#x9664;&#x975E;&#x9047;&#x5230;&#x9519;&#x8BEF;&#x5E76;&#x8FD4;&#x56DE;&#x3002;&#x5982;&#x679C; path &#x6307;&#x5B9A;&#x7684;&#x5BF9;&#x8C61;&#x4E0D; &#x5B58;&#x5728;&#xFF0C; RemoveAll &#x4F1A;&#x8FD4;&#x56DE; nil &#x800C;&#x4E0D;&#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#x3002; RemoveAll &#x7684;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x903B;&#x8F91;&#x5982;&#x4E0B;&#xFF1A; &#x8C03;&#x7528; Remove &#x5C1D;&#x8BD5;&#x8FDB;&#x884C;&#x5220;&#x9664;&#xFF0C;&#x5982;&#x679C;&#x6210;&#x529F;&#x6216;&#x8FD4;&#x56DE; path &#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x5219;&#x76F4;&#x63A5;&#x8FD4;&#x56DE; nil&#xFF1B; &#x8C03;&#x7528; Lstat &#x83B7;&#x53D6; path &#x4FE1;&#x606F;&#xFF0C;&#x4EE5;&#x4FBF;&#x5224;&#x65AD;&#x662F;&#x5426;&#x662F;&#x76EE;&#x5F55;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x91CC;&#x4F7F;&#x7528; Lstat &#xFF0C;&#x8868;&#x793A;&#x4E0D;&#x5BF9;&#x7B26;&#x53F7;&#x94FE;&#x63A5;&#x89E3;&#x5F15;&#x7528;&#xFF1B; &#x8C03;&#x7528; Open &#x6253;&#x5F00;&#x76EE;&#x5F55;&#xFF0C;&#x9012;&#x5F52;&#x8BFB;&#x53D6;&#x76EE;&#x5F55;&#x4E2D;&#x5185;&#x5BB9;&#xFF0C;&#x6267;&#x884C;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#x3002; &#x8BFB;&#x76EE;&#x5F55; POSIX &#x4E0E; SUS &#x5B9A;&#x4E49;&#x4E86;&#x8BFB;&#x53D6;&#x76EE;&#x5F55;&#x76F8;&#x5173;&#x7684; C &#x8BED;&#x8A00;&#x6807;&#x51C6;&#xFF0C;&#x5404;&#x4E2A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x63D0;&#x4F9B;&#x7684;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x5374;&#x4E0D;&#x5C3D;&#x76F8;&#x540C;&#x3002;Go &#x6CA1;&#x6709;&#x57FA;&#x4E8E; C &#x8BED;&#x8A00;&#xFF0C;&#x800C;&#x662F;&#x81EA;&#x5DF1;&#x901A;&#x8FC7;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x5B9E;&#x73B0; &#x4E86;&#x8BFB;&#x76EE;&#x5F55;&#x529F;&#x80FD;&#x3002; 1 func (f *File) Readdirnames (n int ) (names [] string , err error) Readdirnames &#x8BFB;&#x53D6;&#x76EE;&#x5F55; f &#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x6700;&#x591A;&#x6709; n &#x4E2A;&#x6210;&#x5458;&#x7684; []string &#xFF0C;&#x5207;&#x7247;&#x6210;&#x5458;&#x4E3A;&#x76EE;&#x5F55;&#x4E2D;&#x6587;&#x4EF6;&#x5BF9;&#x8C61;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x91C7;&#x7528;&#x76EE;&#x5F55;&#x987A;&#x5E8F;&#x3002;&#x5BF9;&#x672C;&#x51FD;&#x6570;&#x7684;&#x4E0B;&#x4E00; &#x6B21;&#x8C03;&#x7528;&#x4F1A;&#x8FD4;&#x56DE;&#x4E0A;&#x4E00;&#x6B21;&#x8C03;&#x7528;&#x672A;&#x8BFB;&#x53D6;&#x7684;&#x5185;&#x5BB9;&#x7684;&#x4FE1;&#x606F;&#x3002; &#x5982;&#x679C; n0 &#xFF0C; Readdirnames &#x51FD;&#x6570;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x6700;&#x591A; n &#x4E2A;&#x6210;&#x5458;&#x7684;&#x5207;&#x7247;&#x3002;&#x8FD9;&#x65F6;&#xFF0C;&#x5982;&#x679C; Readdirnames &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7A7A;&#x5207;&#x7247;&#xFF0C;&#x5B83;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x975E; nil &#x7684;&#x9519; &#x8BEF;&#x8BF4;&#x660E;&#x539F;&#x56E0;&#x3002;&#x5982;&#x679C;&#x5230;&#x8FBE;&#x4E86;&#x76EE;&#x5F55; f &#x7684;&#x7ED3;&#x5C3E;&#xFF0C;&#x8FD4;&#x56DE;&#x503C; err &#x4F1A;&#x662F; io.EOF &#x3002; &#x5982;&#x679C; n=0 &#xFF0C; Readdirnames &#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x76EE;&#x5F55;&#x4E2D;&#x5269;&#x4F59;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x5BF9;&#x8C61;&#x7684;&#x540D;&#x5B57;&#x6784;&#x6210;&#x7684;&#x5207;&#x7247;&#x3002;&#x6B64;&#x65F6;&#xFF0C;&#x5982;&#x679C; Readdirnames &#x8C03;&#x7528;&#x6210;&#x529F;&#xFF08;&#x8BFB;&#x53D6;&#x6240;&#x6709;&#x5185;&#x5BB9;&#x76F4;&#x5230;&#x7ED3;&#x5C3E;&#xFF09;&#xFF0C; &#x5B83;&#x4F1A;&#x8FD4;&#x56DE;&#x8BE5;&#x5207;&#x7247;&#x548C; nil &#x7684;&#x9519;&#x8BEF;&#x503C;&#x3002;&#x5982;&#x679C;&#x5728;&#x5230;&#x8FBE;&#x7ED3;&#x5C3E;&#x524D;&#x9047;&#x5230;&#x9519;&#x8BEF;&#xFF0C;&#x4F1A;&#x8FD4;&#x56DE;&#x4E4B;&#x524D;&#x6210;&#x529F;&#x8BFB;&#x53D6;&#x7684;&#x540D;&#x5B57;&#x6784;&#x6210;&#x7684;&#x5207;&#x7247;&#x548C;&#x8BE5;&#x9519;&#x8BEF;&#x3002; 1 func (f *File) Readdir (n int ) (fi []FileInfo, err error) Readdir &#x5185;&#x90E8;&#x4F1A;&#x8C03;&#x7528; Readdirnames &#xFF0C;&#x5C06;&#x5F97;&#x5230;&#x7684; names &#x6784;&#x9020;&#x8DEF;&#x5F84;&#xFF0C;&#x901A;&#x8FC7; Lstat &#x6784;&#x9020;&#x51FA; []FileInfo &#x3002; ioutil.ReadDir &#x4E5F;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7C7B;&#x4F3C;&#x7684;&#x529F;&#x80FD;&#x3002;"},"concurrent/sync_lock.html":{"title":"同步和锁","path":"\\golang-learn\\concurrent\\sync_lock.html","body":"同步和锁 共享变量 无论任何时候，只要有两个以上 goroutine 并发访问同一变量，且至少其中的一个是写操作的时候就会发生数据竞争。 避免数据竞争的三种方式： 不去写变量。读取不可能出现数据竞争。 避免从多个 goroutine 访问变量，尽量把变量限定在了一个单独的 goroutine 中。( 不要使用共享数据来通信，使用通信 来共享数据 ) 互斥锁 同步锁 Go 语言包中的 sync 包提供了两种锁类型： sync.Mutex 和 sync.RWMutex ，前者是互斥锁，后者是读写锁。 互斥锁 使用 channel 实现互斥所 我们可以使用容量只有 1 的 channel 来保证最多只有一个 goroutine 在同一时刻访问一个共享变量： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var ( sema = make ( chan struct , 1 ) // a binary semaphore guarding balance balance int ) func Deposit (amount int )  sema - struct  // acquire lock balance = balance + amount -sema // release lock  func Balance () int  sema - struct  // acquire lock b := balance -sema // release lock return b  sync.Mutex 使用 sync.Mutex 互斥锁： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import \"sync\" var ( mu sync.Mutex // guards balance balance int ) func Deposit (amount int )  mu.Lock() balance = balance + amount mu.Unlock()  func Balance () int  mu.Lock() b := balance mu.Unlock() return b  mutex 会保护共享变量，当已经有 goroutine 获得这个锁，再有 goroutine 访问这个加锁的变量就会被阻塞， 直到持有这个锁的 goroutine unlock 这个锁。 我们可以 使用 defer 来 unlock 锁，保证在函数返回之后或者发生错误返回时一定会执行 unlock 。 读写锁 sync.RWMutex 如果有多个 goroutine 读取变量，那么是并发安全的，这个时候使用 sync.Mutex 加锁就没有必要。可以使 用 sync.RWMutex 读写锁（多读单写锁）。 读写锁是把对共享资源的“读操作”和“写操作”区别对待了。它可以对这两种操作施加不同程度的保护 。 一个读写锁中实际上包含了两个锁，即：读锁和写锁。 sync.RWMutex 类型中的 Lock 方法和 Unlock 方法分别用于对写锁进行 锁定和解锁，而它的 RLock 方法和 RUnlock 方法则分别用于对读锁进行锁定和解锁。 对于某个受到读写锁保护的共享资源，多个写操作不能同时进行，写操作和读操作也不能同时进行，但多个读操作却可以同时进行 。 1 2 3 4 5 6 7 var mu sync.RWMutex var balance int func Balance () int  mu.RLock() // readers lock defer mu.RUnlock() return balance  RLock 只能在共享变量没有任何写入操作时可用 。 为什么只读操作也需要加锁 ？ 1 2 3 4 5 6 7 8 9 var x, y int go func ()  x = 1 // A1 fmt.Print( \"y:\" , y, \" \" ) // A2 () go func ()  y = 1 // B1 fmt.Print( \"x:\" , x, \" \" ) // B2 () 上面的代码打印的结果可能是： 1 2 3 4 5 6 7 8 y:0 x:1 x:0 y:1 x:1 y:1 y:1 x:1 # 还可能是 x:0 y:0 y:0 x:0 为什么会有 x:0 y:0 这种结果，在一个 goroutine 中，语句的执行顺序可以保证，在声明的例子，可以保证 执行 x = 1 后打印 y: ，但是不能保证打印 y: 时，另一个 goroutine 中 y = 1 是否已经执行。 所以可能的话，将变量限定在 goroutine 内部；如果是多个 goroutine 都需要访问的变量，使用互斥条件来访问。 注意事项 不要重复锁定互斥锁； 对一个已经被锁定的互斥锁进行锁定，是会立即阻塞当前的 goroutine 的 。这个 goroutine 所执行的流程， 会一直停滞在调用该互斥锁的 Lock 方法的那行代码上。直到该互斥锁的 Unlock 方法被调用，并且这里的锁定操作成功完成，后续的代码 （也就是临界区中的代码）才会开始执行。这也正是互斥锁能够保护临界区的原因所在。 不要忘记解锁互斥锁，必要时使用 defer 语句；避免重复锁定。 不要对尚未锁定或者已解锁的互斥锁解锁； 解锁“读写锁中未被锁定的写锁”，会立即引发 panic ，对于其中的读锁也是如此，并且同 样是不可恢复的。 不要在多个函数之间直接传递互斥锁。一旦，你把一个互斥锁同时用在了多个地方，就必然会有更多的 goroutine 争用这把锁。 这不但会让你的程序变慢，还会大大增加死锁（ deadloc k）的可能性。 所谓的 死锁 ，指的就是当前程序中的主 goroutine ，以及我们启用的那些 goroutine 都已经被阻塞。这些 goroutine 可以被统 称为用户级的 goroutine 。这就相当于整个程序都已经停滞不前了。 Go 语言运行时系统是不允许这种情况出现的，只要它发现所有的用户级 goroutine 都处于等待状态，就会自行抛出一个带有如下 信息的 panic： fatal error: all goroutines are asleep - deadlock! 注意，这种由 Go 语言运行时系统自行抛出的 panic 都属于致命错误，都是无法被恢复的，调用 recover 函数对它们起不到任何作用。 也就是说，一旦产生死锁，程序必然崩溃 。 最简单、有效的方式就是让每一个互斥锁都只保护一个临界区或一组相关临界区 。 条件变量 sync.Cond 条件变量是基于互斥锁的，它必须有互斥锁的支撑才能发挥作用。条件变量并不是被用来保护临界区和共享资源的，它是用于协调想要访问共享 资源的那些线程的。 当共享资源的状态发生变化时，它可以被用来通知被互斥锁阻塞的线程 。 条件变量在这里的最大优势就是在效率方面的提升。当共享资源的状态不满足条件的时候，想操作它的线程再也不用循环往复地做检查了， 只要等待通知就好了。 条件变量怎样与互斥锁配合使用 条件变量的初始化离不开互斥锁，并且它的方法有的也是基于互斥锁的。 条件变量提供的方法有三个：等待通知（wait）、单发通知（signal）和广播通知（broadcast）。我们在利用条件变量等待通知的时候， 需要在它基于的那个互斥锁保护下进行。而在进行单发通知或广播通知的时候，却是恰恰相反的，也就是说，需要在对应的互斥锁解锁之后 再做这两种操作。 1 2 3 4 var mailbox uint8 var lock sync.RWMutex sendCond := sync.NewCond(&amp;lock) recvCond := sync.NewCond(lock.RLocker()) lock 是一个类型为 sync.RWMutex 的变量，是一个读写锁。基于这把锁，我还创建了两个代表条件变量的变量，名字分别 叫 sendCond 和 recvCond 。 sync.Cond 类型并不是开箱即用的。只能利用 sync.NewCond 函数创建它的指针值 。 lock 变量的 Lock 方法和 Unlock 方法分别用于对其中写锁的锁定和解锁，它们与 sendCond 变量的含义是对应的。 被视为对共享资源的写操作。 初始化 recvCond 这 个条件变量，我们需要的是 lock 变量中的读锁， sync.RWMutex 类型的 RLocker 方法可以实现这一需求。 lock.RLocker() ，在其内部会分别调用 lock 变量的 RLock 方法和 RUnlock 方法。 下面是一个例子： mailbox 是一个信箱，如果在放置的时候发现信箱里还有未被取走的情报，那就不再放置，而先返回。另一方面，如果你在获取的时候发现信 箱里没有情报，那也只能先回去了。 1 2 3 4 5 6 7 lock.Lock() for mailbox == 1  sendCond.Wait()  mailbox = 1 lock.Unlock() recvCond.Signal() 先调用 lock 变量的 Lock 方法。注意，这个 Lock 方法在这里意味的是：持有信箱上的锁，并且有打开信箱的权利， 而不是锁上这个锁。 检查 mailbox 变量的值是否等于 1，也就是说，要看看信箱里是不是还存有情报。如果还有情报，那么我就回家去等通知。 如果信箱里没有情报，那么我就把新情报放进去，关上信箱、锁上锁，然后离开。用代码表达出来就是 mailbox = 1 和 lock.Unlock() 。 然后发通知，“信箱里已经有新情报了”，我们调用 recvCond 的 Signal 方法就可以实现这一步骤。 另一方面，你现在是另一个 goroutine ，想要适时地从信箱中获取情报，然后通知我。 1 2 3 4 5 6 7 lock.RLock() for mailbox == 0  recvCond.Wait()  mailbox = 0 lock.RUnlock() sendCond.Signal() 事情在流程上其实基本一致，只不过每一步操作的对象是不同的。 为什么先要锁定条件变量基于的互斥锁，才能调用它的 Wait 方法？ Wait 方法主要做了四件事。 把调用它的 goroutine （也就是当前的 goroutine ）加入到当前条件变量的通知队列中。 解锁当前的条件变量基于的那个互斥锁。 让当前的 goroutine 处于等待状态，等到通知到来时再决定是否唤醒它。此时，这个 goroutine 就会阻塞在调用这 个 Wait 方法的那行代码上。 如果通知到来并且决定唤醒这个 goroutine ，那么就在唤醒它之后重新锁定当前条件变量基于的互斥锁。自此之后，当前 的 goroutine 就会继续执行后面的代码了。 因为条件变量的 Wait 方法在阻塞当前的 goroutine 之前会解锁它基于的互斥锁，所以在调用该 Wait 方法之前我们必须先 锁定那个互斥锁，否则在调用这个 Wait 方法时，就会引发一个不可恢复的 panic。 为什么条件变量的 Wait 方法要这么做呢？你可以想象一下，如果 Wait 方法在互斥锁已经锁定的情况下，阻塞了当前的 goroutine ， 那么又由谁来解锁呢？别的 goroutine 吗？ 先不说这违背了互斥锁的重要使用原则，即：成对的锁定和解锁，就算别的 goroutine 可以来解锁，那万一解锁重复了怎么办？ 由此引发的 panic 可是无法恢复的。 如果当前的 goroutine 无法解锁，别的 goroutine 也都不来解锁，那么又由谁来进入临界区，并改变共享资源的状态呢？只要共享资源 的状态不变，即使当前的 goroutine 因收到通知而被唤醒，也依然会再次执行这个 Wait 方法，并再次被阻塞。 所以说，如果条件变量的 Wait 方法不先解锁互斥锁的话，那么就只会造成两种后果：不是当前的程序因 panic 而崩溃，就是相关的 goroutine 全面阻塞。 为什么要用 for 语句来包裹调用其 Wait 方法的表达式，用 if 语句不行吗？ if 语句只会对共享资源的状态检查一次，而 for 语句却可以做多次检查，直到这个状态改变为止。 那为什么要做多次检查呢？ 为了保险起见。如果一个 goroutine 因收到通知而被唤醒，但却发现共享资源的状态，依然不符合它的要求，那么就应该再次调用 条件变量的 Wait 方法，并继续等待下次通知的到来。 这种情况是很有可能发生的。 条件变量的 Signal 方法和 Broadcast 方法有哪些异同 条件变量的 Signal 方法和 Broadcast 方法都是被用来发送通知的，不同的是，前者的通知只会唤醒一个因此而等待的 goroutine ， 而后者的通知却会唤醒所有为此等待的 goroutine 。 条件变量的 Wait 方法总会把当前的 goroutine 添加到通知队列的队尾，而它的 Signal 方法总会从通知队列的队首开始查找可被 唤醒的 goroutine 。所以，因 Signal 方法的通知而被唤醒的 goroutine 一般都是最早等待的那一个。 原子操作 Go 语言的原子操作当然是基于 CPU 和操作系统的，所以它也只针对少数数据类型的值提供了原子操作函数。这些函数都存在于标准库代 码包 sync/atomic 中。 sync/atomic 包中的函数可以做的原子操作有：加法（add）、比较并交换（compare and swap，简称 CAS）、加载（load）、 存储（store）和交换（swap）。 这些函数针对的数据类型并不多。对这些类型中的每一个， sync/atomic 包都会有一套函数给予支持。这些数据类型有： int32 、 int64 、 uint32 、 uint64 、 uintptr ，以及 unsafe 包中的 Pointer 。不过，针对 unsafe.Pointer 类型，该包并未提供进行原子加法操作的函数。 sync/atomic 包还提供了一个名为 Value 的类型，它可以被用来存储任意类型的值。 atomic.AddInt32 函数的第一个参数，为什么不是 int32 而是 *int32 呢？ 因为 原子操作函数需要的是被操作值的指针，而不是这个值本身 ；被传入函数的参数值都会被复制，像这种基本类型的值一旦被传入函数， 就已经与函数外的那个值毫无关系了。 所以，传入值本身没有任何意义。 unsafe.Pointer 类型虽然是指针类型，但是那些原子操作函数要操作的是这个指针值，而不是它指向 的那个值，所以需要的仍然是指向这个指针值的指针。 只要原子操作函数拿到了被操作值的指针，就可以定位到存储该值的内存地址。只有这样，它们才能够通过底层的指令，准确地操作这个内 存地址上的数据。 比较并交换操作与交换操作相比有什么不同 比较并交换操作即 CAS 操作 ，是有条件的交换操作， 只有在条件满足的情况下才会进行值的交换 。 所谓的交换指的是，把新值赋给变量，并返回变量的旧值 。 CAS 操作用途要更广泛一些。例如，我们将它与 for 语句联用就可以实现一种简易的自旋锁（spinlock）。 1 2 3 4 5 6 7 for  if atomic.CompareAndSwapInt32(&amp;num2, 10 , 0 )  fmt.Println( \"The second number has gone to zero.\" ) break  time.Sleep(time.Millisecond * 500 )  在 for 语句中的 CAS 操作可以不停地检查某个需要满足的条件，一旦条件满足就退出 for 循环。这就相当于，只要条件未被满足， 当前的流程就会被一直“阻塞”在这里。 这在效果上与互斥锁有些类似。不过，它们的适用场景是不同的。我们在使用互斥锁的时候，总是假设共享资源的状态会被其他 的 goroutine 频繁地改变。 而 for 语句加 CAS 操作的假设往往是：共享资源状态的改变并不频繁，或者，它的状态总会变成期望的那样。这是一种更加乐观， 或者说更加宽松的做法。 假设我已经保证了对一个变量的写操作都是原子操作，比如：加或减、存储、交换等等，那我对它进行读操作的时候，还有必要使用原 子操作吗 ？ 很有必要。其中的道理你可以对照一下读写锁。为什么在读写锁保护下的写操作和读操作之间是互斥的？这是为了防止读操作读到没有 被修改完的值，对吗？ 如果写操作还没有进行完，读操作就来读了，那么就只能读到仅修改了一部分的值。这显然破坏了值的完整性，读出来的值也是完全错误的。 所以，一旦你决定了要对一个共享资源进行保护，那就要做到完全的保护。不完全的保护基本上与不保护没有什么区别。 sync/atomic.Value 此类型的值相当于一个容器，可以被用来“原子地”存储和加载任意的值。开箱即用。 它只有两个指针方法—— Store 和 Load 。不过，虽然简单，但还是有一些值得注意的地方的。 一旦 atomic.Value 类型的值（以下简称原子值）被真正使用，它就不应该再被复制了。只要用它来存储值了，就相当于开始真正使用了。 atomic.Value 类型属于结构体类型，而结构体类型属于值类型。所以，复制该类型的值会产生一个完全分离的新值。这个新值相当于被 复制的那个值的一个快照。之后，不论后者存储的值怎样改变，都不会影响到前者。 不能用原子值存储 nil 。 我们向原子值存储的第一个值，决定了它今后能且只能存储哪一个类型的值。 尽量不要向原子值中存储引用类型的值。因为这很容易造成安全漏洞。 1 2 3 4 var box6 atomic.Value v6 := [] int  1 , 2 , 3  box6.Store(v6) v6[ 1 ] = 4 // 注意，此处的操作不是并发安全的！ 切片类型属于引用类型。所以，我在外面改动这个切片值，就等于修改了 box6 中存储的那个值。这相当于绕过了原子值而进行了非并发 安全的操作。怎样修补： 1 2 3 4 5 6 7 store := func (v [] int )  replica := make ([] int , len (v)) copy (replica, v) box6.Store(replica)  store(v6) v6[ 2 ] = 5 // 此处的操作是安全的。 先为切片值 v6 创建了一个完全的副本。这个副本涉及的数据已经与原值毫不相干了。然后，我再把这个副本存入 box6 。如此一来， 无论我再对 v6 的值做怎样的修改，都不会破坏 box6 提供的安全保护。 sync.WaitGroup 在一些场合下里，我们使用通道的方式看起来都似乎有些蹩脚。比如：声明一个通道，使它的容量与我们手动启用的 goroutine 的数量相同。 之后利用这个通道，让主 goroutine 等待其他 goroutine 的运行结束。更具体地说就是：让其他的 goroutine 在运行结束之前， 都向这个通道发送一个元素值，并且，让主 goroutine 在最后从这个通道中接收元素值，接收的次数需要与其他的 goroutine 的数量相同。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 func coordinateWithChan ()  sign := make ( chan struct , 2 ) num := int32 ( 0 ) fmt.Printf( \"The number: %d [with chan struct]\\n\" , num) max := int32 ( 10 ) go addNum(&amp;num, 1 , max, func ()  sign - struct  ) go addNum(&amp;num, 2 , max, func ()  sign - struct  ) -sign -sign  coordinateWithChan 函数中最后的那两行代码了吗？重复的两个接收表达式 -sign ，很丑陋。 我们可以选用另外一个同步工具，即： sync 包的 WaitGroup 类型。它比通道更加适合实现这种一对多的 goroutine 协作流程。 sync.WaitGroup 类型（以下简称 WaitGroup 类型）是开箱即用的，也是并发安全的。 WaitGroup 类型拥有三个指针方法： Add 、 Done 和 Wait 。 你可以想象该类型中有一个计数器，它的默认值是 0 。我们可 以通过调用该类型值的 Add 方法来增加，或者减少这个计数器的值 。 一般情况下，我会用这个方法来记录需要等待的 goroutine 的数量。相对应的，这个类型的 Done 方法，用于对其所属值中计数器 的值进行减一操作 。我们可以在需要等待的 goroutine 中，通过 defer 语句调用它。 而 此类型的 Wait 方法的功能是，阻塞当前的 goroutine ，直到其所属值中的计数器归零 。 改造版本： 1 2 3 4 5 6 7 8 9 10 func coordinateWithWaitGroup ()  \t var wg sync.WaitGroup \twg.Add( 2 ) \tnum := int32 ( 0 ) \tfmt.Printf( \"The number: %d [with sync.WaitGroup]\\n\" , num) \tmax := int32 ( 10 ) \t go addNum(&amp;num, 3 , max, wg.Done) \t go addNum(&amp;num, 4 , max, wg.Done) \twg.Wait()  尽量不要在 go 函数内部调用 Add ，以免 Add 还未执行， Wait 已经退出 ： 1 2 3 4 5 6 7 8 var wg sync.WaitGroup go func ()  \twg.Add( 1 ) \tfmt.Println( \"test\" ) () wg.Wait() fmt.Println( \"exit.\" ) sync.WaitGroup 类型值中计数器的值可以小于 0 吗 不可以。 小于 0，会引发一个 panic 。 WaitGroup 值是可以被复用的，但需要保证其计数周期的完整性 。这里的计数周期指的是这样一个过程：该值中的计数器值由 0 变为 了某个正整数，而后又经过一系列的变化，最终由某个正整数又变回了 0。 如果在一个此类值的 Wait 方法被执行期间，跨越了两个计数周期，那么就会引发一个 panic。 使用注意 不要把增加其计数器值的操作和调用其 Wait 方法的代码，放在不同的 goroutine 中执行。换句话说，要 杜绝对同一个 WaitGroup 值的两种操作的并发执行 。 sync.Once 与 sync.WaitGroup 类型一样， sync.Once 类型（以下简称 Once 类型）也属于结构体类型，同样也是开箱即用和并发安全的。 由于这个类型中包含了一个 sync.Mutex 类型的字段，所以，复制该类型的值也会导致功能的失效。 1 2 3 4 5 6 7 var loadIconsOnce sync.Once var icons map [ string ]image.Image // Concurrency-safe. func Icon (name string ) image . Image  loadIconsOnce.Do(loadIcons) return icons[name]  Once 类型的 Do 方法只接受一个参数，这个参数的类型必须是 func() ，即：无参数声明和结果声明的函数。该方法的功能并 不是对每一种参数函数都只执行一次，而是只 执行“首次被调用时传入的”那个函数，并且之后不会再执行任何参数函数 。 所以， 如果你有多个只需要执行一次的函数，那么就应该为它们中的每一个都分配一个 sync.Once 类型的值 （以下简称 Once 值）。 Once 类型中还有一个名叫 done 的 uint32 类型的字段。 它的作用是记录其所属值的 Do 方法被调用的次数。不过，该字段的值 只可能是 0 或者 1。一旦 Do 方法的首次调用完成，它的值就会从 0 变为 1 。 既然 done 字段的值不是 0 就是 1，那为什么还要使用需要四个字节的 uint32 类型呢 ？ 原因很简单，因为对它的操作必须是“原子”的。 Do 方法在一开始就会通过调用 atomic.LoadUint32 函数来获取该字段的值，并且一旦 发现该值为 1 就会直接返回。这也初步保证了“ Do 方法，只会执行首次被调用时传入的函数”。 Do 方法在功能方面的两个特点 由于 Do 方法只会在参数函数执行结束之后把 done 字段的值变为 1，因此，如果参数函数的执行需要很长时间或者根本就不会结束 （比如执行一些守护任务），那么就有可能会导致相关 goroutine 的同时阻塞 Do 方法在参数函数执行结束后，对 done 字段的赋值用的是原子操作，并且，这一操作是被挂在 defer 语句中的。因此，不论参数 函数的执行会以怎样的方式结束， done 字段的值都会变为 1。 context.Context 类型 使用 WaitGroup 值的时候，我们最好用 先统一 Add ，再并发 Done ，最后 Wait 的标准模式来构建协作流程。如果在调用 该值的 Wait 方法的同时，为了增大其计数器的值，而并发地调用该值的 Add 方法，那么就很可能会引发 panic。 但是 如果，我们不能在一开始就确定执行子任务的 goroutine 的数量，那么使用 WaitGroup 值来协调它们和分发子任 务的 goroutine ，就是有一定风险的 。一个解决方案是： 分批地启用执行子任务的 goroutine 。 只要我们在严格遵循上述规则的前提下，分批地启用执行子任务的 goroutine ，就肯定不会有问题。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 func coordinateWithWaitGroup ()  total := 12 stride := 3 var num int32 fmt.Printf( \"The number: %d [with sync.WaitGroup]\\n\" , num) var wg sync.WaitGroup for i := 1 ; i = total; i = i + stride  wg.Add(stride) for j := 0 ; j  stride; j++  go addNum(&amp;num, i+j, wg.Done)  wg.Wait()  fmt.Println( \"End.\" )  使用 context 包中的程序实体，实现一对多的 goroutine 协作流程 用 context 包中的函数和 Context 类型作为实现工具，实现 coordinateWithContext 的函数。这个函数应该具有上 面 coordinateWithWaitGroup 函数相同的功能。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 func coordinateWithContext ()  \ttotal := 12 \t var num int32 \tfmt.Printf( \"The number: %d [with context.Context]\\n\" , num) \tcxt, cancelFunc := context.WithCancel(context.Background()) \t for i := 1 ; i = total; i++  \t\t go addNum(&amp;num, i, func ()  \t\t\t if atomic.LoadInt32(&amp;num) == int32 (total)  \t\t\t\tcancelFunc() \t\t\t \t\t) \t \t-cxt.Done() \tfmt.Println( \"End.\" )  先后调用了 context.Background 函数和 context.WithCancel 函数，并得到了一个可撤销的 context.Context 类型的值 （由变量 cxt 代表），以及一个 context.CancelFunc 类型的撤销函数（由变量 cancelFunc 代表）。 注意我给予 addNum 函数的最后一个参数值。它是一个匿名函数，其中只包含了一条 if 语句。这条 if 语句会 原子地 加载 num 变量的值，并判断它是否等于 total 变量的值。 如果两个值相等，那么就调用 cancelFunc 函数。其含义是，如果所有的 addNum 函数都执行完毕，那么就立即通知分发子任务 的 goroutine 。 这里分发子任务的 goroutine ，即为执行 coordinateWithContext 函数的 goroutine 。它在执行完 for 语句后，会 立即调用 cxt 变量的 Done 函数，并试图针对该函数返回的通道，进行接收操作。 一旦 cancelFunc 函数被调用，针对该通道的接收操作就会马上结束，所以，这样做就可以实现“等待所有的 addNum 函数都执 行完毕”的功能。 context.Context 类型 Context 类型的值（以下简称 Context 值）是可以繁衍的，这意味着我们可以通过一个 Context 值产生出任意个子值。这些子值 可以携带其父值的属性和数据，也可以响应通过其父值传达的信号。 正因为如此，所有的 Context 值共同构成了一颗代表了上下文全貌的树形结构。这棵树的 树根（或者称上下文根节点）是一个已经 在 context 包中预定义好的 Context 值 ，它是 全局唯一 的。通过调用 context.Background 函数，我们就可以获取到 它（在 coordinateWithContext 函数中就是这么做的）。 注意一下，这个 上下文根节点仅仅是一个最基本的支点，它不提供任何额外的功能 。也就是说，它既不可以被撤销（ cancel ）， 也不能携带任何数据。 context 包中还包含了 四个用于繁衍 Context 值的函数，即： WithCancel 、 WithDeadline 、 WithTimeout 和 WithValue 。 这些函数的第一个参数的类型都是 context.Context ，而名称都为 parent 。顾名思义， 这个位置上的参数对应的都是它们将会产生 的 Context 值的父值 。 WithCancel 函数用于产生一个可撤销的 parent 的子值 。 在 coordinateWithContext 函数中，通过调用该函数，获得了一个衍生自上下文根节点的 Context 值，和一个用于触发撤销信号的函数。 WithDeadline 函数和 WithTimeout 函数则都可以被用来产生一个会 定时撤销 的 parent 的子值。至于 WithValue 函数， 我们可以通过调用它，产生一个会携带额外数据的 parent 的子值。 “可撤销的”在 context 包中代表着什么？“撤销”一个 Context 值又意味着什么？ 这需要从 Context 类型的声明讲起。这个接口中有两个方法与“撤销”息息相关。 Done 方法会返回一个元素类型为 struct{} 的接 收通道。不过，这个接收通道的用途并不是传递元素值，而是 让调用方去感知“撤销”当前Context值的那个信号 。 一旦当前的 Context 值被撤销，这里的接收通道就会被立即关闭。我们都知道，对于一个未包含任何元素值的通道来说，它的关闭会 使任何针对它的接收操作立即结束。 正因为如此，在 coordinateWithContext 函数中，基于调用表达式 cxt.Done() 的接收操作，才能够起到感知撤销信号的作用。 撤销信号是如何在上下文树中传播的 context 包的 WithCancel 函数在被调用后会产生两个结果值。第一个结果值就是那个可撤销的 Context 值，而第二个结果值则是 用于触发撤销信号的函数。 在撤销函数被调用之后，对应的 Context 值会先关闭它内部的接收通道，也就是它的 Done 方法会返回的那个通道。 然后，它会向它的所有子值（或者说子节点）传达撤销信号。这些子值会如法炮制，把撤销信号继续传播下去。最后，这个 Context 值会 断开它与其父值之间的关联。 通过调用 context.WithValue 函数得到的 Context 值是不可撤销的 。 怎样通过 Context 值携带数据 WithValue 函数在产生新的 Context 值（以下简称含数据的 Context 值）的时候需要三个参数，即：父值、键和值 。 “字典对于键的约束”类似，这里 键的类型必须是可判等 的。 原因很简单，当我们从中获取数据的时候，它需要根据给定的键来查找对应的值。不过，这种 Context 值并不是用字典来存储键和值的， 后两者只是被简单地存储在前者的相应字段中而已。 临时对象池 sync.Pool Go 语言标准库中最重要的那几个同步工具，这包括: 互斥锁 读写锁 条件变量 原子操作 sync/atomic.Value sync.Once sync.WaitGroup context.Context Go 语言标准库中的还有另一个同步工具： sync.Pool 。 sync.Pool 类型可以被称为临时对象池，它的值可以被用来存储临时的对象。与 Go 语言的很多同步工具一样， sync.Pool 类型也属 于结构体类型，它的值在被真正使用之后，就不应该再被复制了。 临时对象 的意思是：不需要持久使用的某一类值。这类值对于程序来说可有可无，但如果有的话会明显更好。它们的创建和销毁可以在 任何时候发生，并且完全不会影响到程序的功能。 我们可以把临时对象池当作针对某种数据的缓存来用 。 sync.Pool 类型只有两个方法—— Put 和 Get 。前者用于在当前的池中存放临时对象，它接受一个 interface{} 类型的参数； 而后者则被用于从当前的池中获取临时对象，它会返回一个 interface{} 类型的值。 更具体地说， 这个类型的 Get 方法可能会从当前的池中删除掉任何一个值，然后把这个值作为结果返回。如果此时当前的池中没有任何值， 那么这个方法就会使用当前池的 New 字段创建一个新值，并直接将其返回 。 sync.Pool 类型的 New 字段代表着创建临时对象的函数。它的类型是没有参数但有唯一结果的函数类型，即： func() interface{} 。 初始化这个池的时候最好给定它 。 这个函数是 Get 方法最后的临时对象获取手段。 Get 方法如果到了最后，仍然无法获取到一个值，那么就会调用该函数。该函数的结 值并不会被存入当前的临时对象池中，而是直接返回给 Get 方法的调用方。 临时对象池中存储的每一个值都应该是独立的、平等的和可重用的 。 sync.Pool 的定位不是做类似连接池的东西，它的用途仅仅是增加 对象重用的几率，减少 gc 的负担。因为 gc 带来了编程的方便但同时也增加了运行时开销，使用不当甚至会严重影响程序的性能。因此性能 要求高的场景不能任意产生太多的垃圾。如何解决呢？那就是要重用对象了。 一个比较好的例子是 fmt 包， fmt 包总是需要使用一些 []byte 之类的对象，golang 建立了一个临时对象池，存放着这些对象， 如果需要使用一个 []byte ，就去 Pool 里面拿，如果拿不到就分配一份。这比起不停生成新的 []byte ，用完了再等待 gc 回收 来要高效得多。 sync.Pool 缓存对象的期限是很诡异的，先看一下 src/pkg/sync/pool.go 里面的一段实现代码： 1 2 3 func init ()  runtime_registerPoolCleanup(poolCleanup)  可以看到 pool 包在 init 的时候注册了一个 poolCleanup 函数，它会清除所有的 pool 里面的所有缓存的对象，该函数注册进去 之后会在每次 gc 之前都会调用，因此 sync.Pool 缓存的期限只是两次gc之间这段时间 。 sync.Map Go 语言自带的字典类型 map 并不是并发安全的。换句话说，在同一时间段内，让不同 goroutine 中的代码，对同一个字典进行读写操 作是不安全的。 Go 语言官方终于在 2017 年发布的 Go 1.9 中正式加入了并发安全的字典类型 sync.Map 。 使用 sync.Map 可以显著地减少锁的争用。 sync.Map 本身虽然也用到了锁，但是，它其实在尽可能地避免使用锁。 使用锁就意味着要把一些并发的操作强制串行化。这往往会降低程序的性能，尤其是在计算机拥有多个 CPU 核心的情况下 。 由于 并发安全字典内部使用的存储介质正是原生字典，又因为它使用的原生字典键类型也是可以包罗万象的 interface{} ，所以， 我们绝对不能带着任何实际类型为函数类型、字典类型或切片类型的键值去操作并发安全字典 。 因为 这些键值的实际类型只有在程序运行期间才能够确定，所以 Go 语言编译器是无法在编译期对它们进行检查的，不正确的键值实际类 型肯定会引发 panic 。 因此，我们在这里首先要做的一件事就是：一定不要违反上述规则。我们应该在每次操作并发安全字典的时候，都去显式地检查键值的实际 类型。无论是存、取还是删，都应该如此 。 更好的做法是，把针对同一个并发安全字典的这几种操作都集中起来，然后统一地编写检查代码。除此之外，把并发安全字典封装在一 个结构体类型中，往往是一个很好的选择 。如果你实在拿不准，那么可以先通过调用 reflect.TypeOf 函数得到一个键值对应的反射类 型值（即： reflect.Type 类型的值），然后再调用这个值的 Comparable 方法，得到确切的判断结果。 并发安全字典如何做到尽量避免使用锁 sync.Map 类型在内部使用了 大量的原子操作来存取键和值，并使用了两个原生的 map 作为存储介质 。 其中一个原生 map 被存在了 sync.Map 的 read 字段中，该字段是 sync/atomic.Value 类型的。简称它为 只读字典 。 只读字典虽然不会增减其中的键，但却允许变更其中的键所对应的值 。所以，它并不是传统意义上的快照，它的只读特性只是对于其中键 的集合而言的。 由 read 字段的类型可知， sync.Map 在替换只读字典的时候根本用不着锁。另外，这个只读字典在存储键值对的时候，还在值之上 封装了一层。 它先把值转换为了 unsafe.Pointer 类型的值，然后再把后者封装，并储存在其中的原生字典中。如此一来，在变更某个键所对应的值 的时候，就也可以使用原子操作了。 sync.Map 中的另一个原生字典由它的 dirty 字段代表。它存储键值对的方式与 read 字段中的原生字典一致，它的键类型 也是 interface{} ，并且同样是把值先做转换和封装后再进行储存的。称为 脏字典 。 脏字典和只读字典如果都存有同一个键值对，那么这里的两个键指的肯定是同一个基本值，对于两个值来说也是如此。正如前文所述， 这两个字典在存储键和值的时候都只会存入它们的某个指针，而不是基本值。 sync.Map 在查找指定的键所对应的值的时候，总会先去只读字典中寻找，并不需要锁定互斥锁。只有当确定 只读字典中没有，但脏 字典中可能会有这个键 的时候，它才会在锁的保护下去访问脏字典。 相对应的， sync.Map 在存储键值对的时候，只要只读字典中已存有这个键，并且该键值对未被标记为“已删除”，就会把新值存到里面并 直接返回，这种情况下也不需要用到锁。 否则，它才会在锁的保护下把键值对存储到脏字典中。这个时候，该键值对的“已删除”标记会被抹去。 只有当一个键值对应该被删除，但却仍然存在于只读字典中的时候，才会被用标记为“已删除”的方式进行逻辑删除，而不会直接被物理删除。 这种情况会在重建脏字典以后的一段时间内出现。不过，过不了多久，它们就会被真正删除掉。在查找和遍历键值对的时候，已被逻 辑删除的键值对永远会被无视。 最后， sync.Map 会把该键值对中指向值的那个指针置为 nil ，这是另一种逻辑删除的方式。 除此之外，还有一个细节需要注意，只读字典和脏字典之间是会互相转换的。在脏字典中查找键值对次数足够多的时候， sync.Map 会把 脏字典直接作为只读字典，保存在它的 read 字段中，然后把代表脏字典的 dirty 字段的值置为 nil 。 在这之后，一旦再有新的键值对存入，它就会依据只读字典去重建脏字典。这个时候，它会把只读字典中已被逻辑删除的键值对过滤掉。 理所当然，这些转换操作肯定都需要在锁的保护下进行。 sync.Map 的只读字典和脏字典中的键值对集合并不是实时同步的，它们在某些时间段内可能会有不同 。 可以看出，在读操作有很多但写操作却很少的情况下，并发安全字典的性能往往会更好。在几个写操作当中，新增键值对的操作对并发安 全字典的性能影响是最大的，其次是删除操作，最后才是修改操作。 如果被操作的键值对已经存在于 sync.Map 的只读字典中，并且没有被逻辑删除，那么修改它并不会使用到锁，对其性能的影响就会很小。 竞争检查器 在 go build ， go run 或者 go test 命令后面加上 -race ，就会使编译器创建一个你的应用的“修改”版。 会记录下每一个读或者写共享变量的 goroutine 的身份信息。记录下所有的同步事件，比如 go 语句， channel 操作， 以及对 (*sync.Mutex).Lock ， (*sync.WaitGroup).Wait 等等的调用。 由于需要额外的记录，因此构建时加了竞争检测的程序跑起来会慢一些，且需要更大的内存，即使是这样，这些代价对于很多生产环境的 工作来说还是可以接受的。"},"concurrent/sync_lock.html#同步和锁":{"title":"&#x540C;&#x6B65;&#x548C;&#x9501;","path":"\\golang-learn\\concurrent\\sync_lock.html#同步和锁","body":""},"concurrent/sync_lock.html#共享变量":{"title":"&#x5171;&#x4EAB;&#x53D8;&#x91CF;","path":"\\golang-learn\\concurrent\\sync_lock.html#共享变量","body":"&#x65E0;&#x8BBA;&#x4EFB;&#x4F55;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x8981;&#x6709;&#x4E24;&#x4E2A;&#x4EE5;&#x4E0A; goroutine &#x5E76;&#x53D1;&#x8BBF;&#x95EE;&#x540C;&#x4E00;&#x53D8;&#x91CF;&#xFF0C;&#x4E14;&#x81F3;&#x5C11;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x662F;&#x5199;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x4F1A;&#x53D1;&#x751F;&#x6570;&#x636E;&#x7ADE;&#x4E89;&#x3002; &#x907F;&#x514D;&#x6570;&#x636E;&#x7ADE;&#x4E89;&#x7684;&#x4E09;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A; &#x4E0D;&#x53BB;&#x5199;&#x53D8;&#x91CF;&#x3002;&#x8BFB;&#x53D6;&#x4E0D;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x6570;&#x636E;&#x7ADE;&#x4E89;&#x3002; &#x907F;&#x514D;&#x4ECE;&#x591A;&#x4E2A; goroutine &#x8BBF;&#x95EE;&#x53D8;&#x91CF;&#xFF0C;&#x5C3D;&#x91CF;&#x628A;&#x53D8;&#x91CF;&#x9650;&#x5B9A;&#x5728;&#x4E86;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684; goroutine &#x4E2D;&#x3002;( &#x4E0D;&#x8981;&#x4F7F;&#x7528;&#x5171;&#x4EAB;&#x6570;&#x636E;&#x6765;&#x901A;&#x4FE1;&#xFF0C;&#x4F7F;&#x7528;&#x901A;&#x4FE1; &#x6765;&#x5171;&#x4EAB;&#x6570;&#x636E; ) &#x4E92;&#x65A5;&#x9501;"},"concurrent/sync_lock.html#同步锁":{"title":"&#x540C;&#x6B65;&#x9501;","path":"\\golang-learn\\concurrent\\sync_lock.html#同步锁","body":"Go &#x8BED;&#x8A00;&#x5305;&#x4E2D;&#x7684; sync &#x5305;&#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x79CD;&#x9501;&#x7C7B;&#x578B;&#xFF1A; sync.Mutex &#x548C; sync.RWMutex &#xFF0C;&#x524D;&#x8005;&#x662F;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x540E;&#x8005;&#x662F;&#x8BFB;&#x5199;&#x9501;&#x3002; &#x4E92;&#x65A5;&#x9501; &#x4F7F;&#x7528; channel &#x5B9E;&#x73B0;&#x4E92;&#x65A5;&#x6240; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5BB9;&#x91CF;&#x53EA;&#x6709; 1 &#x7684; channel &#x6765;&#x4FDD;&#x8BC1;&#x6700;&#x591A;&#x53EA;&#x6709;&#x4E00;&#x4E2A; goroutine &#x5728;&#x540C;&#x4E00;&#x65F6;&#x523B;&#x8BBF;&#x95EE;&#x4E00;&#x4E2A;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var ( sema = make ( chan struct {}, 1 ) // a binary semaphore guarding balance balance int ) func Deposit (amount int ) { sema - struct {}{} // acquire lock balance = balance + amount -sema // release lock } func Balance () int { sema - struct {}{} // acquire lock b := balance -sema // release lock return b } sync.Mutex &#x4F7F;&#x7528; sync.Mutex &#x4E92;&#x65A5;&#x9501;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import sync var ( mu sync.Mutex // guards balance balance int ) func Deposit (amount int ) { mu.Lock() balance = balance + amount mu.Unlock() } func Balance () int { mu.Lock() b := balance mu.Unlock() return b } mutex &#x4F1A;&#x4FDD;&#x62A4;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#xFF0C;&#x5F53;&#x5DF2;&#x7ECF;&#x6709; goroutine &#x83B7;&#x5F97;&#x8FD9;&#x4E2A;&#x9501;&#xFF0C;&#x518D;&#x6709; goroutine &#x8BBF;&#x95EE;&#x8FD9;&#x4E2A;&#x52A0;&#x9501;&#x7684;&#x53D8;&#x91CF;&#x5C31;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C; &#x76F4;&#x5230;&#x6301;&#x6709;&#x8FD9;&#x4E2A;&#x9501;&#x7684; goroutine unlock &#x8FD9;&#x4E2A;&#x9501;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5; &#x4F7F;&#x7528; defer &#x6765; unlock &#x9501;&#xFF0C;&#x4FDD;&#x8BC1;&#x5728;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x4E4B;&#x540E;&#x6216;&#x8005;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#x8FD4;&#x56DE;&#x65F6;&#x4E00;&#x5B9A;&#x4F1A;&#x6267;&#x884C; unlock &#x3002; &#x8BFB;&#x5199;&#x9501; sync.RWMutex &#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A; goroutine &#x8BFB;&#x53D6;&#x53D8;&#x91CF;&#xFF0C;&#x90A3;&#x4E48;&#x662F;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4F7F;&#x7528; sync.Mutex &#x52A0;&#x9501;&#x5C31;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x3002;&#x53EF;&#x4EE5;&#x4F7F; &#x7528; sync.RWMutex &#x8BFB;&#x5199;&#x9501;&#xFF08;&#x591A;&#x8BFB;&#x5355;&#x5199;&#x9501;&#xFF09;&#x3002; &#x8BFB;&#x5199;&#x9501;&#x662F;&#x628A;&#x5BF9;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x201C;&#x8BFB;&#x64CD;&#x4F5C;&#x201D;&#x548C;&#x201C;&#x5199;&#x64CD;&#x4F5C;&#x201D;&#x533A;&#x522B;&#x5BF9;&#x5F85;&#x4E86;&#x3002;&#x5B83;&#x53EF;&#x4EE5;&#x5BF9;&#x8FD9;&#x4E24;&#x79CD;&#x64CD;&#x4F5C;&#x65BD;&#x52A0;&#x4E0D;&#x540C;&#x7A0B;&#x5EA6;&#x7684;&#x4FDD;&#x62A4; &#x3002; &#x4E00;&#x4E2A;&#x8BFB;&#x5199;&#x9501;&#x4E2D;&#x5B9E;&#x9645;&#x4E0A;&#x5305;&#x542B;&#x4E86;&#x4E24;&#x4E2A;&#x9501;&#xFF0C;&#x5373;&#xFF1A;&#x8BFB;&#x9501;&#x548C;&#x5199;&#x9501;&#x3002; sync.RWMutex &#x7C7B;&#x578B;&#x4E2D;&#x7684; Lock &#x65B9;&#x6CD5;&#x548C; Unlock &#x65B9;&#x6CD5;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5BF9;&#x5199;&#x9501;&#x8FDB;&#x884C; &#x9501;&#x5B9A;&#x548C;&#x89E3;&#x9501;&#xFF0C;&#x800C;&#x5B83;&#x7684; RLock &#x65B9;&#x6CD5;&#x548C; RUnlock &#x65B9;&#x6CD5;&#x5219;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5BF9;&#x8BFB;&#x9501;&#x8FDB;&#x884C;&#x9501;&#x5B9A;&#x548C;&#x89E3;&#x9501;&#x3002; &#x5BF9;&#x4E8E;&#x67D0;&#x4E2A;&#x53D7;&#x5230;&#x8BFB;&#x5199;&#x9501;&#x4FDD;&#x62A4;&#x7684;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#xFF0C;&#x591A;&#x4E2A;&#x5199;&#x64CD;&#x4F5C;&#x4E0D;&#x80FD;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#xFF0C;&#x5199;&#x64CD;&#x4F5C;&#x548C;&#x8BFB;&#x64CD;&#x4F5C;&#x4E5F;&#x4E0D;&#x80FD;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#xFF0C;&#x4F46;&#x591A;&#x4E2A;&#x8BFB;&#x64CD;&#x4F5C;&#x5374;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8FDB;&#x884C; &#x3002; 1 2 3 4 5 6 7 var mu sync.RWMutex var balance int func Balance () int { mu.RLock() // readers lock defer mu.RUnlock() return balance } RLock &#x53EA;&#x80FD;&#x5728;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x5199;&#x5165;&#x64CD;&#x4F5C;&#x65F6;&#x53EF;&#x7528; &#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x53EA;&#x8BFB;&#x64CD;&#x4F5C;&#x4E5F;&#x9700;&#x8981;&#x52A0;&#x9501; &#xFF1F; 1 2 3 4 5 6 7 8 9 var x, y int go func () { x = 1 // A1 fmt.Print( y: , y,   ) // A2 }() go func () { y = 1 // B1 fmt.Print( x: , x,   ) // B2 }() &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x6253;&#x5370;&#x7684;&#x7ED3;&#x679C;&#x53EF;&#x80FD;&#x662F;&#xFF1A; 1 2 3 4 5 6 7 8 y:0 x:1 x:0 y:1 x:1 y:1 y:1 x:1 # &#x8FD8;&#x53EF;&#x80FD;&#x662F; x:0 y:0 y:0 x:0 &#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x6709; x:0 y:0 &#x8FD9;&#x79CD;&#x7ED3;&#x679C;&#xFF0C;&#x5728;&#x4E00;&#x4E2A; goroutine &#x4E2D;&#xFF0C;&#x8BED;&#x53E5;&#x7684;&#x6267;&#x884C;&#x987A;&#x5E8F;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#xFF0C;&#x5728;&#x58F0;&#x660E;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1; &#x6267;&#x884C; x = 1 &#x540E;&#x6253;&#x5370; y: &#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x6253;&#x5370; y: &#x65F6;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x4E2D; y = 1 &#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6267;&#x884C;&#x3002; &#x6240;&#x4EE5;&#x53EF;&#x80FD;&#x7684;&#x8BDD;&#xFF0C;&#x5C06;&#x53D8;&#x91CF;&#x9650;&#x5B9A;&#x5728; goroutine &#x5185;&#x90E8;&#xFF1B;&#x5982;&#x679C;&#x662F;&#x591A;&#x4E2A; goroutine &#x90FD;&#x9700;&#x8981;&#x8BBF;&#x95EE;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x4F7F;&#x7528;&#x4E92;&#x65A5;&#x6761;&#x4EF6;&#x6765;&#x8BBF;&#x95EE;&#x3002; &#x6CE8;&#x610F;&#x4E8B;&#x9879; &#x4E0D;&#x8981;&#x91CD;&#x590D;&#x9501;&#x5B9A;&#x4E92;&#x65A5;&#x9501;&#xFF1B; &#x5BF9;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;&#x88AB;&#x9501;&#x5B9A;&#x7684;&#x4E92;&#x65A5;&#x9501;&#x8FDB;&#x884C;&#x9501;&#x5B9A;&#xFF0C;&#x662F;&#x4F1A;&#x7ACB;&#x5373;&#x963B;&#x585E;&#x5F53;&#x524D;&#x7684; goroutine &#x7684; &#x3002;&#x8FD9;&#x4E2A; goroutine &#x6240;&#x6267;&#x884C;&#x7684;&#x6D41;&#x7A0B;&#xFF0C; &#x4F1A;&#x4E00;&#x76F4;&#x505C;&#x6EDE;&#x5728;&#x8C03;&#x7528;&#x8BE5;&#x4E92;&#x65A5;&#x9501;&#x7684; Lock &#x65B9;&#x6CD5;&#x7684;&#x90A3;&#x884C;&#x4EE3;&#x7801;&#x4E0A;&#x3002;&#x76F4;&#x5230;&#x8BE5;&#x4E92;&#x65A5;&#x9501;&#x7684; Unlock &#x65B9;&#x6CD5;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x91CC;&#x7684;&#x9501;&#x5B9A;&#x64CD;&#x4F5C;&#x6210;&#x529F;&#x5B8C;&#x6210;&#xFF0C;&#x540E;&#x7EED;&#x7684;&#x4EE3;&#x7801; &#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x4E34;&#x754C;&#x533A;&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#xFF09;&#x624D;&#x4F1A;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x3002;&#x8FD9;&#x4E5F;&#x6B63;&#x662F;&#x4E92;&#x65A5;&#x9501;&#x80FD;&#x591F;&#x4FDD;&#x62A4;&#x4E34;&#x754C;&#x533A;&#x7684;&#x539F;&#x56E0;&#x6240;&#x5728;&#x3002; &#x4E0D;&#x8981;&#x5FD8;&#x8BB0;&#x89E3;&#x9501;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x5FC5;&#x8981;&#x65F6;&#x4F7F;&#x7528; defer &#x8BED;&#x53E5;&#xFF1B;&#x907F;&#x514D;&#x91CD;&#x590D;&#x9501;&#x5B9A;&#x3002; &#x4E0D;&#x8981;&#x5BF9;&#x5C1A;&#x672A;&#x9501;&#x5B9A;&#x6216;&#x8005;&#x5DF2;&#x89E3;&#x9501;&#x7684;&#x4E92;&#x65A5;&#x9501;&#x89E3;&#x9501;&#xFF1B; &#x89E3;&#x9501;&#x201C;&#x8BFB;&#x5199;&#x9501;&#x4E2D;&#x672A;&#x88AB;&#x9501;&#x5B9A;&#x7684;&#x5199;&#x9501;&#x201D;&#xFF0C;&#x4F1A;&#x7ACB;&#x5373;&#x5F15;&#x53D1; panic &#xFF0C;&#x5BF9;&#x4E8E;&#x5176;&#x4E2D;&#x7684;&#x8BFB;&#x9501;&#x4E5F;&#x662F;&#x5982;&#x6B64;&#xFF0C;&#x5E76;&#x4E14;&#x540C; &#x6837;&#x662F;&#x4E0D;&#x53EF;&#x6062;&#x590D;&#x7684;&#x3002; &#x4E0D;&#x8981;&#x5728;&#x591A;&#x4E2A;&#x51FD;&#x6570;&#x4E4B;&#x95F4;&#x76F4;&#x63A5;&#x4F20;&#x9012;&#x4E92;&#x65A5;&#x9501;&#x3002;&#x4E00;&#x65E6;&#xFF0C;&#x4F60;&#x628A;&#x4E00;&#x4E2A;&#x4E92;&#x65A5;&#x9501;&#x540C;&#x65F6;&#x7528;&#x5728;&#x4E86;&#x591A;&#x4E2A;&#x5730;&#x65B9;&#xFF0C;&#x5C31;&#x5FC5;&#x7136;&#x4F1A;&#x6709;&#x66F4;&#x591A;&#x7684; goroutine &#x4E89;&#x7528;&#x8FD9;&#x628A;&#x9501;&#x3002; &#x8FD9;&#x4E0D;&#x4F46;&#x4F1A;&#x8BA9;&#x4F60;&#x7684;&#x7A0B;&#x5E8F;&#x53D8;&#x6162;&#xFF0C;&#x8FD8;&#x4F1A;&#x5927;&#x5927;&#x589E;&#x52A0;&#x6B7B;&#x9501;&#xFF08; deadloc k&#xFF09;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x3002; &#x6240;&#x8C13;&#x7684; &#x6B7B;&#x9501; &#xFF0C;&#x6307;&#x7684;&#x5C31;&#x662F;&#x5F53;&#x524D;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x4E3B; goroutine &#xFF0C;&#x4EE5;&#x53CA;&#x6211;&#x4EEC;&#x542F;&#x7528;&#x7684;&#x90A3;&#x4E9B; goroutine &#x90FD;&#x5DF2;&#x7ECF;&#x88AB;&#x963B;&#x585E;&#x3002;&#x8FD9;&#x4E9B; goroutine &#x53EF;&#x4EE5;&#x88AB;&#x7EDF; &#x79F0;&#x4E3A;&#x7528;&#x6237;&#x7EA7;&#x7684; goroutine &#x3002;&#x8FD9;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x6574;&#x4E2A;&#x7A0B;&#x5E8F;&#x90FD;&#x5DF2;&#x7ECF;&#x505C;&#x6EDE;&#x4E0D;&#x524D;&#x4E86;&#x3002; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x662F;&#x4E0D;&#x5141;&#x8BB8;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x51FA;&#x73B0;&#x7684;&#xFF0C;&#x53EA;&#x8981;&#x5B83;&#x53D1;&#x73B0;&#x6240;&#x6709;&#x7684;&#x7528;&#x6237;&#x7EA7; goroutine &#x90FD;&#x5904;&#x4E8E;&#x7B49;&#x5F85;&#x72B6;&#x6001;&#xFF0C;&#x5C31;&#x4F1A;&#x81EA;&#x884C;&#x629B;&#x51FA;&#x4E00;&#x4E2A;&#x5E26;&#x6709;&#x5982;&#x4E0B; &#x4FE1;&#x606F;&#x7684; panic&#xFF1A; fatal error: all goroutines are asleep - deadlock! &#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x79CD;&#x7531; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x81EA;&#x884C;&#x629B;&#x51FA;&#x7684; panic &#x90FD;&#x5C5E;&#x4E8E;&#x81F4;&#x547D;&#x9519;&#x8BEF;&#xFF0C;&#x90FD;&#x662F;&#x65E0;&#x6CD5;&#x88AB;&#x6062;&#x590D;&#x7684;&#xFF0C;&#x8C03;&#x7528; recover &#x51FD;&#x6570;&#x5BF9;&#x5B83;&#x4EEC;&#x8D77;&#x4E0D;&#x5230;&#x4EFB;&#x4F55;&#x4F5C;&#x7528;&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x4E00;&#x65E6;&#x4EA7;&#x751F;&#x6B7B;&#x9501;&#xFF0C;&#x7A0B;&#x5E8F;&#x5FC5;&#x7136;&#x5D29;&#x6E83; &#x3002; &#x6700;&#x7B80;&#x5355;&#x3001;&#x6709;&#x6548;&#x7684;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x8BA9;&#x6BCF;&#x4E00;&#x4E2A;&#x4E92;&#x65A5;&#x9501;&#x90FD;&#x53EA;&#x4FDD;&#x62A4;&#x4E00;&#x4E2A;&#x4E34;&#x754C;&#x533A;&#x6216;&#x4E00;&#x7EC4;&#x76F8;&#x5173;&#x4E34;&#x754C;&#x533A; &#x3002;"},"concurrent/sync_lock.html#条件变量-sync-Cond":{"title":"&#x6761;&#x4EF6;&#x53D8;&#x91CF; sync.Cond","path":"\\golang-learn\\concurrent\\sync_lock.html#条件变量-sync-Cond","body":"&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x662F;&#x57FA;&#x4E8E;&#x4E92;&#x65A5;&#x9501;&#x7684;&#xFF0C;&#x5B83;&#x5FC5;&#x987B;&#x6709;&#x4E92;&#x65A5;&#x9501;&#x7684;&#x652F;&#x6491;&#x624D;&#x80FD;&#x53D1;&#x6325;&#x4F5C;&#x7528;&#x3002;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x88AB;&#x7528;&#x6765;&#x4FDD;&#x62A4;&#x4E34;&#x754C;&#x533A;&#x548C;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#xFF0C;&#x5B83;&#x662F;&#x7528;&#x4E8E;&#x534F;&#x8C03;&#x60F3;&#x8981;&#x8BBF;&#x95EE;&#x5171;&#x4EAB; &#x8D44;&#x6E90;&#x7684;&#x90A3;&#x4E9B;&#x7EBF;&#x7A0B;&#x7684;&#x3002; &#x5F53;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;&#x901A;&#x77E5;&#x88AB;&#x4E92;&#x65A5;&#x9501;&#x963B;&#x585E;&#x7684;&#x7EBF;&#x7A0B; &#x3002; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x5728;&#x8FD9;&#x91CC;&#x7684;&#x6700;&#x5927;&#x4F18;&#x52BF;&#x5C31;&#x662F;&#x5728;&#x6548;&#x7387;&#x65B9;&#x9762;&#x7684;&#x63D0;&#x5347;&#x3002;&#x5F53;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#x4E0D;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x60F3;&#x64CD;&#x4F5C;&#x5B83;&#x7684;&#x7EBF;&#x7A0B;&#x518D;&#x4E5F;&#x4E0D;&#x7528;&#x5FAA;&#x73AF;&#x5F80;&#x590D;&#x5730;&#x505A;&#x68C0;&#x67E5;&#x4E86;&#xFF0C; &#x53EA;&#x8981;&#x7B49;&#x5F85;&#x901A;&#x77E5;&#x5C31;&#x597D;&#x4E86;&#x3002; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x600E;&#x6837;&#x4E0E;&#x4E92;&#x65A5;&#x9501;&#x914D;&#x5408;&#x4F7F;&#x7528; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x5316;&#x79BB;&#x4E0D;&#x5F00;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x7684;&#x65B9;&#x6CD5;&#x6709;&#x7684;&#x4E5F;&#x662F;&#x57FA;&#x4E8E;&#x4E92;&#x65A5;&#x9501;&#x7684;&#x3002; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x6CD5;&#x6709;&#x4E09;&#x4E2A;&#xFF1A;&#x7B49;&#x5F85;&#x901A;&#x77E5;&#xFF08;wait&#xFF09;&#x3001;&#x5355;&#x53D1;&#x901A;&#x77E5;&#xFF08;signal&#xFF09;&#x548C;&#x5E7F;&#x64AD;&#x901A;&#x77E5;&#xFF08;broadcast&#xFF09;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x5229;&#x7528;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7B49;&#x5F85;&#x901A;&#x77E5;&#x7684;&#x65F6;&#x5019;&#xFF0C; &#x9700;&#x8981;&#x5728;&#x5B83;&#x57FA;&#x4E8E;&#x7684;&#x90A3;&#x4E2A;&#x4E92;&#x65A5;&#x9501;&#x4FDD;&#x62A4;&#x4E0B;&#x8FDB;&#x884C;&#x3002;&#x800C;&#x5728;&#x8FDB;&#x884C;&#x5355;&#x53D1;&#x901A;&#x77E5;&#x6216;&#x5E7F;&#x64AD;&#x901A;&#x77E5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5374;&#x662F;&#x6070;&#x6070;&#x76F8;&#x53CD;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x5BF9;&#x5E94;&#x7684;&#x4E92;&#x65A5;&#x9501;&#x89E3;&#x9501;&#x4E4B;&#x540E; &#x518D;&#x505A;&#x8FD9;&#x4E24;&#x79CD;&#x64CD;&#x4F5C;&#x3002; 1 2 3 4 var mailbox uint8 var lock sync.RWMutex sendCond := sync.NewCond(&amp;lock) recvCond := sync.NewCond(lock.RLocker()) lock &#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A; sync.RWMutex &#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x8BFB;&#x5199;&#x9501;&#x3002;&#x57FA;&#x4E8E;&#x8FD9;&#x628A;&#x9501;&#xFF0C;&#x6211;&#x8FD8;&#x521B;&#x5EFA;&#x4E86;&#x4E24;&#x4E2A;&#x4EE3;&#x8868;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x540D;&#x5B57;&#x5206;&#x522B; &#x53EB; sendCond &#x548C; recvCond &#x3002; sync.Cond &#x7C7B;&#x578B;&#x5E76;&#x4E0D;&#x662F;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x7684;&#x3002;&#x53EA;&#x80FD;&#x5229;&#x7528; sync.NewCond &#x51FD;&#x6570;&#x521B;&#x5EFA;&#x5B83;&#x7684;&#x6307;&#x9488;&#x503C; &#x3002; lock &#x53D8;&#x91CF;&#x7684; Lock &#x65B9;&#x6CD5;&#x548C; Unlock &#x65B9;&#x6CD5;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5BF9;&#x5176;&#x4E2D;&#x5199;&#x9501;&#x7684;&#x9501;&#x5B9A;&#x548C;&#x89E3;&#x9501;&#xFF0C;&#x5B83;&#x4EEC;&#x4E0E; sendCond &#x53D8;&#x91CF;&#x7684;&#x542B;&#x4E49;&#x662F;&#x5BF9;&#x5E94;&#x7684;&#x3002; &#x88AB;&#x89C6;&#x4E3A;&#x5BF9;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x5199;&#x64CD;&#x4F5C;&#x3002; &#x521D;&#x59CB;&#x5316; recvCond &#x8FD9; &#x4E2A;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x662F; lock &#x53D8;&#x91CF;&#x4E2D;&#x7684;&#x8BFB;&#x9501;&#xFF0C; sync.RWMutex &#x7C7B;&#x578B;&#x7684; RLocker &#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x8FD9;&#x4E00;&#x9700;&#x6C42;&#x3002; lock.RLocker() &#xFF0C;&#x5728;&#x5176;&#x5185;&#x90E8;&#x4F1A;&#x5206;&#x522B;&#x8C03;&#x7528; lock &#x53D8;&#x91CF;&#x7684; RLock &#x65B9;&#x6CD5;&#x548C; RUnlock &#x65B9;&#x6CD5;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A; mailbox &#x662F;&#x4E00;&#x4E2A;&#x4FE1;&#x7BB1;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x653E;&#x7F6E;&#x7684;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#x4FE1;&#x7BB1;&#x91CC;&#x8FD8;&#x6709;&#x672A;&#x88AB;&#x53D6;&#x8D70;&#x7684;&#x60C5;&#x62A5;&#xFF0C;&#x90A3;&#x5C31;&#x4E0D;&#x518D;&#x653E;&#x7F6E;&#xFF0C;&#x800C;&#x5148;&#x8FD4;&#x56DE;&#x3002;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x5728;&#x83B7;&#x53D6;&#x7684;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#x4FE1; &#x7BB1;&#x91CC;&#x6CA1;&#x6709;&#x60C5;&#x62A5;&#xFF0C;&#x90A3;&#x4E5F;&#x53EA;&#x80FD;&#x5148;&#x56DE;&#x53BB;&#x4E86;&#x3002; 1 2 3 4 5 6 7 lock.Lock() for mailbox == 1 { sendCond.Wait() } mailbox = 1 lock.Unlock() recvCond.Signal() &#x5148;&#x8C03;&#x7528; lock &#x53D8;&#x91CF;&#x7684; Lock &#x65B9;&#x6CD5;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4E2A; Lock &#x65B9;&#x6CD5;&#x5728;&#x8FD9;&#x91CC;&#x610F;&#x5473;&#x7684;&#x662F;&#xFF1A;&#x6301;&#x6709;&#x4FE1;&#x7BB1;&#x4E0A;&#x7684;&#x9501;&#xFF0C;&#x5E76;&#x4E14;&#x6709;&#x6253;&#x5F00;&#x4FE1;&#x7BB1;&#x7684;&#x6743;&#x5229;&#xFF0C; &#x800C;&#x4E0D;&#x662F;&#x9501;&#x4E0A;&#x8FD9;&#x4E2A;&#x9501;&#x3002; &#x68C0;&#x67E5; mailbox &#x53D8;&#x91CF;&#x7684;&#x503C;&#x662F;&#x5426;&#x7B49;&#x4E8E; 1&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x8981;&#x770B;&#x770B;&#x4FE1;&#x7BB1;&#x91CC;&#x662F;&#x4E0D;&#x662F;&#x8FD8;&#x5B58;&#x6709;&#x60C5;&#x62A5;&#x3002;&#x5982;&#x679C;&#x8FD8;&#x6709;&#x60C5;&#x62A5;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x5C31;&#x56DE;&#x5BB6;&#x53BB;&#x7B49;&#x901A;&#x77E5;&#x3002; &#x5982;&#x679C;&#x4FE1;&#x7BB1;&#x91CC;&#x6CA1;&#x6709;&#x60C5;&#x62A5;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x5C31;&#x628A;&#x65B0;&#x60C5;&#x62A5;&#x653E;&#x8FDB;&#x53BB;&#xFF0C;&#x5173;&#x4E0A;&#x4FE1;&#x7BB1;&#x3001;&#x9501;&#x4E0A;&#x9501;&#xFF0C;&#x7136;&#x540E;&#x79BB;&#x5F00;&#x3002;&#x7528;&#x4EE3;&#x7801;&#x8868;&#x8FBE;&#x51FA;&#x6765;&#x5C31;&#x662F; mailbox = 1 &#x548C; lock.Unlock() &#x3002; &#x7136;&#x540E;&#x53D1;&#x901A;&#x77E5;&#xFF0C;&#x201C;&#x4FE1;&#x7BB1;&#x91CC;&#x5DF2;&#x7ECF;&#x6709;&#x65B0;&#x60C5;&#x62A5;&#x4E86;&#x201D;&#xFF0C;&#x6211;&#x4EEC;&#x8C03;&#x7528; recvCond &#x7684; Signal &#x65B9;&#x6CD5;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x8FD9;&#x4E00;&#x6B65;&#x9AA4;&#x3002; &#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x4F60;&#x73B0;&#x5728;&#x662F;&#x53E6;&#x4E00;&#x4E2A; goroutine &#xFF0C;&#x60F3;&#x8981;&#x9002;&#x65F6;&#x5730;&#x4ECE;&#x4FE1;&#x7BB1;&#x4E2D;&#x83B7;&#x53D6;&#x60C5;&#x62A5;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x77E5;&#x6211;&#x3002; 1 2 3 4 5 6 7 lock.RLock() for mailbox == 0 { recvCond.Wait() } mailbox = 0 lock.RUnlock() sendCond.Signal() &#x4E8B;&#x60C5;&#x5728;&#x6D41;&#x7A0B;&#x4E0A;&#x5176;&#x5B9E;&#x57FA;&#x672C;&#x4E00;&#x81F4;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x6BCF;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;&#x7684;&#x5BF9;&#x8C61;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x5148;&#x8981;&#x9501;&#x5B9A;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x57FA;&#x4E8E;&#x7684;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x624D;&#x80FD;&#x8C03;&#x7528;&#x5B83;&#x7684; Wait &#x65B9;&#x6CD5;&#xFF1F; Wait &#x65B9;&#x6CD5;&#x4E3B;&#x8981;&#x505A;&#x4E86;&#x56DB;&#x4EF6;&#x4E8B;&#x3002; &#x628A;&#x8C03;&#x7528;&#x5B83;&#x7684; goroutine &#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x5F53;&#x524D;&#x7684; goroutine &#xFF09;&#x52A0;&#x5165;&#x5230;&#x5F53;&#x524D;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684;&#x901A;&#x77E5;&#x961F;&#x5217;&#x4E2D;&#x3002; &#x89E3;&#x9501;&#x5F53;&#x524D;&#x7684;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x57FA;&#x4E8E;&#x7684;&#x90A3;&#x4E2A;&#x4E92;&#x65A5;&#x9501;&#x3002; &#x8BA9;&#x5F53;&#x524D;&#x7684; goroutine &#x5904;&#x4E8E;&#x7B49;&#x5F85;&#x72B6;&#x6001;&#xFF0C;&#x7B49;&#x5230;&#x901A;&#x77E5;&#x5230;&#x6765;&#x65F6;&#x518D;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x5524;&#x9192;&#x5B83;&#x3002;&#x6B64;&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A; goroutine &#x5C31;&#x4F1A;&#x963B;&#x585E;&#x5728;&#x8C03;&#x7528;&#x8FD9; &#x4E2A; Wait &#x65B9;&#x6CD5;&#x7684;&#x90A3;&#x884C;&#x4EE3;&#x7801;&#x4E0A;&#x3002; &#x5982;&#x679C;&#x901A;&#x77E5;&#x5230;&#x6765;&#x5E76;&#x4E14;&#x51B3;&#x5B9A;&#x5524;&#x9192;&#x8FD9;&#x4E2A; goroutine &#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x5728;&#x5524;&#x9192;&#x5B83;&#x4E4B;&#x540E;&#x91CD;&#x65B0;&#x9501;&#x5B9A;&#x5F53;&#x524D;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x57FA;&#x4E8E;&#x7684;&#x4E92;&#x65A5;&#x9501;&#x3002;&#x81EA;&#x6B64;&#x4E4B;&#x540E;&#xFF0C;&#x5F53;&#x524D; &#x7684; goroutine &#x5C31;&#x4F1A;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x540E;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E86;&#x3002; &#x56E0;&#x4E3A;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Wait &#x65B9;&#x6CD5;&#x5728;&#x963B;&#x585E;&#x5F53;&#x524D;&#x7684; goroutine &#x4E4B;&#x524D;&#x4F1A;&#x89E3;&#x9501;&#x5B83;&#x57FA;&#x4E8E;&#x7684;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8C03;&#x7528;&#x8BE5; Wait &#x65B9;&#x6CD5;&#x4E4B;&#x524D;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5148; &#x9501;&#x5B9A;&#x90A3;&#x4E2A;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x5426;&#x5219;&#x5728;&#x8C03;&#x7528;&#x8FD9;&#x4E2A; Wait &#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x5C31;&#x4F1A;&#x5F15;&#x53D1;&#x4E00;&#x4E2A;&#x4E0D;&#x53EF;&#x6062;&#x590D;&#x7684; panic&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Wait &#x65B9;&#x6CD5;&#x8981;&#x8FD9;&#x4E48;&#x505A;&#x5462;&#xFF1F;&#x4F60;&#x53EF;&#x4EE5;&#x60F3;&#x8C61;&#x4E00;&#x4E0B;&#xFF0C;&#x5982;&#x679C; Wait &#x65B9;&#x6CD5;&#x5728;&#x4E92;&#x65A5;&#x9501;&#x5DF2;&#x7ECF;&#x9501;&#x5B9A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x963B;&#x585E;&#x4E86;&#x5F53;&#x524D;&#x7684; goroutine &#xFF0C; &#x90A3;&#x4E48;&#x53C8;&#x7531;&#x8C01;&#x6765;&#x89E3;&#x9501;&#x5462;&#xFF1F;&#x522B;&#x7684; goroutine &#x5417;&#xFF1F; &#x5148;&#x4E0D;&#x8BF4;&#x8FD9;&#x8FDD;&#x80CC;&#x4E86;&#x4E92;&#x65A5;&#x9501;&#x7684;&#x91CD;&#x8981;&#x4F7F;&#x7528;&#x539F;&#x5219;&#xFF0C;&#x5373;&#xFF1A;&#x6210;&#x5BF9;&#x7684;&#x9501;&#x5B9A;&#x548C;&#x89E3;&#x9501;&#xFF0C;&#x5C31;&#x7B97;&#x522B;&#x7684; goroutine &#x53EF;&#x4EE5;&#x6765;&#x89E3;&#x9501;&#xFF0C;&#x90A3;&#x4E07;&#x4E00;&#x89E3;&#x9501;&#x91CD;&#x590D;&#x4E86;&#x600E;&#x4E48;&#x529E;&#xFF1F; &#x7531;&#x6B64;&#x5F15;&#x53D1;&#x7684; panic &#x53EF;&#x662F;&#x65E0;&#x6CD5;&#x6062;&#x590D;&#x7684;&#x3002; &#x5982;&#x679C;&#x5F53;&#x524D;&#x7684; goroutine &#x65E0;&#x6CD5;&#x89E3;&#x9501;&#xFF0C;&#x522B;&#x7684; goroutine &#x4E5F;&#x90FD;&#x4E0D;&#x6765;&#x89E3;&#x9501;&#xFF0C;&#x90A3;&#x4E48;&#x53C8;&#x7531;&#x8C01;&#x6765;&#x8FDB;&#x5165;&#x4E34;&#x754C;&#x533A;&#xFF0C;&#x5E76;&#x6539;&#x53D8;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#x5462;&#xFF1F;&#x53EA;&#x8981;&#x5171;&#x4EAB;&#x8D44;&#x6E90; &#x7684;&#x72B6;&#x6001;&#x4E0D;&#x53D8;&#xFF0C;&#x5373;&#x4F7F;&#x5F53;&#x524D;&#x7684; goroutine &#x56E0;&#x6536;&#x5230;&#x901A;&#x77E5;&#x800C;&#x88AB;&#x5524;&#x9192;&#xFF0C;&#x4E5F;&#x4F9D;&#x7136;&#x4F1A;&#x518D;&#x6B21;&#x6267;&#x884C;&#x8FD9;&#x4E2A; Wait &#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x518D;&#x6B21;&#x88AB;&#x963B;&#x585E;&#x3002; &#x6240;&#x4EE5;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Wait &#x65B9;&#x6CD5;&#x4E0D;&#x5148;&#x89E3;&#x9501;&#x4E92;&#x65A5;&#x9501;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x53EA;&#x4F1A;&#x9020;&#x6210;&#x4E24;&#x79CD;&#x540E;&#x679C;&#xFF1A;&#x4E0D;&#x662F;&#x5F53;&#x524D;&#x7684;&#x7A0B;&#x5E8F;&#x56E0; panic &#x800C;&#x5D29;&#x6E83;&#xFF0C;&#x5C31;&#x662F;&#x76F8;&#x5173;&#x7684; goroutine &#x5168;&#x9762;&#x963B;&#x585E;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528; for &#x8BED;&#x53E5;&#x6765;&#x5305;&#x88F9;&#x8C03;&#x7528;&#x5176; Wait &#x65B9;&#x6CD5;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x7528; if &#x8BED;&#x53E5;&#x4E0D;&#x884C;&#x5417;&#xFF1F; if &#x8BED;&#x53E5;&#x53EA;&#x4F1A;&#x5BF9;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#x68C0;&#x67E5;&#x4E00;&#x6B21;&#xFF0C;&#x800C; for &#x8BED;&#x53E5;&#x5374;&#x53EF;&#x4EE5;&#x505A;&#x591A;&#x6B21;&#x68C0;&#x67E5;&#xFF0C;&#x76F4;&#x5230;&#x8FD9;&#x4E2A;&#x72B6;&#x6001;&#x6539;&#x53D8;&#x4E3A;&#x6B62;&#x3002; &#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x505A;&#x591A;&#x6B21;&#x68C0;&#x67E5;&#x5462;&#xFF1F; &#x4E3A;&#x4E86;&#x4FDD;&#x9669;&#x8D77;&#x89C1;&#x3002;&#x5982;&#x679C;&#x4E00;&#x4E2A; goroutine &#x56E0;&#x6536;&#x5230;&#x901A;&#x77E5;&#x800C;&#x88AB;&#x5524;&#x9192;&#xFF0C;&#x4F46;&#x5374;&#x53D1;&#x73B0;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x4F9D;&#x7136;&#x4E0D;&#x7B26;&#x5408;&#x5B83;&#x7684;&#x8981;&#x6C42;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x5E94;&#x8BE5;&#x518D;&#x6B21;&#x8C03;&#x7528; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Wait &#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x7EE7;&#x7EED;&#x7B49;&#x5F85;&#x4E0B;&#x6B21;&#x901A;&#x77E5;&#x7684;&#x5230;&#x6765;&#x3002; &#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x662F;&#x5F88;&#x6709;&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x7684;&#x3002; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Signal &#x65B9;&#x6CD5;&#x548C; Broadcast &#x65B9;&#x6CD5;&#x6709;&#x54EA;&#x4E9B;&#x5F02;&#x540C; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Signal &#x65B9;&#x6CD5;&#x548C; Broadcast &#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x88AB;&#x7528;&#x6765;&#x53D1;&#x9001;&#x901A;&#x77E5;&#x7684;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;&#x524D;&#x8005;&#x7684;&#x901A;&#x77E5;&#x53EA;&#x4F1A;&#x5524;&#x9192;&#x4E00;&#x4E2A;&#x56E0;&#x6B64;&#x800C;&#x7B49;&#x5F85;&#x7684; goroutine &#xFF0C; &#x800C;&#x540E;&#x8005;&#x7684;&#x901A;&#x77E5;&#x5374;&#x4F1A;&#x5524;&#x9192;&#x6240;&#x6709;&#x4E3A;&#x6B64;&#x7B49;&#x5F85;&#x7684; goroutine &#x3002; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Wait &#x65B9;&#x6CD5;&#x603B;&#x4F1A;&#x628A;&#x5F53;&#x524D;&#x7684; goroutine &#x6DFB;&#x52A0;&#x5230;&#x901A;&#x77E5;&#x961F;&#x5217;&#x7684;&#x961F;&#x5C3E;&#xFF0C;&#x800C;&#x5B83;&#x7684; Signal &#x65B9;&#x6CD5;&#x603B;&#x4F1A;&#x4ECE;&#x901A;&#x77E5;&#x961F;&#x5217;&#x7684;&#x961F;&#x9996;&#x5F00;&#x59CB;&#x67E5;&#x627E;&#x53EF;&#x88AB; &#x5524;&#x9192;&#x7684; goroutine &#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x56E0; Signal &#x65B9;&#x6CD5;&#x7684;&#x901A;&#x77E5;&#x800C;&#x88AB;&#x5524;&#x9192;&#x7684; goroutine &#x4E00;&#x822C;&#x90FD;&#x662F;&#x6700;&#x65E9;&#x7B49;&#x5F85;&#x7684;&#x90A3;&#x4E00;&#x4E2A;&#x3002;"},"concurrent/sync_lock.html#原子操作":{"title":"&#x539F;&#x5B50;&#x64CD;&#x4F5C;","path":"\\golang-learn\\concurrent\\sync_lock.html#原子操作","body":"Go &#x8BED;&#x8A00;&#x7684;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x5F53;&#x7136;&#x662F;&#x57FA;&#x4E8E; CPU &#x548C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x4E5F;&#x53EA;&#x9488;&#x5BF9;&#x5C11;&#x6570;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x63D0;&#x4F9B;&#x4E86;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x3002;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x90FD;&#x5B58;&#x5728;&#x4E8E;&#x6807;&#x51C6;&#x5E93;&#x4EE3; &#x7801;&#x5305; sync/atomic &#x4E2D;&#x3002; sync/atomic &#x5305;&#x4E2D;&#x7684;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x505A;&#x7684;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x6709;&#xFF1A;&#x52A0;&#x6CD5;&#xFF08;add&#xFF09;&#x3001;&#x6BD4;&#x8F83;&#x5E76;&#x4EA4;&#x6362;&#xFF08;compare and swap&#xFF0C;&#x7B80;&#x79F0; CAS&#xFF09;&#x3001;&#x52A0;&#x8F7D;&#xFF08;load&#xFF09;&#x3001; &#x5B58;&#x50A8;&#xFF08;store&#xFF09;&#x548C;&#x4EA4;&#x6362;&#xFF08;swap&#xFF09;&#x3002; &#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x9488;&#x5BF9;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5E76;&#x4E0D;&#x591A;&#x3002;&#x5BF9;&#x8FD9;&#x4E9B;&#x7C7B;&#x578B;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#xFF0C; sync/atomic &#x5305;&#x90FD;&#x4F1A;&#x6709;&#x4E00;&#x5957;&#x51FD;&#x6570;&#x7ED9;&#x4E88;&#x652F;&#x6301;&#x3002;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x6709;&#xFF1A; int32 &#x3001; int64 &#x3001; uint32 &#x3001; uint64 &#x3001; uintptr &#xFF0C;&#x4EE5;&#x53CA; unsafe &#x5305;&#x4E2D;&#x7684; Pointer &#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x9488;&#x5BF9; unsafe.Pointer &#x7C7B;&#x578B;&#xFF0C;&#x8BE5;&#x5305;&#x5E76;&#x672A;&#x63D0;&#x4F9B;&#x8FDB;&#x884C;&#x539F;&#x5B50;&#x52A0;&#x6CD5;&#x64CD;&#x4F5C;&#x7684;&#x51FD;&#x6570;&#x3002; sync/atomic &#x5305;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; Value &#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; atomic.AddInt32 &#x51FD;&#x6570;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x662F; int32 &#x800C;&#x662F; *int32 &#x5462;&#xFF1F; &#x56E0;&#x4E3A; &#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x9700;&#x8981;&#x7684;&#x662F;&#x88AB;&#x64CD;&#x4F5C;&#x503C;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x8FD9;&#x4E2A;&#x503C;&#x672C;&#x8EAB; &#xFF1B;&#x88AB;&#x4F20;&#x5165;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x503C;&#x90FD;&#x4F1A;&#x88AB;&#x590D;&#x5236;&#xFF0C;&#x50CF;&#x8FD9;&#x79CD;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x4E00;&#x65E6;&#x88AB;&#x4F20;&#x5165;&#x51FD;&#x6570;&#xFF0C; &#x5C31;&#x5DF2;&#x7ECF;&#x4E0E;&#x51FD;&#x6570;&#x5916;&#x7684;&#x90A3;&#x4E2A;&#x503C;&#x6BEB;&#x65E0;&#x5173;&#x7CFB;&#x4E86;&#x3002; &#x6240;&#x4EE5;&#xFF0C;&#x4F20;&#x5165;&#x503C;&#x672C;&#x8EAB;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x610F;&#x4E49;&#x3002; unsafe.Pointer &#x7C7B;&#x578B;&#x867D;&#x7136;&#x662F;&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF0C;&#x4F46;&#x662F;&#x90A3;&#x4E9B;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x8981;&#x64CD;&#x4F5C;&#x7684;&#x662F;&#x8FD9;&#x4E2A;&#x6307;&#x9488;&#x503C;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5B83;&#x6307;&#x5411; &#x7684;&#x90A3;&#x4E2A;&#x503C;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x7684;&#x4ECD;&#x7136;&#x662F;&#x6307;&#x5411;&#x8FD9;&#x4E2A;&#x6307;&#x9488;&#x503C;&#x7684;&#x6307;&#x9488;&#x3002; &#x53EA;&#x8981;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x62FF;&#x5230;&#x4E86;&#x88AB;&#x64CD;&#x4F5C;&#x503C;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5B9A;&#x4F4D;&#x5230;&#x5B58;&#x50A8;&#x8BE5;&#x503C;&#x7684;&#x5185;&#x5B58;&#x5730;&#x5740;&#x3002;&#x53EA;&#x6709;&#x8FD9;&#x6837;&#xFF0C;&#x5B83;&#x4EEC;&#x624D;&#x80FD;&#x591F;&#x901A;&#x8FC7;&#x5E95;&#x5C42;&#x7684;&#x6307;&#x4EE4;&#xFF0C;&#x51C6;&#x786E;&#x5730;&#x64CD;&#x4F5C;&#x8FD9;&#x4E2A;&#x5185; &#x5B58;&#x5730;&#x5740;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x3002;"},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{"title":"&#x6BD4;&#x8F83;&#x5E76;&#x4EA4;&#x6362;&#x64CD;&#x4F5C;&#x4E0E;&#x4EA4;&#x6362;&#x64CD;&#x4F5C;&#x76F8;&#x6BD4;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C;","path":"\\golang-learn\\concurrent\\sync_lock.html#比较并交换操作与交换操作相比有什么不同","body":"&#x6BD4;&#x8F83;&#x5E76;&#x4EA4;&#x6362;&#x64CD;&#x4F5C;&#x5373; CAS &#x64CD;&#x4F5C; &#xFF0C;&#x662F;&#x6709;&#x6761;&#x4EF6;&#x7684;&#x4EA4;&#x6362;&#x64CD;&#x4F5C;&#xFF0C; &#x53EA;&#x6709;&#x5728;&#x6761;&#x4EF6;&#x6EE1;&#x8DB3;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x4F1A;&#x8FDB;&#x884C;&#x503C;&#x7684;&#x4EA4;&#x6362; &#x3002; &#x6240;&#x8C13;&#x7684;&#x4EA4;&#x6362;&#x6307;&#x7684;&#x662F;&#xFF0C;&#x628A;&#x65B0;&#x503C;&#x8D4B;&#x7ED9;&#x53D8;&#x91CF;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x53D8;&#x91CF;&#x7684;&#x65E7;&#x503C; &#x3002; CAS &#x64CD;&#x4F5C;&#x7528;&#x9014;&#x8981;&#x66F4;&#x5E7F;&#x6CDB;&#x4E00;&#x4E9B;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5B83;&#x4E0E; for &#x8BED;&#x53E5;&#x8054;&#x7528;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x4E00;&#x79CD;&#x7B80;&#x6613;&#x7684;&#x81EA;&#x65CB;&#x9501;&#xFF08;spinlock&#xFF09;&#x3002; 1 2 3 4 5 6 7 for { if atomic.CompareAndSwapInt32(&amp;num2, 10 , 0 ) { fmt.Println( The second number has gone to zero. ) break } time.Sleep(time.Millisecond * 500 ) } &#x5728; for &#x8BED;&#x53E5;&#x4E2D;&#x7684; CAS &#x64CD;&#x4F5C;&#x53EF;&#x4EE5;&#x4E0D;&#x505C;&#x5730;&#x68C0;&#x67E5;&#x67D0;&#x4E2A;&#x9700;&#x8981;&#x6EE1;&#x8DB3;&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x4E00;&#x65E6;&#x6761;&#x4EF6;&#x6EE1;&#x8DB3;&#x5C31;&#x9000;&#x51FA; for &#x5FAA;&#x73AF;&#x3002;&#x8FD9;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#xFF0C;&#x53EA;&#x8981;&#x6761;&#x4EF6;&#x672A;&#x88AB;&#x6EE1;&#x8DB3;&#xFF0C; &#x5F53;&#x524D;&#x7684;&#x6D41;&#x7A0B;&#x5C31;&#x4F1A;&#x88AB;&#x4E00;&#x76F4;&#x201C;&#x963B;&#x585E;&#x201D;&#x5728;&#x8FD9;&#x91CC;&#x3002; &#x8FD9;&#x5728;&#x6548;&#x679C;&#x4E0A;&#x4E0E;&#x4E92;&#x65A5;&#x9501;&#x6709;&#x4E9B;&#x7C7B;&#x4F3C;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x9002;&#x7528;&#x573A;&#x666F;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x4F7F;&#x7528;&#x4E92;&#x65A5;&#x9501;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x603B;&#x662F;&#x5047;&#x8BBE;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#x4F1A;&#x88AB;&#x5176;&#x4ED6; &#x7684; goroutine &#x9891;&#x7E41;&#x5730;&#x6539;&#x53D8;&#x3002; &#x800C; for &#x8BED;&#x53E5;&#x52A0; CAS &#x64CD;&#x4F5C;&#x7684;&#x5047;&#x8BBE;&#x5F80;&#x5F80;&#x662F;&#xFF1A;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x72B6;&#x6001;&#x7684;&#x6539;&#x53D8;&#x5E76;&#x4E0D;&#x9891;&#x7E41;&#xFF0C;&#x6216;&#x8005;&#xFF0C;&#x5B83;&#x7684;&#x72B6;&#x6001;&#x603B;&#x4F1A;&#x53D8;&#x6210;&#x671F;&#x671B;&#x7684;&#x90A3;&#x6837;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x66F4;&#x52A0;&#x4E50;&#x89C2;&#xFF0C; &#x6216;&#x8005;&#x8BF4;&#x66F4;&#x52A0;&#x5BBD;&#x677E;&#x7684;&#x505A;&#x6CD5;&#x3002; &#x5047;&#x8BBE;&#x6211;&#x5DF2;&#x7ECF;&#x4FDD;&#x8BC1;&#x4E86;&#x5BF9;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x5199;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;&#x52A0;&#x6216;&#x51CF;&#x3001;&#x5B58;&#x50A8;&#x3001;&#x4EA4;&#x6362;&#x7B49;&#x7B49;&#xFF0C;&#x90A3;&#x6211;&#x5BF9;&#x5B83;&#x8FDB;&#x884C;&#x8BFB;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x6709;&#x5FC5;&#x8981;&#x4F7F;&#x7528;&#x539F; &#x5B50;&#x64CD;&#x4F5C;&#x5417; &#xFF1F; &#x5F88;&#x6709;&#x5FC5;&#x8981;&#x3002;&#x5176;&#x4E2D;&#x7684;&#x9053;&#x7406;&#x4F60;&#x53EF;&#x4EE5;&#x5BF9;&#x7167;&#x4E00;&#x4E0B;&#x8BFB;&#x5199;&#x9501;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x5728;&#x8BFB;&#x5199;&#x9501;&#x4FDD;&#x62A4;&#x4E0B;&#x7684;&#x5199;&#x64CD;&#x4F5C;&#x548C;&#x8BFB;&#x64CD;&#x4F5C;&#x4E4B;&#x95F4;&#x662F;&#x4E92;&#x65A5;&#x7684;&#xFF1F;&#x8FD9;&#x662F;&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x8BFB;&#x64CD;&#x4F5C;&#x8BFB;&#x5230;&#x6CA1;&#x6709; &#x88AB;&#x4FEE;&#x6539;&#x5B8C;&#x7684;&#x503C;&#xFF0C;&#x5BF9;&#x5417;&#xFF1F; &#x5982;&#x679C;&#x5199;&#x64CD;&#x4F5C;&#x8FD8;&#x6CA1;&#x6709;&#x8FDB;&#x884C;&#x5B8C;&#xFF0C;&#x8BFB;&#x64CD;&#x4F5C;&#x5C31;&#x6765;&#x8BFB;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x53EA;&#x80FD;&#x8BFB;&#x5230;&#x4EC5;&#x4FEE;&#x6539;&#x4E86;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x503C;&#x3002;&#x8FD9;&#x663E;&#x7136;&#x7834;&#x574F;&#x4E86;&#x503C;&#x7684;&#x5B8C;&#x6574;&#x6027;&#xFF0C;&#x8BFB;&#x51FA;&#x6765;&#x7684;&#x503C;&#x4E5F;&#x662F;&#x5B8C;&#x5168;&#x9519;&#x8BEF;&#x7684;&#x3002; &#x6240;&#x4EE5;&#xFF0C;&#x4E00;&#x65E6;&#x4F60;&#x51B3;&#x5B9A;&#x4E86;&#x8981;&#x5BF9;&#x4E00;&#x4E2A;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x8FDB;&#x884C;&#x4FDD;&#x62A4;&#xFF0C;&#x90A3;&#x5C31;&#x8981;&#x505A;&#x5230;&#x5B8C;&#x5168;&#x7684;&#x4FDD;&#x62A4;&#x3002;&#x4E0D;&#x5B8C;&#x5168;&#x7684;&#x4FDD;&#x62A4;&#x57FA;&#x672C;&#x4E0A;&#x4E0E;&#x4E0D;&#x4FDD;&#x62A4;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#x3002;"},"concurrent/sync_lock.html#sync-atomic-Value":{"title":"sync/atomic.Value","path":"\\golang-learn\\concurrent\\sync_lock.html#sync-atomic-Value","body":"&#x6B64;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x4E2A;&#x5BB9;&#x5668;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;&#x201C;&#x539F;&#x5B50;&#x5730;&#x201D;&#x5B58;&#x50A8;&#x548C;&#x52A0;&#x8F7D;&#x4EFB;&#x610F;&#x7684;&#x503C;&#x3002;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x3002; &#x5B83;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#x2014;&#x2014; Store &#x548C; Load &#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x867D;&#x7136;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x6709;&#x4E00;&#x4E9B;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x5730;&#x65B9;&#x7684;&#x3002; &#x4E00;&#x65E6; atomic.Value &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x539F;&#x5B50;&#x503C;&#xFF09;&#x88AB;&#x771F;&#x6B63;&#x4F7F;&#x7528;&#xFF0C;&#x5B83;&#x5C31;&#x4E0D;&#x5E94;&#x8BE5;&#x518D;&#x88AB;&#x590D;&#x5236;&#x4E86;&#x3002;&#x53EA;&#x8981;&#x7528;&#x5B83;&#x6765;&#x5B58;&#x50A8;&#x503C;&#x4E86;&#xFF0C;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x5F00;&#x59CB;&#x771F;&#x6B63;&#x4F7F;&#x7528;&#x4E86;&#x3002; atomic.Value &#x7C7B;&#x578B;&#x5C5E;&#x4E8E;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#xFF0C;&#x800C;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x5C5E;&#x4E8E;&#x503C;&#x7C7B;&#x578B;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x590D;&#x5236;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x5B8C;&#x5168;&#x5206;&#x79BB;&#x7684;&#x65B0;&#x503C;&#x3002;&#x8FD9;&#x4E2A;&#x65B0;&#x503C;&#x76F8;&#x5F53;&#x4E8E;&#x88AB; &#x590D;&#x5236;&#x7684;&#x90A3;&#x4E2A;&#x503C;&#x7684;&#x4E00;&#x4E2A;&#x5FEB;&#x7167;&#x3002;&#x4E4B;&#x540E;&#xFF0C;&#x4E0D;&#x8BBA;&#x540E;&#x8005;&#x5B58;&#x50A8;&#x7684;&#x503C;&#x600E;&#x6837;&#x6539;&#x53D8;&#xFF0C;&#x90FD;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x524D;&#x8005;&#x3002; &#x4E0D;&#x80FD;&#x7528;&#x539F;&#x5B50;&#x503C;&#x5B58;&#x50A8; nil &#x3002; &#x6211;&#x4EEC;&#x5411;&#x539F;&#x5B50;&#x503C;&#x5B58;&#x50A8;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x51B3;&#x5B9A;&#x4E86;&#x5B83;&#x4ECA;&#x540E;&#x80FD;&#x4E14;&#x53EA;&#x80FD;&#x5B58;&#x50A8;&#x54EA;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; &#x5C3D;&#x91CF;&#x4E0D;&#x8981;&#x5411;&#x539F;&#x5B50;&#x503C;&#x4E2D;&#x5B58;&#x50A8;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002;&#x56E0;&#x4E3A;&#x8FD9;&#x5F88;&#x5BB9;&#x6613;&#x9020;&#x6210;&#x5B89;&#x5168;&#x6F0F;&#x6D1E;&#x3002; 1 2 3 4 var box6 atomic.Value v6 := [] int { 1 , 2 , 3 } box6.Store(v6) v6[ 1 ] = 4 // &#x6CE8;&#x610F;&#xFF0C;&#x6B64;&#x5904;&#x7684;&#x64CD;&#x4F5C;&#x4E0D;&#x662F;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#xFF01; &#x5207;&#x7247;&#x7C7B;&#x578B;&#x5C5E;&#x4E8E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x5728;&#x5916;&#x9762;&#x6539;&#x52A8;&#x8FD9;&#x4E2A;&#x5207;&#x7247;&#x503C;&#xFF0C;&#x5C31;&#x7B49;&#x4E8E;&#x4FEE;&#x6539;&#x4E86; box6 &#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x90A3;&#x4E2A;&#x503C;&#x3002;&#x8FD9;&#x76F8;&#x5F53;&#x4E8E;&#x7ED5;&#x8FC7;&#x4E86;&#x539F;&#x5B50;&#x503C;&#x800C;&#x8FDB;&#x884C;&#x4E86;&#x975E;&#x5E76;&#x53D1; &#x5B89;&#x5168;&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x600E;&#x6837;&#x4FEE;&#x8865;&#xFF1A; 1 2 3 4 5 6 7 store := func (v [] int ) { replica := make ([] int , len (v)) copy (replica, v) box6.Store(replica) } store(v6) v6[ 2 ] = 5 // &#x6B64;&#x5904;&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x5B89;&#x5168;&#x7684;&#x3002; &#x5148;&#x4E3A;&#x5207;&#x7247;&#x503C; v6 &#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x5B8C;&#x5168;&#x7684;&#x526F;&#x672C;&#x3002;&#x8FD9;&#x4E2A;&#x526F;&#x672C;&#x6D89;&#x53CA;&#x7684;&#x6570;&#x636E;&#x5DF2;&#x7ECF;&#x4E0E;&#x539F;&#x503C;&#x6BEB;&#x4E0D;&#x76F8;&#x5E72;&#x4E86;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x6211;&#x518D;&#x628A;&#x8FD9;&#x4E2A;&#x526F;&#x672C;&#x5B58;&#x5165; box6 &#x3002;&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C; &#x65E0;&#x8BBA;&#x6211;&#x518D;&#x5BF9; v6 &#x7684;&#x503C;&#x505A;&#x600E;&#x6837;&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x90FD;&#x4E0D;&#x4F1A;&#x7834;&#x574F; box6 &#x63D0;&#x4F9B;&#x7684;&#x5B89;&#x5168;&#x4FDD;&#x62A4;&#x3002;"},"concurrent/sync_lock.html#sync-WaitGroup":{"title":"sync.WaitGroup","path":"\\golang-learn\\concurrent\\sync_lock.html#sync-WaitGroup","body":"&#x5728;&#x4E00;&#x4E9B;&#x573A;&#x5408;&#x4E0B;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x901A;&#x9053;&#x7684;&#x65B9;&#x5F0F;&#x770B;&#x8D77;&#x6765;&#x90FD;&#x4F3C;&#x4E4E;&#x6709;&#x4E9B;&#x8E69;&#x811A;&#x3002;&#x6BD4;&#x5982;&#xFF1A;&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x4F7F;&#x5B83;&#x7684;&#x5BB9;&#x91CF;&#x4E0E;&#x6211;&#x4EEC;&#x624B;&#x52A8;&#x542F;&#x7528;&#x7684; goroutine &#x7684;&#x6570;&#x91CF;&#x76F8;&#x540C;&#x3002; &#x4E4B;&#x540E;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x8BA9;&#x4E3B; goroutine &#x7B49;&#x5F85;&#x5176;&#x4ED6; goroutine &#x7684;&#x8FD0;&#x884C;&#x7ED3;&#x675F;&#x3002;&#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#x5C31;&#x662F;&#xFF1A;&#x8BA9;&#x5176;&#x4ED6;&#x7684; goroutine &#x5728;&#x8FD0;&#x884C;&#x7ED3;&#x675F;&#x4E4B;&#x524D;&#xFF0C; &#x90FD;&#x5411;&#x8FD9;&#x4E2A;&#x901A;&#x9053;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x5E76;&#x4E14;&#xFF0C;&#x8BA9;&#x4E3B; goroutine &#x5728;&#x6700;&#x540E;&#x4ECE;&#x8FD9;&#x4E2A;&#x901A;&#x9053;&#x4E2D;&#x63A5;&#x6536;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x63A5;&#x6536;&#x7684;&#x6B21;&#x6570;&#x9700;&#x8981;&#x4E0E;&#x5176;&#x4ED6;&#x7684; goroutine &#x7684;&#x6570;&#x91CF;&#x76F8;&#x540C;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 func coordinateWithChan () { sign := make ( chan struct {}, 2 ) num := int32 ( 0 ) fmt.Printf( The number: %d [with chan struct{}]\\n , num) max := int32 ( 10 ) go addNum(&amp;num, 1 , max, func () { sign - struct {}{} }) go addNum(&amp;num, 2 , max, func () { sign - struct {}{} }) -sign -sign } coordinateWithChan &#x51FD;&#x6570;&#x4E2D;&#x6700;&#x540E;&#x7684;&#x90A3;&#x4E24;&#x884C;&#x4EE3;&#x7801;&#x4E86;&#x5417;&#xFF1F;&#x91CD;&#x590D;&#x7684;&#x4E24;&#x4E2A;&#x63A5;&#x6536;&#x8868;&#x8FBE;&#x5F0F; -sign &#xFF0C;&#x5F88;&#x4E11;&#x964B;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x9009;&#x7528;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x540C;&#x6B65;&#x5DE5;&#x5177;&#xFF0C;&#x5373;&#xFF1A; sync &#x5305;&#x7684; WaitGroup &#x7C7B;&#x578B;&#x3002;&#x5B83;&#x6BD4;&#x901A;&#x9053;&#x66F4;&#x52A0;&#x9002;&#x5408;&#x5B9E;&#x73B0;&#x8FD9;&#x79CD;&#x4E00;&#x5BF9;&#x591A;&#x7684; goroutine &#x534F;&#x4F5C;&#x6D41;&#x7A0B;&#x3002; sync.WaitGroup &#x7C7B;&#x578B;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0; WaitGroup &#x7C7B;&#x578B;&#xFF09;&#x662F;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x7684;&#xFF0C;&#x4E5F;&#x662F;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#x3002; WaitGroup &#x7C7B;&#x578B;&#x62E5;&#x6709;&#x4E09;&#x4E2A;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#xFF1A; Add &#x3001; Done &#x548C; Wait &#x3002; &#x4F60;&#x53EF;&#x4EE5;&#x60F3;&#x8C61;&#x8BE5;&#x7C7B;&#x578B;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#xFF0C;&#x5B83;&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x662F; 0 &#x3002;&#x6211;&#x4EEC;&#x53EF; &#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x8BE5;&#x7C7B;&#x578B;&#x503C;&#x7684; Add &#x65B9;&#x6CD5;&#x6765;&#x589E;&#x52A0;&#xFF0C;&#x6216;&#x8005;&#x51CF;&#x5C11;&#x8FD9;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x503C; &#x3002; &#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4F1A;&#x7528;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x6765;&#x8BB0;&#x5F55;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x7684; goroutine &#x7684;&#x6570;&#x91CF;&#x3002;&#x76F8;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x7684; Done &#x65B9;&#x6CD5;&#xFF0C;&#x7528;&#x4E8E;&#x5BF9;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x4E2D;&#x8BA1;&#x6570;&#x5668; &#x7684;&#x503C;&#x8FDB;&#x884C;&#x51CF;&#x4E00;&#x64CD;&#x4F5C; &#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x7684; goroutine &#x4E2D;&#xFF0C;&#x901A;&#x8FC7; defer &#x8BED;&#x53E5;&#x8C03;&#x7528;&#x5B83;&#x3002; &#x800C; &#x6B64;&#x7C7B;&#x578B;&#x7684; Wait &#x65B9;&#x6CD5;&#x7684;&#x529F;&#x80FD;&#x662F;&#xFF0C;&#x963B;&#x585E;&#x5F53;&#x524D;&#x7684; goroutine &#xFF0C;&#x76F4;&#x5230;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x4E2D;&#x7684;&#x8BA1;&#x6570;&#x5668;&#x5F52;&#x96F6; &#x3002; &#x6539;&#x9020;&#x7248;&#x672C;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 func coordinateWithWaitGroup () { \t var wg sync.WaitGroup \twg.Add( 2 ) \tnum := int32 ( 0 ) \tfmt.Printf( The number: %d [with sync.WaitGroup]\\n , num) \tmax := int32 ( 10 ) \t go addNum(&amp;num, 3 , max, wg.Done) \t go addNum(&amp;num, 4 , max, wg.Done) \twg.Wait() } &#x5C3D;&#x91CF;&#x4E0D;&#x8981;&#x5728; go &#x51FD;&#x6570;&#x5185;&#x90E8;&#x8C03;&#x7528; Add &#xFF0C;&#x4EE5;&#x514D; Add &#x8FD8;&#x672A;&#x6267;&#x884C;&#xFF0C; Wait &#x5DF2;&#x7ECF;&#x9000;&#x51FA; &#xFF1A; 1 2 3 4 5 6 7 8 var wg sync.WaitGroup go func () { \twg.Add( 1 ) \tfmt.Println( test ) }() wg.Wait() fmt.Println( exit. ) sync.WaitGroup &#x7C7B;&#x578B;&#x503C;&#x4E2D;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x5C0F;&#x4E8E; 0 &#x5417; &#x4E0D;&#x53EF;&#x4EE5;&#x3002; &#x5C0F;&#x4E8E; 0&#xFF0C;&#x4F1A;&#x5F15;&#x53D1;&#x4E00;&#x4E2A; panic &#x3002; WaitGroup &#x503C;&#x662F;&#x53EF;&#x4EE5;&#x88AB;&#x590D;&#x7528;&#x7684;&#xFF0C;&#x4F46;&#x9700;&#x8981;&#x4FDD;&#x8BC1;&#x5176;&#x8BA1;&#x6570;&#x5468;&#x671F;&#x7684;&#x5B8C;&#x6574;&#x6027; &#x3002;&#x8FD9;&#x91CC;&#x7684;&#x8BA1;&#x6570;&#x5468;&#x671F;&#x6307;&#x7684;&#x662F;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF1A;&#x8BE5;&#x503C;&#x4E2D;&#x7684;&#x8BA1;&#x6570;&#x5668;&#x503C;&#x7531; 0 &#x53D8;&#x4E3A; &#x4E86;&#x67D0;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x800C;&#x540E;&#x53C8;&#x7ECF;&#x8FC7;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x6700;&#x7EC8;&#x7531;&#x67D0;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x53C8;&#x53D8;&#x56DE;&#x4E86; 0&#x3002; &#x5982;&#x679C;&#x5728;&#x4E00;&#x4E2A;&#x6B64;&#x7C7B;&#x503C;&#x7684; Wait &#x65B9;&#x6CD5;&#x88AB;&#x6267;&#x884C;&#x671F;&#x95F4;&#xFF0C;&#x8DE8;&#x8D8A;&#x4E86;&#x4E24;&#x4E2A;&#x8BA1;&#x6570;&#x5468;&#x671F;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x5F15;&#x53D1;&#x4E00;&#x4E2A; panic&#x3002; &#x4F7F;&#x7528;&#x6CE8;&#x610F; &#x4E0D;&#x8981;&#x628A;&#x589E;&#x52A0;&#x5176;&#x8BA1;&#x6570;&#x5668;&#x503C;&#x7684;&#x64CD;&#x4F5C;&#x548C;&#x8C03;&#x7528;&#x5176; Wait &#x65B9;&#x6CD5;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x653E;&#x5728;&#x4E0D;&#x540C;&#x7684; goroutine &#x4E2D;&#x6267;&#x884C;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x8981; &#x675C;&#x7EDD;&#x5BF9;&#x540C;&#x4E00;&#x4E2A; WaitGroup &#x503C;&#x7684;&#x4E24;&#x79CD;&#x64CD;&#x4F5C;&#x7684;&#x5E76;&#x53D1;&#x6267;&#x884C; &#x3002;"},"concurrent/sync_lock.html#sync-Once":{"title":"sync.Once","path":"\\golang-learn\\concurrent\\sync_lock.html#sync-Once","body":"&#x4E0E; sync.WaitGroup &#x7C7B;&#x578B;&#x4E00;&#x6837;&#xFF0C; sync.Once &#x7C7B;&#x578B;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0; Once &#x7C7B;&#x578B;&#xFF09;&#x4E5F;&#x5C5E;&#x4E8E;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#xFF0C;&#x540C;&#x6837;&#x4E5F;&#x662F;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x548C;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#x3002; &#x7531;&#x4E8E;&#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x4E2A; sync.Mutex &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x590D;&#x5236;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x4E5F;&#x4F1A;&#x5BFC;&#x81F4;&#x529F;&#x80FD;&#x7684;&#x5931;&#x6548;&#x3002; 1 2 3 4 5 6 7 var loadIconsOnce sync.Once var icons map [ string ]image.Image // Concurrency-safe. func Icon (name string ) image . Image { loadIconsOnce.Do(loadIcons) return icons[name] } Once &#x7C7B;&#x578B;&#x7684; Do &#x65B9;&#x6CD5;&#x53EA;&#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x662F; func() &#xFF0C;&#x5373;&#xFF1A;&#x65E0;&#x53C2;&#x6570;&#x58F0;&#x660E;&#x548C;&#x7ED3;&#x679C;&#x58F0;&#x660E;&#x7684;&#x51FD;&#x6570;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x529F;&#x80FD;&#x5E76; &#x4E0D;&#x662F;&#x5BF9;&#x6BCF;&#x4E00;&#x79CD;&#x53C2;&#x6570;&#x51FD;&#x6570;&#x90FD;&#x53EA;&#x6267;&#x884C;&#x4E00;&#x6B21;&#xFF0C;&#x800C;&#x662F;&#x53EA; &#x6267;&#x884C;&#x201C;&#x9996;&#x6B21;&#x88AB;&#x8C03;&#x7528;&#x65F6;&#x4F20;&#x5165;&#x7684;&#x201D;&#x90A3;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x4E4B;&#x540E;&#x4E0D;&#x4F1A;&#x518D;&#x6267;&#x884C;&#x4EFB;&#x4F55;&#x53C2;&#x6570;&#x51FD;&#x6570; &#x3002; &#x6240;&#x4EE5;&#xFF0C; &#x5982;&#x679C;&#x4F60;&#x6709;&#x591A;&#x4E2A;&#x53EA;&#x9700;&#x8981;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x5E94;&#x8BE5;&#x4E3A;&#x5B83;&#x4EEC;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x90FD;&#x5206;&#x914D;&#x4E00;&#x4E2A; sync.Once &#x7C7B;&#x578B;&#x7684;&#x503C; &#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0; Once &#x503C;&#xFF09;&#x3002; Once &#x7C7B;&#x578B;&#x4E2D;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x53EB; done &#x7684; uint32 &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x3002; &#x5B83;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x8BB0;&#x5F55;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x7684; Do &#x65B9;&#x6CD5;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x6B21;&#x6570;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8BE5;&#x5B57;&#x6BB5;&#x7684;&#x503C; &#x53EA;&#x53EF;&#x80FD;&#x662F; 0 &#x6216;&#x8005; 1&#x3002;&#x4E00;&#x65E6; Do &#x65B9;&#x6CD5;&#x7684;&#x9996;&#x6B21;&#x8C03;&#x7528;&#x5B8C;&#x6210;&#xFF0C;&#x5B83;&#x7684;&#x503C;&#x5C31;&#x4F1A;&#x4ECE; 0 &#x53D8;&#x4E3A; 1 &#x3002; &#x65E2;&#x7136; done &#x5B57;&#x6BB5;&#x7684;&#x503C;&#x4E0D;&#x662F; 0 &#x5C31;&#x662F; 1&#xFF0C;&#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x8981;&#x4F7F;&#x7528;&#x9700;&#x8981;&#x56DB;&#x4E2A;&#x5B57;&#x8282;&#x7684; uint32 &#x7C7B;&#x578B;&#x5462; &#xFF1F; &#x539F;&#x56E0;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x56E0;&#x4E3A;&#x5BF9;&#x5B83;&#x7684;&#x64CD;&#x4F5C;&#x5FC5;&#x987B;&#x662F;&#x201C;&#x539F;&#x5B50;&#x201D;&#x7684;&#x3002; Do &#x65B9;&#x6CD5;&#x5728;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x4F1A;&#x901A;&#x8FC7;&#x8C03;&#x7528; atomic.LoadUint32 &#x51FD;&#x6570;&#x6765;&#x83B7;&#x53D6;&#x8BE5;&#x5B57;&#x6BB5;&#x7684;&#x503C;&#xFF0C;&#x5E76;&#x4E14;&#x4E00;&#x65E6; &#x53D1;&#x73B0;&#x8BE5;&#x503C;&#x4E3A; 1 &#x5C31;&#x4F1A;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x3002;&#x8FD9;&#x4E5F;&#x521D;&#x6B65;&#x4FDD;&#x8BC1;&#x4E86;&#x201C; Do &#x65B9;&#x6CD5;&#xFF0C;&#x53EA;&#x4F1A;&#x6267;&#x884C;&#x9996;&#x6B21;&#x88AB;&#x8C03;&#x7528;&#x65F6;&#x4F20;&#x5165;&#x7684;&#x51FD;&#x6570;&#x201D;&#x3002; Do &#x65B9;&#x6CD5;&#x5728;&#x529F;&#x80FD;&#x65B9;&#x9762;&#x7684;&#x4E24;&#x4E2A;&#x7279;&#x70B9; &#x7531;&#x4E8E; Do &#x65B9;&#x6CD5;&#x53EA;&#x4F1A;&#x5728;&#x53C2;&#x6570;&#x51FD;&#x6570;&#x6267;&#x884C;&#x7ED3;&#x675F;&#x4E4B;&#x540E;&#x628A; done &#x5B57;&#x6BB5;&#x7684;&#x503C;&#x53D8;&#x4E3A; 1&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5982;&#x679C;&#x53C2;&#x6570;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x9700;&#x8981;&#x5F88;&#x957F;&#x65F6;&#x95F4;&#x6216;&#x8005;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x4F1A;&#x7ED3;&#x675F; &#xFF08;&#x6BD4;&#x5982;&#x6267;&#x884C;&#x4E00;&#x4E9B;&#x5B88;&#x62A4;&#x4EFB;&#x52A1;&#xFF09;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x5BFC;&#x81F4;&#x76F8;&#x5173; goroutine &#x7684;&#x540C;&#x65F6;&#x963B;&#x585E; Do &#x65B9;&#x6CD5;&#x5728;&#x53C2;&#x6570;&#x51FD;&#x6570;&#x6267;&#x884C;&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x5BF9; done &#x5B57;&#x6BB5;&#x7684;&#x8D4B;&#x503C;&#x7528;&#x7684;&#x662F;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x4E14;&#xFF0C;&#x8FD9;&#x4E00;&#x64CD;&#x4F5C;&#x662F;&#x88AB;&#x6302;&#x5728; defer &#x8BED;&#x53E5;&#x4E2D;&#x7684;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4E0D;&#x8BBA;&#x53C2;&#x6570; &#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x4F1A;&#x4EE5;&#x600E;&#x6837;&#x7684;&#x65B9;&#x5F0F;&#x7ED3;&#x675F;&#xFF0C; done &#x5B57;&#x6BB5;&#x7684;&#x503C;&#x90FD;&#x4F1A;&#x53D8;&#x4E3A; 1&#x3002;"},"concurrent/sync_lock.html#context-Context-类型":{"title":"context.Context &#x7C7B;&#x578B;","path":"\\golang-learn\\concurrent\\sync_lock.html#context-Context-类型","body":"&#x4F7F;&#x7528; WaitGroup &#x503C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x6700;&#x597D;&#x7528; &#x5148;&#x7EDF;&#x4E00; Add &#xFF0C;&#x518D;&#x5E76;&#x53D1; Done &#xFF0C;&#x6700;&#x540E; Wait &#x7684;&#x6807;&#x51C6;&#x6A21;&#x5F0F;&#x6765;&#x6784;&#x5EFA;&#x534F;&#x4F5C;&#x6D41;&#x7A0B;&#x3002;&#x5982;&#x679C;&#x5728;&#x8C03;&#x7528; &#x8BE5;&#x503C;&#x7684; Wait &#x65B9;&#x6CD5;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x4E3A;&#x4E86;&#x589E;&#x5927;&#x5176;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x503C;&#xFF0C;&#x800C;&#x5E76;&#x53D1;&#x5730;&#x8C03;&#x7528;&#x8BE5;&#x503C;&#x7684; Add &#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x5F88;&#x53EF;&#x80FD;&#x4F1A;&#x5F15;&#x53D1; panic&#x3002; &#x4F46;&#x662F; &#x5982;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x5728;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x786E;&#x5B9A;&#x6267;&#x884C;&#x5B50;&#x4EFB;&#x52A1;&#x7684; goroutine &#x7684;&#x6570;&#x91CF;&#xFF0C;&#x90A3;&#x4E48;&#x4F7F;&#x7528; WaitGroup &#x503C;&#x6765;&#x534F;&#x8C03;&#x5B83;&#x4EEC;&#x548C;&#x5206;&#x53D1;&#x5B50;&#x4EFB; &#x52A1;&#x7684; goroutine &#xFF0C;&#x5C31;&#x662F;&#x6709;&#x4E00;&#x5B9A;&#x98CE;&#x9669;&#x7684; &#x3002;&#x4E00;&#x4E2A;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x662F;&#xFF1A; &#x5206;&#x6279;&#x5730;&#x542F;&#x7528;&#x6267;&#x884C;&#x5B50;&#x4EFB;&#x52A1;&#x7684; goroutine &#x3002; &#x53EA;&#x8981;&#x6211;&#x4EEC;&#x5728;&#x4E25;&#x683C;&#x9075;&#x5FAA;&#x4E0A;&#x8FF0;&#x89C4;&#x5219;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;&#x5206;&#x6279;&#x5730;&#x542F;&#x7528;&#x6267;&#x884C;&#x5B50;&#x4EFB;&#x52A1;&#x7684; goroutine &#xFF0C;&#x5C31;&#x80AF;&#x5B9A;&#x4E0D;&#x4F1A;&#x6709;&#x95EE;&#x9898;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 func coordinateWithWaitGroup () { total := 12 stride := 3 var num int32 fmt.Printf( The number: %d [with sync.WaitGroup]\\n , num) var wg sync.WaitGroup for i := 1 ; i = total; i = i + stride { wg.Add(stride) for j := 0 ; j  stride; j++ { go addNum(&amp;num, i+j, wg.Done) } wg.Wait() } fmt.Println( End. ) } &#x4F7F;&#x7528; context &#x5305;&#x4E2D;&#x7684;&#x7A0B;&#x5E8F;&#x5B9E;&#x4F53;&#xFF0C;&#x5B9E;&#x73B0;&#x4E00;&#x5BF9;&#x591A;&#x7684; goroutine &#x534F;&#x4F5C;&#x6D41;&#x7A0B; &#x7528; context &#x5305;&#x4E2D;&#x7684;&#x51FD;&#x6570;&#x548C; Context &#x7C7B;&#x578B;&#x4F5C;&#x4E3A;&#x5B9E;&#x73B0;&#x5DE5;&#x5177;&#xFF0C;&#x5B9E;&#x73B0; coordinateWithContext &#x7684;&#x51FD;&#x6570;&#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5E94;&#x8BE5;&#x5177;&#x6709;&#x4E0A; &#x9762; coordinateWithWaitGroup &#x51FD;&#x6570;&#x76F8;&#x540C;&#x7684;&#x529F;&#x80FD;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 func coordinateWithContext () { \ttotal := 12 \t var num int32 \tfmt.Printf( The number: %d [with context.Context]\\n , num) \tcxt, cancelFunc := context.WithCancel(context.Background()) \t for i := 1 ; i = total; i++ { \t\t go addNum(&amp;num, i, func () { \t\t\t if atomic.LoadInt32(&amp;num) == int32 (total) { \t\t\t\tcancelFunc() \t\t\t} \t\t}) \t} \t-cxt.Done() \tfmt.Println( End. ) } &#x5148;&#x540E;&#x8C03;&#x7528;&#x4E86; context.Background &#x51FD;&#x6570;&#x548C; context.WithCancel &#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x5F97;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x53EF;&#x64A4;&#x9500;&#x7684; context.Context &#x7C7B;&#x578B;&#x7684;&#x503C; &#xFF08;&#x7531;&#x53D8;&#x91CF; cxt &#x4EE3;&#x8868;&#xFF09;&#xFF0C;&#x4EE5;&#x53CA;&#x4E00;&#x4E2A; context.CancelFunc &#x7C7B;&#x578B;&#x7684;&#x64A4;&#x9500;&#x51FD;&#x6570;&#xFF08;&#x7531;&#x53D8;&#x91CF; cancelFunc &#x4EE3;&#x8868;&#xFF09;&#x3002; &#x6CE8;&#x610F;&#x6211;&#x7ED9;&#x4E88; addNum &#x51FD;&#x6570;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x503C;&#x3002;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x51FD;&#x6570;&#xFF0C;&#x5176;&#x4E2D;&#x53EA;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x6761; if &#x8BED;&#x53E5;&#x3002;&#x8FD9;&#x6761; if &#x8BED;&#x53E5;&#x4F1A; &#x539F;&#x5B50;&#x5730; &#x52A0;&#x8F7D; num &#x53D8;&#x91CF;&#x7684;&#x503C;&#xFF0C;&#x5E76;&#x5224;&#x65AD;&#x5B83;&#x662F;&#x5426;&#x7B49;&#x4E8E; total &#x53D8;&#x91CF;&#x7684;&#x503C;&#x3002; &#x5982;&#x679C;&#x4E24;&#x4E2A;&#x503C;&#x76F8;&#x7B49;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8C03;&#x7528; cancelFunc &#x51FD;&#x6570;&#x3002;&#x5176;&#x542B;&#x4E49;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x6240;&#x6709;&#x7684; addNum &#x51FD;&#x6570;&#x90FD;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x7ACB;&#x5373;&#x901A;&#x77E5;&#x5206;&#x53D1;&#x5B50;&#x4EFB;&#x52A1; &#x7684; goroutine &#x3002; &#x8FD9;&#x91CC;&#x5206;&#x53D1;&#x5B50;&#x4EFB;&#x52A1;&#x7684; goroutine &#xFF0C;&#x5373;&#x4E3A;&#x6267;&#x884C; coordinateWithContext &#x51FD;&#x6570;&#x7684; goroutine &#x3002;&#x5B83;&#x5728;&#x6267;&#x884C;&#x5B8C; for &#x8BED;&#x53E5;&#x540E;&#xFF0C;&#x4F1A; &#x7ACB;&#x5373;&#x8C03;&#x7528; cxt &#x53D8;&#x91CF;&#x7684; Done &#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x8BD5;&#x56FE;&#x9488;&#x5BF9;&#x8BE5;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x901A;&#x9053;&#xFF0C;&#x8FDB;&#x884C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x3002; &#x4E00;&#x65E6; cancelFunc &#x51FD;&#x6570;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x9488;&#x5BF9;&#x8BE5;&#x901A;&#x9053;&#x7684;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x5C31;&#x4F1A;&#x9A6C;&#x4E0A;&#x7ED3;&#x675F;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x201C;&#x7B49;&#x5F85;&#x6240;&#x6709;&#x7684; addNum &#x51FD;&#x6570;&#x90FD;&#x6267; &#x884C;&#x5B8C;&#x6BD5;&#x201D;&#x7684;&#x529F;&#x80FD;&#x3002; context.Context &#x7C7B;&#x578B; Context &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0; Context &#x503C;&#xFF09;&#x662F;&#x53EF;&#x4EE5;&#x7E41;&#x884D;&#x7684;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E2A; Context &#x503C;&#x4EA7;&#x751F;&#x51FA;&#x4EFB;&#x610F;&#x4E2A;&#x5B50;&#x503C;&#x3002;&#x8FD9;&#x4E9B;&#x5B50;&#x503C; &#x53EF;&#x4EE5;&#x643A;&#x5E26;&#x5176;&#x7236;&#x503C;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x54CD;&#x5E94;&#x901A;&#x8FC7;&#x5176;&#x7236;&#x503C;&#x4F20;&#x8FBE;&#x7684;&#x4FE1;&#x53F7;&#x3002; &#x6B63;&#x56E0;&#x4E3A;&#x5982;&#x6B64;&#xFF0C;&#x6240;&#x6709;&#x7684; Context &#x503C;&#x5171;&#x540C;&#x6784;&#x6210;&#x4E86;&#x4E00;&#x9897;&#x4EE3;&#x8868;&#x4E86;&#x4E0A;&#x4E0B;&#x6587;&#x5168;&#x8C8C;&#x7684;&#x6811;&#x5F62;&#x7ED3;&#x6784;&#x3002;&#x8FD9;&#x68F5;&#x6811;&#x7684; &#x6811;&#x6839;&#xFF08;&#x6216;&#x8005;&#x79F0;&#x4E0A;&#x4E0B;&#x6587;&#x6839;&#x8282;&#x70B9;&#xFF09;&#x662F;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF; &#x5728; context &#x5305;&#x4E2D;&#x9884;&#x5B9A;&#x4E49;&#x597D;&#x7684; Context &#x503C; &#xFF0C;&#x5B83;&#x662F; &#x5168;&#x5C40;&#x552F;&#x4E00; &#x7684;&#x3002;&#x901A;&#x8FC7;&#x8C03;&#x7528; context.Background &#x51FD;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5230; &#x5B83;&#xFF08;&#x5728; coordinateWithContext &#x51FD;&#x6570;&#x4E2D;&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x505A;&#x7684;&#xFF09;&#x3002; &#x6CE8;&#x610F;&#x4E00;&#x4E0B;&#xFF0C;&#x8FD9;&#x4E2A; &#x4E0A;&#x4E0B;&#x6587;&#x6839;&#x8282;&#x70B9;&#x4EC5;&#x4EC5;&#x662F;&#x4E00;&#x4E2A;&#x6700;&#x57FA;&#x672C;&#x7684;&#x652F;&#x70B9;&#xFF0C;&#x5B83;&#x4E0D;&#x63D0;&#x4F9B;&#x4EFB;&#x4F55;&#x989D;&#x5916;&#x7684;&#x529F;&#x80FD; &#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5B83;&#x65E2;&#x4E0D;&#x53EF;&#x4EE5;&#x88AB;&#x64A4;&#x9500;&#xFF08; cancel &#xFF09;&#xFF0C; &#x4E5F;&#x4E0D;&#x80FD;&#x643A;&#x5E26;&#x4EFB;&#x4F55;&#x6570;&#x636E;&#x3002; context &#x5305;&#x4E2D;&#x8FD8;&#x5305;&#x542B;&#x4E86; &#x56DB;&#x4E2A;&#x7528;&#x4E8E;&#x7E41;&#x884D; Context &#x503C;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5373;&#xFF1A; WithCancel &#x3001; WithDeadline &#x3001; WithTimeout &#x548C; WithValue &#x3002; &#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x90FD;&#x662F; context.Context &#xFF0C;&#x800C;&#x540D;&#x79F0;&#x90FD;&#x4E3A; parent &#x3002;&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C; &#x8FD9;&#x4E2A;&#x4F4D;&#x7F6E;&#x4E0A;&#x7684;&#x53C2;&#x6570;&#x5BF9;&#x5E94;&#x7684;&#x90FD;&#x662F;&#x5B83;&#x4EEC;&#x5C06;&#x4F1A;&#x4EA7;&#x751F; &#x7684; Context &#x503C;&#x7684;&#x7236;&#x503C; &#x3002; WithCancel &#x51FD;&#x6570;&#x7528;&#x4E8E;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x53EF;&#x64A4;&#x9500;&#x7684; parent &#x7684;&#x5B50;&#x503C; &#x3002; &#x5728; coordinateWithContext &#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x83B7;&#x5F97;&#x4E86;&#x4E00;&#x4E2A;&#x884D;&#x751F;&#x81EA;&#x4E0A;&#x4E0B;&#x6587;&#x6839;&#x8282;&#x70B9;&#x7684; Context &#x503C;&#xFF0C;&#x548C;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x89E6;&#x53D1;&#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x7684;&#x51FD;&#x6570;&#x3002; WithDeadline &#x51FD;&#x6570;&#x548C; WithTimeout &#x51FD;&#x6570;&#x5219;&#x90FD;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x4F1A; &#x5B9A;&#x65F6;&#x64A4;&#x9500; &#x7684; parent &#x7684;&#x5B50;&#x503C;&#x3002;&#x81F3;&#x4E8E; WithValue &#x51FD;&#x6570;&#xFF0C; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x5B83;&#xFF0C;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x4F1A;&#x643A;&#x5E26;&#x989D;&#x5916;&#x6570;&#x636E;&#x7684; parent &#x7684;&#x5B50;&#x503C;&#x3002; &#x201C;&#x53EF;&#x64A4;&#x9500;&#x7684;&#x201D;&#x5728; context &#x5305;&#x4E2D;&#x4EE3;&#x8868;&#x7740;&#x4EC0;&#x4E48;&#xFF1F;&#x201C;&#x64A4;&#x9500;&#x201D;&#x4E00;&#x4E2A; Context &#x503C;&#x53C8;&#x610F;&#x5473;&#x7740;&#x4EC0;&#x4E48;&#xFF1F; &#x8FD9;&#x9700;&#x8981;&#x4ECE; Context &#x7C7B;&#x578B;&#x7684;&#x58F0;&#x660E;&#x8BB2;&#x8D77;&#x3002;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x4E2D;&#x6709;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x4E0E;&#x201C;&#x64A4;&#x9500;&#x201D;&#x606F;&#x606F;&#x76F8;&#x5173;&#x3002; Done &#x65B9;&#x6CD5;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x4E3A; struct{} &#x7684;&#x63A5; &#x6536;&#x901A;&#x9053;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FD9;&#x4E2A;&#x63A5;&#x6536;&#x901A;&#x9053;&#x7684;&#x7528;&#x9014;&#x5E76;&#x4E0D;&#x662F;&#x4F20;&#x9012;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x800C;&#x662F; &#x8BA9;&#x8C03;&#x7528;&#x65B9;&#x53BB;&#x611F;&#x77E5;&#x201C;&#x64A4;&#x9500;&#x201D;&#x5F53;&#x524D;Context&#x503C;&#x7684;&#x90A3;&#x4E2A;&#x4FE1;&#x53F7; &#x3002; &#x4E00;&#x65E6;&#x5F53;&#x524D;&#x7684; Context &#x503C;&#x88AB;&#x64A4;&#x9500;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x63A5;&#x6536;&#x901A;&#x9053;&#x5C31;&#x4F1A;&#x88AB;&#x7ACB;&#x5373;&#x5173;&#x95ED;&#x3002;&#x6211;&#x4EEC;&#x90FD;&#x77E5;&#x9053;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x672A;&#x5305;&#x542B;&#x4EFB;&#x4F55;&#x5143;&#x7D20;&#x503C;&#x7684;&#x901A;&#x9053;&#x6765;&#x8BF4;&#xFF0C;&#x5B83;&#x7684;&#x5173;&#x95ED;&#x4F1A; &#x4F7F;&#x4EFB;&#x4F55;&#x9488;&#x5BF9;&#x5B83;&#x7684;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x7ACB;&#x5373;&#x7ED3;&#x675F;&#x3002; &#x6B63;&#x56E0;&#x4E3A;&#x5982;&#x6B64;&#xFF0C;&#x5728; coordinateWithContext &#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x57FA;&#x4E8E;&#x8C03;&#x7528;&#x8868;&#x8FBE;&#x5F0F; cxt.Done() &#x7684;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#xFF0C;&#x624D;&#x80FD;&#x591F;&#x8D77;&#x5230;&#x611F;&#x77E5;&#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x7684;&#x4F5C;&#x7528;&#x3002; &#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x662F;&#x5982;&#x4F55;&#x5728;&#x4E0A;&#x4E0B;&#x6587;&#x6811;&#x4E2D;&#x4F20;&#x64AD;&#x7684; context &#x5305;&#x7684; WithCancel &#x51FD;&#x6570;&#x5728;&#x88AB;&#x8C03;&#x7528;&#x540E;&#x4F1A;&#x4EA7;&#x751F;&#x4E24;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x3002;&#x7B2C;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x5C31;&#x662F;&#x90A3;&#x4E2A;&#x53EF;&#x64A4;&#x9500;&#x7684; Context &#x503C;&#xFF0C;&#x800C;&#x7B2C;&#x4E8C;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x5219;&#x662F; &#x7528;&#x4E8E;&#x89E6;&#x53D1;&#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x7684;&#x51FD;&#x6570;&#x3002; &#x5728;&#x64A4;&#x9500;&#x51FD;&#x6570;&#x88AB;&#x8C03;&#x7528;&#x4E4B;&#x540E;&#xFF0C;&#x5BF9;&#x5E94;&#x7684; Context &#x503C;&#x4F1A;&#x5148;&#x5173;&#x95ED;&#x5B83;&#x5185;&#x90E8;&#x7684;&#x63A5;&#x6536;&#x901A;&#x9053;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5B83;&#x7684; Done &#x65B9;&#x6CD5;&#x4F1A;&#x8FD4;&#x56DE;&#x7684;&#x90A3;&#x4E2A;&#x901A;&#x9053;&#x3002; &#x7136;&#x540E;&#xFF0C;&#x5B83;&#x4F1A;&#x5411;&#x5B83;&#x7684;&#x6240;&#x6709;&#x5B50;&#x503C;&#xFF08;&#x6216;&#x8005;&#x8BF4;&#x5B50;&#x8282;&#x70B9;&#xFF09;&#x4F20;&#x8FBE;&#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x3002;&#x8FD9;&#x4E9B;&#x5B50;&#x503C;&#x4F1A;&#x5982;&#x6CD5;&#x70AE;&#x5236;&#xFF0C;&#x628A;&#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x7EE7;&#x7EED;&#x4F20;&#x64AD;&#x4E0B;&#x53BB;&#x3002;&#x6700;&#x540E;&#xFF0C;&#x8FD9;&#x4E2A; Context &#x503C;&#x4F1A; &#x65AD;&#x5F00;&#x5B83;&#x4E0E;&#x5176;&#x7236;&#x503C;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x8054;&#x3002; &#x901A;&#x8FC7;&#x8C03;&#x7528; context.WithValue &#x51FD;&#x6570;&#x5F97;&#x5230;&#x7684; Context &#x503C;&#x662F;&#x4E0D;&#x53EF;&#x64A4;&#x9500;&#x7684; &#x3002; &#x600E;&#x6837;&#x901A;&#x8FC7; Context &#x503C;&#x643A;&#x5E26;&#x6570;&#x636E; WithValue &#x51FD;&#x6570;&#x5728;&#x4EA7;&#x751F;&#x65B0;&#x7684; Context &#x503C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x542B;&#x6570;&#x636E;&#x7684; Context &#x503C;&#xFF09;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5373;&#xFF1A;&#x7236;&#x503C;&#x3001;&#x952E;&#x548C;&#x503C; &#x3002; &#x201C;&#x5B57;&#x5178;&#x5BF9;&#x4E8E;&#x952E;&#x7684;&#x7EA6;&#x675F;&#x201D;&#x7C7B;&#x4F3C;&#xFF0C;&#x8FD9;&#x91CC; &#x952E;&#x7684;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x662F;&#x53EF;&#x5224;&#x7B49; &#x7684;&#x3002; &#x539F;&#x56E0;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x4ECE;&#x4E2D;&#x83B7;&#x53D6;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x9700;&#x8981;&#x6839;&#x636E;&#x7ED9;&#x5B9A;&#x7684;&#x952E;&#x6765;&#x67E5;&#x627E;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FD9;&#x79CD; Context &#x503C;&#x5E76;&#x4E0D;&#x662F;&#x7528;&#x5B57;&#x5178;&#x6765;&#x5B58;&#x50A8;&#x952E;&#x548C;&#x503C;&#x7684;&#xFF0C; &#x540E;&#x4E24;&#x8005;&#x53EA;&#x662F;&#x88AB;&#x7B80;&#x5355;&#x5730;&#x5B58;&#x50A8;&#x5728;&#x524D;&#x8005;&#x7684;&#x76F8;&#x5E94;&#x5B57;&#x6BB5;&#x4E2D;&#x800C;&#x5DF2;&#x3002;"},"concurrent/sync_lock.html#临时对象池-sync-Pool":{"title":"&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60; sync.Pool","path":"\\golang-learn\\concurrent\\sync_lock.html#临时对象池-sync-Pool","body":"Go &#x8BED;&#x8A00;&#x6807;&#x51C6;&#x5E93;&#x4E2D;&#x6700;&#x91CD;&#x8981;&#x7684;&#x90A3;&#x51E0;&#x4E2A;&#x540C;&#x6B65;&#x5DE5;&#x5177;&#xFF0C;&#x8FD9;&#x5305;&#x62EC;: &#x4E92;&#x65A5;&#x9501; &#x8BFB;&#x5199;&#x9501; &#x6761;&#x4EF6;&#x53D8;&#x91CF; &#x539F;&#x5B50;&#x64CD;&#x4F5C; sync/atomic.Value sync.Once sync.WaitGroup context.Context Go &#x8BED;&#x8A00;&#x6807;&#x51C6;&#x5E93;&#x4E2D;&#x7684;&#x8FD8;&#x6709;&#x53E6;&#x4E00;&#x4E2A;&#x540C;&#x6B65;&#x5DE5;&#x5177;&#xFF1A; sync.Pool &#x3002; sync.Pool &#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x88AB;&#x79F0;&#x4E3A;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#xFF0C;&#x5B83;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;&#x5B58;&#x50A8;&#x4E34;&#x65F6;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x4E0E; Go &#x8BED;&#x8A00;&#x7684;&#x5F88;&#x591A;&#x540C;&#x6B65;&#x5DE5;&#x5177;&#x4E00;&#x6837;&#xFF0C; sync.Pool &#x7C7B;&#x578B;&#x4E5F;&#x5C5E; &#x4E8E;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x7684;&#x503C;&#x5728;&#x88AB;&#x771F;&#x6B63;&#x4F7F;&#x7528;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x4E0D;&#x5E94;&#x8BE5;&#x518D;&#x88AB;&#x590D;&#x5236;&#x4E86;&#x3002; &#x4E34;&#x65F6;&#x5BF9;&#x8C61; &#x7684;&#x610F;&#x601D;&#x662F;&#xFF1A;&#x4E0D;&#x9700;&#x8981;&#x6301;&#x4E45;&#x4F7F;&#x7528;&#x7684;&#x67D0;&#x4E00;&#x7C7B;&#x503C;&#x3002;&#x8FD9;&#x7C7B;&#x503C;&#x5BF9;&#x4E8E;&#x7A0B;&#x5E8F;&#x6765;&#x8BF4;&#x53EF;&#x6709;&#x53EF;&#x65E0;&#xFF0C;&#x4F46;&#x5982;&#x679C;&#x6709;&#x7684;&#x8BDD;&#x4F1A;&#x660E;&#x663E;&#x66F4;&#x597D;&#x3002;&#x5B83;&#x4EEC;&#x7684;&#x521B;&#x5EFA;&#x548C;&#x9500;&#x6BC1;&#x53EF;&#x4EE5;&#x5728; &#x4EFB;&#x4F55;&#x65F6;&#x5019;&#x53D1;&#x751F;&#xFF0C;&#x5E76;&#x4E14;&#x5B8C;&#x5168;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x7A0B;&#x5E8F;&#x7684;&#x529F;&#x80FD;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x628A;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#x5F53;&#x4F5C;&#x9488;&#x5BF9;&#x67D0;&#x79CD;&#x6570;&#x636E;&#x7684;&#x7F13;&#x5B58;&#x6765;&#x7528; &#x3002; sync.Pool &#x7C7B;&#x578B;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x2014;&#x2014; Put &#x548C; Get &#x3002;&#x524D;&#x8005;&#x7528;&#x4E8E;&#x5728;&#x5F53;&#x524D;&#x7684;&#x6C60;&#x4E2D;&#x5B58;&#x653E;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x63A5;&#x53D7;&#x4E00;&#x4E2A; interface{} &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#xFF1B; &#x800C;&#x540E;&#x8005;&#x5219;&#x88AB;&#x7528;&#x4E8E;&#x4ECE;&#x5F53;&#x524D;&#x7684;&#x6C60;&#x4E2D;&#x83B7;&#x53D6;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; interface{} &#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; &#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#xFF0C; &#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x7684; Get &#x65B9;&#x6CD5;&#x53EF;&#x80FD;&#x4F1A;&#x4ECE;&#x5F53;&#x524D;&#x7684;&#x6C60;&#x4E2D;&#x5220;&#x9664;&#x6389;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x8FD9;&#x4E2A;&#x503C;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C;&#x8FD4;&#x56DE;&#x3002;&#x5982;&#x679C;&#x6B64;&#x65F6;&#x5F53;&#x524D;&#x7684;&#x6C60;&#x4E2D;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x503C;&#xFF0C; &#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x5F53;&#x524D;&#x6C60;&#x7684; New &#x5B57;&#x6BB5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x503C;&#xFF0C;&#x5E76;&#x76F4;&#x63A5;&#x5C06;&#x5176;&#x8FD4;&#x56DE; &#x3002; sync.Pool &#x7C7B;&#x578B;&#x7684; New &#x5B57;&#x6BB5;&#x4EE3;&#x8868;&#x7740;&#x521B;&#x5EFA;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x7684;&#x51FD;&#x6570;&#x3002;&#x5B83;&#x7684;&#x7C7B;&#x578B;&#x662F;&#x6CA1;&#x6709;&#x53C2;&#x6570;&#x4F46;&#x6709;&#x552F;&#x4E00;&#x7ED3;&#x679C;&#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#xFF0C;&#x5373;&#xFF1A; func() interface{} &#x3002; &#x521D;&#x59CB;&#x5316;&#x8FD9;&#x4E2A;&#x6C60;&#x7684;&#x65F6;&#x5019;&#x6700;&#x597D;&#x7ED9;&#x5B9A;&#x5B83; &#x3002; &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x662F; Get &#x65B9;&#x6CD5;&#x6700;&#x540E;&#x7684;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x83B7;&#x53D6;&#x624B;&#x6BB5;&#x3002; Get &#x65B9;&#x6CD5;&#x5982;&#x679C;&#x5230;&#x4E86;&#x6700;&#x540E;&#xFF0C;&#x4ECD;&#x7136;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x5230;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x8C03;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x7ED3; &#x503C;&#x5E76;&#x4E0D;&#x4F1A;&#x88AB;&#x5B58;&#x5165;&#x5F53;&#x524D;&#x7684;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#x4E2D;&#xFF0C;&#x800C;&#x662F;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x7ED9; Get &#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x65B9;&#x3002; &#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x503C;&#x90FD;&#x5E94;&#x8BE5;&#x662F;&#x72EC;&#x7ACB;&#x7684;&#x3001;&#x5E73;&#x7B49;&#x7684;&#x548C;&#x53EF;&#x91CD;&#x7528;&#x7684; &#x3002; sync.Pool &#x7684;&#x5B9A;&#x4F4D;&#x4E0D;&#x662F;&#x505A;&#x7C7B;&#x4F3C;&#x8FDE;&#x63A5;&#x6C60;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x5B83;&#x7684;&#x7528;&#x9014;&#x4EC5;&#x4EC5;&#x662F;&#x589E;&#x52A0; &#x5BF9;&#x8C61;&#x91CD;&#x7528;&#x7684;&#x51E0;&#x7387;&#xFF0C;&#x51CF;&#x5C11; gc &#x7684;&#x8D1F;&#x62C5;&#x3002;&#x56E0;&#x4E3A; gc &#x5E26;&#x6765;&#x4E86;&#x7F16;&#x7A0B;&#x7684;&#x65B9;&#x4FBF;&#x4F46;&#x540C;&#x65F6;&#x4E5F;&#x589E;&#x52A0;&#x4E86;&#x8FD0;&#x884C;&#x65F6;&#x5F00;&#x9500;&#xFF0C;&#x4F7F;&#x7528;&#x4E0D;&#x5F53;&#x751A;&#x81F3;&#x4F1A;&#x4E25;&#x91CD;&#x5F71;&#x54CD;&#x7A0B;&#x5E8F;&#x7684;&#x6027;&#x80FD;&#x3002;&#x56E0;&#x6B64;&#x6027;&#x80FD; &#x8981;&#x6C42;&#x9AD8;&#x7684;&#x573A;&#x666F;&#x4E0D;&#x80FD;&#x4EFB;&#x610F;&#x4EA7;&#x751F;&#x592A;&#x591A;&#x7684;&#x5783;&#x573E;&#x3002;&#x5982;&#x4F55;&#x89E3;&#x51B3;&#x5462;&#xFF1F;&#x90A3;&#x5C31;&#x662F;&#x8981;&#x91CD;&#x7528;&#x5BF9;&#x8C61;&#x4E86;&#x3002; &#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x4F8B;&#x5B50;&#x662F; fmt &#x5305;&#xFF0C; fmt &#x5305;&#x603B;&#x662F;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E00;&#x4E9B; []byte &#x4E4B;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;golang &#x5EFA;&#x7ACB;&#x4E86;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#xFF0C;&#x5B58;&#x653E;&#x7740;&#x8FD9;&#x4E9B;&#x5BF9;&#x8C61;&#xFF0C; &#x5982;&#x679C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E00;&#x4E2A; []byte &#xFF0C;&#x5C31;&#x53BB; Pool &#x91CC;&#x9762;&#x62FF;&#xFF0C;&#x5982;&#x679C;&#x62FF;&#x4E0D;&#x5230;&#x5C31;&#x5206;&#x914D;&#x4E00;&#x4EFD;&#x3002;&#x8FD9;&#x6BD4;&#x8D77;&#x4E0D;&#x505C;&#x751F;&#x6210;&#x65B0;&#x7684; []byte &#xFF0C;&#x7528;&#x5B8C;&#x4E86;&#x518D;&#x7B49;&#x5F85; gc &#x56DE;&#x6536; &#x6765;&#x8981;&#x9AD8;&#x6548;&#x5F97;&#x591A;&#x3002; sync.Pool &#x7F13;&#x5B58;&#x5BF9;&#x8C61;&#x7684;&#x671F;&#x9650;&#x662F;&#x5F88;&#x8BE1;&#x5F02;&#x7684;&#xFF0C;&#x5148;&#x770B;&#x4E00;&#x4E0B; src/pkg/sync/pool.go &#x91CC;&#x9762;&#x7684;&#x4E00;&#x6BB5;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#xFF1A; 1 2 3 func init () { runtime_registerPoolCleanup(poolCleanup) } &#x53EF;&#x4EE5;&#x770B;&#x5230; pool &#x5305;&#x5728; init &#x7684;&#x65F6;&#x5019;&#x6CE8;&#x518C;&#x4E86;&#x4E00;&#x4E2A; poolCleanup &#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x4F1A;&#x6E05;&#x9664;&#x6240;&#x6709;&#x7684; pool &#x91CC;&#x9762;&#x7684;&#x6240;&#x6709;&#x7F13;&#x5B58;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x6CE8;&#x518C;&#x8FDB;&#x53BB; &#x4E4B;&#x540E;&#x4F1A;&#x5728;&#x6BCF;&#x6B21; gc &#x4E4B;&#x524D;&#x90FD;&#x4F1A;&#x8C03;&#x7528;&#xFF0C;&#x56E0;&#x6B64; sync.Pool &#x7F13;&#x5B58;&#x7684;&#x671F;&#x9650;&#x53EA;&#x662F;&#x4E24;&#x6B21;gc&#x4E4B;&#x95F4;&#x8FD9;&#x6BB5;&#x65F6;&#x95F4; &#x3002;"},"concurrent/sync_lock.html#sync-Map":{"title":"sync.Map","path":"\\golang-learn\\concurrent\\sync_lock.html#sync-Map","body":"Go &#x8BED;&#x8A00;&#x81EA;&#x5E26;&#x7684;&#x5B57;&#x5178;&#x7C7B;&#x578B; map &#x5E76;&#x4E0D;&#x662F;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x5728;&#x540C;&#x4E00;&#x65F6;&#x95F4;&#x6BB5;&#x5185;&#xFF0C;&#x8BA9;&#x4E0D;&#x540C; goroutine &#x4E2D;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5BF9;&#x540C;&#x4E00;&#x4E2A;&#x5B57;&#x5178;&#x8FDB;&#x884C;&#x8BFB;&#x5199;&#x64CD; &#x4F5C;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x3002; Go &#x8BED;&#x8A00;&#x5B98;&#x65B9;&#x7EC8;&#x4E8E;&#x5728; 2017 &#x5E74;&#x53D1;&#x5E03;&#x7684; Go 1.9 &#x4E2D;&#x6B63;&#x5F0F;&#x52A0;&#x5165;&#x4E86;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#x5B57;&#x5178;&#x7C7B;&#x578B; sync.Map &#x3002; &#x4F7F;&#x7528; sync.Map &#x53EF;&#x4EE5;&#x663E;&#x8457;&#x5730;&#x51CF;&#x5C11;&#x9501;&#x7684;&#x4E89;&#x7528;&#x3002; sync.Map &#x672C;&#x8EAB;&#x867D;&#x7136;&#x4E5F;&#x7528;&#x5230;&#x4E86;&#x9501;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x5B83;&#x5176;&#x5B9E;&#x5728;&#x5C3D;&#x53EF;&#x80FD;&#x5730;&#x907F;&#x514D;&#x4F7F;&#x7528;&#x9501;&#x3002; &#x4F7F;&#x7528;&#x9501;&#x5C31;&#x610F;&#x5473;&#x7740;&#x8981;&#x628A;&#x4E00;&#x4E9B;&#x5E76;&#x53D1;&#x7684;&#x64CD;&#x4F5C;&#x5F3A;&#x5236;&#x4E32;&#x884C;&#x5316;&#x3002;&#x8FD9;&#x5F80;&#x5F80;&#x4F1A;&#x964D;&#x4F4E;&#x7A0B;&#x5E8F;&#x7684;&#x6027;&#x80FD;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x62E5;&#x6709;&#x591A;&#x4E2A; CPU &#x6838;&#x5FC3;&#x7684;&#x60C5;&#x51B5;&#x4E0B; &#x3002; &#x7531;&#x4E8E; &#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#x7684;&#x5B58;&#x50A8;&#x4ECB;&#x8D28;&#x6B63;&#x662F;&#x539F;&#x751F;&#x5B57;&#x5178;&#xFF0C;&#x53C8;&#x56E0;&#x4E3A;&#x5B83;&#x4F7F;&#x7528;&#x7684;&#x539F;&#x751F;&#x5B57;&#x5178;&#x952E;&#x7C7B;&#x578B;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x5305;&#x7F57;&#x4E07;&#x8C61;&#x7684; interface{} &#xFF0C;&#x6240;&#x4EE5;&#xFF0C; &#x6211;&#x4EEC;&#x7EDD;&#x5BF9;&#x4E0D;&#x80FD;&#x5E26;&#x7740;&#x4EFB;&#x4F55;&#x5B9E;&#x9645;&#x7C7B;&#x578B;&#x4E3A;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#x3001;&#x5B57;&#x5178;&#x7C7B;&#x578B;&#x6216;&#x5207;&#x7247;&#x7C7B;&#x578B;&#x7684;&#x952E;&#x503C;&#x53BB;&#x64CD;&#x4F5C;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178; &#x3002; &#x56E0;&#x4E3A; &#x8FD9;&#x4E9B;&#x952E;&#x503C;&#x7684;&#x5B9E;&#x9645;&#x7C7B;&#x578B;&#x53EA;&#x6709;&#x5728;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#x624D;&#x80FD;&#x591F;&#x786E;&#x5B9A;&#xFF0C;&#x6240;&#x4EE5; Go &#x8BED;&#x8A00;&#x7F16;&#x8BD1;&#x5668;&#x662F;&#x65E0;&#x6CD5;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x5BF9;&#x5B83;&#x4EEC;&#x8FDB;&#x884C;&#x68C0;&#x67E5;&#x7684;&#xFF0C;&#x4E0D;&#x6B63;&#x786E;&#x7684;&#x952E;&#x503C;&#x5B9E;&#x9645;&#x7C7B; &#x578B;&#x80AF;&#x5B9A;&#x4F1A;&#x5F15;&#x53D1; panic &#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x91CC;&#x9996;&#x5148;&#x8981;&#x505A;&#x7684;&#x4E00;&#x4EF6;&#x4E8B;&#x5C31;&#x662F;&#xFF1A;&#x4E00;&#x5B9A;&#x4E0D;&#x8981;&#x8FDD;&#x53CD;&#x4E0A;&#x8FF0;&#x89C4;&#x5219;&#x3002;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x5728;&#x6BCF;&#x6B21;&#x64CD;&#x4F5C;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90FD;&#x53BB;&#x663E;&#x5F0F;&#x5730;&#x68C0;&#x67E5;&#x952E;&#x503C;&#x7684;&#x5B9E;&#x9645; &#x7C7B;&#x578B;&#x3002;&#x65E0;&#x8BBA;&#x662F;&#x5B58;&#x3001;&#x53D6;&#x8FD8;&#x662F;&#x5220;&#xFF0C;&#x90FD;&#x5E94;&#x8BE5;&#x5982;&#x6B64; &#x3002; &#x66F4;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF0C;&#x628A;&#x9488;&#x5BF9;&#x540C;&#x4E00;&#x4E2A;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x7684;&#x8FD9;&#x51E0;&#x79CD;&#x64CD;&#x4F5C;&#x90FD;&#x96C6;&#x4E2D;&#x8D77;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x7EDF;&#x4E00;&#x5730;&#x7F16;&#x5199;&#x68C0;&#x67E5;&#x4EE3;&#x7801;&#x3002;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x628A;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x5C01;&#x88C5;&#x5728;&#x4E00; &#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x4E2D;&#xFF0C;&#x5F80;&#x5F80;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x9009;&#x62E9; &#x3002;&#x5982;&#x679C;&#x4F60;&#x5B9E;&#x5728;&#x62FF;&#x4E0D;&#x51C6;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x5148;&#x901A;&#x8FC7;&#x8C03;&#x7528; reflect.TypeOf &#x51FD;&#x6570;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x952E;&#x503C;&#x5BF9;&#x5E94;&#x7684;&#x53CD;&#x5C04;&#x7C7B; &#x578B;&#x503C;&#xFF08;&#x5373;&#xFF1A; reflect.Type &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x503C;&#x7684; Comparable &#x65B9;&#x6CD5;&#xFF0C;&#x5F97;&#x5230;&#x786E;&#x5207;&#x7684;&#x5224;&#x65AD;&#x7ED3;&#x679C;&#x3002; &#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x5982;&#x4F55;&#x505A;&#x5230;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#x4F7F;&#x7528;&#x9501; sync.Map &#x7C7B;&#x578B;&#x5728;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#x4E86; &#x5927;&#x91CF;&#x7684;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x6765;&#x5B58;&#x53D6;&#x952E;&#x548C;&#x503C;&#xFF0C;&#x5E76;&#x4F7F;&#x7528;&#x4E86;&#x4E24;&#x4E2A;&#x539F;&#x751F;&#x7684; map &#x4F5C;&#x4E3A;&#x5B58;&#x50A8;&#x4ECB;&#x8D28; &#x3002; &#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x539F;&#x751F; map &#x88AB;&#x5B58;&#x5728;&#x4E86; sync.Map &#x7684; read &#x5B57;&#x6BB5;&#x4E2D;&#xFF0C;&#x8BE5;&#x5B57;&#x6BB5;&#x662F; sync/atomic.Value &#x7C7B;&#x578B;&#x7684;&#x3002;&#x7B80;&#x79F0;&#x5B83;&#x4E3A; &#x53EA;&#x8BFB;&#x5B57;&#x5178; &#x3002; &#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x867D;&#x7136;&#x4E0D;&#x4F1A;&#x589E;&#x51CF;&#x5176;&#x4E2D;&#x7684;&#x952E;&#xFF0C;&#x4F46;&#x5374;&#x5141;&#x8BB8;&#x53D8;&#x66F4;&#x5176;&#x4E2D;&#x7684;&#x952E;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x503C; &#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5B83;&#x5E76;&#x4E0D;&#x662F;&#x4F20;&#x7EDF;&#x610F;&#x4E49;&#x4E0A;&#x7684;&#x5FEB;&#x7167;&#xFF0C;&#x5B83;&#x7684;&#x53EA;&#x8BFB;&#x7279;&#x6027;&#x53EA;&#x662F;&#x5BF9;&#x4E8E;&#x5176;&#x4E2D;&#x952E; &#x7684;&#x96C6;&#x5408;&#x800C;&#x8A00;&#x7684;&#x3002; &#x7531; read &#x5B57;&#x6BB5;&#x7684;&#x7C7B;&#x578B;&#x53EF;&#x77E5;&#xFF0C; sync.Map &#x5728;&#x66FF;&#x6362;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x7684;&#x65F6;&#x5019;&#x6839;&#x672C;&#x7528;&#x4E0D;&#x7740;&#x9501;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x8FD9;&#x4E2A;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x5728;&#x5B58;&#x50A8;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x5728;&#x503C;&#x4E4B;&#x4E0A; &#x5C01;&#x88C5;&#x4E86;&#x4E00;&#x5C42;&#x3002; &#x5B83;&#x5148;&#x628A;&#x503C;&#x8F6C;&#x6362;&#x4E3A;&#x4E86; unsafe.Pointer &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x628A;&#x540E;&#x8005;&#x5C01;&#x88C5;&#xFF0C;&#x5E76;&#x50A8;&#x5B58;&#x5728;&#x5176;&#x4E2D;&#x7684;&#x539F;&#x751F;&#x5B57;&#x5178;&#x4E2D;&#x3002;&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C;&#x5728;&#x53D8;&#x66F4;&#x67D0;&#x4E2A;&#x952E;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x503C; &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x4E86;&#x3002; sync.Map &#x4E2D;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x539F;&#x751F;&#x5B57;&#x5178;&#x7531;&#x5B83;&#x7684; dirty &#x5B57;&#x6BB5;&#x4EE3;&#x8868;&#x3002;&#x5B83;&#x5B58;&#x50A8;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x65B9;&#x5F0F;&#x4E0E; read &#x5B57;&#x6BB5;&#x4E2D;&#x7684;&#x539F;&#x751F;&#x5B57;&#x5178;&#x4E00;&#x81F4;&#xFF0C;&#x5B83;&#x7684;&#x952E;&#x7C7B;&#x578B; &#x4E5F;&#x662F; interface{} &#xFF0C;&#x5E76;&#x4E14;&#x540C;&#x6837;&#x662F;&#x628A;&#x503C;&#x5148;&#x505A;&#x8F6C;&#x6362;&#x548C;&#x5C01;&#x88C5;&#x540E;&#x518D;&#x8FDB;&#x884C;&#x50A8;&#x5B58;&#x7684;&#x3002;&#x79F0;&#x4E3A; &#x810F;&#x5B57;&#x5178; &#x3002; &#x810F;&#x5B57;&#x5178;&#x548C;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x5982;&#x679C;&#x90FD;&#x5B58;&#x6709;&#x540C;&#x4E00;&#x4E2A;&#x952E;&#x503C;&#x5BF9;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x91CC;&#x7684;&#x4E24;&#x4E2A;&#x952E;&#x6307;&#x7684;&#x80AF;&#x5B9A;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x503C;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E24;&#x4E2A;&#x503C;&#x6765;&#x8BF4;&#x4E5F;&#x662F;&#x5982;&#x6B64;&#x3002;&#x6B63;&#x5982;&#x524D;&#x6587;&#x6240;&#x8FF0;&#xFF0C; &#x8FD9;&#x4E24;&#x4E2A;&#x5B57;&#x5178;&#x5728;&#x5B58;&#x50A8;&#x952E;&#x548C;&#x503C;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x53EA;&#x4F1A;&#x5B58;&#x5165;&#x5B83;&#x4EEC;&#x7684;&#x67D0;&#x4E2A;&#x6307;&#x9488;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x57FA;&#x672C;&#x503C;&#x3002; sync.Map &#x5728;&#x67E5;&#x627E;&#x6307;&#x5B9A;&#x7684;&#x952E;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x603B;&#x4F1A;&#x5148;&#x53BB;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#x5BFB;&#x627E;&#xFF0C;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x9501;&#x5B9A;&#x4E92;&#x65A5;&#x9501;&#x3002;&#x53EA;&#x6709;&#x5F53;&#x786E;&#x5B9A; &#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#x6CA1;&#x6709;&#xFF0C;&#x4F46;&#x810F; &#x5B57;&#x5178;&#x4E2D;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x8FD9;&#x4E2A;&#x952E; &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x624D;&#x4F1A;&#x5728;&#x9501;&#x7684;&#x4FDD;&#x62A4;&#x4E0B;&#x53BB;&#x8BBF;&#x95EE;&#x810F;&#x5B57;&#x5178;&#x3002; &#x76F8;&#x5BF9;&#x5E94;&#x7684;&#xFF0C; sync.Map &#x5728;&#x5B58;&#x50A8;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x8981;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#x5DF2;&#x5B58;&#x6709;&#x8FD9;&#x4E2A;&#x952E;&#xFF0C;&#x5E76;&#x4E14;&#x8BE5;&#x952E;&#x503C;&#x5BF9;&#x672A;&#x88AB;&#x6807;&#x8BB0;&#x4E3A;&#x201C;&#x5DF2;&#x5220;&#x9664;&#x201D;&#xFF0C;&#x5C31;&#x4F1A;&#x628A;&#x65B0;&#x503C;&#x5B58;&#x5230;&#x91CC;&#x9762;&#x5E76; &#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x4E5F;&#x4E0D;&#x9700;&#x8981;&#x7528;&#x5230;&#x9501;&#x3002; &#x5426;&#x5219;&#xFF0C;&#x5B83;&#x624D;&#x4F1A;&#x5728;&#x9501;&#x7684;&#x4FDD;&#x62A4;&#x4E0B;&#x628A;&#x952E;&#x503C;&#x5BF9;&#x5B58;&#x50A8;&#x5230;&#x810F;&#x5B57;&#x5178;&#x4E2D;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x8BE5;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x201C;&#x5DF2;&#x5220;&#x9664;&#x201D;&#x6807;&#x8BB0;&#x4F1A;&#x88AB;&#x62B9;&#x53BB;&#x3002; &#x53EA;&#x6709;&#x5F53;&#x4E00;&#x4E2A;&#x952E;&#x503C;&#x5BF9;&#x5E94;&#x8BE5;&#x88AB;&#x5220;&#x9664;&#xFF0C;&#x4F46;&#x5374;&#x4ECD;&#x7136;&#x5B58;&#x5728;&#x4E8E;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x624D;&#x4F1A;&#x88AB;&#x7528;&#x6807;&#x8BB0;&#x4E3A;&#x201C;&#x5DF2;&#x5220;&#x9664;&#x201D;&#x7684;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x903B;&#x8F91;&#x5220;&#x9664;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x76F4;&#x63A5;&#x88AB;&#x7269;&#x7406;&#x5220;&#x9664;&#x3002; &#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4F1A;&#x5728;&#x91CD;&#x5EFA;&#x810F;&#x5B57;&#x5178;&#x4EE5;&#x540E;&#x7684;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#x51FA;&#x73B0;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FC7;&#x4E0D;&#x4E86;&#x591A;&#x4E45;&#xFF0C;&#x5B83;&#x4EEC;&#x5C31;&#x4F1A;&#x88AB;&#x771F;&#x6B63;&#x5220;&#x9664;&#x6389;&#x3002;&#x5728;&#x67E5;&#x627E;&#x548C;&#x904D;&#x5386;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5DF2;&#x88AB;&#x903B; &#x8F91;&#x5220;&#x9664;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x6C38;&#x8FDC;&#x4F1A;&#x88AB;&#x65E0;&#x89C6;&#x3002; &#x6700;&#x540E;&#xFF0C; sync.Map &#x4F1A;&#x628A;&#x8BE5;&#x952E;&#x503C;&#x5BF9;&#x4E2D;&#x6307;&#x5411;&#x503C;&#x7684;&#x90A3;&#x4E2A;&#x6307;&#x9488;&#x7F6E;&#x4E3A; nil &#xFF0C;&#x8FD9;&#x662F;&#x53E6;&#x4E00;&#x79CD;&#x903B;&#x8F91;&#x5220;&#x9664;&#x7684;&#x65B9;&#x5F0F;&#x3002; &#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x7EC6;&#x8282;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x548C;&#x810F;&#x5B57;&#x5178;&#x4E4B;&#x95F4;&#x662F;&#x4F1A;&#x4E92;&#x76F8;&#x8F6C;&#x6362;&#x7684;&#x3002;&#x5728;&#x810F;&#x5B57;&#x5178;&#x4E2D;&#x67E5;&#x627E;&#x952E;&#x503C;&#x5BF9;&#x6B21;&#x6570;&#x8DB3;&#x591F;&#x591A;&#x7684;&#x65F6;&#x5019;&#xFF0C; sync.Map &#x4F1A;&#x628A; &#x810F;&#x5B57;&#x5178;&#x76F4;&#x63A5;&#x4F5C;&#x4E3A;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#xFF0C;&#x4FDD;&#x5B58;&#x5728;&#x5B83;&#x7684; read &#x5B57;&#x6BB5;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x4EE3;&#x8868;&#x810F;&#x5B57;&#x5178;&#x7684; dirty &#x5B57;&#x6BB5;&#x7684;&#x503C;&#x7F6E;&#x4E3A; nil &#x3002; &#x5728;&#x8FD9;&#x4E4B;&#x540E;&#xFF0C;&#x4E00;&#x65E6;&#x518D;&#x6709;&#x65B0;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x5B58;&#x5165;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x4F9D;&#x636E;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x53BB;&#x91CD;&#x5EFA;&#x810F;&#x5B57;&#x5178;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x4F1A;&#x628A;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#x5DF2;&#x88AB;&#x903B;&#x8F91;&#x5220;&#x9664;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x8FC7;&#x6EE4;&#x6389;&#x3002; &#x7406;&#x6240;&#x5F53;&#x7136;&#xFF0C;&#x8FD9;&#x4E9B;&#x8F6C;&#x6362;&#x64CD;&#x4F5C;&#x80AF;&#x5B9A;&#x90FD;&#x9700;&#x8981;&#x5728;&#x9501;&#x7684;&#x4FDD;&#x62A4;&#x4E0B;&#x8FDB;&#x884C;&#x3002; sync.Map &#x7684;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x548C;&#x810F;&#x5B57;&#x5178;&#x4E2D;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x96C6;&#x5408;&#x5E76;&#x4E0D;&#x662F;&#x5B9E;&#x65F6;&#x540C;&#x6B65;&#x7684;&#xFF0C;&#x5B83;&#x4EEC;&#x5728;&#x67D0;&#x4E9B;&#x65F6;&#x95F4;&#x6BB5;&#x5185;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x4E0D;&#x540C; &#x3002; &#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x5728;&#x8BFB;&#x64CD;&#x4F5C;&#x6709;&#x5F88;&#x591A;&#x4F46;&#x5199;&#x64CD;&#x4F5C;&#x5374;&#x5F88;&#x5C11;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x7684;&#x6027;&#x80FD;&#x5F80;&#x5F80;&#x4F1A;&#x66F4;&#x597D;&#x3002;&#x5728;&#x51E0;&#x4E2A;&#x5199;&#x64CD;&#x4F5C;&#x5F53;&#x4E2D;&#xFF0C;&#x65B0;&#x589E;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x64CD;&#x4F5C;&#x5BF9;&#x5E76;&#x53D1;&#x5B89; &#x5168;&#x5B57;&#x5178;&#x7684;&#x6027;&#x80FD;&#x5F71;&#x54CD;&#x662F;&#x6700;&#x5927;&#x7684;&#xFF0C;&#x5176;&#x6B21;&#x662F;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#xFF0C;&#x6700;&#x540E;&#x624D;&#x662F;&#x4FEE;&#x6539;&#x64CD;&#x4F5C;&#x3002; &#x5982;&#x679C;&#x88AB;&#x64CD;&#x4F5C;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x4E8E; sync.Map &#x7684;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#xFF0C;&#x5E76;&#x4E14;&#x6CA1;&#x6709;&#x88AB;&#x903B;&#x8F91;&#x5220;&#x9664;&#xFF0C;&#x90A3;&#x4E48;&#x4FEE;&#x6539;&#x5B83;&#x5E76;&#x4E0D;&#x4F1A;&#x4F7F;&#x7528;&#x5230;&#x9501;&#xFF0C;&#x5BF9;&#x5176;&#x6027;&#x80FD;&#x7684;&#x5F71;&#x54CD;&#x5C31;&#x4F1A;&#x5F88;&#x5C0F;&#x3002;"},"concurrent/sync_lock.html#竞争检查器":{"title":"&#x7ADE;&#x4E89;&#x68C0;&#x67E5;&#x5668;","path":"\\golang-learn\\concurrent\\sync_lock.html#竞争检查器","body":"&#x5728; go build &#xFF0C; go run &#x6216;&#x8005; go test &#x547D;&#x4EE4;&#x540E;&#x9762;&#x52A0;&#x4E0A; -race &#xFF0C;&#x5C31;&#x4F1A;&#x4F7F;&#x7F16;&#x8BD1;&#x5668;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x7684;&#x201C;&#x4FEE;&#x6539;&#x201D;&#x7248;&#x3002; &#x4F1A;&#x8BB0;&#x5F55;&#x4E0B;&#x6BCF;&#x4E00;&#x4E2A;&#x8BFB;&#x6216;&#x8005;&#x5199;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x7684; goroutine &#x7684;&#x8EAB;&#x4EFD;&#x4FE1;&#x606F;&#x3002;&#x8BB0;&#x5F55;&#x4E0B;&#x6240;&#x6709;&#x7684;&#x540C;&#x6B65;&#x4E8B;&#x4EF6;&#xFF0C;&#x6BD4;&#x5982; go &#x8BED;&#x53E5;&#xFF0C; channel &#x64CD;&#x4F5C;&#xFF0C; &#x4EE5;&#x53CA;&#x5BF9; (*sync.Mutex).Lock &#xFF0C; (*sync.WaitGroup).Wait &#x7B49;&#x7B49;&#x7684;&#x8C03;&#x7528;&#x3002; &#x7531;&#x4E8E;&#x9700;&#x8981;&#x989D;&#x5916;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x56E0;&#x6B64;&#x6784;&#x5EFA;&#x65F6;&#x52A0;&#x4E86;&#x7ADE;&#x4E89;&#x68C0;&#x6D4B;&#x7684;&#x7A0B;&#x5E8F;&#x8DD1;&#x8D77;&#x6765;&#x4F1A;&#x6162;&#x4E00;&#x4E9B;&#xFF0C;&#x4E14;&#x9700;&#x8981;&#x66F4;&#x5927;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x5373;&#x4F7F;&#x662F;&#x8FD9;&#x6837;&#xFF0C;&#x8FD9;&#x4E9B;&#x4EE3;&#x4EF7;&#x5BF9;&#x4E8E;&#x5F88;&#x591A;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x7684; &#x5DE5;&#x4F5C;&#x6765;&#x8BF4;&#x8FD8;&#x662F;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x7684;&#x3002;"},"standards/net/http.html":{"title":"http","path":"\\golang-learn\\standards\\net\\http.html","body":"http net/http 可以用来处理 HTTP 协议，包括 HTTP 服务器和 HTTP 客户端，主要组成： Request，HTTP 请求对象 Response，HTTP 响应对象 Client，HTTP 客户端 Server，HTTP 服务端 创建一个 server ： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import ( \t \"fmt\" \t \"net/http\" ) func MyHandler (w http.ResponseWriter, r *http.Request)  \t_, _ = fmt.Fprintf(w, \"hello\" )  func main ()  \thttp.HandleFunc( \"/\" , MyHandler) \t_ = http.ListenAndServe( \":8080\" , nil )  发送请求： 1 2 3 4 5 resp, err := http.Get( \"http://example.com/\" ) // GET resp, err := http.Post( \"http://example.com/\" ) // POST resp, err := http.PostForm( \"http://example.com/\" , url.Values \"foo\" : \"bar\" ) // 提交表单 Request Request 对象是对 http 请求报文的抽象。包括起始行, Headers , Body 等。 使用 http.NewRequest 函数创建一个 Request 请求对象： 1 func NewRequest (method, url string , body io.Reader) (*Request, error) Request 对象主要用于数据的存储，结构： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 type Request struct  Method string // HTTP方法 URL *url.URL // URL Proto string // \"HTTP/1.0\" ProtoMajor int // 1 ProtoMinor int // 0 Header Header // 报文头 Body io.ReadCloser // 报文体 GetBody func () (io.ReadCloser, error) ContentLength int64 // 报文长度 TransferEncoding [] string // 传输编码 Close bool // 关闭连接 Host string // 主机名 Form url . Values // PostForm url . Values // POST 表单信息 MultipartForm * multipart . Form // multipart ， Trailer Header RemoteAddr string RequestURI string TLS * tls . ConnectionState Cancel - chan struct  Response *Response  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 // 从 b 中读取和解析一个请求. func ReadRequest (b *bufio.Reader) (req *Request, err error) // 给 request 添加 cookie , AddCookie 向请求中添加一个 cookie .按照 RFC 6265 // section 5.4的规则, AddCookie 不会添加超过一个 Cookie 头字段. // 这表示所有的 cookie 都写在同一行, 用分号分隔（ cookie 内部用逗号分隔属性） func (r *Request) AddCookie (c *Cookie) // 返回 request 中指定名 name 的 cookie ，如果没有发现，返回 ErrNoCookie func (r *Request) Cookie (name string ) (*Cookie, error) // 返回该请求的所有 cookies func (r *Request) Cookies () []* Cookie // 利用提供的用户名和密码给 http 基本权限提供具有一定权限的 header 。 // 当使用 http 基本授权时，用户名和密码是不加密的 func (r *Request) SetBasicAuth (username, password string ) // 如果在 request 中发送，该函数返回客户端的 user - Agent func (r *Request) UserAgent () string // 对于指定格式的 key ， FormFile 返回符合条件的第一个文件，如果有必要的话， // 该函数会调用 ParseMultipartForm 和 ParseForm 。 func (r *Request) FormFile (key string ) (multipart.File, *multipart.FileHeader, error) // 返回 key 获取的队列中第一个值。在查询过程中 post 和 put 中的主题参数优先级 // 高于 url 中的 value 。为了访问相同 key 的多个值，调用 ParseForm 然后直接 // 检查 RequestForm 。 func (r *Request) FormValue (key string ) string // 如果这是一个有多部分组成的 post 请求，该函数将会返回一个 MIME 多部分 reader ， // 否则的话将会返回一个 nil 和 error 。使用本函数代替 ParseMultipartForm // 可以将请求 body 当做流 stream 来处理。 func (r *Request) MultipartReader () (*multipart.Reader, error) // 解析 URL 中的查询字符串，并将解析结果更新到 r . Form 字段。对于 POST 或 PUT // 请求， ParseForm 还会将 body 当作表单解析，并将结果既更新到 r . PostForm 也 // 更新到 r . Form 。解析结果中， POST 或 PUT 请求主体要优先于 URL 查询字符串 // （同名变量，主体的值在查询字符串的值前面）。如果请求的主体的大小没有被 // MaxBytesReader 函数设定限制，其大小默认限制为开头 10 MB 。 // ParseMultipartForm 会自动调用 ParseForm 。重复调用本方法是无意义的。 func (r *Request) ParseForm () error // ParseMultipartForm 将请求的主体作为 multipart / form - data 解析。 // 请求的整个主体都会被解析，得到的文件记录最多 maxMemery 字节保存在内存， // 其余部分保存在硬盘的 temp 文件里。如果必要， ParseMultipartForm 会 // 自行调用 ParseForm 。重复调用本方法是无意义的。 func (r *Request) ParseMultipartForm (maxMemory int64 ) error // 返回 post 或者 put 请求 body 指定元素的第一个值，其中 url 中的参数被忽略。 func (r *Request) PostFormValue (key string ) string // 检测在 request 中使用的 http 协议是否至少是 major . minor func (r *Request) ProtoAtLeast (major, minor int ) bool // 如果 request 中有 refer ，那么 refer 返回相应的 url 。 Referer 在 request // 中是拼错的 (Referrer) ，这个错误从 http 初期就已经存在了。该值也可以从 Headermap 中 // 利用 Header [\" Referer \"] 获取；在使用过程中利用 Referer 这个方法而 // 不是 map 的形式的好处是在编译过程中可以检查方法的错误，而无法检查 map 中 // key 的错误。 func (r *Request) Referer () string // Write 方法以有线格式将 HTTP /1.1 请求写入 w （用于将请求写入下层 TCPConn 等） // 。本方法会考虑请求的如下字段：Host URL Method (defaults to \"GET\") // Header ContentLength TransferEncoding Body如果存在Body， // ContentLength字段= 0且TransferEncoding字段未显式设置为 // [\"identity\"]，Write 方法会显式添加 ”Transfer-Encoding: chunked” // 到请求的头域。Body 字段会在发送完请求后关闭。 func (r *Request) Write (w io.Writer) error // 该函数与 Write 方法类似，但是该方法写的 request 是按照 http 代理的格式去写。 // 尤其是，按照 RFC 2616 Section 5.1.2， WriteProxy 会使用绝对 URI // （包括协议和主机名）来初始化请求的第1行（ Request - URI 行）。无论何种情况， // WriteProxy 都会使用 r . Host 或 r . URL . Host 设置 Host 头。 func (r *Request) WriteProxy (w io.Writer) error Response Response 也是一个数据对象，描述 HTTP 响应： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 type Response struct  Status string // HTTP 状态码 StatusCode int // 状态码 200 Proto string // 版本号 \"HTTP/1.0\" ProtoMajor int // 主版本号 ProtoMinor int // 次版本号 Header Header // 响应报文头 Body io.ReadCloser // 响应报文体 ContentLength int64 // 报文长度 TransferEncoding [] string // 报文编码 Close bool Trailer Header Request *Request // 请求对象 TLS *tls.ConnectionState  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // ReadResponse 从 r 读取并返回一个 HTTP 回复。req 参数是可选的，指定该回复 // 对应的请求（即是对该请求的回复）。如果是 nil，将假设请 求是 GET 请求。 // 客户端必须在结束 resp.Body 的读取后关闭它。读取完毕并关闭后，客户端可以 // 检查 resp.Trailer 字段获取回复的 trailer 的键值对。 func ReadResponse (r *bufio.Reader, req *Request) (*Response, error) // 解析 cookie 并返回在 header 中利用 set - Cookie 设定的 cookie 值。 func (r *Response) Cookies () []* Cookie // 返回 response 中 Location 的 header 值的 url 。如果该值存在的话，则对于 // 请求问题可以解决相对重定向的问题，如果该值为 nil ，则返回 ErrNOLocation 。 func (r *Response) Location () (*url.URL, error) // 判定在 response 中使用的 http 协议是否至少是 major . minor 的形式。 func (r *Response) ProtoAtLeast (major, minor int ) bool // 将 response 中信息按照线性格式写入 w 中。 func (r *Response) Write (w io.Writer) error client 前面以 http.Get(http://example.com/) Get 或 Post 函数发送请求，就是通过绑定一个默认 Client 实现的。 使用 Client 要先初始化一个 Client 对象。 Client 具有 Do ， Get ， Head ， Post 以及 PostForm 等方法。 1 2 3 4 5 6 7 8 package main import \"net/http\" func main ()  client := http.Client() res, err := client.Get( \"http://www.google.com\" )  对于常用 HTTP 动词， Client 对象对应的函数，下面的这些方法与 http.Get 等方法一致： 1 2 3 4 5 6 7 func (c *Client) Get (url string ) (resp *Response, err error) func (c *Client) Head (url string ) (resp *Response, err error) func (c *Client) Post (url string , contentType string , body io.Reader) (resp *Response, err error) func (c *Client) PostForm (url string , data url.Values) (resp *Response, err error) 但是在很多情况下，需要支持对 headers，cookies 等的设定，上面提供的方法就不能满足需求了。就需要使用 Do 方法， 1 func (c *Client) Do (req *Request) (resp *Response, err error) http.NewRequest 可以灵活的对 Request 进行配置，然后再使用 http.Client 的 Do 方法发送这个 Request 请求。 模拟 HTTP Request ： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 // 简式声明一个 http.Client client := &amp;http.Client // 构建 Request request, err := http.NewRequest( \"GET\" , \"http://www.baidu.com\" , nil ) if err != nil  fmt.Println(err)  // 使用 http.Cookie 结构体初始化一个 cookie 键值对 cookie := &amp;http.CookieName: \"userId\" , Value: strconv.Itoa( 12345 ) // AddCookie request.AddCookie(cookie) // 设置 Header request.Header.Set( \"Accept\" , \"text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8\" ) request.Header.Set( \"Accept-Charset\" , \"GBK, utf-8;q=0.7, *;q=0.3\" ) request.Header.Set( \"Accept-Encoding\" , \"gzip, deflate, sdch\" ) request.Header.Set( \"Accept-Language\" , \"zh-CN, zh;q=0.8\" ) request.Header.Set( \"Cache-Control\" , \"max-age=0\" ) request.Header.Set( \"Connection\" , \"keep-alive\" ) // 使用 Do 方法发送请求 response, err := client.Do(request) if err != nil  fmt.Println(err) return  // 程序结束时关闭 response.Body 响应流 defer response.Body.Close() // http Response 状态值 fmt.Println(response.StatusCode) if response.StatusCode == 200  // gzip.NewReader对压缩的返回信息解压（考虑网络传输量，http Server // 一般都会对响应压缩后再返回） body, err := gzip.NewReader(response.Body) if err != nil  fmt.Println(err)  defer body.Close() r, err := ioutil.ReadAll(body) if err != nil  fmt.Println(err)  // 打印出http Server返回的http Response信息 fmt.Println( string (r))  Ge请求 ： 1 2 3 4 5 6 7 8 9 10 11 // http.Get 实际上是 DefaultClient.Get(url) response, err := http.Get( \"http://www.baidu.com\" ) if err != nil  fmt.Println(err)  // 程序在使用完回复后必须关闭回复的主体 defer response.Body.Close() body, _ := ioutil.ReadAll(response.Body) fmt.Println( string (body)) Post 请求 ： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // application/x-www-form-urlencoded：为 POST 的 contentType resp, err := http.Post( \"http://localhost:8080/login.do\" , \"application/x-www-form-urlencoded\" , strings.NewReader( \"mobile=xxxxxxxxxx&amp;isRemberPwd=1\" )) if err != nil  fmt.Println(err) return  defer resp.Body.Close() body, err := ioutil.ReadAll(resp.Body) if err != nil  fmt.Println(err) return  fmt.Println( string (body)) http.PostForm 请求 ： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 package main import ( \t \"fmt\" \t \"io/ioutil\" \t \"net/http\" \t \"net/url\" ) func main ()  \tpostParam := url.Values \t\t \"mobile\" :  \"xxxxxx\" , \t\t \"isRemberPwd\" :  \"1\" , \t \t // 数据的键值会经过 URL 编码后作为请求的 body 传递 \tresp, err := http.PostForm( \"http://localhost：8080/login.do\" , postParam) \t if err != nil  \t\tfmt.Println(err) \t\t return \t \t defer resp.Body.Close() \tbody, err := ioutil.ReadAll(resp.Body) \t if err != nil  \t\tfmt.Println(err) \t\t return \t \tfmt.Println( string (body))  HTTP Server server.go 文件中定义了一个非常重要的接口： Handler ，另外还有一个结构体 response ，这和 http.Response 结构体只有首字母大小 写不一致，这个 response 也是响应，只不过是专门用在服务端，和 http.Response 结构体是完全两回事。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 type Handler interface  \tServeHTTP(ResponseWriter, *Request)  type Server struct // 监听 srv.Addr 然后调用 Serve 来处理接下来连接的请求 // 如果 srv.Addr 是空的话，则使用 \":http\" func (srv *Server) ListenAndServe () error // 监听 srv . Addr ，调用 Serve 来处理接下来连接的请求 // 必须提供证书文件和对应的私钥文件。如果证书是由 // 权威机构签发的， certFile 参数必须是顺序串联的服务端证书和 CA 证书。 func (srv *Server) ListenAndServeTLS (certFile, keyFile string ) error // 接受 l Listener 的连接，创建一个新的服务协程。该服务协程读取请求然后调用 // srv . Handler 来应答。实际上就是实现了对某个端口进行监听，然后创建相应的连接。 func (srv *Server) Serve (l net.Listener) error // 该函数控制是否 http 的 keep - alives 能够使用，默认情况下， keep - alives 总是可用的。 // 只有资源非常紧张的环境或者服务端在关闭进程中时，才应该关闭该功能。 func (s *Server) SetKeepAlivesEnabled (v bool ) // 是一个 http 请求多路复用器，它将每一个请求的 URL 和 // 一个注册模式的列表进行匹配，然后调用和 URL 最匹配的模式的处理器进行后续操作。 type ServeMux // 初始化一个新的 ServeMux func NewServeMux () * ServeMux // 将 handler 注册为指定的模式，如果该模式已经有了 handler ，则会出错 panic 。 func (mux *ServeMux) Handle (pattern string , handler Handler) // 将 handler 注册为指定的模式 func (mux *ServeMux) HandleFunc (pattern string , handler func (ResponseWriter, *Request) ) // 根据指定的 r . Method , r . Host 以及 r . RUL . Path 返回一个用来处理给定请求的 handler 。 // 该函数总是返回一个 非 nil 的 handler ，如果 path 不是一个规范格式，则 handler 会 // 重定向到其规范 path 。 Handler 总是返回匹配该请求的的已注册模式；在内建重定向 // 处理器的情况下， pattern 会在重定向后进行匹配。如果没有已注册模式可以应用于该请求， // 本方法将返回一个内建的 ”404 page not found ” 处理器和一个空字符串模式。 func (mux *ServeMux) Handler (r *Request) (h Handler, pattern string ) // 该函数用于将最接近请求 url 模式的 handler 分配给指定的请求。 func (mux *ServeMux) ServeHTTP (w ResponseWriter, r *Request) Handler 接口是 server.go 中最关键的接口，如果我们仔细看这个文件的源代码，将会发现很多结构体实现了这个接口的 ServeHTTP 方法。 注意这个接口的注释： Handler 响应 HTTP 请求。没错，最终我们的 HTTP 服务是通过实现 ServeHTTP(ResponseWriter, *Request) 来达 到服务端接收客户端请求并响应。 1 2 3 4 func main ()  \thttp.HandleFunc( \"/\" , MyHandler) \t_ = http.ListenAndServe( \":8080\" , nil )  以上两行代码，就成功启动了一个 HTTP 服务器。我们通过 net/http 包源代码分析发现，调用 Http.HandleFunc ，按顺序做了几件事： Http.HandleFunc 调用了 DefaultServeMux 的 HandleFunc 1 2 3 func HandleFunc (pattern string , handler func (ResponseWriter, *Request) )  DefaultServeMux.HandleFunc(pattern, handler)  DefaultServeMux.HandleFunc 调用了 DefaultServeMux 的 Handle ， DefaultServeMux 是一个 ServeMux 指针变量。 而 ServeMux 是 Go 语言中的 Multiplexer （多路复用器），通过 Handle 匹配 pattern 和我们定义的 handler （其实就是 http.HandlerFunc 函数类型变量）。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type ServeMux struct  \tmu sync.RWMutex \tm map [ string ]muxEntry // 保存路由规则 和 handler \thosts bool // whether any patterns contain hostnames  type muxEntry struct  \th Handler \tpattern string  var DefaultServeMux = &amp;defaultServeMux var defaultServeMux ServeMux func (mux *ServeMux) HandleFunc (pattern string , handler func (ResponseWriter, *Request) )  \t if handler == nil  \t\t panic ( \"http: nil handler\" ) \t \tmux.Handle(pattern, HandlerFunc(handler)) // 这个 handler 就是 MyHandler  注意： 上面的方法命名 Handle ， HandleFunc 和 HandlerFunc ， Handler （接口），他们很相似，容易混淆。记住 Handle 和 HandleFunc 和 pattern 匹配有关，也即往 DefaultServeMux 的 map[string]muxEntry 中增加对应的 handler 和路由规则 。 接着我们看看 MyHandler 的声明和定义： 1 2 3 func MyHandler (w http.ResponseWriter, r *http.Request)  \tfmt.Fprintf(w, \"hello\" )  而 type HandlerFunc func(ResponseWriter, *Request) 是一个函数类型，而我们定义的 MyHandler 的函数签名刚好符合这个函数类型。 所以 http.HandleFunc(/, MyHandler) ，实际上是 mux.Handle(/, HandlerFunc(MyHandler)) 。 HandlerFunc(MyHandler) 让 MyHandler 成为了 HandlerFunc 类型，我们称 MyHandler 为 handler 。而 HandlerFunc 类型是 具有 ServeHTTP 方法的，而有了 ServeHTTP 方法也就是实现了 Handler 接口。 1 2 3 func (f HandlerFunc) ServeHTTP (w ResponseWriter, r *Request)  \tf(w, r) // 这相当于自身的调用  现在 ServeMux 和 Handler 都和我们的 MyHandler 联系上了， MyHandler 是一个 Handler 接口变量也是 HandlerFunc 类型变量， 接下来和结构体 server 有关了。 从 http.ListenAndServe 的源码可以看出，它创建了一个 server 对象，并调用 server 对象的 ListenAndServe 方法： 1 2 3 4 func ListenAndServe (addr string , handler Handler) error  server := &amp;ServerAddr: addr, Handler: handler return server.ListenAndServe()  而我们 HTTP 服务器中第二行代码： 1 http.ListenAndServe( \":8080\" , nil ) 创建了一个 server 对象，并调用 server 对象的 ListenAndServe 方法，这里没有直接传递 Handler ，而是默认 使用 DefautServeMux 作为 multiplexer 。 Server 的 ListenAndServe 方法中，会初始化监听地址 Addr ，同时调用 Listen 方法设置监听。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 for  rw, e := l.Accept() if e != nil  select  case -srv.getDoneChan(): return ErrServerClosed default :  if ne, ok := e.(net.Error); ok &amp;&amp; ne.Temporary()  if tempDelay == 0  tempDelay = 5 * time.Millisecond  else  tempDelay *= 2  if max := 1 * time.Second; tempDelay  max  tempDelay = max  srv.logf( \"http: Accept error: %v; retrying in %v\" , e, tempDelay) time.Sleep(tempDelay) continue  return e  tempDelay = 0 c := srv.newConn(rw) c.setState(c.rwc, StateNew) // before Serve can return go c.serve(ctx)  监听开启之后，一旦客户端请求过来，Go 就开启一个协程 go c.serve(ctx) 处理请求，主要逻辑都在 serve 方法之中。 func (c *conn) serve(ctx context.Context) ，这个方法很长，里面主要的一句： serverHandler{c.server}.ServeHTTP(w, w.req) 。 其中 w 由 w, err := c.readRequest(ctx) 得到，因为有传递 context 。 还是来看源代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // serverHandler delegates to either the server's Handler or // DefaultServeMux and also handles \"OPTIONS *\" requests. type serverHandler struct  \tsrv *Server  func (sh serverHandler) ServeHTTP (rw ResponseWriter, req *Request)  // 此 handler 即为 http.ListenAndServe 中的第二个参数 handler := sh.srv.Handler if handler == nil  // 如果 handler 为空则使用内部的 DefaultServeMux 进行处理 handler = DefaultServeMux  if req.RequestURI == \"*\" &amp;&amp; req.Method == \"OPTIONS\"  handler = globalOptionsHandler  // 这里就开始处理 http 请求 // 如果需要使用自定义的 mux，就需要实现 ServeHTTP 方法，即实现 Handler 接口。 // ServeHTTP(rw, req) 默认情况下是 func (mux *ServeMux) ServeHTTP(w ResponseWriter, r *Request) handler.ServeHTTP(rw, req)  从 http.ListenAndServe(:8080, nil) 开始， handler 是 nil ，所以最后实际 ServeHTTP 方法 是 DefaultServeMux.ServeHTTP(rw, req) 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 func (mux *ServeMux) ServeHTTP (w ResponseWriter, r *Request)  \t if r.RequestURI == \"*\"  \t\t if r.ProtoAtLeast( 1 , 1 )  \t\t\tw.Header().Set( \"Connection\" , \"close\" ) \t\t \t\tw.WriteHeader(StatusBadRequest) \t\t return \t \th, _ := mux.Handler(r) // 会匹配路由，h 就是 MyHandler \th.ServeHTTP(w, r) // 调用自己  func (mux *ServeMux) Handler (r *Request) (h Handler, pattern string )  \t // CONNECT requests are not canonicalized. \t if r.Method == \"CONNECT\"  \t\t // If r.URL.Path is /tree and its handler is not registered, \t\t // the /tree - /tree/ redirect applies to CONNECT requests \t\t // but the path canonicalization does not. \t\t if u, ok := mux.redirectToPathSlash(r.URL.Host, r.URL.Path, r.URL); ok  \t\t\t return RedirectHandler(u.String(), StatusMovedPermanently), u.Path \t\t \t\t return mux.handler(r.Host, r.URL.Path) \t \t // All other requests have any port stripped and path cleaned \t // before passing to mux.handler. \thost := stripHostPort(r.Host) \tpath := cleanPath(r.URL.Path) \t // If the given path is /tree and its handler is not registered, \t // redirect for /tree/. \t if u, ok := mux.redirectToPathSlash(host, path, r.URL); ok  \t\t return RedirectHandler(u.String(), StatusMovedPermanently), u.Path \t \t if path != r.URL.Path  \t\t_, pattern = mux.handler(host, path) \t\turl := *r.URL \t\turl.Path = path \t\t return RedirectHandler(url.String(), StatusMovedPermanently), pattern \t \t return mux.handler(host, r.URL.Path)  // handler is the main implementation of Handler. // The path is known to be in canonical form, except for CONNECT methods. func (mux *ServeMux) handler (host, path string ) (h Handler, pattern string )  \tmux.mu.RLock() \t defer mux.mu.RUnlock() \t // Host-specific pattern takes precedence over generic ones \t if mux.hosts  \t\th, pattern = mux.match(host + path) \t \t if h == nil  \t\th, pattern = mux.match(path) \t \t if h == nil  \t\th, pattern = NotFoundHandler(), \"\" \t \t return  通过 func (mux *ServeMux) Handler(r *Request) (h Handler, pattern string) ，我们得到 Handler h ，然后执 行 h.ServeHTTP(w, r) 方法，也就是执行我们的 MyHandler 函数（别忘了 MyHandler 是HandlerFunc类型，而他的 ServeHTTP(w, r) 方法这里其实就是自己调用自己），把 response 写到 http.ResponseWriter 对象返回给客户端， fmt.Fprintf(w, hello) ，我们在客 户端会接收到 “hello” 。至此整个 HTTP 服务执行完成。 总结下，HTTP 服务整个过程大概是这样： 1 Request - ServeMux(Multiplexer) - handler- Response 我们再看下面代码： 1 2 3 4 5 http.ListenAndServe( \":8080\" , nil ) func ListenAndServe (addr string , handler Handler) error  server := &amp;ServerAddr: addr, Handler: handler return server.ListenAndServe()  上面代码实际上就是 server.ListenAndServe() 执行的实际效果，只不过简单声明了一个结构体 Server{Addr: addr, Handler: handler} 实例。 如果我们声明一个 Server 实例，完全可以达到深度自定义 http.Server 的目的： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import ( \t \"fmt\" \t \"net/http\" ) func MyHandler (w http.ResponseWriter, r *http.Request)  \t_, _ = fmt.Fprintf(w, \"hi\" )  func main ()  \t // 更多http.Server的字段可以根据情况初始化 \tserver := http.Server \t\tAddr: \":8080\" , \t\tReadTimeout: 0 , \t\tWriteTimeout: 0 , \t \thttp.HandleFunc( \"/\" , MyHandler) \t_ = server.ListenAndServe()  我们完全可以根据情况来自定义我们的 Server 。 还可以指定 Servemux 的用法: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import ( \t \"fmt\" \t \"net/http\" ) func MyHandler (w http.ResponseWriter, r *http.Request)  \t_, _ = fmt.Fprintf(w, \"hi\" )  func main ()  \tmux := http.NewServeMux() \tmux.HandleFunc( \"/\" , MyHandler) \t_ = http.ListenAndServe( \":8080\" , mux)  如果既指定 Servemux 又自定义 http.Server ，因为 Server 中有字段 Handler ，所以我们可以直接把 Servemux 变量作 为 Server.Handler ： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 package main import ( \t \"fmt\" \t \"net/http\" ) func MyHandler (w http.ResponseWriter, r *http.Request)  \t_, _ = fmt.Fprintf(w, \"hi\" )  func main ()  \tserver := http.Server \t\tAddr: \":8080\" , \t\tReadTimeout: 0 , \t\tWriteTimeout: 0 , \t \tmux := http.NewServeMux() \tserver.Handler = mux \tmux.HandleFunc( \"/\" , MyHandler) \t_ = server.ListenAndServe()  自定义处理器 自定义的 Handler ： 标准库 http 提供了 Handler 接口，用于开发者实现自己的 handler 。只要实现接口的 ServeHTTP 方法即可。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 package main import ( \t \"log\" \t \"net/http\" \t \"time\" ) type timeHandler struct  \tformat string  func (th *timeHandler) ServeHTTP (w http.ResponseWriter, r *http.Request)  \ttm := time.Now().Format(th.format) \t_, _ = w.Write([] byte ( \"The time is: \" + tm))  func main ()  \tmux := http.NewServeMux() \tth := &amp;timeHandlerformat: time.RFC1123 \tmux.Handle( \"/time\" , th) \tlog.Println( \"Listening...\" ) \t_ = http.ListenAndServe( \":3000\" , mux)  我们知道， NewServeMux 可以创建一个 ServeMux 实例， ServeMux 同时也实现了 ServeHTTP 方法，因此代码中的 mux 也是 一种 handler 。把它当成参数传给 http.ListenAndServe 方法，后者会把 mux 传给 Server 实例。因为指定了 handler ， 因此整个 http 服务就不再是 DefaultServeMux ，而是 mux ，无论是在注册路由还是提供请求服务的时候。 任何有 func(http.ResponseWriter，*http.Request) 签名的函数都能转化为一个 HandlerFunc 类型。这很有用，因为 HandlerFunc 对象 内置了 ServeHTTP 方法，后者可以聪明又方便的调用我们最初提供的函数内容。 中间件 Middleware 所谓中间件，就是连接上下级不同功能的函数或者软件，通常进行一些包裹函数的行为，为被包裹函数提供添加一些功能或行为。前文的 HandleFunc 就 能把签名为 func(w http.ResponseWriter, r *http.Reqeust) 的函数包裹成 handler 。这个函数也算是中间件。 Go 的 HTTP 中间件很简单，只要实现一个函数签名为 func(http.Handler) http.Handler 的函数即可。 http.Handler 是一个接口， 接口方法我们熟悉的为 serveHTTP 。返回也是一个 handler 。因为 Go 中的函数也可以当成变量传递或者或者返回，因此也可以在中间件函数 中传递定义好的函数，只要这个函数是一个 handler 即可，即实现或者被 handlerFunc 包裹成为 handler 处理器。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 func index (w http.ResponseWriter, r *http.Request)  w.Header().Set( \"Content-Type\" , \"text/html\" ) html := `doctype html html head titleHello World/title /head body p Welcome /p /body /html` fmt.Fprintln(w, html)  func middlewareHandler (next http.Handler) http . Handler  return http.HandlerFunc( func (w http.ResponseWriter, r *http.Request)  // 执行 handler 之前的逻辑 next.ServeHTTP(w, r) // 执行完毕 handler 后的逻辑 )  func loggingHandler (next http.Handler) http . Handler  return http.HandlerFunc( func (w http.ResponseWriter, r *http.Request)  start := time.Now() log.Printf( \"Started %s %s\" , r.Method, r.URL.Path) next.ServeHTTP(w, r) log.Printf( \"Completed %s in %v\" , r.URL.Path, time.Since(start)) )  func main ()  http.Handle( \"/\" , loggingHandler(http.HandlerFunc(index))) http.ListenAndServe( \":8000\" , nil )  静态站点 下面代码通过指定目录，作为静态站点： 1 2 3 4 5 6 7 8 9 10 package main import ( \t \"net/http\" ) func main ()  \thttp.Handle( \"/\" , http.FileServer(http.Dir( \"D:/html/static/\" ))) \t_ = http.ListenAndServe( \":8080\" , nil ) "},"standards/net/http.html#http":{"title":"http","path":"\\golang-learn\\standards\\net\\http.html#http","body":"net/http &#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5904;&#x7406; HTTP &#x534F;&#x8BAE;&#xFF0C;&#x5305;&#x62EC; HTTP &#x670D;&#x52A1;&#x5668;&#x548C; HTTP &#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x4E3B;&#x8981;&#x7EC4;&#x6210;&#xFF1A; Request&#xFF0C;HTTP &#x8BF7;&#x6C42;&#x5BF9;&#x8C61; Response&#xFF0C;HTTP &#x54CD;&#x5E94;&#x5BF9;&#x8C61; Client&#xFF0C;HTTP &#x5BA2;&#x6237;&#x7AEF; Server&#xFF0C;HTTP &#x670D;&#x52A1;&#x7AEF; &#x521B;&#x5EFA;&#x4E00;&#x4E2A; server &#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import ( \t fmt \t net/http ) func MyHandler (w http.ResponseWriter, r *http.Request) { \t_, _ = fmt.Fprintf(w, hello ) } func main () { \thttp.HandleFunc( / , MyHandler) \t_ = http.ListenAndServe( :8080 , nil ) } &#x53D1;&#x9001;&#x8BF7;&#x6C42;&#xFF1A; 1 2 3 4 5 resp, err := http.Get( http://example.com/ ) // GET resp, err := http.Post( http://example.com/ ) // POST resp, err := http.PostForm( http://example.com/ , url.Values{ foo : bar }) // &#x63D0;&#x4EA4;&#x8868;&#x5355;"},"standards/net/http.html#Request":{"title":"Request","path":"\\golang-learn\\standards\\net\\http.html#Request","body":"Request &#x5BF9;&#x8C61;&#x662F;&#x5BF9; http &#x8BF7;&#x6C42;&#x62A5;&#x6587;&#x7684;&#x62BD;&#x8C61;&#x3002;&#x5305;&#x62EC;&#x8D77;&#x59CB;&#x884C;, Headers , Body &#x7B49;&#x3002; &#x4F7F;&#x7528; http.NewRequest &#x51FD;&#x6570;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; Request &#x8BF7;&#x6C42;&#x5BF9;&#x8C61;&#xFF1A; 1 func NewRequest (method, url string , body io.Reader) (*Request, error) Request &#x5BF9;&#x8C61;&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x6570;&#x636E;&#x7684;&#x5B58;&#x50A8;&#xFF0C;&#x7ED3;&#x6784;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 type Request struct { Method string // HTTP&#x65B9;&#x6CD5; URL *url.URL // URL Proto string // HTTP/1.0 ProtoMajor int // 1 ProtoMinor int // 0 Header Header // &#x62A5;&#x6587;&#x5934; Body io.ReadCloser // &#x62A5;&#x6587;&#x4F53; GetBody func () (io.ReadCloser, error) ContentLength int64 // &#x62A5;&#x6587;&#x957F;&#x5EA6; TransferEncoding [] string // &#x4F20;&#x8F93;&#x7F16;&#x7801; Close bool // &#x5173;&#x95ED;&#x8FDE;&#x63A5; Host string // &#x4E3B;&#x673A;&#x540D; Form url . Values // PostForm url . Values // POST &#x8868;&#x5355;&#x4FE1;&#x606F; MultipartForm * multipart . Form // multipart &#xFF0C; Trailer Header RemoteAddr string RequestURI string TLS * tls . ConnectionState Cancel - chan struct {} Response *Response } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 // &#x4ECE; b &#x4E2D;&#x8BFB;&#x53D6;&#x548C;&#x89E3;&#x6790;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;. func ReadRequest (b *bufio.Reader) (req *Request, err error) // &#x7ED9; request &#x6DFB;&#x52A0; cookie , AddCookie &#x5411;&#x8BF7;&#x6C42;&#x4E2D;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A; cookie .&#x6309;&#x7167; RFC 6265 // section 5.4&#x7684;&#x89C4;&#x5219;, AddCookie &#x4E0D;&#x4F1A;&#x6DFB;&#x52A0;&#x8D85;&#x8FC7;&#x4E00;&#x4E2A; Cookie &#x5934;&#x5B57;&#x6BB5;. // &#x8FD9;&#x8868;&#x793A;&#x6240;&#x6709;&#x7684; cookie &#x90FD;&#x5199;&#x5728;&#x540C;&#x4E00;&#x884C;, &#x7528;&#x5206;&#x53F7;&#x5206;&#x9694;&#xFF08; cookie &#x5185;&#x90E8;&#x7528;&#x9017;&#x53F7;&#x5206;&#x9694;&#x5C5E;&#x6027;&#xFF09; func (r *Request) AddCookie (c *Cookie) // &#x8FD4;&#x56DE; request &#x4E2D;&#x6307;&#x5B9A;&#x540D; name &#x7684; cookie &#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x53D1;&#x73B0;&#xFF0C;&#x8FD4;&#x56DE; ErrNoCookie func (r *Request) Cookie (name string ) (*Cookie, error) // &#x8FD4;&#x56DE;&#x8BE5;&#x8BF7;&#x6C42;&#x7684;&#x6240;&#x6709; cookies func (r *Request) Cookies () []* Cookie // &#x5229;&#x7528;&#x63D0;&#x4F9B;&#x7684;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#x7ED9; http &#x57FA;&#x672C;&#x6743;&#x9650;&#x63D0;&#x4F9B;&#x5177;&#x6709;&#x4E00;&#x5B9A;&#x6743;&#x9650;&#x7684; header &#x3002; // &#x5F53;&#x4F7F;&#x7528; http &#x57FA;&#x672C;&#x6388;&#x6743;&#x65F6;&#xFF0C;&#x7528;&#x6237;&#x540D;&#x548C;&#x5BC6;&#x7801;&#x662F;&#x4E0D;&#x52A0;&#x5BC6;&#x7684; func (r *Request) SetBasicAuth (username, password string ) // &#x5982;&#x679C;&#x5728; request &#x4E2D;&#x53D1;&#x9001;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x5BA2;&#x6237;&#x7AEF;&#x7684; user - Agent func (r *Request) UserAgent () string // &#x5BF9;&#x4E8E;&#x6307;&#x5B9A;&#x683C;&#x5F0F;&#x7684; key &#xFF0C; FormFile &#x8FD4;&#x56DE;&#x7B26;&#x5408;&#x6761;&#x4EF6;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x6709;&#x5FC5;&#x8981;&#x7684;&#x8BDD;&#xFF0C; // &#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x8C03;&#x7528; ParseMultipartForm &#x548C; ParseForm &#x3002; func (r *Request) FormFile (key string ) (multipart.File, *multipart.FileHeader, error) // &#x8FD4;&#x56DE; key &#x83B7;&#x53D6;&#x7684;&#x961F;&#x5217;&#x4E2D;&#x7B2C;&#x4E00;&#x4E2A;&#x503C;&#x3002;&#x5728;&#x67E5;&#x8BE2;&#x8FC7;&#x7A0B;&#x4E2D; post &#x548C; put &#x4E2D;&#x7684;&#x4E3B;&#x9898;&#x53C2;&#x6570;&#x4F18;&#x5148;&#x7EA7; // &#x9AD8;&#x4E8E; url &#x4E2D;&#x7684; value &#x3002;&#x4E3A;&#x4E86;&#x8BBF;&#x95EE;&#x76F8;&#x540C; key &#x7684;&#x591A;&#x4E2A;&#x503C;&#xFF0C;&#x8C03;&#x7528; ParseForm &#x7136;&#x540E;&#x76F4;&#x63A5; // &#x68C0;&#x67E5; RequestForm &#x3002; func (r *Request) FormValue (key string ) string // &#x5982;&#x679C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x6709;&#x591A;&#x90E8;&#x5206;&#x7EC4;&#x6210;&#x7684; post &#x8BF7;&#x6C42;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x5C06;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; MIME &#x591A;&#x90E8;&#x5206; reader &#xFF0C; // &#x5426;&#x5219;&#x7684;&#x8BDD;&#x5C06;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; nil &#x548C; error &#x3002;&#x4F7F;&#x7528;&#x672C;&#x51FD;&#x6570;&#x4EE3;&#x66FF; ParseMultipartForm // &#x53EF;&#x4EE5;&#x5C06;&#x8BF7;&#x6C42; body &#x5F53;&#x505A;&#x6D41; stream &#x6765;&#x5904;&#x7406;&#x3002; func (r *Request) MultipartReader () (*multipart.Reader, error) // &#x89E3;&#x6790; URL &#x4E2D;&#x7684;&#x67E5;&#x8BE2;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5E76;&#x5C06;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x66F4;&#x65B0;&#x5230; r . Form &#x5B57;&#x6BB5;&#x3002;&#x5BF9;&#x4E8E; POST &#x6216; PUT // &#x8BF7;&#x6C42;&#xFF0C; ParseForm &#x8FD8;&#x4F1A;&#x5C06; body &#x5F53;&#x4F5C;&#x8868;&#x5355;&#x89E3;&#x6790;&#xFF0C;&#x5E76;&#x5C06;&#x7ED3;&#x679C;&#x65E2;&#x66F4;&#x65B0;&#x5230; r . PostForm &#x4E5F; // &#x66F4;&#x65B0;&#x5230; r . Form &#x3002;&#x89E3;&#x6790;&#x7ED3;&#x679C;&#x4E2D;&#xFF0C; POST &#x6216; PUT &#x8BF7;&#x6C42;&#x4E3B;&#x4F53;&#x8981;&#x4F18;&#x5148;&#x4E8E; URL &#x67E5;&#x8BE2;&#x5B57;&#x7B26;&#x4E32; // &#xFF08;&#x540C;&#x540D;&#x53D8;&#x91CF;&#xFF0C;&#x4E3B;&#x4F53;&#x7684;&#x503C;&#x5728;&#x67E5;&#x8BE2;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x503C;&#x524D;&#x9762;&#xFF09;&#x3002;&#x5982;&#x679C;&#x8BF7;&#x6C42;&#x7684;&#x4E3B;&#x4F53;&#x7684;&#x5927;&#x5C0F;&#x6CA1;&#x6709;&#x88AB; // MaxBytesReader &#x51FD;&#x6570;&#x8BBE;&#x5B9A;&#x9650;&#x5236;&#xFF0C;&#x5176;&#x5927;&#x5C0F;&#x9ED8;&#x8BA4;&#x9650;&#x5236;&#x4E3A;&#x5F00;&#x5934; 10 MB &#x3002; // ParseMultipartForm &#x4F1A;&#x81EA;&#x52A8;&#x8C03;&#x7528; ParseForm &#x3002;&#x91CD;&#x590D;&#x8C03;&#x7528;&#x672C;&#x65B9;&#x6CD5;&#x662F;&#x65E0;&#x610F;&#x4E49;&#x7684;&#x3002; func (r *Request) ParseForm () error // ParseMultipartForm &#x5C06;&#x8BF7;&#x6C42;&#x7684;&#x4E3B;&#x4F53;&#x4F5C;&#x4E3A; multipart / form - data &#x89E3;&#x6790;&#x3002; // &#x8BF7;&#x6C42;&#x7684;&#x6574;&#x4E2A;&#x4E3B;&#x4F53;&#x90FD;&#x4F1A;&#x88AB;&#x89E3;&#x6790;&#xFF0C;&#x5F97;&#x5230;&#x7684;&#x6587;&#x4EF6;&#x8BB0;&#x5F55;&#x6700;&#x591A; maxMemery &#x5B57;&#x8282;&#x4FDD;&#x5B58;&#x5728;&#x5185;&#x5B58;&#xFF0C; // &#x5176;&#x4F59;&#x90E8;&#x5206;&#x4FDD;&#x5B58;&#x5728;&#x786C;&#x76D8;&#x7684; temp &#x6587;&#x4EF6;&#x91CC;&#x3002;&#x5982;&#x679C;&#x5FC5;&#x8981;&#xFF0C; ParseMultipartForm &#x4F1A; // &#x81EA;&#x884C;&#x8C03;&#x7528; ParseForm &#x3002;&#x91CD;&#x590D;&#x8C03;&#x7528;&#x672C;&#x65B9;&#x6CD5;&#x662F;&#x65E0;&#x610F;&#x4E49;&#x7684;&#x3002; func (r *Request) ParseMultipartForm (maxMemory int64 ) error // &#x8FD4;&#x56DE; post &#x6216;&#x8005; put &#x8BF7;&#x6C42; body &#x6307;&#x5B9A;&#x5143;&#x7D20;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x5176;&#x4E2D; url &#x4E2D;&#x7684;&#x53C2;&#x6570;&#x88AB;&#x5FFD;&#x7565;&#x3002; func (r *Request) PostFormValue (key string ) string // &#x68C0;&#x6D4B;&#x5728; request &#x4E2D;&#x4F7F;&#x7528;&#x7684; http &#x534F;&#x8BAE;&#x662F;&#x5426;&#x81F3;&#x5C11;&#x662F; major . minor func (r *Request) ProtoAtLeast (major, minor int ) bool // &#x5982;&#x679C; request &#x4E2D;&#x6709; refer &#xFF0C;&#x90A3;&#x4E48; refer &#x8FD4;&#x56DE;&#x76F8;&#x5E94;&#x7684; url &#x3002; Referer &#x5728; request // &#x4E2D;&#x662F;&#x62FC;&#x9519;&#x7684; (Referrer) &#xFF0C;&#x8FD9;&#x4E2A;&#x9519;&#x8BEF;&#x4ECE; http &#x521D;&#x671F;&#x5C31;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x4E86;&#x3002;&#x8BE5;&#x503C;&#x4E5F;&#x53EF;&#x4EE5;&#x4ECE; Headermap &#x4E2D; // &#x5229;&#x7528; Header [ Referer ] &#x83B7;&#x53D6;&#xFF1B;&#x5728;&#x4F7F;&#x7528;&#x8FC7;&#x7A0B;&#x4E2D;&#x5229;&#x7528; Referer &#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x800C; // &#x4E0D;&#x662F; map &#x7684;&#x5F62;&#x5F0F;&#x7684;&#x597D;&#x5904;&#x662F;&#x5728;&#x7F16;&#x8BD1;&#x8FC7;&#x7A0B;&#x4E2D;&#x53EF;&#x4EE5;&#x68C0;&#x67E5;&#x65B9;&#x6CD5;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x800C;&#x65E0;&#x6CD5;&#x68C0;&#x67E5; map &#x4E2D; // key &#x7684;&#x9519;&#x8BEF;&#x3002; func (r *Request) Referer () string // Write &#x65B9;&#x6CD5;&#x4EE5;&#x6709;&#x7EBF;&#x683C;&#x5F0F;&#x5C06; HTTP /1.1 &#x8BF7;&#x6C42;&#x5199;&#x5165; w &#xFF08;&#x7528;&#x4E8E;&#x5C06;&#x8BF7;&#x6C42;&#x5199;&#x5165;&#x4E0B;&#x5C42; TCPConn &#x7B49;&#xFF09; // &#x3002;&#x672C;&#x65B9;&#x6CD5;&#x4F1A;&#x8003;&#x8651;&#x8BF7;&#x6C42;&#x7684;&#x5982;&#x4E0B;&#x5B57;&#x6BB5;&#xFF1A;Host URL Method (defaults to GET) // Header ContentLength TransferEncoding Body&#x5982;&#x679C;&#x5B58;&#x5728;Body&#xFF0C; // ContentLength&#x5B57;&#x6BB5;= 0&#x4E14;TransferEncoding&#x5B57;&#x6BB5;&#x672A;&#x663E;&#x5F0F;&#x8BBE;&#x7F6E;&#x4E3A; // [identity]&#xFF0C;Write &#x65B9;&#x6CD5;&#x4F1A;&#x663E;&#x5F0F;&#x6DFB;&#x52A0; &#x201D;Transfer-Encoding: chunked&#x201D; // &#x5230;&#x8BF7;&#x6C42;&#x7684;&#x5934;&#x57DF;&#x3002;Body &#x5B57;&#x6BB5;&#x4F1A;&#x5728;&#x53D1;&#x9001;&#x5B8C;&#x8BF7;&#x6C42;&#x540E;&#x5173;&#x95ED;&#x3002; func (r *Request) Write (w io.Writer) error // &#x8BE5;&#x51FD;&#x6570;&#x4E0E; Write &#x65B9;&#x6CD5;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x662F;&#x8BE5;&#x65B9;&#x6CD5;&#x5199;&#x7684; request &#x662F;&#x6309;&#x7167; http &#x4EE3;&#x7406;&#x7684;&#x683C;&#x5F0F;&#x53BB;&#x5199;&#x3002; // &#x5C24;&#x5176;&#x662F;&#xFF0C;&#x6309;&#x7167; RFC 2616 Section 5.1.2&#xFF0C; WriteProxy &#x4F1A;&#x4F7F;&#x7528;&#x7EDD;&#x5BF9; URI // &#xFF08;&#x5305;&#x62EC;&#x534F;&#x8BAE;&#x548C;&#x4E3B;&#x673A;&#x540D;&#xFF09;&#x6765;&#x521D;&#x59CB;&#x5316;&#x8BF7;&#x6C42;&#x7684;&#x7B2C;1&#x884C;&#xFF08; Request - URI &#x884C;&#xFF09;&#x3002;&#x65E0;&#x8BBA;&#x4F55;&#x79CD;&#x60C5;&#x51B5;&#xFF0C; // WriteProxy &#x90FD;&#x4F1A;&#x4F7F;&#x7528; r . Host &#x6216; r . URL . Host &#x8BBE;&#x7F6E; Host &#x5934;&#x3002; func (r *Request) WriteProxy (w io.Writer) error"},"standards/net/http.html#Response":{"title":"Response","path":"\\golang-learn\\standards\\net\\http.html#Response","body":"Response &#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5BF9;&#x8C61;&#xFF0C;&#x63CF;&#x8FF0; HTTP &#x54CD;&#x5E94;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 type Response struct { Status string // HTTP &#x72B6;&#x6001;&#x7801; StatusCode int // &#x72B6;&#x6001;&#x7801; 200 Proto string // &#x7248;&#x672C;&#x53F7; HTTP/1.0 ProtoMajor int // &#x4E3B;&#x7248;&#x672C;&#x53F7; ProtoMinor int // &#x6B21;&#x7248;&#x672C;&#x53F7; Header Header // &#x54CD;&#x5E94;&#x62A5;&#x6587;&#x5934; Body io.ReadCloser // &#x54CD;&#x5E94;&#x62A5;&#x6587;&#x4F53; ContentLength int64 // &#x62A5;&#x6587;&#x957F;&#x5EA6; TransferEncoding [] string // &#x62A5;&#x6587;&#x7F16;&#x7801; Close bool Trailer Header Request *Request // &#x8BF7;&#x6C42;&#x5BF9;&#x8C61; TLS *tls.ConnectionState } 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 // ReadResponse &#x4ECE; r &#x8BFB;&#x53D6;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; HTTP &#x56DE;&#x590D;&#x3002;req &#x53C2;&#x6570;&#x662F;&#x53EF;&#x9009;&#x7684;&#xFF0C;&#x6307;&#x5B9A;&#x8BE5;&#x56DE;&#x590D; // &#x5BF9;&#x5E94;&#x7684;&#x8BF7;&#x6C42;&#xFF08;&#x5373;&#x662F;&#x5BF9;&#x8BE5;&#x8BF7;&#x6C42;&#x7684;&#x56DE;&#x590D;&#xFF09;&#x3002;&#x5982;&#x679C;&#x662F; nil&#xFF0C;&#x5C06;&#x5047;&#x8BBE;&#x8BF7; &#x6C42;&#x662F; GET &#x8BF7;&#x6C42;&#x3002; // &#x5BA2;&#x6237;&#x7AEF;&#x5FC5;&#x987B;&#x5728;&#x7ED3;&#x675F; resp.Body &#x7684;&#x8BFB;&#x53D6;&#x540E;&#x5173;&#x95ED;&#x5B83;&#x3002;&#x8BFB;&#x53D6;&#x5B8C;&#x6BD5;&#x5E76;&#x5173;&#x95ED;&#x540E;&#xFF0C;&#x5BA2;&#x6237;&#x7AEF;&#x53EF;&#x4EE5; // &#x68C0;&#x67E5; resp.Trailer &#x5B57;&#x6BB5;&#x83B7;&#x53D6;&#x56DE;&#x590D;&#x7684; trailer &#x7684;&#x952E;&#x503C;&#x5BF9;&#x3002; func ReadResponse (r *bufio.Reader, req *Request) (*Response, error) // &#x89E3;&#x6790; cookie &#x5E76;&#x8FD4;&#x56DE;&#x5728; header &#x4E2D;&#x5229;&#x7528; set - Cookie &#x8BBE;&#x5B9A;&#x7684; cookie &#x503C;&#x3002; func (r *Response) Cookies () []* Cookie // &#x8FD4;&#x56DE; response &#x4E2D; Location &#x7684; header &#x503C;&#x7684; url &#x3002;&#x5982;&#x679C;&#x8BE5;&#x503C;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#xFF0C;&#x5219;&#x5BF9;&#x4E8E; // &#x8BF7;&#x6C42;&#x95EE;&#x9898;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x76F8;&#x5BF9;&#x91CD;&#x5B9A;&#x5411;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x503C;&#x4E3A; nil &#xFF0C;&#x5219;&#x8FD4;&#x56DE; ErrNOLocation &#x3002; func (r *Response) Location () (*url.URL, error) // &#x5224;&#x5B9A;&#x5728; response &#x4E2D;&#x4F7F;&#x7528;&#x7684; http &#x534F;&#x8BAE;&#x662F;&#x5426;&#x81F3;&#x5C11;&#x662F; major . minor &#x7684;&#x5F62;&#x5F0F;&#x3002; func (r *Response) ProtoAtLeast (major, minor int ) bool // &#x5C06; response &#x4E2D;&#x4FE1;&#x606F;&#x6309;&#x7167;&#x7EBF;&#x6027;&#x683C;&#x5F0F;&#x5199;&#x5165; w &#x4E2D;&#x3002; func (r *Response) Write (w io.Writer) error"},"standards/net/http.html#client":{"title":"client","path":"\\golang-learn\\standards\\net\\http.html#client","body":"&#x524D;&#x9762;&#x4EE5; http.Get(http://example.com/) Get &#x6216; Post &#x51FD;&#x6570;&#x53D1;&#x9001;&#x8BF7;&#x6C42;&#xFF0C;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x7ED1;&#x5B9A;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4; Client &#x5B9E;&#x73B0;&#x7684;&#x3002; &#x4F7F;&#x7528; Client &#x8981;&#x5148;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A; Client &#x5BF9;&#x8C61;&#x3002; Client &#x5177;&#x6709; Do &#xFF0C; Get &#xFF0C; Head &#xFF0C; Post &#x4EE5;&#x53CA; PostForm &#x7B49;&#x65B9;&#x6CD5;&#x3002; 1 2 3 4 5 6 7 8 package main import net/http func main () { client := http.Client() res, err := client.Get( http://www.google.com ) } &#x5BF9;&#x4E8E;&#x5E38;&#x7528; HTTP &#x52A8;&#x8BCD;&#xFF0C; Client &#x5BF9;&#x8C61;&#x5BF9;&#x5E94;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x4E0B;&#x9762;&#x7684;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x4E0E; http.Get &#x7B49;&#x65B9;&#x6CD5;&#x4E00;&#x81F4;&#xFF1A; 1 2 3 4 5 6 7 func (c *Client) Get (url string ) (resp *Response, err error) func (c *Client) Head (url string ) (resp *Response, err error) func (c *Client) Post (url string , contentType string , body io.Reader) (resp *Response, err error) func (c *Client) PostForm (url string , data url.Values) (resp *Response, err error) &#x4F46;&#x662F;&#x5728;&#x5F88;&#x591A;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x9700;&#x8981;&#x652F;&#x6301;&#x5BF9; headers&#xFF0C;cookies &#x7B49;&#x7684;&#x8BBE;&#x5B9A;&#xFF0C;&#x4E0A;&#x9762;&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x4E0D;&#x80FD;&#x6EE1;&#x8DB3;&#x9700;&#x6C42;&#x4E86;&#x3002;&#x5C31;&#x9700;&#x8981;&#x4F7F;&#x7528; Do &#x65B9;&#x6CD5;&#xFF0C; 1 func (c *Client) Do (req *Request) (resp *Response, err error) http.NewRequest &#x53EF;&#x4EE5;&#x7075;&#x6D3B;&#x7684;&#x5BF9; Request &#x8FDB;&#x884C;&#x914D;&#x7F6E;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4F7F;&#x7528; http.Client &#x7684; Do &#x65B9;&#x6CD5;&#x53D1;&#x9001;&#x8FD9;&#x4E2A; Request &#x8BF7;&#x6C42;&#x3002; &#x6A21;&#x62DF; HTTP Request &#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 // &#x7B80;&#x5F0F;&#x58F0;&#x660E;&#x4E00;&#x4E2A; http.Client client := &amp;http.Client{} // &#x6784;&#x5EFA; Request request, err := http.NewRequest( GET , http://www.baidu.com , nil ) if err != nil { fmt.Println(err) } // &#x4F7F;&#x7528; http.Cookie &#x7ED3;&#x6784;&#x4F53;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A; cookie &#x952E;&#x503C;&#x5BF9; cookie := &amp;http.Cookie{Name: userId , Value: strconv.Itoa( 12345 )} // AddCookie request.AddCookie(cookie) // &#x8BBE;&#x7F6E; Header request.Header.Set( Accept , text/html, application/xhtml+xml, application/xml;q=0.9, */*;q=0.8 ) request.Header.Set( Accept-Charset , GBK, utf-8;q=0.7, *;q=0.3 ) request.Header.Set( Accept-Encoding , gzip, deflate, sdch ) request.Header.Set( Accept-Language , zh-CN, zh;q=0.8 ) request.Header.Set( Cache-Control , max-age=0 ) request.Header.Set( Connection , keep-alive ) // &#x4F7F;&#x7528; Do &#x65B9;&#x6CD5;&#x53D1;&#x9001;&#x8BF7;&#x6C42; response, err := client.Do(request) if err != nil { fmt.Println(err) return } // &#x7A0B;&#x5E8F;&#x7ED3;&#x675F;&#x65F6;&#x5173;&#x95ED; response.Body &#x54CD;&#x5E94;&#x6D41; defer response.Body.Close() // http Response &#x72B6;&#x6001;&#x503C; fmt.Println(response.StatusCode) if response.StatusCode == 200 { // gzip.NewReader&#x5BF9;&#x538B;&#x7F29;&#x7684;&#x8FD4;&#x56DE;&#x4FE1;&#x606F;&#x89E3;&#x538B;&#xFF08;&#x8003;&#x8651;&#x7F51;&#x7EDC;&#x4F20;&#x8F93;&#x91CF;&#xFF0C;http Server // &#x4E00;&#x822C;&#x90FD;&#x4F1A;&#x5BF9;&#x54CD;&#x5E94;&#x538B;&#x7F29;&#x540E;&#x518D;&#x8FD4;&#x56DE;&#xFF09; body, err := gzip.NewReader(response.Body) if err != nil { fmt.Println(err) } defer body.Close() r, err := ioutil.ReadAll(body) if err != nil { fmt.Println(err) } // &#x6253;&#x5370;&#x51FA;http Server&#x8FD4;&#x56DE;&#x7684;http Response&#x4FE1;&#x606F; fmt.Println( string (r)) } Ge&#x8BF7;&#x6C42; &#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 // http.Get &#x5B9E;&#x9645;&#x4E0A;&#x662F; DefaultClient.Get(url) response, err := http.Get( http://www.baidu.com ) if err != nil { fmt.Println(err) } // &#x7A0B;&#x5E8F;&#x5728;&#x4F7F;&#x7528;&#x5B8C;&#x56DE;&#x590D;&#x540E;&#x5FC5;&#x987B;&#x5173;&#x95ED;&#x56DE;&#x590D;&#x7684;&#x4E3B;&#x4F53; defer response.Body.Close() body, _ := ioutil.ReadAll(response.Body) fmt.Println( string (body)) Post &#x8BF7;&#x6C42; &#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // application/x-www-form-urlencoded&#xFF1A;&#x4E3A; POST &#x7684; contentType resp, err := http.Post( http://localhost:8080/login.do , application/x-www-form-urlencoded , strings.NewReader( mobile=xxxxxxxxxx&amp;isRemberPwd=1 )) if err != nil { fmt.Println(err) return } defer resp.Body.Close() body, err := ioutil.ReadAll(resp.Body) if err != nil { fmt.Println(err) return } fmt.Println( string (body)) http.PostForm &#x8BF7;&#x6C42; &#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 package main import ( \t fmt \t io/ioutil \t net/http \t net/url ) func main () { \tpostParam := url.Values{ \t\t mobile : { xxxxxx }, \t\t isRemberPwd : { 1 }, \t} \t // &#x6570;&#x636E;&#x7684;&#x952E;&#x503C;&#x4F1A;&#x7ECF;&#x8FC7; URL &#x7F16;&#x7801;&#x540E;&#x4F5C;&#x4E3A;&#x8BF7;&#x6C42;&#x7684; body &#x4F20;&#x9012; \tresp, err := http.PostForm( http://localhost&#xFF1A;8080/login.do , postParam) \t if err != nil { \t\tfmt.Println(err) \t\t return \t} \t defer resp.Body.Close() \tbody, err := ioutil.ReadAll(resp.Body) \t if err != nil { \t\tfmt.Println(err) \t\t return \t} \tfmt.Println( string (body)) }"},"standards/net/http.html#HTTP-Server":{"title":"HTTP Server","path":"\\golang-learn\\standards\\net\\http.html#HTTP-Server","body":"server.go &#x6587;&#x4EF6;&#x4E2D;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x91CD;&#x8981;&#x7684;&#x63A5;&#x53E3;&#xFF1A; Handler &#xFF0C;&#x53E6;&#x5916;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x4F53; response &#xFF0C;&#x8FD9;&#x548C; http.Response &#x7ED3;&#x6784;&#x4F53;&#x53EA;&#x6709;&#x9996;&#x5B57;&#x6BCD;&#x5927;&#x5C0F; &#x5199;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x8FD9;&#x4E2A; response &#x4E5F;&#x662F;&#x54CD;&#x5E94;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x662F;&#x4E13;&#x95E8;&#x7528;&#x5728;&#x670D;&#x52A1;&#x7AEF;&#xFF0C;&#x548C; http.Response &#x7ED3;&#x6784;&#x4F53;&#x662F;&#x5B8C;&#x5168;&#x4E24;&#x56DE;&#x4E8B;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 type Handler interface { \tServeHTTP(ResponseWriter, *Request) } type Server struct // &#x76D1;&#x542C; srv.Addr &#x7136;&#x540E;&#x8C03;&#x7528; Serve &#x6765;&#x5904;&#x7406;&#x63A5;&#x4E0B;&#x6765;&#x8FDE;&#x63A5;&#x7684;&#x8BF7;&#x6C42; // &#x5982;&#x679C; srv.Addr &#x662F;&#x7A7A;&#x7684;&#x8BDD;&#xFF0C;&#x5219;&#x4F7F;&#x7528; :http func (srv *Server) ListenAndServe () error // &#x76D1;&#x542C; srv . Addr &#xFF0C;&#x8C03;&#x7528; Serve &#x6765;&#x5904;&#x7406;&#x63A5;&#x4E0B;&#x6765;&#x8FDE;&#x63A5;&#x7684;&#x8BF7;&#x6C42; // &#x5FC5;&#x987B;&#x63D0;&#x4F9B;&#x8BC1;&#x4E66;&#x6587;&#x4EF6;&#x548C;&#x5BF9;&#x5E94;&#x7684;&#x79C1;&#x94A5;&#x6587;&#x4EF6;&#x3002;&#x5982;&#x679C;&#x8BC1;&#x4E66;&#x662F;&#x7531; // &#x6743;&#x5A01;&#x673A;&#x6784;&#x7B7E;&#x53D1;&#x7684;&#xFF0C; certFile &#x53C2;&#x6570;&#x5FC5;&#x987B;&#x662F;&#x987A;&#x5E8F;&#x4E32;&#x8054;&#x7684;&#x670D;&#x52A1;&#x7AEF;&#x8BC1;&#x4E66;&#x548C; CA &#x8BC1;&#x4E66;&#x3002; func (srv *Server) ListenAndServeTLS (certFile, keyFile string ) error // &#x63A5;&#x53D7; l Listener &#x7684;&#x8FDE;&#x63A5;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x670D;&#x52A1;&#x534F;&#x7A0B;&#x3002;&#x8BE5;&#x670D;&#x52A1;&#x534F;&#x7A0B;&#x8BFB;&#x53D6;&#x8BF7;&#x6C42;&#x7136;&#x540E;&#x8C03;&#x7528; // srv . Handler &#x6765;&#x5E94;&#x7B54;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F;&#x5B9E;&#x73B0;&#x4E86;&#x5BF9;&#x67D0;&#x4E2A;&#x7AEF;&#x53E3;&#x8FDB;&#x884C;&#x76D1;&#x542C;&#xFF0C;&#x7136;&#x540E;&#x521B;&#x5EFA;&#x76F8;&#x5E94;&#x7684;&#x8FDE;&#x63A5;&#x3002; func (srv *Server) Serve (l net.Listener) error // &#x8BE5;&#x51FD;&#x6570;&#x63A7;&#x5236;&#x662F;&#x5426; http &#x7684; keep - alives &#x80FD;&#x591F;&#x4F7F;&#x7528;&#xFF0C;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C; keep - alives &#x603B;&#x662F;&#x53EF;&#x7528;&#x7684;&#x3002; // &#x53EA;&#x6709;&#x8D44;&#x6E90;&#x975E;&#x5E38;&#x7D27;&#x5F20;&#x7684;&#x73AF;&#x5883;&#x6216;&#x8005;&#x670D;&#x52A1;&#x7AEF;&#x5728;&#x5173;&#x95ED;&#x8FDB;&#x7A0B;&#x4E2D;&#x65F6;&#xFF0C;&#x624D;&#x5E94;&#x8BE5;&#x5173;&#x95ED;&#x8BE5;&#x529F;&#x80FD;&#x3002; func (s *Server) SetKeepAlivesEnabled (v bool ) // &#x662F;&#x4E00;&#x4E2A; http &#x8BF7;&#x6C42;&#x591A;&#x8DEF;&#x590D;&#x7528;&#x5668;&#xFF0C;&#x5B83;&#x5C06;&#x6BCF;&#x4E00;&#x4E2A;&#x8BF7;&#x6C42;&#x7684; URL &#x548C; // &#x4E00;&#x4E2A;&#x6CE8;&#x518C;&#x6A21;&#x5F0F;&#x7684;&#x5217;&#x8868;&#x8FDB;&#x884C;&#x5339;&#x914D;&#xFF0C;&#x7136;&#x540E;&#x8C03;&#x7528;&#x548C; URL &#x6700;&#x5339;&#x914D;&#x7684;&#x6A21;&#x5F0F;&#x7684;&#x5904;&#x7406;&#x5668;&#x8FDB;&#x884C;&#x540E;&#x7EED;&#x64CD;&#x4F5C;&#x3002; type ServeMux // &#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x65B0;&#x7684; ServeMux func NewServeMux () * ServeMux // &#x5C06; handler &#x6CE8;&#x518C;&#x4E3A;&#x6307;&#x5B9A;&#x7684;&#x6A21;&#x5F0F;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x6A21;&#x5F0F;&#x5DF2;&#x7ECF;&#x6709;&#x4E86; handler &#xFF0C;&#x5219;&#x4F1A;&#x51FA;&#x9519; panic &#x3002; func (mux *ServeMux) Handle (pattern string , handler Handler) // &#x5C06; handler &#x6CE8;&#x518C;&#x4E3A;&#x6307;&#x5B9A;&#x7684;&#x6A21;&#x5F0F; func (mux *ServeMux) HandleFunc (pattern string , handler func (ResponseWriter, *Request) ) // &#x6839;&#x636E;&#x6307;&#x5B9A;&#x7684; r . Method , r . Host &#x4EE5;&#x53CA; r . RUL . Path &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x5904;&#x7406;&#x7ED9;&#x5B9A;&#x8BF7;&#x6C42;&#x7684; handler &#x3002; // &#x8BE5;&#x51FD;&#x6570;&#x603B;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; &#x975E; nil &#x7684; handler &#xFF0C;&#x5982;&#x679C; path &#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x89C4;&#x8303;&#x683C;&#x5F0F;&#xFF0C;&#x5219; handler &#x4F1A; // &#x91CD;&#x5B9A;&#x5411;&#x5230;&#x5176;&#x89C4;&#x8303; path &#x3002; Handler &#x603B;&#x662F;&#x8FD4;&#x56DE;&#x5339;&#x914D;&#x8BE5;&#x8BF7;&#x6C42;&#x7684;&#x7684;&#x5DF2;&#x6CE8;&#x518C;&#x6A21;&#x5F0F;&#xFF1B;&#x5728;&#x5185;&#x5EFA;&#x91CD;&#x5B9A;&#x5411; // &#x5904;&#x7406;&#x5668;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C; pattern &#x4F1A;&#x5728;&#x91CD;&#x5B9A;&#x5411;&#x540E;&#x8FDB;&#x884C;&#x5339;&#x914D;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x5DF2;&#x6CE8;&#x518C;&#x6A21;&#x5F0F;&#x53EF;&#x4EE5;&#x5E94;&#x7528;&#x4E8E;&#x8BE5;&#x8BF7;&#x6C42;&#xFF0C; // &#x672C;&#x65B9;&#x6CD5;&#x5C06;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5185;&#x5EFA;&#x7684; &#x201D;404 page not found &#x201D; &#x5904;&#x7406;&#x5668;&#x548C;&#x4E00;&#x4E2A;&#x7A7A;&#x5B57;&#x7B26;&#x4E32;&#x6A21;&#x5F0F;&#x3002; func (mux *ServeMux) Handler (r *Request) (h Handler, pattern string ) // &#x8BE5;&#x51FD;&#x6570;&#x7528;&#x4E8E;&#x5C06;&#x6700;&#x63A5;&#x8FD1;&#x8BF7;&#x6C42; url &#x6A21;&#x5F0F;&#x7684; handler &#x5206;&#x914D;&#x7ED9;&#x6307;&#x5B9A;&#x7684;&#x8BF7;&#x6C42;&#x3002; func (mux *ServeMux) ServeHTTP (w ResponseWriter, r *Request) Handler &#x63A5;&#x53E3;&#x662F; server.go &#x4E2D;&#x6700;&#x5173;&#x952E;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x4ED4;&#x7EC6;&#x770B;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x6E90;&#x4EE3;&#x7801;&#xFF0C;&#x5C06;&#x4F1A;&#x53D1;&#x73B0;&#x5F88;&#x591A;&#x7ED3;&#x6784;&#x4F53;&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x7684; ServeHTTP &#x65B9;&#x6CD5;&#x3002; &#x6CE8;&#x610F;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x7684;&#x6CE8;&#x91CA;&#xFF1A; Handler &#x54CD;&#x5E94; HTTP &#x8BF7;&#x6C42;&#x3002;&#x6CA1;&#x9519;&#xFF0C;&#x6700;&#x7EC8;&#x6211;&#x4EEC;&#x7684; HTTP &#x670D;&#x52A1;&#x662F;&#x901A;&#x8FC7;&#x5B9E;&#x73B0; ServeHTTP(ResponseWriter, *Request) &#x6765;&#x8FBE; &#x5230;&#x670D;&#x52A1;&#x7AEF;&#x63A5;&#x6536;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x5E76;&#x54CD;&#x5E94;&#x3002; 1 2 3 4 func main () { \thttp.HandleFunc( / , MyHandler) \t_ = http.ListenAndServe( :8080 , nil ) } &#x4EE5;&#x4E0A;&#x4E24;&#x884C;&#x4EE3;&#x7801;&#xFF0C;&#x5C31;&#x6210;&#x529F;&#x542F;&#x52A8;&#x4E86;&#x4E00;&#x4E2A; HTTP &#x670D;&#x52A1;&#x5668;&#x3002;&#x6211;&#x4EEC;&#x901A;&#x8FC7; net/http &#x5305;&#x6E90;&#x4EE3;&#x7801;&#x5206;&#x6790;&#x53D1;&#x73B0;&#xFF0C;&#x8C03;&#x7528; Http.HandleFunc &#xFF0C;&#x6309;&#x987A;&#x5E8F;&#x505A;&#x4E86;&#x51E0;&#x4EF6;&#x4E8B;&#xFF1A; Http.HandleFunc &#x8C03;&#x7528;&#x4E86; DefaultServeMux &#x7684; HandleFunc 1 2 3 func HandleFunc (pattern string , handler func (ResponseWriter, *Request) ) { DefaultServeMux.HandleFunc(pattern, handler) } DefaultServeMux.HandleFunc &#x8C03;&#x7528;&#x4E86; DefaultServeMux &#x7684; Handle &#xFF0C; DefaultServeMux &#x662F;&#x4E00;&#x4E2A; ServeMux &#x6307;&#x9488;&#x53D8;&#x91CF;&#x3002; &#x800C; ServeMux &#x662F; Go &#x8BED;&#x8A00;&#x4E2D;&#x7684; Multiplexer &#xFF08;&#x591A;&#x8DEF;&#x590D;&#x7528;&#x5668;&#xFF09;&#xFF0C;&#x901A;&#x8FC7; Handle &#x5339;&#x914D; pattern &#x548C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x7684; handler &#xFF08;&#x5176;&#x5B9E;&#x5C31;&#x662F; http.HandlerFunc &#x51FD;&#x6570;&#x7C7B;&#x578B;&#x53D8;&#x91CF;&#xFF09;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type ServeMux struct { \tmu sync.RWMutex \tm map [ string ]muxEntry // &#x4FDD;&#x5B58;&#x8DEF;&#x7531;&#x89C4;&#x5219; &#x548C; handler \thosts bool // whether any patterns contain hostnames } type muxEntry struct { \th Handler \tpattern string } var DefaultServeMux = &amp;defaultServeMux var defaultServeMux ServeMux func (mux *ServeMux) HandleFunc (pattern string , handler func (ResponseWriter, *Request) ) { \t if handler == nil { \t\t panic ( http: nil handler ) \t} \tmux.Handle(pattern, HandlerFunc(handler)) // &#x8FD9;&#x4E2A; handler &#x5C31;&#x662F; MyHandler } &#x6CE8;&#x610F;&#xFF1A; &#x4E0A;&#x9762;&#x7684;&#x65B9;&#x6CD5;&#x547D;&#x540D; Handle &#xFF0C; HandleFunc &#x548C; HandlerFunc &#xFF0C; Handler &#xFF08;&#x63A5;&#x53E3;&#xFF09;&#xFF0C;&#x4ED6;&#x4EEC;&#x5F88;&#x76F8;&#x4F3C;&#xFF0C;&#x5BB9;&#x6613;&#x6DF7;&#x6DC6;&#x3002;&#x8BB0;&#x4F4F; Handle &#x548C; HandleFunc &#x548C; pattern &#x5339;&#x914D;&#x6709;&#x5173;&#xFF0C;&#x4E5F;&#x5373;&#x5F80; DefaultServeMux &#x7684; map[string]muxEntry &#x4E2D;&#x589E;&#x52A0;&#x5BF9;&#x5E94;&#x7684; handler &#x548C;&#x8DEF;&#x7531;&#x89C4;&#x5219; &#x3002; &#x63A5;&#x7740;&#x6211;&#x4EEC;&#x770B;&#x770B; MyHandler &#x7684;&#x58F0;&#x660E;&#x548C;&#x5B9A;&#x4E49;&#xFF1A; 1 2 3 func MyHandler (w http.ResponseWriter, r *http.Request) { \tfmt.Fprintf(w, hello ) } &#x800C; type HandlerFunc func(ResponseWriter, *Request) &#x662F;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#xFF0C;&#x800C;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x7684; MyHandler &#x7684;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x521A;&#x597D;&#x7B26;&#x5408;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#x3002; &#x6240;&#x4EE5; http.HandleFunc(/, MyHandler) &#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F; mux.Handle(/, HandlerFunc(MyHandler)) &#x3002; HandlerFunc(MyHandler) &#x8BA9; MyHandler &#x6210;&#x4E3A;&#x4E86; HandlerFunc &#x7C7B;&#x578B;&#xFF0C;&#x6211;&#x4EEC;&#x79F0; MyHandler &#x4E3A; handler &#x3002;&#x800C; HandlerFunc &#x7C7B;&#x578B;&#x662F; &#x5177;&#x6709; ServeHTTP &#x65B9;&#x6CD5;&#x7684;&#xFF0C;&#x800C;&#x6709;&#x4E86; ServeHTTP &#x65B9;&#x6CD5;&#x4E5F;&#x5C31;&#x662F;&#x5B9E;&#x73B0;&#x4E86; Handler &#x63A5;&#x53E3;&#x3002; 1 2 3 func (f HandlerFunc) ServeHTTP (w ResponseWriter, r *Request) { \tf(w, r) // &#x8FD9;&#x76F8;&#x5F53;&#x4E8E;&#x81EA;&#x8EAB;&#x7684;&#x8C03;&#x7528; } &#x73B0;&#x5728; ServeMux &#x548C; Handler &#x90FD;&#x548C;&#x6211;&#x4EEC;&#x7684; MyHandler &#x8054;&#x7CFB;&#x4E0A;&#x4E86;&#xFF0C; MyHandler &#x662F;&#x4E00;&#x4E2A; Handler &#x63A5;&#x53E3;&#x53D8;&#x91CF;&#x4E5F;&#x662F; HandlerFunc &#x7C7B;&#x578B;&#x53D8;&#x91CF;&#xFF0C; &#x63A5;&#x4E0B;&#x6765;&#x548C;&#x7ED3;&#x6784;&#x4F53; server &#x6709;&#x5173;&#x4E86;&#x3002; &#x4ECE; http.ListenAndServe &#x7684;&#x6E90;&#x7801;&#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x5B83;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A; server &#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x8C03;&#x7528; server &#x5BF9;&#x8C61;&#x7684; ListenAndServe &#x65B9;&#x6CD5;&#xFF1A; 1 2 3 4 func ListenAndServe (addr string , handler Handler) error { server := &amp;Server{Addr: addr, Handler: handler} return server.ListenAndServe() } &#x800C;&#x6211;&#x4EEC; HTTP &#x670D;&#x52A1;&#x5668;&#x4E2D;&#x7B2C;&#x4E8C;&#x884C;&#x4EE3;&#x7801;&#xFF1A; 1 http.ListenAndServe( :8080 , nil ) &#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A; server &#x5BF9;&#x8C61;&#xFF0C;&#x5E76;&#x8C03;&#x7528; server &#x5BF9;&#x8C61;&#x7684; ListenAndServe &#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x91CC;&#x6CA1;&#x6709;&#x76F4;&#x63A5;&#x4F20;&#x9012; Handler &#xFF0C;&#x800C;&#x662F;&#x9ED8;&#x8BA4; &#x4F7F;&#x7528; DefautServeMux &#x4F5C;&#x4E3A; multiplexer &#x3002; Server &#x7684; ListenAndServe &#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x4F1A;&#x521D;&#x59CB;&#x5316;&#x76D1;&#x542C;&#x5730;&#x5740; Addr &#xFF0C;&#x540C;&#x65F6;&#x8C03;&#x7528; Listen &#x65B9;&#x6CD5;&#x8BBE;&#x7F6E;&#x76D1;&#x542C;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 for { rw, e := l.Accept() if e != nil { select { case -srv.getDoneChan(): return ErrServerClosed default : } if ne, ok := e.(net.Error); ok &amp;&amp; ne.Temporary() { if tempDelay == 0 { tempDelay = 5 * time.Millisecond } else { tempDelay *= 2 } if max := 1 * time.Second; tempDelay  max { tempDelay = max } srv.logf( http: Accept error: %v; retrying in %v , e, tempDelay) time.Sleep(tempDelay) continue } return e } tempDelay = 0 c := srv.newConn(rw) c.setState(c.rwc, StateNew) // before Serve can return go c.serve(ctx) } &#x76D1;&#x542C;&#x5F00;&#x542F;&#x4E4B;&#x540E;&#xFF0C;&#x4E00;&#x65E6;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#x8FC7;&#x6765;&#xFF0C;Go &#x5C31;&#x5F00;&#x542F;&#x4E00;&#x4E2A;&#x534F;&#x7A0B; go c.serve(ctx) &#x5904;&#x7406;&#x8BF7;&#x6C42;&#xFF0C;&#x4E3B;&#x8981;&#x903B;&#x8F91;&#x90FD;&#x5728; serve &#x65B9;&#x6CD5;&#x4E4B;&#x4E2D;&#x3002; func (c *conn) serve(ctx context.Context) &#xFF0C;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x5F88;&#x957F;&#xFF0C;&#x91CC;&#x9762;&#x4E3B;&#x8981;&#x7684;&#x4E00;&#x53E5;&#xFF1A; serverHandler{c.server}.ServeHTTP(w, w.req) &#x3002; &#x5176;&#x4E2D; w &#x7531; w, err := c.readRequest(ctx) &#x5F97;&#x5230;&#xFF0C;&#x56E0;&#x4E3A;&#x6709;&#x4F20;&#x9012; context &#x3002; &#x8FD8;&#x662F;&#x6765;&#x770B;&#x6E90;&#x4EE3;&#x7801;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // serverHandler delegates to either the server&apos;s Handler or // DefaultServeMux and also handles OPTIONS * requests. type serverHandler struct { \tsrv *Server } func (sh serverHandler) ServeHTTP (rw ResponseWriter, req *Request) { // &#x6B64; handler &#x5373;&#x4E3A; http.ListenAndServe &#x4E2D;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570; handler := sh.srv.Handler if handler == nil { // &#x5982;&#x679C; handler &#x4E3A;&#x7A7A;&#x5219;&#x4F7F;&#x7528;&#x5185;&#x90E8;&#x7684; DefaultServeMux &#x8FDB;&#x884C;&#x5904;&#x7406; handler = DefaultServeMux } if req.RequestURI == * &amp;&amp; req.Method == OPTIONS { handler = globalOptionsHandler{} } // &#x8FD9;&#x91CC;&#x5C31;&#x5F00;&#x59CB;&#x5904;&#x7406; http &#x8BF7;&#x6C42; // &#x5982;&#x679C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x81EA;&#x5B9A;&#x4E49;&#x7684; mux&#xFF0C;&#x5C31;&#x9700;&#x8981;&#x5B9E;&#x73B0; ServeHTTP &#x65B9;&#x6CD5;&#xFF0C;&#x5373;&#x5B9E;&#x73B0; Handler &#x63A5;&#x53E3;&#x3002; // ServeHTTP(rw, req) &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x662F; func (mux *ServeMux) ServeHTTP(w ResponseWriter, r *Request) handler.ServeHTTP(rw, req) } &#x4ECE; http.ListenAndServe(:8080, nil) &#x5F00;&#x59CB;&#xFF0C; handler &#x662F; nil &#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x540E;&#x5B9E;&#x9645; ServeHTTP &#x65B9;&#x6CD5; &#x662F; DefaultServeMux.ServeHTTP(rw, req) &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 func (mux *ServeMux) ServeHTTP (w ResponseWriter, r *Request) { \t if r.RequestURI == * { \t\t if r.ProtoAtLeast( 1 , 1 ) { \t\t\tw.Header().Set( Connection , close ) \t\t} \t\tw.WriteHeader(StatusBadRequest) \t\t return \t} \th, _ := mux.Handler(r) // &#x4F1A;&#x5339;&#x914D;&#x8DEF;&#x7531;&#xFF0C;h &#x5C31;&#x662F; MyHandler \th.ServeHTTP(w, r) // &#x8C03;&#x7528;&#x81EA;&#x5DF1; } func (mux *ServeMux) Handler (r *Request) (h Handler, pattern string ) { \t // CONNECT requests are not canonicalized. \t if r.Method == CONNECT { \t\t // If r.URL.Path is /tree and its handler is not registered, \t\t // the /tree - /tree/ redirect applies to CONNECT requests \t\t // but the path canonicalization does not. \t\t if u, ok := mux.redirectToPathSlash(r.URL.Host, r.URL.Path, r.URL); ok { \t\t\t return RedirectHandler(u.String(), StatusMovedPermanently), u.Path \t\t} \t\t return mux.handler(r.Host, r.URL.Path) \t} \t // All other requests have any port stripped and path cleaned \t // before passing to mux.handler. \thost := stripHostPort(r.Host) \tpath := cleanPath(r.URL.Path) \t // If the given path is /tree and its handler is not registered, \t // redirect for /tree/. \t if u, ok := mux.redirectToPathSlash(host, path, r.URL); ok { \t\t return RedirectHandler(u.String(), StatusMovedPermanently), u.Path \t} \t if path != r.URL.Path { \t\t_, pattern = mux.handler(host, path) \t\turl := *r.URL \t\turl.Path = path \t\t return RedirectHandler(url.String(), StatusMovedPermanently), pattern \t} \t return mux.handler(host, r.URL.Path) } // handler is the main implementation of Handler. // The path is known to be in canonical form, except for CONNECT methods. func (mux *ServeMux) handler (host, path string ) (h Handler, pattern string ) { \tmux.mu.RLock() \t defer mux.mu.RUnlock() \t // Host-specific pattern takes precedence over generic ones \t if mux.hosts { \t\th, pattern = mux.match(host + path) \t} \t if h == nil { \t\th, pattern = mux.match(path) \t} \t if h == nil { \t\th, pattern = NotFoundHandler(),  \t} \t return } &#x901A;&#x8FC7; func (mux *ServeMux) Handler(r *Request) (h Handler, pattern string) &#xFF0C;&#x6211;&#x4EEC;&#x5F97;&#x5230; Handler h &#xFF0C;&#x7136;&#x540E;&#x6267; &#x884C; h.ServeHTTP(w, r) &#x65B9;&#x6CD5;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x6267;&#x884C;&#x6211;&#x4EEC;&#x7684; MyHandler &#x51FD;&#x6570;&#xFF08;&#x522B;&#x5FD8;&#x4E86; MyHandler &#x662F;HandlerFunc&#x7C7B;&#x578B;&#xFF0C;&#x800C;&#x4ED6;&#x7684; ServeHTTP(w, r) &#x65B9;&#x6CD5;&#x8FD9;&#x91CC;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x81EA;&#x5DF1;&#x8C03;&#x7528;&#x81EA;&#x5DF1;&#xFF09;&#xFF0C;&#x628A; response &#x5199;&#x5230; http.ResponseWriter &#x5BF9;&#x8C61;&#x8FD4;&#x56DE;&#x7ED9;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C; fmt.Fprintf(w, hello) &#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x5BA2; &#x6237;&#x7AEF;&#x4F1A;&#x63A5;&#x6536;&#x5230; &#x201C;hello&#x201D; &#x3002;&#x81F3;&#x6B64;&#x6574;&#x4E2A; HTTP &#x670D;&#x52A1;&#x6267;&#x884C;&#x5B8C;&#x6210;&#x3002; &#x603B;&#x7ED3;&#x4E0B;&#xFF0C;HTTP &#x670D;&#x52A1;&#x6574;&#x4E2A;&#x8FC7;&#x7A0B;&#x5927;&#x6982;&#x662F;&#x8FD9;&#x6837;&#xFF1A; 1 Request - ServeMux(Multiplexer) - handler- Response &#x6211;&#x4EEC;&#x518D;&#x770B;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#xFF1A; 1 2 3 4 5 http.ListenAndServe( :8080 , nil ) func ListenAndServe (addr string , handler Handler) error { server := &amp;Server{Addr: addr, Handler: handler} return server.ListenAndServe() } &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x5B9E;&#x9645;&#x4E0A;&#x5C31;&#x662F; server.ListenAndServe() &#x6267;&#x884C;&#x7684;&#x5B9E;&#x9645;&#x6548;&#x679C;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x7B80;&#x5355;&#x58F0;&#x660E;&#x4E86;&#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x4F53; Server{Addr: addr, Handler: handler} &#x5B9E;&#x4F8B;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x58F0;&#x660E;&#x4E00;&#x4E2A; Server &#x5B9E;&#x4F8B;&#xFF0C;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x6DF1;&#x5EA6;&#x81EA;&#x5B9A;&#x4E49; http.Server &#x7684;&#x76EE;&#x7684;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 package main import ( \t fmt \t net/http ) func MyHandler (w http.ResponseWriter, r *http.Request) { \t_, _ = fmt.Fprintf(w, hi ) } func main () { \t // &#x66F4;&#x591A;http.Server&#x7684;&#x5B57;&#x6BB5;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x60C5;&#x51B5;&#x521D;&#x59CB;&#x5316; \tserver := http.Server{ \t\tAddr: :8080 , \t\tReadTimeout: 0 , \t\tWriteTimeout: 0 , \t} \thttp.HandleFunc( / , MyHandler) \t_ = server.ListenAndServe() } &#x6211;&#x4EEC;&#x5B8C;&#x5168;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x60C5;&#x51B5;&#x6765;&#x81EA;&#x5B9A;&#x4E49;&#x6211;&#x4EEC;&#x7684; Server &#x3002; &#x8FD8;&#x53EF;&#x4EE5;&#x6307;&#x5B9A; Servemux &#x7684;&#x7528;&#x6CD5;: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 package main import ( \t fmt \t net/http ) func MyHandler (w http.ResponseWriter, r *http.Request) { \t_, _ = fmt.Fprintf(w, hi ) } func main () { \tmux := http.NewServeMux() \tmux.HandleFunc( / , MyHandler) \t_ = http.ListenAndServe( :8080 , mux) } &#x5982;&#x679C;&#x65E2;&#x6307;&#x5B9A; Servemux &#x53C8;&#x81EA;&#x5B9A;&#x4E49; http.Server &#xFF0C;&#x56E0;&#x4E3A; Server &#x4E2D;&#x6709;&#x5B57;&#x6BB5; Handler &#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x628A; Servemux &#x53D8;&#x91CF;&#x4F5C; &#x4E3A; Server.Handler &#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 package main import ( \t fmt \t net/http ) func MyHandler (w http.ResponseWriter, r *http.Request) { \t_, _ = fmt.Fprintf(w, hi ) } func main () { \tserver := http.Server{ \t\tAddr: :8080 , \t\tReadTimeout: 0 , \t\tWriteTimeout: 0 , \t} \tmux := http.NewServeMux() \tserver.Handler = mux \tmux.HandleFunc( / , MyHandler) \t_ = server.ListenAndServe() }"},"standards/net/http.html#自定义处理器":{"title":"&#x81EA;&#x5B9A;&#x4E49;&#x5904;&#x7406;&#x5668;","path":"\\golang-learn\\standards\\net\\http.html#自定义处理器","body":"&#x81EA;&#x5B9A;&#x4E49;&#x7684; Handler &#xFF1A; &#x6807;&#x51C6;&#x5E93; http &#x63D0;&#x4F9B;&#x4E86; Handler &#x63A5;&#x53E3;&#xFF0C;&#x7528;&#x4E8E;&#x5F00;&#x53D1;&#x8005;&#x5B9E;&#x73B0;&#x81EA;&#x5DF1;&#x7684; handler &#x3002;&#x53EA;&#x8981;&#x5B9E;&#x73B0;&#x63A5;&#x53E3;&#x7684; ServeHTTP &#x65B9;&#x6CD5;&#x5373;&#x53EF;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 package main import ( \t log \t net/http \t time ) type timeHandler struct { \tformat string } func (th *timeHandler) ServeHTTP (w http.ResponseWriter, r *http.Request) { \ttm := time.Now().Format(th.format) \t_, _ = w.Write([] byte ( The time is:  + tm)) } func main () { \tmux := http.NewServeMux() \tth := &amp;timeHandler{format: time.RFC1123} \tmux.Handle( /time , th) \tlog.Println( Listening... ) \t_ = http.ListenAndServe( :3000 , mux) } &#x6211;&#x4EEC;&#x77E5;&#x9053;&#xFF0C; NewServeMux &#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; ServeMux &#x5B9E;&#x4F8B;&#xFF0C; ServeMux &#x540C;&#x65F6;&#x4E5F;&#x5B9E;&#x73B0;&#x4E86; ServeHTTP &#x65B9;&#x6CD5;&#xFF0C;&#x56E0;&#x6B64;&#x4EE3;&#x7801;&#x4E2D;&#x7684; mux &#x4E5F;&#x662F; &#x4E00;&#x79CD; handler &#x3002;&#x628A;&#x5B83;&#x5F53;&#x6210;&#x53C2;&#x6570;&#x4F20;&#x7ED9; http.ListenAndServe &#x65B9;&#x6CD5;&#xFF0C;&#x540E;&#x8005;&#x4F1A;&#x628A; mux &#x4F20;&#x7ED9; Server &#x5B9E;&#x4F8B;&#x3002;&#x56E0;&#x4E3A;&#x6307;&#x5B9A;&#x4E86; handler &#xFF0C; &#x56E0;&#x6B64;&#x6574;&#x4E2A; http &#x670D;&#x52A1;&#x5C31;&#x4E0D;&#x518D;&#x662F; DefaultServeMux &#xFF0C;&#x800C;&#x662F; mux &#xFF0C;&#x65E0;&#x8BBA;&#x662F;&#x5728;&#x6CE8;&#x518C;&#x8DEF;&#x7531;&#x8FD8;&#x662F;&#x63D0;&#x4F9B;&#x8BF7;&#x6C42;&#x670D;&#x52A1;&#x7684;&#x65F6;&#x5019;&#x3002; &#x4EFB;&#x4F55;&#x6709; func(http.ResponseWriter&#xFF0C;*http.Request) &#x7B7E;&#x540D;&#x7684;&#x51FD;&#x6570;&#x90FD;&#x80FD;&#x8F6C;&#x5316;&#x4E3A;&#x4E00;&#x4E2A; HandlerFunc &#x7C7B;&#x578B;&#x3002;&#x8FD9;&#x5F88;&#x6709;&#x7528;&#xFF0C;&#x56E0;&#x4E3A; HandlerFunc &#x5BF9;&#x8C61; &#x5185;&#x7F6E;&#x4E86; ServeHTTP &#x65B9;&#x6CD5;&#xFF0C;&#x540E;&#x8005;&#x53EF;&#x4EE5;&#x806A;&#x660E;&#x53C8;&#x65B9;&#x4FBF;&#x7684;&#x8C03;&#x7528;&#x6211;&#x4EEC;&#x6700;&#x521D;&#x63D0;&#x4F9B;&#x7684;&#x51FD;&#x6570;&#x5185;&#x5BB9;&#x3002;"},"standards/net/http.html#中间件-Middleware":{"title":"&#x4E2D;&#x95F4;&#x4EF6; Middleware","path":"\\golang-learn\\standards\\net\\http.html#中间件-Middleware","body":"&#x6240;&#x8C13;&#x4E2D;&#x95F4;&#x4EF6;&#xFF0C;&#x5C31;&#x662F;&#x8FDE;&#x63A5;&#x4E0A;&#x4E0B;&#x7EA7;&#x4E0D;&#x540C;&#x529F;&#x80FD;&#x7684;&#x51FD;&#x6570;&#x6216;&#x8005;&#x8F6F;&#x4EF6;&#xFF0C;&#x901A;&#x5E38;&#x8FDB;&#x884C;&#x4E00;&#x4E9B;&#x5305;&#x88F9;&#x51FD;&#x6570;&#x7684;&#x884C;&#x4E3A;&#xFF0C;&#x4E3A;&#x88AB;&#x5305;&#x88F9;&#x51FD;&#x6570;&#x63D0;&#x4F9B;&#x6DFB;&#x52A0;&#x4E00;&#x4E9B;&#x529F;&#x80FD;&#x6216;&#x884C;&#x4E3A;&#x3002;&#x524D;&#x6587;&#x7684; HandleFunc &#x5C31; &#x80FD;&#x628A;&#x7B7E;&#x540D;&#x4E3A; func(w http.ResponseWriter, r *http.Reqeust) &#x7684;&#x51FD;&#x6570;&#x5305;&#x88F9;&#x6210; handler &#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4E5F;&#x7B97;&#x662F;&#x4E2D;&#x95F4;&#x4EF6;&#x3002; Go &#x7684; HTTP &#x4E2D;&#x95F4;&#x4EF6;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x8981;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x7B7E;&#x540D;&#x4E3A; func(http.Handler) http.Handler &#x7684;&#x51FD;&#x6570;&#x5373;&#x53EF;&#x3002; http.Handler &#x662F;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C; &#x63A5;&#x53E3;&#x65B9;&#x6CD5;&#x6211;&#x4EEC;&#x719F;&#x6089;&#x7684;&#x4E3A; serveHTTP &#x3002;&#x8FD4;&#x56DE;&#x4E5F;&#x662F;&#x4E00;&#x4E2A; handler &#x3002;&#x56E0;&#x4E3A; Go &#x4E2D;&#x7684;&#x51FD;&#x6570;&#x4E5F;&#x53EF;&#x4EE5;&#x5F53;&#x6210;&#x53D8;&#x91CF;&#x4F20;&#x9012;&#x6216;&#x8005;&#x6216;&#x8005;&#x8FD4;&#x56DE;&#xFF0C;&#x56E0;&#x6B64;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x4E2D;&#x95F4;&#x4EF6;&#x51FD;&#x6570; &#x4E2D;&#x4F20;&#x9012;&#x5B9A;&#x4E49;&#x597D;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x53EA;&#x8981;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x662F;&#x4E00;&#x4E2A; handler &#x5373;&#x53EF;&#xFF0C;&#x5373;&#x5B9E;&#x73B0;&#x6216;&#x8005;&#x88AB; handlerFunc &#x5305;&#x88F9;&#x6210;&#x4E3A; handler &#x5904;&#x7406;&#x5668;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 func index (w http.ResponseWriter, r *http.Request) { w.Header().Set( Content-Type , text/html ) html := `doctype html html head titleHello World/title /head body p Welcome /p /body /html` fmt.Fprintln(w, html) } func middlewareHandler (next http.Handler) http . Handler { return http.HandlerFunc( func (w http.ResponseWriter, r *http.Request) { // &#x6267;&#x884C; handler &#x4E4B;&#x524D;&#x7684;&#x903B;&#x8F91; next.ServeHTTP(w, r) // &#x6267;&#x884C;&#x5B8C;&#x6BD5; handler &#x540E;&#x7684;&#x903B;&#x8F91; }) } func loggingHandler (next http.Handler) http . Handler { return http.HandlerFunc( func (w http.ResponseWriter, r *http.Request) { start := time.Now() log.Printf( Started %s %s , r.Method, r.URL.Path) next.ServeHTTP(w, r) log.Printf( Completed %s in %v , r.URL.Path, time.Since(start)) }) } func main () { http.Handle( / , loggingHandler(http.HandlerFunc(index))) http.ListenAndServe( :8000 , nil ) }"},"standards/net/http.html#静态站点":{"title":"&#x9759;&#x6001;&#x7AD9;&#x70B9;","path":"\\golang-learn\\standards\\net\\http.html#静态站点","body":"&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x76EE;&#x5F55;&#xFF0C;&#x4F5C;&#x4E3A;&#x9759;&#x6001;&#x7AD9;&#x70B9;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 package main import ( \t net/http ) func main () { \thttp.Handle( / , http.FileServer(http.Dir( D:/html/static/ ))) \t_ = http.ListenAndServe( :8080 , nil ) }"},"standards/data/sort.html":{"title":"sort","path":"\\golang-learn\\standards\\data\\sort.html","body":"sort sort 包中实现了几种基本的排序算法：插入排序、归并排序、堆排序和快速排序。但是这四种排序方法是不公开的，只用于 sort 包 内部使用。所以在对数据集合排序时不必考虑应当选择哪一种排序方法，只要实现了 sort.Interface 定义的三个方法就可以对数据集合进 行排序。 sort 包会根据实际数据自动选择高效的排序算法。 1 2 3 4 5 6 7 8 type Interface interface  \t // Len 为集合内元素的总数 \tLen() int \t // 如果 index 为 i 的元素小于 index 为 j 的元素，则返回 true，否则 false \tLess(i, j int ) bool \t // Swap 交换索引为 i 和 j 的元素 \tSwap(i, j int )  为了方便对常用数据类型的操作， sort 包原生支持 []int 、 []float64 和 []string 三种内建数据类型切片的排序操作。 即不必实现 sort.Interface 接口的三个方法。 数据集合排序 对数据集合（包括自定义数据类型的集合）排序需要实现 sort.Interface 接口的三个方法： 数据集合实现了这三个方法后，即可调用该包的 Sort() 方法进行排序。 Sort() 方法定义如下： 1 func Sort (data Interface) Sort() 方法惟一的参数就是待排序的数据集合。 该包还提供了一个方法可以判断数据集合是否已经排好顺序，该方法的内部实现依赖于我们自己实现的 Len() 和 Less() 方法： 1 2 3 4 5 6 7 8 9 func IsSorted (data Interface) bool  n := data.Len() for i := n - 1 ; i  0 ; i--  if data.Less(i, i -1 )  return false   return true  使用 sort 包对学生成绩排序的示例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package main import ( \t \"fmt\" \t \"sort\" ) // 学生成绩结构体 type StuScore struct  name string // 姓名 score int // 成绩  type StuScores []StuScore func (s StuScores) Len () int  \t return len (s)  func (s StuScores) Less (i, j int ) bool  \t return s[i].score  s[j].score  func (s StuScores) Swap (i, j int )  \ts[i], s[j] = s[j], s[i]  func main ()  students := StuScores  \"alan\" , 95 ,  \"hikerell\" , 91 ,  \"acmfly\" , 96 ,  \"leao\" , 90 , \t \t // 打印未排序的 students 数据 fmt.Println( \"Default:\\n\\t\" , students) // StuScores 已经实现了 sort.Interface 接口 , 所以可以调用 Sort 函数进行排序 \tsort.Sort(students) \t // 判断是否已经排好顺序 \tfmt.Println( \"IS Sorted?\\n\\t\" , sort.IsSorted(students)) \t // 打印排序后的 students 数据 fmt.Println( \"Sorted:\\n\\t\" ,students)  输出： 1 2 3 4 5 6 Default: [alan 95 hikerell 91 acmfly 96 leao 90] IS Sorted? true Sorted: [leao 90 hikerell 91 alan 95 acmfly 96] Reverse 上面的代码实现的是升序排序，如果要实现降序排序修改 Less() 函数： 1 2 3 4 // 将小于号修改为大于号 func (s StuScores) Less (i, j int ) bool  \t return s[i].score  s[j].score  此外， sort 包提供了 Reverse() 方法，可以允许将数据按 Less() 定义的排序方式逆序排序，而不必修改 Less() 代码。 1 func Reverse (data Interface) Interface Reverse() 返回的一个 sort.Interface 接口类型，整个 Reverse() 的内部实现比较有趣： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // 定义了一个 reverse 结构类型，嵌入 Interface 接口 type reverse struct  Interface  // reverse 结构类型的 Less() 方法拥有嵌入的 Less() 方法相反的行为 func (r reverse) Less (i, j int ) bool  return r.Interface.Less(j, i)  // 返回新的实现 Interface 接口的数据类型 func Reverse (data Interface) Interface  return &amp;reversedata  了解内部原理后，可以在学生成绩排序示例中使用 Reverse() 来实现成绩升序排序： 1 2 sort.Sort(sort.Reverse(students)) fmt.Println(students) Search 1 func Search (n int , f func ( int ) bool ) int Search() 函数一个常用的使用方式是搜索元素 x 是否在已经升序排好的切片 s 中： 1 2 3 4 5 6 7 8 x := 11 s := [] int  3 , 6 , 8 , 11 , 45  // 已经升序排序的集合 pos := sort.Search( len (s), func (i int ) bool  return s[i] = x ) if pos  len (s) &amp;&amp; s[pos] == x  fmt.Println(x, \" 在 s 中的位置为：\" , pos)  else  fmt.Println( \"s 不包含元素 \" , x)  官方文档给出的小程序： 1 2 3 4 5 6 7 8 9 10 func GuessingGame ()  \t var s string \tfmt.Printf( \"Pick an integer from 0 to 100.\\n\" ) \tanswer := sort.Search( 100 , func (i int ) bool  \t\tfmt.Printf( \"Is your number = %d? \" , i) \t\tfmt.Scanf( \"%s\" , &amp;s) \t\t return s != \"\" &amp;&amp; s[ 0 ] == 'y' \t) \tfmt.Printf( \"Your number is %d.\\n\" , answer)  已经支持的内部数据类型排序 sort 包原生支持 []int 、 []float64 和 []string 三种内建数据类型切片的排序操作。 IntSlice 类型和 []int []int 切片排序内部实现及使用方法与 []float64 和 []string 类似。 sort 包定义了一个 IntSlice 类型，并且实现了 sort.Interface 接口： 1 2 3 4 5 6 7 8 type IntSlice [] int func (p IntSlice) Len () int  return len (p)  func (p IntSlice) Less (i, j int ) bool  return p[i]  p[j]  func (p IntSlice) Swap (i, j int )  p[i], p[j] = p[j], p[i]  // IntSlice 类型定义了 Sort() 方法，包装了 sort.Sort() 函数 func (p IntSlice) Sort ()  Sort(p)  // IntSlice 类型定义了 Search() 方法，包装了 SearchInts() 函数 func (p IntSlice) Search (x int ) int  return SearchInts(p, x)  并且提供的 sort.Ints() 方法使用了该 IntSlice 类型： 1 func Ints (a [] int )  Sort(IntSlice(a))  所以，对 []int 切片排序更常使用 sort.Ints() ，而不是直接使用 IntSlice 类型： 1 2 3 s := [] int  5 , 2 , 6 , 3 , 1 , 4  // 未排序的切片数据 sort.Ints(s) fmt.Println(s) // 将会输出[1 2 3 4 5 6] 如果要使用降序排序，显然要用前面提到的 Reverse() 方法： 1 2 3 s := [] int  5 , 2 , 6 , 3 , 1 , 4  // 未排序的切片数据 sort.Sort(sort.Reverse(sort.IntSlice(s))) fmt.Println(s) // 将会输出[6 5 4 3 2 1] 如果要查找整数 x 在切片 a 中的位置，相对于前面提到的 Search() 方法， sort 包提供了 SearchInts() : 1 func SearchInts (a [] int , x int ) int 注意， SearchInts() 的使用条件为： 切片 a 已经升序排序 以下是一个错误使用的例子： 1 2 s := [] int  5 , 2 , 6 , 3 , 1 , 4  // 未排序的切片数据 fmt.Println(sort.SearchInts(s, 2 )) // 将会输出 0 而不是 1 Float64Slice 类型及 []float64 实现与 Ints 类似： 1 2 3 4 5 6 7 type Float64Slice [] float64 func (p Float64Slice) Len () int  return len (p)  func (p Float64Slice) Less (i, j int ) bool  return p[i]  p[j] || isNaN(p[i]) &amp;&amp; !isNaN(p[j])  func (p Float64Slice) Swap (i, j int )  p[i], p[j] = p[j], p[i]  func (p Float64Slice) Sort ()  Sort(p)  func (p Float64Slice) Search (x float64 ) int  return SearchFloat64s(p, x)  与 Sort() 、 IsSorted() 、 Search() 相对应的三个方法： 1 2 3 func Float64s (a [] float64 ) func Float64sAreSorted (a [] float64 ) bool func SearchFloat64s (a [] float64 , x float64 ) int 在上面 Float64Slice 类型定义的 Less 方法中，有一个内部函数 isNaN() 。 isNaN() 与 math 包中 IsNaN() 实现完全相同， sort 包之所以不使用 math.IsNaN() ，完全是基于包依赖性的考虑， sort 包的实现不依赖与其他任何包。 StringSlice 类型及 []string 两个 string 对象之间的大小比较是基于“字典序”的。 1 2 3 4 5 6 7 type StringSlice [] string func (p StringSlice) Len () int  return len (p)  func (p StringSlice) Less (i, j int ) bool  return p[i]  p[j]  func (p StringSlice) Swap (i, j int )  p[i], p[j] = p[j], p[i]  func (p StringSlice) Sort ()  Sort(p)  func (p StringSlice) Search (x string ) int  return SearchStrings(p, x)  []interface 排序与查找 只要实现了 sort.Interface 接口，即可通过 sort 包内的函数完成排序，查找等操作。但是这种用法对于其它数据类型的 slice 不友好，可能我们需要为大量的 struct 定义一个单独的 []struct 类型，再为其实现 sort.Interface 接口，例如： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 type Person struct  Name string Age int  type Persons []Person func (p Persons) Len () int  panic ( \"implement me\" )  func (p Persons) Less (i, j int ) bool  panic ( \"implement me\" )  func (p Persons) Swap (i, j int )  panic ( \"implement me\" )  sort 包提供了以下函数： 1 2 3 4 func Slice (slice interface , less func (i, j int ) bool ) func SliceStable (slice interface , less func (i, j int ) bool ) func SliceIsSorted (slice interface , less func (i, j int ) bool ) bool func Search (n int , f func ( int ) bool ) int 排序相关的三个函数都接收 []interface ，并且需要传入一个比较函数，用于为程序比较两个变量的大小，因为 函数签名和作用域的原因，这个函数只能是 匿名函数 。 sort.Slice 利用 sort.Slice 函数，而不用提供一个特定的 sort.Interface 的实现，而是 Less(i，j int) 作为一个比较回调函数，可以简单 地传递给 sort.Slice 进行排序。 不建议使用，因为在 sort.Slice 中使用了 reflect 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 people := [] struct  Name string Age int   \"Gopher\" , 7 ,  \"Alice\" , 55 ,  \"Vera\" , 24 ,  \"Bob\" , 75 ,  sort.Slice(people, func (i, j int ) bool  return people[i].Age  people[j].Age ) // 按年龄升序排序 fmt.Println( \"Sort by age:\" , people) // Output: // Sort by age: [Gopher 7 Vera 24 Alice 55 Bob 75] sort.Search 该函数判断 []interface 是否存在指定元素，举个栗子： 升序 slice sort 包为 []int , []float64 , []string 提供的 Search 函数其实也是调用的该函数，因为该函数是使用的二分查找法，所以要 求 slice 为升序排序状态。并且判断条件必须为 = ，这也是官方库提供的三个查找相关函数的的写法。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 a := [] int  2 , 3 , 4 , 200 , 100 , 21 , 234 , 56  x := 21 sort.Slice(a, func (i, j int ) bool  return a[i]  a[j] ) // 升序排序 index := sort.Search( len (a), func (i int ) bool  return a[i] = x ) // 查找元素 if index  len (a) &amp;&amp; a[index] == x  fmt.Printf( \"found %d at index %d in %v\\n\" , x, index, a)  else  fmt.Printf( \"%d not found in %v,index:%d\\n\" , x, a, index)  // Output: // found 21 at index 3 in [2 3 4 21 56 100 200 234]"},"standards/data/sort.html#sort":{"title":"sort","path":"\\golang-learn\\standards\\data\\sort.html#sort","body":"sort &#x5305;&#x4E2D;&#x5B9E;&#x73B0;&#x4E86;&#x51E0;&#x79CD;&#x57FA;&#x672C;&#x7684;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#xFF1A;&#x63D2;&#x5165;&#x6392;&#x5E8F;&#x3001;&#x5F52;&#x5E76;&#x6392;&#x5E8F;&#x3001;&#x5806;&#x6392;&#x5E8F;&#x548C;&#x5FEB;&#x901F;&#x6392;&#x5E8F;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x56DB;&#x79CD;&#x6392;&#x5E8F;&#x65B9;&#x6CD5;&#x662F;&#x4E0D;&#x516C;&#x5F00;&#x7684;&#xFF0C;&#x53EA;&#x7528;&#x4E8E; sort &#x5305; &#x5185;&#x90E8;&#x4F7F;&#x7528;&#x3002;&#x6240;&#x4EE5;&#x5728;&#x5BF9;&#x6570;&#x636E;&#x96C6;&#x5408;&#x6392;&#x5E8F;&#x65F6;&#x4E0D;&#x5FC5;&#x8003;&#x8651;&#x5E94;&#x5F53;&#x9009;&#x62E9;&#x54EA;&#x4E00;&#x79CD;&#x6392;&#x5E8F;&#x65B9;&#x6CD5;&#xFF0C;&#x53EA;&#x8981;&#x5B9E;&#x73B0;&#x4E86; sort.Interface &#x5B9A;&#x4E49;&#x7684;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#x5C31;&#x53EF;&#x4EE5;&#x5BF9;&#x6570;&#x636E;&#x96C6;&#x5408;&#x8FDB; &#x884C;&#x6392;&#x5E8F;&#x3002; sort &#x5305;&#x4F1A;&#x6839;&#x636E;&#x5B9E;&#x9645;&#x6570;&#x636E;&#x81EA;&#x52A8;&#x9009;&#x62E9;&#x9AD8;&#x6548;&#x7684;&#x6392;&#x5E8F;&#x7B97;&#x6CD5;&#x3002; 1 2 3 4 5 6 7 8 type Interface interface { \t // Len &#x4E3A;&#x96C6;&#x5408;&#x5185;&#x5143;&#x7D20;&#x7684;&#x603B;&#x6570; \tLen() int \t // &#x5982;&#x679C; index &#x4E3A; i &#x7684;&#x5143;&#x7D20;&#x5C0F;&#x4E8E; index &#x4E3A; j &#x7684;&#x5143;&#x7D20;&#xFF0C;&#x5219;&#x8FD4;&#x56DE; true&#xFF0C;&#x5426;&#x5219; false \tLess(i, j int ) bool \t // Swap &#x4EA4;&#x6362;&#x7D22;&#x5F15;&#x4E3A; i &#x548C; j &#x7684;&#x5143;&#x7D20; \tSwap(i, j int ) } &#x4E3A;&#x4E86;&#x65B9;&#x4FBF;&#x5BF9;&#x5E38;&#x7528;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x64CD;&#x4F5C;&#xFF0C; sort &#x5305;&#x539F;&#x751F;&#x652F;&#x6301; []int &#x3001; []float64 &#x548C; []string &#x4E09;&#x79CD;&#x5185;&#x5EFA;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5207;&#x7247;&#x7684;&#x6392;&#x5E8F;&#x64CD;&#x4F5C;&#x3002; &#x5373;&#x4E0D;&#x5FC5;&#x5B9E;&#x73B0; sort.Interface &#x63A5;&#x53E3;&#x7684;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;"},"standards/data/sort.html#数据集合排序":{"title":"&#x6570;&#x636E;&#x96C6;&#x5408;&#x6392;&#x5E8F;","path":"\\golang-learn\\standards\\data\\sort.html#数据集合排序","body":"&#x5BF9;&#x6570;&#x636E;&#x96C6;&#x5408;&#xFF08;&#x5305;&#x62EC;&#x81EA;&#x5B9A;&#x4E49;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x96C6;&#x5408;&#xFF09;&#x6392;&#x5E8F;&#x9700;&#x8981;&#x5B9E;&#x73B0; sort.Interface &#x63A5;&#x53E3;&#x7684;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A; &#x6570;&#x636E;&#x96C6;&#x5408;&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#x540E;&#xFF0C;&#x5373;&#x53EF;&#x8C03;&#x7528;&#x8BE5;&#x5305;&#x7684; Sort() &#x65B9;&#x6CD5;&#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002; Sort() &#x65B9;&#x6CD5;&#x5B9A;&#x4E49;&#x5982;&#x4E0B;&#xFF1A; 1 func Sort (data Interface) Sort() &#x65B9;&#x6CD5;&#x60DF;&#x4E00;&#x7684;&#x53C2;&#x6570;&#x5C31;&#x662F;&#x5F85;&#x6392;&#x5E8F;&#x7684;&#x6570;&#x636E;&#x96C6;&#x5408;&#x3002; &#x8BE5;&#x5305;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5224;&#x65AD;&#x6570;&#x636E;&#x96C6;&#x5408;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6392;&#x597D;&#x987A;&#x5E8F;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x4F9D;&#x8D56;&#x4E8E;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;&#x7684; Len() &#x548C; Less() &#x65B9;&#x6CD5;&#xFF1A; 1 2 3 4 5 6 7 8 9 func IsSorted (data Interface) bool { n := data.Len() for i := n - 1 ; i  0 ; i-- { if data.Less(i, i -1 ) { return false } } return true } &#x4F7F;&#x7528; sort &#x5305;&#x5BF9;&#x5B66;&#x751F;&#x6210;&#x7EE9;&#x6392;&#x5E8F;&#x7684;&#x793A;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package main import ( \t fmt \t sort ) // &#x5B66;&#x751F;&#x6210;&#x7EE9;&#x7ED3;&#x6784;&#x4F53; type StuScore struct { name string // &#x59D3;&#x540D; score int // &#x6210;&#x7EE9; } type StuScores []StuScore func (s StuScores) Len () int { \t return len (s) } func (s StuScores) Less (i, j int ) bool { \t return s[i].score  s[j].score } func (s StuScores) Swap (i, j int ) { \ts[i], s[j] = s[j], s[i] } func main () { students := StuScores{ { alan , 95 }, { hikerell , 91 }, { acmfly , 96 }, { leao , 90 }, \t} \t // &#x6253;&#x5370;&#x672A;&#x6392;&#x5E8F;&#x7684; students &#x6570;&#x636E; fmt.Println( Default:\\n\\t , students) // StuScores &#x5DF2;&#x7ECF;&#x5B9E;&#x73B0;&#x4E86; sort.Interface &#x63A5;&#x53E3; , &#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x8C03;&#x7528; Sort &#x51FD;&#x6570;&#x8FDB;&#x884C;&#x6392;&#x5E8F; \tsort.Sort(students) \t // &#x5224;&#x65AD;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6392;&#x597D;&#x987A;&#x5E8F; \tfmt.Println( IS Sorted?\\n\\t , sort.IsSorted(students)) \t // &#x6253;&#x5370;&#x6392;&#x5E8F;&#x540E;&#x7684; students &#x6570;&#x636E; fmt.Println( Sorted:\\n\\t ,students) } &#x8F93;&#x51FA;&#xFF1A; 1 2 3 4 5 6 Default: [{alan 95} {hikerell 91} {acmfly 96} {leao 90}] IS Sorted? true Sorted: [{leao 90} {hikerell 91} {alan 95} {acmfly 96}]"},"standards/data/sort.html#Reverse":{"title":"Reverse","path":"\\golang-learn\\standards\\data\\sort.html#Reverse","body":"&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#x7684;&#x662F;&#x5347;&#x5E8F;&#x6392;&#x5E8F;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x5B9E;&#x73B0;&#x964D;&#x5E8F;&#x6392;&#x5E8F;&#x4FEE;&#x6539; Less() &#x51FD;&#x6570;&#xFF1A; 1 2 3 4 // &#x5C06;&#x5C0F;&#x4E8E;&#x53F7;&#x4FEE;&#x6539;&#x4E3A;&#x5927;&#x4E8E;&#x53F7; func (s StuScores) Less (i, j int ) bool { \t return s[i].score  s[j].score } &#x6B64;&#x5916;&#xFF0C; sort &#x5305;&#x63D0;&#x4F9B;&#x4E86; Reverse() &#x65B9;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x5141;&#x8BB8;&#x5C06;&#x6570;&#x636E;&#x6309; Less() &#x5B9A;&#x4E49;&#x7684;&#x6392;&#x5E8F;&#x65B9;&#x5F0F;&#x9006;&#x5E8F;&#x6392;&#x5E8F;&#xFF0C;&#x800C;&#x4E0D;&#x5FC5;&#x4FEE;&#x6539; Less() &#x4EE3;&#x7801;&#x3002; 1 func Reverse (data Interface) Interface Reverse() &#x8FD4;&#x56DE;&#x7684;&#x4E00;&#x4E2A; sort.Interface &#x63A5;&#x53E3;&#x7C7B;&#x578B;&#xFF0C;&#x6574;&#x4E2A; Reverse() &#x7684;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x6BD4;&#x8F83;&#x6709;&#x8DA3;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // &#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A; reverse &#x7ED3;&#x6784;&#x7C7B;&#x578B;&#xFF0C;&#x5D4C;&#x5165; Interface &#x63A5;&#x53E3; type reverse struct { Interface } // reverse &#x7ED3;&#x6784;&#x7C7B;&#x578B;&#x7684; Less() &#x65B9;&#x6CD5;&#x62E5;&#x6709;&#x5D4C;&#x5165;&#x7684; Less() &#x65B9;&#x6CD5;&#x76F8;&#x53CD;&#x7684;&#x884C;&#x4E3A; func (r reverse) Less (i, j int ) bool { return r.Interface.Less(j, i) } // &#x8FD4;&#x56DE;&#x65B0;&#x7684;&#x5B9E;&#x73B0; Interface &#x63A5;&#x53E3;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B; func Reverse (data Interface) Interface { return &amp;reverse{data} } &#x4E86;&#x89E3;&#x5185;&#x90E8;&#x539F;&#x7406;&#x540E;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5B66;&#x751F;&#x6210;&#x7EE9;&#x6392;&#x5E8F;&#x793A;&#x4F8B;&#x4E2D;&#x4F7F;&#x7528; Reverse() &#x6765;&#x5B9E;&#x73B0;&#x6210;&#x7EE9;&#x5347;&#x5E8F;&#x6392;&#x5E8F;&#xFF1A; 1 2 sort.Sort(sort.Reverse(students)) fmt.Println(students)"},"standards/data/sort.html#Search":{"title":"Search","path":"\\golang-learn\\standards\\data\\sort.html#Search","body":"1 func Search (n int , f func ( int ) bool ) int Search() &#x51FD;&#x6570;&#x4E00;&#x4E2A;&#x5E38;&#x7528;&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#x662F;&#x641C;&#x7D22;&#x5143;&#x7D20; x &#x662F;&#x5426;&#x5728;&#x5DF2;&#x7ECF;&#x5347;&#x5E8F;&#x6392;&#x597D;&#x7684;&#x5207;&#x7247; s &#x4E2D;&#xFF1A; 1 2 3 4 5 6 7 8 x := 11 s := [] int { 3 , 6 , 8 , 11 , 45 } // &#x5DF2;&#x7ECF;&#x5347;&#x5E8F;&#x6392;&#x5E8F;&#x7684;&#x96C6;&#x5408; pos := sort.Search( len (s), func (i int ) bool { return s[i] = x }) if pos  len (s) &amp;&amp; s[pos] == x { fmt.Println(x,  &#x5728; s &#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x4E3A;&#xFF1A; , pos) } else { fmt.Println( s &#x4E0D;&#x5305;&#x542B;&#x5143;&#x7D20;  , x) } &#x5B98;&#x65B9;&#x6587;&#x6863;&#x7ED9;&#x51FA;&#x7684;&#x5C0F;&#x7A0B;&#x5E8F;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 func GuessingGame () { \t var s string \tfmt.Printf( Pick an integer from 0 to 100.\\n ) \tanswer := sort.Search( 100 , func (i int ) bool { \t\tfmt.Printf( Is your number = %d?  , i) \t\tfmt.Scanf( %s , &amp;s) \t\t return s !=  &amp;&amp; s[ 0 ] == &apos;y&apos; \t}) \tfmt.Printf( Your number is %d.\\n , answer) }"},"standards/data/sort.html#已经支持的内部数据类型排序":{"title":"&#x5DF2;&#x7ECF;&#x652F;&#x6301;&#x7684;&#x5185;&#x90E8;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x6392;&#x5E8F;","path":"\\golang-learn\\standards\\data\\sort.html#已经支持的内部数据类型排序","body":"sort &#x5305;&#x539F;&#x751F;&#x652F;&#x6301; []int &#x3001; []float64 &#x548C; []string &#x4E09;&#x79CD;&#x5185;&#x5EFA;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5207;&#x7247;&#x7684;&#x6392;&#x5E8F;&#x64CD;&#x4F5C;&#x3002; IntSlice &#x7C7B;&#x578B;&#x548C; []int []int &#x5207;&#x7247;&#x6392;&#x5E8F;&#x5185;&#x90E8;&#x5B9E;&#x73B0;&#x53CA;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;&#x4E0E; []float64 &#x548C; []string &#x7C7B;&#x4F3C;&#x3002; sort &#x5305;&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A; IntSlice &#x7C7B;&#x578B;&#xFF0C;&#x5E76;&#x4E14;&#x5B9E;&#x73B0;&#x4E86; sort.Interface &#x63A5;&#x53E3;&#xFF1A; 1 2 3 4 5 6 7 8 type IntSlice [] int func (p IntSlice) Len () int { return len (p) } func (p IntSlice) Less (i, j int ) bool { return p[i]  p[j] } func (p IntSlice) Swap (i, j int ) { p[i], p[j] = p[j], p[i] } // IntSlice &#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#x4E86; Sort() &#x65B9;&#x6CD5;&#xFF0C;&#x5305;&#x88C5;&#x4E86; sort.Sort() &#x51FD;&#x6570; func (p IntSlice) Sort () { Sort(p) } // IntSlice &#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#x4E86; Search() &#x65B9;&#x6CD5;&#xFF0C;&#x5305;&#x88C5;&#x4E86; SearchInts() &#x51FD;&#x6570; func (p IntSlice) Search (x int ) int { return SearchInts(p, x) } &#x5E76;&#x4E14;&#x63D0;&#x4F9B;&#x7684; sort.Ints() &#x65B9;&#x6CD5;&#x4F7F;&#x7528;&#x4E86;&#x8BE5; IntSlice &#x7C7B;&#x578B;&#xFF1A; 1 func Ints (a [] int ) { Sort(IntSlice(a)) } &#x6240;&#x4EE5;&#xFF0C;&#x5BF9; []int &#x5207;&#x7247;&#x6392;&#x5E8F;&#x66F4;&#x5E38;&#x4F7F;&#x7528; sort.Ints() &#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x76F4;&#x63A5;&#x4F7F;&#x7528; IntSlice &#x7C7B;&#x578B;&#xFF1A; 1 2 3 s := [] int { 5 , 2 , 6 , 3 , 1 , 4 } // &#x672A;&#x6392;&#x5E8F;&#x7684;&#x5207;&#x7247;&#x6570;&#x636E; sort.Ints(s) fmt.Println(s) // &#x5C06;&#x4F1A;&#x8F93;&#x51FA;[1 2 3 4 5 6] &#x5982;&#x679C;&#x8981;&#x4F7F;&#x7528;&#x964D;&#x5E8F;&#x6392;&#x5E8F;&#xFF0C;&#x663E;&#x7136;&#x8981;&#x7528;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684; Reverse() &#x65B9;&#x6CD5;&#xFF1A; 1 2 3 s := [] int { 5 , 2 , 6 , 3 , 1 , 4 } // &#x672A;&#x6392;&#x5E8F;&#x7684;&#x5207;&#x7247;&#x6570;&#x636E; sort.Sort(sort.Reverse(sort.IntSlice(s))) fmt.Println(s) // &#x5C06;&#x4F1A;&#x8F93;&#x51FA;[6 5 4 3 2 1] &#x5982;&#x679C;&#x8981;&#x67E5;&#x627E;&#x6574;&#x6570; x &#x5728;&#x5207;&#x7247; a &#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x76F8;&#x5BF9;&#x4E8E;&#x524D;&#x9762;&#x63D0;&#x5230;&#x7684; Search() &#x65B9;&#x6CD5;&#xFF0C; sort &#x5305;&#x63D0;&#x4F9B;&#x4E86; SearchInts() : 1 func SearchInts (a [] int , x int ) int &#x6CE8;&#x610F;&#xFF0C; SearchInts() &#x7684;&#x4F7F;&#x7528;&#x6761;&#x4EF6;&#x4E3A;&#xFF1A; &#x5207;&#x7247; a &#x5DF2;&#x7ECF;&#x5347;&#x5E8F;&#x6392;&#x5E8F; &#x4EE5;&#x4E0B;&#x662F;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x4F7F;&#x7528;&#x7684;&#x4F8B;&#x5B50;&#xFF1A; 1 2 s := [] int { 5 , 2 , 6 , 3 , 1 , 4 } // &#x672A;&#x6392;&#x5E8F;&#x7684;&#x5207;&#x7247;&#x6570;&#x636E; fmt.Println(sort.SearchInts(s, 2 )) // &#x5C06;&#x4F1A;&#x8F93;&#x51FA; 0 &#x800C;&#x4E0D;&#x662F; 1 Float64Slice &#x7C7B;&#x578B;&#x53CA; []float64 &#x5B9E;&#x73B0;&#x4E0E; Ints &#x7C7B;&#x4F3C;&#xFF1A; 1 2 3 4 5 6 7 type Float64Slice [] float64 func (p Float64Slice) Len () int { return len (p) } func (p Float64Slice) Less (i, j int ) bool { return p[i]  p[j] || isNaN(p[i]) &amp;&amp; !isNaN(p[j]) } func (p Float64Slice) Swap (i, j int ) { p[i], p[j] = p[j], p[i] } func (p Float64Slice) Sort () { Sort(p) } func (p Float64Slice) Search (x float64 ) int { return SearchFloat64s(p, x) } &#x4E0E; Sort() &#x3001; IsSorted() &#x3001; Search() &#x76F8;&#x5BF9;&#x5E94;&#x7684;&#x4E09;&#x4E2A;&#x65B9;&#x6CD5;&#xFF1A; 1 2 3 func Float64s (a [] float64 ) func Float64sAreSorted (a [] float64 ) bool func SearchFloat64s (a [] float64 , x float64 ) int &#x5728;&#x4E0A;&#x9762; Float64Slice &#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#x7684; Less &#x65B9;&#x6CD5;&#x4E2D;&#xFF0C;&#x6709;&#x4E00;&#x4E2A;&#x5185;&#x90E8;&#x51FD;&#x6570; isNaN() &#x3002; isNaN() &#x4E0E; math &#x5305;&#x4E2D; IsNaN() &#x5B9E;&#x73B0;&#x5B8C;&#x5168;&#x76F8;&#x540C;&#xFF0C; sort &#x5305;&#x4E4B;&#x6240;&#x4EE5;&#x4E0D;&#x4F7F;&#x7528; math.IsNaN() &#xFF0C;&#x5B8C;&#x5168;&#x662F;&#x57FA;&#x4E8E;&#x5305;&#x4F9D;&#x8D56;&#x6027;&#x7684;&#x8003;&#x8651;&#xFF0C; sort &#x5305;&#x7684;&#x5B9E;&#x73B0;&#x4E0D;&#x4F9D;&#x8D56;&#x4E0E;&#x5176;&#x4ED6;&#x4EFB;&#x4F55;&#x5305;&#x3002; StringSlice &#x7C7B;&#x578B;&#x53CA; []string &#x4E24;&#x4E2A; string &#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#x7684;&#x5927;&#x5C0F;&#x6BD4;&#x8F83;&#x662F;&#x57FA;&#x4E8E;&#x201C;&#x5B57;&#x5178;&#x5E8F;&#x201D;&#x7684;&#x3002; 1 2 3 4 5 6 7 type StringSlice [] string func (p StringSlice) Len () int { return len (p) } func (p StringSlice) Less (i, j int ) bool { return p[i]  p[j] } func (p StringSlice) Swap (i, j int ) { p[i], p[j] = p[j], p[i] } func (p StringSlice) Sort () { Sort(p) } func (p StringSlice) Search (x string ) int { return SearchStrings(p, x) }"},"standards/data/sort.html#interface-排序与查找":{"title":"[]interface &#x6392;&#x5E8F;&#x4E0E;&#x67E5;&#x627E;","path":"\\golang-learn\\standards\\data\\sort.html#interface-排序与查找","body":"&#x53EA;&#x8981;&#x5B9E;&#x73B0;&#x4E86; sort.Interface &#x63A5;&#x53E3;&#xFF0C;&#x5373;&#x53EF;&#x901A;&#x8FC7; sort &#x5305;&#x5185;&#x7684;&#x51FD;&#x6570;&#x5B8C;&#x6210;&#x6392;&#x5E8F;&#xFF0C;&#x67E5;&#x627E;&#x7B49;&#x64CD;&#x4F5C;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x7528;&#x6CD5;&#x5BF9;&#x4E8E;&#x5176;&#x5B83;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684; slice &#x4E0D;&#x53CB;&#x597D;&#xFF0C;&#x53EF;&#x80FD;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E3A;&#x5927;&#x91CF;&#x7684; struct &#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684; []struct &#x7C7B;&#x578B;&#xFF0C;&#x518D;&#x4E3A;&#x5176;&#x5B9E;&#x73B0; sort.Interface &#x63A5;&#x53E3;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 type Person struct { Name string Age int } type Persons []Person func (p Persons) Len () int { panic ( implement me ) } func (p Persons) Less (i, j int ) bool { panic ( implement me ) } func (p Persons) Swap (i, j int ) { panic ( implement me ) } sort &#x5305;&#x63D0;&#x4F9B;&#x4E86;&#x4EE5;&#x4E0B;&#x51FD;&#x6570;&#xFF1A; 1 2 3 4 func Slice (slice interface {}, less func (i, j int ) bool ) func SliceStable (slice interface {}, less func (i, j int ) bool ) func SliceIsSorted (slice interface {}, less func (i, j int ) bool ) bool func Search (n int , f func ( int ) bool ) int &#x6392;&#x5E8F;&#x76F8;&#x5173;&#x7684;&#x4E09;&#x4E2A;&#x51FD;&#x6570;&#x90FD;&#x63A5;&#x6536; []interface &#xFF0C;&#x5E76;&#x4E14;&#x9700;&#x8981;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x51FD;&#x6570;&#xFF0C;&#x7528;&#x4E8E;&#x4E3A;&#x7A0B;&#x5E8F;&#x6BD4;&#x8F83;&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x56E0;&#x4E3A; &#x51FD;&#x6570;&#x7B7E;&#x540D;&#x548C;&#x4F5C;&#x7528;&#x57DF;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x53EA;&#x80FD;&#x662F; &#x533F;&#x540D;&#x51FD;&#x6570; &#x3002; sort.Slice &#x5229;&#x7528; sort.Slice &#x51FD;&#x6570;&#xFF0C;&#x800C;&#x4E0D;&#x7528;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x7279;&#x5B9A;&#x7684; sort.Interface &#x7684;&#x5B9E;&#x73B0;&#xFF0C;&#x800C;&#x662F; Less(i&#xFF0C;j int) &#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x56DE;&#x8C03;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x5355; &#x5730;&#x4F20;&#x9012;&#x7ED9; sort.Slice &#x8FDB;&#x884C;&#x6392;&#x5E8F;&#x3002; &#x4E0D;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x5728; sort.Slice &#x4E2D;&#x4F7F;&#x7528;&#x4E86; reflect &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 people := [] struct { Name string Age int }{ { Gopher , 7 }, { Alice , 55 }, { Vera , 24 }, { Bob , 75 }, } sort.Slice(people, func (i, j int ) bool { return people[i].Age  people[j].Age }) // &#x6309;&#x5E74;&#x9F84;&#x5347;&#x5E8F;&#x6392;&#x5E8F; fmt.Println( Sort by age: , people) // Output: // Sort by age: [{Gopher 7} {Vera 24} {Alice 55} {Bob 75}] sort.Search &#x8BE5;&#x51FD;&#x6570;&#x5224;&#x65AD; []interface &#x662F;&#x5426;&#x5B58;&#x5728;&#x6307;&#x5B9A;&#x5143;&#x7D20;&#xFF0C;&#x4E3E;&#x4E2A;&#x6817;&#x5B50;&#xFF1A; &#x5347;&#x5E8F; slice sort &#x5305;&#x4E3A; []int , []float64 , []string &#x63D0;&#x4F9B;&#x7684; Search &#x51FD;&#x6570;&#x5176;&#x5B9E;&#x4E5F;&#x662F;&#x8C03;&#x7528;&#x7684;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x56E0;&#x4E3A;&#x8BE5;&#x51FD;&#x6570;&#x662F;&#x4F7F;&#x7528;&#x7684;&#x4E8C;&#x5206;&#x67E5;&#x627E;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;&#x8981; &#x6C42; slice &#x4E3A;&#x5347;&#x5E8F;&#x6392;&#x5E8F;&#x72B6;&#x6001;&#x3002;&#x5E76;&#x4E14;&#x5224;&#x65AD;&#x6761;&#x4EF6;&#x5FC5;&#x987B;&#x4E3A; = &#xFF0C;&#x8FD9;&#x4E5F;&#x662F;&#x5B98;&#x65B9;&#x5E93;&#x63D0;&#x4F9B;&#x7684;&#x4E09;&#x4E2A;&#x67E5;&#x627E;&#x76F8;&#x5173;&#x51FD;&#x6570;&#x7684;&#x7684;&#x5199;&#x6CD5;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 a := [] int { 2 , 3 , 4 , 200 , 100 , 21 , 234 , 56 } x := 21 sort.Slice(a, func (i, j int ) bool { return a[i]  a[j] }) // &#x5347;&#x5E8F;&#x6392;&#x5E8F; index := sort.Search( len (a), func (i int ) bool { return a[i] = x }) // &#x67E5;&#x627E;&#x5143;&#x7D20; if index  len (a) &amp;&amp; a[index] == x { fmt.Printf( found %d at index %d in %v\\n , x, index, a) } else { fmt.Printf( %d not found in %v,index:%d\\n , x, a, index) } // Output: // found 21 at index 3 in [2 3 4 21 56 100 200 234]"}}}
{"index":{"version":"2.1.0","fields":["title","body"],"fieldVectors":[["title/index.html",[0,2.27,1,0.141]],["body/index.html",[0,1.182,1,0.406,2,1.018,3,1.388,4,1.638,5,2.722,6,2.786,7,1.249,8,1.49,9,1.534,10,0.922,11,1.231,12,2.499,13,0.707,14,1.03,15,2.864,16,1.431,17,1.662,18,3.207,19,1.431,20,2.351,21,1.063,22,2.69,23,2.572,24,2.559,25,2.285,26,1.453,27,1.838,28,1.182,29,1.352,30,4.177,31,0.754,32,0.703,33,0.745,34,0.8,35,0.905,36,0.82,37,0.632,38,1.304,39,0.98,40,1.077,41,0.856,42,0.926,43,0.757,44,0.783,45,1.352,46,0.818,47,1.662,48,0.946,49,1.662,50,1.662,51,1.662,52,1.662,53,2.04,54,1.201,55,3.675,56,1.72,57,2.821,58,1.939,59,2.466,60,2.131,61,1.809,62,1.918,63,1.762,64,2.429,65,0.983,66,2.429,67,4.331,68,2.613,69,2.172,70,1.662,71,1.662,72,2.846,73,1.099,74,0.794,75,1.287,76,2.686,77,1.662,78,1.662,79,2.149,80,1.431,81,1.862,82,1.987,83,5.271,84,1.698,85,3.675,86,1.662,87,1.662,88,1.662,89,1.662,90,1.662,91,1.662,92,1.939,93,1.662,94,1.662,95,3.354,96,2.402,97,1.182,98,1.662,99,1.662,100,1.231,101,1.352,102,1.662,103,1.862,104,3.915,105,3.633,106,1.662,107,0.922,108,1.932,109,0.767,110,0.856,111,0.475,112,0.483,113,0.904,114,0.644,115,0.668,116,0.656,117,0.8,118,0.8,119,0.767,120,0.8,121,0.836,122,0.877,123,2.429,124,4.537,125,3.449,126,2.006,127,5.914,128,1.65,129,2.864,130,1.662,131,3.675,132,2.821,133,1.662,134,0.767,135,1.662,136,5.216,137,1.862,138,1.53,139,5.914,140,1.862,141,1.662,142,1.182,143,1.431,144,1.862,145,1.352,146,4.222,147,1.862,148,1.662,149,2.821,150,1.662,151,1.431,152,1.662,153,2.821,154,1.662,155,1.862,156,1.662,157,1.662]],["title/index.html#Golang-介绍",[0,2.27,158,3.576]],["body/index.html#Golang-介绍",[2,1.033,3,2.831,4,1.593,5,4.26,6,2.71,7,2.547,8,1.449,9,2.401,10,3.19,11,4.26,12,2.963,13,2.448,14,3.567,15,3.804,16,4.954,17,5.752,18,3.804,19,4.954,20,3.68,21,3.68,22,3.946,23,2.15,24,4.075,25,3.035,26,2.963,159,6.445,160,6.445,161,2.28,162,6.445,163,6.445,164,6.445,165,6.445,166,6.445,167,6.445,168,6.445,169,6.445,170,6.445,171,4.771,172,6.445,173,6.445,174,6.445,175,6.445,176,6.445,177,6.445,178,6.445,179,6.445]],["title/index.html#数据类型",[180,4.949]],["body/index.html#数据类型",[2,1.017,181,7.845,182,7.845,183,7.845,184,7.845,185,7.845]],["title/index.html#三种文件",[186,4.949]],["body/index.html#三种文件",[27,2.781,187,7.814,188,7.814,189,7.814,190,7.814,191,7.814]],["title/index.html#package",[6,2.081]],["body/index.html#package",[2,1.133,6,3.887,27,2.339,28,4.771,29,5.461,192,7.518,193,7.518,194,6.709,195,7.518,196,7.518,197,4.293,198,6.709,199,7.518,200,7.518]],["title/index.html#注释",[201,4.417]],["body/index.html#注释",[1,0.313,202,3.929,203,7.939]],["title/index.html#行分隔符",[204,4.949]],["body/index.html#行分隔符",[1,0.353,2,1.017,205,7.845,206,7.845,207,7.845]],["title/index.html#os-Args",[30,3.804]],["body/index.html#os-Args",[1,0.394,2,0.86,6,2.791,7,2.623,8,1.492,27,2.525,30,6.74,31,0.828,32,0.652,33,0.692,34,0.802,35,0.816,36,0.922,37,1.019,38,1.123,39,1.197,40,1.316,41,1.38,42,1.492,43,1.59,44,2.791,45,4.822,46,2.916,47,5.925,48,3.373,49,5.925,50,5.925,51,5.925,52,5.925,161,1.899,208,6.639,209,6.639,210,6.639,211,6.639,212,6.639]],["title/index.html#空标识符",[213,4.949]],["body/index.html#空标识符",[1,0.386,2,0.929,4,1.771,25,3.374,30,5.508,31,0.803,32,0.704,33,0.746,34,0.865,35,0.881,53,3.574,54,3.229,55,8.088,56,2.268,57,7.586,214,7.166,215,7.166,216,7.166]],["title/index.html#命名",[217,4.949]],["body/index.html#命名",[8,1.723,20,4.375,53,3.717,218,7.663,219,7.663,220,7.663,221,7.663,222,2.968,223,1.543,224,7.663,225,7.663]],["title/index.html#声明",[226,4.417]],["body/index.html#声明",[4,1.88,5,5.027,6,3.701,8,1.709,23,2.537,27,2.366,194,6.786,223,1.531,227,7.604,228,7.604,229,7.604,230,6.786,231,7.604]],["title/index.html#make-和-new",[58,1.318,59,1.422,161,0.801]],["body/index.html#make-和-new",[22,3.652,24,4.072,26,3.392,58,4.072,59,4.662,161,2.11,171,3.561,223,1.847,232,7.379,233,7.379,234,7.379,235,7.379,236,7.379,237,7.379,238,7.379,239,7.379]],["title/index.html#类型转换",[240,4.417]],["body/index.html#类型转换",[1,0.396,2,0.883,4,1.904,8,1.531,22,3.371,31,0.837,32,0.846,33,0.897,34,0.931,35,1.014,36,0.945,40,1.002,60,3.621,61,2.991,62,3.044,63,2.002,64,5.235,65,1.572,66,5.235,67,7.358,68,4.89,69,1.656,70,4.509,71,4.509,72,5.325,73,2.982,74,1.269,75,3.492,76,4.264,77,4.509,79,2.565,80,3.883,82,3.287,223,1.017,241,5.053,242,5.053,243,5.053,244,5.053,245,5.053,246,5.053,247,3.67,248,4.509,249,5.053,250,5.053,251,5.053,252,5.053,253,3.06,254,5.053,255,5.053,256,5.053,257,5.053,258,5.053,259,5.053,260,5.053,261,5.053,262,5.053,263,4.151,264,5.053,265,3.883,266,5.053,267,5.053,268,5.053,269,5.053,270,5.053,271,5.053]],["title/index.html#自定义类型",[272,4.949]],["body/index.html#自定义类型",[1,0.397,4,1.743,5,3.519,8,1.585,9,2.627,23,3.11,31,0.747,32,0.693,33,0.735,34,0.852,35,1.035,36,0.979,37,0.817,38,0.9,39,1.426,40,1.398,41,1.106,42,1.197,62,2.104,63,1.806,74,1.337,76,2.946,79,2.46,82,2.569,83,8.033,84,3.789,85,7.058,86,4.75,87,4.75,88,4.75,89,4.75,90,4.75,91,4.75,92,3.321,93,4.75,94,4.75,95,5.819,96,4.167,97,3.378,98,4.75,99,4.75,101,3.866,102,4.75,202,2.635,223,1.072,273,5.323,274,5.323,275,5.323,276,5.323,277,5.323,278,5.323,279,5.323,280,5.323,281,5.323,282,5.323,283,5.323,284,5.323,285,5.323]],["title/index.html#未命名类型",[286,4.417]],["body/index.html#未命名类型",[286,7.056,287,7.907,288,7.907,289,7.907]],["title/index.html#类型断言",[290,4.949]],["body/index.html#类型断言",[1,0.396,2,0.798,3,1.917,12,3.562,15,4.209,18,4.572,20,2.492,23,2.054,25,2.899,31,0.412,32,0.429,33,0.455,34,0.527,35,0.537,36,0.606,37,0.67,38,0.738,39,0.787,40,0.865,41,0.907,42,0.981,43,1.045,56,2.452,63,1.661,65,1.358,69,2.855,79,1.915,104,4.565,105,4.658,106,3.895,107,2.16,108,3.763,109,1.797,110,2.007,111,1.114,112,1.132,113,1.248,114,1.509,115,1.566,116,1.537,117,1.875,118,1.875,119,1.797,120,1.875,121,1.961,122,2.055,123,4.732,124,5.818,125,5.185,126,3.907,127,7.939,128,3.215,129,4.572,130,3.895,131,6.365,132,5.494,133,3.895,134,1.797,135,3.895,197,2.492,202,2.16,223,0.879,291,4.365,292,3.355,293,4.365,294,4.365,295,4.365,296,3.895,297,4.365,298,4.365,299,4.365,300,4.365,301,4.365,302,4.365,303,3.515,304,2.885,305,4.365,306,4.365,307,4.365,308,4.365,309,4.365,310,4.365,311,4.365,312,4.365,313,3.586,314,4.365,315,4.365,316,4.365,317,4.365,318,4.365,319,4.365,320,4.365]],["title/index.html#编码",[321,4.066]],["body/index.html#编码",[2,0.939,38,1.623,92,2.611,113,1.586,136,6.724,139,8.277,141,4.949,142,3.52,143,4.263,146,5.814,148,4.949,149,6.466,150,4.949,151,4.263,152,4.949,153,6.466,154,4.949,156,4.949,157,4.949,161,1.586,171,2.676,303,3.167,321,6.629,322,5.546,323,5.546,324,5.546,325,5.546,326,5.546,327,5.546,328,5.546,329,5.546,330,5.546,331,5.546,332,5.546,333,5.546,334,5.546,335,5.546,336,5.546,337,5.546,338,5.546,339,5.546,340,5.546,341,4.556,342,5.546,343,5.546,344,4.556,345,5.546,346,3.52,347,4.949,348,5.546,349,5.546,350,5.546,351,5.546,352,5.546,353,5.546,354,5.546,355,5.546,356,5.546,357,5.546,358,5.546,359,5.546,360,5.546,361,5.546,362,5.546,363,5.546,364,5.546,365,5.546,366,5.546,367,5.546,368,5.546,369,5.546,370,4.949]],["title/advance/mm.html",[1,0.195]],["body/advance/mm.html",[1,0.405,2,0.817,371,6.302,372,7.576,373,4.844,374,5.71,375,6.458,376,5.922,377,5.624,378,5.624,379,4.356]],["title/advance/mm.html#内存分配",[380,4.949]],["body/advance/mm.html#内存分配",[]],["title/advance/mm.html#基本策略",[381,4.949]],["body/advance/mm.html#基本策略",[382,7.693,383,7.693,384,7.693,385,7.693,386,7.693,387,7.693,388,7.693,389,7.693,390,7.693,391,7.693,392,7.693]],["title/advance/mm.html#内存块",[393,4.949]],["body/advance/mm.html#内存块",[372,7.608,374,5.262,394,7.244,395,7.244,396,7.244,397,7.244,398,7.244,399,7.244,400,7.244,401,7.244,402,7.244,403,7.244,404,7.244,405,7.244,406,7.244,407,7.244,408,7.244,409,7.244,410,7.244,411,7.244]],["title/advance/mm.html#tcmalloc",[375,4.066]],["body/advance/mm.html#tcmalloc",[2,0.967,374,5.42,375,6.13,376,6.016,377,6.659,378,6.659,379,5.157,412,7.462,413,7.462,414,7.462,415,7.462,416,7.462,417,7.462,418,7.462,419,7.462,420,7.462,421,7.462,422,7.462]],["title/advance/mm.html#分配",[423,4.949]],["body/advance/mm.html#分配",[]],["title/advance/mm.html#回收",[424,4.417]],["body/advance/mm.html#回收",[425,7.876,426,7.876,427,7.876,428,7.876,429,7.876]],["title/basic/array.html",[1,0.195]],["body/basic/array.html",[1,0.405,2,0.527,4,2.11,8,0.915,23,1.358,31,0.863,32,0.908,33,0.991,34,0.907,35,0.923,36,0.953,37,0.899,38,0.991,39,1.056,40,1.161,41,1.217,46,3.296,61,2.572,63,1.83,68,4.355,69,1.92,74,1.885,92,2.758,125,3.717,128,2.125,134,1.675,430,3.798,431,2.813,432,3.632,433,4.502,434,4.502,435,3.632,436,3.632,437,3.632,438,3.798,439,2.402,440,3.632,441,4.502,442,3.632,443,3.632,444,3.632,445,3.632,446,3.632,447,3.632,448,5.227,449,3.632,450,3.632,451,3.632,452,3.632,453,1.748,454,4.502]],["title/basic/array.html#数组",[455,4.949]],["body/basic/array.html#数组",[1,0.402,4,2.174,23,1.64,31,0.85,32,0.864,33,0.978,34,0.594,35,0.822,36,0.682,37,0.754,38,0.831,39,0.886,40,0.974,41,1.021,46,3.58,63,1.886,68,4.821,69,1.611,74,1.679,125,4.242,134,2.023,223,0.99,265,3.778,430,3.699,431,3.397,432,4.386,433,5.138,434,5.138,435,4.386,436,4.386,437,4.386,438,4.204,439,2.901,440,4.386,441,5.138,442,4.386,443,4.386,444,4.386,445,4.386,446,4.386,447,4.386,448,5.965,449,4.386,450,4.386,451,4.386,456,4.915,457,4.915,458,3.778,459,4.915,460,4.386,461,4.915,462,4.915,463,4.915,464,4.915,465,4.915,466,4.915,467,4.915,468,4.386,469,4.915,470,4.915,471,4.915,472,4.915,473,4.915]],["title/basic/array.html#二维数组",[474,4.949]],["body/basic/array.html#二维数组",[1,0.404,4,1.524,31,0.801,32,0.901,33,0.955,34,1.025,35,0.953,36,1.076,37,0.946,38,1.043,39,1.112,40,1.222,41,1.281,63,1.322,69,2.021,74,1.948,128,3.219,161,1.763,452,5.502,475,6.165,476,6.165,477,6.165,478,6.165]],["title/basic/array.html#数组传入函数",[479,4.949]],["body/basic/array.html#数组传入函数",[1,0.388,8,1.646,31,0.692,32,0.72,33,0.763,61,3.782,92,4.054,453,3.147,454,6.618,480,7.324,481,7.324,482,6.536,483,7.324,484,7.324,485,7.324]],["title/basic/flow.html",[1,0.195]],["body/basic/flow.html",[1,0.405,2,0.413,11,4.741,14,1.762,15,5.435,16,2.447,18,5.105,19,4.56,20,2.786,25,4.229,31,0.839,32,0.873,33,0.952,34,1.06,35,1.093,36,1.094,37,1.209,38,1.375,39,1.07,40,0.631,41,0.661,42,0.716,43,0.762,53,1.338,56,1.007,61,1.398,62,2.345,63,0.683,69,1.599,74,0.799,79,1.518,96,1.576,104,2.297,109,1.31,111,0.812,112,1.265,116,1.121,128,1.662,136,4.101,146,3.627,438,1.762,486,3.183,487,2.841,488,4.354,489,3.183,490,4.354,491,2.841,492,3.75,493,3.75,494,1.946,495,2.312,496,2.841,497,2.2,498,2.841,499,2.841,500,5.112,501,2.841,502,2.841,503,4.354,504,2.104,505,3.75,506,2.447,507,2.02,508,2.2,509,1.946,510,2.447,511,2.447,512,2.447,513,2.2,514,2.447,515,2.447,516,2.447,517,2.447,518,2.447,519,2.447]],["title/basic/flow.html#控制语句",[520,4.949]],["body/basic/flow.html#控制语句",[]],["title/basic/flow.html#if",[]],["body/basic/flow.html#if",[1,0.386,31,0.826,32,0.859,33,0.911,34,0.908,35,0.924,521,8.743,522,7.518]],["title/basic/flow.html#switch",[18,2.921]],["body/basic/flow.html#switch",[1,0.38,15,5.787,18,5.7,20,3.61,31,0.597,32,0.621,33,0.659,34,0.764,35,0.777,36,0.878,37,0.97,38,1.069,39,1.14,487,5.642,488,7.029,490,7.029,491,5.642,523,6.322,524,6.322,525,6.322,526,6.322,527,6.322,528,6.322,529,6.322,530,6.322,531,6.322,532,6.322,533,6.322,534,6.322,535,6.322,536,6.322,537,6.322,538,6.322,539,6.322,540,6.322,541,6.322,542,6.322,543,6.322,544,6.322,545,6.322,546,6.322,547,6.322]],["title/basic/flow.html#select",[11,3.272]],["body/basic/flow.html#select",[1,0.385,11,6.081,15,5.721,18,3.998,20,3.868,31,0.64,32,0.666,33,0.706,34,0.818,35,0.833,36,0.94,37,1.039,38,1.146,492,6.317,493,6.317,548,6.775,549,6.775,550,6.775,551,6.775,552,6.775,553,6.775,554,6.046,555,6.046,556,6.775,557,6.046,558,6.775,559,6.775,560,6.046]],["title/basic/flow.html#for",[]],["body/basic/flow.html#for",[1,0.399,2,0.49,14,2.094,16,2.908,18,2.233,19,5.059,25,4.369,31,0.825,32,0.858,33,0.938,34,1.034,35,1.092,36,1.072,37,1.113,38,1.366,39,1.001,40,0.75,41,0.786,42,0.85,43,0.906,53,1.591,56,1.197,61,1.662,62,2.601,63,0.811,69,1.82,74,0.95,79,1.728,96,1.872,104,2.615,109,1.557,111,0.965,112,1.44,116,1.332,128,1.975,136,4.549,146,4.023,161,1.082,223,1.325,247,2.748,321,3.108,438,2.094,494,2.312,495,2.748,496,3.376,497,2.615,498,3.376,499,3.376,500,5.574,501,3.376,502,3.376,503,4.957,504,2.501,505,4.269,506,2.908,508,2.615,510,2.908,511,2.908,512,2.908,513,2.615,514,2.908,515,2.908,516,2.908,517,2.908,518,2.908,519,2.908,561,5.554,562,3.783,563,3.783,564,3.783,565,3.783,566,3.783,567,3.783,568,3.783,569,3.783,570,3.108,571,3.783,572,3.783,573,3.783,574,3.783,575,3.783,576,3.783,577,3.783,578,3.783,579,3.376,580,3.783,581,3.783,582,3.783,583,3.108,584,3.783,585,3.783,586,3.783,587,3.783,588,3.783,589,3.783,590,3.783,591,3.783,592,3.783,593,3.783,594,3.376,595,3.783,596,3.783,597,3.783,598,3.783,599,3.783,600,3.783,601,3.783,602,5.554,603,3.783,604,3.783,605,3.783,606,3.783,607,3.783,608,3.783,609,3.783,610,3.783,611,3.783,612,3.783,613,3.783,614,3.783,615,3.783,616,3.376,617,3.783,618,3.376,619,3.108,620,3.376,621,3.376,622,3.376,623,3.783,624,3.783,625,3.783,626,3.783,627,3.783]],["title/basic/interface.html",[1,0.195]],["body/basic/interface.html",[1,0.403,2,0.491,3,2.112,4,1.516,6,2.022,7,1.496,8,1.848,9,2.285,12,4.052,13,2.501,23,2.856,25,1.783,27,1.908,31,0.747,32,0.778,33,0.805,34,0.84,35,0.892,36,0.965,37,1.067,38,1.037,39,1.106,40,1.216,41,1.274,42,1.379,43,1.468,44,1.592,53,1.592,54,2.111,56,2.084,59,2.443,61,1.663,62,2.197,63,1.697,65,1.908,69,1.241,74,0.581,92,1.089,96,1.145,111,1.565,112,1.59,113,1.754,114,2.121,115,2.2,116,1.958,117,2.066,118,2.066,119,1.98,120,2.066,121,2.16,122,2.264,134,1.559,504,5.108,509,1.414,628,0.896,629,1.598,630,4.291,631,1.598,632,3.379,633,5.473,634,3.892,635,4.961,636,2.064,637,5.473,638,3.379,639,2.403,640,3.379,641,1.977,642,1.977,643,3.171,644,3.379,645,1.598,646,2.064,647,2.911,648,1.778,649,1.365,650,1.28,651,3.324,652,2.911,653,2.313,654,3.379,655,2.403,656,2.064,657,2.751,658,1.598,659,1.874,660,1.977,661,1.977,662,2.235,663,3.379,664,3.379,665,4.291,666,3.379,667,5.473,668,1.9,669,1.598,670,1.874,671,2.064,672,2.064,673,2.556,674,3.379,675,3.379,676,2.064,677,1.468,678,1.468,679,1.468,680,1.468,681,1.468,682,1.468,683,1.365,684,1.468,685,1.468,686,1.468,687,1.598,688,1.598,689,1.778,690,4.291,691,4.961,692,4.961,693,3.379,694,3.379,695,5.473,696,2.064,697,0.862,698,2.064,699,2.064,700,2.064,701,3.379,702,4.961,703,2.064,704,2.064,705,3.696,706,2.064,707,3.379,708,2.064,709,3.379,710,1.778,711,2.313,712,2.064]],["title/basic/interface.html#接口",[713,4.417]],["body/basic/interface.html#接口",[1,0.401,2,0.461,3,2.001,4,1.454,6,1.915,7,1.404,8,1.808,9,2.191,12,3.988,13,2.41,23,2.804,25,1.673,27,1.83,31,0.711,32,0.74,33,0.784,34,0.812,35,0.865,36,0.933,37,1.031,38,0.995,39,1.06,40,1.166,41,1.222,42,1.322,43,1.408,44,1.494,53,1.494,54,2.014,56,2.008,59,2.315,61,1.561,62,2.095,63,1.656,65,1.83,69,1.165,74,0.538,92,1.008,96,1.06,111,1.501,112,1.525,113,1.682,114,2.034,115,2.11,116,1.867,117,1.957,118,1.957,119,1.875,120,1.957,121,2.046,122,2.145,134,1.463,161,0.612,222,0.829,223,0.917,240,1.91,247,1.555,504,4.975,619,1.759,628,0.829,629,1.48,630,4.065,631,1.48,632,3.171,633,5.249,634,3.733,635,4.732,636,1.91,637,5.249,638,3.171,639,2.255,640,3.171,641,1.855,642,1.855,643,3.107,644,3.171,645,1.48,646,1.91,647,2.731,648,1.645,649,1.263,650,1.185,651,3.148,652,2.731,654,3.171,655,1.359,656,1.91,657,2.581,658,1.48,659,1.759,660,1.855,661,1.855,662,2.097,663,3.171,664,3.171,665,4.065,666,3.171,667,5.249,669,1.48,670,1.759,671,1.91,672,1.91,673,2.438,674,3.171,675,3.171,676,1.91,677,1.359,678,1.359,679,1.359,680,1.359,681,1.359,682,1.359,683,1.263,684,1.359,685,1.359,686,1.359,687,1.48,688,1.48,689,1.645,690,4.065,691,4.732,692,4.732,693,3.171,694,3.171,695,5.249,696,1.91,697,0.798,698,1.91,699,1.91,700,1.91,701,3.171,702,4.732,703,1.91,704,1.91,705,3.501,706,1.91,707,3.171,708,1.91,709,3.171,710,1.645,712,1.91,713,1.91,714,2.141,715,2.141,716,2.141,717,2.141,718,2.141,719,2.141,720,2.141,721,2.141,722,2.141,723,2.141,724,4.065,725,5.249,726,1.91,727,2.141,728,2.141,729,3.553,730,2.141,731,2.141,732,2.141,733,2.141,734,2.141,735,2.141,736,2.141,737,2.141,738,2.141,739,2.141,740,2.141,741,2.141,742,2.141,743,2.141,744,2.141,745,2.141,746,1.759,747,2.141,748,2.141,749,2.141,750,2.141,751,2.141,752,1.91,753,2.141,754,2.141,755,1.91,756,2.141,757,2.141,758,1.91,759,2.141,760,2.141,761,2.919,762,2.141,763,1.91,764,2.141,765,2.141,766,2.141,767,2.141,768,2.141,769,2.141,770,1.91,771,2.141,772,2.141,773,2.141,774,2.141,775,2.141,776,2.141,777,2.141,778,3.553,779,2.141,780,2.141,781,2.141,782,2.141,783,2.141,784,2.141]],["title/advance/gc.html",[]],["body/advance/gc.html",[1,0.403,2,0.498,3,1.687,8,1.747,9,2.896,31,0.69,32,0.653,33,0.761,34,0.802,35,0.816,36,0.922,37,0.862,38,0.95,39,1.013,40,1.113,41,1.167,42,1.263,43,1.345,48,1.952,53,1.615,61,2.467,65,1.747,74,1.411,76,2.126,79,1.747,105,2.854,107,3.287,109,2.734,110,3.574,111,1.434,112,1.457,113,1.606,114,1.328,115,1.378,116,1.353,117,1.65,118,1.65,119,1.582,120,1.65,121,1.726,122,1.809,379,2.655,430,3.675,453,1.65,495,4.823,641,2.933,650,2.126,659,1.901,697,2.093,785,3.428,786,2.348,787,5.153,788,5.013,789,3.428,790,2.438,791,3.428,792,3.428,793,3.428,794,2.953,795,2.655,796,5.926,797,3.428,798,6.52,799,5.138,800,3.428,801,3.428,802,3.428,803,5.013,804,5.013,805,4.615,806,3.428,807,3.428,808,3.428,809,3.428,810,2.655,811,3.428,812,6.937,813,5.013,814,5.926,815,3.428,816,3.428,817,3.428,818,3.428,819,3.433,820,5.013,821,3.428,822,3.428,823,3.428,824,3.428,825,3.428,826,3.428,827,2.953,828,3.428,829,3.428,830,2.953,831,3.428,832,3.428,833,3.428,834,3.428,835,5.013,836,5.013,837,3.428,838,3.428,839,2.348,840,3.428,841,3.428]],["title/advance/gc.html#垃圾回收",[842,4.949]],["body/advance/gc.html#垃圾回收",[1,0.4,2,0.48,3,1.627,8,1.722,9,2.854,31,0.678,32,0.639,33,0.677,34,0.785,35,0.8,36,0.903,37,0.839,38,0.925,39,0.986,40,1.084,41,1.137,42,1.23,43,1.31,48,1.883,53,1.558,61,2.403,65,1.702,74,1.374,76,2.051,79,1.702,105,2.78,107,3.218,109,2.677,110,3.521,111,1.396,112,1.419,113,1.564,114,1.281,115,1.329,116,1.305,117,1.592,118,1.592,119,1.525,120,1.592,121,1.665,122,1.745,223,0.746,253,1.665,303,2.116,379,2.561,430,3.599,453,1.592,495,4.723,641,2.856,659,1.834,697,2.038,785,3.307,786,2.265,787,5.087,788,4.882,789,3.307,790,2.352,791,3.307,792,3.307,793,3.307,794,2.848,795,2.561,796,5.803,797,3.307,798,6.408,799,5.063,800,3.307,801,3.307,802,3.307,803,4.882,804,4.882,805,4.494,806,3.307,807,3.307,808,3.307,809,3.307,810,2.561,811,3.307,812,6.835,813,4.882,814,5.803,815,3.307,816,3.307,817,3.307,818,3.307,819,3.344,820,4.882,821,3.307,822,3.307,823,3.307,824,3.307,825,3.307,826,3.307,827,2.848,828,3.307,829,3.307,830,2.848,831,3.307,832,3.307,833,3.307,834,3.307,835,4.882,836,4.882,837,3.307,838,3.307,839,2.265,840,3.307,841,3.307,843,3.705,844,3.705,845,3.705,846,3.705,847,3.307,848,3.705,849,3.705,850,3.705,851,3.705,852,3.705,853,3.705,854,3.705,855,3.705,856,3.705,857,3.705,858,3.705,859,3.705,860,3.705,861,3.705,862,3.705,863,3.705,864,3.705,865,3.705,866,3.705,867,3.705,868,3.705,869,3.705,870,3.705,871,3.705,872,3.705,873,3.705,874,3.705,875,3.705,876,3.705,877,3.705,878,3.705,879,3.705]],["title/basic/error.html",[1,0.195]],["body/basic/error.html",[1,0.405,2,0.928,6,1.17,7,1.099,8,1.224,9,2.029,10,3.71,12,1.279,13,1.057,14,1.54,15,2.593,18,1.642,20,1.589,23,0.928,25,2.069,27,2.227,31,0.734,32,0.786,33,0.702,34,0.813,35,0.828,36,0.935,37,0.949,38,1.046,39,1.115,40,1.226,41,1.285,42,1.224,43,1.304,44,1.17,48,2.233,53,1.17,54,1.057,56,0.881,69,0.912,74,0.699,97,1.766,104,2.913,111,0.71,112,0.722,124,2.789,125,1.766,129,1.642,134,1.809,439,2.593,628,3.236,642,4.362,643,3.111,651,1.923,657,3.955,673,1.279,697,2.509,786,3.781,819,3.328,830,2.138,880,3.191,881,2.483,882,2.483,883,2.286,884,2.789,885,2.483,886,2.483,887,2.782,888,2.483,889,1.923,890,2.483,891,2.138,892,3.921,893,2.483,894,2.483,895,2.483,896,2.686,897,2.483,898,5.597,899,2.483,900,3.225,901,3.921,902,3.921,903,2.483,904,3.921,905,3.921,906,3.191,907,6.17,908,2.483,909,2.483,910,2.789,911,4.86,912,2.138,913,2.483,914,2.483,915,2.483,916,2.138,917,2.789,918,2.483,919,2.483]],["title/basic/error.html#错误",[263,4.066]],["body/basic/error.html#错误",[]],["title/basic/error.html#error-类型",[643,1.358,920,1.817]],["body/basic/error.html#error-类型",[1,0.398,9,2.974,14,3.002,31,0.674,32,0.702,33,0.744,34,0.862,35,0.878,36,0.991,37,1.096,38,1.208,39,1.287,40,1.416,41,1.484,42,1.22,43,1.299,53,2.281,54,2.061,97,3.443,197,3.098,222,2.101,439,3.201,628,3.627,642,4.946,643,2.712,657,5.187,673,2.494,880,3.94,881,4.841,882,4.841,884,3.443,885,4.841,886,4.841,888,4.841,889,3.749,890,4.841,891,4.17,892,6.373,893,4.841,894,4.841,895,4.841,896,4.365,897,4.841,921,5.425,922,5.425,923,5.425,924,5.425,925,5.425,926,5.425,927,5.425,928,5.425,929,5.425,930,5.425,931,5.425,932,5.425,933,5.425,934,5.425,935,5.425,936,5.425,937,2.756,938,5.425]],["title/basic/error.html#Panic-异常",[898,2.042,939,3.576]],["body/basic/error.html#Panic-异常",[2,1.113,10,2.482,12,2.305,25,3.19,27,2.108,31,0.725,32,0.808,33,0.522,34,0.606,35,0.617,36,0.696,48,3.443,124,4.3,223,1.729,292,3.854,303,2.863,341,4.119,344,4.119,643,3.122,786,5.024,819,4.142,898,5.626,899,4.475,900,3.76,901,6.047,902,6.047,903,4.475,904,6.047,905,6.047,906,4.922,940,5.014,941,4.475,942,5.014,943,5.014,944,5.014,945,5.014,946,5.014,947,3.466,948,5.014,949,5.014,950,3.854,951,5.014,952,5.014,953,3.182,954,5.014,955,5.014,956,5.014,957,5.014,958,5.014,959,5.014,960,5.014,961,5.014,962,5.014,963,5.014,964,5.014,965,5.014,966,5.014,967,5.014,968,5.014,969,5.014,970,4.475,971,5.014,972,5.014,973,5.014,974,5.014,975,5.014,976,5.014,977,5.014,978,5.014,979,5.014,980,5.014,981,5.014,982,5.014,983,5.014,984,5.014,985,5.014,986,5.014,987,5.014,988,5.014,989,5.014,990,5.014,991,5.014,992,5.014,993,5.014,994,5.014,995,5.014,996,5.014,997,5.014,998,5.014,999,5.014,1000,5.014,1001,5.014,1002,5.014,1003,5.014,1004,5.014]],["title/basic/error.html#Recover-捕获异常",[907,2.597,1005,3.576]],["body/basic/error.html#Recover-捕获异常",[1,0.393,6,1.827,7,1.717,8,1.6,10,4.19,13,1.651,15,3.622,18,2.564,20,2.481,23,1.45,27,2.405,31,0.579,32,0.603,33,0.639,34,0.741,35,0.755,36,0.852,37,0.942,38,1.038,39,1.107,40,1.217,41,1.275,42,1.38,43,1.47,44,1.827,56,1.375,69,1.424,104,3.641,111,1.109,112,1.127,125,2.758,129,2.564,134,2.527,223,1.557,253,1.952,303,2.481,583,3.57,628,2.756,642,3.205,643,2.703,651,3.003,657,3.156,697,3.039,819,2.656,830,3.34,880,3.156,884,2.758,898,5.573,907,6.728,908,3.878,909,3.878,910,3.895,911,6.35,912,3.34,913,3.878,914,3.878,915,3.878,916,3.34,917,3.895,918,3.878,919,3.878,941,5.477,953,2.758,1006,4.345,1007,4.345,1008,4.345,1009,4.345,1010,3.878,1011,4.345,1012,4.345,1013,4.345,1014,4.345,1015,5.477,1016,4.345,1017,4.345,1018,4.345,1019,4.345,1020,4.345,1021,4.345,1022,4.345,1023,4.345,1024,4.345,1025,4.345,1026,4.345,1027,3.156,1028,4.345,1029,4.345,1030,4.345,1031,4.345,1032,3.878,1033,4.345,1034,4.345,1035,4.345,1036,4.345,1037,4.345,1038,4.345,1039,4.345,1040,4.345,1041,4.345,1042,3.156,1043,4.345,1044,4.345,1045,4.345,1046,4.345,1047,4.345]],["title/basic/oop.html",[1,0.195]],["body/basic/oop.html",[1,0.405,2,0.971,4,1.345,7,1.098,8,1.608,9,1.635,13,2.718,23,2.591,27,0.864,31,0.802,32,0.857,33,0.78,34,0.864,35,0.88,36,0.858,37,0.948,38,1.045,39,1.114,40,1.225,41,1.131,42,1.223,43,1.303,54,1.055,56,2.792,62,1.734,63,0.596,65,1.365,69,1.783,72,4.272,74,1.552,79,0.864,82,1.341,84,3.32,100,1.836,108,4.579,111,1.389,112,1.411,113,1.556,129,1.64,134,1.144,438,3.421,439,1.64,629,3.76,643,1.055,658,1.92,697,2.508,1048,5.173,1049,2.135,1050,2.479,1051,2.479,1052,2.479,1053,2.479,1054,2.479,1055,2.479,1056,2.479,1057,2.479,1058,4.855,1059,2.479,1060,2.479,1061,5.004,1062,2.479,1063,4.855,1064,2.135,1065,1.92,1066,2.479,1067,2.479,1068,2.479,1069,2.479,1070,2.778,1071,3.606,1072,1.92,1073,4.751,1074,1.92,1075,2.479,1076,1.194,1077,3.917,1078,2.135,1079,4.855,1080,3.917,1081,3.917,1082,4.389,1083,3.917,1084,2.479,1085,3.917,1086,2.479,1087,2.479,1088,2.479,1089,2.479,1090,1.92,1091,1.586,1092,3.917,1093,2.479,1094,2.479,1095,2.479,1096,2.479,1097,2.479,1098,2.479,1099,2.479,1100,2.479,1101,2.479,1102,2.479,1103,2.479,1104,2.479,1105,2.479,1106,2.479,1107,2.479,1108,6.385,1109,2.778,1110,3.917,1111,3.917]],["title/basic/oop.html#面向对象",[1112,4.949]],["body/basic/oop.html#面向对象",[2,1.033,1113,7.97]],["title/basic/oop.html#方法",[1114,4.066]],["body/basic/oop.html#方法",[1,0.399,2,0.777,4,1.04,8,1.811,9,1.568,13,1.598,23,2.332,27,1.309,31,0.814,32,0.881,33,0.794,34,0.844,35,0.738,36,0.833,37,0.92,38,1.015,39,1.082,40,0.834,41,0.874,42,0.946,43,1.008,62,2.37,63,0.902,65,1.309,82,2.03,84,3.755,100,2.781,108,5.269,111,1.074,112,1.091,113,1.203,134,1.732,197,2.402,222,1.63,223,1.687,247,3.056,296,3.755,439,2.483,458,3.234,629,4.832,643,1.598,697,2.839,724,3.755,725,3.755,726,3.755,920,2.138,1048,6.192,1049,3.234,1050,3.755,1051,3.755,1052,3.755,1053,3.755,1054,3.755,1055,3.755,1056,3.755,1057,3.755,1058,6.238,1059,3.755,1060,3.755,1061,4.658,1062,3.755,1063,6.238,1064,3.234,1065,2.908,1066,3.755,1067,3.755,1068,3.755,1069,3.755,1071,3.457,1072,2.908,1073,5.857,1074,2.908,1115,4.208,1116,3.755,1117,3.755,1118,4.208,1119,4.208,1120,4.208,1121,4.208,1122,3.46,1123,4.208,1124,4.208,1125,4.208,1126,4.208,1127,4.208,1128,5.999,1129,4.208,1130,4.208,1131,4.208,1132,4.208,1133,4.208,1134,4.208,1135,4.208,1136,4.208,1137,4.208,1138,4.208,1139,4.208,1140,4.208,1141,4.208,1142,4.208,1143,4.208,1144,4.208,1145,4.208,1146,4.208,1147,4.208,1148,4.208,1149,4.208,1150,4.208,1151,4.208,1152,4.208,1153,4.208,1154,4.208]],["title/basic/oop.html#嵌入结构体扩展类型",[1155,4.949]],["body/basic/oop.html#嵌入结构体扩展类型",[1,0.395,2,0.908,4,1.731,7,2.081,13,2.66,23,2.624,31,0.743,32,0.773,33,0.549,34,0.846,35,0.967,36,0.731,37,0.808,38,0.891,39,0.95,40,1.388,41,1.094,42,1.184,43,1.261,65,1.638,72,5.795,74,2.106,79,1.638,84,2.829,111,1.344,112,1.366,113,1.506,223,1.584,438,4.64,697,1.962,1061,5.485,1071,4.327,1075,4.7,1076,2.263,1077,6.249,1078,4.048,1079,7.02,1080,6.249,1081,6.249,1083,6.249,1084,4.7,1085,6.249,1086,4.7,1087,4.7,1156,7.003,1157,5.267,1158,5.267,1159,5.267,1160,5.267,1161,5.267,1162,5.267,1163,5.267,1164,5.267,1165,5.267,1166,5.267,1167,5.267,1168,5.267,1169,5.267,1170,5.267,1171,5.267,1172,5.267,1173,5.267,1174,5.267,1175,5.267,1176,5.267,1177,5.267,1178,5.267,1179,5.267,1180,5.267,1181,5.267]],["title/basic/oop.html#封装",[1182,4.949]],["body/basic/oop.html#封装",[1,0.363,13,3.306,23,2.489,31,0.705,32,0.733,33,0.777,937,3.791,1088,6.659,1089,6.659,1090,5.157,1183,7.462,1184,7.462,1185,7.462,1186,7.462,1187,7.462,1188,7.462]],["title/basic/oop.html#String-方法",[56,1.132,1114,2.938]],["body/basic/oop.html#String-方法",[1,0.388,2,0.717,8,1.243,9,2.061,13,2.101,23,1.845,31,0.522,32,0.543,33,0.576,34,0.668,35,0.68,36,0.768,37,0.849,38,0.935,39,0.997,40,1.096,41,1.149,42,1.243,43,1.324,54,2.101,56,3.108,69,2.641,111,1.411,112,1.434,113,1.582,129,3.264,161,1.582,223,1.456,253,2.484,292,4.251,346,3.51,658,3.822,1092,6.454,1093,4.936,1094,4.936,1095,4.936,1096,4.936,1097,4.936,1098,4.936,1099,4.936,1100,4.936,1101,4.936,1102,4.936,1103,4.936,1104,4.936,1105,4.936,1106,4.936,1107,4.936,1108,8.119,1110,6.454,1111,6.454,1114,4.544,1122,2.737,1189,5.531,1190,5.531,1191,5.531,1192,5.531,1193,5.531,1194,5.531,1195,5.531,1196,5.531,1197,5.531,1198,5.531,1199,5.531,1200,5.531,1201,5.531,1202,5.531,1203,5.531,1204,5.531,1205,5.531,1206,5.531,1207,5.531,1208,5.531,1209,5.531]],["title/basic/pointer.html",[1,0.195]],["body/basic/pointer.html",[0,3.849,1,0.404,3,0.995,4,1.172,6,0.952,7,0.895,8,1.549,13,2.617,21,1.293,23,2.401,24,3.244,26,2.998,27,1.158,31,0.877,32,0.789,33,0.572,34,0.572,35,0.583,36,0.517,37,0.571,38,0.63,39,0.671,40,0.738,41,0.774,42,0.837,43,0.892,44,0.952,54,1.414,56,1.178,62,1.471,63,1.543,65,0.705,69,2.876,74,2.114,79,2.239,80,2.862,92,1.067,97,2.363,100,2.461,104,3.07,111,0.95,112,0.966,113,1.065,114,0.783,115,0.813,116,0.798,117,0.973,118,0.973,119,0.933,120,0.973,121,1.018,122,1.067,128,2.475,379,2.573,431,3.794,454,5.012,508,1.566,628,2.126,629,1.566,641,3.405,659,1.121,660,1.183,661,1.183,662,1.337,670,2.346,673,3.918,677,1.438,678,1.438,679,1.438,680,1.438,681,1.438,682,1.438,683,1.337,684,1.438,685,1.438,686,1.438,687,1.566,688,1.566,689,1.741,697,3.27,705,1.741,787,2.363,795,4.507,917,1.438,1061,1.385,1064,2.862,1065,2.573,1073,1.741,1076,0.973,1210,2.022,1211,1.741,1212,1.566,1213,1.566,1214,5.412,1215,2.022,1216,2.022,1217,2.265,1218,2.862,1219,2.022,1220,2.022,1221,2.022,1222,2.022,1223,2.022,1224,2.022,1225,2.022,1226,2.022,1227,2.022,1228,2.022,1229,2.022,1230,2.022,1231,2.022,1232,2.022,1233,2.022,1234,2.022,1235,2.022,1236,2.022,1237,2.022,1238,2.022,1239,2.022,1240,1.566,1241,2.022,1242,2.022,1243,2.022,1244,2.022,1245,2.022,1246,2.022,1247,2.022,1248,2.022,1249,6.848,1250,3.323,1251,3.323,1252,7.165,1253,3.323,1254,2.265,1255,3.323,1256,2.022,1257,2.265,1258,2.022,1259,2.022,1260,3.323,1261,2.022,1262,5.819,1263,2.022,1264,2.862,1265,2.022,1266,3.323,1267,2.022,1268,2.265,1269,6.521,1270,4.899,1271,2.022,1272,4.899,1273,2.022,1274,2.022,1275,2.022,1276,3.723,1277,2.022,1278,4.23,1279,3.323,1280,2.265,1281,1.385,1282,1.741]],["title/basic/pointer.html#指针",[1283,4.417]],["body/basic/pointer.html#指针",[1,0.38,23,2.096,31,0.808,32,0.881,33,0.654,34,0.759,35,0.772,63,1.682,79,2.968,80,6.03,222,3.039,223,1.265,628,3.471,697,3.555,1061,3.84,1210,5.606,1211,4.829,1212,4.342,1213,4.342,1284,6.282,1285,6.282,1286,6.282,1287,6.282,1288,6.282,1289,6.282,1290,6.282,1291,6.282,1292,6.282,1293,6.282,1294,6.282,1295,6.282,1296,5.606,1297,5.161,1298,6.282,1299,6.282,1300,6.282,1301,6.282,1302,6.282,1303,6.282]],["title/basic/pointer.html#指向指针的指针",[1304,4.949]],["body/basic/pointer.html#指向指针的指针",[1,0.397,4,2.112,31,0.591,32,0.615,33,0.652,34,0.756,35,0.77,36,0.869,37,0.961,38,1.059,39,1.129,40,1.241,41,1.301,42,1.408,43,1.5,63,1.832,69,2.8,111,1.598,112,1.624,113,1.791,128,4.461,454,7.224,705,4.813,1214,8.223,1215,5.589,1216,5.589,1283,5.589,1296,5.589,1305,7.83,1306,6.263,1307,5.145,1308,5.589,1309,6.263,1310,6.263]],["title/basic/pointer.html#为什么需要指针",[1311,4.949]],["body/basic/pointer.html#为什么需要指针",[0,1.737,1,0.396,3,1.202,6,1.15,7,1.081,8,1.674,13,2.829,21,1.562,23,2.484,24,3.507,26,3.268,27,1.349,31,0.883,32,0.732,33,0.452,34,0.33,35,0.336,36,0.38,37,0.42,38,0.463,39,0.493,40,0.542,41,0.569,42,0.615,43,0.655,44,1.15,54,1.647,56,1.372,62,1.081,63,1.155,65,0.851,69,2.911,74,2.209,79,0.851,92,1.288,97,2.752,100,2.866,104,3.347,111,0.698,112,0.71,113,0.783,114,0.946,115,0.982,116,0.964,117,1.176,118,1.176,119,1.126,120,1.176,121,1.229,122,1.288,161,0.783,202,1.354,222,2.992,223,0.873,346,1.737,379,2.997,431,4.236,508,1.891,629,1.891,641,3.711,659,1.354,660,1.429,661,1.429,662,1.615,670,2.666,673,4.083,677,1.737,678,1.737,679,1.737,680,1.737,681,1.737,682,1.737,683,1.615,684,1.737,685,1.737,686,1.737,687,1.891,688,1.891,689,2.103,697,3.152,787,2.752,795,4.912,917,1.737,937,2.203,1064,3.333,1065,2.997,1073,2.103,1076,1.176,1218,3.333,1219,2.442,1220,2.442,1221,2.442,1222,2.442,1223,2.442,1224,2.442,1225,2.442,1226,2.442,1227,2.442,1228,2.442,1229,2.442,1230,2.442,1231,2.442,1232,2.442,1233,2.442,1234,2.442,1235,2.442,1236,2.442,1237,2.442,1238,2.442,1239,2.442,1240,1.891,1241,2.442,1242,2.442,1243,2.442,1244,2.442,1245,2.442,1246,2.442,1247,2.442,1248,2.442,1249,7.272,1250,3.87,1251,3.87,1252,7.549,1253,3.87,1255,3.87,1256,2.442,1258,2.442,1259,2.442,1260,3.87,1261,2.442,1262,6.343,1263,2.442,1264,3.333,1265,2.442,1266,3.87,1267,2.442,1270,5.469,1271,2.442,1272,5.469,1273,2.442,1274,2.442,1275,2.442,1277,2.442,1278,4.807,1279,3.87,1281,1.672,1282,2.103,1312,2.736,1313,2.736,1314,2.736,1315,2.736,1316,2.736,1317,2.736,1318,2.736,1319,2.736,1320,2.736,1321,2.736,1322,2.736,1323,2.736,1324,2.736,1325,2.736,1326,2.736,1327,2.736,1328,2.736,1329,2.248,1330,2.736,1331,2.736,1332,2.736,1333,2.736,1334,2.736,1335,2.736,1336,2.736,1337,2.736,1338,2.736,1339,2.736,1340,2.736,1341,2.736,1342,2.736,1343,2.736,1344,2.736,1345,2.736,1346,2.736,1347,2.736,1348,2.736,1349,2.736,1350,2.736,1351,2.736,1352,2.736,1353,2.736,1354,2.736,1355,2.736,1356,2.736,1357,2.736,1358,7.108,1359,4.336,1360,2.736,1361,2.736,1362,2.736,1363,2.736,1364,2.736,1365,2.736,1366,2.736,1367,2.736,1368,2.736,1369,2.736,1370,2.736,1371,2.736]],["title/basic/pointer.html#哪些值是不可寻址的",[1372,4.949]],["body/basic/pointer.html#哪些值是不可寻址的",[1,0.299,161,2.175,1373,7.604,1374,7.604,1375,7.604,1376,7.604,1377,7.604,1378,7.604,1379,7.604,1380,7.604,1381,7.604,1382,7.604,1383,7.604,1384,7.604]],["title/basic/json.html",[1,0.195]],["body/basic/json.html",[1,0.404,2,0.858,3,2.127,4,1.197,13,1.84,23,1.052,31,0.674,32,0.702,33,0.689,34,0.799,35,0.814,36,0.672,37,0.743,38,0.819,39,0.873,40,0.96,41,1.007,42,1.089,43,1.16,54,2.24,56,2.485,63,1.039,65,1.507,69,1.587,95,4.574,107,2.397,109,2.725,110,2.227,111,1.236,112,1.256,113,1.385,114,1.675,115,1.738,116,1.706,117,2.081,118,2.081,119,1.994,120,2.081,121,2.176,122,2.281,129,2.858,138,2.59,628,2.285,642,4.339,659,1.561,660,1.646,661,1.646,910,5.274,1078,6.633,1091,1.8,1385,6.633,1386,2.423,1387,3.723,1388,3.074,1389,4.323,1390,2.814,1391,2.814,1392,2.423,1393,2.814,1394,5.263,1395,6.728,1396,4.844,1397,4.844,1398,7.231,1399,5.906,1400,4.323,1401,4.323,1402,4.323,1403,4.323,1404,4.323,1405,5.263,1406,5.263,1407,5.263,1408,4.323,1409,4.323,1410,4.323,1411,5.263,1412,4.323,1413,4.323,1414,4.323,1415,4.323,1416,4.323,1417,2.814,1418,5.263,1419,3.723,1420,4.533,1421,2.814,1422,2.814,1423,5.087,1424,5.489,1425,2.814,1426,2.814,1427,2.814,1428,2.814,1429,2.814,1430,2.814,1431,2.814,1432,2.814,1433,2.814,1434,3.153,1435,2.814,1436,2.814]],["title/basic/json.html#序列化",[1437,4.949]],["body/basic/json.html#序列化",[1,0.4,2,0.846,3,2.084,4,1.173,13,1.802,23,1.024,31,0.666,32,0.693,33,0.68,34,0.788,35,0.802,36,0.659,37,0.728,38,0.803,39,0.856,40,0.941,41,0.986,42,1.067,43,1.136,54,2.203,56,2.461,63,1.018,65,1.476,69,1.555,95,4.51,107,2.349,109,2.687,110,2.182,111,1.211,112,1.231,113,1.357,114,1.641,115,1.702,116,1.671,117,2.039,118,2.039,119,1.954,120,2.039,121,2.132,122,2.234,129,2.8,138,2.522,171,2.29,202,1.52,222,2.247,628,2.247,642,4.305,659,1.52,660,1.603,661,1.603,910,5.232,937,1.56,1078,6.589,1091,1.753,1122,1.52,1385,6.589,1386,2.36,1387,3.647,1388,3.012,1389,4.235,1390,2.74,1391,2.74,1392,2.36,1393,2.74,1394,5.176,1395,6.656,1398,7.169,1399,5.824,1400,4.235,1401,4.235,1402,4.235,1403,4.235,1404,4.235,1405,5.176,1406,5.176,1407,5.176,1408,4.235,1409,4.235,1410,4.235,1411,5.176,1412,4.235,1413,4.235,1414,4.235,1415,4.235,1416,4.235,1417,2.74,1418,5.176,1419,3.647,1420,4.458,1421,2.74,1422,2.74,1423,5.016,1424,5.423,1425,2.74,1426,2.74,1427,2.74,1428,2.74,1429,2.74,1430,2.74,1431,2.74,1432,2.74,1433,2.74,1435,2.74,1436,2.74,1438,3.07,1439,3.07,1440,3.07,1441,3.07,1442,2.36,1443,3.07,1444,2.74,1445,3.07,1446,3.07,1447,4.745,1448,4.745,1449,3.07,1450,3.07,1451,3.07,1452,3.07,1453,3.07,1454,3.07,1455,3.07,1456,3.07,1457,3.07,1458,3.07,1459,3.07,1460,3.07,1461,3.07,1462,3.07,1463,3.07,1464,3.07,1465,3.07,1466,3.07,1467,2.36,1468,3.07,1469,3.07,1470,3.07,1471,3.07,1472,3.07,1473,3.07,1474,3.07,1475,3.07,1476,3.07,1477,3.07,1478,3.07,1479,3.07,1480,3.07,1481,3.07,1482,3.07,1483,2.74,1484,3.07,1485,3.07,1486,3.07,1487,3.07,1488,3.07,1489,3.07]],["title/basic/constant.html",[1,0.195]],["body/basic/constant.html",[1,0.404,2,0.537,5,6.067,31,0.909,32,0.878,33,0.914,34,0.837,35,0.853,36,1.051,37,1.161,38,1.28,39,1.07,40,1.177,41,1.234,42,1.559,43,1.421,46,2.607,54,1.575,56,2.194,60,3.325,62,2.991,65,1.29,74,2.012,76,3.837,82,2.864,84,2.227,96,3.432,107,2.052,109,1.707,111,1.515,112,1.539,113,1.186,114,1.434,120,1.781,433,3.187,507,2.631,649,2.447,650,2.295,655,2.631,1490,4.103,1491,3.187,1492,3.187,1493,3.187,1494,3.7,1495,3.7,1496,3.7,1497,3.7,1498,2.447,1499,7.683,1500,6.188,1501,3.7,1502,2.631,1503,3.011,1504,2.447]],["title/basic/constant.html#常量",[1505,4.949]],["body/basic/constant.html#常量",[1,0.396,5,6.207,31,0.874,32,0.893,33,0.751,34,0.87,35,0.886,36,1,37,1.106,38,1.219,39,0.992,40,1.09,41,1.143,42,1.236,43,1.317,46,3.165,54,2.089,56,2.281,60,3.53,62,3.176,74,1.381,82,2.654,84,2.955,96,3.566,107,2.722,109,2.264,111,1.404,112,1.426,222,2.13,223,1.108,433,4.227,649,3.246,650,3.044,920,2.795,937,3.661,1490,4.98,1491,4.227,1492,4.227,1493,4.227,1494,4.908,1495,4.908,1496,4.908,1497,4.908,1498,3.246,1506,5.5,1507,5.5,1508,5.5,1509,3.995,1510,5.5,1511,4.908,1512,5.5,1513,4.908,1514,5.5,1515,5.5,1516,5.5,1517,5.5,1518,5.5,1519,5.5]],["title/basic/constant.html#iota",[1499,4.066]],["body/basic/constant.html#iota",[1,0.397,2,0.709,5,5.298,31,0.911,32,0.788,33,0.945,34,0.661,35,0.673,36,0.997,37,1.102,38,1.214,39,0.986,40,1.084,41,1.137,42,1.614,43,1.31,60,2.402,62,2.161,65,1.702,74,2.137,76,3.973,82,2.639,96,2.707,111,1.396,112,1.419,113,1.564,114,1.891,120,2.35,222,2.119,223,1.446,253,2.457,507,3.471,655,3.471,1499,7.977,1500,7.153,1501,4.881,1502,3.471,1503,3.973,1504,3.228,1520,5.47,1521,5.47,1522,5.47,1523,5.47,1524,5.47,1525,5.47,1526,5.47,1527,5.47,1528,5.47,1529,5.47,1530,5.47,1531,5.47]],["title/basic/package.html",[1,0.195]],["body/basic/package.html",[1,0.406,2,1.113,4,1.565,6,2.952,7,3.392,8,1.578,9,1.319,27,2.896,28,3.356,29,3.841,31,0.811,32,0.803,33,0.851,34,0.848,35,0.778,36,0.734,37,0.811,38,0.599,44,3.314,45,2.572,53,2.662,60,2.78,62,2.969,63,0.759,76,1.959,82,3.055,126,2.247,134,1.458,438,2.927,453,2.272,494,5.247,649,3.121,650,3.503,670,1.752,697,1.97,1212,2.447,1504,2.089,1532,3.16,1533,3.16,1534,3.16,1535,3.16,1536,3.16,1537,4.719,1538,4.719,1539,4.719,1540,3.16,1541,3.16,1542,3.16,1543,3.16,1544,3.16,1545,2.247,1546,2.447,1547,3.16,1548,3.16,1549,3.16,1550,3.16,1551,3.16,1552,2.089,1553,2.721,1554,2.721,1555,3.16,1556,3.16]],["title/basic/package.html#包",[1557,4.066]],["body/basic/package.html#包",[1,0.283,2,1.216,28,4.564,29,5.224,126,4.564,197,4.106,223,1.448,1504,4.244,1532,6.418,1533,6.418,1558,7.192,1559,7.192,1560,7.192,1561,7.192,1562,7.192,1563,7.192,1564,7.192,1565,7.192,1566,7.192,1567,7.192,1568,7.192,1569,7.192,1570,7.192,1571,7.192,1572,7.192,1573,7.192]],["title/basic/package.html#import",[7,1.956]],["body/basic/package.html#import",[1,0.371,6,3.057,7,3.603,31,0.686,32,0.714,33,0.757,34,0.878,35,0.894,36,1.009,37,1.115,38,1.23,44,3.834,45,5.281,253,3.266,1574,7.271,1575,7.271,1576,7.271,1577,7.271,1578,7.271]],["title/basic/package.html#main",[27,1.54]],["body/basic/package.html#main",[1,0.381,6,2.81,7,2.641,8,1.977,27,3.008,28,4.242,29,4.855,31,0.77,32,0.801,33,0.849,34,0.807,35,0.822,36,0.928,37,1.025,44,2.81,134,2.752,197,3.816,223,1.346,649,4.811,650,3.699,1212,4.62,1534,5.965,1579,6.684,1580,6.684,1581,6.684,1582,6.684,1583,6.684,1584,6.684,1585,6.684,1586,6.684,1587,6.684,1588,6.684]],["title/basic/package.html#点操作",[1589,4.949]],["body/basic/package.html#点操作",[1,0.372,7,3.569,31,0.751,32,0.782,33,0.829,34,0.776,44,2.701,53,3.345,222,2.489,223,1.294,494,3.927,650,4.403,670,3.18,1535,5.733,1536,5.733,1537,7.1,1538,7.1,1539,7.1,1540,5.733,1541,5.733,1542,5.733,1543,5.733,1544,5.733,1545,4.077,1590,6.424,1591,6.424,1592,6.424,1593,6.424,1594,5.278,1595,6.424,1596,6.424,1597,6.424,1598,6.424,1599,6.424,1600,6.424,1601,6.424,1602,6.424,1603,6.424,1604,6.424,1605,6.424,1606,6.424,1607,6.424,1608,6.424,1609,6.424,1610,6.424,1611,6.424]],["title/basic/package.html#包声明",[1612,4.949]],["body/basic/package.html#包声明",[1,0.272,2,1.079,27,2.152,53,2.908,223,1.393,453,3.575,1122,3.423,1546,4.78,1547,6.172,1548,6.172,1549,6.172,1550,6.172,1551,6.172,1552,4.082,1553,5.316,1554,5.316,1555,6.172,1556,6.172,1594,5.682,1613,6.916,1614,6.916,1615,6.916,1616,6.916,1617,4.752,1618,6.916,1619,6.916,1620,6.916,1621,6.916,1622,5.316,1623,6.916,1624,6.916,1625,6.916,1626,6.916,1627,6.916,1628,6.916,1629,6.916,1630,6.916]],["title/basic/package.html#包命名",[1631,4.949]],["body/basic/package.html#包命名",[1632,8.002]],["title/basic/package.html#初始化包",[1633,4.949]],["body/basic/package.html#初始化包",[1,0.382,2,0.731,4,2.011,6,3.08,8,1.268,9,2.101,27,2.897,31,0.813,32,0.72,33,0.763,34,0.681,35,0.693,44,2.372,60,3.573,62,3.403,63,1.21,82,3.926,202,3.626,438,4.054,494,5.77,697,2.729,746,6.018,953,3.58,1622,4.335,1634,5.64,1635,5.64,1636,5.909,1637,5.64,1638,5.034,1639,5.64,1640,5.64,1641,5.64,1642,5.64,1643,5.64,1644,5.64,1645,5.64,1646,5.64,1647,5.64,1648,5.64,1649,5.64,1650,5.64,1651,5.64,1652,5.64,1653,5.64,1654,5.64,1655,5.64,1656,5.64,1657,5.64,1658,5.64,1659,5.64,1660,5.64,1661,5.64,1662,5.64,1663,5.64,1664,5.64,1665,5.64,1666,5.64,1667,5.64,1668,4.634,1669,5.64,1670,5.034]],["title/basic/struct.html",[1,0.195]],["body/basic/struct.html",[1,0.403,2,0.84,4,1.463,8,0.578,13,3.256,23,2.859,27,0.8,31,0.849,32,0.842,33,0.833,34,0.942,35,1.067,36,0.96,37,0.994,38,1.522,39,1.168,40,1.285,41,1.347,42,1.457,43,1.417,54,2.248,56,1.873,63,1.785,65,1.285,69,1.94,79,1.841,104,1.212,110,1.898,111,1.054,112,1.071,113,1.181,114,1.428,115,1.481,116,2.661,117,1.106,118,1.106,119,1.059,123,1.978,128,1.344,129,3.052,438,2.285,643,1.568,670,1.274,697,1.538,710,3.174,799,1.701,906,1.869,910,2.621,1048,6.148,1049,4.981,1061,4.995,1065,1.778,1072,2.854,1076,2.972,1211,3.975,1493,3.174,1671,2.296,1672,4.615,1673,4.615,1674,3.685,1675,2.573,1676,2.296,1677,2.296,1678,1.978,1679,1.978,1680,1.978,1681,1.978,1682,2.296,1683,2.296,1684,6.743,1685,3.685,1686,3.685,1687,3.685,1688,4.615,1689,3.685,1690,3.685,1691,2.296,1692,3.685,1693,3.685,1694,2.296,1695,2.296,1696,2.296,1697,2.296,1698,2.296,1699,2.296,1700,2.296,1701,2.296,1702,2.296,1703,3.685,1704,1.778,1705,2.296,1706,2.296,1707,2.296,1708,2.296,1709,2.296,1710,2.296,1711,2.296,1712,2.296,1713,6.743,1714,5.282,1715,4.781,1716,2.296,1717,2.296,1718,3.685,1719,3.685,1720,2.296,1721,2.296,1722,2.296,1723,2.296,1724,2.296,1725,3.174,1726,2.573,1727,2.573,1728,2.573,1729,1.978,1730,2.296,1731,2.296,1732,2.296]],["title/basic/struct.html#结构体",[1733,4.949]],["body/basic/struct.html#结构体",[1,0.396,2,0.781,4,1.49,8,0.952,13,3.188,23,2.8,27,1.317,31,0.86,32,0.794,33,0.796,34,0.923,35,0.863,36,0.836,37,0.925,38,1.019,39,1.086,40,1.195,41,1.252,42,1.355,43,1.014,54,2.665,56,2.419,63,1.639,65,1.317,69,2.505,104,1.994,111,1.081,112,1.098,113,1.211,114,1.464,115,1.519,116,1.491,117,1.819,118,1.819,119,1.743,128,2.211,129,4.14,161,1.211,226,5.378,247,3.076,594,3.779,670,2.096,710,4.632,906,3.076,910,3.824,920,2.152,1617,2.418,1636,3.076,1671,3.779,1672,6.261,1673,6.261,1674,5.378,1676,3.779,1677,3.779,1678,3.255,1679,3.255,1680,3.255,1681,3.255,1682,3.779,1683,3.779,1684,7.877,1685,5.378,1686,5.378,1687,5.378,1688,6.261,1689,5.378,1690,5.378,1691,3.779,1692,5.378,1693,5.378,1694,3.779,1695,3.779,1696,3.779,1697,3.779,1698,3.779,1699,3.779,1700,3.779,1701,3.779,1702,3.779,1703,5.378,1704,2.927,1705,3.779,1734,4.234,1735,4.234,1736,4.234,1737,4.234,1738,4.234,1739,4.234,1740,4.234,1741,4.234,1742,4.234,1743,4.234,1744,4.234,1745,4.234,1746,4.234,1747,4.234,1748,4.234,1749,4.234,1750,4.234,1751,4.234,1752,4.234,1753,4.234,1754,4.234,1755,4.234,1756,4.234,1757,4.234]],["title/basic/struct.html#结构体字面值",[1758,4.949]],["body/basic/struct.html#结构体字面值",[1,0.381,13,2.834,23,2.489,31,0.822,32,0.855,33,0.777,63,1.6,79,2.321,697,2.78,1061,5.321,1076,3.206,1759,7.462]],["title/basic/struct.html#结构体比较",[1760,4.949]],["body/basic/struct.html#结构体比较",[1,0.397,13,2.565,23,2.252,31,0.834,32,0.868,33,0.703,34,0.815,35,0.83,36,0.937,63,1.448,79,2.1,110,3.771,438,4.539,697,2.516,799,4.463,1061,5.4,1065,4.667,1076,2.901,1617,3.855,1706,6.025,1707,6.025,1708,6.025,1709,6.025,1761,6.752,1762,6.752]],["title/basic/struct.html#结构体嵌入-匿名成员",[1763,3.576,1764,3.576]],["body/basic/struct.html#结构体嵌入-匿名成员",[1,0.398,2,0.734,4,1.4,13,3.097,23,2.719,31,0.694,32,0.722,33,0.765,34,0.887,35,1.113,36,0.928,37,1.026,38,1.607,39,1.205,40,1.325,41,1.389,42,1.503,43,1.601,63,1.748,65,1.209,79,1.762,111,0.992,112,1.008,113,1.112,114,1.344,115,1.394,116,2.964,123,2.987,161,1.112,223,1.479,643,2.152,1048,6.869,1049,6.002,1061,4.983,1072,3.916,1076,3.156,1211,5.138,1483,3.468,1493,4.354,1710,3.468,1711,3.468,1712,3.468,1713,7.698,1714,6.556,1715,5.635,1716,3.468,1717,3.468,1718,5.056,1719,5.056,1720,3.468,1721,3.468,1722,3.468,1723,3.468,1724,3.468,1725,4.354,1729,2.987,1730,3.468,1731,3.468,1732,3.468,1765,3.887,1766,3.887,1767,3.887,1768,3.887,1769,3.887,1770,3.887,1771,3.468,1772,3.887,1773,3.887,1774,3.887,1775,3.468,1776,3.887,1777,5.665,1778,3.887,1779,3.887,1780,3.887,1781,3.887,1782,3.887,1783,3.887,1784,3.887,1785,3.887,1786,3.887,1787,3.887,1788,3.887,1789,3.887,1790,3.887,1791,3.887,1792,3.887,1793,3.887,1794,3.887]],["title/basic/var.html",[1,0.195]],["body/basic/var.html",[1,0.405,2,0.488,4,2.06,8,1.245,21,2.152,24,3.409,26,2.547,27,1.723,31,0.849,32,0.84,33,0.84,34,0.874,35,0.89,36,1.005,37,1.008,38,0.937,39,0.999,40,0.747,41,0.783,54,1.431,56,1.753,59,1.915,60,1.655,63,1.729,68,2.392,74,1.391,76,3.634,79,2.972,82,2.673,84,2.025,105,1.915,107,1.865,109,2.28,110,1.733,628,1.46,631,2.605,642,1.968,643,1.431,673,2.547,697,1.404,1076,3.581,1490,3.828,1491,2.897,1492,2.897,1502,2.392,1503,2.737,1704,2.605,1795,3.363,1796,3.363,1797,6.883,1798,4.943,1799,3.363,1800,3.363,1801,3.363,1802,2.605,1803,6.883,1804,5.861,1805,2.897,1806,3.363,1807,4.257,1808,3.363,1809,3.363]],["title/basic/var.html#变量",[1308,4.417]],["body/basic/var.html#变量",[1,0.282,4,2.101,21,4.092,24,3.374,26,3.295,31,0.677,74,2.135,110,3.295,171,3.458,197,4.092,223,1.443,628,2.776,920,4.319,1509,6.174,1810,7.166,1811,5.887,1812,7.166,1813,7.166,1814,7.166,1815,7.166,1816,7.166,1817,7.166,1818,6.395,1819,7.166,1820,7.166,1821,7.166]],["title/basic/var.html#声明一组变量",[1822,4.949]],["body/basic/var.html#声明一组变量",[1,0.391,4,2.238,31,0.754,32,0.635,33,0.674,34,0.781,35,0.795,36,0.898,37,0.992,38,1.094,39,1.166,40,1.282,41,1.344,54,2.456,56,2.528,60,2.84,63,2.032,68,4.104,82,3.12,84,3.474,107,3.2,109,2.662,920,4.059,1491,4.97,1492,4.97,1502,4.104,1503,4.697,1509,6.296,1511,5.771,1513,5.771,1795,5.771,1796,5.771,1811,7.121,1823,6.466]],["title/basic/var.html#简短声明",[1824,4.949]],["body/basic/var.html#简短声明",[1,0.395,4,1.465,8,1.7,27,2.352,31,0.828,32,0.818,33,0.868,34,0.913,35,0.93,36,1.05,37,0.909,59,3.011,76,4.609,79,3.069,468,5.289,631,4.096,1076,2.546,1490,5.227,1509,4.305,1704,4.096,1797,8.088,1798,6.749,1799,5.289,1800,5.289,1811,4.869,1825,5.926,1826,5.926,1827,5.926,1828,5.926,1829,5.926,1830,5.926,1831,5.926,1832,5.926,1833,5.926,1834,5.926,1835,5.926,1836,5.926,1837,5.926]],["title/basic/var.html#赋值",[1838,4.949]],["body/basic/var.html#赋值",[1,0.399,24,3.846,31,0.816,32,0.849,33,0.767,34,0.687,35,0.699,36,0.79,37,0.873,38,0.962,39,1.026,79,2.852,82,2.745,105,2.891,109,2.342,223,1.146,642,2.971,643,2.161,673,3.387,697,2.12,920,2.891,1076,3.845,1617,3.248,1801,5.077,1802,3.932,1803,7.986,1804,6.573,1805,4.373,1806,5.077,1807,5.662,1808,5.077,1809,5.077,1839,5.689,1840,5.689,1841,5.689,1842,5.689,1843,5.689,1844,5.689,1845,5.689,1846,5.689,1847,5.689,1848,5.689,1849,5.689,1850,5.689,1851,5.689,1852,5.689,1853,4.674,1854,5.689,1855,5.689,1856,5.689,1857,5.689]],["title/basic/operator.html",[1,0.195]],["body/basic/operator.html",[1,0.407,2,0.611,4,1.606,31,0.702,32,0.639,33,0.775,35,0.799,69,1.546,73,3.835,74,1.632,79,2.313,145,5.82,799,4.296,1076,3.194,1213,6.152,1858,4.209,1859,3.625,1860,4.209,1861,6.635,1862,4.209,1863,4.209,1864,4.209,1865,4.209,1866,4.209]],["title/basic/operator.html#运算符",[1867,4.949]],["body/basic/operator.html#运算符",[]],["title/basic/operator.html#优先级",[1868,4.949]],["body/basic/operator.html#优先级",[1,0.397,222,3.914,799,4.686,1213,5.837,1869,7.089,1870,7.089,1871,7.089]],["title/basic/operator.html#算术运算符",[1872,4.949]],["body/basic/operator.html#算术运算符",[1,0.389,2,0.9,31,0.655,32,0.682,33,0.869,35,1.025,74,1.743,161,2.385,171,4.024,223,1.398,253,3.118,1010,6.194,1329,5.702,1858,6.194,1859,5.335,1860,6.194,1873,6.94,1874,6.94,1875,6.94,1876,6.94,1877,6.94,1878,8.34,1879,6.94,1880,6.94,1881,6.94,1882,6.94]],["title/basic/operator.html#关系运算符",[1883,4.949]],["body/basic/operator.html#关系运算符",[1,0.387,161,2.166,222,3.761,223,1.525,1884,7.575,1885,7.575]],["title/basic/operator.html#逻辑运算符",[1886,4.949]],["body/basic/operator.html#逻辑运算符",[1,0.352,222,3.463,799,5.165,1887,7.814,1888,7.814]],["title/basic/operator.html#位运算符",[1889,4.949]],["body/basic/operator.html#位运算符",[1,0.378,4,1.978,31,0.756,32,0.637,33,0.676,69,2.126,73,4.723,74,1.629,79,2.7,145,6.583,222,3.606,1076,3.729,1213,6.264,1467,4.986,1509,4.712,1861,7.746,1862,5.789,1863,5.789,1864,5.789,1865,5.789,1866,5.789,1890,6.487,1891,6.487,1892,6.487,1893,8.004,1894,6.487,1895,6.487,1896,6.487,1897,5.789,1898,6.487,1899,6.487,1900,6.487,1901,6.487]],["title/basic/operator.html#赋值运算符",[1902,4.949]],["body/basic/operator.html#赋值运算符",[1,0.378,1903,6.892,1904,7.723,1905,7.723,1906,7.723,1907,7.723,1908,7.723]],["title/basic/operator.html#其他运算符",[1909,4.949]],["body/basic/operator.html#其他运算符",[1,0.311,1213,5.465,1910,7.907,1911,7.907]],["title/basic/map.html",[24,2.33]],["body/basic/map.html",[1,0.406,2,0.929,4,1.604,12,1.697,24,4.66,25,2.569,26,1.697,31,0.82,32,0.787,33,0.797,34,0.659,35,0.671,36,0.512,37,0.566,38,0.624,39,0.666,40,0.732,41,1.134,42,0.83,46,1.621,58,3.055,63,1.17,73,2.179,74,0.927,104,2.569,105,3.886,107,1.827,124,2.343,497,5.723,628,3.363,898,3.705,1074,2.552,1281,2.256,1282,4.193,1678,2.837,1679,2.837,1680,2.837,1681,2.837,1802,3.77,1912,3.294,1913,4.987,1914,3.294,1915,5.79,1916,3.294,1917,3.294,1918,3.294,1919,2.681,1920,2.837,1921,3.294,1922,2.681,1923,5.79,1924,4.868,1925,3.294,1926,3.294,1927,3.294,1928,2.837,1929,4.868]],["title/basic/map.html#map",[24,2.33]],["body/basic/map.html#map",[1,0.392,2,0.7,4,1.592,12,1.676,24,4.647,25,2.544,26,1.676,31,0.779,32,0.783,33,0.792,34,0.653,35,0.664,36,0.506,37,0.559,38,0.616,39,0.657,40,0.722,41,1.123,42,0.819,46,1.601,58,3.032,63,1.159,73,2.151,74,0.915,104,2.544,105,3.865,107,1.804,124,2.313,161,1.545,171,1.759,202,2.674,223,1.661,303,2.081,304,2.409,458,4.949,497,5.7,628,3.351,752,3.252,763,3.252,937,1.852,953,2.313,1027,3.925,1074,2.519,1122,2.674,1281,2.227,1282,4.153,1297,2.994,1307,2.994,1617,2.081,1636,2.647,1678,2.801,1679,2.801,1680,2.801,1681,2.801,1802,3.735,1912,3.252,1913,4.949,1914,3.252,1915,5.747,1916,3.252,1917,3.252,1918,3.252,1919,2.647,1920,2.801,1921,3.252,1922,2.647,1923,5.747,1924,4.822,1925,3.252,1926,3.252,1927,3.252,1928,2.801,1929,4.822,1930,3.644,1931,3.644,1932,3.644,1933,3.644,1934,3.644,1935,3.644,1936,3.644,1937,3.644,1938,3.644,1939,3.644,1940,6.439,1941,3.644,1942,3.644,1943,3.644,1944,3.644,1945,3.644,1946,3.644,1947,3.644,1948,3.644,1949,3.644,1950,3.644,1951,3.644,1952,3.644,1953,3.644,1954,3.644,1955,3.644,1956,3.644,1957,3.644,1958,3.644,1959,3.644,1960,3.644,1961,3.644,1962,3.252,1963,3.644,1964,3.644,1965,3.644,1966,3.644,1967,3.644,1968,3.644,1969,3.252,1970,3.644,1971,3.644,1972,5.403,1973,3.644,1974,3.644,1975,3.644,1976,3.644,1977,3.644,1978,3.644,1979,3.644,1980,3.644,1981,3.644,1982,3.644,1983,3.644,1984,3.644,1985,3.644,1986,3.644,1987,3.644,1988,3.644,1989,3.644,1990,3.644,1991,3.644,1992,3.644,1993,3.644,1994,3.644,1995,3.644,1996,3.644,1997,3.644,1998,3.644,1999,3.644,2000,3.644,2001,3.644,2002,3.644,2003,3.644,2004,3.644,2005,3.644,2006,3.644,2007,3.644,2008,3.644,2009,3.644,2010,3.644,2011,3.644,2012,3.644,2013,3.644,2014,3.644,2015,3.644,2016,3.644,2017,3.644]],["title/basic/slice.html",[26,2.275]],["body/basic/slice.html",[1,0.405,2,0.828,4,0.889,26,3.646,31,0.841,32,0.875,33,0.856,34,1.019,35,1.01,36,0.982,37,1.086,38,1.197,39,0.965,40,1.061,41,1.112,42,1.203,43,1.282,46,3.483,54,3.012,58,3.009,63,1.518,65,1.665,69,1.754,74,1.992,111,1.366,112,1.388,113,1.531,114,1.851,115,1.92,116,1.267,134,2.631,430,1.991,500,2.766,628,1.394,669,4.892,1498,4.177,1859,4.114,2018,3.598,2019,3.211,2020,3.598,2021,3.211,2022,3.598,2023,3.211,2024,3.598,2025,3.211,2026,3.598,2027,3.211,2028,3.699,2029,3.538,2030,5.033,2031,4.777,2032,4.777,2033,3.211,2034,4.777,2035,4.777,2036,4.777,2037,4.777,2038,4.777,2039,3.211,2040,3.211,2041,3.211,2042,3.211,2043,4.777,2044,3.211,2045,3.211,2046,3.211,2047,3.211,2048,3.211]],["title/basic/slice.html#slice",[26,2.275]],["body/basic/slice.html#slice",[1,0.396,4,1.41,26,3.976,31,0.817,32,0.725,33,0.769,34,0.689,35,0.701,36,0.792,37,0.875,38,0.965,39,1.029,40,1.131,41,1.186,42,1.283,43,1.366,46,3.241,54,3.485,58,3.475,63,1.582,65,1.775,74,1.433,111,1.456,112,1.48,113,1.632,114,1.973,115,2.047,202,2.824,223,1.486,304,3.771,430,3.157,458,4.385,628,2.21,920,2.899,937,2.899,2019,5.091,2021,5.091,2023,5.091,2025,5.091,2027,5.091,2028,5.1,2049,5.705,2050,5.705,2051,5.705,2052,5.705,2053,5.705,2054,5.705,2055,5.705,2056,5.705,2057,5.705,2058,5.705,2059,5.705,2060,5.705,2061,5.705,2062,5.705,2063,5.705,2064,5.705,2065,5.705,2066,5.705,2067,5.705,2068,5.705,2069,5.705,2070,5.705]],["title/basic/slice.html#len-和-cap",[46,1.229,161,0.801,1498,1.652]],["body/basic/slice.html#len-和-cap",[46,3.473,1498,4.666,2071,7.907,2072,7.907]],["title/basic/slice.html#append-和-copy",[161,0.801,669,1.935,2029,1.85]],["body/basic/slice.html#append-和-copy",[669,5.465,2029,5.227,2073,7.907,2074,7.907]],["title/basic/slice.html#截取切片",[2075,4.949]],["body/basic/slice.html#截取切片",[1,0.402,31,0.828,32,0.862,33,0.885,34,1.059,35,1.045,36,1.049,37,1.16,38,1.278,39,0.877,40,0.965,41,1.011,42,1.094,43,1.165,46,2.916,58,2.292,63,1.424,65,1.514,69,2.176,74,2.039,111,1.242,112,1.262,113,1.392,114,1.683,115,1.746,116,1.714,134,3.111,500,3.741,1498,3.919,2030,5.566,2031,5.926,2032,5.926,2033,4.343,2034,5.926,2035,5.926,2036,5.926,2037,5.926,2038,5.926,2039,4.343,2040,4.343,2041,4.343,2042,4.343,2043,5.926,2044,4.343,2045,4.343,2046,4.343,2047,4.343,2076,4.867,2077,4.867,2078,4.867,2079,4.867,2080,4.867,2081,6.64,2082,4.867,2083,6.64,2084,4.867,2085,4.867,2086,4.867]],["title/basic/slice.html#怎样估算切片容量的增长",[2087,4.949]],["body/basic/slice.html#怎样估算切片容量的增长",[2,0.929,32,0.704,223,1.712,669,5.875,1859,6.533,2048,6.395,2088,5.887,2089,7.166,2090,7.166,2091,7.166,2092,7.166,2093,7.166,2094,7.166,2095,7.166,2096,7.166,2097,7.166,2098,7.166,2099,7.166,2100,7.166,2101,7.166,2102,7.166,2103,7.166,2104,7.166,2105,7.166,2106,7.166,2107,7.166,2108,7.166]],["title/basic/scope.html",[1,0.195]],["body/basic/scope.html",[1,0.404,2,0.929,7,2.832,46,3.147,63,1.537,109,2.95,2109,6.395]],["title/basic/scope.html#作用域",[2110,4.949]],["body/basic/scope.html#作用域",[2,0.932,7,2.842,46,3.159,63,1.542,109,2.961,161,2.057,171,3.47,223,1.448,2109,6.418,2111,7.192,2112,7.192,2113,7.192,2114,7.192,2115,7.192,2116,7.192,2117,7.192,2118,7.192,2119,7.192,2120,7.192,2121,7.192,2122,7.192,2123,7.192,2124,7.192,2125,7.192,2126,7.192,2127,7.192,2128,7.192,2129,7.192,2130,7.192]],["title/basic/reflect.html",[1,0.195]],["body/basic/reflect.html",[1,0.403,2,0.494,4,1.634,8,1.636,12,2.568,13,1.448,23,2.428,26,1.753,27,1.738,31,0.79,32,0.822,33,0.927,34,0.936,35,0.953,36,1.076,37,1.189,38,1.311,39,1.547,40,1.31,41,0.792,42,0.857,43,0.913,56,1.768,60,1.674,62,1.506,63,1.956,69,1.249,74,1.66,79,2.519,104,1.795,108,4.449,109,2.3,110,1.753,116,1.967,661,1.991,670,1.887,673,3.723,912,2.93,1076,2.4,1725,2.93,1729,2.93,1802,2.635,2131,5.287,2132,4.293,2133,3.402,2134,3.402,2135,4.985,2136,3.402,2137,3.402,2138,3.812,2139,4.985,2140,4.985,2141,4.985,2142,3.402,2143,3.402,2144,3.402,2145,3.402,2146,3.402,2147,5.98,2148,4.985,2149,2.93,2150,2.635,2151,3.402,2152,2.93,2153,3.402,2154,3.402,2155,3.402,2156,5.9,2157,3.402,2158,3.402,2159,5.9,2160,4.985,2161,4.057,2162,4.985,2163,6.594,2164,4.985,2165,4.293]],["title/basic/reflect.html#反射",[2166,4.949]],["body/basic/reflect.html#反射",[2167,7.97,2168,7.97]],["title/basic/reflect.html#reflect-TypeOf",[2131,3.595]],["body/basic/reflect.html#reflect-TypeOf",[1,0.396,4,1.992,8,1.626,12,2.543,23,2.851,27,2.25,31,0.683,32,0.711,33,0.839,34,0.873,35,0.889,36,1.004,37,1.11,38,1.223,39,1.304,40,1.434,60,2.429,62,2.185,63,1.951,79,2.759,108,4.42,109,2.977,110,2.543,116,2.547,161,1.582,661,2.888,920,2.81,1015,4.936,1076,3.107,2131,5.853,2132,5.559,2133,4.936,2134,4.936,2135,6.454,2136,4.936,2137,4.936,2139,6.454,2140,6.454,2141,6.454,2142,4.936,2143,4.936,2144,4.936,2145,4.936,2146,4.936,2169,5.531,2170,4.936,2171,4.544,2172,5.531,2173,5.531,2174,5.531,2175,5.531,2176,5.531]],["title/basic/reflect.html#reflect-ValueOf",[2147,4.066]],["body/basic/reflect.html#reflect-ValueOf",[1,0.401,2,0.608,8,1.456,12,2.158,13,1.783,26,2.158,31,0.792,32,0.824,33,0.926,34,0.896,35,0.912,36,1.03,37,1.138,38,1.254,39,1.564,40,0.931,41,0.976,42,1.055,43,1.124,56,2.05,63,1.86,69,1.538,74,1.863,79,1.46,104,2.21,108,3.959,161,1.343,222,1.818,253,2.109,670,2.324,673,3.988,912,3.608,920,2.385,1725,3.608,1729,3.608,1802,3.245,2147,6.093,2148,5.781,2149,3.608,2150,3.245,2151,4.189,2152,3.608,2153,4.189,2154,4.189,2155,4.189,2156,6.619,2157,4.189,2158,4.189,2159,6.619,2160,5.781,2161,4.705,2162,5.781,2163,6.962,2164,5.781,2165,4.979,2170,4.189,2171,3.857,2177,4.694,2178,4.694,2179,4.694,2180,4.694,2181,4.694,2182,4.694,2183,4.694,2184,4.694,2185,4.694,2186,4.694]],["title/basic/env_config.html",[1,0.141,2,0.463]],["body/basic/env_config.html",[0,3.8,1,0.403,2,1.204,3,1.418,28,5.51,31,0.633,32,0.588,33,0.624,34,0.723,35,0.607,36,0.685,37,0.757,38,0.834,39,0.89,40,0.978,41,1.025,42,1.109,43,0.773,48,1.641,65,1.005,111,0.824,112,0.838,113,0.924,114,1.117,115,1.159,116,1.137,117,1.388,118,1.388,119,1.33,120,1.388,121,1.451,122,1.521,142,2.05,494,3.016,659,1.599,660,1.686,906,2.346,1392,2.482,1545,2.05,1552,1.906,1554,2.482,2187,3.584,2188,2.882,2189,4.403,2190,2.882,2191,3.957,2192,5.931,2193,2.882,2194,6.706,2195,2.482,2196,2.346,2197,3.23,2198,4.403,2199,5.981,2200,4.403,2201,4.403,2202,2.882,2203,4.403,2204,2.882,2205,5.343,2206,2.882,2207,4.403,2208,2.882,2209,2.882,2210,2.882,2211,2.882,2212,2.882,2213,3.41,2214,2.882,2215,5.981,2216,2.482,2217,2.882,2218,4.403,2219,2.882,2220,5.343,2221,2.882,2222,2.882,2223,2.482,2224,2.882,2225,2.882,2226,4.403,2227,2.482,2228,2.882,2229,2.882,2230,2.882,2231,4.403,2232,2.882,2233,7.858,2234,2.882,2235,2.882,2236,2.882,2237,2.882,2238,2.882,2239,2.882,2240,2.882,2241,2.882,2242,4.403,2243,2.882,2244,2.882,2245,2.882,2246,2.882,2247,2.882,2248,2.882,2249,2.882,2250,2.882,2251,2.882,2252,2.882,2253,2.882,2254,2.882,2255,2.882,2256,2.882,2257,2.882,2258,2.882,2259,2.882,2260,5.343,2261,2.882,2262,2.882,2263,2.882,2264,2.882,2265,2.882,2266,2.882,2267,2.882,2268,2.882,2269,2.882,2270,2.882,2271,2.882,2272,2.882,2273,2.882,2274,2.882,2275,2.882,2276,2.882,2277,2.882,2278,2.882,2279,2.882,2280,2.882,2281,2.882,2282,2.882,2283,2.882,2284,2.882,2285,2.882,2286,2.882,2287,2.882,2288,2.882,2289,2.882,2290,2.882,2291,2.882,2292,2.882,2293,2.882,2294,2.882,2295,2.882,2296,2.882,2297,2.882,2298,2.882,2299,2.882]],["title/basic/env_config.html#Go-环境配置",[2,0.463,2300,3.576]],["body/basic/env_config.html#Go-环境配置",[]],["title/basic/env_config.html#安装",[2301,4.949]],["body/basic/env_config.html#安装",[2,1.104,161,2.057,223,1.448,2187,5.224,2188,6.418,2189,7.602,2190,6.418,2191,5.631,2192,6.998,2193,6.418,2302,7.192,2303,7.192,2304,7.192,2305,7.192,2306,7.192,2307,7.192,2308,7.192,2309,7.192,2310,7.192,2311,7.192,2312,7.192,2313,7.192,2314,7.192,2315,7.192,2316,7.192]],["title/basic/env_config.html#工作区",[2317,4.949]],["body/basic/env_config.html#工作区",[1,0.369,2,1.183,31,0.625,32,0.65,33,0.689,34,0.799,222,2.563,223,1.332,1545,4.199,2187,4.806,2192,7.194,2194,7.008,2195,5.086,2196,4.806,2318,6.617,2319,6.617,2320,6.617,2321,6.617,2322,6.617,2323,6.617,2324,5.905,2325,6.617,2326,6.617,2327,6.617,2328,6.617,2329,6.617,2330,6.617,2331,6.617,2332,6.617,2333,6.617,2334,6.617,2335,6.617,2336,6.617,2337,6.617,2338,6.617,2339,6.617,2340,6.617,2341,6.617]],["title/basic/env_config.html#Go-Module",[2,0.463,28,2.27]],["body/basic/env_config.html#Go-Module",[0,4.205,1,0.319,2,1.136,3,1.681,28,5.561,31,0.626,32,0.55,33,0.583,34,0.677,35,0.689,36,0.778,37,0.859,38,0.947,39,1.01,40,1.11,41,1.164,42,1.259,43,0.916,48,1.944,65,1.19,111,0.977,112,0.992,113,1.094,114,1.323,115,1.373,116,1.348,117,1.644,118,1.644,119,1.575,120,1.644,121,1.719,122,1.802,161,1.895,197,2.185,223,1.128,253,1.719,494,3.424,659,1.894,660,1.998,1392,2.941,1467,4.305,1552,2.258,1554,2.941,1617,2.185,1969,4.999,2191,2.53,2194,6.468,2198,4.999,2199,5.913,2200,4.999,2201,4.999,2202,3.415,2203,4.999,2204,3.415,2205,5.913,2206,3.415,2207,4.999,2208,3.415,2209,3.415,2210,3.415,2211,3.415,2212,3.415,2213,3.871,2214,3.415,2215,6.508,2216,2.941,2217,3.415,2218,4.999,2219,3.415,2220,5.913,2221,3.415,2222,3.415,2223,2.941,2224,3.415,2225,3.415,2226,4.999,2227,2.941,2228,3.415,2229,3.415,2230,3.415,2231,4.999,2232,3.415,2233,8.147,2234,3.415,2235,3.415,2236,3.415,2237,3.415,2238,3.415,2239,3.415,2240,3.415,2241,3.415,2242,4.999,2243,3.415,2244,3.415,2245,3.415,2246,3.415,2247,3.415,2248,3.415,2249,3.415,2250,3.415,2251,3.415,2252,3.415,2253,3.415,2254,3.415,2255,3.415,2256,3.415,2257,3.415,2258,3.415,2259,3.415,2260,5.913,2261,3.415,2262,3.415,2263,3.415,2264,3.415,2265,3.415,2266,3.415,2267,3.415,2268,3.415,2269,3.415,2270,3.415,2271,3.415,2272,3.415,2273,3.415,2274,3.415,2275,3.415,2276,3.415,2277,3.415,2278,3.415,2279,3.415,2280,3.415,2281,3.415,2282,3.415,2283,3.415,2284,3.415,2285,3.415,2286,3.415,2287,3.415,2288,3.415,2289,3.415,2290,3.415,2291,3.415,2292,3.415,2293,3.415,2294,3.415,2295,3.415,2342,3.827,2343,3.827,2344,3.827,2345,3.827,2346,3.827,2347,3.827,2348,3.415,2349,3.827,2350,3.827,2351,3.827,2352,3.827,2353,3.827,2354,3.827,2355,3.827,2356,3.827,2357,3.827,2358,5.601,2359,3.827,2360,3.827,2361,3.827,2362,3.827,2363,3.827,2364,3.827,2365,3.827,2366,3.827,2367,3.827,2368,3.827,2369,3.144,2370,3.827,2371,3.827,2372,3.827,2373,3.827,2374,3.827,2375,3.827,2376,3.827,2377,3.827,2378,3.827,2379,3.827,2380,3.827,2381,3.415,2382,3.827,2383,3.827,2384,3.827]],["title/basic/env_config.html#开发工具",[2385,4.949]],["body/basic/env_config.html#开发工具",[142,4.959,2296,6.973,2297,6.973,2298,6.973,2299,6.973,2386,7.814,2387,7.814]],["title/packages/container.html",[]],["body/packages/container.html",[1,0.402,2,0.709,8,1.913,31,0.516,32,0.537,33,0.57,34,0.661,35,0.673,36,0.759,37,0.839,38,0.925,39,0.986,59,3.648,125,6.162,126,6.021,655,5.952,1504,5.353,2388,4.881,2389,4.881,2390,6.407,2391,6.407,2392,6.407,2393,6.407,2394,7.594,2395,6.407,2396,4.881,2397,7.594,2398,4.881,2399,4.881,2400,4.881,2401,4.881,2402,4.881,2403,4.881]],["title/packages/container.html#container-包",[1557,2.938,2388,3.191]],["body/packages/container.html#container-包",[1,0.367,2,0.731,8,1.936,31,0.533,32,0.554,33,0.588,34,0.681,35,0.693,36,0.783,37,0.865,38,0.954,39,1.017,59,3.722,125,6.19,126,5.991,161,2.327,222,2.185,346,3.58,655,5.991,1504,5.398,2389,5.034,2390,6.537,2391,6.537,2392,6.537,2393,6.537,2394,7.685,2395,6.537,2396,5.034,2397,7.685,2398,5.034,2399,5.034,2400,5.034,2401,5.034,2402,5.034,2403,5.034,2404,5.64,2405,5.64,2406,5.64,2407,5.64,2408,5.64,2409,5.64,2410,5.321,2411,5.64,2412,5.64,2413,5.64,2414,5.034,2415,5.64,2416,5.64,2417,5.64,2418,5.64,2419,5.64]],["title/basic/function.html",[1,0.195]],["body/basic/function.html",[1,0.405,2,0.901,3,0.914,4,1.103,6,1.459,7,0.822,8,2.034,9,3.11,10,4.401,22,1.03,23,0.694,24,1.634,25,0.98,26,0.956,27,1.801,31,0.766,32,0.752,33,0.88,34,0.945,35,0.855,36,0.921,37,0.96,38,1.122,39,1.196,40,1.315,41,1.082,42,1.301,43,1.247,44,0.875,53,1.459,54,1.695,56,2.285,58,0.98,60,0.914,61,0.914,62,0.822,63,1.94,64,1.599,65,1.079,69,1.897,74,1.308,79,2.38,82,1.004,84,1.864,92,0.98,100,1.375,101,4.543,104,0.98,105,1.057,111,1.329,112,1.351,113,1.49,114,1.2,115,1.245,116,1.222,117,0.894,118,0.894,119,0.856,120,0.894,121,0.935,122,0.98,128,1.086,430,1.151,431,3.085,497,1.438,628,2.018,642,2.72,643,1.979,651,1.438,659,1.03,660,1.086,661,1.086,662,1.228,677,1.32,678,1.32,679,1.32,680,1.32,681,1.32,682,1.32,683,1.228,684,1.32,685,1.32,686,1.32,687,1.438,688,1.438,819,1.272,916,1.599,917,1.32,1076,2.487,1281,1.272,1807,1.599,2029,2.293,2150,3.085,2152,4.004,2420,1.599,2421,3.983,2422,3.983,2423,5.711,2424,1.709,2425,1.856,2426,1.856,2427,1.856,2428,1.856,2429,1.856,2430,3.43,2431,3.983,2432,1.856,2433,1.856,2434,1.856,2435,1.856,2436,1.856,2437,3.096,2438,3.096,2439,1.856,2440,1.856,2441,1.856,2442,1.856,2443,1.856,2444,1.856,2445,1.856,2446,1.856,2447,1.856,2448,1.856,2449,1.599,2450,1.511,2451,1.599,2452,1.599,2453,1.599,2454,3.096,2455,3.43,2456,1.856,2457,1.856,2458,1.856,2459,1.709,2460,1.856,2461,1.599,2462,1.856,2463,1.856,2464,1.599,2465,3.096,2466,1.375,2467,1.856,2468,3.096,2469,1.856,2470,3.096,2471,1.856,2472,1.856,2473,1.856,2474,1.856,2475,1.856,2476,1.856,2477,2.08,2478,5.167,2479,3.983,2480,1.856,2481,4.648,2482,1.856,2483,1.856]],["title/basic/function.html#函数",[953,3.141]],["body/basic/function.html#函数",[]],["title/basic/function.html#声明函数",[230,4.417]],["body/basic/function.html#声明函数",[1,0.397,4,1.398,8,2.008,9,2.734,31,0.693,32,0.721,33,0.764,34,0.683,35,0.695,36,0.785,37,0.868,38,0.957,39,1.02,40,1.121,41,1.175,42,1.272,43,1.354,56,2.323,63,2.026,65,1.76,79,2.283,111,1.444,112,1.467,113,1.618,114,1.956,115,2.029,116,1.992,430,3.13,642,2.954,643,2.149,1076,3.153,1116,5.048,2420,4.348,2421,7.27,2422,7.27,2423,7.082,2424,4.647,2425,5.048,2426,5.048,2427,5.048,2428,5.048,2484,5.656,2485,5.656,2486,5.656,2487,5.656,2488,5.656,2489,5.656,2490,5.656,2491,5.048,2492,5.656,2493,4.647,2494,5.656,2495,5.656,2496,5.048,2497,5.656,2498,5.656]],["title/basic/function.html#参数",[2499,4.417]],["body/basic/function.html#参数",[2,1.109,22,3.585,24,3.411,26,3.331,171,4.393,223,1.459,917,4.597,2029,4.788,2500,7.244,2501,7.244,2502,7.244,2503,7.244,2504,7.244,2505,7.244,2506,7.244,2507,7.244,2508,7.244,2509,7.244,2510,7.244,2511,7.244,2512,7.244,2513,7.244,2514,7.244,2515,7.244]],["title/basic/function.html#可变参数",[2516,4.949]],["body/basic/function.html#可变参数",[1,0.4,8,1.32,9,2.188,25,2.766,31,0.783,32,0.815,33,0.942,34,1.002,35,0.722,36,0.815,37,0.901,38,0.993,39,1.059,40,1.644,41,1.221,42,1.32,43,1.407,53,2.47,63,1.778,64,4.515,69,1.925,74,1.889,104,2.766,111,1.499,112,1.523,113,1.68,222,2.275,2152,6.721,2429,5.242,2430,6.375,2431,7.401,2432,5.242,2433,5.242,2517,5.874,2518,5.874,2519,5.874,2520,5.874,2521,5.874,2522,5.874,2523,4.515,2524,5.874,2525,5.874]],["title/basic/function.html#函数作为值",[2526,4.949]],["body/basic/function.html#函数作为值",[1,0.396,2,0.903,8,1.879,9,2.595,27,2.167,31,0.658,32,0.684,33,0.871,34,0.841,35,0.856,36,0.967,37,1.069,38,1.178,39,1.507,79,2.167,84,4.49,2434,6.215,2435,6.215,2436,6.215,2527,6.965,2528,6.965,2529,6.965]],["title/basic/function.html#函数作为参数",[2530,4.949]],["body/basic/function.html#函数作为参数",[1,0.391,8,1.799,9,2.982,23,2.164,31,0.756,32,0.637,33,0.676,34,0.784,35,0.798,36,0.901,63,2.06,74,1.629,79,2.49,100,4.288,101,6.762,628,3.1,643,2.464,651,4.484,1076,3.729,2437,7.143,2438,7.143,2439,5.789,2531,6.487,2532,6.487,2533,5.33,2534,6.487,2535,6.487,2536,6.487,2537,6.487]],["title/basic/function.html#闭包",[2538,4.417]],["body/basic/function.html#闭包",[1,0.392,2,0.912,8,2.095,9,3.133,31,0.794,32,0.692,33,0.733,34,0.85,35,0.865,36,0.977,37,1.08,38,1.19,39,1.269,63,1.803,74,1.768,2440,6.281,2538,6.281,2539,7.039,2540,7.039,2541,7.039]],["title/basic/function.html#错误",[263,4.066]],["body/basic/function.html#错误",[2,1.143,105,3.879,161,2.183,643,2.899,2414,6.812,2441,6.812,2442,6.812,2542,7.634,2543,7.634,2544,7.634,2545,7.634,2546,7.634]],["title/basic/function.html#关键字-defer",[10,1.77,2547,3.576]],["body/basic/function.html#关键字-defer",[1,0.4,3,1.646,4,1.363,6,1.576,8,1.992,9,3.1,10,4.781,24,1.764,31,0.521,32,0.542,33,0.575,34,0.872,35,0.678,36,0.52,37,0.575,38,0.933,39,0.676,40,1.093,41,0.779,42,1.24,43,0.897,53,1.576,54,2.486,56,2.285,58,1.764,61,1.646,63,1.726,65,1.166,69,1.228,79,2.394,82,1.808,92,1.764,101,2.722,111,0.956,112,0.972,113,1.072,114,1.296,115,1.344,116,1.32,117,1.61,118,1.61,119,1.543,120,1.61,121,1.683,122,1.764,128,1.957,223,0.755,253,2.478,497,2.59,628,2.137,642,3.418,643,1.423,659,1.855,660,1.957,661,1.957,662,2.211,677,2.378,678,2.378,679,2.378,680,2.378,681,2.378,682,2.378,683,2.211,684,2.378,685,2.378,686,2.378,687,2.59,688,2.59,819,2.29,916,2.88,947,2.59,1281,2.29,1807,2.88,2423,5.931,2443,3.344,2444,3.344,2445,3.344,2446,3.344,2447,3.344,2448,3.344,2449,2.88,2450,2.722,2451,2.88,2452,2.88,2453,2.88,2454,4.922,2455,5.031,2456,3.344,2457,3.344,2458,3.344,2460,3.344,2461,2.88,2462,3.344,2463,3.344,2464,2.88,2465,4.922,2466,2.477,2467,3.344,2468,4.922,2469,3.344,2470,4.922,2471,3.344,2472,3.344,2473,3.344,2474,3.344,2475,3.344,2476,3.344,2496,3.344,2548,3.747,2549,3.747,2550,3.747,2551,3.747,2552,3.344,2553,3.747,2554,3.747,2555,3.747,2556,3.747,2557,2.88,2558,3.747,2559,2.88,2560,3.747,2561,3.747,2562,3.747,2563,3.747,2564,3.747,2565,3.344,2566,3.747,2567,3.747,2568,3.747,2569,3.747,2570,3.747,2571,3.747,2572,3.747,2573,3.747,2574,3.747,2575,3.747,2576,3.747,2577,3.747,2578,3.747,2579,3.747,2580,3.747,2581,3.747,2582,3.747,2583,3.747,2584,3.747]],["title/basic/function.html#传入函数的那些参数值后来怎么样了",[2585,4.949]],["body/basic/function.html#传入函数的那些参数值后来怎么样了",[1,0.394,6,2.413,7,2.267,8,1.665,9,2.138,27,2.696,31,0.699,32,0.564,33,0.903,34,0.693,35,0.706,36,0.797,37,0.88,38,0.971,39,1.035,40,1.137,41,1.192,42,1.29,43,1.374,44,2.413,56,2.596,60,2.52,62,2.267,69,2.688,79,1.785,111,1.464,112,1.488,113,1.641,222,2.223,223,1.492,253,2.578,313,4.714,431,5.669,2150,5.669,2478,8.008,2479,7.32,2480,5.121,2481,7.735,2482,5.121,2483,5.121,2586,5.738,2587,5.738,2588,5.738,2589,5.738,2590,5.738,2591,5.738,2592,5.738,2593,5.738,2594,5.738,2595,5.738,2596,5.738,2597,5.738,2598,5.738,2599,5.738,2600,5.738]],["title/concurrent/channel.html",[22,2.45]],["body/concurrent/channel.html",[1,0.406,2,0.677,4,0.517,8,1.007,11,5.705,14,3.47,15,5.045,20,2.558,21,4.475,22,4.721,25,2.734,27,0.651,31,0.799,32,0.811,33,0.89,34,0.874,35,0.942,36,1.004,37,1.11,38,1.125,39,1.131,40,1.151,41,0.931,42,0.783,43,0.834,44,1.465,46,2.295,53,0.879,58,3.69,60,0.918,62,1.377,63,1.743,65,0.651,74,1.125,76,1.157,79,2.167,105,1.771,107,1.035,109,0.861,111,0.534,112,0.542,113,0.598,134,2.868,492,4.017,493,2.678,509,2.738,628,2.024,643,0.794,645,4.815,649,1.234,673,2.06,900,3.411,1076,0.898,1212,1.445,1388,1.327,1498,2.644,1502,3.317,2028,1.445,2149,1.607,2461,1.607,2601,2.091,2602,3.11,2603,3.11,2604,1.866,2605,7.702,2606,2.091,2607,2.091,2608,3.998,2609,1.607,2610,1.607,2611,1.607,2612,1.866,2613,1.866,2614,1.866,2615,1.866,2616,1.866,2617,1.866,2618,3.11,2619,1.866,2620,1.866,2621,1.866,2622,4.664,2623,1.866,2624,3.11]],["title/concurrent/channel.html#channel",[22,2.45]],["body/concurrent/channel.html#channel",[1,0.397,2,0.569,4,0.503,8,0.987,11,5.67,14,3.422,15,5.012,20,2.507,21,4.435,22,4.696,25,2.691,27,0.633,31,0.793,32,0.805,33,0.885,34,0.864,35,0.933,36,0.993,37,1.098,38,1.11,39,1.115,40,1.133,41,0.912,42,0.765,43,0.815,44,1.431,46,2.255,53,0.855,58,3.657,60,0.893,62,1.345,63,1.729,65,0.633,74,1.103,76,1.125,79,2.142,105,1.73,107,1.006,109,0.837,111,0.519,112,0.527,113,0.582,134,2.835,161,0.974,202,2.173,222,1.319,223,1.564,265,1.563,303,1.161,313,1.671,341,1.671,492,3.947,493,2.617,509,2.684,554,1.815,555,1.815,557,1.815,560,1.815,628,1.989,643,0.772,645,4.759,649,1.2,673,2.019,770,1.815,900,3.347,920,1.033,937,1.033,953,1.291,1076,0.874,1122,1.685,1212,1.405,1388,1.291,1498,2.591,1502,3.259,1775,1.815,2028,1.405,2149,1.563,2461,1.563,2523,1.563,2602,3.038,2603,3.038,2604,1.815,2605,7.655,2608,3.918,2609,1.563,2610,1.563,2611,1.563,2612,1.815,2613,1.815,2614,1.815,2615,1.815,2616,1.815,2617,1.815,2618,3.038,2619,1.815,2620,1.815,2621,1.815,2622,4.582,2623,1.815,2624,3.038,2625,2.033,2626,2.033,2627,2.033,2628,2.033,2629,2.033,2630,2.033,2631,2.033,2632,2.033,2633,2.033,2634,2.033,2635,2.033,2636,2.033,2637,2.033,2638,2.033,2639,2.033,2640,2.033,2641,2.033,2642,2.033,2643,2.033,2644,2.033,2645,2.033,2646,2.033,2647,2.033,2648,2.033,2649,2.033,2650,2.033,2651,2.033,2652,2.033,2653,2.033,2654,2.033,2655,2.033,2656,2.033,2657,2.033,2658,2.033,2659,2.033,2660,2.033,2661,2.033,2662,2.033,2663,2.033,2664,2.033,2665,2.033,2666,2.033,2667,2.033,2668,2.033,2669,2.033,2670,2.033,2671,2.033,2672,2.033,2673,2.033,2674,2.033,2675,2.033,2676,2.033,2677,2.033,2678,2.033,2679,3.404,2680,2.033,2681,2.033,2682,3.404,2683,3.404,2684,2.033,2685,2.033,2686,3.404,2687,2.033,2688,2.033,2689,2.033,2690,2.033,2691,2.033,2692,2.033,2693,2.033,2694,2.033,2695,2.033,2696,2.033,2697,2.033,2698,2.033,2699,2.033,2700,2.033,2701,2.033,2702,2.033,2703,2.033,2704,2.033,2705,2.033,2706,2.033,2707,2.033,2708,2.033,2709,2.033,2710,2.033,2711,2.033,2712,2.033,2713,2.033,2714,2.033,2715,2.033,2716,3.404,2717,2.033,2718,2.033,2719,2.033,2720,2.033,2721,2.033,2722,2.033,2723,2.033,2724,2.033,2725,2.033,2726,2.033,2727,2.033,2728,2.033,2729,2.033,2730,2.033,2731,2.033,2732,2.033,2733,2.033,2734,2.033,2735,2.033,2736,2.033,2737,2.033,2738,2.033,2739,2.033,2740,2.033,2741,2.033,2742,2.033,2743,2.033,2744,2.033,2745,2.033,2746,2.033,2747,2.033,2748,2.033,2749,2.033,2750,2.033,2751,2.033,2752,2.033,2753,1.815,2754,2.033,2755,2.033,2756,2.033,2757,2.033,2758,2.033,2759,2.033,2760,2.033,2761,2.033,2762,2.033,2763,2.033,2764,2.033,2765,2.033,2766,2.033,2767,2.033,2768,2.033,2769,2.033,2770,2.033,2771,2.033,2772,2.033,2773,2.033,2774,2.033,2775,2.033,2776,2.033,2777,2.033,2778,2.033,2779,2.033,2780,2.033,2781,2.033,2782,2.033,2783,2.033,2784,2.033,2785,2.033,2786,2.033,2787,2.033,2788,2.033,2789,2.033,2790,2.033,2791,2.033,2792,2.033,2793,2.033,2794,2.033,2795,2.033,2796,2.033,2797,2.033,2798,2.033,2799,2.033,2800,2.033,2801,2.033,2802,2.033,2803,2.033,2804,2.033]],["title/commands/build.html",[]],["body/commands/build.html",[1,0.401,2,1.272,3,1.056,6,3.368,7,1.545,8,0.541,9,0.896,12,1.106,23,0.802,27,1.216,31,0.633,32,0.659,33,0.652,34,0.687,35,0.7,36,0.79,37,0.873,38,0.962,39,0.891,40,1.128,41,1.027,42,0.541,43,0.576,44,2.392,48,2.891,54,0.914,56,0.761,59,1.222,61,1.056,62,1.952,63,0.516,65,0.748,79,1.216,92,1.132,96,1.19,97,3.135,110,1.106,111,0.614,112,0.624,113,0.688,114,0.832,115,0.863,116,0.847,117,1.033,118,1.033,119,0.99,120,1.033,121,1.08,122,1.132,126,4.834,142,1.526,143,3.797,151,3.797,374,1.747,376,3.414,434,3.005,439,2.307,453,2.882,509,2.39,631,2.702,634,1.526,641,3.503,643,1.485,655,1.526,659,1.19,660,1.256,661,1.256,662,1.419,668,1.976,670,1.19,673,1.106,677,1.526,678,1.526,679,1.526,680,1.526,681,1.526,682,1.526,683,1.419,684,1.526,685,1.526,686,1.526,697,0.896,810,1.662,827,3.005,883,1.976,884,4.257,889,1.662,917,1.526,1072,3.933,1091,1.373,1240,1.662,1264,1.849,1385,3.797,1386,1.849,1424,1.849,1504,1.419,1545,3.135,1552,4.62,1553,1.849,1715,3.414,1913,1.849,2030,1.526,2191,1.59,2194,2.84,2195,3.005,2213,1.662,2223,1.849,2227,1.849,2459,1.976,2466,1.59,2805,3.414,2806,3.02,2807,1.849,2808,5.078,2809,4.409,2810,3.797,2811,2.146,2812,4.373,2813,2.146,2814,1.849,2815,2.146,2816,3.005,2817,5.078,2818,3.489,2819,3.489,2820,2.146,2821,2.146,2822,2.146,2823,2.146,2824,2.146,2825,6.797,2826,3.489,2827,3.797,2828,2.146,2829,2.146,2830,4.409,2831,3.489,2832,2.146,2833,4.409,2834,2.146,2835,2.146,2836,2.146,2837,2.146,2838,2.146,2839,2.146,2840,2.146,2841,1.849,2842,2.146,2843,3.489,2844,3.489,2845,5.078,2846,2.146,2847,2.146,2848,2.146,2849,1.256,2850,3.588,2851,2.146,2852,4.94,2853,6.26,2854,2.405,2855,2.146,2856,2.146,2857,2.405,2858,2.146,2859,2.405,2860,2.146,2861,2.405,2862,2.146,2863,2.146,2864,3.489,2865,2.146,2866,2.146,2867,2.405,2868,2.405,2869,2.146,2870,2.146,2871,2.405,2872,2.405,2873,2.146,2874,2.146,2875,2.405,2876,2.405,2877,2.146,2878,2.405,2879,2.146,2880,3.91,2881,2.146,2882,2.146,2883,2.405,2884,2.146,2885,2.146,2886,2.146,2887,2.405,2888,2.146,2889,2.405,2890,2.405,2891,2.405,2892,2.146,2893,2.405,2894,2.146,2895,3.489,2896,2.146,2897,2.481,2898,2.146,2899,2.146,2900,1.47,2901,2.146,2902,1.849,2903,2.146,2904,2.146,2905,5.586,2906,2.146,2907,2.146,2908,5.586,2909,3.489,2910,3.489,2911,2.146,2912,2.146,2913,2.146,2914,2.146]],["title/commands/build.html#命令",[2915,4.417]],["body/commands/build.html#命令",[]],["title/commands/build.html#工具",[2916,4.949]],["body/commands/build.html#工具",[1,0.347,2,1.262,3,1.059,6,3.371,7,1.548,8,0.542,9,0.898,12,1.108,23,0.804,27,1.219,31,0.634,32,0.66,33,0.653,34,0.688,35,0.701,36,0.791,37,0.874,38,0.964,39,0.892,40,0.981,41,1.028,42,0.542,43,0.577,44,2.396,48,2.895,54,0.916,56,0.763,59,1.225,61,1.059,62,1.548,63,0.517,65,0.75,79,1.219,92,1.135,96,1.193,97,3.141,110,1.108,111,0.615,112,0.625,113,0.689,114,0.834,115,0.865,116,0.849,117,1.036,118,1.036,119,0.993,120,1.036,121,1.083,122,1.135,126,4.838,142,1.53,143,3.803,151,3.803,201,2.152,202,2.449,222,0.934,223,0.996,304,1.594,374,1.751,376,3.42,434,3.011,439,2.312,453,2.885,509,2.395,631,2.708,634,1.53,641,2.975,643,1.488,655,1.53,659,1.193,660,1.259,661,1.259,662,1.423,668,1.981,670,1.193,673,1.108,677,1.53,678,1.53,679,1.53,680,1.53,681,1.53,682,1.53,683,1.423,684,1.53,685,1.53,686,1.53,697,0.898,810,1.666,827,3.011,883,1.981,884,4.262,889,1.666,917,1.53,1072,3.938,1091,1.377,1264,1.853,1385,3.011,1386,1.853,1424,1.853,1442,1.853,1504,1.423,1545,3.141,1552,4.499,1553,1.853,1622,3.011,1715,3.42,1913,1.853,2030,1.53,2191,1.594,2194,2.845,2195,3.011,2213,1.666,2223,1.853,2227,1.853,2459,1.981,2466,1.594,2523,3.803,2559,1.853,2805,3.42,2806,3.025,2807,1.853,2808,5.085,2809,4.416,2810,3.803,2811,2.152,2812,4.38,2813,2.152,2814,1.853,2815,2.152,2816,3.011,2817,5.085,2818,3.496,2819,3.496,2820,2.152,2821,2.152,2822,2.152,2823,2.152,2824,2.152,2825,6.803,2826,3.496,2827,3.803,2828,2.152,2829,2.152,2830,4.416,2831,3.496,2832,2.152,2833,4.416,2834,2.152,2835,2.152,2836,2.152,2837,2.152,2838,2.152,2839,2.152,2840,2.152,2841,1.853,2842,2.152,2843,3.496,2844,3.496,2845,5.085,2846,2.152,2847,2.152,2848,2.152,2850,1.751,2851,2.152,2855,2.152,2856,2.152,2858,2.152,2860,2.152,2862,2.152,2863,2.152,2864,3.496,2865,2.152,2866,2.152,2869,2.152,2870,2.152,2873,2.152,2874,2.152,2877,2.152,2879,2.152,2881,2.152,2882,2.152,2884,2.152,2885,2.152,2886,2.152,2888,2.152,2892,2.152,2894,2.152,2895,3.496,2896,2.152,2897,2.486,2898,2.152,2899,2.152,2900,1.474,2901,2.152,2902,1.853,2903,2.152,2904,2.152,2905,4.416,2906,2.152,2907,2.152,2908,5.593,2909,3.496,2910,3.496,2911,2.152,2912,2.152,2913,2.152,2914,2.152,2915,3.496,2917,2.411,2918,2.411,2919,2.411,2920,2.411,2921,2.411,2922,2.411,2923,2.411,2924,2.411,2925,2.411,2926,2.411,2927,2.411,2928,2.411,2929,2.411,2930,2.411,2931,2.411,2932,2.411,2933,2.411,2934,2.411,2935,2.411,2936,2.411,2937,2.411,2938,2.411,2939,2.411,2940,2.411,2941,2.411,2942,2.411,2943,2.411,2944,2.411,2945,2.411,2946,2.411,2947,2.411,2948,2.411,2949,4.948,2950,6.268,2951,2.411,2952,2.411,2953,2.411,2954,2.411,2955,2.411,2956,2.411,2957,2.411,2958,2.411,2959,2.411,2960,2.411,2961,2.411,2962,2.411,2963,2.411,2964,2.411,2965,2.411,2966,2.411,2967,2.411,2968,2.411,2969,2.411,2970,2.411,2971,2.411,2972,2.411,2973,2.411,2974,3.918,2975,2.411,2976,4.948,2977,2.411,2978,2.411,2979,2.411,2980,2.411,2981,2.411,2982,2.411,2983,2.411,2984,2.411,2985,2.411,2986,2.411,2987,2.411,2988,2.411,2989,2.411,2990,2.411,2991,2.411,2992,2.411,2993,2.411,2994,2.411,2995,2.411,2996,2.411,2997,2.411,2998,2.411,2999,2.411,3000,2.411,3001,2.411,3002,2.411,3003,2.411,3004,2.411,3005,2.411,3006,2.411,3007,2.411,3008,2.411,3009,2.411,3010,2.411,3011,2.411,3012,2.411,3013,2.411,3014,2.411,3015,2.411,3016,2.411,3017,2.411,3018,2.411,3019,2.411,3020,2.411,3021,2.411,3022,2.411,3023,2.411,3024,2.411,3025,2.411,3026,2.411,3027,2.411,3028,2.411,3029,2.411,3030,2.411,3031,2.411,3032,2.411,3033,2.411,3034,2.411,3035,2.411,3036,2.411,3037,2.411,3038,2.411,3039,2.411,3040,2.411,3041,2.411,3042,2.411,3043,2.411,3044,2.411,3045,2.411,3046,2.411]],["title/basic/test.html",[1,0.195]],["body/basic/test.html",[1,0.406,2,1.259,3,0.895,4,0.504,8,1.156,13,0.774,25,0.959,27,1.061,31,0.717,32,0.704,33,0.685,34,0.531,35,0.541,36,0.61,37,0.675,38,0.87,39,0.367,40,0.404,41,0.423,42,0.458,43,0.488,48,2.613,53,0.857,56,0.645,60,0.895,62,1.348,63,0.731,65,0.634,74,1.291,105,1.733,107,1.009,108,3.143,109,3.044,110,2.022,111,0.52,112,0.528,113,0.583,114,0.705,115,0.731,116,0.718,117,0.875,118,0.875,119,0.839,120,0.875,142,1.293,376,2.357,453,4.002,509,1.245,673,2.022,697,2.132,786,1.245,805,2.802,880,1.48,900,2.073,1091,2.511,1387,1.566,1388,1.293,1420,1.566,1552,1.203,2161,3.735,2163,1.566,2165,2.621,2187,1.48,2196,2.477,2451,1.566,2455,1.566,2805,4.95,2806,1.245,2807,1.566,2810,1.566,2816,1.566,2849,4.14,2900,1.245,3047,3.043,3048,2.802,3049,1.818,3050,4.701,3051,4.757,3052,1.818,3053,1.818,3054,1.818,3055,1.818,3056,1.818,3057,1.818,3058,1.818,3059,1.818,3060,1.818,3061,1.566,3062,1.818,3063,1.818,3064,1.818,3065,1.818,3066,1.818,3067,1.818,3068,1.818,3069,1.818,3070,1.818,3071,1.818,3072,1.818,3073,1.818,3074,1.818,3075,1.818,3076,1.818,3077,1.818,3078,1.818,3079,1.818,3080,3.924,3081,1.818,3082,1.818,3083,1.818,3084,1.818,3085,1.818,3086,1.818,3087,1.818,3088,1.818,3089,4.701,3090,1.818,3091,3.043,3092,1.566,3093,1.818,3094,1.818,3095,1.818,3096,1.818,3097,1.818,3098,1.818,3099,1.818,3100,1.818,3101,2.802,3102,4.224,3103,1.818,3104,1.818,3105,1.818,3106,1.818,3107,4.224,3108,1.818,3109,1.818,3110,1.818,3111,2.038,3112,3.043,3113,1.818,3114,1.818,3115,1.818,3116,1.818,3117,3.924,3118,1.818,3119,1.818,3120,1.818,3121,1.818,3122,3.924,3123,1.818,3124,1.818,3125,1.818,3126,1.818,3127,1.48,3128,2.802,3129,1.818,3130,3.043,3131,1.818,3132,1.818,3133,1.818,3134,4.588,3135,1.818,3136,1.818,3137,2.038,3138,1.818,3139,1.818,3140,1.818,3141,2.038,3142,3.043,3143,1.818,3144,3.043,3145,1.818,3146,1.818,3147,1.818,3148,1.818,3149,4.588,3150,5.523,3151,1.818]],["title/basic/test.html#测试",[3152,4.949]],["body/basic/test.html#测试",[2,1.266,27,1.924,48,3.142,62,3.07,223,1.711,253,2.778,453,4.168,509,3.78,673,3.572,1420,4.753,1552,3.65,1617,4.436,2187,4.492,2196,4.492,2499,5.519,3047,6.933,3048,5.081,3049,5.519,3050,5.081,3051,6.529,3052,5.519,3053,5.519,3153,6.185,3154,6.185,3155,6.185,3156,6.185,3157,6.185,3158,6.185,3159,6.185,3160,6.185,3161,6.185,3162,6.185,3163,6.185,3164,6.185,3165,6.185,3166,6.185,3167,6.185,3168,6.185,3169,6.185,3170,6.185,3171,6.185,3172,6.185,3173,6.185,3174,6.185,3175,6.185,3176,6.185,3177,6.185,3178,6.185,3179,6.185]],["title/basic/test.html#测试函数",[3180,4.949]],["body/basic/test.html#测试函数",[1,0.403,2,0.61,3,2.067,4,1.163,8,1.459,13,1.787,25,2.216,31,0.613,32,0.638,33,0.676,34,0.568,35,0.579,36,0.653,37,0.722,38,0.796,39,0.848,40,0.933,41,0.978,42,1.058,43,1.127,53,1.979,56,1.489,65,1.464,107,2.329,108,4.539,109,3.833,110,3.414,111,1.201,112,1.22,113,1.346,114,1.627,115,1.688,116,1.657,117,2.022,118,2.022,119,1.937,120,2.022,161,1.346,453,3.729,673,2.163,880,3.418,937,2.391,1617,2.687,2161,5.394,2163,3.617,2165,4.987,3054,4.199,3055,4.199,3056,4.199,3057,4.199,3058,4.199,3059,4.199,3060,4.199,3061,3.617,3062,4.199,3063,4.199,3064,4.199,3065,4.199,3066,4.199,3067,4.199,3068,4.199,3069,4.199,3070,4.199,3071,4.199,3072,4.199,3073,4.199,3074,4.199,3075,4.199,3076,4.199,3077,4.199,3078,4.199,3079,4.199,3080,6.627,3081,4.199,3082,4.199,3083,4.199,3084,4.199,3085,4.199,3086,4.199,3181,4.199,3182,4.199,3183,4.706,3184,4.706,3185,4.706,3186,4.706,3187,4.706,3188,4.706,3189,4.706,3190,4.706]],["title/basic/test.html#覆盖率",[3191,4.949]],["body/basic/test.html#覆盖率",[1,0.343,2,1.232,31,0.619,32,0.644,33,0.682,34,0.791,35,0.806,36,0.909,37,1.005,142,4.158,223,1.319,453,3.746,937,3.329,2559,5.036,2805,6.285,2806,4.004,2807,5.036,3050,7.162,3087,5.847,3088,5.847,3089,5.382,3090,5.847,3091,7.186,3092,5.036,3093,5.847,3094,5.847,3095,5.847,3096,5.847,3097,5.847,3098,5.847,3099,5.847,3100,5.847,3192,6.552,3193,8.052,3194,6.552,3195,6.552,3196,6.552,3197,6.552,3198,6.552,3199,6.552]],["title/basic/test.html#基准测试",[3200,4.949]],["body/basic/test.html#基准测试",[1,0.377,2,1.202,8,1.44,31,0.75,32,0.78,33,0.827,60,2.813,303,3.656,453,3.876,900,2.582,937,3.254,2161,4.651,2805,5.488,2849,4.146,3051,4.922,3101,5.261,3102,7.09,3103,5.715,3104,5.715,3105,5.715,3106,5.715,3107,6.523,3181,5.715,3182,5.715,3201,6.404,3202,4.651,3203,6.404,3204,6.404,3205,6.404,3206,6.404,3207,6.404,3208,6.404,3209,6.404,3210,6.404,3211,6.404,3212,6.404,3213,6.404,3214,6.404,3215,6.404,3216,6.404,3217,6.404,3218,6.404]],["title/basic/test.html#示例函数",[3219,4.949]],["body/basic/test.html#示例函数",[1,0.372,2,1.116,8,1.646,31,0.692,32,0.72,33,0.763,453,3.147,2171,6.017,3101,6.017,3108,6.536,3109,6.536,3110,6.536,3220,7.324,3221,7.324,3222,7.324,3223,7.324,3224,7.324,3225,7.324,3226,7.324,3227,7.324]],["title/basic/test.html#go-test-命令执行的主要测试流程",[2,0.363,453,1.203,3228,2.799]],["body/basic/test.html#go-test-命令执行的主要测试流程",[2,1.128,223,1.753,453,3.96,947,5.157,3229,7.462,3230,7.462,3231,7.462,3232,7.462,3233,7.462,3234,7.462,3235,7.462,3236,7.462,3237,7.462,3238,7.462,3239,7.462]],["title/basic/test.html#功能测试的测试结果",[3240,4.949]],["body/basic/test.html#功能测试的测试结果",[1,0.277,2,1.266,31,0.665,32,0.692,105,3.577,376,5.813,453,3.613,2559,5.41,2810,5.41,2816,5.41,3112,7.505,3113,6.281,3114,6.281,3115,6.281,3116,6.281,3241,7.039,3242,7.039,3243,7.039,3244,7.039,3245,7.039,3246,7.039,3247,7.039,3248,7.039,3249,7.039,3250,7.039,3251,7.039]],["title/basic/test.html#性能测试的测试结果",[3252,4.949]],["body/basic/test.html#性能测试的测试结果",[1,0.327,2,1.134,31,0.556,32,0.579,33,0.614,34,0.712,35,0.724,36,0.818,37,0.904,38,1.274,48,4.22,105,2.993,223,1.186,453,3.568,697,3.261,900,3.038,953,3.739,2196,4.279,2849,4.571,3048,4.84,3051,5.79,3117,7.412,3118,5.257,3119,5.257,3120,5.257,3121,5.257,3122,7.412,3123,5.257,3124,5.257,3125,5.257,3126,5.257,3127,4.279,3253,5.891,3254,5.891,3255,5.891,3256,5.891,3257,5.891,3258,5.891,3259,5.891,3260,5.891,3261,5.891,3262,5.891,3263,5.891,3264,5.891,3265,5.891,3266,5.891,3267,5.891,3268,5.891,3269,5.891,3270,5.891,3271,5.891,3272,5.891,3273,5.891,3274,5.891,3275,5.891,3276,5.891,3277,5.891,3278,5.891,3279,5.891,3280,5.891,3281,5.891,3282,5.891,3283,5.891,3284,5.891,3285,5.891,3286,5.891,3287,5.891,3288,5.891]],["title/basic/test.html#parallel-标记",[3128,2.938,3289,3.576]],["body/basic/test.html#parallel-标记",[2,0.953,453,3.158,697,2.739,1442,5.65,3128,6.039,3129,6.56,3130,7.701,3290,7.351,3291,7.351,3292,7.351,3293,7.351,3294,7.351,3295,7.351,3296,7.351,3297,7.351,3298,7.351,3299,7.351,3300,7.351,3301,7.351,3302,7.351,3303,7.351,3304,7.351]],["title/basic/test.html#性能测试函数中的计时器",[3305,4.949]],["body/basic/test.html#性能测试函数中的计时器",[161,2.209,171,3.727,3102,6.344,3131,6.892,3132,6.892,3133,6.892,3306,7.723,3307,7.723,3308,7.723,3309,7.723]],["title/basic/test.html#性能分析",[3310,4.949]],["body/basic/test.html#性能分析",[2,1.23,27,1.474,31,0.616,63,1.398,74,1.638,161,1.865,223,1.501,248,4.229,253,2.129,570,6.124,746,3.893,786,2.897,900,1.911,1042,3.442,1091,2.706,1122,2.346,1387,3.643,1388,3.008,1636,4.736,1668,6.596,2451,3.643,2455,3.643,2491,4.229,2523,3.643,2533,3.893,2805,5.152,2849,4.192,2900,2.897,3089,3.893,3107,5.357,3134,7.165,3135,4.229,3136,4.229,3138,4.229,3139,4.229,3140,4.229,3142,5.819,3144,5.819,3145,4.229,3146,4.229,3147,4.229,3148,4.229,3149,7.165,3150,7.764,3151,4.229,3311,4.739,3312,4.739,3313,4.739,3314,4.739,3315,4.739,3316,4.739,3317,4.739,3318,4.739,3319,4.739,3320,4.739,3321,4.739,3322,4.739,3323,4.739,3324,4.739,3325,4.739,3326,4.739,3327,4.739,3328,4.739,3329,4.739,3330,4.739,3331,4.739,3332,4.739,3333,4.739,3334,4.739,3335,4.739,3336,4.739,3337,4.739,3338,4.739,3339,4.739,3340,4.739,3341,4.739,3342,4.739,3343,4.739,3344,4.739,3345,4.739,3346,4.739,3347,4.739,3348,4.739,3349,4.739,3350,4.739,3351,4.739,3352,4.739,3353,4.739,3354,4.739,3355,4.739,3356,4.739,3357,4.739,3358,4.739,3359,4.739,3360,4.739,3361,4.739,3362,4.739,3363,4.739,3364,4.739,3365,4.739,3366,4.739,3367,4.739,3368,4.739,3369,4.739,3370,4.739,3371,4.739,3372,4.229,3373,4.739,3374,4.739,3375,4.739,3376,4.739,3377,4.739,3378,4.739,3379,4.739,3380,4.739,3381,4.739,3382,4.739,3383,4.739,3384,4.739,3385,4.739,3386,4.739,3387,4.739,3388,4.739,3389,4.739,3390,4.739,3391,4.739,3392,4.739,3393,4.739,3394,4.739,3395,4.739]],["title/packages/io.html",[]],["body/packages/io.html",[1,0.406,31,0.328,34,0.63,61,2.292,63,1.599,146,3.19,439,3.08,628,1.347,639,4.417,641,1.816,642,2.725,643,1.982,645,2.404,647,4.011,648,2.674,891,5.732,896,4.254,1545,3.312,1715,2.404,2897,2.208,2900,5.319,3143,3.104,3396,2.674,3397,6.827,3398,4.011,3399,5.59,3400,5.59,3401,4.814,3402,5.59,3403,5.59,3404,5.219,3405,2.674,3406,3.478,3407,3.478,3408,3.478,3409,3.104,3410,3.104,3411,3.104,3412,4.657,3413,3.104,3414,3.104,3415,4.011,3416,3.104,3417,3.104,3418,4.657,3419,3.104,3420,3.104,3421,3.104,3422,3.104,3423,3.478,3424,4.657,3425,3.104,3426,6.655,3427,4.657,3428,3.104,3429,5.219,3430,3.104,3431,6.655,3432,4.657,3433,3.104,3434,3.104,3435,3.104,3436,3.104,3437,4.657,3438,4.657,3439,3.104,3440,6.211,3441,3.104,3442,6.655,3443,2.674,3444,2.674,3445,2.674,3446,6.211,3447,6.655,3448,5.59,3449,4.657,3450,3.104]],["title/packages/io.html#io包中的接口和工具",[3451,4.949]],["body/packages/io.html#io包中的接口和工具",[161,2.331,171,3.666,223,1.346,303,3.817,347,4.386,645,3.397,758,4.386,896,3.004,937,3.397,1444,5.965,1545,4.242,2900,5.597,3396,3.778,3397,6.982,3398,3.778,3399,4.386,3400,4.386,3401,5.138,3402,4.386,3403,4.386,3405,3.778,3409,4.386,3410,4.386,3411,4.386,3412,5.965,3413,4.386,3414,4.386,3415,5.138,3416,4.386,3417,4.386,3418,5.965,3419,4.386,3420,4.386,3421,4.386,3422,4.386,3424,5.965,3425,4.386,3426,7.609,3427,5.965,3428,4.386,3452,4.915,3453,6.685,3454,4.915,3455,6.685,3456,6.685,3457,4.915,3458,6.685,3459,6.685,3460,6.685,3461,4.915,3462,6.685,3463,4.915,3464,4.915,3465,4.915,3466,4.915,3467,4.915,3468,4.915,3469,4.915,3470,4.915,3471,4.915,3472,4.915,3473,4.915,3474,4.915,3475,5.965,3476,4.915,3477,4.915,3478,4.915,3479,4.915,3480,4.915,3481,4.915,3482,4.915,3483,4.915,3484,4.915,3485,4.915,3486,4.915,3487,4.915,3488,4.915,3489,4.915,3490,4.915,3491,4.915,3492,4.915,3493,4.915,3494,4.915,3495,4.915,3496,4.915,3497,4.915,3498,4.915,3499,4.386,3500,4.915,3501,4.915,3502,4.915,3503,4.915,3504,4.915,3505,4.915,3506,4.915,3507,4.915,3508,4.915,3509,4.915,3510,4.915,3511,4.915,3512,4.915,3513,4.915,3514,4.915,3515,4.915,3516,4.915,3517,4.915,3518,4.915,3519,4.915,3520,4.915,3521,4.915]],["title/packages/io.html#bufio包中的数据类型",[3522,4.949]],["body/packages/io.html#bufio包中的数据类型",[31,0.455,34,0.582,61,2.897,63,1.816,146,4.032,161,2.15,171,3.183,223,1.761,253,2.165,439,2.844,570,5.419,628,1.867,639,4.186,641,2.517,642,3.444,643,2.505,647,3.704,648,3.704,761,6.178,896,4.596,937,4.798,1715,3.331,2410,4.791,2897,3.059,2900,2.946,3397,4.791,3430,4.301,3431,7.216,3432,5.886,3433,4.301,3434,4.301,3435,4.301,3436,4.301,3437,5.886,3438,5.886,3439,4.301,3440,6.711,3441,4.301,3442,7.557,3443,3.704,3444,3.704,3445,3.704,3446,7.216,3447,7.557,3448,6.711,3449,5.886,3450,4.301,3523,4.82,3524,4.82,3525,4.82,3526,4.82,3527,4.82,3528,4.82,3529,4.82,3530,4.82,3531,4.82,3532,4.82,3533,4.82,3534,4.82,3535,6.596,3536,4.82,3537,4.82,3538,4.82,3539,4.82,3540,4.82,3541,4.82,3542,4.82,3543,4.82,3544,4.82,3545,4.301,3546,4.82,3547,4.82,3548,4.82,3549,4.82,3550,4.82,3551,4.82,3552,4.82,3553,4.82,3554,4.82,3555,4.82,3556,4.82,3557,4.82,3558,4.82,3559,4.82,3560,4.82,3561,4.82,3562,4.82,3563,4.82,3564,4.82,3565,4.82,3566,4.82,3567,4.82,3568,4.82,3569,4.82,3570,4.82,3571,4.82,3572,4.82,3573,4.82,3574,4.82,3575,4.82,3576,4.82,3577,4.82,3578,4.82,3579,4.82,3580,4.82,3581,4.82,3582,4.82,3583,4.82]],["title/theme/theme-usage.html",[1,0.195]],["body/theme/theme-usage.html",[1,0.401,23,2.893,27,1.788,31,0.835,32,0.773,33,0.772,34,0.896,35,0.912,36,1.029,37,1.037,38,0.972,39,1.036,40,1.139,41,1.194,42,1.292,43,0.949,54,2.183,111,1.012,112,1.028,124,2.516,373,5.196,652,6.05,697,1.477,884,4.706,889,2.74,910,2.516,1546,2.74,1704,2.74,2191,5.203,2213,2.74,2216,4.417,2466,4.469,2806,4.532,2814,3.047,2827,3.047,3584,6.744,3585,6.467,3586,3.538,3587,3.538,3588,3.538,3589,3.538,3590,3.538,3591,6.033,3592,5.129,3593,6.033,3594,4.721,3595,5.129,3596,3.538,3597,3.538,3598,5.129,3599,3.538,3600,3.538,3601,3.538,3602,3.538,3603,3.538,3604,3.538,3605,5.129,3606,5.129,3607,3.538,3608,3.538,3609,5.129,3610,3.538,3611,3.538,3612,3.538,3613,3.538,3614,3.538,3615,3.538,3616,5.129,3617,3.538,3618,6.033,3619,6.033,3620,3.538,3621,5.554,3622,3.538,3623,6.033,3624,7.325,3625,3.538,3626,6.617,3627,5.129,3628,6.617,3629,5.129,3630,3.538,3631,5.129,3632,3.538,3633,3.538,3634,4.721,3635,3.538,3636,3.538]],["title/theme/theme-usage.html#使用文档主题",[3637,4.949]],["body/theme/theme-usage.html#使用文档主题",[884,4.998,3584,6.47,3585,6.47,3638,7.876,3639,7.876]],["title/theme/theme-usage.html#Quick-Start",[2466,2.364,3586,3.191]],["body/theme/theme-usage.html#Quick-Start",[1,0.386,23,1.81,31,0.832,32,0.702,33,0.744,34,0.862,35,0.878,36,0.991,37,0.832,38,0.918,39,0.978,40,1.075,41,1.127,42,1.22,54,2.712,197,3.098,223,1.092,373,4.17,697,2.021,884,5.066,937,2.756,1546,3.749,1897,4.841,2213,3.749,2216,5.489,2466,4.72,2806,3.316,2827,4.17,3584,7.241,3585,6.969,3587,4.841,3588,4.841,3589,4.841,3590,4.841,3591,7.124,3592,6.373,3593,7.124,3594,4.457,3595,6.373,3596,4.841,3597,4.841,3598,6.373,3599,4.841,3600,4.841,3601,4.841,3602,4.841,3603,4.841,3604,4.841,3605,6.373,3606,6.373,3607,4.841,3608,4.841,3609,6.373,3610,4.841,3611,4.841,3612,4.841,3613,4.841,3614,4.841,3615,4.841,3640,5.425,3641,5.425,3642,5.425,3643,7.983,3644,5.425,3645,7.141,3646,5.425,3647,5.425,3648,5.425,3649,7.141,3650,5.425,3651,5.425]],["title/theme/theme-usage.html#Index",[124,3.141]],["body/theme/theme-usage.html#Index",[2806,4.795,3616,7.996,3652,7,3653,7.845,3654,7.845]],["title/theme/theme-usage.html#添加文档",[3655,4.949]],["body/theme/theme-usage.html#添加文档",[1,0.291,31,0.697,32,0.725,33,0.769,34,0.891,35,0.907,36,1.024,37,1.132,223,1.486,910,4.683,2806,4.51,3617,6.585,3618,8.187,3619,8.187,3620,6.585,3652,6.585,3656,7.379,3657,7.379]],["title/theme/theme-usage.html#Sidebar",[3621,4.066]],["body/theme/theme-usage.html#Sidebar",[1,0.344,23,3.134,27,2.335,31,0.709,32,0.575,33,0.61,34,0.707,35,0.72,36,0.813,37,0.899,38,0.991,39,1.056,40,1.161,41,1.217,42,1.317,43,1.402,111,1.495,112,1.519,161,1.675,223,1.179,373,5.768,652,6.941,889,4.048,1704,4.048,2191,5.969,2806,3.58,2814,4.501,3594,4.811,3621,6.166,3622,5.226,3623,7.391,3624,8.245,3625,5.226,3626,7.795,3627,6.698,3628,7.795,3629,6.698,3630,5.226,3631,6.698,3632,5.226,3633,5.226,3658,7.505,3659,5.857,3660,5.857,3661,5.857,3662,5.857,3663,5.857,3664,5.857,3665,5.857,3666,5.857,3667,5.857,3668,5.857,3669,5.857,3670,5.857]],["title/theme/theme-usage.html#Favicon",[3634,4.066]],["body/theme/theme-usage.html#Favicon",[31,0.744,32,0.774,3634,6.47,3635,7.028,3636,7.028]],["title/basic/basic_data.html",[1,0.195]],["body/basic/basic_data.html",[1,0.406,2,0.755,3,0.701,4,0.906,12,0.734,26,1.273,31,0.78,32,0.762,33,0.7,34,0.781,35,0.795,36,0.754,37,0.833,38,1.238,39,0.499,40,0.549,41,0.575,42,0.824,43,0.663,46,2.384,53,0.671,54,0.606,56,2.493,58,0.751,59,0.811,61,3.349,63,0.939,65,0.496,68,2.327,69,2.4,72,1.103,73,1.634,74,1.363,75,1.103,79,0.496,84,1.97,92,2.905,95,1.103,96,0.79,109,1.802,110,1.273,111,0.707,112,0.718,113,1.049,114,0.552,115,0.573,116,0.562,117,0.686,118,0.686,119,0.657,120,0.686,121,0.717,122,0.751,128,2.586,134,1.51,136,4.028,145,1.159,146,3.318,430,0.883,438,1.532,504,4.59,505,4.48,506,1.227,507,1.757,508,1.914,509,0.975,510,2.128,511,1.227,512,1.227,513,1.914,514,1.227,515,1.227,516,1.227,517,1.227,518,1.227,519,1.227,634,1.013,639,1.757,641,3.221,649,2.923,650,2.741,658,1.103,659,0.79,660,0.833,661,0.833,662,0.942,683,1.634,787,1.013,790,1.013,839,2.241,896,0.975,898,0.911,1090,1.103,1091,0.911,1240,4.8,1388,4.647,1419,1.227,1490,1.103,1498,2.164,1504,1.634,1928,1.227,2028,3.025,2150,1.103,2849,0.833,2897,1.757,3061,2.128,3396,3.807,3405,5.861,3443,1.227,3444,1.227,3445,1.227,3671,2.471,3672,1.424,3673,1.424,3674,0.975,3675,1.424,3676,1.424,3677,1.424,3678,1.424,3679,1.424,3680,1.424,3681,1.424,3682,1.424,3683,1.424,3684,1.424,3685,1.424,3686,2.769,3687,2.471,3688,1.424,3689,1.424,3690,1.424,3691,1.424,3692,1.424,3693,1.424,3694,1.424,3695,1.424,3696,2.471,3697,1.424,3698,1.424,3699,3.906,3700,1.424,3701,1.424,3702,1.424,3703,1.424,3704,1.424,3705,1.424,3706,3.273,3707,1.424,3708,4.42,3709,2.471,3710,1.424,3711,1.424,3712,1.424,3713,1.424,3714,1.424,3715,1.424,3716,1.424,3717,2.471,3718,2.471,3719,1.424,3720,1.424,3721,1.424,3722,1.424,3723,1.596,3724,1.596,3725,2.471,3726,1.424,3727,1.424,3728,1.424,3729,1.424,3730,1.424,3731,1.424,3732,1.424,3733,1.424,3734,1.424,3735,1.424,3736,3.906,3737,1.424,3738,1.596,3739,1.424,3740,1.424,3741,2.471,3742,2.471,3743,1.424,3744,6.677,3745,1.159,3746,3.273,3747,5.505,3748,4.172,3749,1.424,3750,1.424,3751,2.471,3752,2.471,3753,3.273,3754,2.471,3755,1.424,3756,1.424,3757,2.471,3758,1.424,3759,1.424,3760,1.424,3761,1.424,3762,3.273,3763,1.424,3764,1.424,3765,1.596,3766,2.471,3767,2.471,3768,2.471,3769,1.424,3770,2.471,3771,1.424,3772,1.424,3773,1.424]],["title/basic/basic_data.html#基础据类型",[3774,4.949]],["body/basic/basic_data.html#基础据类型",[]],["title/basic/basic_data.html#数值类型",[3775,4.949]],["body/basic/basic_data.html#数值类型",[1,0.329,38,1.178,61,2.295,63,1.494,68,4.973,72,3.611,73,4.111,74,2.099,75,3.611,84,4.21,92,4.099,113,1.992,145,3.795,146,3.194,161,1.494,222,2.698,223,1.403,504,3.454,790,3.316,839,4.258,1090,3.611,1240,6.017,1617,3.977,1928,4.016,2849,2.728,3671,6.216,3672,4.663,3673,4.663,3674,3.194,3675,4.663,3676,4.663,3677,4.663,3678,4.663,3679,4.663,3680,4.663,3681,4.663,3682,4.663,3683,4.663,3684,4.663,3685,4.663,3687,6.216,3688,4.663,3689,4.663,3690,4.663,3691,4.663,3692,4.663,3693,4.663,3694,4.663,3695,4.663,3776,5.225,3777,8.706,3778,9.497,3779,9.286,3780,8.706,3781,5.225,3782,5.225,3783,5.225,3784,6.966,3785,6.966,3786,6.966,3787,6.966,3788,5.225,3789,6.966,3790,6.966,3791,5.225,3792,5.225,3793,5.225,3794,5.225,3795,6.966,3796,5.225,3797,5.225,3798,5.225,3799,5.225,3800,5.225]],["title/basic/basic_data.html#布尔类型",[3801,4.949]],["body/basic/basic_data.html#布尔类型",[109,3.242,110,3.621,161,2.252,223,1.586,3802,7.876]],["title/basic/basic_data.html#字符串",[1818,4.417]],["body/basic/basic_data.html#字符串",[1,0.391,2,0.525,3,0.799,4,1.001,12,0.836,26,1.425,31,0.797,32,0.736,33,0.738,34,0.826,35,0.841,36,0.81,37,0.823,38,1.198,39,0.559,40,0.614,41,0.644,42,0.91,43,0.742,46,2.563,53,0.765,54,0.691,56,2.585,58,0.857,59,0.924,61,3.427,63,0.665,65,0.566,69,2.508,74,0.457,79,0.566,92,1.459,95,1.257,96,0.901,109,1.667,110,0.836,111,0.791,112,0.804,113,0.52,114,0.629,115,0.653,116,0.641,117,0.782,118,0.782,119,0.749,120,0.782,121,0.817,122,0.857,128,2.8,134,1.667,136,4.304,146,3.277,161,1.158,171,1.495,202,1.534,223,1.378,253,1.392,292,1.398,303,1.039,304,3.544,370,1.624,430,1.007,438,1.715,460,1.624,504,4.684,505,4.786,506,1.398,507,1.155,508,2.142,510,2.382,511,1.398,512,1.398,513,2.142,514,1.398,515,1.398,516,1.398,517,1.398,518,1.398,519,1.398,616,1.624,618,1.624,619,1.495,620,1.624,621,1.624,622,1.624,634,1.155,639,1.967,641,3.425,649,3.164,650,2.967,658,1.257,659,0.901,660,0.95,661,0.95,662,1.074,683,1.829,787,1.155,839,1.112,896,1.112,920,0.924,947,1.257,950,1.398,1042,2.251,1091,1.039,1117,1.624,1122,2.004,1240,2.798,1307,1.495,1329,1.495,1388,4.858,1419,1.398,1490,1.257,1498,2.389,1504,1.829,1594,1.495,1617,1.039,1636,2.251,1903,1.624,2028,3.304,2150,1.257,2324,1.624,2348,1.624,2410,1.322,2565,1.624,2897,1.967,3061,2.382,3202,1.322,3372,1.624,3396,4.121,3405,6.1,3443,1.398,3444,1.398,3445,1.398,3475,1.624,3696,2.766,3697,1.624,3698,1.624,3699,4.266,3700,1.624,3701,1.624,3702,1.624,3703,1.624,3704,1.624,3705,1.624,3706,3.612,3707,1.624,3708,4.785,3709,2.766,3710,1.624,3711,1.624,3712,1.624,3713,1.624,3714,1.624,3715,1.624,3716,1.624,3717,2.766,3718,2.766,3719,1.624,3720,1.624,3721,1.624,3722,1.624,3725,2.766,3726,1.624,3727,1.624,3728,1.624,3729,1.624,3730,1.624,3731,1.624,3732,1.624,3733,1.624,3734,1.624,3735,1.624,3736,4.266,3737,1.624,3739,1.624,3740,1.624,3741,2.766,3742,2.766,3743,1.624,3744,6.963,3745,1.322,3746,3.612,3747,5.853,3748,4.485,3749,1.624,3750,1.624,3751,2.766,3752,2.766,3753,3.612,3754,2.766,3755,1.624,3756,1.624,3757,2.766,3758,1.624,3759,1.624,3760,1.624,3761,1.624,3762,3.612,3763,1.624,3764,1.624,3766,2.766,3767,2.766,3768,2.766,3769,1.624,3770,2.766,3771,1.624,3772,1.624,3773,1.624,3803,1.819,3804,1.819,3805,1.819,3806,1.819,3807,1.819,3808,1.819,3809,1.819,3810,1.819,3811,1.819,3812,1.819,3813,1.819,3814,1.819,3815,1.819,3816,1.819,3817,1.819,3818,1.819,3819,1.819,3820,1.819,3821,1.819,3822,1.819,3823,1.819,3824,1.819,3825,1.819,3826,1.819,3827,1.819,3828,1.819,3829,1.819,3830,1.819,3831,1.819,3832,1.819,3833,1.819,3834,1.819,3835,1.819,3836,1.819,3837,1.819,3838,1.819,3839,1.819,3840,1.819,3841,1.819,3842,1.819,3843,1.819,3844,1.819,3845,1.819,3846,3.099,3847,1.819,3848,1.819,3849,1.819,3850,1.819,3851,1.819,3852,1.819,3853,1.819,3854,3.099,3855,1.819,3856,1.819,3857,1.819,3858,1.819,3859,1.819,3860,1.819,3861,3.099,3862,1.819,3863,1.819,3864,1.819,3865,1.819,3866,1.819,3867,1.819,3868,1.819,3869,1.819,3870,1.819,3871,1.819,3872,1.819,3873,1.819,3874,1.819,3875,1.495,3876,1.819,3877,1.819,3878,1.819,3879,1.819,3880,1.819,3881,1.819,3882,1.819,3883,1.819,3884,1.819,3885,1.819,3886,1.819,3887,1.819,3888,1.819,3889,1.819,3890,1.819,3891,1.819,3892,1.819,3893,1.819,3894,1.819,3895,1.819,3896,1.819,3897,1.819,3898,1.819,3899,1.819,3900,1.819,3901,1.819,3902,1.819,3903,1.819,3904,1.819,3905,1.819,3906,1.819,3907,1.819,3908,1.819,3909,1.819,3910,1.819,3911,1.819,3912,1.819,3913,1.819,3914,1.819,3915,1.819,3916,1.819,3917,1.819,3918,1.819,3919,1.819,3920,1.819,3921,1.819,3922,1.819,3923,1.624,3924,1.819,3925,1.624,3926,1.819,3927,1.819,3928,1.819,3929,1.819,3930,1.819,3931,1.819,3932,1.819,3933,1.819,3934,1.819,3935,1.819,3936,1.819,3937,1.819,3938,1.819,3939,1.819,3940,1.819,3941,1.819,3942,1.819,3943,1.819,3944,1.819,3945,1.819,3946,1.819,3947,1.819,3948,1.819,3949,1.819,3950,1.819,3951,1.819,3952,1.819,3953,1.819,3954,1.819,3955,1.819,3956,1.819,3957,1.819,3958,1.819,3959,1.819,3960,1.819,3961,1.819,3962,1.819,3963,1.819,3964,1.819,3965,1.819,3966,1.819,3967,1.819,3968,1.819,3969,1.819,3970,1.819,3971,1.819,3972,1.819,3973,1.819,3974,1.819,3975,1.819,3976,1.819,3977,1.819,3978,1.819,3979,1.819,3980,1.819,3981,1.819,3982,1.819,3983,1.819,3984,1.819,3985,1.819,3986,1.819,3987,1.819,3988,1.819,3989,1.819,3990,1.819,3991,1.819,3992,1.819,3993,1.819,3994,1.819,3995,1.819,3996,1.819,3997,1.819,3998,1.819,3999,1.819,4000,1.819,4001,1.819,4002,1.819,4003,1.819,4004,1.819,4005,1.819,4006,1.819,4007,1.819,4008,1.819,4009,1.819,4010,1.819,4011,1.819,4012,1.819,4013,1.819,4014,1.819,4015,1.819,4016,1.819,4017,1.819,4018,1.819,4019,1.819,4020,1.819,4021,1.819,4022,1.819,4023,1.819,4024,1.819,4025,1.819,4026,1.819,4027,1.819,4028,1.819,4029,1.819,4030,1.819,4031,1.819,4032,1.819,4033,1.819,4034,1.819,4035,1.819,4036,1.819,4037,1.819]],["title/packages/os.html",[]],["body/packages/os.html",[1,0.405,2,0.756,8,0.909,9,1.507,10,2.002,31,0.749,32,0.573,33,0.78,34,0.489,35,0.497,36,0.561,39,1.051,45,5.436,56,1.28,63,0.867,74,1.016,92,2.746,119,1.665,121,1.817,628,2.259,643,1.536,670,3.385,790,4.34,810,2.796,891,4.482,1091,3.33,1805,5.256,2812,7.093,2841,5.256,2897,2.567,2900,2.472,3092,3.109,3397,2.938,3398,3.109,3401,3.109,3415,3.109,3674,3.564,3748,3.109,4038,4.045,4039,4.045,4040,4.045,4041,7.376,4042,3.61,4043,5.204,4044,5.204,4045,3.61,4046,7.081,4047,5.204,4048,6.103,4049,6.103,4050,5.204,4051,6.103,4052,5.204,4053,3.61,4054,3.61,4055,3.61,4056,3.61,4057,3.61,4058,3.61,4059,5.256,4060,3.61,4061,3.61,4062,5.204,4063,3.61,4064,6.103,4065,3.61,4066,3.61,4067,5.204,4068,4.045,4069,3.61,4070,3.61,4071,3.61,4072,3.61,4073,3.61,4074,5.831,4075,3.61,4076,3.61]],["title/packages/os.html#os包中的API",[4077,4.949]],["body/packages/os.html#os包中的API",[1,0.355,2,0.521,8,0.904,9,1.498,10,1.99,31,0.548,32,0.571,33,0.777,34,0.486,35,0.494,36,0.558,39,1.047,56,1.272,63,0.862,92,2.734,119,1.655,121,1.806,161,2.432,171,4.104,222,1.557,223,1.661,344,3.303,346,2.551,628,2.249,643,1.527,670,3.373,790,4.325,810,2.779,1091,2.296,1805,5.238,2533,3.303,2812,6.692,2841,5.238,2897,2.551,2900,2.457,3092,3.09,3397,2.92,3398,3.09,3401,3.09,3415,3.09,3499,3.588,3674,3.549,3748,3.09,3923,3.588,4041,6.082,4042,3.588,4043,5.181,4044,5.181,4045,3.588,4046,7.064,4047,5.181,4048,6.082,4049,6.082,4050,5.181,4051,6.082,4052,5.181,4053,3.588,4054,3.588,4055,3.588,4056,3.588,4057,3.588,4058,3.588,4059,4.462,4060,3.588,4061,3.588,4062,5.181,4063,3.588,4064,6.082,4065,3.588,4066,3.588,4067,5.181,4069,3.588,4070,3.588,4071,3.588,4072,3.588,4073,3.588,4075,3.588,4076,3.588,4078,4.02,4079,4.02,4080,4.02,4081,4.02,4082,4.02,4083,4.02,4084,4.02,4085,4.02,4086,4.02,4087,4.02,4088,4.02,4089,4.02,4090,4.02,4091,4.02,4092,4.02,4093,4.02,4094,4.02,4095,4.02,4096,4.02,4097,4.02,4098,4.02,4099,4.02,4100,4.02,4101,4.02,4102,4.02,4103,4.02,4104,4.02,4105,4.02,4106,4.02,4107,4.02,4108,4.02,4109,3.588,4110,4.02,4111,4.02,4112,4.02,4113,4.02,4114,4.02,4115,4.02,4116,4.02,4117,4.02,4118,4.02,4119,4.02,4120,4.02,4121,4.02,4122,4.02,4123,4.02,4124,4.02,4125,4.02,4126,4.02,4127,4.02,4128,4.02,4129,4.02,4130,4.02,4131,4.02,4132,4.02,4133,4.02,4134,4.02,4135,4.02,4136,4.02,4137,4.02,4138,4.02,4139,4.02,4140,4.02,4141,4.02,4142,4.02,4143,4.02,4144,4.02,4145,4.02,4146,4.02,4147,4.02,4148,4.02,4149,4.02,4150,4.02,4151,4.02,4152,4.02,4153,4.02,4154,4.02,4155,4.02,4156,4.02,4157,4.02,4158,4.02,4159,4.02,4160,4.02,4161,4.02,4162,4.02,4163,4.02,4164,3.588,4165,4.02,4166,4.02,4167,4.02,4168,4.02,4169,4.02,4170,4.02,4171,4.02,4172,4.02,4173,4.02,4174,4.02]],["title/concurrent/goroutine.html",[900,1.996]],["body/concurrent/goroutine.html",[1,0.407,2,1.247,4,0.408,6,0.694,7,0.652,8,1.582,10,0.817,14,0.913,22,3.103,27,1.721,31,0.56,32,0.44,33,0.527,34,0.454,35,0.551,36,0.396,37,0.437,38,0.482,39,0.514,40,1.3,41,0.592,42,0.371,43,0.395,44,0.694,60,0.725,63,0.611,65,0.513,66,4.818,74,1.125,78,1.473,82,0.796,111,0.421,112,0.428,113,0.472,114,0.571,115,0.592,116,0.581,134,0.679,372,1.268,430,0.913,495,1.199,507,5.883,634,2.388,641,1.488,650,0.913,697,3.039,786,4.01,900,3.964,1218,1.268,1281,4.986,1919,5.111,2464,3.442,2849,4.259,2850,1.199,2902,1.268,3127,2.07,3674,3.09,4059,3.442,4175,1.268,4176,1.473,4177,3.357,4178,2.85,4179,2.85,4180,2.85,4181,2.85,4182,1.268,4183,2.191,4184,1.199,4185,1.047,4186,5.594,4187,4.936,4188,1.473,4189,1.473,4190,1.473,4191,1.473,4192,1.268,4193,1.473,4194,1.473,4195,2.341,4196,1.473,4197,1.65,4198,1.473,4199,1.473,4200,1.473,4201,1.65,4202,3.996,4203,1.65,4204,3.357,4205,4.512,4206,1.473,4207,3.996,4208,1.473,4209,1.473,4210,1.473,4211,3.357,4212,2.543,4213,1.97,4214,1.473,4215,2.543]],["title/concurrent/goroutine.html#goroutine",[900,1.996]],["body/concurrent/goroutine.html#goroutine",[]],["title/concurrent/goroutine.html#并发和并行",[4216,4.949]],["body/concurrent/goroutine.html#并发和并行",[60,3.027,223,1.388,304,4.556,2849,5.023,4175,5.298,4217,8.305,4218,6.892,4219,6.892,4220,6.892,4221,6.892,4222,6.892,4223,8.305,4224,6.892,4225,6.892,4226,6.892,4227,6.892,4228,6.892,4229,6.892,4230,6.892,4231,6.892,4232,6.892,4233,6.892,4234,6.892,4235,6.892,4236,6.892,4237,6.892,4238,6.892,4239,6.892,4240,8.305,4241,6.892,4242,6.892,4243,6.892,4244,6.892]],["title/concurrent/goroutine.html#goroutine-1",[900,1.996]],["body/concurrent/goroutine.html#goroutine-1",[1,0.388,2,1.247,4,0.634,6,1.079,7,1.014,8,1.836,10,1.27,14,1.42,22,2.555,27,2.15,31,0.686,32,0.507,33,0.616,34,0.624,35,0.635,36,0.572,37,0.632,38,0.697,39,0.743,40,1.544,41,0.856,42,0.577,43,0.615,44,1.079,63,0.884,65,0.798,66,5.802,74,1.484,82,1.239,111,0.655,112,0.666,113,0.734,114,0.887,115,0.921,116,0.904,134,1.057,161,0.734,198,2.29,202,2.039,222,0.994,223,1.391,253,1.153,507,5.072,583,2.109,641,2.152,697,0.956,786,1.569,900,3.973,920,1.304,953,3.276,970,3.677,1042,1.864,1122,3.203,1281,2.519,1557,2.109,1771,2.29,1853,2.109,1919,1.864,2849,1.34,2902,1.973,3127,1.864,3674,3.956,4176,2.29,4177,4.607,4182,1.973,4183,1.973,4184,1.864,4185,1.629,4186,6.736,4187,6.166,4188,2.29,4189,2.29,4190,2.29,4191,2.29,4192,1.973,4193,2.29,4194,2.29,4195,2.109,4196,2.29,4245,2.567,4246,2.567,4247,2.567,4248,2.567,4249,2.567,4250,2.567,4251,2.567,4252,2.567,4253,2.567,4254,2.567,4255,2.567,4256,2.567,4257,2.567,4258,2.567,4259,2.567,4260,2.567,4261,2.567,4262,2.567,4263,2.567,4264,2.567,4265,2.567,4266,2.567,4267,2.567,4268,2.567,4269,2.567,4270,2.567,4271,2.567,4272,2.567,4273,2.567,4274,2.567,4275,2.567,4276,2.567,4277,2.567,4278,2.567,4279,2.567,4280,2.109,4281,2.29,4282,2.29,4283,2.29,4284,2.29,4285,2.29,4286,2.29,4287,2.29,4288,2.29,4289,2.29,4290,2.29,4291,2.29,4292,2.29,4293,2.29,4294,2.29,4295,2.29,4296,2.29,4297,2.29,4298,2.29,4299,2.29,4300,2.567,4301,2.29,4302,2.567,4303,2.567,4304,2.567,4305,2.567,4306,2.567,4307,2.567,4308,2.567,4309,2.567,4310,2.567,4311,2.567,4312,2.567,4313,2.567,4314,2.567,4315,2.567,4316,2.567,4317,2.567,4318,2.567,4319,2.567,4320,2.567,4321,2.567,4322,2.567,4323,2.567,4324,2.567,4325,2.567,4326,2.567,4327,2.567,4328,2.567,4329,2.567,4330,2.567,4331,2.567,4332,2.567,4333,2.567,4334,2.567,4335,2.567,4336,2.567,4337,2.567,4338,2.567,4339,2.567,4340,2.567,4341,2.567,4342,2.567,4343,2.567,4344,2.567,4345,2.567,4346,2.567,4347,2.567,4348,2.567,4349,2.567,4350,2.567,4351,2.567,4352,2.29,4353,2.567,4354,2.567,4355,1.973,4356,2.567,4357,2.567,4358,2.567,4359,2.567,4360,2.567,4361,2.567,4362,2.567,4363,2.567,4364,2.567,4365,2.567,4366,2.567,4367,2.567,4368,2.567,4369,2.567,4370,2.567,4371,2.567,4372,2.567,4373,2.567,4374,2.29,4375,2.567,4376,2.567,4377,2.567,4378,2.567,4379,2.567,4380,2.567,4381,2.567,4382,2.567,4383,2.567,4384,2.567,4385,2.567,4386,2.567,4387,2.567,4388,2.567,4389,2.567,4390,2.567,4391,2.567,4392,2.109,4393,2.567,4394,2.567,4395,2.567,4396,2.567,4397,2.567,4398,2.567,4399,2.567,4400,2.567,4401,2.567,4402,2.567,4403,4.121,4404,2.567,4405,2.567,4406,2.567,4407,2.567,4408,2.567,4409,4.121,4410,2.567,4411,2.567,4412,2.567,4413,2.567,4414,2.567,4415,2.567,4416,2.567,4417,2.567,4418,2.567,4419,2.567,4420,2.567,4421,2.567,4422,2.567,4423,2.567,4424,2.567,4425,2.567,4426,2.567,4427,2.567,4428,2.567,4429,2.567,4430,2.567,4431,2.567,4432,2.567,4433,2.567,4434,2.567,4435,2.567,4436,2.567,4437,2.567,4438,2.567,4439,2.567,4440,2.567,4441,2.567,4442,2.567,4443,2.567,4444,2.567,4445,2.567,4446,2.567,4447,2.567,4448,2.567,4449,2.567,4450,2.567,4451,2.567,4452,2.567,4453,2.567,4454,2.109,4455,2.567,4456,2.567]],["title/concurrent/goroutine.html#Goroutine-调度器",[900,1.442,4280,2.938]],["body/concurrent/goroutine.html#Goroutine-调度器",[1,0.12,2,1.176,22,3.482,32,0.3,33,0.318,35,0.375,161,0.873,202,1.51,222,1.182,223,1.417,253,1.371,265,3.63,303,1.742,304,3.122,346,1.936,372,2.345,430,1.689,507,5.943,634,3.667,650,1.689,697,2.987,786,4.3,900,3.853,1122,3.84,1218,2.345,1281,5.442,1617,2.697,1853,2.507,1919,5.404,1962,2.723,2464,4.441,2849,4.297,3127,2.216,3875,2.507,4059,4.999,4164,2.723,4195,2.507,4198,2.723,4199,2.723,4200,2.723,4202,5.805,4204,5.156,4205,5.156,4206,2.723,4207,5.805,4208,2.723,4209,2.723,4210,2.723,4211,5.156,4212,4.215,4213,3.264,4214,2.723,4215,4.215,4280,3.88,4281,2.723,4282,2.723,4283,2.723,4284,2.723,4285,2.723,4286,2.723,4287,2.723,4288,2.723,4289,2.723,4290,2.723,4291,2.723,4292,2.723,4293,2.723,4294,2.723,4295,2.723,4296,2.723,4297,2.723,4298,2.723,4299,2.723,4301,2.723,4457,3.051,4458,3.051,4459,3.051,4460,3.051,4461,3.051,4462,3.051,4463,3.051,4464,3.051,4465,3.051,4466,3.051,4467,3.051,4468,3.051,4469,3.051,4470,3.051,4471,3.051,4472,3.051,4473,3.051,4474,3.051,4475,3.051,4476,3.051,4477,3.051,4478,3.051,4479,3.051,4480,3.051,4481,3.051,4482,3.051,4483,3.051,4484,3.051,4485,3.051,4486,3.051,4487,3.051,4488,3.051,4489,3.051,4490,3.051,4491,3.051,4492,3.051,4493,3.051,4494,3.051,4495,4.723,4496,3.051,4497,3.051,4498,3.051,4499,3.051,4500,3.051,4501,3.051,4502,3.051,4503,4.723,4504,3.051,4505,3.051,4506,3.051,4507,3.051,4508,3.051,4509,3.051,4510,3.051,4511,3.051,4512,3.051,4513,3.051,4514,3.051,4515,3.051,4516,3.051,4517,3.051,4518,3.051,4519,3.051,4520,3.051,4521,3.051,4522,3.051,4523,3.051,4524,3.051,4525,3.051,4526,3.051,4527,3.051,4528,3.051,4529,3.051,4530,3.051,4531,3.051,4532,3.051,4533,3.051,4534,3.051,4535,3.051,4536,3.051,4537,3.051,4538,3.051,4539,3.051,4540,3.051,4541,3.051,4542,3.051,4543,3.051,4544,3.051,4545,3.051,4546,3.051,4547,3.051,4548,3.051,4549,3.051,4550,3.051,4551,3.051,4552,3.051,4553,3.051,4554,3.051,4555,3.051,4556,3.051,4557,3.051,4558,3.051,4559,3.051,4560,3.051,4561,3.051,4562,3.051,4563,3.051,4564,3.051,4565,3.051,4566,3.051,4567,3.051,4568,3.051,4569,3.051,4570,3.051,4571,3.051,4572,3.051,4573,3.051,4574,3.051,4575,3.051,4576,3.051,4577,3.051,4578,3.051,4579,3.051,4580,2.723,4581,3.051,4582,3.051,4583,3.051,4584,3.051,4585,3.051,4586,3.051,4587,3.051,4588,3.051,4589,3.051,4590,3.051,4591,3.051,4592,3.051,4593,3.051,4594,3.051,4595,3.051,4596,3.051,4597,3.051,4598,3.051,4599,3.051,4600,3.051,4601,3.051,4602,3.051,4603,4.723,4604,3.051,4605,3.051,4606,3.051,4607,3.051,4608,3.051,4609,3.051,4610,3.051,4611,3.051,4612,3.051,4613,3.051,4614,3.051,4615,3.051,4616,3.051,4617,3.051,4618,3.051,4619,3.051,4620,3.051,4621,3.051,4622,3.051,4623,3.051,4624,3.051,4625,3.051,4626,3.051,4627,3.051,4628,3.051,4629,3.051,4630,3.051,4631,3.051,4632,3.051,4633,3.051,4634,3.051,4635,3.051,4636,3.051,4637,3.051,4638,3.051,4639,3.051,4640,3.051,4641,3.051,4642,3.051,4643,3.051,4644,3.051,4645,3.051,4646,3.051]],["title/concurrent/sync_lock.html",[1,0.195]],["body/concurrent/sync_lock.html",[0,0.606,1,0.407,2,0.969,4,1.553,7,0.377,8,1.569,9,1.117,10,1.73,12,1.607,13,1.64,14,0.528,21,1.383,22,1.199,24,1.411,31,0.79,32,0.717,33,0.739,34,0.828,35,0.792,36,0.872,37,0.964,38,0.84,39,0.778,40,0.984,41,0.726,42,0.97,43,0.837,44,0.736,46,0.419,48,0.485,56,0.554,58,1.14,59,0.889,60,1.316,61,1.064,63,1.225,65,0.544,69,0.982,73,0.564,74,1.534,75,0.66,79,1.088,96,1.484,104,0.45,111,0.892,112,0.777,113,0.5,114,0.33,115,0.343,134,1.439,441,4.829,453,0.752,494,1.07,513,0.66,628,0.938,639,0.606,643,0.363,670,0.473,673,1.113,787,2.219,790,0.606,794,0.734,795,0.66,819,0.584,839,3.202,896,1.832,898,2.991,900,3.654,907,0.694,1074,0.66,1076,1.854,1090,0.66,1423,1.345,1502,1.537,1503,0.694,1546,1.209,1552,0.564,1920,0.734,1922,4.68,2029,0.631,2030,2.219,2131,0.694,2132,0.734,2420,3.022,2424,0.784,2430,3.022,2449,1.345,2450,2.856,2452,1.345,2453,1.345,2609,0.734,2610,0.734,2611,0.734,2849,0.914,2850,0.694,3674,1.48,3745,1.759,4175,5.868,4182,0.734,4183,0.734,4184,1.759,4185,2.956,4192,2.304,4213,4.823,4647,3.827,4648,3.12,4649,0.852,4650,0.852,4651,1.562,4652,1.562,4653,2.675,4654,1.562,4655,3.23,4656,1.99,4657,1.438,4658,0.852,4659,0.852,4660,0.852,4661,1.562,4662,0.852,4663,0.852,4664,2.675,4665,2.161,4666,2.675,4667,2.161,4668,0.852,4669,1.438,4670,0.955,4671,4.157,4672,2.161,4673,0.852,4674,2.675,4675,0.852,4676,0.852,4677,0.852,4678,1.562,4679,0.852,4680,0.852,4681,1.562,4682,0.852,4683,3.12,4684,0.852,4685,0.852,4686,0.852,4687,1.562,4688,0.955,4689,0.955,4690,0.955,4691,0.852,4692,2.675,4693,0.955,4694,0.852,4695,0.852,4696,0.852,4697,0.852,4698,1.861,4699,1.562,4700,0.852,4701,2.161,4702,2.675,4703,3.12,4704,0.852,4705,1.562,4706,0.852,4707,0.852,4708,1.562,4709,3.509,4710,4.078,4711,0.955,4712,3.23,4713,3.546,4714,3.23,4715,4.218,4716,1.99,4717,1.99,4718,1.562,4719,1.438,4720,1.99,4721,1.99,4722,2.687,4723,2.675,4724,0.852,4725,1.562,4726,0.852,4727,0.852,4728,0.852,4729,0.852,4730,0.852,4731,2.687,4732,2.161,4733,0.852,4734,0.852,4735,1.562,4736,3.509,4737,0.852,4738,2.161,4739,3.12,4740,0.852,4741,0.852,4742,1.562,4743,1.562,4744,0.852,4745,0.852,4746,2.161,4747,0.852,4748,2.161,4749,1.562,4750,1.562,4751,2.161,4752,2.675,4753,0.852,4754,4.078,4755,0.852,4756,2.161,4757,0.852,4758,0.852,4759,0.852,4760,5.018,4761,0.852,4762,0.852,4763,0.852,4764,1.562,4765,0.852,4766,0.852]],["title/concurrent/sync_lock.html#同步和锁",[4767,4.949]],["body/concurrent/sync_lock.html#同步和锁",[]],["title/concurrent/sync_lock.html#共享变量",[4768,4.949]],["body/concurrent/sync_lock.html#共享变量",[1,0.299,900,3.746,2369,6.247,2557,5.845,4769,7.604,4770,7.604,4771,7.604,4772,7.604,4773,7.604,4774,7.604,4775,7.604,4776,7.604]],["title/concurrent/sync_lock.html#同步锁",[4777,4.949]],["body/concurrent/sync_lock.html#同步锁",[1,0.395,2,0.918,4,1.751,7,1.225,8,1.754,9,2.174,10,2.888,13,2.216,21,1.769,22,2.366,31,0.811,32,0.696,33,0.738,34,0.856,35,0.871,36,0.984,37,1.087,38,1.109,39,1.052,40,0.947,41,0.993,42,1.074,43,1.145,58,1.459,60,2.88,63,1.773,65,1.487,79,2.204,111,1.22,112,1.24,113,1.367,114,1.072,115,1.112,161,0.886,202,2.888,223,1.508,441,6.933,513,2.142,639,1.967,643,1.177,898,2.729,900,3.722,907,2.251,950,2.382,1074,2.142,1076,3.352,1122,2.366,1423,3.674,1467,2.382,1670,2.765,1922,5.667,2410,3.472,2449,3.674,2450,5.147,2452,3.674,2453,3.674,2557,2.382,2609,2.382,2610,2.382,2611,2.382,2753,2.765,4184,3.472,4355,2.382,4647,5.821,4648,6.323,4649,2.765,4650,2.765,4651,4.265,4652,4.265,4653,5.853,4654,4.265,4655,5.821,4656,3.927,4657,2.546,4658,2.765,4659,2.765,4660,2.765,4661,4.265,4662,2.765,4663,2.765,4664,5.853,4665,5.207,4666,5.853,4667,5.207,4668,2.765,4778,3.099,4779,3.099,4780,3.099,4781,3.099,4782,3.099,4783,3.099,4784,3.099,4785,3.099,4786,3.099,4787,3.099,4788,3.099,4789,3.099,4790,3.099,4791,3.099,4792,3.099,4793,3.099,4794,2.765,4795,3.099,4796,3.099,4797,3.099,4798,3.099,4799,3.099,4800,3.099,4801,3.099,4802,3.099,4803,3.099,4804,3.099,4805,3.099,4806,3.099,4807,3.099,4808,3.099,4809,3.099,4810,3.099,4811,3.099,4812,3.099,4813,3.099,4814,3.099,4815,3.099,4816,3.099,4817,3.099,4818,3.099,4819,3.099,4820,3.099,4821,3.099,4822,3.099,4823,3.099,4824,3.099,4825,3.099,4826,3.099,4827,3.099,4828,3.099,4829,3.099,4830,3.099,4831,3.099,4832,3.099,4833,3.099,4834,3.099,4835,3.099,4836,3.099,4837,3.099,4838,3.099,4839,3.099,4840,3.099,4841,3.099,4842,3.099,4843,3.099,4844,3.099,4845,3.099,4846,3.099,4847,3.099,4848,3.099,4849,3.099,4850,3.099,4851,3.099,4852,3.099,4853,3.099,4854,3.099,4855,3.099]],["title/concurrent/sync_lock.html#条件变量-sync-Cond",[4669,2.938,4856,3.191]],["body/concurrent/sync_lock.html#条件变量-sync-Cond",[1,0.359,4,1.427,31,0.777,32,0.667,33,0.707,34,0.819,35,0.71,36,0.801,37,0.886,73,2.354,74,1.45,161,1.651,222,2.236,223,1.589,761,3.276,898,3.296,900,3.911,1027,2.897,1032,3.559,1042,2.897,1122,2.857,1922,6.43,2410,5.401,3202,2.897,4213,6.42,4647,5.573,4655,3.276,4656,3.276,4657,3.276,4669,3.276,4671,7.752,4672,6.054,4673,3.559,4674,6.635,4675,3.559,4676,3.559,4677,3.559,4678,5.151,4679,3.559,4680,3.559,4681,5.151,4682,3.559,4683,7.041,4684,3.559,4685,3.559,4686,3.559,4687,5.151,4857,3.988,4858,3.988,4859,3.988,4860,3.988,4861,3.988,4862,3.988,4863,3.988,4864,3.988,4865,3.988,4866,3.988,4867,3.988,4868,3.988,4869,3.988,4870,3.988,4871,3.988,4872,6.054,4873,3.988,4874,3.988,4875,3.988,4876,3.988,4877,3.988,4878,3.988,4879,3.988,4880,3.988,4881,3.988,4882,3.988,4883,3.988,4884,3.988,4885,3.988,4886,3.988,4887,3.988,4888,3.988,4889,3.988,4890,3.988,4891,3.988,4892,3.988,4893,3.988,4894,3.988,4895,3.988,4896,3.988,4897,3.988,4898,3.988,4899,3.988,4900,3.988,4901,3.988,4902,3.988,4903,3.988,4904,3.988,4905,3.988,4906,3.988,4907,3.988,4908,3.988,4909,3.988,4910,3.988,4911,3.988,4912,3.988,4913,3.988,4914,3.988,4915,3.988,4916,3.988,4917,3.988,4918,3.988,4919,3.988,4920,3.988,4921,3.988,4922,3.988,4923,3.988,4924,3.988,4925,3.988,4926,3.988,4927,3.988,4928,3.988,4929,3.988,4930,3.988,4931,3.988,4932,3.988,4933,3.988,4934,3.988,4935,3.988,4936,3.988,4937,3.988,4938,3.988,4939,3.988,4940,3.988,4941,3.988,4942,3.988,4943,3.988,4944,3.988,4945,7.435,4946,3.988,4947,3.988,4948,3.988,4949,3.988,4950,3.988,4951,3.988,4952,3.988,4953,3.988,4954,3.988,4955,3.988,4956,3.988,4957,3.988]],["title/concurrent/sync_lock.html#原子操作",[4958,4.417]],["body/concurrent/sync_lock.html#原子操作",[2,0.863,75,4.604,104,3.136,171,4.414,790,4.228,794,5.12,795,4.604,839,5.368,1090,4.604,1668,5.473,2369,5.473,2849,3.478,3674,4.072,3745,5.909,4192,7.03,4454,5.473,4691,5.945,4959,6.661,4960,6.661,4961,6.661,4962,6.661,4963,6.661,4964,6.661,4965,6.661,4966,6.661,4967,6.661,4968,6.661,4969,6.661,4970,6.661,4971,6.661,4972,6.661,4973,6.661,4974,6.661,4975,6.661,4976,6.661,4977,6.661,4978,6.661,4979,6.661,4980,6.661,4981,6.661,4982,6.661,4983,6.661]],["title/concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同",[4984,4.949]],["body/concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同",[1,0.385,14,3.579,31,0.611,32,0.635,33,0.674,34,0.781,35,0.795,36,0.898,37,0.992,40,1.282,74,1.624,134,2.662,223,1.609,253,2.905,346,4.104,900,2.608,1122,3.2,2030,4.104,4182,4.97,4183,4.97,4355,4.97,4692,8.079,4694,5.771,4695,5.771,4696,5.771,4697,5.771,4985,6.466,4986,6.466,4987,6.466,4988,6.466,4989,6.466,4990,6.466,4991,6.466,4992,6.466,4993,6.466,4994,6.466,4995,6.466,4996,6.466,4997,6.466,4998,6.466,4999,6.466,5000,6.466,5001,6.466,5002,6.466,5003,6.466,5004,6.466,5005,6.466,5006,6.466]],["title/concurrent/sync_lock.html#sync-atomic-Value",[4698,3.804]],["body/concurrent/sync_lock.html#sync-atomic-Value",[1,0.396,4,1.443,8,1.313,31,0.824,32,0.857,33,0.862,34,0.999,35,0.921,36,0.811,37,0.896,46,2.565,58,2.749,63,1.774,161,1.67,223,1.176,628,2.262,673,3.803,2029,3.86,2088,4.797,4699,6.685,4700,5.211,4701,7.381,4702,7.786,4703,8.051,4704,5.211,4705,6.685,4706,5.211,4707,5.211,5007,5.839,5008,5.839,5009,5.839,5010,5.839,5011,5.839,5012,5.839,5013,5.839,5014,5.839,5015,5.839,5016,5.839,5017,5.839,5018,5.839,5019,5.839,5020,5.839,5021,5.839,5022,5.839,5023,5.839,5024,5.839,5025,5.839,5026,5.839]],["title/concurrent/sync_lock.html#sync-WaitGroup",[4185,3.141]],["body/concurrent/sync_lock.html#sync-WaitGroup",[1,0.396,2,1.063,4,1.419,8,1.768,10,1.958,13,2.565,21,3.277,31,0.743,32,0.806,33,0.772,34,0.895,35,0.83,36,0.937,37,1.036,38,1.142,39,1.035,40,1.468,41,0.822,42,0.889,43,0.947,58,1.863,69,1.881,74,1.975,96,2.84,111,1.01,134,2.363,161,1.131,171,1.909,223,1.584,346,2.511,453,1.7,819,2.418,839,4.528,898,2.259,900,3.666,937,2.01,1027,2.874,2030,3.642,2420,6.305,4184,2.874,4185,4.701,4213,5.436,4374,3.531,4392,3.25,4708,5.121,4709,7.32,4710,6.086,4712,6.086,4713,6.462,4714,6.086,4715,4.411,4716,3.25,4717,4.715,4718,5.121,4719,3.25,4720,4.715,4721,4.715,5027,3.956,5028,5.739,5029,3.956,5030,3.956,5031,3.956,5032,3.956,5033,3.956,5034,3.956,5035,3.956,5036,3.956,5037,3.956,5038,3.956,5039,3.956,5040,3.531,5041,3.956,5042,3.956,5043,3.956,5044,3.956,5045,3.956,5046,3.956,5047,3.956,5048,3.956,5049,3.956,5050,3.956,5051,3.956,5052,3.956,5053,3.956,5054,3.956,5055,3.956,5056,3.956,5057,3.956,5058,3.956,5059,3.956,5060,3.956,5061,3.956,5062,3.956,5063,3.956,5064,3.956,5065,3.956,5066,3.956,5067,3.956,5068,3.956,5069,3.956,5070,3.531,5071,3.956,5072,3.956,5073,3.956,5074,3.956,5075,3.956,5076,3.956,5077,3.956,5078,3.956,5079,3.956,5080,3.956]],["title/concurrent/sync_lock.html#sync-Once",[4722,3.804]],["body/concurrent/sync_lock.html#sync-Once",[1,0.359,4,1.797,8,1.635,9,2.078,10,2.76,24,2.626,31,0.764,32,0.548,33,0.581,34,0.674,35,0.686,36,0.774,37,0.856,56,2.301,74,2.032,197,3.184,223,1.464,670,2.76,847,4.977,900,2.249,947,3.855,1122,2.76,1297,4.582,1546,5.026,1920,4.287,2450,4.051,2493,4.582,3202,4.051,3674,4.445,3875,4.582,4185,3.54,4355,4.287,4715,6.835,4722,6.219,4723,7.652,4724,4.977,4725,6.489,4726,4.977,4727,4.977,4728,4.977,4729,4.977,4730,4.977,5040,4.977,5070,4.977,5081,5.577,5082,5.577,5083,5.577,5084,5.577,5085,5.577,5086,5.577,5087,5.577,5088,5.577,5089,5.577,5090,5.577,5091,5.577,5092,5.577,5093,5.577,5094,5.577,5095,5.577,5096,5.577,5097,5.577,5098,5.577,5099,5.577,5100,5.577,5101,5.577,5102,5.577,5103,5.577,5104,5.577,5105,5.577,5106,5.577,5107,5.577,5108,5.577,5109,5.577,5110,5.577,5111,5.577,5112,5.577,5113,5.577,5114,5.577,5115,5.577,5116,5.577,5117,5.577,5118,5.577,5119,5.577,5120,5.577]],["title/concurrent/sync_lock.html#context-Context-类型",[920,1.817,4731,2.749]],["body/concurrent/sync_lock.html#context-Context-类型",[1,0.387,2,0.64,4,1.481,8,1.347,13,1.229,31,0.633,32,0.485,33,0.624,34,0.597,35,0.607,36,0.686,37,0.758,38,0.836,39,0.891,40,0.979,41,1.027,42,1.508,43,1.183,69,1.619,74,0.813,96,2.445,111,1.261,112,1.281,134,2.034,161,0.925,171,2.384,202,2.445,223,1.645,253,2.219,482,2.887,579,2.887,755,2.887,839,3.663,900,3.294,920,1.644,950,2.486,1027,2.35,1122,2.966,1502,3.803,1638,2.887,2030,3.135,2088,2.658,2430,5.854,2493,2.658,2552,2.887,3925,2.887,4109,4.409,4175,7.394,4185,2.053,4213,3.414,4352,2.887,4392,2.658,4710,5.935,4712,4.058,4713,4.058,4714,4.058,4715,5.156,4716,4.058,4717,2.658,4719,2.658,4720,2.658,4721,2.658,4731,4.606,4732,5.348,4733,2.887,4734,2.887,4735,4.409,4736,6.797,4737,2.887,4738,5.348,4739,6.447,4740,2.887,4741,2.887,4742,4.409,4743,4.409,4744,2.887,4745,2.887,4746,5.348,4747,2.887,4748,5.348,4749,4.409,4750,4.409,4751,5.348,4752,5.986,4753,2.887,4872,2.887,5121,3.235,5122,3.235,5123,3.235,5124,3.235,5125,3.235,5126,3.235,5127,3.235,5128,3.235,5129,3.235,5130,3.235,5131,3.235,5132,3.235,5133,3.235,5134,3.235,5135,3.235,5136,3.235,5137,3.235,5138,3.235,5139,3.235,5140,3.235,5141,3.235,5142,3.235,5143,3.235,5144,3.235,5145,3.235,5146,3.235,5147,3.235,5148,3.235,5149,3.235,5150,3.235,5151,3.235,5152,3.235,5153,3.235,5154,3.235,5155,3.235,5156,3.235,5157,3.235,5158,3.235,5159,3.235,5160,3.235,5161,3.235,5162,3.235,5163,3.235,5164,3.235,5165,3.235,5166,3.235,5167,3.235,5168,3.235,5169,3.235,5170,3.235,5171,3.235,5172,3.235,5173,3.235,5174,3.235,5175,3.235,5176,3.235,5177,3.235,5178,3.235,5179,3.235,5180,3.235,5181,3.235,5182,3.235,5183,3.235,5184,3.235,5185,3.235,5186,3.235,5187,3.235,5188,3.235,5189,3.235,5190,3.235,5191,3.235,5192,3.235,5193,3.235,5194,3.235,5195,3.235,5196,3.235,5197,3.235,5198,3.235,5199,3.235,5200,3.235,5201,3.235,5202,3.235,5203,3.235,5204,3.235,5205,3.235,5206,3.235,5207,3.235,5208,3.235,5209,3.235,5210,3.235,5211,3.235,5212,3.235,5213,3.235,5214,3.235,5215,3.235,5216,3.235,5217,3.235,5218,3.235,5219,3.235,5220,3.235,5221,3.235,5222,3.235,5223,3.235,5224,3.235,5225,3.235,5226,3.235,5227,3.235,5228,3.235,5229,3.235,5230,3.235,5231,3.235,5232,3.235,5233,3.235,5234,3.235,5235,3.235,5236,3.235,5237,3.235,5238,3.235,5239,3.235,5240,3.235,5241,3.235,5242,3.235]],["title/concurrent/sync_lock.html#临时对象池-sync-Pool",[4754,2.938,5243,3.576]],["body/concurrent/sync_lock.html#临时对象池-sync-Pool",[1,0.317,2,1.043,8,1.623,12,3.7,31,0.521,32,0.542,33,0.575,44,3.035,59,3.668,61,3.534,161,1.577,223,1.865,424,4.922,494,4.412,787,5.418,1622,4.239,2557,4.239,3202,4.006,3545,4.922,4185,3.5,4698,4.239,4722,4.239,4731,4.239,4754,7.719,4755,4.922,4756,7.182,4757,4.922,4758,4.922,4759,4.922,4794,4.922,4856,4.922,4958,4.922,5244,5.515,5245,5.515,5246,5.515,5247,5.515,5248,5.515,5249,5.515,5250,5.515,5251,5.515,5252,5.515,5253,5.515,5254,5.515,5255,5.515,5256,5.515,5257,5.515,5258,5.515,5259,5.515,5260,5.515,5261,5.515,5262,5.515,5263,5.515,5264,5.515,5265,5.515,5266,5.515,5267,5.515,5268,5.515,5269,5.515,5270,5.515,5271,5.515,5272,5.515,5273,5.515,5274,5.515,5275,5.515,5276,5.515,5277,5.515,5278,5.515,5279,5.515,5280,5.515,5281,5.515,5282,5.515,5283,5.515,5284,5.515,5285,5.515,5286,5.515,5287,5.515,5288,5.515,5289,5.515,5290,5.515,5291,5.515,5292,5.515,5293,5.515,5294,5.515]],["title/concurrent/sync_lock.html#sync-Map",[4760,4.066]],["body/concurrent/sync_lock.html#sync-Map",[2,1.083,12,3.203,24,3.69,202,2.586,223,1.912,628,2.698,896,5.109,898,2.984,900,2.107,947,3.611,1122,2.586,1442,4.016,2131,3.795,2132,4.016,2381,4.663,2849,2.728,3745,3.795,4454,4.293,4698,4.016,4760,7.969,4761,4.663,4762,4.663,4763,4.663,4764,6.216,5295,5.225,5296,5.225,5297,5.225,5298,5.225,5299,5.225,5300,5.225,5301,5.225,5302,5.225,5303,5.225,5304,5.225,5305,5.225,5306,5.225,5307,5.225,5308,5.225,5309,5.225,5310,5.225,5311,5.225,5312,5.225,5313,5.225,5314,5.225,5315,5.225,5316,5.225,5317,5.225,5318,5.225,5319,5.225,5320,5.225,5321,5.225,5322,5.225,5323,5.225,5324,5.225,5325,5.225,5326,5.225,5327,5.225,5328,5.225,5329,5.225,5330,5.225,5331,5.225,5332,5.225,5333,5.225,5334,5.225,5335,5.225,5336,5.225,5337,5.225,5338,5.225,5339,5.225,5340,5.225,5341,5.225,5342,5.225,5343,5.225,5344,5.225,5345,5.225,5346,5.225,5347,5.225,5348,5.225,5349,5.225,5350,5.225,5351,5.225,5352,5.225,5353,5.225,5354,5.225,5355,5.225,5356,5.225,5357,5.225,5358,5.225,5359,5.225,5360,5.225,5361,5.225,5362,5.225,5363,5.225,5364,5.225,5365,5.225,5366,5.225,5367,5.225,5368,5.225,5369,5.225,5370,5.225,5371,5.225]],["title/concurrent/sync_lock.html#竞争检查器",[5372,4.949]],["body/concurrent/sync_lock.html#竞争检查器",[2,1.22,22,3.599,48,3.694,197,4.151,222,3.321,253,3.266,453,3.124,900,2.932,1552,4.291,2850,5.281,4580,6.488,4765,6.488,4766,6.488,5373,7.271,5374,7.271,5375,7.271,5376,7.271,5377,7.271,5378,7.271,5379,7.271,5380,7.271,5381,7.271]]],"invertedIndex":[["",{"_index":1,"title":{"index.html":{},"advance/mm.html":{},"basic/array.html":{},"basic/flow.html":{},"basic/interface.html":{},"basic/error.html":{},"basic/oop.html":{},"basic/pointer.html":{},"basic/json.html":{},"basic/constant.html":{},"basic/package.html":{},"basic/struct.html":{},"basic/var.html":{},"basic/operator.html":{},"basic/scope.html":{},"basic/reflect.html":{},"basic/env_config.html":{},"basic/function.html":{},"basic/test.html":{},"theme/theme-usage.html":{},"basic/basic_data.html":{},"concurrent/sync_lock.html":{}},"body":{"index.html":{},"index.html#注释":{},"index.html#行分隔符":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"advance/mm.html":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/array.html#数组传入函数":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/pointer.html#哪些值是不可寻址的":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#包":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#包声明":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"basic/operator.html":{},"basic/operator.html#优先级":{},"basic/operator.html#算术运算符":{},"basic/operator.html#关系运算符":{},"basic/operator.html#逻辑运算符":{},"basic/operator.html#位运算符":{},"basic/operator.html#赋值运算符":{},"basic/operator.html#其他运算符":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/scope.html":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{},"packages/io.html":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#共享变量":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["0",{"_index":74,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/operator.html#位运算符":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/function.html":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#性能分析":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["0&#x3002",{"_index":5072,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["0&#xff0c;&#x4f1a;&#x5f15;&#x53d1;&#x4e00;&#x4e2a",{"_index":5067,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["0&#xff0c;&#x90fd;&#x610f;&#x5473;&#x7740;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x7684;&#x975e;&#x6b63",{"_index":978,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["0(&#x5305;&#x542b",{"_index":2082,"title":{},"body":{"basic/slice.html#截取切片":{}}}],["0.20180831062425",{"_index":2280,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["00000110",{"_index":1863,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{}}}],["00100000",{"_index":1866,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{}}}],["00100010",{"_index":1862,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{}}}],["0666",{"_index":4071,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["0777",{"_index":4076,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["08b\\n",{"_index":1864,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{}}}],["0x00",{"_index":156,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["0x3d",{"_index":904,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{}}}],["0x7f",{"_index":157,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["0，那么，go",{"_index":3141,"title":{},"body":{"basic/test.html":{}}}],["1",{"_index":31,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/array.html#数组传入函数":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/operator.html#位运算符":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#性能分析":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"theme/theme-usage.html#Favicon":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["1#2#3#4#a",{"_index":3732,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["1&#x3002",{"_index":1297,"title":{},"body":{"basic/pointer.html#指针":{},"basic/map.html#map":{},"concurrent/sync_lock.html#sync-Once":{}}}],["1&#x3002;&#x4e00;&#x65e6",{"_index":5098,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["1&#x3002;&#x5f53",{"_index":3379,"title":{},"body":{"basic/test.html#性能分析":{}}}],["1&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x8981;&#x770b;&#x770b;&#x4fe1;&#x7bb1;&#x91cc;&#x662f;&#x4e0d;&#x662f;&#x8fd8;&#x5b58;&#x6709;&#x60c5;&#x62a5;&#x3002;&#x5982;&#x679c;&#x8fd8;&#x6709;&#x60c5;&#x62a5;&#xff0c;&#x90a3;&#x4e48;&#x6211;&#x5c31;&#x56de;&#x5bb6;&#x53bb;&#x7b49;&#x901a;&#x77e5;&#x3002",{"_index":4890,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["1&#xff0c;&#x5176;&#x4ed6;1",{"_index":3850,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["1&#xff0c;&#x56e0;&#x6b64;&#x8fd9",{"_index":1994,"title":{},"body":{"basic/map.html#map":{}}}],["1&#xff0c;&#x56e0;&#x6b64;&#xff0c;&#x5982;&#x679c;&#x53c2;&#x6570;&#x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x9700;&#x8981;&#x5f88;&#x957f;&#x65f6;&#x95f4;&#x6216;&#x8005;&#x6839;&#x672c;&#x5c31;&#x4e0d;&#x4f1a;&#x7ed3;&#x675f",{"_index":5113,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["1&#xff0c;&#x90a3;&#x4e3a;&#x4ec0;&#x4e48;&#x8fd8;&#x8981;&#x4f7f;&#x7528;&#x9700;&#x8981;&#x56db;&#x4e2a;&#x5b57;&#x8282;&#x7684",{"_index":5102,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["1,2,3初始化值依次是1,2,3",{"_index":2018,"title":{},"body":{"basic/slice.html":{}}}],["1.11",{"_index":2198,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["1.12",{"_index":2209,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["1.192",{"_index":3126,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["1.25",{"_index":1859,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/slice.html":{},"basic/slice.html#怎样估算切片容量的增长":{}}}],["1.8e308",{"_index":3691,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["1.9",{"_index":4762,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["1.html",{"_index":3632,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["10",{"_index":40,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["10.00",{"_index":1052,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["100",{"_index":76,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/var.html":{},"basic/var.html#简短声明":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["100&#x4e2a",{"_index":1561,"title":{},"body":{"basic/package.html#包":{}}}],["100,&#x4e0d;&#x6307;&#x5b9a;&#x7c7b;&#x578b;&#x548c;&#x521d;&#x59cb;&#x503c;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x548c;&#x4e0a;&#x4e00;&#x884c;&#x975e;&#x7a7a;&#x5e38;&#x91cf;&#x53f3;&#x503c;&#x76f8;&#x540c",{"_index":1529,"title":{},"body":{"basic/constant.html#iota":{}}}],["1000.0",{"_index":442,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["10000",{"_index":706,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["1024",{"_index":2048,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#怎样估算切片容量的增长":{}}}],["11",{"_index":41,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["11f53e031339",{"_index":2287,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["12",{"_index":42,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["123",{"_index":3716,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["123123123",{"_index":3740,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["127",{"_index":3678,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["128",{"_index":3677,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["13",{"_index":43,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["14",{"_index":111,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["15",{"_index":112,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["16",{"_index":113,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"index.html#编码":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["17",{"_index":65,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#类型断言":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["18",{"_index":114,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["18446744073709551615",{"_index":3676,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["19",{"_index":115,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["1942",{"_index":1400,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["1967",{"_index":1408,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["1968",{"_index":1412,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["1mb",{"_index":371,"title":{},"body":{"advance/mm.html":{}}}],["1mb&#xff09;&#xff0c;&#x4ee5;&#x51cf;&#x5c11;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x3002",{"_index":383,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["1，其他1",{"_index":3724,"title":{},"body":{"basic/basic_data.html":{}}}],["2",{"_index":32,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/array.html#数组传入函数":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/operator.html#位运算符":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/slice.html#怎样估算切片容量的增长":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"theme/theme-usage.html#Favicon":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["2&#x3002;&#x8fd9;&#x65f6;&#xff0c;&#x88ab;&#x8f93;&#x51fa;&#x7684;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x4e5f;&#x4f1a;&#x662f;&#x666e;&#x901a;&#x7684;&#x6587;&#x672c;&#xff0c;&#x5e76;&#x4e14;&#x901a;&#x5e38;&#x4f1a;&#x5305;&#x542b;&#x66f4;&#x591a;&#x7684;&#x7ec6;&#x8282;&#x3002;&#x81f3;&#x4e8e;&#x8fd9;&#x4e9b;&#x7ec6;&#x8282;&#x90fd;&#x5305;&#x542b;&#x4e86;&#x54ea;&#x4e9b",{"_index":3393,"title":{},"body":{"basic/test.html#性能分析":{}}}],["2(&#x4e0d;&#x5305;&#x542b",{"_index":2084,"title":{},"body":{"basic/slice.html#截取切片":{}}}],["2(&#x5305;&#x542b",{"_index":2085,"title":{},"body":{"basic/slice.html#截取切片":{}}}],["2.0",{"_index":443,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["2.3",{"_index":1491,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{},"basic/var.html":{},"basic/var.html#声明一组变量":{}}}],["20",{"_index":116,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/slice.html":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["200",{"_index":1798,"title":{},"body":{"basic/var.html":{},"basic/var.html#简短声明":{}}}],["20000",{"_index":708,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["20141017200713",{"_index":2244,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20160331131008",{"_index":2283,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20160718134125",{"_index":2293,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["2017",{"_index":4761,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["20170109093832",{"_index":2234,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20170307163044",{"_index":2257,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20170601230230",{"_index":2239,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20170829155851",{"_index":2248,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20180103152354",{"_index":2265,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20180427134550",{"_index":2271,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20180607165131",{"_index":2251,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20180814085852",{"_index":2237,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20181207100336",{"_index":2277,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20190116161447",{"_index":2286,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["20us~10m",{"_index":4209,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["21",{"_index":117,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["2147483647",{"_index":3683,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["2147483648",{"_index":3682,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["22",{"_index":118,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["22d885f9ecc7",{"_index":2235,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["23",{"_index":119,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["2314",{"_index":3124,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["24",{"_index":120,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["25",{"_index":3,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#类型断言":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["255",{"_index":72,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["26",{"_index":121,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["27",{"_index":122,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["273.15",{"_index":87,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["28",{"_index":659,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["29",{"_index":660,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["2k)&#xff0c;goroutin",{"_index":4486,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["2k)，goroutin",{"_index":4201,"title":{},"body":{"concurrent/goroutine.html":{}}}],["2个字符串大小，相等0",{"_index":3723,"title":{},"body":{"basic/basic_data.html":{}}}],["3",{"_index":33,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/array.html#数组传入函数":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/operator.html#位运算符":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#性能测试的测试结果":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["3&#xff0c;&#x76f4;&#x5230;&#x7070;&#x8272;&#x5bf9;&#x8c61;&#x961f;&#x5217;&#x4e3a;&#x7a7a;&#x3002;&#x6b64;&#x65f6;&#x767d;&#x8272;&#x5bf9;&#x8c61;&#x5373;&#x4e3a;&#x5783;&#x573e;&#xff0c;&#x8fdb;&#x884c;&#x56de;&#x6536;&#x3002",{"_index":856,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["3&#xff0c;&#x800c;&#x662f",{"_index":625,"title":{},"body":{"basic/flow.html#for":{}}}],["3.14",{"_index":1059,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["3.4",{"_index":444,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["3.4e38",{"_index":3689,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["3.9.0",{"_index":3600,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["30",{"_index":661,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["300",{"_index":1799,"title":{},"body":{"basic/var.html":{},"basic/var.html#简短声明":{}}}],["3000",{"_index":705,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{}}}],["31",{"_index":662,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["32",{"_index":92,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"index.html#编码":{},"basic/array.html":{},"basic/array.html#数组传入函数":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["32&#x3002;&#x56e0;&#x4e3a;&#x6211;&#x4eec;&#x5e76;&#x6ca1;&#x6709;&#x518d;&#x5411;&#x8be5;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x5199;&#x5165;&#x4efb;&#x4f55;&#x5185;&#x5bb9;&#xff0c;&#x6240;&#x4ee5;&#x5b83;&#x7684;&#x5bb9;&#x91cf;&#x4f1a;&#x4fdd;&#x6301;&#x4e0d;&#x53d8;&#xff0c;&#x4ecd;&#x662f",{"_index":3957,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["32767",{"_index":3681,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["32768",{"_index":3680,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["32k",{"_index":788,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["33",{"_index":677,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["34",{"_index":678,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["35",{"_index":679,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["36",{"_index":680,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["36b14963da70",{"_index":2249,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["37",{"_index":681,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["38",{"_index":682,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["39",{"_index":683,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["39;arg",{"_index":2852,"title":{},"body":{"commands/build.html":{}}}],["39;flag",{"_index":2867,"title":{},"body":{"commands/build.html":{}}}],["39;tag",{"_index":2871,"title":{},"body":{"commands/build.html":{}}}],["3]int",{"_index":451,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["4",{"_index":34,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#性能测试的测试结果":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["4&#x3002;&#x5bf9",{"_index":580,"title":{},"body":{"basic/flow.html#for":{}}}],["40",{"_index":684,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["4096",{"_index":3439,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["41",{"_index":685,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["42",{"_index":686,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["4294967295",{"_index":3675,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["43",{"_index":687,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["44",{"_index":688,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["45",{"_index":689,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["46",{"_index":1223,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["47",{"_index":508,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["48",{"_index":1224,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["49",{"_index":1225,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["4m",{"_index":837,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["4~5kb",{"_index":4176,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["5",{"_index":35,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#if":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#性能测试的测试结果":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["5(&#x4e0d;&#x5305;&#x542b",{"_index":2086,"title":{},"body":{"basic/slice.html#截取切片":{}}}],["5.0/4.0",{"_index":1858,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#算术运算符":{}}}],["5/4",{"_index":1860,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#算术运算符":{}}}],["50",{"_index":1226,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["50.0",{"_index":446,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["500",{"_index":4183,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["500000",{"_index":3123,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["51",{"_index":1227,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["512",{"_index":3142,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["52",{"_index":1228,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["53",{"_index":1229,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["54",{"_index":1230,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["55",{"_index":1231,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["56",{"_index":1232,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["568ao",{"_index":2882,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["57",{"_index":1233,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["57fdcb988a5c",{"_index":2258,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["58",{"_index":1234,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["59",{"_index":1235,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["597d",{"_index":3772,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["5a0f697c9ed9",{"_index":2240,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["5c",{"_index":2854,"title":{},"body":{"commands/build.html":{}}}],["5f57d2222ad7",{"_index":2294,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["5g",{"_index":2861,"title":{},"body":{"commands/build.html":{}}}],["5l",{"_index":2868,"title":{},"body":{"commands/build.html":{}}}],["6",{"_index":36,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#性能测试的测试结果":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["60",{"_index":1236,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["61",{"_index":1237,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["62",{"_index":1238,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["63",{"_index":1239,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["64",{"_index":1240,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"commands/build.html":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{}}}],["64&#x3002",{"_index":3958,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["64&#xff0c;&#x4f46;&#x662f;&#x793a;&#x4f8b;&#x4e8c;&#xff0c;&#x4ec",{"_index":3954,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["64&#xff0c;&#x90a3;&#x4e48;&#x8be5;&#x503c;&#x5c31;&#x4f1a;&#x57fa;&#x4e8e;&#x4e00;&#x4e2a;&#x9884;&#x5148;&#x5b9a;&#x4e49;&#x597d;&#x7684;&#x3001;&#x957f;&#x5ea6;&#x4e3a",{"_index":3961,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["6495407",{"_index":1694,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["65",{"_index":1241,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["65535",{"_index":3673,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["66",{"_index":1242,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["67",{"_index":1243,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["68",{"_index":1244,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["69",{"_index":1245,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["6c",{"_index":2855,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["6d33b5a963d9",{"_index":2278,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["6f",{"_index":510,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["6g",{"_index":2862,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["6l",{"_index":2869,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["7",{"_index":37,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#性能测试的测试结果":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["7&#x3002",{"_index":582,"title":{},"body":{"basic/flow.html#for":{}}}],["7.0",{"_index":445,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["70",{"_index":1246,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["71",{"_index":1247,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["72",{"_index":1248,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["7231",{"_index":3771,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["754",{"_index":3687,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["76626ae9c91c",{"_index":2245,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["8",{"_index":38,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#自定义类型":{},"index.html#类型断言":{},"index.html#编码":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#import":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#赋值":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#性能测试的测试结果":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["8&#x3002",{"_index":3269,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["80",{"_index":518,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["8005",{"_index":3773,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["8080",{"_index":2906,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["8082",{"_index":3602,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["85",{"_index":519,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["88",{"_index":512,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["8c",{"_index":2856,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["8g",{"_index":2863,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["8l",{"_index":2870,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["9",{"_index":39,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#赋值":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["9223372036854775807",{"_index":3685,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["9223372036854775808",{"_index":3684,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["972f9cd951fc",{"_index":2252,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["_",{"_index":53,"title":{},"body":{"index.html":{},"index.html#空标识符":{},"index.html#命名":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/package.html":{},"basic/package.html#点操作":{},"basic/package.html#包声明":{},"basic/function.html":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["_config.yaml",{"_index":3596,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["_config.yml",{"_index":3603,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["_data",{"_index":3594,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{}}}],["_gcoff",{"_index":820,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["_obj",{"_index":2874,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["_test",{"_index":1553,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["_test.go",{"_index":3047,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{}}}],["_testmain.go",{"_index":2877,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["_type",{"_index":792,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["a&#x53ef;&#x4ee5;&#x5b58;&#x50a8;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x6570;&#x503c",{"_index":738,"title":{},"body":{"basic/interface.html#接口":{}}}],["a&#x7684;&#x503c;&#x4e3a",{"_index":600,"title":{},"body":{"basic/flow.html#for":{}}}],["a&#xff0c;&#x7136;&#x540e;&#x53c8;&#x8fc5;&#x901f;&#x5f97;&#x5207;&#x6362;&#x5230;&#x7a0b;&#x5e8f",{"_index":4220,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["a/b/c",{"_index":2848,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["a1",{"_index":4660,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["a2",{"_index":4662,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["a5",{"_index":515,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["a[%d][%d",{"_index":452,"title":{},"body":{"basic/array.html":{},"basic/array.html#二维数组":{}}}],["a[2",{"_index":437,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["a[b",{"_index":2890,"title":{},"body":{"commands/build.html":{}}}],["a[b:]&#x201d;&#x7684;&#x91cd;&#x5199;&#x89c4;&#x5219;&#xff0c;&#x65b9;&#x4fbf;&#x6211;&#x4eec;&#x505a;&#x6279;&#x91cf;&#x66ff;&#x6362",{"_index":2995,"title":{},"body":{"commands/build.html#工具":{}}}],["a[b:len(a",{"_index":2889,"title":{},"body":{"commands/build.html":{}}}],["aa",{"_index":3060,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["ab",{"_index":3061,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["abc",{"_index":1490,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{},"basic/var.html":{},"basic/var.html#简短声明":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["abdca",{"_index":3736,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["absolutezeroc",{"_index":86,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["ac",{"_index":1100,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.class",{"_index":1104,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.genu",{"_index":1106,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.kingdom",{"_index":1102,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.order,ac.famili",{"_index":1105,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.phylum",{"_index":1103,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ac.speci",{"_index":1107,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["accord",{"_index":2896,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["acquir",{"_index":4654,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["actor",{"_index":1398,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["add",{"_index":4714,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["addit",{"_index":2832,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["addnum",{"_index":4746,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["addnum(&amp;num",{"_index":4712,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["address",{"_index":1701,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["add）、比较并交换（compar",{"_index":4688,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["ag",{"_index":1915,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["alloc",{"_index":823,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["altern",{"_index":1540,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["amd64",{"_index":3121,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["american",{"_index":140,"title":{},"body":{"index.html":{}}}],["amount",{"_index":4653,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["amp",{"_index":1213,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/operator.html":{},"basic/operator.html#优先级":{},"basic/operator.html#位运算符":{},"basic/operator.html#其他运算符":{}}}],["amp;&amp",{"_index":799,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/struct.html":{},"basic/struct.html#结构体比较":{},"basic/operator.html":{},"basic/operator.html#优先级":{},"basic/operator.html#逻辑运算符":{}}}],["amp;0",{"_index":1268,"title":{},"body":{"basic/pointer.html":{}}}],["amp;1",{"_index":1269,"title":{},"body":{"basic/pointer.html":{}}}],["amp;2",{"_index":1276,"title":{},"body":{"basic/pointer.html":{}}}],["amp;a",{"_index":1215,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{}}}],["amp;dilbert",{"_index":1696,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["amp;errorstringtext",{"_index":653,"title":{},"body":{"basic/interface.html":{}}}],["amp;errorstring{text",{"_index":748,"title":{},"body":{"basic/interface.html#接口":{}}}],["amp;mypoint",{"_index":1259,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["amp;point",{"_index":1068,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["amp;ptr",{"_index":1216,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{}}}],["amp;p去调用scalebi",{"_index":1070,"title":{},"body":{"basic/oop.html":{}}}],["amp;titl",{"_index":1431,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["amp;x",{"_index":80,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/pointer.html":{},"basic/pointer.html#指针":{}}}],["amp;{0",{"_index":1357,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["amp;{1",{"_index":1358,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["amp;{2",{"_index":1359,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["anderson",{"_index":672,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["anim",{"_index":1111,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["animalcategori",{"_index":1092,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["animalcategoryspeci",{"_index":1109,"title":{},"body":{"basic/oop.html":{}}}],["animalcategory{speci",{"_index":1201,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["annot",{"_index":3096,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["api",{"_index":1091,"title":{},"body":{"basic/oop.html":{},"basic/json.html":{},"basic/json.html#序列化":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#性能分析":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["api&#x3002;&#x60f3;&#x8ba9;&#x7a0b;&#x5e8f;&#x5f00;&#x59cb;&#x5bf9",{"_index":3335,"title":{},"body":{"basic/test.html#性能分析":{}}}],["api&#x3002;&#x8fd9;&#x4e2a;&#x4ee3;&#x7801;&#x5305;&#x53ef;&#x4ee5;&#x8ba9;&#x6211;&#x4eec;&#x62e5;&#x6709;&#x64cd;&#x63a7;&#x8ba1;&#x7b97;&#x673a;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7684;&#x80fd;&#x529b;&#x3002;&#x4e0d;&#x8bba;&#x662f",{"_index":4079,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["api&#xff0c;&#x548c;&#x975e;&#x5e38;&#x597d;&#x7528;&#x7684;&#x6807;&#x51c6;&#x5de5;&#x5177;&#x3002;&#x8fd9;&#x4e9b",{"_index":3312,"title":{},"body":{"basic/test.html#性能分析":{}}}],["apos;&#x597d;&apo",{"_index":621,"title":{},"body":{"basic/flow.html#for":{},"basic/basic_data.html#字符串":{}}}],["apos;&#x7231;&apo",{"_index":620,"title":{},"body":{"basic/flow.html#for":{},"basic/basic_data.html#字符串":{}}}],["apos;&#x8005;&apo",{"_index":622,"title":{},"body":{"basic/flow.html#for":{},"basic/basic_data.html#字符串":{}}}],["apos;a&apo",{"_index":765,"title":{},"body":{"basic/interface.html#接口":{}}}],["apos;arg",{"_index":2949,"title":{},"body":{"commands/build.html#工具":{}}}],["apos;e&apo",{"_index":766,"title":{},"body":{"basic/interface.html#接口":{}}}],["apos;flag",{"_index":2959,"title":{},"body":{"commands/build.html#工具":{}}}],["apos;g&apo",{"_index":618,"title":{},"body":{"basic/flow.html#for":{},"basic/basic_data.html#字符串":{}}}],["apos;go",{"_index":3193,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["apos;i&apo",{"_index":767,"title":{},"body":{"basic/interface.html#接口":{}}}],["apos;o&apo",{"_index":619,"title":{},"body":{"basic/flow.html#for":{},"basic/interface.html#接口":{},"basic/basic_data.html#字符串":{}}}],["apos;tag",{"_index":2961,"title":{},"body":{"commands/build.html#工具":{}}}],["apos;u&apo",{"_index":768,"title":{},"body":{"basic/interface.html#接口":{}}}],["append",{"_index":669,"title":{"basic/slice.html#append-和-copy":{}},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/slice.html":{},"basic/slice.html#append-和-copy":{},"basic/slice.html#怎样估算切片容量的增长":{}}}],["area",{"_index":1053,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["arg",{"_index":57,"title":{},"body":{"index.html":{},"index.html#空标识符":{}}}],["arg1",{"_index":50,"title":{},"body":{"index.html":{},"index.html#os-Args":{}}}],["arg2",{"_index":51,"title":{},"body":{"index.html":{},"index.html#os-Args":{}}}],["arg3",{"_index":52,"title":{},"body":{"index.html":{},"index.html#os-Args":{}}}],["args1.go",{"_index":49,"title":{},"body":{"index.html":{},"index.html#os-Args":{}}}],["argument",{"_index":1264,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["arr",{"_index":2021,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{}}}],["arr[:endindex",{"_index":2027,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{}}}],["arr[startindex",{"_index":2025,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{}}}],["arr[startindex:endindex",{"_index":2023,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{}}}],["array",{"_index":431,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["array1",{"_index":2478,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["array2",{"_index":2479,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["arr中从下标startindex到endindex",{"_index":2022,"title":{},"body":{"basic/slice.html":{}}}],["ascii",{"_index":139,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["asleep",{"_index":2610,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["assign",{"_index":98,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["atoi32(p",{"_index":841,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["atomic.addint32",{"_index":4691,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["atomic.adduint32(&amp;count",{"_index":4189,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["atomic.compareandswapint32(&amp;num2",{"_index":4694,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["atomic.loadint32(&amp;num",{"_index":4741,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["atomic.loaduint32",{"_index":4730,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["atomic.loaduint32(&amp;count",{"_index":4188,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["atomic.valu",{"_index":4701,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["author",{"_index":1685,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["auto",{"_index":2202,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["avail",{"_index":4214,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["avoid",{"_index":1541,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["awesom",{"_index":3628,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["b",{"_index":60,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#基准测试":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#并发和并行":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["b.buf",{"_index":3757,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["b.buf)+ne",{"_index":3759,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["b.buf[:length+ne",{"_index":3758,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["b1",{"_index":513,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["b1.writestr",{"_index":3709,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["b2",{"_index":4663,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["b3d780601022",{"_index":2284,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["b869fe1415e4",{"_index":2238,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["back",{"_index":2399,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["badmap2",{"_index":1927,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["bailout",{"_index":911,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["balanc",{"_index":441,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["balance2",{"_index":448,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["basicpay",{"_index":694,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["bd",{"_index":516,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["befor",{"_index":2396,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["bench",{"_index":3051,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#基准测试":{},"basic/test.html#性能测试的测试结果":{}}}],["benchmark",{"_index":3101,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{}}}],["benchmarkgetprim",{"_index":3122,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["benchmarknam",{"_index":3103,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{}}}],["bergman",{"_index":1404,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["between",{"_index":2834,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["bigslowoper",{"_index":2454,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["bin",{"_index":2195,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#工作区":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["binari",{"_index":4649,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["bisset",{"_index":1416,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["bit",{"_index":145,"title":{},"body":{"index.html":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["block",{"_index":805,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/test.html":{}}}],["blockprofile=block.out",{"_index":3105,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{}}}],["blog",{"_index":3607,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["blue",{"_index":1081,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["bob",{"_index":1802,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{},"basic/map.html":{},"basic/map.html#map":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["bogart",{"_index":1402,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["boilingc",{"_index":89,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["book",{"_index":1684,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book1",{"_index":1688,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book1.author",{"_index":1690,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book1.book_id",{"_index":1693,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book1.subject",{"_index":1692,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book1.titl",{"_index":1689,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["book_id",{"_index":1687,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["bool",{"_index":107,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/map.html":{},"basic/map.html#map":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#测试函数":{}}}],["boolean",{"_index":1219,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["box6",{"_index":4702,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["box6.store(replica",{"_index":4706,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["box6.store(v6",{"_index":4704,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["branch",{"_index":3613,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["break",{"_index":14,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/error.html":{},"basic/error.html#error-类型":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["break，cas",{"_index":489,"title":{},"body":{"basic/flow.html":{}}}],["broadcast",{"_index":4687,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["browser",{"_index":3094,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["buf",{"_index":3432,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["buffer",{"_index":1388,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#性能分析":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer.grow",{"_index":3705,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer.writestr",{"_index":3706,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1",{"_index":3747,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1.byt",{"_index":3763,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1.cap",{"_index":3753,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1.len",{"_index":3752,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1.read(p1",{"_index":3755,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buffer1.writestring(cont",{"_index":3750,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["bufio",{"_index":3429,"title":{},"body":{"packages/io.html":{}}}],["bufio&#x5305;&#x4e2d;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":3522,"title":{"packages/io.html#bufio包中的数据类型":{}},"body":{}}],["bufio&#x5305;&#x4e2d;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x4e3b;&#x8981;&#x6709;&#xff1a",{"_index":3523,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["bufio.newreader(os.stdin",{"_index":893,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["bufio.read",{"_index":3431,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["bufio.reader&#x7c7b;&#x578b;&#x8bfb;&#x53d6;&#x65b9;&#x6cd5",{"_index":3568,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["bufio.writ",{"_index":3440,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["bufio.writer&#x7c7b;&#x578b;&#x503c;&#x4e2d;&#x7f13;&#x51b2;&#x7684;&#x6570;&#x636e;&#x4ec0;&#x4e48;&#x65f6;&#x5019;&#x4f1a;&#x88ab;&#x5199;&#x5230;&#x5b83;&#x7684;&#x5e95;&#x5c42;&#x5199;&#x5165;&#x5668",{"_index":3551,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["bug",{"_index":2818,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["build",{"_index":1552,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["build&#x4ea7;&#x751f",{"_index":2977,"title":{},"body":{"commands/build.html#工具":{}}}],["build.out",{"_index":2881,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["builder",{"_index":3744,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["buildmod",{"_index":2835,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["bullitt",{"_index":1411,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["byte",{"_index":61,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/array.html":{},"basic/array.html#数组传入函数":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["bytes(hex",{"_index":3770,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["bytes.buff",{"_index":3405,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["bytes.newbufferstring(cont",{"_index":3761,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["c",{"_index":62,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试":{}}}],["c&#x4ea7;&#x751f",{"_index":2978,"title":{},"body":{"commands/build.html#工具":{}}}],["c.basicpay",{"_index":700,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["c.radiu",{"_index":1058,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["c1",{"_index":1050,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["c1.getarea",{"_index":1055,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["c1.radiu",{"_index":1051,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["c:\\go",{"_index":2189,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{}}}],["c:\\go\\bin",{"_index":2190,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{}}}],["ca",{"_index":4692,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["cach",{"_index":376,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#tcmalloc":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["cache&#xff0c;&#x7528;&#x4e8e;&#x7ed9;&#x6ca1;&#x6709;&#x9501;&#x7684",{"_index":416,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["calcul",{"_index":2437,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为参数":{}}}],["calculatesalari",{"_index":691,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["call",{"_index":634,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["caller",{"_index":806,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["canal",{"_index":3066,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["cancel",{"_index":4747,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["cancelfunc",{"_index":4739,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["candid",{"_index":2624,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["cap",{"_index":1498,"title":{"basic/slice.html#len-和-cap":{}},"body":{"basic/constant.html":{},"basic/constant.html#常量":{},"basic/slice.html":{},"basic/slice.html#len-和-cap":{},"basic/slice.html#截取切片":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["cap=%d",{"_index":2037,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["cap=7",{"_index":2046,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["cap=9",{"_index":2041,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["cap=len=3",{"_index":2019,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{}}}],["capac",{"_index":2028,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#slice":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["carri",{"_index":915,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["cas&#xff09;&#x3001;&#x52a0;&#x8f7d;&#xff08;load&#xff09;&#x3001",{"_index":4964,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["casablanca",{"_index":1399,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["case",{"_index":15,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["cas）、加载（load",{"_index":4689,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["cat",{"_index":1110,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["categori",{"_index":1108,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["ccflag",{"_index":2851,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["cd",{"_index":2219,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["cdf",{"_index":2220,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["celsiu",{"_index":83,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["celsius((f",{"_index":94,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["cemp1",{"_index":709,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["center",{"_index":1712,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["central",{"_index":377,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#tcmalloc":{}}}],["ch",{"_index":2605,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["ch1",{"_index":2615,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["ch2",{"_index":2616,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["ch3",{"_index":2617,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["chan",{"_index":21,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/var.html":{},"basic/var.html#变量":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["channel",{"_index":22,"title":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#make-和-new":{},"index.html#类型转换":{},"basic/function.html":{},"basic/function.html#参数":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["channel的值并复制给变量x",{"_index":2607,"title":{},"body":{"concurrent/channel.html":{}}}],["charact",{"_index":153,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["check",{"_index":826,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["children",{"_index":3631,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["chri",{"_index":2156,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["circl",{"_index":1048,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["circle(c1",{"_index":1054,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["class",{"_index":1095,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["claus",{"_index":493,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#select":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["clean",{"_index":2810,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["clone",{"_index":2213,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"commands/build.html":{},"commands/build.html#工具":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["close",{"_index":645,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["closer",{"_index":644,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["cmd",{"_index":2193,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{}}}],["code",{"_index":142,"title":{},"body":{"index.html":{},"index.html#编码":{},"basic/env_config.html":{},"basic/env_config.html#开发工具":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["collect",{"_index":804,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["color",{"_index":1078,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/json.html":{},"basic/json.html#序列化":{}}}],["color.rgba",{"_index":1079,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["coloredpoint",{"_index":1077,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["coloredpointpoint",{"_index":1082,"title":{},"body":{"basic/oop.html":{}}}],["coloredpoint{point",{"_index":1156,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["comma",{"_index":123,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["command",{"_index":2808,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["commun",{"_index":492,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#select":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["compar",{"_index":4763,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["compil",{"_index":1072,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["complet",{"_index":808,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["complex",{"_index":3694,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["complex128",{"_index":3693,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["complex64",{"_index":3692,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["concurr",{"_index":4727,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["condit",{"_index":495,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"concurrent/goroutine.html":{}}}],["condition&#xff09;&#xff0c;&#x7834;&#x574f;&#x4e86;&#x7a0b;&#x5e8f;&#x7684;&#x5e76",{"_index":4428,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["conflict",{"_index":1542,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["const",{"_index":5,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#声明":{},"index.html#自定义类型":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{}}}],["constraint",{"_index":2873,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["contain",{"_index":2388,"title":{"packages/container.html#container-包":{}},"body":{"packages/container.html":{}}}],["container/list",{"_index":2389,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["content",{"_index":3748,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["context",{"_index":4175,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#并发和并行":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["context.background",{"_index":4743,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["context.cancelfunc",{"_index":4745,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["context.context",{"_index":4731,"title":{"concurrent/sync_lock.html#context-Context-类型":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["context.context]\\n",{"_index":4737,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["context.withcancel",{"_index":4744,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["context.withcancel(context.background",{"_index":4740,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["context.withvalu",{"_index":4753,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["continu",{"_index":16,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/flow.html":{},"basic/flow.html#for":{}}}],["contract",{"_index":692,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["contrib/ss",{"_index":2232,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["cool",{"_index":1405,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["coordinatewithchan",{"_index":4708,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["coordinatewithcontext",{"_index":4736,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["coordinatewithwaitgroup",{"_index":4716,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["copi",{"_index":2029,"title":{"basic/slice.html#append-和-copy":{}},"body":{"basic/slice.html":{},"basic/slice.html#append-和-copy":{},"basic/function.html":{},"basic/function.html#参数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["copy&#xff0c;&#xff08;&#x4e0d;&#x7ba1;&#x662f;&#x6307;&#x9488;&#xff0c;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x8fd8;&#x662f;&#x5176;&#x4ed6;&#x7c7b;&#x578b;&#xff0c",{"_index":2503,"title":{},"body":{"basic/function.html#参数":{}}}],["coroutin",{"_index":4200,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["count",{"_index":66,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["count[x",{"_index":1803,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["cover",{"_index":3050,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#覆盖率":{}}}],["cover&apo",{"_index":3194,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["coverag",{"_index":3088,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["covermode=count",{"_index":3100,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["coverprofil",{"_index":3098,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["coverprofile=c.out",{"_index":3091,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["cpu",{"_index":2849,"title":{},"body":{"commands/build.html":{},"basic/test.html":{},"basic/test.html#基准测试":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#性能分析":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#并发和并行":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-Map":{}}}],["cpu&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x79f0;&#x4e3a",{"_index":3274,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["cpufil",{"_index":2893,"title":{},"body":{"commands/build.html":{}}}],["cpuprofil",{"_index":2892,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["cpuprofile=cpu.out",{"_index":3104,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{}}}],["creat",{"_index":4043,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["crypto/rand",{"_index":1538,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["csp",{"_index":2604,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["ctof",{"_index":90,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["current",{"_index":825,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["cxt",{"_index":4738,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["cxt.done",{"_index":4742,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["c、c",{"_index":4197,"title":{},"body":{"concurrent/goroutine.html":{}}}],["d",{"_index":96,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["d\\n",{"_index":128,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["darwin",{"_index":3119,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["data",{"_index":95,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["deadloc",{"_index":4668,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["deadlock",{"_index":2611,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["debug",{"_index":3150,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["decod",{"_index":1548,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["def",{"_index":3710,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["default",{"_index":20,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#命名":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["defaultheapminimum",{"_index":836,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["defer",{"_index":10,"title":{"basic/function.html#关键字-defer":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{}}}],["definit",{"_index":1673,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["delet",{"_index":1923,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["dep",{"_index":2203,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["depend",{"_index":2809,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["deploy",{"_index":3609,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["deposit",{"_index":4652,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["dessert",{"_index":3081,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["detartr",{"_index":3063,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["dev/stderr",{"_index":4054,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["dictionari",{"_index":1929,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["diff",{"_index":2891,"title":{},"body":{"commands/build.html":{}}}],["differ",{"_index":132,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["dir(.ex",{"_index":2884,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["dir.test(.ex",{"_index":2885,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["dirti",{"_index":4764,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["display",{"_index":3095,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["distanc",{"_index":1085,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["doc",{"_index":884,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"commands/build.html":{},"commands/build.html#工具":{},"theme/theme-usage.html":{},"theme/theme-usage.html#使用文档主题":{},"theme/theme-usage.html#Quick-Start":{}}}],["doc.go",{"_index":2901,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["document",{"_index":2814,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["don&#x2019;t",{"_index":2625,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["done",{"_index":4715,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["don’t",{"_index":2601,"title":{},"body":{"concurrent/channel.html":{}}}],["doubl",{"_index":2470,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["double(%d",{"_index":2471,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["double(4",{"_index":2473,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["double(x",{"_index":2475,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["download",{"_index":2223,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["driver/mysql",{"_index":2913,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["dst",{"_index":3412,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["dwell",{"_index":3069,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["dy",{"_index":3722,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["e",{"_index":655,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/constant.html":{},"basic/constant.html#iota":{},"packages/container.html":{},"packages/container.html#container-包":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["e.text",{"_index":656,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["e253f1f20942",{"_index":2281,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["e5",{"_index":514,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["e7",{"_index":511,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["e8",{"_index":517,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["ef82de70bb3f",{"_index":2272,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["elba",{"_index":3074,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["element",{"_index":125,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"packages/container.html":{},"packages/container.html#container-包":{}}}],["element.(person",{"_index":130,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["empid",{"_index":693,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["employe",{"_index":710,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["employeeofthemonth",{"_index":1695,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["employeeofthemonth.posit",{"_index":1697,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["encod",{"_index":138,"title":{},"body":{"index.html":{},"basic/json.html":{},"basic/json.html#序列化":{}}}],["encoding&#x201d;&#x3002",{"_index":326,"title":{},"body":{"index.html#编码":{}}}],["encoding/asn1",{"_index":1391,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["encoding/json",{"_index":1389,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["encoding/xml",{"_index":1390,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["encount",{"_index":2899,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["end",{"_index":4735,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["endindex时将表示一直到arr",{"_index":2024,"title":{},"body":{"basic/slice.html":{}}}],["enter",{"_index":916,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["entir",{"_index":809,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["env",{"_index":2816,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["environ",{"_index":2817,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["epol",{"_index":4208,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["epoll/kqueue/iocompletionport",{"_index":4198,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["equival",{"_index":1211,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["er",{"_index":3072,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["err",{"_index":642,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/var.html":{},"basic/var.html#赋值":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["error",{"_index":643,"title":{"basic/error.html#error-类型":{}},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#赋值":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#函数作为参数":{},"basic/function.html#错误":{},"basic/function.html#关键字-defer":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["errors.new",{"_index":651,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/function.html":{},"basic/function.html#函数作为参数":{}}}],["errorstr",{"_index":654,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["es6",{"_index":2432,"title":{},"body":{"basic/function.html":{},"basic/function.html#可变参数":{}}}],["et",{"_index":3075,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["evil",{"_index":3068,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["exampleispalindrom",{"_index":3109,"title":{},"body":{"basic/test.html":{},"basic/test.html#示例函数":{}}}],["examplenam",{"_index":3108,"title":{},"body":{"basic/test.html":{},"basic/test.html#示例函数":{}}}],["exit",{"_index":819,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["expect",{"_index":912,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["expens",{"_index":702,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["export",{"_index":2207,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["express",{"_index":449,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["extra",{"_index":2456,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["f",{"_index":82,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#赋值":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["f.close",{"_index":2447,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["f58768cc1a7a",{"_index":2266,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["f\\n",{"_index":70,"title":{},"body":{"index.html":{},"index.html#类型转换":{}}}],["factor",{"_index":1063,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["fahrenheit",{"_index":85,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["fahrenheit(c",{"_index":91,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["fail",{"_index":1420,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"basic/test.html":{},"basic/test.html#测试":{}}}],["failed:%v",{"_index":897,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["fallthrough",{"_index":17,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{}}}],["fals",{"_index":110,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体比较":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#布尔类型":{},"basic/basic_data.html#字符串":{}}}],["famili",{"_index":1097,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["fatal",{"_index":2609,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["favicon",{"_index":3634,"title":{"theme/theme-usage.html#Favicon":{}},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Favicon":{}}}],["fd",{"_index":4060,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["femal",{"_index":1494,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{}}}],["field",{"_index":1725,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["file",{"_index":2812,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["file3",{"_index":4052,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["file3.clos",{"_index":4055,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["file3.writestr",{"_index":4056,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["filemod",{"_index":4074,"title":{},"body":{"packages/os.html":{}}}],["filenam",{"_index":2445,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["filetyp",{"_index":2837,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["filo",{"_index":2477,"title":{},"body":{"basic/function.html":{}}}],["find",{"_index":2211,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["findvowel",{"_index":664,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["finish",{"_index":895,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["first",{"_index":435,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["fix",{"_index":2820,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["flag",{"_index":2841,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["float",{"_index":1220,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["float32",{"_index":68,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["float64",{"_index":84,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/function.html":{},"basic/function.html#函数作为值":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["flush",{"_index":3442,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["fmt",{"_index":44,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["fmt.errorf",{"_index":657,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{}}}],["fmt.errorf&#x51fd;&#x6570;&#x4f7f;&#x7528;fmt.sprintf&#x683c;&#x5f0f;&#x5316;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x5e76;&#x8fd4;&#x56d",{"_index":929,"title":{},"body":{"basic/error.html#error-类型":{}}}],["fmt.errorf函数使用fmt.sprintf",{"_index":887,"title":{},"body":{"basic/error.html":{}}}],["fmt.fprintf",{"_index":2894,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["fmt.print",{"_index":4661,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["fmt.print(b1.str",{"_index":3711,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.print(buffer.str",{"_index":3707,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.printf",{"_index":69,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/slice.html":{},"basic/slice.html#截取切片":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/function.html":{},"basic/function.html#可变参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["fmt.printf(vowel",{"_index":675,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["fmt.println",{"_index":134,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/package.html":{},"basic/package.html#main":{},"basic/slice.html":{},"basic/slice.html#截取切片":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["fmt.println(",{"_index":3699,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(&amp;x",{"_index":1797,"title":{},"body":{"basic/var.html":{},"basic/var.html#简短声明":{}}}],["fmt.println(*p",{"_index":1210,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指针":{}}}],["fmt.println(a",{"_index":433,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"basic/constant.html":{},"basic/constant.html#常量":{}}}],["fmt.println(d",{"_index":99,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["fmt.println(field",{"_index":2157,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["fmt.println(field.str",{"_index":2158,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["fmt.println(getsquareroot",{"_index":2436,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为值":{}}}],["fmt.println(goodby",{"_index":3700,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(hello",{"_index":1535,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["fmt.println(i",{"_index":4177,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["fmt.println(mapname[key",{"_index":1925,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["fmt.println(numbers1",{"_index":502,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{}}}],["fmt.println(os.args[i",{"_index":47,"title":{},"body":{"index.html":{},"index.html#os-Args":{}}}],["fmt.println(p",{"_index":1709,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体比较":{}}}],["fmt.println(p.distance(q.point",{"_index":1083,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["fmt.println(p.x",{"_index":1706,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体比较":{}}}],["fmt.println(r",{"_index":440,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["fmt.println(strings.compare(str",{"_index":3727,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.contains(str",{"_index":3713,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.hasprefix(str",{"_index":3719,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.hassuffix(str",{"_index":3721,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.index(str",{"_index":3717,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.join(strsplit",{"_index":3731,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.replace(sourcestr",{"_index":3743,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.tolow",{"_index":3737,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strings.toupp",{"_index":3735,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(strsplit",{"_index":3730,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fmt.println(sum",{"_index":2431,"title":{},"body":{"basic/function.html":{},"basic/function.html#可变参数":{}}}],["fmt.println(sum(valu",{"_index":2433,"title":{},"body":{"basic/function.html":{},"basic/function.html#可变参数":{}}}],["fmt.println(t",{"_index":2134,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["fmt.println(t.nam",{"_index":2136,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["fmt.println(t.str",{"_index":2133,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["fmt.println(ta",{"_index":2144,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["fmt.println(ta.kind",{"_index":2145,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["fmt.println(titl",{"_index":1433,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["fmt.println(tripl",{"_index":2476,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["fmt.println(v",{"_index":2149,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["fmt.println(v.str",{"_index":2151,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["fmt.println(val",{"_index":2155,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["fmt.println(x",{"_index":1212,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/package.html":{},"basic/package.html#main":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["fmt.sprintf",{"_index":658,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/oop.html":{},"basic/oop.html#String-方法":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["fn",{"_index":4187,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["foo.txt",{"_index":1806,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["forcegc",{"_index":815,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["forcetrigg",{"_index":812,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["format",{"_index":151,"title":{},"body":{"index.html":{},"index.html#编码":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["four",{"_index":1492,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{},"basic/var.html":{},"basic/var.html#声明一组变量":{}}}],["fprintf",{"_index":2895,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["free",{"_index":817,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["freebsd&#x3001;openbsd&#x3001;plan9&#xff0c;os&#x4ee3;&#x7801;&#x5305;&#x90fd;&#x53ef;&#x4ee5;&#x4e3a;&#x4e4b;&#x63d0;&#x4f9b;&#x7edf;&#x4e00;&#x7684;&#x4f7f;&#x7528;&#x63a5;&#x53e3;&#x3002",{"_index":4081,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["freebsd、openbsd、plan9，o",{"_index":4040,"title":{},"body":{"packages/os.html":{}}}],["freezingc",{"_index":88,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["front",{"_index":2398,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["ftoc",{"_index":93,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["func",{"_index":8,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#os-Args":{},"index.html#命名":{},"index.html#声明":{},"index.html#类型转换":{},"index.html#自定义类型":{},"basic/array.html":{},"basic/array.html#数组传入函数":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/package.html":{},"basic/package.html#main":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/var.html":{},"basic/var.html#简短声明":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["func(point",{"_index":1266,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["func(valu",{"_index":1260,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["function",{"_index":917,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#参数":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["g",{"_index":507,"title":{},"body":{"basic/flow.html":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["g&#x3002;&#x5df2;&#x5b58;&#x5728",{"_index":4325,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["g&#xff08;&#x4e5f;&#x5c31;&#x662f",{"_index":4322,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["g&#xff08;goroutin",{"_index":4284,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["g&#xff0c;&#x4e14;&#x80fd;&#x591f;&#x4f7f;&#x8fd9;&#x4e9b",{"_index":4292,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["g&#xff0c;&#x5207;&#x6362;&#x5230",{"_index":4538,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["g&#xff1b;&#x5982;&#x679c;&#x6b64;&#x65f6;&#x6ca1;&#x6709",{"_index":4609,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["g&#xff1b;&#x5982;&#x679c;&#x6ca1;&#x6709",{"_index":4631,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["garbag",{"_index":803,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["gc",{"_index":787,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["gccgo",{"_index":2859,"title":{},"body":{"commands/build.html":{}}}],["gccgoflag",{"_index":2858,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["gccgo还是gc",{"_index":2857,"title":{},"body":{"commands/build.html":{}}}],["gcflag",{"_index":2860,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["gcinit",{"_index":832,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["gcpercent",{"_index":831,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["gcphase",{"_index":828,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["gcshouldstart",{"_index":798,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["gcstart",{"_index":800,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["gcstart(gcbackgroundmod",{"_index":801,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["gcstart(gcforceblockmod",{"_index":811,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["gener",{"_index":827,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["genu",{"_index":1098,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["getarea",{"_index":1057,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["getsequ",{"_index":2440,"title":{},"body":{"basic/function.html":{},"basic/function.html#闭包":{}}}],["getsquareroot",{"_index":2434,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为值":{}}}],["gh",{"_index":3614,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["git",{"_index":2216,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["git@github.com:shipengqi/kubernet",{"_index":3611,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["git@github.com:zalando",{"_index":3587,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["github.com/fsnotify/fsnotifi",{"_index":2229,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/gin",{"_index":2231,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/go",{"_index":2911,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["github.com/golang/lint/golint",{"_index":2843,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["github.com/golang/protobuf",{"_index":1392,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/hashicorp/hcl",{"_index":2241,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/inconshreveable/mousetrap",{"_index":2243,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/json",{"_index":2246,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/lexkong/log",{"_index":2250,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/magiconair/properti",{"_index":2253,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/mattn/go",{"_index":2255,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/mitchellh/mapstructur",{"_index":2259,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/pelletier/go",{"_index":2261,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/satori/go.uuid",{"_index":2264,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/afero",{"_index":2267,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/cast",{"_index":2268,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/cobra",{"_index":2270,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/jwalterweatherman",{"_index":2273,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/pflag",{"_index":2274,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/spf13/vip",{"_index":2276,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/ugorji/go",{"_index":2279,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["github.com/willf/pad",{"_index":2282,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["given",{"_index":3087,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["glide.lock",{"_index":2225,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["go",{"_index":2,"title":{"basic/env_config.html":{},"basic/env_config.html#Go-环境配置":{},"basic/env_config.html#Go-Module":{},"basic/test.html#go-test-命令执行的主要测试流程":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#数据类型":{},"index.html#package":{},"index.html#行分隔符":{},"index.html#os-Args":{},"index.html#空标识符":{},"index.html#类型转换":{},"index.html#类型断言":{},"index.html#编码":{},"advance/mm.html":{},"advance/mm.html#tcmalloc":{},"basic/array.html":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/oop.html":{},"basic/oop.html#面向对象":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#包":{},"basic/package.html#包声明":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/operator.html":{},"basic/operator.html#算术运算符":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#怎样估算切片容量的增长":{},"basic/scope.html":{},"basic/scope.html#作用域":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html":{},"basic/env_config.html#安装":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"packages/container.html":{},"packages/container.html#container-包":{},"basic/function.html":{},"basic/function.html#参数":{},"basic/function.html#函数作为值":{},"basic/function.html#闭包":{},"basic/function.html#错误":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#go-test-命令执行的主要测试流程":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#parallel-标记":{},"basic/test.html#性能分析":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"concurrent/sync_lock.html#sync-Map":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["go&#x91c7;&#x7528;&#x4e86",{"_index":4478,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["go.mod",{"_index":2226,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["go111modul",{"_index":2201,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["go111module=on",{"_index":2208,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["go11modul",{"_index":2206,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["goarch",{"_index":3120,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["gocach",{"_index":3113,"title":{},"body":{"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["gocacheverify=1",{"_index":3116,"title":{},"body":{"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["godebug",{"_index":3115,"title":{},"body":{"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["godoc",{"_index":2905,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["godoc&#x670d;&#x52a1",{"_index":3013,"title":{},"body":{"commands/build.html#工具":{}}}],["goexit",{"_index":4195,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["gofmt",{"_index":2822,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["gogc",{"_index":835,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["gogetenv",{"_index":840,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["goland",{"_index":2298,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#开发工具":{}}}],["golang",{"_index":0,"title":{"index.html":{},"index.html#Golang-介绍":{}},"body":{"index.html":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"concurrent/sync_lock.html":{}}}],["golang.org/x/si",{"_index":2285,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["golang.org/x/text",{"_index":2288,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["golint",{"_index":2844,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["gone",{"_index":4696,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["gonic/gin",{"_index":2236,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["goo",{"_index":3118,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["goodby",{"_index":3702,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["gopath",{"_index":2194,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["gopath/bin",{"_index":2847,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["gopath/pkg",{"_index":2846,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["gopath/pkg/dep",{"_index":2204,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["gopath/pkg/mod",{"_index":2200,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["gopath/src/cdf",{"_index":2214,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["gopkg.in/go",{"_index":2290,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["gopkg.in/yaml.v2",{"_index":1554,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["gopkg.lock",{"_index":2224,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["gopl.io/ch3",{"_index":2914,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["goproxy=https://goproxy.io",{"_index":2210,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["goptah/src/packages/test",{"_index":1551,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["goroot",{"_index":2192,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{},"basic/env_config.html#工作区":{}}}],["goroutin",{"_index":900,"title":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#基准测试":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#性能分析":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#共享变量":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#sync-Map":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["goroutine&#x3002",{"_index":4495,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["goroutine&#xff0c",{"_index":2734,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["goroutine&#xff0c;&#x5b83;&#x4e0e;&#x6211;&#x4eec;&#x542f;&#x7528;&#x7684;&#x5176;&#x4ed6",{"_index":4273,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["gosch",{"_index":4193,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["gotest文件，由makefil",{"_index":2878,"title":{},"body":{"commands/build.html":{}}}],["goto",{"_index":19,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/flow.html":{},"basic/flow.html#for":{}}}],["go语言数据结构，我们可以选择性地解码json",{"_index":1434,"title":{},"body":{"basic/json.html":{}}}],["grow",{"_index":3746,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["guard",{"_index":4651,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["g’、’o",{"_index":3765,"title":{},"body":{"basic/basic_data.html":{}}}],["g（goroutin",{"_index":4179,"title":{},"body":{"concurrent/goroutine.html":{}}}],["h",{"_index":1501,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#iota":{}}}],["ha",{"_index":1500,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#iota":{}}}],["hahaha",{"_index":3726,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["hand",{"_index":1406,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["hash",{"_index":1913,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["heap",{"_index":379,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#tcmalloc":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["heap_liv",{"_index":818,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["heapminimum",{"_index":834,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["height",{"_index":2428,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["hello",{"_index":649,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/package.html":{},"basic/package.html#main":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["help",{"_index":2830,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["here",{"_index":1732,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["hexo",{"_index":3584,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#使用文档主题":{},"theme/theme-usage.html#Quick-Start":{}}}],["hi",{"_index":2621,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["html",{"_index":889,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"commands/build.html":{},"commands/build.html#工具":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["html.node",{"_index":909,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["html.parse(resp.bodi",{"_index":885,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["html=c.out",{"_index":3097,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["http",{"_index":883,"title":{},"body":{"basic/error.html":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["http.get(url",{"_index":882,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["http://localhost:8000/pkg",{"_index":2907,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["http://localhost:8082",{"_index":3615,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["http://www.shipengqi.top/kubernet",{"_index":3608,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["http://yoursite.com/blog",{"_index":3605,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["https://github.com/xxx/cdf",{"_index":2217,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["humphrey",{"_index":1401,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["i+j",{"_index":4734,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["i/o",{"_index":4059,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["i/o&#x3002;&#x5b83;&#x4f1a;&#x4fdd;&#x8bc1;&#x8bfb;&#x5199;&#x7684;&#x5185;&#x5bb9;&#x603b;&#x4f1a;&#x4e0e;&#x786c;&#x76d8;&#x4e0a;&#x7684;&#x6570;&#x636e;&#x4fdd;&#x6301;&#x540c;&#x6b65;&#x3002",{"_index":4149,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["icon",{"_index":4725,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["icons[nam",{"_index":4729,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["id",{"_index":906,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/env_config.html":{}}}],["ide&#xff1a",{"_index":2387,"title":{},"body":{"basic/env_config.html#开发工具":{}}}],["idiom",{"_index":1916,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["idl",{"_index":4215,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["ieee",{"_index":3686,"title":{},"body":{"basic/basic_data.html":{}}}],["if&#x2026;els",{"_index":522,"title":{},"body":{"basic/flow.html#if":{}}}],["if…els",{"_index":486,"title":{},"body":{"basic/flow.html":{}}}],["ignor",{"_index":824,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["illeg",{"_index":137,"title":{},"body":{"index.html":{}}}],["imag",{"_index":1546,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["image.decod",{"_index":1549,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["image.imag",{"_index":4726,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["image.rectangl",{"_index":2426,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["image/color",{"_index":1075,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["image/png",{"_index":1543,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["images/favicon.ico",{"_index":3636,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Favicon":{}}}],["import",{"_index":7,"title":{"basic/package.html#import":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#os-Args":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/scope.html":{},"basic/scope.html#作用域":{},"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["importpath",{"_index":2838,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["in.readrun",{"_index":894,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["incubator/hexo",{"_index":3588,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["index",{"_index":124,"title":{"theme/theme-usage.html#Index":{}},"body":{"index.html":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/map.html":{},"basic/map.html#map":{},"theme/theme-usage.html":{}}}],["index.html",{"_index":3625,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["index.md",{"_index":3616,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Index":{}}}],["indirect",{"_index":1279,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["inform",{"_index":143,"title":{},"body":{"index.html":{},"index.html#编码":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["ingrid",{"_index":1403,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["inherit",{"_index":1087,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["init",{"_index":494,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/package.html":{},"basic/package.html#点操作":{},"basic/package.html#初始化包":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["input",{"_index":3059,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["insertaft",{"_index":2401,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["insertbefor",{"_index":2400,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["instal",{"_index":2825,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["installsuffix",{"_index":2864,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["int",{"_index":63,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/scope.html":{},"basic/scope.html#作用域":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#性能分析":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["int(&amp;x",{"_index":81,"title":{},"body":{"index.html":{}}}],["int16",{"_index":3679,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["int32",{"_index":839,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["int64",{"_index":75,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["int8",{"_index":1928,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["intchan",{"_index":2622,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["integ",{"_index":432,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["interchang",{"_index":144,"title":{},"body":{"index.html":{}}}],["interchange&#x201d;&#x7684;&#x7f29;&#x5199;&#xff0c;&#x4e2d;&#x6587;&#x8bd1;&#x4e3a;&#x7f8e;&#x56fd;&#x4fe1;&#x606f;&#x4ea4;&#x6362;&#x6807;&#x51c6;&#x4ee3;&#x7801;&#x3002",{"_index":328,"title":{},"body":{"index.html#编码":{}}}],["interfac",{"_index":12,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#类型断言":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/map.html":{},"basic/map.html#map":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"concurrent/sync_lock.html#sync-Map":{}}}],["intern",{"_index":2908,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["intset",{"_index":1088,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#封装":{}}}],["invalid",{"_index":100,"title":{},"body":{"index.html":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/function.html":{},"basic/function.html#函数作为参数":{}}}],["io",{"_index":891,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"packages/io.html":{},"packages/os.html":{}}}],["io&#x5305;&#x4e2d;&#x7684;&#x63a5;&#x53e3;&#x548c;&#x5de5;&#x5177",{"_index":3451,"title":{"packages/io.html#io包中的接口和工具":{}},"body":{}}],["io&#x5305;&#x4e2d;&#xff0c;&#x6709;&#x8fd9;&#x6837;&#x51e0;&#x4e2a;&#x7528;&#x4e8e;&#x62f7;&#x8d1d;&#x6570;&#x636e;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x5b83;&#x4eec;&#x662f;&#xff1a",{"_index":3471,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.byteread",{"_index":3399,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.bytereader&#xff1b",{"_index":3455,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.bytescann",{"_index":3402,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.bytescanner&#xff1b",{"_index":3458,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.bytewrit",{"_index":3406,"title":{},"body":{"packages/io.html":{}}}],["io.bytewriter&#xff1b",{"_index":3466,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.clos",{"_index":3415,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["io.copi",{"_index":3409,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.copybuff",{"_index":3410,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.copyn",{"_index":3411,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.eof",{"_index":892,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["io.limitedread",{"_index":3420,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.multiread",{"_index":3424,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.pip",{"_index":3426,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.piperead",{"_index":3427,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.pipewrit",{"_index":3428,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.read",{"_index":3397,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{},"packages/io.html#bufio包中的数据类型":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["io.readclos",{"_index":3414,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.reader&#x7684;&#x6269;&#x5c55;&#x63a5;&#x53e3;&#x548c;&#x5b9e;&#x73b0;&#x7c7b;&#x578b",{"_index":3486,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.reader&#xff1b",{"_index":3453,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.readerat",{"_index":3398,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["io.readerat&#xff1b",{"_index":3454,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.readerfrom",{"_index":3408,"title":{},"body":{"packages/io.html":{}}}],["io.readerfrom&#xff1b",{"_index":3468,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.readseek",{"_index":3417,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.readwrit",{"_index":3413,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.readwriteclos",{"_index":3416,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.readwriteseek",{"_index":3419,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.runeread",{"_index":3400,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.runereader&#xff1b",{"_index":3456,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.runescann",{"_index":3403,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.runescanner&#xff1b",{"_index":3459,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.sectionread",{"_index":3421,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.seek",{"_index":3401,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["io.seeker&#xff1b",{"_index":3457,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.stringwrit",{"_index":3407,"title":{},"body":{"packages/io.html":{}}}],["io.stringwriter&#xff1b",{"_index":3467,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.teeread",{"_index":3422,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["io.teereader函数结果值的实际类型。这个函数接受两个参数r和w",{"_index":3423,"title":{},"body":{"packages/io.html":{}}}],["io.writ",{"_index":2900,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#性能分析":{},"packages/io.html":{},"packages/io.html#io包中的接口和工具":{},"packages/io.html#bufio包中的数据类型":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["io.writer&#xff1b",{"_index":3465,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["io.writerat",{"_index":4042,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["io.writerto",{"_index":3404,"title":{},"body":{"packages/io.html":{}}}],["io.writerto&#xff1b",{"_index":3460,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["iota",{"_index":1499,"title":{"basic/constant.html#iota":{}},"body":{"basic/constant.html":{},"basic/constant.html#iota":{}}}],["ioutil",{"_index":2443,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["iphon",{"_index":637,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["ipsum",{"_index":3619,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#添加文档":{}}}],["isatti",{"_index":2256,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["ispalindrom",{"_index":3110,"title":{},"body":{"basic/test.html":{},"basic/test.html#示例函数":{}}}],["ispalindrome(%q",{"_index":3085,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["ispalindrome(test.input",{"_index":3083,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["iterator/go",{"_index":2247,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["ivress",{"_index":3078,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["j",{"_index":1502,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#iota":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["jacquelin",{"_index":1415,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["jason",{"_index":1278,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["java&#xff0c;python&#xff0c;javascript",{"_index":1313,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["javascript",{"_index":1056,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["java，python，javascript",{"_index":1217,"title":{},"body":{"basic/pointer.html":{}}}],["jj",{"_index":696,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["join",{"_index":3704,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["js",{"_index":78,"title":{},"body":{"index.html":{},"concurrent/goroutine.html":{}}}],["js&#x3002",{"_index":4400,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["json",{"_index":1385,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["json.decod",{"_index":1435,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.encod",{"_index":1436,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.marsh",{"_index":1393,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.marshal(movi",{"_index":1417,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.marshalind",{"_index":1421,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.marshalindent(movi",{"_index":1422,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.unmarsh",{"_index":1429,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json.unmarshal(data",{"_index":1430,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["json:\"color,omitempti",{"_index":1397,"title":{},"body":{"basic/json.html":{}}}],["json:\"releas",{"_index":1396,"title":{},"body":{"basic/json.html":{}}}],["json:color,omitempti",{"_index":1448,"title":{},"body":{"basic/json.html#序列化":{}}}],["json:releas",{"_index":1447,"title":{},"body":{"basic/json.html#序列化":{}}}],["k",{"_index":1503,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#iota":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"concurrent/sync_lock.html":{}}}],["k&#xff09;&#x7684;&#x53ef;&#x80fd;&#x6027;&#x3002",{"_index":4837,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["kayak",{"_index":3062,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["kb",{"_index":3143,"title":{},"body":{"basic/test.html":{},"packages/io.html":{}}}],["kb&#x3002",{"_index":3549,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["kb&#xff0c;&#x4e5f;&#x5c31;&#x662f",{"_index":3346,"title":{},"body":{"basic/test.html#性能分析":{}}}],["key",{"_index":497,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/map.html":{},"basic/map.html#map":{},"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["key/valu",{"_index":1912,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["key1",{"_index":1678,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/map.html":{},"basic/map.html#map":{}}}],["key2",{"_index":1680,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/map.html":{},"basic/map.html#map":{}}}],["key:valu",{"_index":1425,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["keyn",{"_index":1682,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["kind",{"_index":2138,"title":{},"body":{"basic/reflect.html":{}}}],["kind&#xff0c;&#x524d;&#x8005;&#x8868;&#x793a;&#x771f;&#x5b9e;&#x7c7b;&#x578b;&#xff08;&#x9759;&#x6001;&#x7c7b;&#x578b;&#xff09;&#xff0c;&#x540e;&#x8005;&#x8868;&#x793a;&#x5e95;&#x5c42;&#x7c7b;&#x578b",{"_index":2174,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["kingdom",{"_index":1093,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["kubernet",{"_index":3592,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["l",{"_index":1504,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#iota":{},"basic/package.html":{},"basic/package.html#包":{},"packages/container.html":{},"packages/container.html#container-包":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["label",{"_index":3627,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["languag",{"_index":4057,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["last",{"_index":436,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["lastbyt",{"_index":3434,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["lastrunes",{"_index":3435,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["ldflag",{"_index":2866,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["learn",{"_index":3593,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["learn.git",{"_index":3612,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["left",{"_index":1704,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/var.html":{},"basic/var.html#简短声明":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["len",{"_index":46,"title":{"basic/slice.html#len-和-cap":{}},"body":{"index.html":{},"index.html#os-Args":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#len-和-cap":{},"basic/slice.html#截取切片":{},"basic/scope.html":{},"basic/scope.html#作用域":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["len(",{"_index":2033,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["len=%d",{"_index":2036,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["len=2",{"_index":2040,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["len=3",{"_index":2045,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["length",{"_index":3751,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["lewd",{"_index":3070,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["libevent/libev",{"_index":4199,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["librari",{"_index":29,"title":{},"body":{"index.html":{},"index.html#package":{},"basic/package.html":{},"basic/package.html#包":{},"basic/package.html#main":{}}}],["link",{"_index":3624,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["linux",{"_index":2197,"title":{},"body":{"basic/env_config.html":{}}}],["linux&#x3001;macos&#x3001;windows&#xff0c;&#x8fd8;&#x662f",{"_index":4080,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["linux、macos、window",{"_index":4039,"title":{},"body":{"packages/os.html":{}}}],["list",{"_index":126,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/package.html":{},"basic/package.html#包":{},"packages/container.html":{},"packages/container.html#container-包":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["list&#39",{"_index":2853,"title":{},"body":{"commands/build.html":{}}}],["list&#x7684;&#x56db;&#x79cd;&#x65b9;&#x6cd5",{"_index":2409,"title":{},"body":{"packages/container.html#container-包":{}}}],["list&apo",{"_index":2950,"title":{},"body":{"commands/build.html#工具":{}}}],["list[%d",{"_index":127,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["liteid",{"_index":2296,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#开发工具":{}}}],["live",{"_index":3071,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["load",{"_index":4700,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["loadiconsonc",{"_index":4724,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["loadiconsonce.do(loadicon",{"_index":4728,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["lock",{"_index":1922,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["lock.lock",{"_index":4679,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["lock.rlock",{"_index":4678,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["lock.runlock",{"_index":4685,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["lock.unlock",{"_index":4681,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["log.fatalf",{"_index":1418,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["log.printf",{"_index":2468,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["logo",{"_index":3623,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["lookup",{"_index":2451,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/test.html":{},"basic/test.html#性能分析":{}}}],["loop",{"_index":503,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{}}}],["lorem",{"_index":3618,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#添加文档":{}}}],["lot",{"_index":2458,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["luke",{"_index":1407,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["m",{"_index":1281,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/map.html":{},"basic/map.html#map":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m&#x3001;g&#x3001;p&#x3002",{"_index":4283,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m&#x3002",{"_index":4635,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m&#xff08;machin",{"_index":4301,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m&#xff0c;&#x4f46;&#x4ecd;&#x7136;&#x6709;&#x5176;&#x4ed6",{"_index":4632,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m&#xff0c;&#x5219",{"_index":4629,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m&#xff0c;&#x5982;&#x6b64;&#x53cd;&#x590d;&#x3002;m",{"_index":4543,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["m[\"titl",{"_index":1280,"title":{},"body":{"basic/pointer.html":{}}}],["m[key",{"_index":1807,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{},"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["m[titl",{"_index":1371,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["mailbox",{"_index":4671,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["main",{"_index":27,"title":{"basic/package.html#main":{}},"body":{"index.html":{},"index.html#三种文件":{},"index.html#package":{},"index.html#os-Args":{},"index.html#声明":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/package.html":{},"basic/package.html#main":{},"basic/package.html#包声明":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/var.html":{},"basic/var.html#简短声明":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/function.html":{},"basic/function.html#函数作为值":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#性能分析":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["main.main",{"_index":902,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{}}}],["mainfile(.ex",{"_index":2886,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["mainfile.go",{"_index":2887,"title":{},"body":{"commands/build.html":{}}}],["mainfile.go&#x4ea7;&#x751f",{"_index":2979,"title":{},"body":{"commands/build.html#工具":{}}}],["make",{"_index":58,"title":{"index.html#make-和-new":{}},"body":{"index.html":{},"index.html#make-和-new":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/slice.html#截取切片":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["make(map[string]str",{"_index":1277,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["male",{"_index":1495,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{}}}],["malloc",{"_index":816,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["mallocgc",{"_index":789,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["man",{"_index":3064,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["manag",{"_index":2227,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["mannag",{"_index":2215,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["map",{"_index":24,"title":{"basic/map.html":{},"basic/map.html#map":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#make-和-new":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/var.html#赋值":{},"basic/map.html":{},"basic/map.html#map":{},"basic/function.html":{},"basic/function.html#参数":{},"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#sync-Map":{}}}],["map[string]str",{"_index":1282,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/map.html":{},"basic/map.html#map":{}}}],["mapnam",{"_index":1924,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["mark",{"_index":2397,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["markdown",{"_index":3617,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#添加文档":{}}}],["marshal",{"_index":1419,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["math.maxfloat32",{"_index":3688,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["math.maxfloat64",{"_index":3690,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["math.sqrt(x",{"_index":2435,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为值":{}}}],["math/cmplx",{"_index":3695,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["math/rand",{"_index":1537,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["max",{"_index":2420,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["maxsmalls",{"_index":797,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["mcqueen",{"_index":1414,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["mean",{"_index":67,"title":{},"body":{"index.html":{},"index.html#类型转换":{}}}],["member",{"_index":1672,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["memori",{"_index":2603,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["memprofile=mem.out",{"_index":3106,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{}}}],["memstats.enablegc",{"_index":829,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["memstats.gc_trigg",{"_index":814,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["memstats.heap_l",{"_index":813,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["met",{"_index":822,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["method",{"_index":629,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["method(point",{"_index":1272,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["method(valu",{"_index":1270,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["method：printmethodpointer）的接收者（receiver：*mypoint",{"_index":1257,"title":{},"body":{"basic/pointer.html":{}}}],["mian",{"_index":1534,"title":{},"body":{"basic/package.html":{},"basic/package.html#main":{}}}],["mismatch",{"_index":102,"title":{},"body":{"index.html":{},"index.html#自定义类型":{}}}],["mistak",{"_index":2829,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["mod",{"_index":2205,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["mode",{"_index":2836,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["modifi",{"_index":2481,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["modifyarray",{"_index":2483,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["modifyarray(array1",{"_index":2480,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["modul",{"_index":28,"title":{"basic/env_config.html#Go-Module":{}},"body":{"index.html":{},"index.html#package":{},"basic/package.html":{},"basic/package.html#包":{},"basic/package.html#main":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["module&#x3002;&#x8fd9;&#x662f;&#x5b98;&#x65b9;&#x63d0;&#x5021;&#x7684;&#x65b0;&#x7684;&#x5305;&#x7ba1;&#x7406;&#xff0c;&#x4e43;&#x81f3;&#x9879;&#x76ee;&#x7ba1;&#x7406;&#x673a;&#x5236;&#xff0c;&#x53ef;&#x4ee5;&#x4e0d;&#x518d;&#x9700;&#x8981",{"_index":2343,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["more",{"_index":2831,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["move",{"_index":2394,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["moveaft",{"_index":2391,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["movebefor",{"_index":2390,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["movetoback",{"_index":2393,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["movetofront",{"_index":2392,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["movi",{"_index":1394,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["mrand",{"_index":1539,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["ms",{"_index":666,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["msg",{"_index":2465,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["msg,time.since(start",{"_index":2469,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["msi",{"_index":2188,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{}}}],["mt.println",{"_index":447,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["mu",{"_index":2449,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["mu.lock",{"_index":2452,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["mu.rlock",{"_index":4658,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["mu.runlock",{"_index":4659,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["mu.unlock",{"_index":2453,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["multipl",{"_index":913,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["multiread",{"_index":3425,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["mutex",{"_index":1074,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/map.html":{},"basic/map.html#map":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["mypoint",{"_index":1249,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["mystr",{"_index":665,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["m、g、p",{"_index":4178,"title":{},"body":{"concurrent/goroutine.html":{}}}],["m（machin",{"_index":4181,"title":{},"body":{"concurrent/goroutine.html":{}}}],["m，如此反复。m",{"_index":4203,"title":{},"body":{"concurrent/goroutine.html":{}}}],["n",{"_index":641,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"commands/build.html":{},"commands/build.html#工具":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["n&#x547d;&#x4ee4;&#x6765;&#x9a8c;&#x8bc1",{"_index":2958,"title":{},"body":{"commands/build.html#工具":{}}}],["n&#x7684;&#x7ed3;&#x679c;&#x7c7b;&#x4f3c;&#xff0c;&#x53ea;&#x662f;&#x8fd9;&#x4e2a;&#x4f1a;&#x6267;&#x884c",{"_index":2948,"title":{},"body":{"commands/build.html#工具":{}}}],["name",{"_index":670,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/package.html":{},"basic/package.html#点操作":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"commands/build.html":{},"commands/build.html#工具":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["name.findvowel",{"_index":676,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["natur",{"_index":2608,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["navig",{"_index":3633,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["navigation.yaml",{"_index":3622,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["necessari",{"_index":1731,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["needzero",{"_index":793,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["net/http",{"_index":2910,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["net/http/internal/chunk",{"_index":2909,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["net/http/pprof",{"_index":3135,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["netpol",{"_index":4210,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["network",{"_index":4212,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["new",{"_index":59,"title":{"index.html#make-和-new":{}},"body":{"index.html":{},"index.html#make-和-new":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#简短声明":{},"packages/container.html":{},"packages/container.html#container-包":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["newfil",{"_index":4044,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["newman",{"_index":1410,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["newmap[key",{"_index":499,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{}}}],["newread",{"_index":3437,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["newreaders",{"_index":3438,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["newstr",{"_index":3742,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["next",{"_index":3760,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["nil",{"_index":628,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/function.html":{},"basic/function.html#函数作为参数":{},"basic/function.html#关键字-defer":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-Map":{}}}],["node_modules/hexo",{"_index":3604,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["nokia",{"_index":636,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["nokiaphon",{"_index":635,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["non",{"_index":880,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"basic/error.html#Recover-捕获异常":{},"basic/test.html":{},"basic/test.html#测试函数":{}}}],["not&#xff09",{"_index":1891,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["note",{"_index":1729,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["ns/op",{"_index":3125,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["num",{"_index":4710,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["num1",{"_index":2421,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["num2",{"_index":2422,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["number",{"_index":2030,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["number2",{"_index":2035,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["number2),number2",{"_index":2039,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["number3",{"_index":2043,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["number3),number3",{"_index":2044,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["numbers1",{"_index":500,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["numbers1[i",{"_index":501,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{}}}],["numbers[1:4",{"_index":2031,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["numbers[4",{"_index":2034,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["numbers[:3",{"_index":2032,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["numbers[one]=11",{"_index":1917,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["o",{"_index":509,"title":{},"body":{"basic/flow.html":{},"basic/interface.html":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/basic_data.html":{}}}],["o_rdwr|o_create|o_trunc",{"_index":4070,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["object",{"_index":374,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#内存块":{},"advance/mm.html#tcmalloc":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["object&#x6587;&#x4ef6;&#xff0c;&#x7531;makefiles&#x9057;&#x7559",{"_index":2975,"title":{},"body":{"commands/build.html#工具":{}}}],["object文件，由makefil",{"_index":2883,"title":{},"body":{"commands/build.html":{}}}],["object目录，由makefil",{"_index":2875,"title":{},"body":{"commands/build.html":{}}}],["ok",{"_index":105,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/var.html":{},"basic/var.html#赋值":{},"basic/map.html":{},"basic/map.html#map":{},"basic/function.html":{},"basic/function.html#错误":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{}}}],["oldmap",{"_index":498,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{}}}],["oldstr",{"_index":3741,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["omitempti",{"_index":1428,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["on",{"_index":1918,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["onc",{"_index":4723,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["op",{"_index":2438,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为参数":{}}}],["op(x",{"_index":2439,"title":{},"body":{"basic/function.html":{},"basic/function.html#函数作为参数":{}}}],["open",{"_index":3092,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["openfil",{"_index":4045,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["openfile(nam",{"_index":4069,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["oper",{"_index":101,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"basic/function.html":{},"basic/function.html#函数作为参数":{},"basic/function.html#关键字-defer":{}}}],["option",{"_index":2845,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["order",{"_index":1096,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["origin",{"_index":2482,"title":{},"body":{"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["os",{"_index":45,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"basic/package.html":{},"basic/package.html#import":{},"packages/os.html":{}}}],["os&#x5305;&#x4e2d;&#x7684",{"_index":4082,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["os&#x5305;&#x4e2d;&#x7684;api",{"_index":4077,"title":{"packages/os.html#os包中的API":{}},"body":{}}],["os&#x5305;&#x4e2d;&#xff0c;&#x6709;&#x8fd9;&#x6837;&#x51e0;&#x4e2a;&#x51fd;&#x6570;&#xff0c;&#x5373;&#xff1a",{"_index":4091,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["os.arg",{"_index":30,"title":{"index.html#os-Args":{}},"body":{"index.html":{},"index.html#os-Args":{},"index.html#空标识符":{}}}],["os.creat",{"_index":4046,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.create函数和os.open",{"_index":4068,"title":{},"body":{"packages/os.html":{}}}],["os.fil",{"_index":4041,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.file&#x7c7b;&#x578b",{"_index":4084,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["os.file&#x7c7b;&#x578b;&#x600e;&#x6837;&#x64cd;&#x4f5c;&#x6587;&#x4ef6",{"_index":4090,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["os.filemod",{"_index":4051,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.modedir",{"_index":4072,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.modenamedpip",{"_index":4073,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.modeperm",{"_index":4075,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.newfil",{"_index":4047,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.o_append",{"_index":4063,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.o_cr",{"_index":4064,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.o_excl",{"_index":4065,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.o_rdonli",{"_index":4050,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.o_rdwr",{"_index":4062,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.o_sync",{"_index":4066,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.o_trunc",{"_index":4067,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.o_wronli",{"_index":4061,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.open",{"_index":1805,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os.open(filenam",{"_index":2446,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["os.openfil",{"_index":4048,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["os包中的api",{"_index":4038,"title":{},"body":{"packages/os.html":{}}}],["out",{"_index":901,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{}}}],["output",{"_index":1262,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["p",{"_index":697,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#为什么需要指针":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/var.html":{},"basic/var.html#赋值":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#parallel-标记":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p&#xff08;processor",{"_index":4288,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p&#xff0c;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x53ef;&#x7528;&#x7684",{"_index":4640,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p&#xff0c;&#x5e76;&#x8fdb;&#x5165",{"_index":4613,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p&#xff0c;&#x90a3;&#x4e48",{"_index":4641,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p(&#x5b9e;&#x8d28;&#x662f;&#x88ab",{"_index":4625,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["p.basicpay",{"_index":698,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["p.i",{"_index":1065,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体比较":{}}}],["p.jj",{"_index":699,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["p.printmethodpoint",{"_index":1273,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["p.printmethodvalu",{"_index":1271,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["p.scalebi",{"_index":1071,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["p.x",{"_index":1064,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["p1",{"_index":3754,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["packag",{"_index":6,"title":{"index.html#package":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#package":{},"index.html#os-Args":{},"index.html#声明":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/package.html":{},"basic/package.html#import":{},"basic/package.html#main":{},"basic/package.html#初始化包":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"commands/build.html":{},"commands/build.html#工具":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["package.json",{"_index":3595,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["packages/test",{"_index":2109,"title":{},"body":{"basic/scope.html":{},"basic/scope.html#作用域":{}}}],["page",{"_index":373,"title":{},"body":{"advance/mm.html":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{}}}],["painc",{"_index":899,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{}}}],["palindrom",{"_index":3080,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["panama",{"_index":3067,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["panic",{"_index":898,"title":{"basic/error.html#Panic-异常":{}},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/map.html":{},"basic/basic_data.html":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Map":{}}}],["panic&#x3002",{"_index":1027,"title":{},"body":{"basic/error.html#Recover-捕获异常":{},"basic/map.html#map":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["panic&#x3002;&#x8fd9;&#x91cc;&#x6240;&#x8bf4;&#x7684;&#x590d;&#x5236;&#x65b9;&#x5f0f;&#xff0c;&#x5305;&#x62ec;&#x4f46;&#x4e0d;&#x9650;&#x4e8e;&#x5728;&#x51fd;&#x6570;&#x95f4;&#x4f20;&#x9012;&#x503c;&#x3001;&#x901a;&#x8fc7;&#x901a;&#x9053;&#x4f20;&#x9012;&#x503c;&#x3001;&#x628a;&#x503c;&#x8d4b;&#x4e88;&#x53d8;&#x91cf;&#x7b49;&#x7b49;&#x3002",{"_index":3914,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["panic&#xff08;&#x5373;&#x8fd0;&#x884c;&#x65f6;&#x6050;&#x614c;&#xff09;&#x3002",{"_index":1984,"title":{},"body":{"basic/map.html#map":{}}}],["panic&#xff0c;&#x90a3;&#x4e48;&#x8be5;&#x51fd;&#x6570;&#x5c31;&#x4e0d;&#x4f1a;&#x505a;&#x4efb;&#x4f55;&#x4e8b;&#x60c5;&#xff0c;&#x5e76;&#x4e14;&#x53ea;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":1037,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["panic&#xff1a",{"_index":4849,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["panick",{"_index":830,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["parallel",{"_index":3128,"title":{"basic/test.html#parallel-标记":{}},"body":{"basic/test.html":{},"basic/test.html#parallel-标记":{}}}],["parent",{"_index":4752,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["parenthes",{"_index":2457,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["pars",{"_index":888,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["pass",{"_index":3048,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#性能测试的测试结果":{}}}],["passpoint",{"_index":1222,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["passvalu",{"_index":1221,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["path",{"_index":2191,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{},"basic/env_config.html#Go-Module":{},"commands/build.html":{},"commands/build.html#工具":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["paul",{"_index":1409,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["peek",{"_index":3446,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["pemp1",{"_index":704,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["pemp2",{"_index":707,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["perm",{"_index":4049,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["perman",{"_index":695,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["person",{"_index":131,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["person.nam",{"_index":1801,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["phase",{"_index":821,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["phone",{"_index":633,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["phone.cal",{"_index":638,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["phylum",{"_index":1094,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["pi",{"_index":1795,"title":{},"body":{"basic/var.html":{},"basic/var.html#声明一组变量":{}}}],["pkg",{"_index":2196,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#工作区":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#性能测试的测试结果":{}}}],["pkg.test",{"_index":3053,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{}}}],["plan",{"_index":3065,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["player",{"_index":1700,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["playground",{"_index":3111,"title":{},"body":{"basic/test.html":{}}}],["playground&#xff0c;&#x53ef;&#x4ee5;&#x5728;&#x6d4f;&#x89c8;&#x5668;&#x4e2d;&#x5728;&#x7ebf;&#x7f16;&#x8f91;&#x548c;&#x8fd0;&#x884c;&#x6bcf;&#x4e2a;&#x793a;&#x4f8b;&#x51fd;&#x6570;&#x3002",{"_index":3227,"title":{},"body":{"basic/test.html#示例函数":{}}}],["playground/validator.v8",{"_index":2291,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["point",{"_index":1061,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/struct.html":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["point).scalebi",{"_index":1066,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["point.scalebi",{"_index":1067,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["pointer",{"_index":795,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["pointx",{"_index":1728,"title":{},"body":{"basic/struct.html":{}}}],["point{x",{"_index":1785,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["pool",{"_index":4756,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["poolcleanup",{"_index":4759,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["pop",{"_index":2613,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["posit",{"_index":2395,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["post",{"_index":496,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{}}}],["powershel",{"_index":3052,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{}}}],["pp",{"_index":1252,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["pp).x&#xff0c;golang",{"_index":1353,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["pp).x，golang",{"_index":1254,"title":{},"body":{"basic/pointer.html":{}}}],["pp.i",{"_index":1255,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["pp.printmethodpoint",{"_index":1275,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["pp.printmethodvalu",{"_index":1274,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["pp.x",{"_index":1253,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["pprof",{"_index":3107,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{},"basic/test.html#性能分析":{}}}],["pptr",{"_index":1214,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{}}}],["prefix",{"_index":1796,"title":{},"body":{"basic/var.html":{},"basic/var.html#声明一组变量":{}}}],["print",{"_index":434,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["printf",{"_index":2429,"title":{},"body":{"basic/function.html":{},"basic/function.html#可变参数":{}}}],["printfuncpoint",{"_index":1251,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printfuncpointer(p",{"_index":1265,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printfuncpointer(pp",{"_index":1267,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printfuncvalu",{"_index":1250,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printfuncvalue(p",{"_index":1261,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printfuncvalue(pp",{"_index":1263,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["println",{"_index":2618,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["println(hello",{"_index":1536,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["printmethodpoint",{"_index":1258,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["printmethodvalu",{"_index":1256,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["proactiv",{"_index":1698,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["process",{"_index":2824,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["produc",{"_index":3090,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["profil",{"_index":3089,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{},"basic/test.html#性能分析":{}}}],["profile&#xff09",{"_index":3322,"title":{},"body":{"basic/test.html#性能分析":{}}}],["profile&#xff09;&#x3001;&#x5185;&#x5b58;&#x6982;&#x8981;&#x6587;&#x4ef6;&#xff08;mem",{"_index":3319,"title":{},"body":{"basic/test.html#性能分析":{}}}],["profile&#xff09;&#x548c;&#x963b;&#x585e;&#x6982",{"_index":3320,"title":{},"body":{"basic/test.html#性能分析":{}}}],["profile）、内存概要文件（mem",{"_index":3137,"title":{},"body":{"basic/test.html":{}}}],["program",{"_index":810,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"commands/build.html":{},"commands/build.html#工具":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["project",{"_index":3626,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["project.html",{"_index":3630,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["projects/mi",{"_index":3629,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["protocol",{"_index":1387,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"basic/test.html":{},"basic/test.html#性能分析":{}}}],["ptr",{"_index":454,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组传入函数":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{}}}],["push",{"_index":2612,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["pushback",{"_index":2403,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["pushfront",{"_index":2402,"title":{},"body":{"packages/container.html":{},"packages/container.html#container-包":{}}}],["push到channel",{"_index":2606,"title":{},"body":{"concurrent/channel.html":{}}}],["put",{"_index":4755,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["puzzlers/article20/q2",{"_index":3112,"title":{},"body":{"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["puzzlers/article20/q3",{"_index":3117,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{}}}],["p（processor",{"_index":4180,"title":{},"body":{"concurrent/goroutine.html":{}}}],["q",{"_index":438,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体比较":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["q.i",{"_index":1708,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体比较":{}}}],["q.point",{"_index":1086,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["q.scalebi",{"_index":1084,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["q.x",{"_index":1707,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体比较":{}}}],["q\\n",{"_index":3766,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["quick",{"_index":3586,"title":{"theme/theme-usage.html#Quick-Start":{}},"body":{"theme/theme-usage.html":{}}}],["r",{"_index":439,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/oop.html":{},"basic/oop.html#方法":{},"commands/build.html":{},"commands/build.html#工具":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["r&#x2026",{"_index":938,"title":{},"body":{"basic/error.html#error-类型":{}}}],["r&#x503c;&#x4f1a;&#x62e5;&#x6709;&#x4e00;&#x4e2a;&#x9ed8;&#x8ba4;&#x5c3a;&#x5bf8;&#x7684;&#x7f13;&#x51b2;&#x533a;&#x3002;&#x8fd9;&#x4e2a;&#x9ed8;&#x8ba4;&#x5c3a;&#x5bf8;&#x662f",{"_index":3547,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["r.scalebi",{"_index":1069,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["race",{"_index":2850,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"concurrent/goroutine.html":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["race&#x7684;&#x65f6;&#x5019;&#x9ed8;&#x8ba4;&#x5df2;&#x7ecf;&#x662f",{"_index":2956,"title":{},"body":{"commands/build.html#工具":{}}}],["race,&#x5927;&#x5bb6;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":2957,"title":{},"body":{"commands/build.html#工具":{}}}],["radiu",{"_index":1049,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["rang",{"_index":25,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#空标识符":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/map.html":{},"basic/map.html#map":{},"basic/function.html":{},"basic/function.html#可变参数":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#测试函数":{}}}],["rate",{"_index":3147,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["rd",{"_index":3433,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["read",{"_index":896,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{},"packages/io.html":{},"packages/io.html#io包中的接口和工具":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["read(p",{"_index":640,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["read)\\n",{"_index":3756,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["readall(f",{"_index":2448,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["readbyt",{"_index":3448,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["reader",{"_index":639,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["reader&#x503c;&#x7684",{"_index":3578,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["reader&#x503c;&#x7684;&#x8bfb;&#x53d6;&#x65b9;&#x6cd5;&#x4e00;&#x822c;&#x90fd;&#x4f1a;&#x5148;&#x4ece;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x7684;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#x3002;&#x540c;&#x65f6;&#xff0c;&#x5728;&#x5fc5;&#x8981;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x4eec;&#x8fd8;&#x4f1a;&#x9884;&#x5148;&#x4ece;&#x5e95;&#x5c42;&#x8bfb;&#x53d6;&#x5668;&#x90a3;&#x91cc;&#x8bfb;&#x51fa;&#x4e00;&#x90e8;&#x5206;&#x6570;&#x636e;&#xff0c;&#x5e76;&#x6682;&#x5b58;&#x4e8e;&#x7f13;&#x51b2;&#x533a;&#x4e4b;&#x4e2d;&#x4ee5;&#x5907;&#x540e;&#x7528;&#x3002",{"_index":3529,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["readfil",{"_index":2444,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["readgogc",{"_index":838,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["readlin",{"_index":3449,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["readrun",{"_index":3436,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["readslic",{"_index":3447,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["readstr",{"_index":3450,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["readwrit",{"_index":648,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["readwriteclos",{"_index":646,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["receiv",{"_index":1073,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{}}}],["recov",{"_index":907,"title":{"basic/error.html#Recover-捕获异常":{}},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["rect",{"_index":2425,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["recvcond",{"_index":4674,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["recvcond.sign",{"_index":4682,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["recvcond.wait",{"_index":4684,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["red",{"_index":1080,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{}}}],["reflect.deepequ",{"_index":2159,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["reflect.deepequal(got",{"_index":2164,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["reflect.typ",{"_index":2132,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["reflect.typeof",{"_index":2131,"title":{"basic/reflect.html#reflect-TypeOf":{}},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["reflect.typeof(a",{"_index":2135,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["reflect.typeof(b",{"_index":2142,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["reflect.typeof(c",{"_index":2143,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["reflect.valu",{"_index":2148,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["reflect.valueof",{"_index":2147,"title":{"basic/reflect.html#reflect-ValueOf":{}},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["reflect.valueof(x",{"_index":2153,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["reformat",{"_index":2823,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["releas",{"_index":1423,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["remov",{"_index":2811,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["replica",{"_index":4705,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["repo",{"_index":3610,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["report",{"_index":2819,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["requir",{"_index":2228,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["resettim",{"_index":3133,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试函数中的计时器":{}}}],["resp",{"_index":881,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["resp.body.clos",{"_index":886,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["resservir",{"_index":3077,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["rest",{"_index":3079,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["result",{"_index":2423,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{}}}],["return",{"_index":9,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#自定义类型":{},"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#String-方法":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#可变参数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#闭包":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"commands/build.html":{},"commands/build.html#工具":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-Once":{}}}],["rf",{"_index":2222,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["right",{"_index":1705,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["rlock",{"_index":4656,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["rlocker",{"_index":4677,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["rm",{"_index":2221,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["root",{"_index":3591,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["routin",{"_index":1921,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["run",{"_index":48,"title":{},"body":{"index.html":{},"index.html#os-Args":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/env_config.html":{},"basic/env_config.html#Go-Module":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#性能测试的测试结果":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["run=coverag",{"_index":3099,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["run=french|can",{"_index":3049,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试":{}}}],["rune",{"_index":504,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{}}}],["runes(char",{"_index":3767,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["runes(hex",{"_index":3768,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["runlock",{"_index":4657,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["runnabl",{"_index":4205,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["runnable&#xff0c",{"_index":4643,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["runnable&#xff0c;&#x653e;&#x5165;&#x5230;&#x67d0",{"_index":4618,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["runtim",{"_index":786,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/error.html":{},"basic/error.html#Panic-异常":{},"basic/test.html":{},"basic/test.html#性能分析":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["runtime.gc",{"_index":802,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["runtime.goexit",{"_index":4196,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["runtime.gomaxproc",{"_index":3127,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试的测试结果":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["runtime.gomaxprocs(0",{"_index":3129,"title":{},"body":{"basic/test.html":{},"basic/test.html#parallel-标记":{}}}],["runtime.gosch",{"_index":4194,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["runtime.memprofiler",{"_index":3140,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime.readmemstat",{"_index":3145,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime/pprof",{"_index":3134,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime/pprof.lookup",{"_index":3151,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime/pprof.profil",{"_index":3148,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime/trac",{"_index":3136,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["runtime_registerpoolcleanup(poolcleanup",{"_index":4758,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["s",{"_index":54,"title":{},"body":{"index.html":{},"index.html#空标识符":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/oop.html":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["s%s%s%s%s%s%",{"_index":1101,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["s,%s\\n",{"_index":3733,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["s,是数组arr",{"_index":2020,"title":{},"body":{"basic/slice.html":{}}}],["s[5",{"_index":3701,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["s\\n",{"_index":129,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#String-方法":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["safe",{"_index":1920,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["salari",{"_index":1702,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["salarycalcul",{"_index":690,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["salarycalculatorpemp1",{"_index":711,"title":{},"body":{"basic/interface.html":{}}}],["salarycalculator{pemp1",{"_index":779,"title":{},"body":{"basic/interface.html#接口":{}}}],["sam",{"_index":671,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["sapn",{"_index":378,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#tcmalloc":{}}}],["saw",{"_index":3073,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["scale",{"_index":1804,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["scale&#xff0c;&#x4f46;&#x662f;&#x7701;&#x53bb;&#x4e86;&#x5bf9;&#x53d8;&#x91cf;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x91cd;&#x590d;&#x8ba1;&#x7b97",{"_index":1846,"title":{},"body":{"basic/var.html#赋值":{}}}],["scalebi",{"_index":1062,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["scanner",{"_index":3430,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["schedul",{"_index":4202,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["script",{"_index":3601,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["se",{"_index":3076,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["second",{"_index":4695,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["seed",{"_index":3590,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["seed.git",{"_index":3589,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["seek",{"_index":3418,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["select",{"_index":11,"title":{"basic/flow.html#select":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/flow.html":{},"basic/flow.html#select":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["self",{"_index":1060,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#方法":{}}}],["sema",{"_index":4648,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["semaphor",{"_index":4650,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["semi",{"_index":3082,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["sendcond",{"_index":4672,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sendcond.sign",{"_index":4686,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sendcond.wait",{"_index":4680,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sep",{"_index":55,"title":{},"body":{"index.html":{},"index.html#空标识符":{}}}],["server",{"_index":3599,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["set",{"_index":154,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["set&#x3002;&#x6240;&#x4ee5;&#xff0c;utf",{"_index":349,"title":{},"body":{"index.html#编码":{}}}],["setblockprofiler",{"_index":3146,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["setgcpercent(readgogc",{"_index":833,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["set。所以，utf",{"_index":155,"title":{},"body":{"index.html":{}}}],["share",{"_index":2602,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["shouldhelpgc",{"_index":796,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["show",{"_index":2813,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["side",{"_index":1800,"title":{},"body":{"basic/var.html":{},"basic/var.html#简短声明":{}}}],["sidebar",{"_index":3621,"title":{"theme/theme-usage.html#Sidebar":{}},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["sign",{"_index":4709,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["signal",{"_index":4683,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["simpl",{"_index":3749,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["simul",{"_index":2462,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["size",{"_index":430,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["size]&#x7c7b;&#x578b",{"_index":459,"title":{},"body":{"basic/array.html#数组":{}}}],["sleep",{"_index":2464,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["sleep&#x3002",{"_index":4646,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["slice",{"_index":26,"title":{"basic/slice.html":{},"basic/slice.html#slice":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#make-和-new":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/function.html":{},"basic/function.html#参数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["slice=%v\\n",{"_index":2038,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["slice=[0",{"_index":2042,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["slice=[2",{"_index":2047,"title":{},"body":{"basic/slice.html":{},"basic/slice.html#截取切片":{}}}],["slow",{"_index":2463,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["soletitl",{"_index":908,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["someth",{"_index":918,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["sort",{"_index":1926,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["sourc",{"_index":2806,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#覆盖率":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Index":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{}}}],["source/usag",{"_index":3620,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#添加文档":{}}}],["sourcestr",{"_index":3739,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["sourcestr中，把oldstr的前n个替换成newstr，返回一个新字符串，如果n0",{"_index":3738,"title":{},"body":{"basic/basic_data.html":{}}}],["span",{"_index":372,"title":{},"body":{"advance/mm.html":{},"advance/mm.html#内存块":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["span&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x4ee5;&#x9875;&#x6570;&#x4e3a;&#x5355;&#x4f4d;&#x5c06",{"_index":401,"title":{},"body":{"advance/mm.html#内存块":{}}}],["span&#xff0c;&#x6b64;&#x65f6",{"_index":405,"title":{},"body":{"advance/mm.html#内存块":{}}}],["span&#xff0c;&#x9700;&#x8981;&#x7684;&#x65f6;&#x5019;&#x5411;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7533;&#x8bf7;&#x65b0;&#x7684;&#x5185;&#x5b58;&#x3002",{"_index":422,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["speci",{"_index":1099,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#String-方法":{}}}],["specifi",{"_index":2826,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["spinlock",{"_index":4693,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["spoke",{"_index":1714,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["sql",{"_index":2912,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["src",{"_index":1545,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{},"basic/env_config.html":{},"basic/env_config.html#工作区":{},"commands/build.html":{},"commands/build.html#工具":{},"packages/io.html":{},"packages/io.html#io包中的接口和工具":{}}}],["src/pkg/sync/pool.go",{"_index":4757,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["stack",{"_index":1218,"title":{},"body":{"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["standard",{"_index":141,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["start",{"_index":2466,"title":{"theme/theme-usage.html#Quick-Start":{}},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"commands/build.html":{},"commands/build.html#工具":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["startcpuprofil",{"_index":3138,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["startindex时将表示从arr",{"_index":2026,"title":{},"body":{"basic/slice.html":{}}}],["starttim",{"_index":3131,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试函数中的计时器":{}}}],["statu",{"_index":905,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{}}}],["std",{"_index":1532,"title":{},"body":{"basic/package.html":{},"basic/package.html#包":{}}}],["stderr.\\n",{"_index":4058,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["steve",{"_index":1413,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["stop",{"_index":4206,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["stopcpuprofil",{"_index":3139,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["stoptim",{"_index":3132,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能测试函数中的计时器":{}}}],["store",{"_index":4699,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["store(v6",{"_index":4707,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["store）和交换（swap",{"_index":4690,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["str",{"_index":505,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["str2",{"_index":3725,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strconv.formatbool",{"_index":2442,"title":{},"body":{"basic/function.html":{},"basic/function.html#错误":{}}}],["stride",{"_index":4732,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["string",{"_index":56,"title":{"basic/oop.html#String-方法":{}},"body":{"index.html":{},"index.html#空标识符":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{}}}],["string2",{"_index":3697,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["string[i",{"_index":3698,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["string[index",{"_index":3696,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strings.build",{"_index":3708,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strings.contain",{"_index":2441,"title":{},"body":{"basic/function.html":{},"basic/function.html#错误":{}}}],["strings.contains(str",{"_index":3715,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strings.join",{"_index":3703,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strings.read",{"_index":3396,"title":{},"body":{"packages/io.html":{},"packages/io.html#io包中的接口和工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strings.split",{"_index":3729,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strings.trim",{"_index":3734,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["strsize",{"_index":1496,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{}}}],["strsplit",{"_index":3728,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["struct",{"_index":13,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/test.html":{},"basic/test.html#测试函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["struct]\\n",{"_index":4711,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["struct_nam",{"_index":630,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["struct_name_vari",{"_index":632,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["struct_variable_typ",{"_index":1671,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["structure_variable_typ",{"_index":1677,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["structure_variable_typevalue1",{"_index":1675,"title":{},"body":{"basic/struct.html":{}}}],["structure_variable_type{value1",{"_index":1739,"title":{},"body":{"basic/struct.html#结构体":{}}}],["struct{}]\\n",{"_index":5034,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["stw(stop",{"_index":785,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["subject",{"_index":1686,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["sublim",{"_index":2297,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#开发工具":{}}}],["suffix",{"_index":2865,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["sum",{"_index":64,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/function.html":{},"basic/function.html#可变参数":{}}}],["sumal",{"_index":2162,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["swap",{"_index":2424,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{},"concurrent/sync_lock.html":{}}}],["swap&#xff0c;&#x7b80;&#x79f0",{"_index":4963,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["swig",{"_index":2888,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["switch",{"_index":18,"title":{"basic/flow.html#switch":{}},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#switch":{},"basic/flow.html#select":{},"basic/flow.html#for":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["symbol",{"_index":2815,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["sync",{"_index":4184,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["sync.cond",{"_index":4669,"title":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sync.map",{"_index":4760,"title":{"concurrent/sync_lock.html#sync-Map":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Map":{}}}],["sync.mutex",{"_index":2450,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#sync-Once":{}}}],["sync.mutex).lock",{"_index":4765,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["sync.newcond",{"_index":4676,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sync.newcond(&amp;lock",{"_index":4673,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sync.newcond(lock.rlock",{"_index":4675,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sync.onc",{"_index":4722,"title":{"concurrent/sync_lock.html#sync-Once":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["sync.pool",{"_index":4754,"title":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["sync.rwmutex",{"_index":4647,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["sync.waitgroup",{"_index":4185,"title":{"concurrent/sync_lock.html#sync-WaitGroup":{}},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["sync.waitgroup).wait",{"_index":4766,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["sync.waitgroup]\\n",{"_index":4719,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["sync/atom",{"_index":4192,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["sync/atomic.valu",{"_index":4698,"title":{"concurrent/sync_lock.html#sync-atomic-Value":{}},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"concurrent/sync_lock.html#sync-Map":{}}}],["syntax",{"_index":2839,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["syscal",{"_index":4211,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["syscall.stderr",{"_index":4053,"title":{},"body":{"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["sysmon",{"_index":4207,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["system",{"_index":4204,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["t",{"_index":108,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/test.html":{},"basic/test.html#测试函数":{}}}],["t.error",{"_index":3055,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["t.errorf",{"_index":2165,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/test.html":{},"basic/test.html#测试函数":{}}}],["t.fatal",{"_index":3056,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["t.fatalf",{"_index":3057,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["t.kind",{"_index":2137,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["t.parallel",{"_index":3130,"title":{},"body":{"basic/test.html":{},"basic/test.html#parallel-标记":{}}}],["t\\n",{"_index":450,"title":{},"body":{"basic/array.html":{},"basic/array.html#数组":{}}}],["ta",{"_index":2139,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["tabl",{"_index":1914,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{}}}],["tag",{"_index":1424,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["tag，详细的tag",{"_index":2872,"title":{},"body":{"commands/build.html":{}}}],["tb",{"_index":2140,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["tc",{"_index":2141,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["tc.kind",{"_index":2146,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{}}}],["tcmalloc",{"_index":375,"title":{"advance/mm.html#tcmalloc":{}},"body":{"advance/mm.html":{},"advance/mm.html#tcmalloc":{}}}],["team",{"_index":1699,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["test",{"_index":453,"title":{"basic/test.html#go-test-命令执行的主要测试流程":{}},"body":{"basic/array.html":{},"basic/array.html#数组传入函数":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/package.html":{},"basic/package.html#包声明":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#示例函数":{},"basic/test.html#go-test-命令执行的主要测试流程":{},"basic/test.html#功能测试的测试结果":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#parallel-标记":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["test&apo",{"_index":3195,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["test.input",{"_index":3086,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["test.out",{"_index":2879,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["test.want",{"_index":3084,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["testcach",{"_index":3114,"title":{},"body":{"basic/test.html":{},"basic/test.html#功能测试的测试结果":{}}}],["testflag",{"_index":2840,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["testfunc",{"_index":2842,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["testing.b",{"_index":3102,"title":{},"body":{"basic/test.html":{},"basic/test.html#基准测试":{},"basic/test.html#性能测试函数中的计时器":{}}}],["testing.t",{"_index":2161,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/test.html#基准测试":{}}}],["testispalindrom",{"_index":3058,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["testnam",{"_index":3054,"title":{},"body":{"basic/test.html":{},"basic/test.html#测试函数":{}}}],["testsumal",{"_index":2160,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["test目录，由makefil",{"_index":2876,"title":{},"body":{"commands/build.html":{}}}],["test记录，由makefil",{"_index":2880,"title":{},"body":{"commands/build.html":{}}}],["text",{"_index":652,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Sidebar":{}}}],["theme",{"_index":3585,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#使用文档主题":{},"theme/theme-usage.html#Quick-Start":{}}}],["theme_config",{"_index":3635,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Favicon":{}}}],["thread",{"_index":1919,"title":{},"body":{"basic/map.html":{},"basic/map.html#map":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["thread&#xff0c;&#x56e0;&#x4e3a;&#x9664;&#x4e86;&#x6bcf;&#x4e2a",{"_index":4472,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["thread&#xff0c;&#x5b83;&#x5e76;&#x4e0d;&#x77e5;&#x9053;&#x4ec0;&#x4e48;&#x662f",{"_index":4494,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["thread&#xff0c;&#x5c31;&#x8981;&#x5728;&#x5c11;&#x91cf",{"_index":4467,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["time",{"_index":2902,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["time.aft",{"_index":2619,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["time.afterfunc(time.second",{"_index":2623,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["time.duration.second",{"_index":2904,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["time.now",{"_index":2467,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["time.second",{"_index":2461,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["time.sinc",{"_index":2903,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["time.sleep",{"_index":2460,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["time.sleep(time.millisecond",{"_index":4182,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["time.sleep(time.nanosecond",{"_index":4190,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["timeout",{"_index":2620,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["titl",{"_index":910,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"theme/theme-usage.html":{},"theme/theme-usage.html#添加文档":{}}}],["toml",{"_index":2262,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["tool",{"_index":2805,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"basic/test.html#性能分析":{}}}],["topic",{"_index":2833,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["total",{"_index":2430,"title":{},"body":{"basic/function.html":{},"basic/function.html#可变参数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["total_count",{"_index":1427,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["totalcount",{"_index":1426,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["totalexpens",{"_index":701,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["totalexpense(employe",{"_index":712,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["trace",{"_index":2455,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{},"basic/test.html":{},"basic/test.html#性能分析":{}}}],["trail",{"_index":1730,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["transform",{"_index":150,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["tree",{"_index":1703,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["trigger",{"_index":4186,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["trigger(i",{"_index":4191,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{}}}],["tripl",{"_index":2474,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["true",{"_index":109,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#for":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/var.html":{},"basic/var.html#声明一组变量":{},"basic/var.html#赋值":{},"basic/scope.html":{},"basic/scope.html#作用域":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#布尔类型":{},"basic/basic_data.html#字符串":{}}}],["true/fals",{"_index":77,"title":{},"body":{"index.html":{},"index.html#类型转换":{}}}],["typ",{"_index":791,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["type",{"_index":23,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#声明":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#封装":{},"basic/oop.html#String-方法":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/function.html":{},"basic/function.html#函数作为参数":{},"commands/build.html":{},"commands/build.html#工具":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#Sidebar":{}}}],["type&#xff09;&#x3002",{"_index":289,"title":{},"body":{"index.html#未命名类型":{}}}],["type\\n",{"_index":133,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["u",{"_index":668,"title":{},"body":{"basic/interface.html":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["u+0061",{"_index":148,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["u+”作为前缀。比如，英文字母字符“a",{"_index":147,"title":{},"body":{"index.html":{}}}],["uc",{"_index":149,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["uint",{"_index":3671,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["uint16",{"_index":3672,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{}}}],["uint32",{"_index":3674,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-Once":{}}}],["uint64",{"_index":1090,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#封装":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["uint8",{"_index":73,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/map.html":{},"basic/map.html#map":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["uint8(255",{"_index":71,"title":{},"body":{"index.html":{},"index.html#类型转换":{}}}],["uintptr",{"_index":790,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"packages/os.html":{},"packages/os.html#os包中的API":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["unexpect",{"_index":914,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["unicod",{"_index":146,"title":{},"body":{"index.html":{},"index.html#编码":{},"basic/flow.html":{},"basic/flow.html#for":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{}}}],["unicode/utf16",{"_index":1547,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["univers",{"_index":152,"title":{},"body":{"index.html":{},"index.html#编码":{}}}],["unknown",{"_index":1493,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{},"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["unlock",{"_index":4655,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["unmarsh",{"_index":1432,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["unnam",{"_index":103,"title":{},"body":{"index.html":{}}}],["unread",{"_index":3764,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["unreadbyt",{"_index":3762,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["unsaf",{"_index":794,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["unsafe.point",{"_index":3745,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-Map":{}}}],["unsafe.sizeof",{"_index":1497,"title":{},"body":{"basic/constant.html":{},"basic/constant.html#常量":{}}}],["until",{"_index":807,"title":{},"body":{"advance/gc.html":{},"advance/gc.html#垃圾回收":{}}}],["unus",{"_index":1544,"title":{},"body":{"basic/package.html":{},"basic/package.html#点操作":{}}}],["updat",{"_index":2821,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["url",{"_index":3606,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["url,err",{"_index":890,"title":{},"body":{"basic/error.html":{},"basic/error.html#error-类型":{}}}],["us",{"_index":97,"title":{},"body":{"index.html":{},"index.html#自定义类型":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["usag",{"_index":2807,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["uselesschan",{"_index":2614,"title":{},"body":{"concurrent/channel.html":{},"concurrent/channel.html#channel":{}}}],["users/haolin/geektime/golang_puzzlers/src/puzzlers/article19/q0/demo47.go:5",{"_index":903,"title":{},"body":{"basic/error.html":{},"basic/error.html#Panic-异常":{}}}],["utf",{"_index":136,"title":{},"body":{"index.html":{},"index.html#编码":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["utf16.decod",{"_index":1550,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["v",{"_index":673,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/error.html":{},"basic/error.html#error-类型":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/var.html":{},"basic/var.html#赋值":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/test.html":{},"basic/test.html#测试":{},"basic/test.html#测试函数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["v.calculatesalari",{"_index":703,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["v.findvowel",{"_index":674,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["v0.0.0",{"_index":2233,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v0.3.0",{"_index":2289,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.0.0",{"_index":2242,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.0.3",{"_index":2275,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.1.2",{"_index":2260,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.2.0",{"_index":2263,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.3.0",{"_index":2269,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.4.7",{"_index":2230,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v1.8.0",{"_index":2254,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v2",{"_index":1555,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["v2.2.2",{"_index":2295,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v6",{"_index":4703,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["v8.0.0",{"_index":2292,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["v\\n",{"_index":2150,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/function.html":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["val",{"_index":2152,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/function.html":{},"basic/function.html#可变参数":{}}}],["val.field",{"_index":2154,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{}}}],["val1",{"_index":488,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#switch":{}}}],["val2",{"_index":490,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#switch":{}}}],["val3,val4",{"_index":491,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#switch":{}}}],["valu",{"_index":104,"title":{},"body":{"index.html":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#for":{},"basic/error.html":{},"basic/error.html#Recover-捕获异常":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/map.html":{},"basic/map.html#map":{},"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/function.html":{},"basic/function.html#可变参数":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#原子操作":{}}}],["value1",{"_index":1679,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/map.html":{},"basic/map.html#map":{}}}],["value2",{"_index":1681,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/map.html":{},"basic/map.html#map":{}}}],["value2...valuen",{"_index":1676,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["valuen",{"_index":1683,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["var",{"_index":4,"title":{},"body":{"index.html":{},"index.html#Golang-介绍":{},"index.html#空标识符":{},"index.html#声明":{},"index.html#类型转换":{},"index.html#自定义类型":{},"basic/array.html":{},"basic/array.html#数组":{},"basic/array.html#二维数组":{},"basic/interface.html":{},"basic/interface.html#接口":{},"basic/oop.html":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#指向指针的指针":{},"basic/json.html":{},"basic/json.html#序列化":{},"basic/package.html":{},"basic/package.html#初始化包":{},"basic/struct.html":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/map.html":{},"basic/map.html#map":{},"basic/slice.html":{},"basic/slice.html#slice":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"basic/test.html":{},"basic/test.html#测试函数":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["var1",{"_index":487,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#switch":{}}}],["variabl",{"_index":631,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"basic/var.html":{},"basic/var.html#简短声明":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["variable_nam",{"_index":1674,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["vender",{"_index":2218,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["vendor",{"_index":2199,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["vendor&#xff0c;&#x7136;&#x540e;&#x57fa;&#x4e8",{"_index":2360,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["version",{"_index":2827,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["vet",{"_index":2828,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["vowel",{"_index":667,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["vowelsfind",{"_index":663,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{}}}],["vs",{"_index":2299,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#开发工具":{}}}],["w",{"_index":1715,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{},"commands/build.html":{},"commands/build.html#工具":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["w.circle.center.i",{"_index":1717,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.circle.center.x",{"_index":1716,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.circle.point.i",{"_index":1723,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.circle.point.x",{"_index":1721,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.circle.radiu",{"_index":1718,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.i",{"_index":1722,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.radiu",{"_index":1724,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.spoke",{"_index":1719,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["w.x",{"_index":1720,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["wa",{"_index":3720,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["wait",{"_index":4213,"title":{},"body":{"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["waitgroup",{"_index":4713,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["wait）、单发通知（signal）和广播通知（broadcast",{"_index":4670,"title":{},"body":{"concurrent/sync_lock.html":{}}}],["wang",{"_index":3714,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["wangdi",{"_index":3712,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["want",{"_index":2163,"title":{},"body":{"basic/reflect.html":{},"basic/reflect.html#reflect-ValueOf":{},"basic/test.html":{},"basic/test.html#测试函数":{}}}],["wc",{"_index":1533,"title":{},"body":{"basic/package.html":{},"basic/package.html#包":{}}}],["web",{"_index":3093,"title":{},"body":{"basic/test.html":{},"basic/test.html#覆盖率":{}}}],["wg",{"_index":4717,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["wg.add",{"_index":4718,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["wg.add(strid",{"_index":4733,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["wg.done",{"_index":4720,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["wg.wait",{"_index":4721,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["wheel",{"_index":1713,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["wheelcirclepoint",{"_index":1727,"title":{},"body":{"basic/struct.html":{}}}],["wheelx",{"_index":1726,"title":{},"body":{"basic/struct.html":{}}}],["wheel{circle{point",{"_index":1784,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["wheel{x",{"_index":1782,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["width",{"_index":2427,"title":{},"body":{"basic/function.html":{},"basic/function.html#声明函数":{}}}],["window",{"_index":2187,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#安装":{},"basic/env_config.html#工作区":{},"basic/test.html":{},"basic/test.html#测试":{}}}],["withcancel",{"_index":4748,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["withdeadlin",{"_index":4749,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["withtimeout",{"_index":4750,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["withvalu",{"_index":4751,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["word",{"_index":1089,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#封装":{}}}],["work",{"_index":2459,"title":{},"body":{"basic/function.html":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["work&#x2026",{"_index":2561,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["world",{"_index":650,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"advance/gc.html":{},"basic/constant.html":{},"basic/constant.html#常量":{},"basic/package.html":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["world&#xff09;&#xff0c",{"_index":846,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["wr",{"_index":3441,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["write",{"_index":2897,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"packages/os.html":{},"packages/os.html#os包中的API":{}}}],["writebyt",{"_index":3444,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["writeheapprofil",{"_index":3144,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["writer",{"_index":647,"title":{},"body":{"basic/interface.html":{},"basic/interface.html#接口":{},"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{}}}],["writerun",{"_index":3445,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["writestr",{"_index":3443,"title":{},"body":{"packages/io.html":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["writeto",{"_index":3149,"title":{},"body":{"basic/test.html":{},"basic/test.html#性能分析":{}}}],["written",{"_index":2898,"title":{},"body":{"commands/build.html":{},"commands/build.html#工具":{}}}],["wrong",{"_index":919,"title":{},"body":{"basic/error.html":{},"basic/error.html#Recover-捕获异常":{}}}],["www.runoob.com",{"_index":1691,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体":{}}}],["x",{"_index":79,"title":{},"body":{"index.html":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/flow.html":{},"basic/flow.html#for":{},"advance/gc.html":{},"advance/gc.html#垃圾回收":{},"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#指针":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#函数作为值":{},"basic/function.html#函数作为参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"commands/build.html":{},"commands/build.html#工具":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["x&amp;^i",{"_index":1865,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{}}}],["x+2",{"_index":1809,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["x,result",{"_index":2472,"title":{},"body":{"basic/function.html":{},"basic/function.html#关键字-defer":{}}}],["x.(t",{"_index":106,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["x.(type",{"_index":135,"title":{},"body":{"index.html":{},"index.html#类型断言":{}}}],["x.d.e.f",{"_index":1711,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x.f",{"_index":1710,"title":{},"body":{"basic/struct.html":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x2013;&#x4e0a;&#x4e0b;&#x6587;&#xff09;&#xff0c;&#x76f4;&#x63a5;&#x5207;&#x6362;&#x4e0b;&#x4e00;&#x4e2a;&#x7a0b;&#x5e8f;&#xff0c;&#x5c31;&#x4f1a;&#x4e22;&#x5931;&#x4e0a;&#x4e00;&#x4e2a",{"_index":4232,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x2018;&#x8005;&#x2019;&#x4ee3;&#x8868;&#x7684;&#x5c31;&#x90fd;&#x662f;&#x4e00;&#x4e2a",{"_index":4019,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x201c",{"_index":354,"title":{},"body":{"index.html#编码":{}}}],["x201c;&#x53d1;&#x9001;&#x8005;&#x201d",{"_index":2659,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x201c;&#x53ef;&#x64a4;&#x9500;&#x7684;&#x201d;&#x5728",{"_index":5206,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x201c;&#x5b57;&#x5178;&#x5bf9;&#x4e8e;&#x952e;&#x7684;&#x7ea6;&#x675f;&#x201d;&#x7c7b;&#x4f3c;&#xff0c;&#x8fd9;&#x91cc",{"_index":5237,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x201c;&#x5c0f;&#x7761;&#x201d;&#x4e00;&#x4f1a;&#x513f;&#x3002",{"_index":4384,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x201c;&#x7761;&#x7720;&#x201d;&#x4e00;&#x4e2a;&#x7eb3;&#x79d2;&#x518d;&#x8fdb;&#x5165;&#x4e0b;&#x4e00;&#x4e2a;&#x8fed;&#x4ee3;&#x3002",{"_index":4421,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x201c;&#x7761;&#x7720;&#x201d;&#x591a;&#x957f;&#x65f6;&#x95f4;&#x624d;&#x662f;&#x5408;&#x9002;&#x7684;&#x5462;&#xff1f;&#x5982;&#x679c;&#x201c;&#x7761;&#x7720;&#x201d;&#x592a;&#x77ed;&#xff0c;&#x5219;&#x5f88;&#x53ef;&#x80fd;&#x4e0d;&#x8db3;&#x4ee5;&#x8ba9;&#x5176;&#x4ed6;&#x7684",{"_index":4388,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x201c;&#x7c7b;&#x578b;&#x201d;&#x53ef;&#x4ee5;&#x7701;&#x7565;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x7c7b;&#x578b;&#xff0c;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8868;&#x8fbe;&#x5f0f;&#x63a8;&#x5bfc;&#x51fa;&#x7c7b;&#x578b;&#x3002",{"_index":1510,"title":{},"body":{"basic/constant.html#常量":{}}}],["x201c;&#x7ed9;&#x5b9a;&#x7684;&#x5143;&#x7d20;&#x201d;&#x90fd;&#x662f",{"_index":2413,"title":{},"body":{"packages/container.html#container-包":{}}}],["x201c;&#x96f6;&#x503c;&#x201d;&#xff0c;&#x6240;&#x6307;&#x5e76;&#x975e;&#x662f;&#x7a7a;&#x503c;&#xff0c;&#x800c;&#x662f;&#x4e00;&#x79cd;&#x201c;&#x53d8;&#x91cf;&#x672a;&#x586b;&#x5145;&#x524d;&#x201d;&#x7684;&#x9ed8;&#x8ba4;&#x503c;&#xff0c;&#x901a;&#x5e38;&#x4e3a",{"_index":1814,"title":{},"body":{"basic/var.html#变量":{}}}],["x201c;block&#x201d;&#xff0c;&#x4ece;&#x800c;&#x5f97;&#x5230;&#x4e00",{"_index":3370,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x201c;go",{"_index":4027,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x201d;&#x53f3;&#x8fb9;&#x7684;&#x6574;&#x6570;&#x7684;&#x542b;&#x4e49;&#x662f;&#xff0c;&#x4ee5;&#x591a;&#x5c11;&#x4e2a;&#x6bd4;&#x7279;&#x4f4d;&#x4f5c;&#x4e3a;&#x4e00;&#x4e2a;&#x7f16;&#x7801;&#x5355;&#x5143",{"_index":355,"title":{},"body":{"index.html#编码":{}}}],["x2026",{"_index":525,"title":{},"body":{"basic/flow.html#switch":{}}}],["x2026;`&#xff0c;&#x4f7f;&#x7528;&#x53cd;&#x5f15;&#x53f7;&#x4ee3;&#x66ff;&#x53cc;&#x5f15;&#x53f7;&#x3002;&#x5728;&#x539f;&#x751f;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x9762;&#x503c;&#x4e2d;&#xff0c;&#x6ca1;&#x6709;&#x8f6c;&#x4e49;&#x64cd;&#x4f5c;&#xff1b;&#x5168;&#x90e8;&#x7684;&#x5185;&#x5bb9;&#x90fd;&#x662f;&#x5b57;&#x9762;&#x7684;&#x610f;&#x601d;&#xff0c",{"_index":3809,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3001",{"_index":171,"title":{},"body":{"index.html#Golang-介绍":{},"index.html#make-和-new":{},"index.html#编码":{},"basic/json.html#序列化":{},"basic/var.html#变量":{},"basic/operator.html#算术运算符":{},"basic/map.html#map":{},"basic/scope.html#作用域":{},"basic/function.html#参数":{},"basic/test.html#性能测试函数中的计时器":{},"packages/io.html#io包中的接口和工具":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html#字符串":{},"packages/os.html#os包中的API":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x3001;&#x5bf9;&#x63a5;&#x7cfb;&#x7edf;&#x7ea7;&#x7ebf;&#x7a0b;&#x7684",{"_index":4279,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3001;&#x6307;&#x9488;&#x3001",{"_index":1820,"title":{},"body":{"basic/var.html#变量":{}}}],["x3002",{"_index":223,"title":{},"body":{"index.html#命名":{},"index.html#声明":{},"index.html#make-和-new":{},"index.html#类型转换":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/array.html#数组":{},"basic/flow.html#for":{},"basic/interface.html#接口":{},"advance/gc.html#垃圾回收":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html#方法":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/oop.html#String-方法":{},"basic/pointer.html#指针":{},"basic/pointer.html#为什么需要指针":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html#包":{},"basic/package.html#main":{},"basic/package.html#点操作":{},"basic/package.html#包声明":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html#变量":{},"basic/var.html#赋值":{},"basic/operator.html#算术运算符":{},"basic/operator.html#关系运算符":{},"basic/map.html#map":{},"basic/slice.html#slice":{},"basic/slice.html#怎样估算切片容量的增长":{},"basic/scope.html#作用域":{},"basic/env_config.html#安装":{},"basic/env_config.html#工作区":{},"basic/env_config.html#Go-Module":{},"basic/function.html#参数":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html#channel":{},"commands/build.html#工具":{},"basic/test.html#测试":{},"basic/test.html#覆盖率":{},"basic/test.html#go-test-命令执行的主要测试流程":{},"basic/test.html#性能测试的测试结果":{},"basic/test.html#性能分析":{},"packages/io.html#io包中的接口和工具":{},"packages/io.html#bufio包中的数据类型":{},"theme/theme-usage.html#Quick-Start":{},"theme/theme-usage.html#添加文档":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#布尔类型":{},"basic/basic_data.html#字符串":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html#并发和并行":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{},"concurrent/sync_lock.html#sync-Map":{}}}],["x3002;&#x4e00;&#x4e2a;&#x89e3;&#x51b3;&#x65b9;&#x6848;&#x662f;&#xff1a",{"_index":5134,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x3002;&#x4e00;&#x822c;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x4f60",{"_index":2092,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x3002;&#x4e0d;&#x5728;&#x4f7f;&#x7528;&#x7684;&#x5185;&#x5b58;&#xff0c;&#x653e;&#x5230;&#x5408;&#x9002;&#x7684;&#x4f4d;&#x7f6e;&#x7b49;&#x5f85;&#x518d;&#x6b21",{"_index":428,"title":{},"body":{"advance/mm.html#回收":{}}}],["x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x867d;&#x7136;&#x7b80;&#x5355;&#xff0c;&#x4f46;&#x8fd8;&#x662f;&#x6709;&#x4e00;&#x4e9b;&#x503c;&#x5f97;&#x6ce8;&#x610f;&#x7684;&#x5730;&#x65b9;&#x7684;&#x3002",{"_index":5009,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x9488;&#x5bf9",{"_index":4969,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x3002;&#x4e4b;&#x540e;&#xff0c;&#x5b83;&#x4f1a;&#x628a;&#x539f;&#x5bb9;&#x5668;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x5b57;&#x8282;&#x5168;&#x90e8;&#x62f7;&#x8d1d;&#x5230;&#x65b0;&#x5bb9;&#x5668;&#x4e2d;&#x3002",{"_index":3908,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x5b83;&#x65e2;&#x4e0d;&#x53ef;&#x4ee5;&#x88ab;&#x64a4;&#x9500;&#xff08",{"_index":5187,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x3002;&#x4ee5",{"_index":356,"title":{},"body":{"index.html#编码":{}}}],["x3002;&#x5173;&#x952e;&#x95ee;&#x9898;&#x662f;&#xff0c;&#x539f;&#x6570;&#x7ec4;&#x4f1a;&#x56e0",{"_index":2591,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x3002;&#x5176;&#x4e2d;&#x7684",{"_index":344,"title":{},"body":{"index.html#编码":{},"basic/error.html#Panic-异常":{},"packages/os.html#os包中的API":{}}}],["x3002;&#x5185;&#x5b58;&#x5730;&#x5740;&#x662f;&#x5185;&#x5b58;&#x4e2d;&#x6bcf;&#x4e2a;&#x5b57;&#x8282;&#x5355;&#x5143;&#x7684;&#x552f;&#x4e00;&#x7f16;&#x53f7;&#xff0c;&#x800c;&#x6307;&#x9488;&#x662f;&#x4e00;&#x4e2a;&#x5b9e;&#x4f53;&#x3002;&#x6307;&#x9488;&#x4e5f;&#x4f1a;&#x5206;&#x914d;&#x5185;&#x5b58;&#x7a7a;&#x95f4;&#xff0c;&#x76f8;&#x5f53;&#x4e8e;&#x4e00;&#x4e2a",{"_index":1285,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x3002;&#x524d;&#x8005;&#x662f;&#xff08;&#x4fbf;&#x4e8e;&#x6211;&#x4eec;&#x4eba;&#x7c7b;&#x7406;&#x89e3;&#x7684;&#xff09;&#x5916;&#x90e8;&#x5c55;&#x73b0;&#xff0c;&#x540e;&#x8005;&#x662f;&#xff08;&#x4fbf;&#x4e8e;&#x8ba1;&#x7b97;&#x673a;&#x7cfb;&#x7edf;&#x7406;&#x89e3;&#x7684;&#xff09",{"_index":4024,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x524d;&#x8005;&#x7528;&#x4e8e;&#x5728;&#x5f53;&#x524d;&#x7684;&#x6c60;&#x4e2d;&#x5b58;&#x653e;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#xff0c;&#x5b83;&#x63a5;&#x53d7;&#x4e00;&#x4e2a",{"_index":5255,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x3002;&#x5305;&#x542b;&#x4e86;&#x6210;&#x5343;&#x4e0a;&#x4e07;&#x7684;&#x5f00;&#x6e90;&#x5305;&#x7684;&#x68c0;&#x7d22;&#x5de5;&#x5177;&#x3002",{"_index":3017,"title":{},"body":{"commands/build.html#工具":{}}}],["x3002;&#x5305;&#x7684;&#x540d;&#x5b57;&#x5305;&#x542b;&#x7248;&#x672c;&#x53f7;&#x540e;&#x7f00",{"_index":1629,"title":{},"body":{"basic/package.html#包声明":{}}}],["x3002;&#x533a;&#x5206;&#x5927;&#x5c0f;&#x5199;&#x3002",{"_index":220,"title":{},"body":{"index.html#命名":{}}}],["x3002;&#x539f;&#x56e0;&#x5728;&#x4e8e;&#xff0c;&#x5b83;&#x4eec;&#x90fd;&#x628a;&#x57fa;&#x4e8e;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5207;&#x7247;&#x76f4;&#x63a5;&#x8fd4",{"_index":3993,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x540c;&#x6837;&#x7684;&#x7b2c;&#x4e8c;&#x4e2a;&#x53c2;&#x6570;&#x503c;&#x53ea;&#x8981;&#x8be5;&#x7c7b;&#x578b;&#x5b9e;&#x73b0;&#x4e86",{"_index":3482,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x3002;&#x540c;&#x6837;&#x7684;&#xff0c",{"_index":2688,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x3002;&#x540e;&#x8005;&#x4e00;&#x822c;&#x7528;&#x4e8e;&#x5173;&#x95ed;&#x6570;&#x636e;&#x8bfb;&#x5199;&#x7684;&#x901a;&#x8def;&#x3002;&#x8fd9;&#x4e2a;&#x63a5;&#x53e3;&#x5176;&#x5b9e;&#x662f",{"_index":3491,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x3002;&#x5426;&#x5219;&#x5e94;&#x8be5;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":2546,"title":{},"body":{"basic/function.html#错误":{}}}],["x3002;&#x5426;&#x5219;&#xff0c;&#x53ea;&#x8981;&#x5728;&#x4efb;&#x4f55;&#x526f;&#x672c;&#x4e0a;&#x8c03;&#x7528;&#x4e0a;&#x8ff0;&#x65b9",{"_index":3912,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x56de;&#x6536;&#x4e0d;&#x662f;&#x91ca;&#x653e;&#xff0c;&#x56e0;&#x4e3a;&#x5185;&#x5b58;&#x5206;&#x914d;&#x5668;&#x7684;&#x6838;&#x5fc3;&#x662f",{"_index":426,"title":{},"body":{"advance/mm.html#回收":{}}}],["x3002;&#x56e0;&#x4e3a",{"_index":297,"title":{},"body":{"index.html#类型断言":{}}}],["x3002;&#x56e0;&#x6b64;&#x5e38;&#x91cf;&#x8868;&#x8fbe;&#x5f0f;&#x4e2d;&#xff0c;&#x51fd;&#x6570;&#x5fc5;&#x987b;&#x662f;&#x5185;&#x7f6e;&#x51fd;&#x6570;&#x3002;&#x5982",{"_index":1517,"title":{},"body":{"basic/constant.html#常量":{}}}],["x3002;&#x56e0;&#x6b64;&#xff0c",{"_index":544,"title":{},"body":{"basic/flow.html#switch":{}}}],["x3002;&#x5728",{"_index":341,"title":{},"body":{"index.html#编码":{},"basic/error.html#Panic-异常":{},"concurrent/channel.html#channel":{}}}],["x3002;&#x5728;&#x4ee3;&#x7801;&#x4e2d;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":4259,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3002;&#x5927;&#x81f4;&#x4e0a;&#x90fd;&#x662f;&#x628a;&#x6570;&#x636e;&#x4ec",{"_index":3478,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x3002;&#x5982;&#x679c;&#x4f60;&#x5b9e;&#x5728;&#x62ff;&#x4e0d;&#x51c6;&#xff0c;&#x90a3;&#x4e48;&#x53ef;&#x4ee5;&#x5148;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":5316,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x3002;&#x5982;&#x679c;&#x4f60;&#x5c1d;&#x8bd5;&#x4f7f;&#x7528;&#x4e00;&#x4e2a",{"_index":1999,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x5982;&#x679c;&#x4f60;&#x60f3;&#x8981;&#x5b9e;&#x65f6;&#x7684;&#x4fe1;&#x606f;&#xff0c;&#x90a3;&#x4e48;&#x53ef;&#x4ee5;&#x8c03;&#x7528",{"_index":3358,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x3002;&#x5982;&#x6b64;&#x4e00;&#x6765;&#xff0c",{"_index":5023,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x3002;&#x5b83;&#x4eec;&#x6240;&#x5c5e;&#x7684",{"_index":2741,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x3002;&#x5b83;&#x5728;&#x6267;&#x884c;&#x5b8c",{"_index":5164,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x3002;&#x5b83;&#x5728;&#x88ab;&#x8c03;&#x7528;&#x4e4b;&#x540e;&#x5c06;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":4135,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x3002;&#x5b83;&#x5b9a;&#x4e49;&#x4e86;&#x4e0d;&#x540c;&#x81ea;&#x7136;&#x8bed;&#x8a00;&#x7684;&#x6587;&#x672c;&#x6570;&#x636e;&#x5728;&#x56fd;&#x9645;&#x95f4;&#x4ea4;&#x6362;&#x7684;&#x7edf;&#x4e00;&#x65b9;&#x5f0f;&#xff0c;&#x5e76;&#x4e3a;&#x5168;&#x7403;&#x5316;&#x8f6f;&#x4ef6;&#x521b;&#x5efa;&#x4e86;&#x4e00;&#x4e2a;&#x91cd;&#x8981;&#x7684;&#x57fa;&#x7840;&#x3002",{"_index":337,"title":{},"body":{"index.html#编码":{}}}],["x3002;&#x5b9e;&#x9645;&#x4e0a;&#xff0c;&#x5b83;&#x4eec;&#x90fd;&#x662f;&#x901a;&#x8fc7",{"_index":3885,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x5e38;&#x91cf;&#x3001;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x5b57;&#x9762;&#x91cf;&#x3001;&#x5b57;&#x7b26;&#x4e32;&#x53d8;&#x91cf;&#x7684;&#x503c;&#x3001;&#x51fd;&#x6570;&#x4ee5;&#x53ca;&#x65b9;&#x6cd5;&#x7684;&#x5b57;&#x9762;&#x91cf;&#x90fd;&#x662f;&#x5982;&#x6b64;&#x3002",{"_index":1374,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x3002;&#x5e76;&#x884c;&#x662f;&#x5e76;&#x53d1;&#x8bbe;&#x8ba1;&#x7684",{"_index":4228,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x3002;&#x5f53",{"_index":1018,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x3002;&#x5f53;&#x6211;&#x4eec;&#x60f3;&#x8981;&#x5bfc;&#x5165;&#x5305;&#xff0c",{"_index":1605,"title":{},"body":{"basic/package.html#点操作":{}}}],["x3002;&#x5f53;&#x6211;&#x4eec;&#x8bd5;&#x56fe;&#x5728;&#x4e00;&#x4e2a;&#x503c;&#x4e3a",{"_index":2007,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x5f53;&#x6307;&#x9488;&#x6307;&#x5411;&#x540c;&#x4e00;&#x4e2a;&#x53d8;&#x91cf;&#x6216;&#x8005",{"_index":1300,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x3002;&#x5f53;&#x7136;&#x4e86;&#xff0c;&#x8fd9;&#x91cc;&#x6240;&#x8bf4;&#x7684;&#x201c;&#x660e;&#x663e;&#x6ede;&#x540e;&#x201d;&#x662f;&#x5bf9;&#x4e8e;&#x8ba1;&#x7b97;&#x673a",{"_index":4339,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3002;&#x6211;&#x4eec;&#x4e00;&#x5b9a;&#x4e0d;&#x8981;&#x5fd8;&#x8bb0;&#x521d;&#x59cb;&#x5316;&#x901a;&#x9053",{"_index":2746,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x3002;&#x6211;&#x4eec;&#x53ef",{"_index":5044,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5728;&#x9700;&#x8981;&#x7b49;&#x5f85;&#x7684",{"_index":5051,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x628a;&#x5b83;&#x4eec;&#x7edf;&#x79f0",{"_index":3894,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x6240;&#x4ee5;&#x5728;&#x5224;&#x65ad;&#x7c7b;&#x578b;&#x65f6;&#xff0c",{"_index":2175,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["x3002;&#x6240;&#x4ee5;&#xff0c;&#x56e0",{"_index":4955,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x3002;&#x6240;&#x4ee5;&#xff0c;&#x5b83;&#x5e76;&#x4e0d;&#x662f;&#x4f20;&#x7edf;&#x610f;&#x4e49;&#x4e0a;&#x7684;&#x5feb;&#x7167;&#xff0c;&#x5b83;&#x7684;&#x53ea;&#x8bfb;&#x7279;&#x6027;&#x53ea;&#x662f;&#x5bf9;&#x4e8e;&#x5176;&#x4e2d;&#x952",{"_index":5331,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x3002;&#x6240;&#x8c13;&#x7684;&#x5e95;&#x5c42;&#x8bfb;&#x53d6;&#x5668;&#xff0c;&#x5c31;&#x662f;&#x5728;&#x521d;&#x59cb;&#x5316;&#x6b64;&#x7c7b;&#x503c;&#x7684;&#x65f6;&#x5019;&#x4f20;&#x5165;&#x7684",{"_index":3527,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x3002;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c",{"_index":365,"title":{},"body":{"index.html#编码":{}}}],["x3002;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x952e;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x5fc5;&#x987b;&#x8981;&#x652f;&#x6301;&#x5224;&#x7b49;&#x64cd;&#x4f5c;&#x3002;&#x7531;&#x4e8",{"_index":1981,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x663e;&#x800c;&#x6613;&#x89c1;&#xff0c",{"_index":1207,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x3002;&#x66f4;&#x5177;&#x4f53;&#x5730;&#x8bf4;&#xff0c;&#x8be5;&#x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x6839;&#x636e;&#x7ed9;&#x5b9a;&#x7684;&#x504f;&#x79fb;&#x91cf;&#x57fa;&#x4e8e;&#x6570;&#x636e;&#x7684;&#x8d77;&#x59cb;&#x4f4d;&#x7f6e;&#x3001;&#x672b;&#x5c3e;&#x4f4d;&#x7f6e;&#xff0c;&#x6216;&#x8005;&#x5f53;&#x524d;&#x8bfb;&#x5199",{"_index":3496,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x3002;&#x6807;&#x8bb0;&#x6e05;&#x7406;&#x6700;&#x5178;&#x578b;&#x7684;&#x505a;&#x6cd5;&#x662f;&#x4e09;&#x2f8a;&#x6807;&#x8bb0;&#x3002;&#x8fdb;&#x884c;&#x5783;&#x573e;&#x56de;&#x6536;&#x65f6;&#x4f1a",{"_index":845,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x3002;&#x6b63;&#x56e0;&#x4e3a;&#x5982;&#x6b64;&#xff0c",{"_index":536,"title":{},"body":{"basic/flow.html#switch":{}}}],["x3002;&#x6bd4;&#x5982",{"_index":2518,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x3002;&#x6bd4;&#x5982;&#xff0c;&#x5bf9;&#x4e8e;&#x4e00;&#x4e2a;&#x82f1;&#x6587;&#x5b57;&#x7b26;&#xff0c",{"_index":367,"title":{},"body":{"index.html#编码":{}}}],["x3002;&#x6ce8;&#x610f;&#x5982;&#x679c;&#x5bfc;&#x5165;&#x4e86;&#x4e0d;&#x9700;&#x8981;&#x7684;&#x5305;&#xff0c;&#x6216;&#x8005;&#x7f3a;&#x5c11;&#x4e86;&#x5fc5;&#x8981;&#x7684;&#x5305;&#xff0c",{"_index":1575,"title":{},"body":{"basic/package.html#import":{}}}],["x3002;&#x76f8;&#x53cd;&#xff0c;&#x7c7b;&#x578b",{"_index":2714,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x3002;&#x7b97;&#x672f;&#x64cd;&#x4f5c;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x5c5e;&#x4e8e;&#x4e34;&#x65f6;&#x7ed3;&#x679c;&#xff0c;&#x9488;&#x5bf9;&#x503c;&#x5b57;&#x9762;&#x91cf;&#x7684;&#x8868;&#x8fbe;&#x5f0f;&#x7ed3;&#x679c;&#x503c;&#x4e5f;&#x5c5e;&#x4e8e;&#x4e34;&#x65f6;&#x7ed3;&#x679c;&#x3002",{"_index":1378,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x3002;&#x88c1;&#x526a;&#x64cd;&#x4f5c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5207;&#x7247;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x800c;&#x62fc;&#x63a5;&#x64cd;&#x4f5c;&#x53ef;&#x4ee5;&#x7528;&#x64cd;&#x4f5c;&#x7b26",{"_index":3859,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x8981;&#x5728;&#x5916;&#x90e8;&#x5f15;&#x7528;&#x8be5;&#x51fd;&#x6570;&#xff0c;&#x5fc5;&#x987b;&#x663e;&#x5f0f;&#x4f7f;&#x7528",{"_index":1616,"title":{},"body":{"basic/package.html#包声明":{}}}],["x3002;&#x8be5;&#x6807;&#x8bb0;&#x7684;&#x503c",{"_index":3255,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x3002;&#x8fd9;&#x4e24;&#x79cd;&#x65b9;&#x6cd5;&#x90fd;&#x53ef;&#x4ee5;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x7a7a;&#x7684",{"_index":2014,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x8fd9;&#x4e2a",{"_index":4822,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x3002;&#x8fd9;&#x4e2a;&#x4e3b",{"_index":4305,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3002;&#x8fd9;&#x4e2a;&#x58f0;&#x660e;&#x8868;&#x793a;&#x8fd9;&#x4e2a;&#x6e90",{"_index":195,"title":{},"body":{"index.html#package":{}}}],["x3002;&#x8fd9;&#x4e2a;&#x662f;&#x6b7b;&#x9501;&#x7684;&#x9519;&#x8bef;&#xff0c;&#x56e0;&#x4e3a",{"_index":2670,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x3002;&#x8fd9;&#x4e9b;&#x65b9;&#x6cd5;&#x90fd;&#x662f;&#x7528;&#x4e8e;&#x64cd;&#x4f5c;&#x5f53;&#x524d;&#x7684;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570",{"_index":3307,"title":{},"body":{"basic/test.html#性能测试函数中的计时器":{}}}],["x3002;&#x8fd9;&#x51e0;&#x4e2a;&#x51fd;&#x6570;&#x5728;&#x529f;&#x80fd;&#x4e0a;&#x90fd;&#x7565;&#x6709;&#x5dee;&#x522b;&#xff0c;&#x4f46;&#x662f;&#x5b83;&#x4eec;&#x90fd;&#x9996;&#x5148;&#x4f1a;&#x63a5;&#x53d7;&#x4e24;&#x4e2a;&#x53c2;&#x6570;&#xff0c;&#x5373;&#xff1a",{"_index":3472,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x3002;&#x8fd9;&#x5c31;&#x662f;&#x6240;&#x8c13",{"_index":4347,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3002;&#x8fd9;&#x5c31;&#x76f8;&#x5f53;&#x4e8e;&#x6574;&#x4e2a;&#x7a0b;&#x5e8f;&#x90fd;&#x5df2;&#x7ecf;&#x505c;&#x6ede;&#x4e0d;&#x524d;&#x4e86;&#x3002",{"_index":4845,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x3002;&#x8fd9;&#x610f;&#x5473;&#x7740;&#x5b83;&#x62e5;&#x6709;&#x5bf9;&#x5e95;&#x5c42;&#x6570;&#x636e;&#x7ed3;&#x6784;&#x7684;&#x5f15;&#x7528;&#xff0c",{"_index":1933,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x8fd9;&#x662f;&#x56e0;&#x4e3a;&#x7ed3;&#x6784;&#x4f53;&#x7684;&#x6210;&#x5458",{"_index":1455,"title":{},"body":{"basic/json.html#序列化":{}}}],["x3002;&#x8fd9;&#x663e;&#x7136;&#x662f;&#x4e0d;&#x5408;&#x7406;&#x7684;&#xff0c;&#x4f46;&#x662f;&#x5374;&#x901a;&#x8fc7;&#x4e86;&#x6d4b;&#x8bd5;&#x3002;&#x6240;&#x4ee5;&#x4f7f;&#x7528",{"_index":2185,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x3002;&#x8fd9;&#x6837;&#x53ef;&#x4ee5;&#x786e;&#x5b9a;&#x8bed;&#x53e5;&#x548c;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x660e;&#x786e;&#x542b;&#x4e49;&#x3002",{"_index":242,"title":{},"body":{"index.html#类型转换":{}}}],["x3002;&#x8fd9;&#x786e;&#x4fdd;&#x6c38;&#x8fdc;&#x4e0d;&#x4f1a;&#x83b7;&#x5f97",{"_index":2016,"title":{},"body":{"basic/map.html#map":{}}}],["x3002;&#x8fd9;&#x79cd;&#x5728;&#x8bed;&#x8a00;&#x5c42;&#x9762;&#x81ea;&#x5e26;&#x8c03;&#x5ea6;&#x5668;&#x7684;&#xff0c;&#x6211;&#x4eec;&#x79f0",{"_index":4522,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x3002;&#x8fd9;&#x79cd;&#x65b9;&#x5f0f;&#x6bcf;&#x6b21;&#x8fd0;&#x7b97;&#x90fd;&#x4f1a;&#x4ea7;&#x751f;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5b57",{"_index":3821,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x3002;&#x8fd9;&#x91cc;&#x7684;&#x8ba1;&#x6570;&#x5468;&#x671f;&#x6307;&#x7684;&#x662f;&#x8fd9;&#x6837;&#x4e00;&#x4e2a;&#x8fc7;&#x7a0b;&#xff1a;&#x8be5;&#x503c;&#x4e2d;&#x7684;&#x8ba1;&#x6570;&#x5668;&#x503c;&#x7531",{"_index":5069,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x3002;&#x91cd;&#x542f;&#x547d;&#x4ee4;&#x7a97;&#x53e3;&#x751f;&#x6548;&#x3002",{"_index":2313,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x3002;&#x9488;&#x5bf9;&#x8f93;&#x51fa;&#x6d41;&#x7684",{"_index":1488,"title":{},"body":{"basic/json.html#序列化":{}}}],["x3002;&#x9664;&#x4e86;&#x4ec",{"_index":4263,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x3002;&#x9664;&#x975e;&#x6211;&#x4eec;&#x5728;&#x4e00;&#x4e9b;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x4e2d;&#x663e;&#x5f0f;&#x5730;&#x8c03;&#x7528",{"_index":3298,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x3002;&#x987e;&#x540d;&#x601d;&#x4e49;&#xff0c",{"_index":5194,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x3002;&#xff08;&#x5982;&#x679c;&#x62c9;&#x53d6;&#x5305;&#x5931;&#x8d25;&#xff0c;&#x4f1a;&#x62a5",{"_index":2371,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x3002;go",{"_index":1771,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{},"concurrent/goroutine.html#goroutine-1":{}}}],["x4e00;&#x4e2a",{"_index":304,"title":{},"body":{"index.html#类型断言":{},"basic/map.html#map":{},"basic/slice.html#slice":{},"commands/build.html#工具":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html#并发和并行":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e00;&#x4e2a;&#x51fd;&#x6570;&#x628a",{"_index":739,"title":{},"body":{"basic/interface.html#接口":{}}}],["x4e00;&#x4e2a;&#x5207;&#x7247;&#x5728;&#x672a;&#x521d;&#x59cb;&#x5316;&#x4e4b;&#x524d;&#x9ed8;&#x8ba4;&#x4e3a",{"_index":2057,"title":{},"body":{"basic/slice.html#slice":{}}}],["x4e00;&#x4e2a;&#x5207;&#x7247;&#x65e0;&#x6cd5;&#x5bb9;&#x7eb3;&#x66f4;&#x591a;&#x7684;&#x5143;&#x7d20;&#xff0c;go",{"_index":2089,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x4e00;&#x4e2a;&#x5207;&#x7247;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x6c38;&#x8fdc;&#x4e0d;&#x4f1a;&#x88ab;&#x66ff;&#x6362;&#x3002;&#x4e3a;&#x4ec0;&#x4e48;&#xff1f;&#x867d;&#x7136;&#x5728;&#x6269;&#x5bb9;&#x7684;&#x65f6;&#x5019",{"_index":2103,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x4e00;&#x4e2a;&#x539f;&#x751f;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x9762;&#x503c;&#x5f62;&#x5f0f;&#x662f",{"_index":3808,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e00;&#x4e2a;&#x53ef;&#x4ee5;&#x88ab;&#x7f16;&#x8bd1;&#x5668;&#x4fee;&#x6539;&#x7684;&#x5e38;&#x91cf",{"_index":1522,"title":{},"body":{"basic/constant.html#iota":{}}}],["x4e00;&#x4e2a;&#x547d;&#x540d;&#x4e3a",{"_index":1753,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x4e00;&#x4e2a;&#x5957;&#x8def;&#x3002",{"_index":1908,"title":{},"body":{"basic/operator.html#赋值运算符":{}}}],["x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#x7684;&#x53d8;&#x91cf;&#x6216;&#x8005;&#x65b9;&#x6cd5;&#x5982;&#x679c;&#x5bf9;&#x8c03;&#x7528;&#x65b9;&#x662f;&#x4e0d;&#x53ef;&#x89c1;&#x7684;&#x8bdd;&#xff0c;&#x4e00;&#x822c;&#x5c31;&#x88ab;&#x5b9a;&#x4e49;&#x4e3a;&#x201c;&#x5c01;&#x88c5;&#x201d;&#x3002;&#x901a;&#x8fc7;&#x9996;&#x5b57;&#x6bcd;&#x5927;&#x5c0f;&#x5199;&#x6765;&#x5b9a;&#x4e49;&#x662f;&#x5426;&#x4ece;&#x5305;&#x4e2d;&#x5bfc;&#x51fa;&#x3002",{"_index":1183,"title":{},"body":{"basic/oop.html#封装":{}}}],["x4e00;&#x4e2a;&#x65b0;&#x7684;&#x53d8;&#x91cf",{"_index":1833,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x4e00;&#x4e2a;&#x65b9;&#x6cd5",{"_index":3012,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e00;&#x4e2a;&#x6bd4;&#x8f83;&#x597d;&#x7684;&#x4f8b;&#x5b50;&#x662f",{"_index":5276,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e00;&#x4e2a;&#x7a0b;&#x5e8f;&#x53ef;&#x80fd;&#x5305;&#x542b;&#x591a;&#x4e2a;&#x540c;&#x540d;&#x7684;&#x58f0;&#x660e;&#xff0c;&#x53ea;&#x8981;&#x5b83;&#x4eec;&#x5728;&#x4e0d;&#x540c;&#x7684;&#x8bcd;&#x6cd5;&#x57df;&#x5c31;&#x53ef;&#x4ee5;&#x3002;&#x5185;&#x5c42;&#x7684;&#x8bcd;&#x6cd5;&#x57df;&#x4f1a;&#x5c4f;&#x853d;&#x5916;&#x90e8;&#x7684;&#x58f0;&#x660e;&#x3002",{"_index":2130,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x4e00;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x53ef;&#x80fd;&#x540c;&#x65f6;&#x5305;&#x542b;&#x5bfc;&#x51fa;&#x548c;&#x672a;&#x5bfc;&#x51fa;&#x7684;&#x6210;&#x5458",{"_index":1748,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x4e00;&#x4e2a;&#x8bfb;&#x5199;&#x9501;&#x4e2d;&#x5b9e;&#x9645;&#x4e0a;&#x5305;&#x542b;&#x4e86;&#x4e24;&#x4e2a;&#x9501;&#xff0c;&#x5373;&#xff1a;&#x8bfb;&#x9501;&#x548c;&#x5199;&#x9501;&#x3002",{"_index":4799,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e00;&#x4e2a;&#x9ed8;&#x8ba4;&#x7684;&#x5b50;&#x53e5;&#x5e94;&#x8be5;&#x603b;&#x662f;&#x53ef;&#x8fd0;&#x884c;&#x7684;&#x3002",{"_index":559,"title":{},"body":{"basic/flow.html#select":{}}}],["x4e00;&#x540c;&#x4f7f;&#x7528;&#xff0c;&#x8868;&#x793a;&#x5728;&#x7ed9;&#x5b9a;&#x7684;&#x8def;&#x5f84;&#x4e0a;&#x4e0d;&#x80fd;&#x6709;&#x5df2;&#x5b58;&#x5728;&#x7684;&#x6587;&#x4ef6;&#x3002",{"_index":4147,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4e00;&#x65e6",{"_index":2088,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4e00;&#x65e6;&#x53d1;&#x751f;&#xff0c;&#x63a7;&#x5236;&#x6743;&#x5c31;&#x4f1a;&#x8baf;&#x901f;&#x5730;&#x6cbf;&#x7740;&#x8c03;&#x7528;&#x6808;&#x7684;&#x53cd;&#x65b9;&#x5411",{"_index":1029,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x4e00;&#x65e6;&#x591a;&#x8d77;&#x6765;&#xff0c;cpu",{"_index":4237,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x4e00;&#x65e6;&#x5f53;&#x524d;&#x7684",{"_index":5215,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4e00;&#x6837;&#xff0c;&#x4e5f;&#x662f;&#x4e00;&#x79cd;&#x5f15;&#x7528;&#x7c7b;&#x578b",{"_index":1957,"title":{},"body":{"basic/map.html#map":{}}}],["x4e00;&#x79d2;&#x540e;&#x5173;&#x95ed;&#x901a;&#x9053;&#x3002",{"_index":2799,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e00;&#x822c;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x80fd;&#x56e0;&#x4e3a;&#x67d0;&#x4e2a;&#x5904;&#x7406;&#x51fd;&#x6570;&#x5f15;&#x53d1;&#x7684",{"_index":1006,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x4e00;&#x822c;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6211;&#x4f1a;&#x7528;&#x8fd9;&#x4e2a;&#x65b9;&#x6cd5;&#x6765;&#x8bb0;&#x5f55;&#x9700;&#x8981;&#x7b49;&#x5f85;&#x7684",{"_index":5047,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e00;&#x822c;&#x7528;&#x4e8e;&#x4e25;&#x91cd;&#x9519;&#x8bef;&#xff0c;&#x5982;&#x7a0b;&#x5e8f;&#x5185;&#x90e8;&#x7684;&#x903b;&#x8f91;&#x4e0d;&#x4e00;&#x81f4;&#x3002;&#x4f46;&#x662f;&#x5bf9;&#x4e8e;&#x5927;&#x90e8;&#x5206;&#x6f0f;&#x6d1e;&#xff0c;&#x6211;&#x4eec;&#x5e94;&#x8be5;&#x4f7f",{"_index":949,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e00;&#x822c;&#x7528;&#x539f;&#x751f;&#x5b57;&#x7b26;&#x4e32;&#x9762;&#x503c;&#x7684;&#x5f62;&#x5f0f;&#x4e66;&#x5199;&#x3002",{"_index":1462,"title":{},"body":{"basic/json.html#序列化":{}}}],["x4e00;&#x822c;&#x800c;&#x8a00;&#xff0c;&#x5f53",{"_index":942,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e00;&#x822c;&#x90fd;&#x662f;&#x5229;&#x7528;&#x8fd9;&#x4e2a;&#x547d;&#x4ee4;&#x6e05;&#x9664;&#x7f16;&#x8bd1;&#x6587;&#x4ef6;&#x3002",{"_index":2981,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e00;&#x822c;&#x90fd;&#x662f;&#x6700;&#x65e9;&#x7b49;&#x5f85;&#x7684;&#x90a3;&#x4e00;&#x4e2a;&#x3002",{"_index":4957,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e00;&#x8d77;&#x63a5;&#x53d7",{"_index":4364,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e00;&#x8d77;&#x8fdb;&#x5165",{"_index":4627,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e09;&#x4e2a;&#x7528;&#x5904",{"_index":3221,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x4e09;&#x79cd;&#x6587;&#x4ef6",{"_index":186,"title":{"index.html#三种文件":{}},"body":{}}],["x4e09;&#x8272;&#x6807;&#x8bb0;&#x7b97;&#x6cd5;&#x539f;&#x7406;&#x5982;&#x4e0b;&#xff1a",{"_index":851,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x4e0a",{"_index":1367,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e0a;&#x3002",{"_index":2505,"title":{},"body":{"basic/function.html#参数":{}}}],["x4e0a;&#x4e07;&#x4e2a;&#x5e76;&#x53d1;&#x4efb;&#x52a1;&#x3002",{"_index":4253,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0a;&#x4e0b;&#x6587;&#x6839;&#x8282;&#x70b9;&#x4ec5;&#x4ec5;&#x662f;&#x4e00;&#x4e2a;&#x6700;&#x57fa;&#x672c;&#x7684;&#x652f;&#x70b9;&#xff0c;&#x5b83;&#x4e0d;&#x63d0;&#x4f9b;&#x4efb;&#x4f55;&#x989d;&#x5916;&#x7684;&#x529f;&#x80fd",{"_index":5186,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4e0a;&#x53bb;&#x8fd0;&#x884c;&#x3002;c&#x3001;c",{"_index":4463,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e0a;&#x6267;&#x884c;&#x53d1;&#x9001;&#x64cd;&#x4f5c",{"_index":2690,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e0a;&#x6267;&#x884c;&#x63a5;&#x6536;&#x64cd;&#x4f5c",{"_index":2687,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e0a;&#x6b63;&#x5728;&#x6267;&#x884c;&#x7684",{"_index":3324,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4e0a;&#x7684;g&#x5b8c;&#x6210",{"_index":4637,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e0a;&#x80fd;&#x540c;&#x65f6;&#x6267;&#x884c;&#x591a;&#x9879;&#x4efb;&#x52a1;&#xff0c;&#x5728;&#x5f88;&#x77ed;&#x65f6;&#x95f4;&#x5185;&#xff0c;cpu",{"_index":4218,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x4e0a;&#x9762;&#x4ee3;&#x7801;&#x4e2d;&#x7684",{"_index":470,"title":{},"body":{"basic/array.html#数组":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801",{"_index":770,"title":{},"body":{"basic/interface.html#接口":{},"concurrent/channel.html#channel":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4e2d",{"_index":1827,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4e2d;&#x8c03;&#x7528;&#x4e86;&#x4e00;&#x4e2a;&#x540d;&#x53eb",{"_index":4410,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4e2d;&#x90a3",{"_index":4350,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4e2d;&#xff0c",{"_index":1775,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{},"concurrent/channel.html#channel":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4f1a;&#x6253;&#x5370;&#x51fa;&#x4ec0;&#x4e48;&#x5185;&#x5bb9;&#xff1f",{"_index":4275,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x6253;&#x5370;&#x7684;&#x7ed3;&#x679c;&#x53ef;&#x80fd;&#x662f;&#xff1a",{"_index":4807,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff0c",{"_index":1015,"title":{},"body":{"basic/error.html#Recover-捕获异常":{},"basic/reflect.html#reflect-TypeOf":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x4f1a;&#x4f7f;&#x8bbf;&#x95ee;&#x6bcf;&#x4e2a;&#x6210;&#x5458;&#x53d8;&#x5f97;&#x7e41;&#x7410;&#xff1a",{"_index":1768,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x521d;&#x59cb;&#x5316;&#x4e00;&#x4e2a;&#x53d8;&#x91cf",{"_index":1287,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x793a;&#x4f8b;&#x4e00;&#x8f93;&#x51fa",{"_index":3953,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e0a;&#x9762;&#x7684;&#x4f8b;&#x5b50;&#x4e2d;&#x6211;&#x4eec;&#x77e5;&#x9053",{"_index":2566,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x4e0a;&#x9762;&#x7684;&#x8fd0;&#x7b97;&#x7b26;&#x5f97;&#x4f18;&#x5148;&#x7ea7;&#xff0c;&#x4ece;&#x4e0a;&#x5230;&#x4e0b;&#xff0c;&#x4ece;&#x5de6;&#x5230;&#x53f3;&#x3002;&#x4e5f;&#x5c31;&#x662f",{"_index":1869,"title":{},"body":{"basic/operator.html#优先级":{}}}],["x4e0a;&#x9762;&#x8fed;&#x4ee3;&#x3002;&#x5b83;&#x4f9d;&#x6b21;&#x4ec",{"_index":2665,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e0a;&#xff0c;&#x5f53;&#x7136;&#x4e5f;&#x4f1a;&#x4f53;&#x73b0;&#x5728;&#x8be5",{"_index":1365,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e0b;&#x5b89;&#x88c5;&#xff0c;&#x5b98;&#x7f51",{"_index":2302,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x4e0b;&#x7684;&#x5143;&#x7d20;&#x521b;&#x5efa;&#x4e3a;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5207;&#x7247",{"_index":2064,"title":{},"body":{"basic/slice.html#slice":{}}}],["x4e0b;&#x7684;&#x5305;&#x5bfc;&#x5165;&#x3002",{"_index":3030,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e0b;&#x7684;&#x7f13;&#x5b58;&#x5305;&#x6765;&#x5bf9;&#x9879;&#x76ee;&#x8fdb;&#x884c;&#x6784;&#x5efa;&#x3002",{"_index":2347,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x7684;&#x9879;&#x76ee;&#x4f7f;&#x7528",{"_index":2356,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x7684;&#x9879;&#x76ee;&#xff0c;&#x4e0d;&#x4f7f;&#x7528",{"_index":2354,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x8f7d;&#x4e86",{"_index":2920,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e0b;&#x8f7d;&#x4f9d;&#x8d56",{"_index":2378,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x8f7d;&#x5305",{"_index":2918,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e0b;&#x8f7d;&#x5b89;&#x88c5;&#x5305",{"_index":2303,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x4e0b;&#x8fdb;&#x884c;&#x7f13;&#x5b58;&#xff0c;&#x518d;&#x5728;&#x9879;&#x76ee;&#x4e0b;&#x751f;&#x6210",{"_index":2359,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x8fdb;&#x884c;&#x7f13;&#x5b58;&#xff0c;&#x76f4;&#x63a5;&#x57fa;&#x4e8e;&#x7f13;&#x5b58;&#x5305;&#x6765;&#x6784;&#x5efa;&#x9879;&#x76ee;&#xff0c;&#x6240;&#x4ee5;&#x53ef;&#x4ee5;&#x8131;&#x79bb",{"_index":2363,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0b;&#x9762;&#x5176;&#x5b83;&#x7684;&#x5305;&#x4e5f;&#x9075;&#x5faa;&#x8fd9;&#x4e2a;&#x7ea6;&#x5b9a;&#x3002;&#x6210;&#x5458",{"_index":1466,"title":{},"body":{"basic/json.html#序列化":{}}}],["x4e0b;&#x9762;&#x662f;&#x4e00;&#x4e2a;&#x4f8b;&#x5b50;&#xff1a",{"_index":4882,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e0b;&#x9762;&#xff0c;&#x7136;&#x540e;&#x6267;&#x884c",{"_index":2927,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e0d;&#x4f1a;&#x63a5;&#x53d7;&#xff0c;&#x8fd9;&#x4e9b;&#x65b9;&#x6cd5;&#x5c06;&#x4e0d;&#x4f1a;&#x5bf9;&#x94fe;&#x8868;&#x505a;&#x51fa;&#x4efb;&#x4f55;&#x6539;&#x52a8;&#x3002;&#x56e0;&#x4e3a;&#x6211;&#x4eec;&#x81ea;&#x5df1;&#x751f;&#x6210;&#x7684",{"_index":2416,"title":{},"body":{"packages/container.html#container-包":{}}}],["x4e0d;&#x4f1a;&#x7ee7;&#x7eed;&#x53d1;&#x9001;&#x6570;&#x636e;&#x65f6;&#x8c03;&#x7528;&#x3002",{"_index":2656,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e0d;&#x4f1a;&#x88ab;&#x81ea;&#x52a8;&#x56de;&#x6536;&#x3002",{"_index":4456,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0d;&#x4f46;&#x53ef;&#x4ee5;&#x62fc;&#x63a5;&#x3001;&#x622a;&#x65ad;&#x5176;&#x4e2d",{"_index":3939,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e0d;&#x5141;&#x8bb8;&#x5728;&#x5916;&#x90e8;&#x5305;&#x4fee;&#x6539;&#x3002",{"_index":1751,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x4e0d;&#x5141;&#x8bb8;&#x6709;&#x65e0;&#x7528;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x7a7a;&#x6807;&#x8bc6;&#x7b26;&#x53ef;&#x4ee5;&#x4f5c;&#x4e3a;&#x5ffd;&#x7565;&#x5360;&#x4f4d;&#x7b26",{"_index":215,"title":{},"body":{"index.html#空标识符":{}}}],["x4e0d;&#x53bb;&#x5199;&#x53d8;&#x91cf;&#x3002;&#x8bfb;&#x53d6;&#x4e0d;&#x53ef;&#x80fd;&#x51fa;&#x73b0;&#x6570;&#x636e;&#x7ade;&#x4e89;&#x3002",{"_index":4772,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x4e0d;&#x53ef;&#x4ee5;&#x3002",{"_index":5065,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e0d;&#x53ef;&#x53d8;&#x7684;&#x503c;&#x4e0d;&#x53ef;&#x5bfb;&#x5740",{"_index":1373,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x4e0d;&#x540c;&#x4e8e;&#x4ee5;&#x5f80;&#x57fa;&#x4e8",{"_index":2345,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0d;&#x5728;&#x540c;&#x4e00;&#x4e2a;&#x4f5c;&#x7528;&#x57df",{"_index":1830,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x4e0d;&#x5b89;&#x5168;&#x7684;&#x503c;&#x4e0d;&#x53ef;&#x5bfb;&#x5740",{"_index":1382,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x4e0d;&#x6307;&#x5b9a;&#x7c7b;&#x578b;&#x548c;&#x521d;&#x59cb;&#x503c;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x548c;&#x4e0a;&#x4e00;&#x884c;&#x975e;&#x7a7a;&#x5e38;&#x91cf;&#x53f3;&#x503c;&#x76f8;&#x540c",{"_index":1528,"title":{},"body":{"basic/constant.html#iota":{}}}],["x4e0d;&#x662f;&#x300c;&#x7c7b;&#x578b;&#x5b89;&#x5168;&#x300d;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x6709;&#x65f6;&#x5019;&#x4f1a;&#x53d1;&#x751f;&#x6bd4;&#x8f83;&#x602a;&#x5f02;&#x7684;&#x884c;&#x4e3a;&#x3002;&#x6bd4;&#x5982;&#xff1a",{"_index":2183,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x4e0d;&#x662f;&#x5bf9;&#x6bcf;&#x4e00;&#x79cd;&#x53c2;&#x6570;&#x51fd;&#x6570;&#x90fd;&#x53ea;&#x6267;&#x884c;&#x4e00;&#x6b21;&#xff0c;&#x800c;&#x662f;&#x53ea",{"_index":5087,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x4e0d;&#x662f;&#x5e03;&#x5c14;&#x503c",{"_index":264,"title":{},"body":{"index.html#类型转换":{}}}],["x4e0d;&#x7b49;&#x5230;&#x4fe1",{"_index":2671,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e0d;&#x7ba1;&#x4f60;&#x7684",{"_index":1137,"title":{},"body":{"basic/oop.html#方法":{}}}],["x4e0d;&#x7ba1;&#x662f;&#x9690;&#x5f0f;&#x8fd8;&#x662f;&#x663e;&#x5f0f;&#x5730;&#x8d4b;&#x503c;&#xff0c;&#x5728;&#x8d4b;&#x503c;&#x8bed;&#x53e5;&#x5de6;&#x8fb9;&#x7684;&#x53d8;&#x91cf;&#x548c;&#x53f3;&#x8fb9;&#x6700;&#x7ec8;&#x7684;&#x6c42;&#x5230;&#x7684;&#x503c;&#x5fc5;&#x987b;&#x6709;&#x76f8;&#x540c;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x3002;&#x8fd9;&#x5c31;&#x662f",{"_index":1851,"title":{},"body":{"basic/var.html#赋值":{}}}],["x4e0d;&#x80fd;&#x540c;&#x65f6;&#x5305;&#x542b;&#x4e24;&#x4e2a;&#x7c7b;&#x578b;&#x76f8;&#x540c;&#x7684;&#x533f;&#x540d;&#x6210;&#x5458;&#xff0c;&#x8fd9;&#x4f1a;&#x5bfc;&#x81f4;&#x540d;&#x5b57;&#x51b2;&#x7a81",{"_index":1786,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x4e0d;&#x80fd;&#x548c",{"_index":2328,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x4e0d;&#x80fd;&#x6ee5;&#x7528;&#xff0c;&#x53ef;&#x80fd;&#x4f1a;&#x5f15;&#x8d77;&#x8d44;&#x6e90;&#x6cc4;&#x6f0f;&#x6216;&#x8005;&#x5176;&#x4ed6;&#x95ee;&#x9898;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5c06",{"_index":1011,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x4e0d;&#x80fd;&#x7528;&#x539f;&#x5b50;&#x503c;&#x5b58;&#x50a8",{"_index":5013,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x4e0d;&#x80fd;&#x9690;&#x5f0f;&#x8f6c;&#x6362;&#xff0c;&#x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x7528;&#x4e8e;&#x6bd4;&#x8f83;&#x8868;&#x8fbe;&#x5f0f",{"_index":283,"title":{},"body":{"index.html#自定义类型":{}}}],["x4e0d;&#x8981;&#x4f7f;&#x7528;&#x5171;&#x4eab;&#x6570;&#x636e;&#x6765;&#x901a;&#x4fe1;&#xff0c;&#x4f7f;&#x7528;&#x901a;&#x4fe1",{"_index":4775,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x4e0d;&#x8981;&#x5728",{"_index":2375,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e0d;&#x8981;&#x5728;&#x591a;&#x4e2a;&#x51fd;&#x6570;&#x4e4b;&#x95f4;&#x76f4;&#x63a5;&#x4f20;&#x9012;&#x4e92;&#x65a5;&#x9501;&#x3002;&#x4e00;&#x65e6;&#xff0c;&#x4f60;&#x628a;&#x4e00;&#x4e2a;&#x4e92;&#x65a5;&#x9501;&#x540c;&#x65f6;&#x7528;&#x5728;&#x4e86;&#x591a;&#x4e2a;&#x5730;&#x65b9;&#xff0c;&#x5c31;&#x5fc5;&#x7136;&#x4f1a;&#x6709;&#x66f4;&#x591a;&#x7684",{"_index":4834,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e0d;&#x8981;&#x5bf9;&#x5c1a;&#x672a;&#x9501;&#x5b9a;&#x6216;&#x8005;&#x5df2;&#x89e3;&#x9501;&#x7684;&#x4e92;&#x65a5;&#x9501;&#x89e3;&#x9501;&#xff1b",{"_index":4830,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e0d;&#x8981;&#x5fd8;&#x8bb0;&#x89e3;&#x9501;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x5fc5;&#x8981;&#x65f6;&#x4f7f;&#x7528",{"_index":4828,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e0d;&#x8981;&#x628a;&#x589e;&#x52a0;&#x5176;&#x8ba1;&#x6570;&#x5668;&#x503c;&#x7684;&#x64cd;&#x4f5c;&#x548c;&#x8c03;&#x7528;&#x5176",{"_index":5076,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e0d;&#x8981;&#x91cd;&#x590d;&#x9501;&#x5b9a;&#x4e92;&#x65a5;&#x9501;&#xff1b",{"_index":4820,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e0d;&#x8bba;&#x7b2c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x503c;&#x662f;&#x4ec0;&#x4e48;&#x7c7b;&#x578b;&#x7684;&#xff0c;&#x53ea;&#x8981;&#x8fd9;&#x4e2a;&#x7c7b;&#x578b;&#x5b9e;&#x73b0;&#x4e86",{"_index":3480,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x4e0d;&#x8fc7;&#xff0c;&#x5373;&#x4f7f;&#x88ab;&#x5c4f;&#x853d;&#x4e86;&#xff0c;&#x6211;&#x4eec;&#x4ecd;&#x7136;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x94fe;&#x5f0f;&#x7684;&#x9009;&#x62e9;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x9009;&#x62e9;&#x5230;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x5b57;&#x6bb5;&#x6216;&#x65b9;&#x6cd5",{"_index":1793,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x4e0d;&#x8fc7;&#xff0c;&#x5728;os&#x5305;&#x4e2d;&#xff0c;&#x9664;&#x4e86",{"_index":4137,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4e0d;&#x8fc7;&#xff0c;&#x867d;&#x7136;&#x5df2;&#x4f7f;&#x7528;&#x7684",{"_index":3920,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e0d;&#x9700;&#x8981;&#x5728;&#x8bed;&#x53e5;&#x6216;&#x8005;&#x58f0;&#x660e;&#x7684;&#x672b;&#x5c3e;&#x6dfb;&#x52a0;&#x5206;&#x53f7;&#x3002;&#x9664;&#x975e;&#x4e00;&#x884c;&#x4ee3;&#x7801;&#x4e0a;&#x6709;&#x591a;&#x6761;&#x8bed;&#x53e5;&#x3002",{"_index":1588,"title":{},"body":{"basic/package.html#main":{}}}],["x4e0d;&#x9700;&#x8981;&#x663e;&#x793a;&#x7684;break&#xff0c;cas",{"_index":523,"title":{},"body":{"basic/flow.html#switch":{}}}],["x4e0e",{"_index":3875,"title":{},"body":{"basic/basic_data.html#字符串":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#sync-Once":{}}}],["x4e0e;&#x4e00;&#x4e2a;&#x8fdb;&#x7a0b;&#x603b;&#x4f1a;&#x6709;&#x4e00;&#x4e2a;&#x4e3b;&#x7ebf;&#x7a0b;&#x7c7b;&#x4f3c;&#xff0c;&#x6bcf;&#x4e00;&#x4e2a;&#x72ec;&#x7acb;&#x7684",{"_index":4303,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e0e;&#x5176;&#x7ed1;&#x5b9a;&#x7ee7;&#x7eed;&#x6267;&#x884c;&#x5176;&#x4ed6",{"_index":4630,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e0e;&#x53d8;&#x91cf;&#x540d;&#x51b2;&#x7a81;&#x3002",{"_index":1599,"title":{},"body":{"basic/package.html#点操作":{}}}],["x4e13;&#x5c5e;&#x7684;&#x8ba1;&#x65f6;&#x5668;&#x7684;&#x3002",{"_index":3308,"title":{},"body":{"basic/test.html#性能测试函数中的计时器":{}}}],["x4e13;&#x6ce8;&#x4e8e;&#x5bf9;&#x8c61;&#x5b9e;&#x4f8b;&#x6570;&#x636e;&#x8bfb;&#x5199;&#x3002",{"_index":2177,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x4e16;&#x754c",{"_index":1585,"title":{},"body":{"basic/package.html#main":{}}}],["x4e24;&#x4e2a",{"_index":2490,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x4e24;&#x4e2a;&#x7528;&#x4e8e;&#x521d;&#x59cb;&#x5316",{"_index":3542,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x4e24;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x5c06;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":1761,"title":{},"body":{"basic/struct.html#结构体比较":{}}}],["x4e2a",{"_index":1042,"title":{},"body":{"basic/error.html#Recover-捕获异常":{},"basic/test.html#性能分析":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e2a;&#x5143;&#x7d20",{"_index":578,"title":{},"body":{"basic/flow.html#for":{}}}],["x4e2a;&#x5173;&#x952e;&#x5b57;&#xff1a",{"_index":160,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x4e2a;&#x5305;&#x88c5;&#x4e86",{"_index":4351,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e2a;&#x53c2;&#x6570;&#xff0c;&#x5206;&#x522b;&#x540d;&#x4e3a",{"_index":4111,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4e2a;&#x5b57;&#x8282;&#x3002;&#x66f4;&#x5177;&#x4f53;&#x5730;&#x8bb2;&#xff0c;&#x5b83;&#x4f1a;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x5207;&#x7247;&#x4f5c;&#x4e3a;&#x65b0;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff0c;&#x8be5;&#x5207;&#x7247;&#x7684;&#x5bb9;&#x91cf;&#x4f1a;&#x662f;&#x539f",{"_index":3906,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2a;&#x5b57;&#x8282;&#x4f4d;&#x7f6e;&#x5f00;&#x59cb;&#x7684",{"_index":3818,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2a;&#x5b57;&#x8282;&#xff0c;&#x5373;&#xff1a;4",{"_index":3548,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x4e2a;&#x5b57;&#x8282;&#xff0c;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x3002;&#x5982;&#xff1a",{"_index":3819,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2a;&#x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x4f5c;&#x4e3a;&#x4e0d;&#x540c;&#x8bfb;&#x53d6;&#x6d41;&#x7a0b;&#x7684;&#x4ee3;&#x8868;&#xff0c;&#x5b83;&#x4eec;&#x662f;&#xff1a",{"_index":3570,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x4e2a;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x7684;&#x662f",{"_index":4878,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e2a;&#x6bd4;&#x7279;&#x4f4d;&#x3002;&#x5728;&#x8fd9",{"_index":4157,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4e2a;&#x6bd4;&#x7279;&#x4f4d;&#x4e0a;&#x7684;&#x662f;1&#xff0c;&#x90a3;&#x4e48;&#x76f8;&#x5e94;&#x7684;&#x503c;&#x8868;&#x793a;&#x7684;&#x6587;&#x4ef6;&#x6a21;&#x5f0f;&#x5c31;&#x7b49;&#x540c;&#x4e8",{"_index":4162,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4e2a;&#x6bd4;&#x7279;&#x4f4d;&#x4e0a;&#x90fd;&#x662f;0&#x3002",{"_index":4173,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4e2a;&#x6bd4;&#x7279;&#x4f4d;&#x4e0a;&#x90fd;&#x662f;1&#xff0c;&#x800c;&#x66f4;&#x9ad8;&#x7684",{"_index":4172,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4e2a;&#x6bd4;&#x7279;&#x4f4d;&#x5f53;&#x4e2d;&#xff0c;&#x6bcf;&#x4e2a;&#x6bd4;&#x7279;&#x4f4d;&#x90fd;&#x6709;&#x5176;&#x7279;&#x5b9a;&#x7684;&#x542b;&#x4e49;&#x3002",{"_index":4158,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4e2a;&#x6bd4;&#x7279;&#x4f4d;&#x624d;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x6587;&#x4ef6;&#x7684;&#x6743;&#x9650",{"_index":4166,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4e2a;&#x6bd4;&#x7279;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#xff0c",{"_index":358,"title":{},"body":{"index.html#编码":{}}}],["x4e2a;&#x7b80;&#x5355;&#x63a5;&#x53e3",{"_index":4087,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x4e2d;&#xff0c;&#x5f80;&#x5f80;&#x662f;&#x4e00;&#x4e2a;&#x5f88;&#x597d;&#x7684;&#x9009;&#x62e9",{"_index":5315,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4e2a;&#x91cd;&#x8981;&#x90e8;&#x5206;&#xff0c;&#x5206;&#x522b;&#x662f",{"_index":4282,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e2d",{"_index":1467,"title":{},"body":{"basic/json.html#序列化":{},"basic/operator.html#位运算符":{},"basic/env_config.html#Go-Module":{},"concurrent/sync_lock.html#同步锁":{}}}],["x4e2d;&#x3002",{"_index":2369,"title":{},"body":{"basic/env_config.html#Go-Module":{},"concurrent/sync_lock.html#共享变量":{},"concurrent/sync_lock.html#原子操作":{}}}],["x4e2d;&#x4e0d;&#x80fd;&#x5bf9;&#x5207;&#x7247;&#x4f7f;&#x7528;&#x7b49;&#x53f7;&#x8fd0;&#x7b97;&#x7b26;&#x3002;&#x4f60;&#x53ef;&#x4ee5;&#x5199;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x8fed;&#x4ee3;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x6765;&#x68c0;&#x67e5;&#x5b83;&#x4eec;&#x7684;&#x503c;&#x3002;&#x4f46;&#x662f;&#x4e00;&#x79cd",{"_index":2179,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x4e2d;&#x5b58;&#x50a8;&#x7684;&#x90a3;&#x4e2a;&#x503c;&#x3002;&#x8fd9;&#x76f8;&#x5f53;&#x4e8e;&#x7ed5;&#x8fc7;&#x4e86;&#x539f;&#x5b50;&#x503c;&#x800c;&#x8fdb;&#x884c;&#x4e86;&#x975e;&#x5e76;&#x53d1",{"_index":5018,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x4e2d;&#x5bf9;&#x5e94;&#x7684",{"_index":1945,"title":{},"body":{"basic/map.html#map":{}}}],["x4e2d;&#x5f15;&#x5165;&#x7684;&#x5305",{"_index":2986,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e2d;&#x6267;&#x884c;&#x3002;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x8981",{"_index":5078,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e2d;&#x6267;&#x884c;&#xff0c;go",{"_index":4490,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e2d;&#x65ad;&#x7684",{"_index":1530,"title":{},"body":{"basic/constant.html#iota":{}}}],["x4e2d;&#x6b63;&#x5f0f;&#x52a0;&#x5165;&#x4e86;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#x5b57;&#x5178;&#x7c7b;&#x578b",{"_index":5301,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4e2d;&#x6bcf;&#x4e2a;&#x6587;&#x4ef6;&#x53ea;&#x5199;&#x4e00;&#x4e2a",{"_index":1658,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x4e2d;&#x6ca1;&#x6709;&#x6570;&#x636e;&#xff0c;&#x90a3;&#x4e48;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x96f6;&#x503c;&#x3002",{"_index":2653,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e2d;&#x6ca1;&#x6709;&#x679a;&#x4e3e;&#x7684;&#x5b9a;&#x4e49;&#xff0c;&#x4f46;&#x662f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":1520,"title":{},"body":{"basic/constant.html#iota":{}}}],["x4e2d;&#x7684",{"_index":1473,"title":{},"body":{"basic/json.html#序列化":{}}}],["x4e2d;&#x7684;&#x4ee3;&#x7801;&#x4e5f;&#x5c31;&#x6267;&#x884c;&#x5b8c;&#x4e86;&#xff0c;go",{"_index":4359,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e2d;&#x7684;&#x4ee3;&#x7801;&#x53ea;&#x6267;&#x884c;&#x4e86;&#x4e00;&#x90e8;&#x5206;&#x7684;&#x65f6;&#x5019;&#x6682;&#x505c;&#xff0c;&#x4ee5;&#x671f;&#x6240;&#x6709;&#x7684",{"_index":4366,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e2d;&#x7684;&#x4ee3;&#x7801;&#x6267;&#x884c;&#x5b8c;&#x6bd5;&#xff0c;&#x5f53;&#x524d;&#x7684",{"_index":4376,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e2d;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x5bf9;&#x540c;&#x4e00;&#x4e2a;&#x5b57;&#x5178;&#x8fdb;&#x884c;&#x8bfb;&#x5199;&#x64cd",{"_index":5297,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4e2d;&#x7684;&#x4efb;&#x4f55;&#x4ee3;&#x7801;&#xff0c;&#x90fd;&#x4e0d;&#x518d;&#x4f1a;&#x88ab;&#x6267;&#x884c;&#x3002;&#x6ce8;&#x610f;&#xff0c;&#x7531;&#x4e8e;&#x901a;&#x9053;&#x7c7b;&#x578b;&#x662f;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#xff0c;&#x6240;&#x4ee5;&#x5b83;&#x7684;&#x96f6;&#x503c;&#x5c31;&#x662f",{"_index":2742,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e2d;&#x7684;&#x4f9d;&#x8d56;&#x9879;&#x5199;&#x5165;&#x5230",{"_index":2382,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e2d;&#x7684;&#x5143;&#x7d20;&#x4e2a;&#x6570;&#x4e0d;&#x80fd;&#x5927;&#x4e8",{"_index":465,"title":{},"body":{"basic/array.html#数组":{}}}],["x4e2d;&#x7684;&#x5143;&#x7d20;&#xff0c",{"_index":1363,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e2d;&#x7684;&#x53e6;&#x4e00;&#x4e2a;&#x539f;&#x751f;&#x5b57;&#x5178;&#x7531;&#x5b83;&#x7684",{"_index":5339,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4e2d;&#x7684;&#x54ea;&#x4e00;&#x884c;&#x4ee3;&#x7801;&#x5728;&#x6b64",{"_index":972,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e2d;&#x7684;&#x54ea;&#x4e9b;&#x65b9;&#x6cd5;&#x53ef;&#x80fd;&#x4f1a;&#x9020;&#x6210;&#x5185;&#x5bb9;&#x7684;&#x6cc4;&#x9732",{"_index":3989,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2d;&#x7684;&#x6570;&#x5b57;&#x3002",{"_index":466,"title":{},"body":{"basic/array.html#数组":{}}}],["x4e2d;&#x7684;&#x6587;&#x6863;&#x6ce8;&#x91ca;&#x4e00;&#x822c;&#x662f;&#x5b8c;&#x6574;&#x7684;&#x53e5;&#x5b50;&#xff0c",{"_index":3002,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e2d;&#x7684;&#x672a;&#x8bfb;&#x5185;&#x5bb9;&#x62f7;&#x8d1d;&#x8fdb;&#x53bb;&#xff0c;&#x6700;&#x540e;&#x518d;&#x7528;&#x65b0;&#x7684;&#x5bb9;&#x5668;&#x66ff;&#x6362;&#x6389;&#x539f;&#x6709;&#x7684;&#x5bb9;&#x5668;&#x3002;&#x8fd9;&#x4e2a;&#x65b0;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x5c06;&#x4f1a;&#x7b49;&#x4e8e;&#x539f;&#x6709;&#x5bb9;&#x91cf;&#x7684;&#x4e8c;&#x500d;&#x518d;&#x52a0;&#x4e0a;&#x53e6;&#x9700;&#x5b57;&#x8282;&#x6570;&#x7684;&#x548c;&#x3002",{"_index":3985,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2d;&#x7ed3;&#x6784;&#x4f53;&#x8f6c;&#x4e3a",{"_index":1445,"title":{},"body":{"basic/json.html#序列化":{}}}],["x4e2d;&#x88ab;&#x5ef6;&#x8fdf;&#x7684;&#x51fd;&#x6570;&#xff08",{"_index":944,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e2d;&#x8bfb;&#x53d6;&#x4e00;&#x90e8;&#x5206;&#x5185;&#x5bb9;&#xff0c;&#x5e76;&#x7528;&#x5b83;&#x4eec;&#x586b;&#x6ee1;&#x957f;&#x5ea6;&#x4e3a;7&#x7684;&#x5b57;&#x8282;&#x5207;&#x7247",{"_index":3955,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e2d;&#x8c03;&#x7528;&#x5143;&#x7d20;&#x7684",{"_index":784,"title":{},"body":{"basic/interface.html#接口":{}}}],["x4e2d;&#x8fd0;&#x884c;&#xff0c",{"_index":4257,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e2d;&#xff0c",{"_index":1329,"title":{},"body":{"basic/pointer.html#为什么需要指针":{},"basic/operator.html#算术运算符":{},"basic/basic_data.html#字符串":{}}}],["x4e2d;&#xff0c;&#x4e00;&#x884c;&#x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x8bed;&#x53e5;&#x7ed3;&#x675f;&#xff0c;&#x4e0d;&#x9700;&#x8981;&#x4ee5;&#x5206;&#x53f7",{"_index":205,"title":{},"body":{"index.html#行分隔符":{}}}],["x4e2d;&#xff0c;&#x5177;&#x4f53;&#x5230;&#x9ad8;&#x7ea7;&#x7c7b;&#x578b",{"_index":1339,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e2d;&#xff0c;&#x5bf9;&#x4e8e;&#x5927;&#x90e8;&#x5206;&#x51fd;&#x6570;&#x800c;&#x8a00;&#xff0c;&#x6c38;&#x8fdc;&#x65e0;&#x6cd5;&#x786e;&#x4fdd;&#x80fd;&#x5426;&#x6210;&#x529f;&#x8fd0;&#x884c;&#xff08;&#x6709;&#x4e00;&#x90e8;&#x5206;&#x51fd;&#x6570;&#x603b;&#x662f;&#x80fd;&#x6210;&#x529f;&#x7684;&#x8fd0;&#x884c;&#x3002;&#x6bd4;&#x5982",{"_index":2542,"title":{},"body":{"basic/function.html#错误":{}}}],["x4e2d;&#xff0c;&#x8bed;&#x53e5;&#x7684;&#x6267;&#x884c;&#x987a;&#x5e8f;&#x53ef;&#x4ee5;&#x4fdd;&#x8bc1;&#xff0c;&#x5728;&#x58f0;&#x660e;&#x7684;&#x4f8b;&#x5b50;&#xff0c;&#x53ef;&#x4ee5;&#x4fdd;&#x8bc1",{"_index":4811,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e2d;&#xff0c;&#x901a;&#x8fc7",{"_index":5052,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e2d;&#xff0c;&#x975e;&#x5e03;&#x5c14;&#x503c;&#x4e0d;&#x80fd;&#x5f53;&#x505a",{"_index":261,"title":{},"body":{"index.html#类型转换":{}}}],["x4e32;&#x586b;&#x5165;&#xff0c;&#x5728;&#x5df2;&#x6709;&#x4e00;&#x4e2a;&#x6570;&#x7ec4;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x8fd9;&#x79cd;&#x6548;&#x7387;&#x4f1a;&#x5f88;&#x9ad8;&#xff0c;&#x4f46;&#x662f;&#x672c;&#x6765;&#x6ca1;&#x6709;&#xff0c;&#x53bb;&#x6784;&#x9020;&#x8fd9;&#x4e2a;&#x6570;&#x636e;&#x7684;&#x4ee3;&#x4ef7;&#x4e5f;&#x4e0d;&#x5c0f;&#x3002",{"_index":3830,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e32;&#x884c;&#x5730;&#x6267;&#x884c;&#x6d4b;&#x8bd5;&#x6d41;&#x7a0b;&#x4e2d;&#x7684;&#x6bcf;&#x4e2a;&#x6b65;&#x9aa4",{"_index":3236,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x4e34;&#x65f6;&#x5bf9;&#x8c61",{"_index":5250,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60",{"_index":5243,"title":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}},"body":{}}],["x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60;&#x4e2d;&#x5b58;&#x50a8;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#x503c;&#x90fd;&#x5e94;&#x8be5;&#x662f;&#x72ec;&#x7acb;&#x7684;&#x3001;&#x5e73;&#x7b49;&#x7684;&#x548c;&#x53ef;&#x91cd;&#x7528;&#x7684",{"_index":5270,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e34;&#x65f6;&#x7ed3;&#x679c;&#x7684;&#x503c;&#x90fd;&#x662f;&#x4e0d;&#x53ef;&#x5bfb;&#x5740;&#x7684",{"_index":1377,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x4e3a",{"_index":1636,"title":{},"body":{"basic/package.html#初始化包":{},"basic/struct.html#结构体":{},"basic/map.html#map":{},"basic/test.html#性能分析":{},"basic/basic_data.html#字符串":{}}}],["x4e3a;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x3002;&#x4ee5;&#x4e0b;&#x4f1a;&#x7b80;&#x79f0;&#x540e;&#x8005;&#x4e3a",{"_index":369,"title":{},"body":{"index.html#编码":{}}}],["x4e3a;&#x4e86;&#x4fdd;&#x9669;&#x8d77;&#x89c1;&#x3002;&#x5982;&#x679c;&#x4e00;&#x4e2a",{"_index":4943,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e3a;&#x4e86;&#x548c;&#x9ed8;&#x8ba4;&#x7684;&#x5b89;&#x88c5;&#x5305;&#x533a;&#x522b;&#x5f00;&#x6765;&#xff0c;&#x91c7;&#x7528;&#x8fd9;&#x4e2a;&#x524d;&#x7f00;&#x6765;&#x91cd;&#x65b0;&#x5b89;&#x88c5;&#x90a3;&#x4e9b;&#x4f9d;&#x8d56;&#x7684;&#x5305;&#xff0c",{"_index":2955,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e3a;&#x4e86;&#x63d0;&#x9ad8;&#x4e0d;&#x540c;&#x7a0b;&#x5e8f;&#x5b9e;&#x4f53;&#x4e4b;&#x95f4;&#x7684;&#x4e92;&#x64cd;&#x4f5c;&#x6027;&#x3002;&#x4ee5;io&#x5305;&#x4e2d;&#x7684;&#x4e00;&#x4e9b;&#x51fd;&#x6570;&#x4e3a;&#x4f8b;&#x3002",{"_index":3470,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x4e3a;&#x4e86;&#x907f;&#x514d;&#x56e0;&#x4e3a;&#x53d1;&#x9001;&#x6216;&#x8005;&#x63a5;&#x6536;&#x5bfc;&#x81f4;&#x7684;&#x963b;&#x585e;&#xff0c;&#x5c24;&#x5176;&#x662f;&#x5f53",{"_index":2766,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e3a;&#x4e86;&#x907f;&#x514d;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#xff0c;&#x5bf9;&#x4e8e;&#x6709;&#x7f13;&#x5b58;&#x7684;&#x4fe1;&#x9053;&#xff0c;&#x663e;&#x5f0f;&#x5730;&#x5173;&#x95ed;&#x4fe1;&#x9053",{"_index":2677,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x4f1a;&#x6709",{"_index":4809,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x5148;&#x8981;&#x9501;&#x5b9a;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x57fa;&#x4e8e;&#x7684;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x624d;&#x80fd;&#x8c03;&#x7528;&#x5b83;&#x7684",{"_index":4897,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x53ea;&#x8bfb;&#x64cd;&#x4f5c;&#x4e5f;&#x9700;&#x8981;&#x52a0;&#x9501",{"_index":4806,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684",{"_index":4917,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x8981;&#x7528",{"_index":4936,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e3a;&#x4ec0;&#x4e48;&#x9700;&#x8981;&#x6307;&#x9488",{"_index":1311,"title":{"basic/pointer.html#为什么需要指针":{}},"body":{}}],["x4e3a;&#x4ec0;&#x4e48;&#xff1f",{"_index":1978,"title":{},"body":{"basic/map.html#map":{}}}],["x4e3a;&#x4f8b;&#xff0c;&#x5b83;&#x4f1a;&#x4ee5",{"_index":357,"title":{},"body":{"index.html#编码":{}}}],["x4e3a;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x7684;&#x5207;&#x7247;&#x4ee3;&#x8868;&#x3002",{"_index":4016,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e3a;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x7684;&#x5207;&#x7247;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x5b57;&#x8282;&#x5207;&#x7247;&#xff09;&#x3002",{"_index":3882,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e3a;&#x51fd;&#x6570;&#x540d;&#x524d;&#x7f00;&#xff0c;&#x540e;&#x7f00;&#x540d;&#x5fc5;&#x987b;&#x4ee5;&#x5927;&#x5199;&#x5b57;&#x6bcd;&#x5f00;&#x5934;&#xff0c;&#x5e76;&#x4e14;&#x53c2;&#x6570;&#x5217;&#x8868;&#x4e2d;&#x53ea;&#x5e94;&#x6709;&#x4e00;&#x4e2a",{"_index":3183,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x4e3a;&#x51fd;&#x6570;&#x540d;&#x524d;&#x7f00;&#xff0c;&#x540e;&#x7f00;&#x540d;&#x5fc5;&#x987b;&#x4ee5;&#x5927;&#x5199;&#x5b57;&#x6bcd;&#x5f00;&#x5934;&#xff0c;&#x5e76;&#x4e14;&#x552f;&#x4e00;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x5fc5;&#x987b",{"_index":3201,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x4e3a;&#x51fd;&#x6570;&#x540d;&#x524d;&#x7f00;&#xff0c;&#x793a;&#x4f8b;&#x51fd;&#x6570;&#x6ca1;&#x6709;&#x51fd;&#x6570;&#x53c2;&#x6570;&#x548c;&#x8fd4;&#x56de;&#x503c;&#xff1a",{"_index":3220,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x4e3a;&#x53ef;&#x9009;&#x53c2;&#x6570",{"_index":2069,"title":{},"body":{"basic/slice.html#slice":{}}}],["x4e3a;&#x540e;&#x7f00;&#x5305;&#x540d;&#x7684;&#x6d4b;&#x8bd5;&#x5916;&#x90e8;&#x6269;&#x5c55;&#x5305;&#x90fd;&#x7531",{"_index":1625,"title":{},"body":{"basic/package.html#包声明":{}}}],["x4e3a;&#x540e;&#x7f00;&#x540d;&#x7684;&#x6e90;&#x6587;&#x4ef6;&#x5728;&#x6267;&#x884c",{"_index":3154,"title":{},"body":{"basic/test.html#测试":{}}}],["x4e3a;&#x5bf9;&#x8c61;&#x5206;&#x914d;&#x5185;&#x5b58;&#x65f6;&#xff0c;&#x53ea;&#x9700;&#x4ece;&#x5927;&#x5c0f;&#x5408;&#x9002;&#x7684;&#x94fe;&#x8868;&#x63d0;&#x53d6;&#x4e00;&#x5c0f;&#x5757;&#x5373;&#x53ef;&#x3002",{"_index":385,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x4e3a;&#x96f6;&#x503c;&#xff09;&#x3002;&#x679c;&#x7136;&#xff0c",{"_index":1480,"title":{},"body":{"basic/json.html#序列化":{}}}],["x4e3a;1&#x7684",{"_index":961,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e3b",{"_index":970,"title":{},"body":{"basic/error.html#Panic-异常":{},"concurrent/goroutine.html#goroutine-1":{}}}],["x4e3b;&#x52a8;&#x5783;&#x573e;&#x56de;&#x6536",{"_index":864,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x4e3b;&#x52a8;&#x5783;&#x573e;&#x56de;&#x6536;&#xff0c;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":865,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x4e3b;&#x8981;&#x53ef;&#x4ee5;&#x5e2e;&#x52a9;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x4e2d;&#x7684;&#x6587;&#x4ef6;&#x7cfb;&#x7edf;&#x3001;&#x6743;&#x9650;&#x7cfb;&#x7edf;&#x3001;&#x73af;&#x5883;&#x53d8;&#x91cf;&#x3001;&#x7cfb;&#x7edf;&#x8fdb;&#x7a0b;&#x4ee5;&#x53ca;&#x7cfb;&#x7edf;&#x4fe1;&#x53f7",{"_index":4083,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4e3b;&#x8981;&#x5b58;&#x5728;&#x4e8e;&#xff1a",{"_index":3313,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4e3b;&#x8981;&#x5b8c;&#x6210;&#x5982;&#x4e0b;&#x5de5;&#x4f5c;&#xff1a",{"_index":4589,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e3b;&#x8981;&#x7528;&#x4e8e;&#x7f16;&#x8bd1;&#x4ee3;&#x7801;&#xff0c;&#x4f7f;&#x7528",{"_index":2930,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e3b;&#x8981;&#x7528;&#x6765;&#x5b58;&#x50a8;&#x5f53;&#x524d;&#x8c03;&#x7528;&#x6808;&#x7528;&#x5230;&#x7684;&#x7b80;&#x5355;&#x7c7b;&#x578b;&#x6570;&#x636e;&#xff1a",{"_index":1325,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e4b;&#x4e0a;&#x7684;&#x3002;&#x5728;&#x7ed1;&#x5b9a;&#x6709;&#x6548;&#x7684",{"_index":4533,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e4b;&#x4e3a",{"_index":4523,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e4b;&#x524d;&#x4f1a;&#x89e3;&#x9501;&#x5b83;&#x57fa;&#x4e8e;&#x7684;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x6240;&#x4ee5;&#x5728;&#x8c03;&#x7528;&#x8be5",{"_index":4913,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e4b;&#x524d;&#x7684;&#x90a3;&#x4e2a",{"_index":4644,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e4b;&#x524d;&#x90fd;&#x4f1a;&#x8c03;&#x7528;&#xff0c;&#x56e0;&#x6b64",{"_index":5293,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e4b;&#x540e;&#x4f1a;&#x5728;&#x6bcf;&#x6b21",{"_index":5292,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e4b;&#x540e;&#x5229;&#x7528;&#x8fd9;&#x4e2a;&#x901a;&#x9053;&#xff0c;&#x8ba9;&#x4e3b",{"_index":5029,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e4b;&#x540e;&#x6267;&#x884c;&#xff0c;&#x6240;&#x4ee5;&#x8fd9;&#x91cc;&#x7684",{"_index":2563,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x4e4b;&#x540e;&#x7684;&#x65b0;&#x5185;&#x5bb9;&#x8986;&#x76d6;&#x6389;&#x3002",{"_index":3982,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4e4b;&#x540e;&#x7684;&#x8bed;&#x53e5;&#x624d;&#x4f1a;&#x7ee7;&#x7eed;&#x6267;&#x884c;&#x3002",{"_index":2692,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e4b;&#x540e;&#x7684;&#x8bed;&#x53e5;&#xff0c;&#x8fd9;&#x65f6;&#x5019;&#x5176;&#x5b83;&#x901a;&#x4fe1;&#x662f;&#x4e0d;&#x4f1a;&#x6267;&#x884c;&#x7684;&#x3002",{"_index":553,"title":{},"body":{"basic/flow.html#select":{}}}],["x4e4b;&#x540e;&#xff0c",{"_index":2324,"title":{},"body":{"basic/env_config.html#工作区":{},"basic/basic_data.html#字符串":{}}}],["x4e4b;&#x540e;&#xff0c;go",{"_index":4328,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e4b;&#x7c7b;&#x7684;&#x5bf9;&#x8c61;&#xff0c;golang",{"_index":5278,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e4b;&#x95f4",{"_index":4267,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4e4b;&#x95f4;&#x201c;&#x516c;&#x5e73;&#x201d;&#x7684;&#x7ade;&#x4e89",{"_index":4499,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e4b;&#x95f4;&#x7684;&#x901a;&#x4fe1;&#x673a;&#x5236;&#x3002",{"_index":2633,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e4b;&#x95f4;&#x7684;&#x901a;&#x4fe1;&#x867d;&#x7136;&#x6709;&#x591a;&#x79cd;&#x673a;&#x5236;&#x53ef;&#x9009;&#xff0c;&#x4f46;&#x7528;&#x8d77;&#x6765;&#x662f;&#x76f8;&#x5f53;&#x590d;&#x6742;&#xff1b",{"_index":4477,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e5f;&#x4e00;&#x6837;&#x3002;&#x5c06;&#x8fd9;&#x4e9b",{"_index":4491,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e5f;&#x4e0d;&#x80fd;&#x643a;&#x5e26;&#x4efb;&#x4f55;&#x6570;&#x636e;&#x3002",{"_index":5188,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4e5f;&#x4f1a;&#x662f;&#x8fd9;&#x6837;&#x3002",{"_index":1043,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x4e5f;&#x4f1a;&#x89e3;&#x7ed1",{"_index":4624,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e5f;&#x53eb;&#x505a;&#x540c;&#x6b65",{"_index":2680,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x4e0d;&#x6267;&#x884c;&#x8fd9;&#x4e00;&#x6b65;&#xff0c",{"_index":2379,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x521b;&#x5efa;&#x6587;&#x6863;&#x5b50;&#x76ee;&#x5f55;&#xff0c;&#x4f8b;&#x5982",{"_index":3657,"title":{},"body":{"theme/theme-usage.html#添加文档":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x5728;&#x542f;&#x52a8;&#x672c;&#x5730;&#x7684",{"_index":3018,"title":{},"body":{"commands/build.html#工具":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x7ffb;&#x8bd1;&#x4e3a",{"_index":350,"title":{},"body":{"index.html#编码":{}}}],["x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x8d4b;&#x503c;&#x3002",{"_index":1298,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x4e5f;&#x5404;&#x6709;&#x4e0d;&#x540c;&#x3002;&#x5b9e;&#x9645;&#x4e0a;&#xff0c;&#x53ea;&#x6709",{"_index":1340,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e5f;&#x5c31;&#x662f;&#x6211;&#x4eec;&#x7f16;&#x5199;&#x7684;&#x6700;&#x5916;&#x5c42;&#x51fd;&#x6570;&#x90a3;&#x91cc;&#x3002",{"_index":986,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x4e00;&#x65e6;&#x4ea7;&#x751f;&#x6b7b;&#x9501;&#xff0c;&#x7a0b;&#x5e8f;&#x5fc5;&#x7136;&#x5d29;&#x6e83",{"_index":4854,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x8fd9;&#x65f6;&#x53ea;&#x662f;&#x6d45;&#x8868;&#x590d;&#x5236;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x6df1;&#x5c42;&#x590d;&#x5236",{"_index":2599,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x4e5f;&#x662f",{"_index":5342,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4e5f;&#x6bd4;&#x8f83;&#x5bb9;&#x6613;&#x505a;&#x9488;&#x5bf9;&#x6027;&#x7684",{"_index":1327,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4e5f;&#x90fd;&#x4e0d;&#x6765;&#x89e3;&#x9501;&#xff0c;&#x90a3;&#x4e48;&#x53c8;&#x7531;&#x8c01;&#x6765;&#x8fdb;&#x5165;&#x4e34;&#x754c;&#x533a;&#xff0c;&#x5e76;&#x6539;&#x53d8;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#x5462;&#xff1f;&#x53ea;&#x8981;&#x5171;&#x4eab;&#x8d44;&#x6e90",{"_index":4928,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e86;&#x3002",{"_index":4503,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e86;&#x6240;&#x6709;&#x9700;&#x8981;&#x5b83;&#x6765;&#x6267;&#x884c;&#x7684",{"_index":4530,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e86;&#x67d0;&#x4e2a;&#x6b63;&#x6574;&#x6570;&#xff0c;&#x800c;&#x540e;&#x53c8;&#x7ecf;&#x8fc7;&#x4e00;&#x7cfb;&#x5217;&#x7684;&#x53d8;&#x5316;&#xff0c;&#x6700;&#x7ec8;&#x7531;&#x67d0;&#x4e2a;&#x6b63;&#x6574;&#x6570;&#x53c8;&#x53d8;&#x56de;&#x4e86",{"_index":5071,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4e89;&#x7528;&#x8fd9;&#x628a;&#x9501;&#x3002",{"_index":4835,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e8b;&#x60c5;&#x5728;&#x6d41;&#x7a0b;&#x4e0a;&#x5176;&#x5b9e;&#x57fa;&#x672c;&#x4e00;&#x81f4;&#xff0c;&#x53ea;&#x4e0d;&#x8fc7;&#x6bcf;&#x4e00;&#x6b65;&#x64cd;&#x4f5c;&#x7684;&#x5bf9;&#x8c61;&#x662f;&#x4e0d;&#x540c;&#x7684;&#x3002",{"_index":4896,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x4e8c;&#x7ef4;&#x6570;&#x7ec4",{"_index":474,"title":{"basic/array.html#二维数组":{}},"body":{}}],["x4e8e;&#x64cd;&#x4f5c;&#x7b26;&#x3002",{"_index":1381,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x4e8e;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x8c03;&#x5ea6;&#x7684;&#xff0c;&#x5373;&#x7a0b;&#x5e8f;&#x8d1f;&#x8d23;&#x521b;&#x5efa;&#x7ebf;&#x7a0b;&#xff0c;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x8d1f;&#x8d23;&#x8c03;&#x5ea6;&#x3002;&#x4f46;&#x662f;&#x8fd9;&#x79cd;&#x652f;&#x6301;&#x5e76;&#x53d1;&#x7684;&#x65b9;&#x5f0f;&#x6709;&#x4e0d;&#x5c11;&#x7f3a;&#x9677;&#xff1a",{"_index":4465,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4e8e;&#x7a0b;&#x5e8f;&#x903b;&#x8f91;&#x548c;&#x7a0b;&#x5e8f;&#x6027;&#x80fd;&#x90fd;&#x662f;&#x6709;&#x597d;&#x5904;&#x7684;&#x3002",{"_index":2785,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4e8e;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x7684;&#x503c;&#x5728;&#x88ab;&#x771f;&#x6b63;&#x4f7f;&#x7528;&#x4e4b;&#x540e;&#xff0c;&#x5c31;&#x4e0d;&#x5e94;&#x8be5;&#x518d;&#x88ab;&#x590d;&#x5236;&#x4e86;&#x3002",{"_index":5249,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e8e;&#x8ba1;&#x7b97;&#x673a;&#x4e2d;&#x771f;&#x6b63;&#x7684",{"_index":3276,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x4e92;&#x65a5;&#x9501",{"_index":2557,"title":{},"body":{"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html#共享变量":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4e92;&#x65a5;&#x9501;&#xff1a",{"_index":4785,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4e9b;&#x7c7b;&#x578b;&#x7684;&#x5bbd;&#x5ea6;&#x5c31;&#x90fd;&#x662f",{"_index":1995,"title":{},"body":{"basic/map.html#map":{}}}],["x4ea4;&#x4e92;&#x5408;&#x4f5c;&#x5b8c;&#x6210;&#x4efb;&#x52a1;&#x3002;&#x4e00;&#x4e2a",{"_index":4561,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4ea4;&#x6362;&#x503c",{"_index":1847,"title":{},"body":{"basic/var.html#赋值":{}}}],["x4ea7;&#x751f",{"_index":2980,"title":{},"body":{"commands/build.html#工具":{}}}],["x4eab;&#x5176;&#x6210;&#x5730;&#x4f7f;&#x7528;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x6240;&#x62e5;&#x6709;&#x7684;&#x4e00;&#x5207;&#x3002;&#x5982;&#x679c;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x6709;&#x54ea;&#x91cc;&#x4e0d;&#x5408;&#x5fc3;&#x610f;&#xff0c;&#x6211;&#x4eec;&#x8fd8;&#x53ef;&#x4ee5;&#x7528;&#x201c;&#x5305;&#x88c5;&#x201d;&#x6216;&#x201c;&#x5c4f;&#x853d;&#x201d;&#x7684;&#x65b9;&#x5f0f;&#x53bb;&#x8c03;&#x6574;&#x548c;&#x4f18;&#x5316;&#x3002",{"_index":1177,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x4ec0;&#x4e48;&#x53eb;&#x5185;&#x5bb9;&#x6cc4;&#x9732;&#xff1f;&#x8fd9;&#x91cc;&#x6240;&#x8bf4;&#x7684;&#x5185;&#x5bb9;&#x6cc4;&#x9732;&#x662f;&#x6307;&#xff0c;&#x4f7f;&#x7528",{"_index":3990,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ec0;&#x4e48;&#x65f6;&#x5019;&#x4f7f;&#x7528",{"_index":3031,"title":{},"body":{"commands/build.html#工具":{}}}],["x4ec0;&#x4e48;&#x662f;&#x4e3b",{"_index":4272,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4ec5;&#x4ec5;&#x53ea;&#x662f;&#x60f3;&#x8ba1;&#x7b97;&#x5bfc;&#x5165;&#x5305;&#x7684;&#x5305;&#x7ea7;&#x53d8;&#x91cf;&#x7684;&#x521d;&#x59cb;&#x5316;&#x8868;&#x8fbe;&#x5f0f;&#x548c;&#x6267;&#x884c;&#x5bfc;&#x5165;&#x5305;&#x7684",{"_index":1606,"title":{},"body":{"basic/package.html#点操作":{}}}],["x4ec5;&#x7528;&#x4e8e;&#x6574;&#x6570;&#x95f4;&#x7684;&#x8fd0;&#x7b97;&#x3002;&#x9664;&#x6cd5;&#x8fd0;&#x7b97;&#x7b26",{"_index":1876,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x4ecb;&#x7ecd",{"_index":158,"title":{"index.html#Golang-介绍":{}},"body":{}}],["x4ece",{"_index":982,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4ece;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7684;&#x5c42;&#x9762;&#x770b;&#xff0c;&#x9488;&#x5bf9;&#x4efb;&#x4f55;&#x6587;&#x4ef6;&#x7684",{"_index":4125,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4ece;&#x6839;&#x51fa;&#x53d1;&#x626b;&#x63cf;&#x6240;&#x6709;&#x53ef;&#x8fbe;&#x5bf9;&#x8c61;&#xff0c;&#x6807;&#x8bb0;&#x4e3a;&#x7070;&#x8272;&#xff0c;&#x653e;&#x5165;&#x5f85;&#x5904;&#x7406;&#x961f;&#x5217;&#x3002",{"_index":853,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x4ece;&#x7b2c",{"_index":3817,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ece;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x5220;&#x9664;&#x6389;&#x3002",{"_index":3558,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x4ece;&#x800c;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5b57;&#x7b26;&#x4e32",{"_index":3858,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ece;&#x961f;&#x5217;&#x53d6;&#x51fa;&#x7070;&#x8272;&#x5bf9;&#x8c61;&#xff0c;&#x5c06;&#x5176;&#x5f15;&#x7528;&#x5bf9;&#x8c61;&#x6807;&#x8bb0;&#x4e3a;&#x7070;&#x8272;&#x653e;&#x5165;&#x961f;&#x5217;&#xff0c;&#x81ea;&#x8eab;&#x6807;&#x8bb0;&#x4e3a;&#x9ed1;&#x8272;&#x3002",{"_index":854,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x4ece;0&#x5f00;&#x59cb;,&#x5982;&#x679c;&#x4e0d;&#x5b58;&#x5728;&#xff0c;&#x8fd4;&#x56d",{"_index":3845,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ee3;&#x66ff",{"_index":563,"title":{},"body":{"basic/flow.html#for":{}}}],["x4ee3;&#x7801;&#x3002",{"_index":3325,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4ee3;&#x7801;&#x4ee5;&#x53ca;&#x5806;&#x5185;&#x5b58;&#x7684;&#x4f7f;&#x7528;&#x60c5;&#x51b5;&#xff0c;&#x8fd9;&#x91cc;&#x5305;&#x542b;&#x5df2;&#x5206;&#x914d;&#x548c;&#x5df2;&#x91ca;&#x653e;&#x7684",{"_index":3327,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4ee3;&#x7801;&#x5230",{"_index":2926,"title":{},"body":{"commands/build.html#工具":{}}}],["x4ee3;&#x7801;&#x5305;&#x4e2d",{"_index":958,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4ee3;&#x7801;&#x5305;&#x4e2d;&#x3002",{"_index":2405,"title":{},"body":{"packages/container.html#container-包":{}}}],["x4ee3;&#x7801;&#x70b9;&#x662f",{"_index":340,"title":{},"body":{"index.html#编码":{}}}],["x4ee3;&#x7801;&#x70b9;&#x7684",{"_index":4010,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ee3;&#x7801;&#x70b9;&#x7684;&#x6574;&#x6570;&#x503c;&#xff0c;&#x5e76;&#x4f7f;&#x7528;&#x201c;u+&#x201d;&#x4f5c;&#x4e3a;&#x524d;&#x7f00;&#x3002;&#x6bd4;&#x5982;&#xff0c;&#x82f1;&#x6587;&#x5b57;&#x6bcd;&#x5b57;&#x7b26;&#x201c;a&#x201d;&#x7684",{"_index":339,"title":{},"body":{"index.html#编码":{}}}],["x4ee3;&#x7801;&#x90fd;&#x5728",{"_index":4489,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4ee3;&#x8868",{"_index":4142,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x901a;&#x4fe1;&#x64cd;&#x4f5c;&#xff0c;&#x53d1;&#x9001;&#x6216;&#x8005;&#x63a5;&#x6536;&#x3002",{"_index":2760,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4ee3;&#x8868;&#x7684;&#x4e5f;&#x662f;&#x6a21;&#x5f0f;&#xff0c;&#x5b83;&#x7684;&#x7c7b;&#x578b;&#x662f",{"_index":4115,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4ee3;&#x8868;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x7136;&#x540e;&#x628a",{"_index":4418,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4ee3;&#x8868;&#x7684;&#x662f;&#x65e2;&#x65e0;&#x53c2;&#x6570;&#x58f0;&#x660e;&#x4e5f;&#x65e0;&#x7ed3;&#x679c;&#x58f0;&#x660e;&#x7684;&#x51fd;&#x6570;&#x7c7b;&#x578b",{"_index":4409,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4ee3;&#x8868;&#x7684;&#x662f;&#xff1a;&#x6b64;&#x884c;&#x4ee3;&#x7801;&#x76f8;&#x5bf9;&#x4e8e;&#x5176;&#x6240;&#x5c5e;&#x51fd;&#x6570;&#x7684;&#x5165;&#x53e3;&#x7a0b;&#x5e8f;&#x8ba1;&#x6570;&#x504f;&#x79fb;&#x91cf;&#x3002;&#x7528;&#x5904;&#x5e76;&#x4e0d;&#x5927;&#x3002",{"_index":975,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4ee3;&#x8868;&#x7a7a;&#x6807;&#x8bc6;&#x7b26;&#xff0c",{"_index":214,"title":{},"body":{"index.html#空标识符":{}}}],["x4ee3;&#x8868;&#x8fd9;&#x4e2a",{"_index":2640,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4ee3;&#x8868;&#xff09;&#x3002",{"_index":5150,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4ee3;&#x8868;&#xff09;&#xff0c;&#x4ee5;&#x53ca;&#x4e00;&#x4e2a",{"_index":5148,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4ee3;&#x8868;&#xff0c;&#x5b83;&#x662f",{"_index":4114,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x4ee5",{"_index":1624,"title":{},"body":{"basic/package.html#包声明":{}}}],["x4ee5;&#x5207;&#x7247;&#x503c;&#x4e3a;&#x4f8b;&#xff0c;&#x5982;&#x6b64;&#x590d;&#x5236;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x53ea;&#x662f;&#x62f7;&#x8d1d;&#x4e86;&#x5b83;&#x6307;&#x5411;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x4e2d;&#x67d0;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x7684;&#x6307;&#x9488;&#xff0c;&#x4ee5;&#x53ca;&#x5b83;&#x7684;&#x957f;&#x5ea6;&#x503c;&#x548c;&#x5bb9;&#x91cf;&#x503c;&#xff0c;&#x800c;&#x5b83;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x5e76;&#x4e0d;&#x4f1a;&#x88ab;&#x62f7;&#x8d1d;&#x3002",{"_index":2600,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x4ee5;&#x53ca",{"_index":871,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x4ee5;&#x53ca;&#x5224;&#x65ad;&#x6211;&#x4eec;&#x7ed9;&#x4e88;&#x7684;&#x6807;&#x8bb0;&#x662f;&#x5426;&#x5408;&#x6cd5;&#xff0c;&#x7b49;&#x7b49;&#x3002",{"_index":3230,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x4ee5;&#x53ca;&#x5bf9",{"_index":5378,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x4ee5;&#x53ca;&#x76f8;&#x5173;&#x7684;&#x53d8;&#x91cf;&#x548c;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x8fdb;&#x884c;&#x4e86;&#x7edf;&#x4e00;&#x7684;&#x53d8;&#x66f4;&#xff08;&#x7531",{"_index":4432,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4ee5;&#x53ca;&#x8fd9;&#x4e2a;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x7684;&#x7edd;&#x5bf9;&#x8def;&#x5f84;&#x3002",{"_index":974,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4ee5;&#x5bf9",{"_index":4431,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4ee5;&#x6c42;&#x54c8;&#x5e0c;&#x7684;&#x64cd;&#x4f5c;&#x4e3a;&#x4f8b;&#xff0c;&#x5bbd;&#x5ea6;&#x8d8a;&#x5c0f;&#x7684;&#x7c7b;&#x578b;&#x901f;&#x5ea6;&#x901a;&#x5e38;&#x8d8a;&#x5feb;&#x3002;&#x5bf9;&#x4e8e;&#x5e03;&#x5c14;&#x7c7b;&#x578b;&#x3001;&#x6574;&#x6570;&#x7c7b;&#x578b;&#x3001;&#x6d6e;&#x70b9;&#x6570;&#x7c7b;&#x578b;&#x3001;&#x590d;&#x6570;&#x7c7b;&#x578b;&#x548c;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x6765;&#x8bf4;&#x90fd;&#x662f;&#x5982;&#x6b64;&#x3002;&#x5bf9;&#x4e8e;&#x5b57",{"_index":1990,"title":{},"body":{"basic/map.html#map":{}}}],["x4ee5;&#x7528",{"_index":3832,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4ee5;&#x901a;&#x8fc7;&#x8c03;&#x7528;&#x8be5;&#x7c7b;&#x578b;&#x503c;&#x7684",{"_index":5045,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4ee5;&#x9a71;&#x4f7f;&#x5b83;&#x628a;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x5199;&#x8fdb;&#x6211;&#x4eec;&#x6307;&#x5b9a;&#x7684;&#x5199;&#x5165;&#x5668;&#x4e2d;&#x3002",{"_index":3374,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4eec;&#x8981;&#x7ade;&#x4e89;&#x7684;&#x6240;&#x8c13",{"_index":4517,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4efb;&#x4f55;&#x65f6;&#x5019;&#x53d1;&#x751f;&#xff0c;&#x5e76;&#x4e14;&#x5b8c;&#x5168;&#x4e0d;&#x4f1a;&#x5f71;&#x54cd;&#x5230;&#x7a0b;&#x5e8f;&#x7684;&#x529f;&#x80fd;&#x3002",{"_index":5252,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x4efb;&#x4f55;&#x7c7b;&#x578b;&#x7684;&#x6307;&#x9488;&#x7684;&#x96f6;&#x503c;&#x90fd;&#x662f",{"_index":1299,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x4efb;&#x52a1;&#x53d1;&#x51fa;&#x62a2;&#x5360;&#x8c03;&#x5ea6;&#xff1b",{"_index":4598,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f18;&#x5148;&#x7ea7",{"_index":1868,"title":{"basic/operator.html#优先级":{}},"body":{}}],["x4f18;&#x5148;&#x8003;&#x8651;&#x54ea;&#x4e9b;&#x7c7b;&#x578b;&#x4f5c;&#x4e3a;&#x5b57;&#x5178;&#x7684;&#x952e;&#x7c7b;&#x578b",{"_index":1986,"title":{},"body":{"basic/map.html#map":{}}}],["x4f18;&#x5316;&#x3002;&#x590d;&#x6742;&#x7684;&#x9ad8;&#x7ea7;&#x7c7b;&#x578b;&#x5360;&#x7528;&#x7684;&#x5185;&#x5b58;&#x5f80;&#x5f80;&#x76f8;&#x5bf9;&#x8f83;&#x5927;&#xff0c;&#x5b58;&#x50a8;&#x5728",{"_index":1328,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4f18;&#x70b9;&#xff1a",{"_index":1185,"title":{},"body":{"basic/oop.html#封装":{}}}],["x4f1a",{"_index":2763,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4f1a;&#x4e00;&#x76f4;&#x505c;&#x6ede;&#x5728;&#x8c03;&#x7528;&#x8be5;&#x4e92;&#x65a5;&#x9501;&#x7684",{"_index":4824,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4f1a;&#x4e00;&#x76f4;&#x8fdb;&#x884c;&#x66f4;&#x65b0;&#x3002",{"_index":873,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x4f1a;&#x4e0e;&#x6211;&#x4eec;&#x624b;&#x52a8;&#x542f;&#x7528;&#x7684;&#x5176;&#x4ed6",{"_index":4363,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x4ee5;&#x600e;&#x6837;&#x7684;&#x987a;&#x5e8f;&#x8fd0;&#x884c;&#x3002;&#x7531;&#x4e8e;&#x4e3b",{"_index":4362,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x4fdd;&#x5b58;&#x6bcf;&#x4e2a;&#x5305;&#x7684;&#x7f16;&#x8bd1;&#x6210;&#x679c;&#xff0c;&#x5e76;&#x628a",{"_index":2966,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f1a;&#x4fdd;&#x62a4;&#x5171;&#x4eab;&#x53d8;&#x91cf;&#xff0c;&#x5f53;&#x5df2;&#x7ecf;&#x6709",{"_index":4786,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4f1a;&#x5148;&#x6839;&#x636e;&#x5b57;&#x7b26;&#x4e32;&#x6570;&#x7ec4;&#x7684;&#x5185;&#x5bb9;&#xff0c;&#x8ba1;&#x7b97;&#x51fa;&#x4e00;&#x4e2a;&#x62fc;&#x63a5;&#x4e4b;&#x540e;&#x7684;&#x957f;&#x5ea6;&#xff0c;&#x7136;&#x540e;&#x7533;&#x8bf7;&#x5bf9;&#x5e94;&#x5927;&#x5c0f;&#x7684;&#x5185;&#x5b58;&#xff0c;&#x4e00;&#x4e2a;&#x4e00;&#x4e2a;&#x5b57;&#x7b26",{"_index":3829,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4f1a;&#x5148;&#x88ab;&#x6c42;&#x503c",{"_index":4404,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x5148;&#x88ab;&#x6c42;&#x503c;&#x3002",{"_index":586,"title":{},"body":{"basic/flow.html#for":{}}}],["x4f1a;&#x521b;&#x5efa;&#x591a;&#x4e2a;&#x7ebf;&#x7a0b;&#x6765;&#x6267;&#x884c;&#x5e76;&#x53d1;&#x4efb;&#x52a1;&#xff0c;&#x800c;&#x4e14;&#x4efb;&#x52a1",{"_index":4247,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x5339;&#x914d;&#x6240;&#x6709;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002",{"_index":3209,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x4f1a;&#x53bb;&#x5c1d;&#x8bd5;&#x83b7;&#x53d6;&#x4e00;&#x4e2a;&#x53ef;&#x7528;&#x7684",{"_index":4639,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x53bb;&#x901a;&#x4fe1;&#x5e76;&#x6267;&#x884c",{"_index":552,"title":{},"body":{"basic/flow.html#select":{}}}],["x4f1a;&#x5728",{"_index":4306,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x5728;&#x4ec0;&#x4e48;&#x65f6;&#x5019;&#x6267;&#x884c;&#xff0c;&#x8fd9;&#x4e2a;&#x53c2;&#x6570;&#x503c;&#x90fd;&#x4e0d;&#x4f1a;&#x53d8;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c",{"_index":4406,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x5728;&#x4f20;&#x9012;&#x53c2;&#x6570;&#x524d;&#x81ea;&#x52a8;&#x9002;&#x914d;&#x4ee5;&#x7b26;&#x5408;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#xff1a;&#x5982;&#x679c;&#x65b9;&#x6cd5;&#x7684;&#x53c2;&#x6570",{"_index":1348,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4f1a;&#x5728;&#x540e;&#x53f0;&#x6709;&#x4e00;&#x4e2a;&#x68c0;&#x6d4b;&#x7ebf;&#x7a0b;&#xff0c;&#x5b83;&#x4f1a;&#x68c0;&#x6d4b;&#x8fd9;&#x4e9b;&#x60c5;&#x51b5;&#xff0c",{"_index":4574,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x590d;&#x5236;&#x76ee;&#x6807;&#x6570;&#x636e;&#x3002;&#x53ef;&#x6539;&#x7528;&#x6570;&#x7ec4;&#x6307;&#x9488;&#x6216;&#x8005;&#x5207;&#x7247",{"_index":565,"title":{},"body":{"basic/flow.html#for":{}}}],["x4f1a;&#x5b8c;&#x5168;&#x505c;&#x6b62;&#x5bf9;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x91c7;&#x6837;&#x3002;&#x8be5;&#x53d8;&#x91cf;&#x7684;&#x7f3a;&#x7701;&#x503c;&#x662f",{"_index":3345,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4f1a;&#x5c1d;&#x8bd5;&#x8fd0;&#x884c;&#x4e0b;&#x4e00;&#x4e2a",{"_index":4608,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x5f15;&#x8d77;&#x7a0b;&#x5e8f;&#x7684;&#x5d29;&#x6e83;&#xff0c;&#x56e0;&#x6b64",{"_index":948,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4f1a;&#x5f71;&#x54cd;&#x5230;&#x5df2;&#x5b58;&#x5728;&#x7684;&#x5185;&#x5bb9;&#x3002",{"_index":3892,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4f1a;&#x628a",{"_index":2381,"title":{},"body":{"basic/env_config.html#Go-Module":{},"concurrent/sync_lock.html#sync-Map":{}}}],["x4f1a;&#x628a;&#x8be5;&#x952e;&#x503c;&#x5bf9;&#x4e2d;&#x6307;&#x5411;&#x503c;&#x7684;&#x90a3;&#x4e2a;&#x6307;&#x9488;&#x7f6e;&#x4e3a",{"_index":5359,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4f1a;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x4e34;&#x65f6",{"_index":3164,"title":{},"body":{"basic/test.html#测试":{}}}],["x4f1a;&#x786e;&#x4fdd;&#x6240;&#x6709",{"_index":4449,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f1a;&#x7ecf;&#x7531",{"_index":3386,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4f1a;&#x7f16;&#x8bd1;&#x5931;&#x8d25;&#xff1a",{"_index":1781,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x4f1a;&#x81ea;&#x52a8;&#x4e0b;&#x8f7d",{"_index":2380,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x4f1a;&#x81ea;&#x52a8;&#x63a8;&#x65ad;&#x7c7b;&#x578b;&#xff1a",{"_index":1826,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x4f1a;&#x88ab;&#x5524;&#x9192;&#xff0c;&#x6807;&#x8bb0;&#x4e3a",{"_index":4617,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x88ab;&#x653e;&#x7f6e;&#x5230;&#x67d0;&#x4e2a",{"_index":4606,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x88ab;&#x6807;&#x8bb0;&#x4e3a",{"_index":4642,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x8bb0;&#x5f55;&#x4e0b;&#x6bcf;&#x4e00;&#x4e2a;&#x8bfb;&#x6216;&#x8005;&#x5199;&#x5171;&#x4eab;&#x53d8;&#x91cf;&#x7684",{"_index":5375,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x4f1a;&#x8fd0;&#x884c;&#x793a;&#x4f8b;&#x51fd;&#x6570;&#x6d4b;&#x8bd5;&#x3002",{"_index":3225,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x4f1a;&#x90a3;&#x4e48;&#x50cf;&#x8fdb;&#x7a0b;&#x5207;&#x6362;&#x90a3;&#x4e48;&#x8017;&#x8d39;&#x8d44;&#x6e90;&#x3002",{"_index":4239,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x4f1a;&#x963b;&#x585e;&#xff0c;&#x6267;&#x884c;&#x8be5",{"_index":4623,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f1a;&#x968f;&#x673a;&#x5730;&#x9009;&#x62e9;&#x4e00;&#x4e2a;&#x6267;&#x884c;&#x3002;&#x5982;&#x679c;&#x6ca1;&#x6709",{"_index":556,"title":{},"body":{"basic/flow.html#select":{}}}],["x4f20;&#x5165;&#x51fd;&#x6570;&#x7684;&#x90a3;&#x4e9b;&#x53c2;&#x6570;&#x503c;&#x540e;&#x6765;&#x600e;&#x4e48;&#x6837;&#x4e86",{"_index":2585,"title":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}},"body":{}}],["x4f20;&#x53c2;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x4f20;&#x8fdb;&#x53bb;&#x7684;&#x662f;&#x503c;&#x8fd8;&#x662f;&#x5f15;&#x7528;&#x3002;&#x5b9e;&#x9645;&#x4e0a;&#xff0c;&#x5728;&#x5927;&#x90e8;&#x5206;&#x5f15;&#x7528;&#x578b;&#x8bed;&#x8a00;&#x91cc;&#xff0c",{"_index":1322,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x4f20;&#x64ad;&#x3002;&#x6240;&#x4ee5;&#xff0c",{"_index":1030,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x4f20;&#x64ad;&#x9519;&#x8bef",{"_index":926,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x4f20;&#x7ed9",{"_index":4402,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f20;&#x9012;&#x53c2;&#x6570;&#x7ed9;5c",{"_index":2951,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f20;&#x9012;&#x53c2;&#x6570;&#x7ed9;5g",{"_index":2954,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f20;&#x9012;&#x53c2;&#x6570;&#x7ed9;5l",{"_index":2960,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f20;&#x9012;&#x53c2;&#x6570;&#x7ed9;gccgo&#x7f16;&#x8bd1;&#x8fde;&#x63a5;&#x8c03;&#x7528",{"_index":2953,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f20;&#x9012;&#x767e;&#x5206;&#x6bd4",{"_index":877,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x4f3c;&#x662f;&#x7ee7;&#x627f;&#x4e86",{"_index":1165,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x4f46;&#x662f",{"_index":482,"title":{},"body":{"basic/array.html#数组传入函数":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4f46;&#x662f;&#x5728",{"_index":4508,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f46;&#x662f;&#x5982;&#x679c;&#x5305;&#x7684;&#x6ce8;&#x91ca;&#x8f83;&#x957f;&#xff0c;&#x4e00;&#x822c;&#x4f1a;&#x653e;&#x5230;&#x4e00;&#x4e2a;&#x53eb;&#x505a",{"_index":3007,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f46;&#x662f;&#x5982;&#x679c;&#x662f;&#x5f15;&#x7528;&#x4f20;&#x9012;&#xff0c;&#x5728;&#x8c03;&#x7528;&#x51fd;&#x6570;&#x65f6;&#x5c06;&#x5b9e;&#x9645;&#x53c2;&#x6570;&#x7684;&#x5730;&#x5740;&#x4f20;&#x9012;&#x5230;&#x51fd;&#x6570;&#x4e2d;&#xff0c;&#x90a3;&#x4e48;&#x5728;&#x51fd;&#x6570;&#x4e2d;&#x5bf9;&#x53c2;&#x6570;&#x6240;&#x8fdb;&#x884c;&#x7684;&#x4fee;&#x6539;&#xff0c;&#x5c06;&#x5f71;&#x54cd;&#x5230;&#x5b9e;&#x9645;&#x53c2;&#x6570;&#x3002",{"_index":2506,"title":{},"body":{"basic/function.html#参数":{}}}],["x4f46;&#x662f;&#x8fd9;&#x65f6;&#x5b83;&#x7edd;&#x4e0d;&#x4f1a;&#x88ab;&#x60f3;&#x63a5;&#x6536;&#x5b83;&#x7684;&#x4e00;&#x65b9;&#x770b;&#x5230;&#x548c;&#x53d6;&#x8d70",{"_index":2728,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4f46;&#x662f;&#xff0c;&#x4e3a;&#x4e86;&#x52a0;&#x5feb;&#x6d4b;&#x8bd5;&#x901f;&#x5ea6;&#xff0c;&#x5b83;&#x901a;&#x5e38;&#x4f1a;&#x5e76;&#x53d1;&#x5730;&#x5bf9;&#x591a;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#x8fdb;&#x884c;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#xff0c;&#x53ea;&#x4e0d;&#x8fc7;&#xff0c;&#x5728;&#x6700;&#x540e;&#x6253;&#x5370;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x4f1a;&#x4f9d;&#x7167;&#x6211;&#x4eec;&#x7ed9;&#x5b9a;&#x7684",{"_index":3237,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x4f46;&#x662f;&#xff0c;&#x5f53;&#x539f;&#x5207;&#x7247;&#x7684;&#x957f;&#x5ea6;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x539f;&#x957f;&#x5ea6;&#xff09;&#x5927;&#x4e8e;&#x6216;&#x7b49;&#x4e8",{"_index":2096,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x4f46;&#x662f;&#xff0c;&#x5f53;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x5728;&#x6267;&#x884c;&#x7684;&#x65f6;&#x5019;&#x53d1;&#x73b0;&#x7a7a;&#x7684;&#x901a;&#x9053;&#x4e2d;&#xff0c;&#x6b63;&#x597d;&#x6709;&#x7b49;&#x5f85;&#x7684;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#xff0c;&#x90a3;&#x4e48;&#x5b83;&#x4f1a;&#x76f4;&#x63a5;&#x628a;&#x5143;&#x7d20;&#x503c;&#x590d;&#x5236;&#x7ed9;&#x63a5;&#x6536;&#x65b9;&#x3002",{"_index":2708,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4f46;&#x662f;&#xff0c;&#x6211;&#x4eec",{"_index":1001,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x4f46;&#x662f;&#xff0c;&#x7531;&#x4e8e;&#x8fd9;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x4e0",{"_index":4003,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4f46;&#x662f;s&#x7c7b;&#x578b;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x53ef;&#x4ee5;&#x5305;&#x542b",{"_index":1756,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x4f46;&#x6709;&#x4e00;&#x4e2a;&#x4f8b;&#x5916;&#xff0c;&#x5bf9;&#x5207;&#x7247;&#x5b57;&#x9762;&#x91cf;&#x7684;&#x7d22;&#x5f15;&#x7ed3;&#x679c;&#x503c;&#x867d;&#x7136;&#x4e5f;&#x5c5e;&#x4e8e;&#x4e34;&#x65f6;&#x7ed3;&#x679c;&#xff0c;&#x4f46;&#x5374;&#x662f;&#x53ef;&#x5bfb;&#x5740;&#x7684;&#x3002;&#x51fd;&#x6570;&#x7684;&#x8fd4;&#x56de;&#x503c;&#x4e5f;&#x662f;&#x4e34;&#x65f6;&#x7ed3;&#x679c;&#x3002",{"_index":1379,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x4f46;&#x8fd9;&#x662f;&#x9519;&#x8bef;&#x7684;&#x7406;&#x89e3;&#x3002;&#x8bf7;&#x6ce8;&#x610f;&#x4e0a;&#x9762;&#x4f8b;&#x5b50;&#x4e2d;&#x5bf9",{"_index":1160,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x4f4d;&#x4e3a",{"_index":1893,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x4f4d;&#x6574;&#x578b",{"_index":3778,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x4f4d;&#x6d6e;&#x70b9;&#x578b;&#x6570;&#xff0c",{"_index":3785,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x4f4d;&#x7684;&#x503c;&#x3002;&#x5982;&#xff1a",{"_index":1901,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x4f4d;&#x7b49;&#x4e8e",{"_index":1899,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x4f4d;&#x7f6e;&#x53bb;&#x5bfb;&#x627e;&#x65b0;&#x7684;&#x8bfb;&#x5199;&#x4f4d;&#x7f6e;&#x3002;&#x8fd9;&#x4e2a;&#x65b0;&#x7684;&#x8bfb;&#x5199;&#x4f4d;&#x7f6e;&#x7528;&#x4e8e;&#x8868;&#x660e;&#x4e0b;&#x4e00;&#x6b21;&#x8bfb;&#x6216;&#x5199;&#x65f6;&#x7684;&#x8d77;&#x59cb;&#x7d22;&#x5f15;&#x3002",{"_index":3497,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x4f4d;&#x8fd0;&#x7b97;&#x7b26",{"_index":1889,"title":{"basic/operator.html#位运算符":{}},"body":{}}],["x4f4d;&#xff08;&#x4e5f;&#x53ef;&#x4ee5;&#x8bf4;&#x662f;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x7684;&#x4e00;&#x4e2a;&#x5b9e;&#x4f53;&#xff09;&#x3002",{"_index":4234,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x4f55;&#x65f6;&#x89e6;&#x53d1",{"_index":857,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x4f5c;&#x4e3a;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x53c2;&#x6570;&#x65f6;&#xff0c;&#x5b83;&#x4e00;&#x822c;&#x603b;&#x662f;&#x88ab;&#x4e13;&#x95e8;&#x7528;&#x4e8",{"_index":2711,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x4f5c;&#x4e3a;&#x4e00;&#x4e2a;&#x7f16;&#x7801;&#x5355;&#x5143;&#x3002;&#x5b83;&#x4e0e;&#x6807;&#x51c6;&#x7684",{"_index":359,"title":{},"body":{"index.html#编码":{}}}],["x4f5c;&#x4e3a;&#x53c2;&#x6570;&#x4f20;&#x7ed9;&#x4e86;&#x5b83;&#x3002",{"_index":4413,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f5c;&#x4e3a;&#x53c2;&#x6570;&#xff0c;&#x90a3;&#x4e48;&#x4ed6;&#x53ef;&#x4ee5;&#x63a5;&#x53d7;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x4f5c;&#x4e3a;&#x53c2;&#x6570;&#xff0c;&#x5982;&#x679c;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x8fd4;&#x56d",{"_index":740,"title":{},"body":{"basic/interface.html#接口":{}}}],["x4f5c;&#x4e3a;&#x5b58;&#x50a8;&#x4ecb;&#x8d28",{"_index":5324,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4f5c;&#x4e3a;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x662f;&#x975e;&#x5e38;&#x597d;&#x7684;&#xff0c;&#x56e0;&#x4e3a;&#x65e0;&#x8bba",{"_index":1935,"title":{},"body":{"basic/map.html#map":{}}}],["x4f5c;&#x4e3a;&#x63a5;&#x6536;&#x5668;&#x3002",{"_index":1126,"title":{},"body":{"basic/oop.html#方法":{}}}],["x4f5c;&#x4e3a;&#x6587;&#x6863;&#xff0c;&#x5982",{"_index":3222,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x4f5c;&#x662f;&#x4e0d;&#x5b89;&#x5168;&#x7684;&#x3002",{"_index":5298,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4f5c;&#x7528;&#x57df",{"_index":2110,"title":{"basic/scope.html#作用域":{}},"body":{}}],["x4f5c;&#x7528;&#x57df;&#x90fd;&#x662f;&#x5168;&#x5c40;&#x7684;&#xff08;&#x5728;&#x672c;&#x5305;&#x8303;&#x56f4;&#x5185;&#xff09",{"_index":2115,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x4f5c;&#x7cfb;&#x7edf;&#x8c03;&#x5ea6;&#x5207;&#x6362",{"_index":4474,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f60;&#x53ef;&#x4ee5;&#x60f3;&#x8c61;&#x8be5;&#x7c7b;&#x578b;&#x4e2d;&#x6709;&#x4e00;&#x4e2a;&#x8ba1;&#x6570;&#x5668;&#xff0c;&#x5b83;&#x7684;&#x9ed8;&#x8ba4;&#x503c;&#x662f",{"_index":5043,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4f60;&#x53ef;&#x4ee5;&#x628a;&#x8fd9;&#x5757;&#x5185;&#x5b58;&#x7684;&#x5185;&#x5bb9;&#x770b;&#x6210;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#xff0c;&#x800c;&#x76f8;&#x5e94;&#x7684",{"_index":3864,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4f60;&#x7684;&#x4ee3;&#x7801;&#x5c31;&#x88ab;&#x4fee;&#x6539;&#x6210;&#x4e86;&#x6807;&#x51c6;&#x683c;&#x5f0f;&#x3002",{"_index":2991,"title":{},"body":{"commands/build.html#工具":{}}}],["x4f7f;&#x4efb;&#x4f55;&#x9488;&#x5bf9;&#x5b83;&#x7684;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x7acb;&#x5373;&#x7ed3;&#x675f;&#x3002",{"_index":5217,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x4f7f;&#x7528",{"_index":202,"title":{},"body":{"index.html#注释":{},"index.html#自定义类型":{},"index.html#类型断言":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html#序列化":{},"basic/package.html#初始化包":{},"basic/map.html#map":{},"basic/slice.html#slice":{},"concurrent/channel.html#channel":{},"commands/build.html#工具":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#sync-Map":{}}}],["x4f7f;&#x7528;&#x51fd;&#x6570",{"_index":2529,"title":{},"body":{"basic/function.html#函数作为值":{}}}],["x4f7f;&#x7528;&#x5e26;&#x6709",{"_index":601,"title":{},"body":{"basic/flow.html#for":{}}}],["x4f7f;&#x7528;&#x6587;&#x6863;&#x4e3b;&#x9898",{"_index":3637,"title":{"theme/theme-usage.html#使用文档主题":{}},"body":{}}],["x4f7f;&#x7528;&#x6ce8;&#x610f",{"_index":5075,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x4f7f;&#x7528;&#x8be5;&#x51fd;&#x6570;&#x524d;&#x7f00;&#x6dfb;&#x52a0;&#x989d;&#x5916;&#x7684;&#x4e0a;&#x4e0b;&#x6587;&#x4fe1;&#x606f;&#x5230;&#x539f;&#x59cb;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x3002",{"_index":930,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x4f7f;&#x7528;&#x901a;&#x9053",{"_index":4391,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f7f;&#x7528;&#x9501;&#x5c31;&#x610f;&#x5473;&#x7740;&#x8981;&#x628a;&#x4e00;&#x4e9b;&#x5e76;&#x53d1;&#x7684;&#x64cd;&#x4f5c;&#x5f3a;&#x5236;&#x4e32;&#x884c;&#x5316;&#x3002;&#x8fd9;&#x5f80;&#x5f80;&#x4f1a;&#x964d;&#x4f4e;&#x7a0b;&#x5e8f;&#x7684;&#x6027;&#x80fd;&#xff0c;&#x5c24;&#x5176;&#x662f;&#x5728;&#x8ba1;&#x7b97;&#x673a;&#x62e5;&#x6709;&#x591a;&#x4e2a",{"_index":5304,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x4f7f;&#x7528;&#xff0c;&#x4ee5;&#x514d;&#x9020;&#x6210;&#x6d41;&#x7a0b;&#x6df7;&#x4e71;&#x3002",{"_index":598,"title":{},"body":{"basic/flow.html#for":{}}}],["x4f7f;&#x7528;&#xff0c;&#x8fd9;&#x70b9;&#x548c;&#x6211;&#x5e38;&#x7528;&#x7684;js&#x4e0d;&#x540c;&#xff1a",{"_index":262,"title":{},"body":{"index.html#类型转换":{}}}],["x4f8b;&#x5982;&#xff1a",{"_index":1519,"title":{},"body":{"basic/constant.html#常量":{}}}],["x4f9b",{"_index":4610,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x4f9d;&#x7136;&#x60f3;&#x8ba9;&#x4e3b",{"_index":4444,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x4f9d;&#x8d56;c",{"_index":1639,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x4fdd;&#x5b58;&#x5185;&#x5b58;&#x5730;&#x5740;&#x7684;&#x6574;&#x5f62;&#x53d8;&#x91cf;&#x3002",{"_index":1286,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x4fdd;&#x5b58;&#x5df2;&#x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#x7684;&#x8ba1;&#x6570;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x5df2;&#x8bfb;&#x8ba1;&#x6570;&#xff09;&#x3002",{"_index":3926,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x4fdd;&#x8bc1;&#x6bcf;&#x4e2a;&#x5305;&#x662f;&#x6700;&#x65b0;&#x7248;&#x672c;&#x3002",{"_index":2928,"title":{},"body":{"commands/build.html#工具":{}}}],["x4fe1;&#x606f",{"_index":1746,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x4fe1;&#x606f;&#x5c55;&#x793a;&#x51fa;&#x6765;&#x3002",{"_index":3316,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x4fe1;&#x606f;&#x7684",{"_index":4848,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x4fee;&#x6539",{"_index":3645,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x500d",{"_index":2095,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x500d;&#x4f5c;&#x4e3a;&#x65b0;&#x5bb9;&#x91cf;&#x7684;&#x57fa;&#x51c6;&#xff08;&#x4ee5;&#x4e0b;&#x65b0;&#x5bb9;&#x91cf;&#x57fa;&#x51c6;&#xff09;&#x3002",{"_index":2099,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x503c",{"_index":579,"title":{},"body":{"basic/flow.html#for":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x3002",{"_index":3923,"title":{},"body":{"basic/basic_data.html#字符串":{},"packages/os.html#os包中的API":{}}}],["x503c;&#x3002;&#x7136;&#x800c;&#xff0c;&#x8be5;&#x51fd;&#x6570;&#x53ea;&#x80fd;&#x4ee5;&#x53ea;&#x8bfb;&#x6a21;&#x5f0f;&#x6253;&#x5f00;&#x6587;&#x4ef6;&#x3002;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x6211;&#x4eec;&#x53ea;&#x80fd;&#x4ece;&#x8be5;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x7684",{"_index":4106,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x503c;&#x4e0a;&#x5e94;&#x7528;&#x5207;&#x7247;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x5c31;&#x76f8;&#x5f53;&#x4e8e;&#x5728;&#x5bf9;&#x5176;&#x5e95;&#x5c42;&#x7684;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#x505a;&#x5207;&#x7247",{"_index":3867,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e0d;&#x80fd;&#x518d;&#x88ab;&#x590d;&#x5236;&#xff0c;&#x4f46;&#x662f;&#x5b83;&#x7684;&#x6307;&#x9488;&#x503c;&#x5374;&#x53ef;&#x4ee5;&#x3002;&#x65e0;&#x8bba;&#x4ec0;&#x4e48;&#x65f6;&#x5019;&#xff0c;&#x6211;&#x4eec;&#x90fd;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x4efb;&#x4f55;&#x65b9;&#x5f0f;&#x590d;&#x5236;&#x8fd9;&#x6837;&#x7684;&#x6307;&#x9488;&#x503c",{"_index":3921,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e0d;&#x80fd;&#x518d;&#x88ab;&#x590d;&#x5236;&#xff0c;&#x6240;&#x4ee5;&#x80af;&#x5b9a;&#x4e0d;&#x4f1a;&#x51fa;&#x73b0;&#x591a;&#x4e2a",{"_index":3916,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e2d;&#x6709;&#x4e00;&#x4e2a;&#x7528;&#x4e8e;&#x627f;&#x8f7d;&#x5185;&#x5bb9;&#x7684;&#x5bb9;&#x5668;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff09;&#x3002;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x4ee5",{"_index":3881,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e2d;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff08;&#x4e5f;&#x5c31;&#x662f;&#x90a3;&#x4e2a;&#x5b57;&#x8282;&#x5207;&#x7247;&#xff09;&#x5171;&#x7528;&#x4e00;&#x4e2a;&#x5e95;&#x5c42;&#x5b57",{"_index":3917,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e2d;&#x7684;&#x5185;&#x5bb9;&#x662f;&#x4e0d;&#x53ef;&#x53d8;&#x7684;&#x3002;&#x56e0;&#x6b64;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5229;&#x7528",{"_index":3890,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e2d;&#x76f8;&#x5e94;&#x7684;&#x4ee3;&#x7801;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#xff09;&#x4f1a;&#x5148;&#x5224;&#x65ad;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5269;&#x4f59;&#x5bb9;&#x91cf;&#xff0c;&#x662f;&#x5426;&#x53ef;&#x4ee5;&#x6ee1;&#x8db3;&#x8c03;&#x7528;&#x65b9;&#x7684;&#x8981;&#x6c42;&#xff0c;&#x6216;&#x8005;&#x662f;&#x5426;&#x8db3",{"_index":3975,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4e2d;&#x8bfb;&#x53d6;&#x5185;&#x5bb9;&#xff0c;&#x800c;&#x4e0d;&#x80fd;&#x5411;&#x5b83;&#x5199;&#x5165;&#x4efb;&#x4f55;&#x5185;&#x5bb9;&#x3002",{"_index":4107,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x503c;&#x4e4b;&#x4e0a;&#xff0c;&#x5bf9;&#x76f8;&#x5e94;&#x7684;&#x6587;&#x4ef6;&#x8fdb;&#x884c;&#x8bfb;&#x64cd;&#x4f5c;&#x548c;&#x5199;&#x64cd;&#x4f5c;&#x3002",{"_index":4094,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x503c;&#x4ea7;&#x751f;&#x51fa;&#x4efb;&#x610f;&#x4e2a;&#x5b50;&#x503c;&#x3002;&#x8fd9;&#x4e9b;&#x5b50;&#x503c",{"_index":5173,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x4f1a",{"_index":3925,"title":{},"body":{"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x4f1a;&#x5148;&#x5173;&#x95ed;&#x5b83;&#x5185;&#x90e8;&#x7684;&#x63a5;&#x6536;&#x901a;&#x9053;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x5b83;&#x7684",{"_index":5226,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x4f1a;&#x81ea;&#x52a8;&#x5730;&#x5bf9;&#x81ea;&#x8eab;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x8fdb;&#x884c;&#x6269;&#x5bb9;&#x3002",{"_index":3897,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x4f20;&#x9012",{"_index":2501,"title":{},"body":{"basic/function.html#参数":{}}}],["x503c;&#x4f5c;&#x4e3a;&#x7ed3;&#x679c;&#x8fd4;&#x56d",{"_index":3872,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x5171;&#x540c;&#x6784;&#x6210;&#x4e86;&#x4e00;&#x9897;&#x4ee3;&#x8868;&#x4e86;&#x4e0a;&#x4e0b;&#x6587;&#x5168;&#x8c8c;&#x7684;&#x6811;&#x5f62;&#x7ed3;&#x6784;&#x3002;&#x8fd9;&#x68f5;&#x6811;&#x7684",{"_index":5176,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x5219;&#x5305;&#x542b;&#x4e86;&#x6307;&#x5411;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#x5934;&#x90e8;&#x7684;&#x6307;&#x9488;&#x503c;&#x3002;&#x5982;&#x6b64;&#x4e00;&#x6765;&#xff0c",{"_index":3865,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x53c8;&#x610f;&#x5473;&#x7740;&#x4ec0;&#x4e48;&#xff1f",{"_index":5208,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x540c;&#x6837;&#x62e5;&#x6709;&#x9ad8;&#x6548;&#x5229;&#x7528;&#x5185;&#x5b58;&#x7684;&#x524d;&#x63d0;&#x6761;&#x4ef6;&#x3002",{"_index":3888,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x548c;&#x4e00;&#x4e2a;&#x9519;&#x8bef;&#x503c;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5728;&#x8be5;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x7684",{"_index":4093,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x503c;&#x5728;&#x62fc;&#x63a5;&#x5185;&#x5bb9;&#x65f6;&#x53ef;&#x80fd;&#x4ea7;&#x751f;&#x7684;&#x51b2;&#x7a81;&#x95ee;&#x9898;&#x3002",{"_index":3919,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x5b58;&#x50a8;&#x5185;&#x5bb9;&#x7684;&#x65b9;&#x5f0f;&#x662f;&#x4e00;&#x6837;&#x7684",{"_index":3884,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x5e76;&#x4e0d;&#x4f1a;&#x88ab;&#x5b58;&#x5165;&#x5f53;&#x524d;&#x7684;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60;&#x4e2d;&#xff0c;&#x800c;&#x662f;&#x76f4;&#x63a5;&#x8fd4;&#x56de;&#x7ed9",{"_index":5268,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x503c;&#x5e76;&#x4e0d;&#x5728;&#x94fe;&#x8868;&#x4e2d;&#xff0c;&#x6240;&#x4ee5;&#x4e5f;&#x5c31;&#x8c08;&#x4e0d;&#x4e0a;&#x201c;&#x5728;&#x94fe;&#x8868;&#x4e2d;&#x79fb;&#x52a8;&#x5143;&#x7d20;&#x201d;&#x3002",{"_index":2417,"title":{},"body":{"packages/container.html#container-包":{}}}],["x503c;&#x5e76;&#x4e0d;&#x662f;&#x7528;&#x5b57;&#x5178;&#x6765;&#x5b58;&#x50a8;&#x952e;&#x548c;&#x503c;&#x7684;&#xff0c",{"_index":5241,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x62e5;&#x6709;&#x7684;&#x4e00;&#x7cfb;&#x5217;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#xff0c;&#x5305;&#x62ec;&#xff1a",{"_index":3893,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x63d0;&#x4f9b;&#x7684;&#x65b9;&#x6cd5;&#x62fc;&#x63a5;&#x66f4;&#x591a;&#x7684;&#x5185;&#x5bb9;&#xff0c;&#x800c;&#x4e1d;&#x6beb;&#x4e0d;&#x7528;&#x62c5;&#x5fc3;&#x8fd9;&#x4e9b;&#x65b9;&#x6cd5",{"_index":3891,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x643a;&#x5e26;&#x6570;&#x636",{"_index":5233,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x65b9;&#x6cd5;&#xff0c;&#x5c31;&#x662f;&#x63a5;&#x6536;&#x8005;&#x7c7b;&#x578b;&#x662f;&#x975e;&#x6307;&#x9488;&#x7684;&#x81ea;&#x5b9a;&#x4e49;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":1153,"title":{},"body":{"basic/oop.html#方法":{}}}],["x503c;&#x65e2;&#x53ef;&#x4ee5;&#x88ab;&#x624b;&#x52a8;&#x6269;&#x5bb9;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x8fdb;&#x884c;&#x81ea;&#x52a8;&#x6269;&#x5bb9;&#x3002;&#x5e76;&#x4e14;&#xff0c;&#x8fd9;&#x4e24;&#x79cd;&#x6269;&#x5bb9;&#x65b9;&#x5f0f;&#x7684;&#x7b56;&#x7565;&#x662f;&#x57fa;&#x672c;&#x4e00;&#x81f4;&#x7684;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x9664;&#x975e;&#x6211;&#x4eec;&#x5b8c;&#x5168;&#x786e;&#x5b9a;&#x540e;&#x7eed;&#x5185;&#x5bb9;&#x6240;&#x9700",{"_index":3971,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x65f6;&#xff0c;&#x8868;&#x793a;&#x53d1;&#x751f;&#x4e86;&#x672a;&#x77e5;&#x7684",{"_index":1024,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x503c;&#x662f;&#x4e0d;&#x53ef;&#x64a4;&#x9500;&#x7684",{"_index":5231,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x662f;&#x53ef;&#x4ee5;&#x88ab;&#x590d;&#x7528;&#x7684;&#xff0c;&#x4f46;&#x9700;&#x8981;&#x4fdd;&#x8bc1;&#x5176;&#x8ba1;&#x6570;&#x5468;&#x671f;&#x7684;&#x5b8c;&#x6574;&#x6027",{"_index":5068,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x503c;&#x672c;&#x8eab;&#x5c31;&#x53ef;&#x4ee5;&#x6253;&#x5370;&#x51fa;&#x540e;&#x8005;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x8868;&#x793a;&#x5f62;&#x5f0f;&#xff0c",{"_index":1204,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x503c;&#x6765;&#x534f;&#x8c03;&#x5b83;&#x4eec;&#x548c;&#x5206;&#x53d1;&#x5b50;&#x4efb",{"_index":5131,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x6765;&#x8bf4;&#xff0c;&#x5982;&#x679c;&#x7b2c;&#x4e00;&#x6b21;&#x6269;&#x5bb9;&#x65f6;&#x7684;&#x53e6;&#x9700;&#x5b57;&#x8282;&#x6570;&#x4e0d;&#x5927;&#x4e8",{"_index":3960,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x6b63;&#x662f;&#x4f9d;&#x9760;&#x8fd9;&#x6837;&#x4e00;&#x4e2a;&#x8ba1;&#x6570;&#xff0c;&#x4ee5;&#x53ca;&#x9488;&#x5bf9;&#x5b57;&#x7b26;&#x4e32;&#x503c;&#x7684;&#x5207;&#x7247;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x4ece;&#x800c;&#x5b9e;&#x73b0;&#x5feb;&#x901f;&#x8bfb;&#x53d6",{"_index":3928,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x7684",{"_index":3372,"title":{},"body":{"basic/test.html#性能分析":{},"basic/basic_data.html#字符串":{}}}],["x503c;&#x7684;&#x4e00;&#x65b9;&#x901a;&#x8fc7;&#x67d0;&#x79cd;&#x975e;&#x6807;&#x51c6;&#x7684;&#xff08;&#x6216;&#x8005;&#x8bf4;&#x4e0d;&#x6b63;&#x5f0f;&#x7684;&#xff09;&#x65b9;&#x5f0f;&#x5f97;&#x5230;&#x4e86;&#x672c;&#x4e0d;&#x8be5;&#x5f97;&#x5230;&#x7684;&#x5185;&#x5bb9;&#x3002",{"_index":3991,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x7684;&#x4e24;&#x79cd;&#x64cd;&#x4f5c;&#x7684;&#x5e76;&#x53d1;&#x6267;&#x884c",{"_index":5080,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x503c;&#x7684;&#x4fee;&#x6539;&#x800c;&#x6539;&#x53d8;&#x5417;&#xff1f",{"_index":2593,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x503c;&#x7684;&#x5185;&#x5bb9;&#x4f1a;&#x88ab;&#x5b58;&#x50a8;&#x5230;&#x4e00;&#x5757;&#x8fde;&#x7eed;&#x7684;&#x5185;&#x5b58;&#x7a7a;&#x95f4;&#x4e2d;&#x3002;&#x540c;&#x65f6;&#xff0c;&#x8fd9;&#x5757;&#x5185;&#x5b58;&#x5bb9;&#x7eb3;&#x7684;&#x5b57;&#x8282;&#x6570;&#x91cf;&#x4e5f;&#x4f1a;&#x88ab;&#x8bb0;&#x5f55;&#x4e0b;&#x6765;&#xff0c;&#x5e76;&#x7528;&#x4e8e;&#x8868;&#x793a",{"_index":3862,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x5206;&#x522b;&#x53eb",{"_index":3543,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x503c;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x5373;&#xff1a",{"_index":5191,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x7684;&#x62fc;&#x63a5;&#x65b9;&#x6cd5;&#x6216;&#x6269;&#x5bb9;&#x65b9;&#x6cd5;&#xff0c;&#x5c31;&#x4e0d;&#x80fd;&#x518d;&#x4ee5;&#x4efb;&#x4f55;&#x7684;&#x65b9;&#x5f0f;&#x5bf9;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x8fdb;&#x884c;&#x590d;&#x5236;&#x4e86",{"_index":3911,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x7684;&#x64cd;&#x4f5c;&#x6a21;&#x5f0f;&#x4e3b;&#x8981;&#x6709;&#x53ea;&#x8bfb;&#x6a21;&#x5f0f;&#x3001;&#x53ea;&#x5199;&#x6a21;&#x5f0f;&#x548c;&#x8bfb;&#x5199;&#x6a21;&#x5f0f;&#x3002",{"_index":4140,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x503c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x6211;&#x4eec;&#x6700;&#x597d;&#x7528",{"_index":5121,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x7684;&#x7236;&#x503c",{"_index":5196,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x6240;&#x5bf9;&#x5e94;&#x7684;&#x90a3;&#x4e2a;&#x7d22;&#x5f15;&#x503c;&#x3002;&#x800c;&#x8d4b;&#x7ed9;&#x7b2c;&#x4e8c;&#x4e2a;&#x53d8;&#x91cf;&#x7684;&#x503c;&#x5219;&#x662f;&#x8fd9;&#x4e2a",{"_index":613,"title":{},"body":{"basic/flow.html#for":{}}}],["x503c;&#x7684;&#x81ea;&#x52a8;&#x6269;&#x5bb9;&#xff0c;&#x6211;&#x4eec;&#x8fd8;&#x53ef;&#x4ee5;&#x9009;&#x62e9;&#x624b;&#x52a8;&#x6269;&#x5bb9;&#xff0c;&#x8fd9;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":3899,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x7684;&#x957f;&#x5ea6;&#x3002",{"_index":3863,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x76f8;&#x6bd4;&#xff0c",{"_index":3876,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x81ea;&#x52a8;&#x53bb;&#x6269;&#x5bb9;&#x5c31;&#x597d;&#x4e86;&#x3002",{"_index":3973,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x503c;&#x88ab;&#x64a4;&#x9500;&#xff0c;&#x8fd9;&#x91cc;&#x7684;&#x63a5;&#x6536;&#x901a;&#x9053;&#x5c31;&#x4f1a;&#x88ab;&#x7acb;&#x5373;&#x5173;&#x95ed;&#x3002;&#x6211;&#x4eec;&#x90fd;&#x77e5;&#x9053;&#xff0c;&#x5bf9;&#x4e8e;&#x4e00;&#x4e2a;&#x672a;&#x5305;&#x542b;&#x4efb;&#x4f55;&#x5143;&#x7d20;&#x503c;&#x7684;&#x901a;&#x9053;&#x6765;&#x8bf4;&#xff0c;&#x5b83;&#x7684;&#x5173;&#x95ed;&#x4f1a",{"_index":5216,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x542b;&#x6570;&#x636e;&#x7684",{"_index":5235,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#xff09;&#x3002",{"_index":5092,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x503c;&#xff09;&#x662f;&#x53ef;&#x4ee5;&#x7e41;&#x884d;&#x7684;&#xff0c;&#x8fd9;&#x610f;&#x5473;&#x7740;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x4e00;&#x4e2a",{"_index":5172,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#xff09;&#x7684;&#x65f6;&#x5019;&#x9700;&#x8981;&#x4e09;&#x4e2a;&#x53c2;&#x6570;&#xff0c;&#x5373;&#xff1a;&#x7236;&#x503c;&#x3001;&#x952e;&#x548c;&#x503c",{"_index":5236,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#xff0c;&#x548c;&#x4e00;&#x4e2a;&#x7528;&#x4e8e;&#x89e6;&#x53d1;&#x64a4;&#x9500;&#x4fe1;&#x53f7;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":5200,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#xff0c;&#x800c;&#x7b2c;&#x4e8c;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x5219;&#x662f",{"_index":5223,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x503c;&#xff1a",{"_index":4122,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x5047;&#x8bbe;&#x6211;&#x5df2;&#x7ecf;&#x4fdd;&#x8bc1;&#x4e86;&#x5bf9;&#x4e00;&#x4e2a;&#x53d8;&#x91cf;&#x7684;&#x5199;&#x64cd;&#x4f5c;&#x90fd;&#x662f;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#xff0c;&#x6bd4;&#x5982;&#xff1a;&#x52a0;&#x6216;&#x51cf;&#x3001;&#x5b58;&#x50a8;&#x3001;&#x4ea4;&#x6362;&#x7b49;&#x7b49;&#xff0c;&#x90a3;&#x6211;&#x5bf9;&#x5b83;&#x8fdb;&#x884c;&#x8bfb;&#x64cd;&#x4f5c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x8fd8;&#x6709;&#x5fc5;&#x8981;&#x4f7f;&#x7528;&#x539f",{"_index":5001,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x505a;&#x5230;&#x5e76;&#x53d1;&#x3002;&#x534f;&#x7a0b;&#x62e5;&#x6709;&#x81ea;&#x5df1;&#x7684;&#x5bc4;&#x5b58;&#x5668;&#x4e0a;&#x4e0b;&#x6587;&#x548c;&#x6808;&#x3002;&#x534f;&#x7a0b;&#x5728;&#x7ebf;&#x7a0b;&#x4e0a;&#x901a;&#x8fc7;&#x4e3b;&#x52a8",{"_index":4242,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x505a;&#x6e05;&#x7406;&#x5de5;&#x4f5c",{"_index":4541,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x505c;&#x4e0b;&#x6765;&#x5e76;&#x8c03;&#x5ea6;&#x4e0b;&#x4e00;&#x4e2a",{"_index":4555,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x505c;&#x6b62;&#x5f53;&#x524d;&#x6d4b;&#x8bd5;&#x51fd;&#x6570",{"_index":3187,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x5141;&#x8bb8;&#x591a;&#x4e2a;&#x76ee;&#x5f55;&#xff0c;&#x5f53;&#x6709;&#x591a;&#x4e2a;&#x76ee;&#x5f55;&#x65f6;&#xff0c;&#x8bf7;&#x6ce8;&#x610f;&#x5206;&#x9694;&#x7b26;&#xff0c;&#x591a;&#x4e2a;&#x76ee;&#x5f55;&#x7684;&#x65f6;&#x5019",{"_index":2335,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x5143;&#x7d20;&#x3002",{"_index":1971,"title":{},"body":{"basic/map.html#map":{}}}],["x5143;&#x7d20;&#x503c;&#x4ece;&#x5916;&#x754c;&#x8fdb;&#x5165;&#x901a;&#x9053;&#x65f6;&#x4f1a;&#x88ab;&#x590d;&#x5236;&#x3002;&#x66f4;&#x5177;&#x4f53;&#x5730;&#x8bf4;&#xff0c;&#x8fdb;&#x5165;&#x901a;&#x9053;&#x7684;&#x5e76;&#x4e0d;&#x662f;&#x5728;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x7b26;&#x53f3;&#x8fb9;&#x7684;&#x90a3;&#x4e2a;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x800c;&#x662f;&#x5b83;&#x7684;&#x526f;&#x672c",{"_index":2726,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5143;&#x7d20;&#x5bf9;&#x7684;&#x65f6;&#x5019;&#xff0c;go",{"_index":2010,"title":{},"body":{"basic/map.html#map":{}}}],["x5143;&#x7d20;&#x5bf9;&#xff0c;&#x6211;&#x4eec;&#x5728;&#x4e00;&#x4e2a;&#x503c;&#x4e3a",{"_index":2005,"title":{},"body":{"basic/map.html#map":{}}}],["x5143;&#x7d20;&#xff0c;&#x5982;&#x679c;&#x961f;&#x5217;&#x88ab;&#x585e;&#x6ee1;&#x4e86;&#xff0c;&#x90a3;&#x4e48;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x5c06;&#x963b",{"_index":2701,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5143;&#x7d20;&#xff0c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x5219;&#x662f",{"_index":2700,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5148;&#x4e0d;&#x8bf4;&#x8fd9;&#x8fdd;&#x80cc;&#x4e86;&#x4e92;&#x65a5;&#x9501;&#x7684;&#x91cd;&#x8981;&#x4f7f;&#x7528;&#x539f;&#x5219;&#xff0c;&#x5373;&#xff1a;&#x6210;&#x5bf9;&#x7684;&#x9501;&#x5b9a;&#x548c;&#x89e3;&#x9501;&#xff0c;&#x5c31;&#x7b97;&#x522b;&#x7684",{"_index":4922,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5148;&#x4e3a;&#x5207;&#x7247;&#x503c",{"_index":5021,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x5148;&#x540e;&#x8c03;&#x7528;&#x4e86",{"_index":5145,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5148;&#x6267;&#x884c;&#x4e86;&#x63a5;&#x53d7;&#x64cd;&#x4f5c;&#xff0c;&#x4e5f;&#x4f1a;&#x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x53e6;&#x4e00;&#x4e2a",{"_index":2689,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5148;&#x6267;&#x884c;&#x5b8c;&#x3001;&#x54ea;&#x4e2a",{"_index":4369,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5148;&#x7edf;&#x4e00",{"_index":5122,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5148;&#x8ba1;&#x7b97;&#x51fa",{"_index":1856,"title":{},"body":{"basic/var.html#赋值":{}}}],["x5148;&#x8c03;&#x7528",{"_index":1032,"title":{},"body":{"basic/error.html#Recover-捕获异常":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5168;&#x5b57;&#x5178;&#x7684;&#x6027;&#x80fd;&#x5f71;&#x54cd;&#x662f;&#x6700;&#x5927;&#x7684;&#xff0c;&#x5176;&#x6b21;&#x662f;&#x5220;&#x9664;&#x64cd;&#x4f5c;&#xff0c;&#x6700;&#x540e;&#x624d;&#x662f;&#x4fee;&#x6539;&#x64cd;&#x4f5c;&#x3002",{"_index":5369,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5168;&#x5c40;&#x53d8;&#x91cf",{"_index":2114,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5168;&#x5c40;&#x53d8;&#x91cf;&#x53ef;&#x4ee5;&#x5728;&#x4efb;&#x4f55;&#x51fd;&#x6570;&#x4e2d;&#x4f7f;&#x7528;&#x3002",{"_index":2120,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5168;&#x5c40;&#x53d8;&#x91cf;&#x53ef;&#x4ee5;&#x5728;&#x6574;&#x4e2a;&#x5305;&#x751a;&#x81f3;&#x5916;&#x90e8;&#x5305",{"_index":2117,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5168;&#x5c40;&#x552f;&#x4e00",{"_index":5180,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5168;&#x662f",{"_index":4354,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5168;&#x9762;&#x963b;&#x585e;&#x3002",{"_index":4935,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5171;&#x4eab;&#x53d8;&#x91cf",{"_index":4768,"title":{"concurrent/sync_lock.html#共享变量":{}},"body":{}}],["x5173;&#x7cfb;&#x8fd0;&#x7b97;&#x7b26",{"_index":1883,"title":{"basic/operator.html#关系运算符":{}},"body":{}}],["x5173;&#x952e;&#x5b57",{"_index":2547,"title":{"basic/function.html#关键字-defer":{}},"body":{}}],["x5173;&#x952e;&#x5b57;&#x3002;go",{"_index":1587,"title":{},"body":{"basic/package.html#main":{}}}],["x5173;&#x952e;&#x5b57;&#x4e0d;&#x80fd;&#x5b9a;&#x4e49;&#x53d8;&#x91cf;&#x540d;&#xff0c;&#x5982",{"_index":221,"title":{},"body":{"index.html#命名":{}}}],["x5173;&#x952e;&#x5b57;&#x521b;&#x5efa",{"_index":4260,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5173;&#x952e;&#x5b57;&#x53f3;&#x8fb9;&#x7684",{"_index":585,"title":{},"body":{"basic/flow.html#for":{}}}],["x5173;&#x952e;&#x5b57;&#x53f3;&#x8fb9;&#x7684;&#x4f4d;&#x7f6e;&#x4e0a;&#x7684;&#x4ee3;&#x7801;&#x88ab;&#x79f0;&#x4e3a",{"_index":566,"title":{},"body":{"basic/flow.html#for":{}}}],["x5173;&#x952e;&#x5b57;&#x58f0;&#x660e;&#x51fd;&#x6570;&#xff1a",{"_index":2484,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x5173;&#x952e;&#x5b57;&#x5e76;&#x4e0d;&#x662f;&#x6267;&#x884c;&#x5e76;&#x53d1;&#x64cd;&#x4f5c;&#xff0c;&#x800c;&#x662f;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x5e76;&#x53d1;&#x4efb;&#x52a1;&#x5355;&#x5143",{"_index":4318,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5173;&#x952e;&#x5b57;&#xff1a",{"_index":1938,"title":{},"body":{"basic/map.html#map":{}}}],["x5173;&#x95ed;&#x540e;&#x4e0d;&#x80fd;&#x518d;&#x53d1;&#x9001;&#x6570;&#x636e;&#xff0c;&#x4f46;&#x662f;&#x53ef;&#x4ee5;&#x63a5;&#x53d7;&#x5df2;&#x7ecf;&#x53d1;&#x9001;&#x6210;&#x529f;&#x7684;&#x6570;&#x636e;&#xff0c",{"_index":2652,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5176;&#x4e2d;&#x4e00;&#x4e2a;&#x539f;&#x751f",{"_index":5325,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5176;&#x4ed6;&#x5b9e;&#x73b0;&#x7684;&#x63a5;&#x53e3;&#xff1a",{"_index":4089,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x5176;&#x4ed6;&#x6570;&#x503c;&#x7c7b;&#x578b",{"_index":3794,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5176;&#x4ed6;&#x8fd0;&#x7b97;&#x7b26",{"_index":1909,"title":{"basic/operator.html#其他运算符":{}},"body":{}}],["x5176;&#x53c2;&#x6570;&#x503c;&#xff0c;&#x5e76;&#x9010;&#x4e2a;&#x6267;&#x884c;&#x8c03;&#x7528;&#x3002",{"_index":2584,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5176;&#x5b83;&#x7684;&#x5305;&#xff0c;&#x90a3;&#x4e48;&#x4f1a;&#x5148;&#x5c06;&#x5176;&#x5b83;&#x5305;&#x5bfc;&#x5165;&#x8fdb;&#x6765;&#xff0c;&#x7136;&#x540e;&#x518d;&#x5bf9;&#x8fd9;&#x4e9b;&#x5305;&#x4e2d;&#x7684;&#x5305;&#x7ea7;&#x5e38;&#x91cf;&#x548c;&#x53d8;&#x91cf;&#x8fdb;&#x884c;&#x521d;&#x59cb;&#x5316;&#xff0c;&#x63a5;&#x7740;&#x6267;&#x884c",{"_index":1664,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5176;&#x5b9e;&#x5e76;&#x4e0d;&#x91cd;&#x8981;&#x3002",{"_index":964,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5176;&#x5b9e;&#x5f88;&#x7b80;&#x5355;&#xff0c;&#x5728;&#x8c03;&#x7528",{"_index":996,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5176;&#x5b9e;&#x8fd9;&#x6837;&#x89c4;&#x5b9a;&#x4e5f;&#x6709;&#x5b89;&#x5168;&#x6027;&#x65b9;&#x9762;&#x7684;&#x8003;&#x8651;&#x3002",{"_index":1375,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x5177;&#x4f53;&#x539f;&#x56e0;&#x548c;&#x7406;&#x5ff5;&#x8bf7;&#x89c1",{"_index":1173,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x5185;&#x5728;&#x8868;&#x8fbe;&#x3002",{"_index":4025,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5185;&#x5b58;&#x5206;&#x914d",{"_index":380,"title":{"advance/mm.html#内存分配":{}},"body":{}}],["x5185;&#x5b58;&#x5206;&#x914d;&#x5668",{"_index":388,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x5185;&#x5b58;&#x5206;&#x914d;&#x5668;&#x7ba1;&#x7406;&#x7684;&#x5185;&#x5b58;&#x5206;&#x4e3a;&#x4e24;&#x79cd;&#xff1a",{"_index":394,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x5185;&#x5b58;&#x56de;&#x6536;&#x7684;&#x6e90;&#x5934;&#x662f;&#x5783;&#x573e;&#x6e05;&#x7406;&#x64cd;&#x4f5c",{"_index":425,"title":{},"body":{"advance/mm.html#回收":{}}}],["x5185;&#x5b58;&#x5757",{"_index":393,"title":{"advance/mm.html#内存块":{}},"body":{}}],["x5185;&#x5b58;&#x590d;&#x7528",{"_index":427,"title":{},"body":{"advance/mm.html#回收":{}}}],["x5185;&#x5b58;&#x6982;&#x8981;&#x6587;&#x4ef6;&#xff0c;&#x5176;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x6bb5;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x90fd;&#x8bb0;&#x8f7d;&#x7740;&#xff0c;&#x5728;&#x67d0;&#x4e2a;&#x91c7;&#x6837;&#x65f6;&#x523b;&#xff0c;&#x6b63;&#x5728;&#x6267;&#x884c;&#x7684",{"_index":3326,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5185;&#x5b58;&#x7ba1;&#x7406;&#x4e2d;&#x7684;&#x5185;&#x5b58;&#x533a;&#x57df;&#x4e00;&#x822c;&#x5305;&#x62ec",{"_index":1324,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x4e3a;&#xff1a;8&#x3002",{"_index":3999,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5185;&#x5bb9;&#xff0c;&#x90a3;&#x5c31;&#x8981;&#x770b;&#x4eec;&#x8c03;&#x7528",{"_index":3394,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5185;&#x7f6e",{"_index":3791,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5185;&#x7f6e;&#x4e86;&#x9519;&#x8bef;&#x63a5;&#x53e3;&#x3002",{"_index":743,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5185;&#x7f6e;&#x51fd;&#x6570",{"_index":460,"title":{},"body":{"basic/array.html#数组":{},"basic/basic_data.html#字符串":{}}}],["x5185;&#x7f6e;&#x7684",{"_index":1958,"title":{},"body":{"basic/map.html#map":{}}}],["x5185;&#x7f6e;&#x7684;&#x7c7b;&#x578b;&#x3001;&#x51fd;&#x6570;&#x548c;&#x5e38;&#x91cf;&#xff0c;&#x6bd4;&#x5982",{"_index":2124,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5185;&#x90e8;&#x5219;&#x662f;&#x901a;&#x8fc7;&#x4e00;&#x4e2a;&#x6307;&#x9488;&#x6307;&#x5411;&#x5b9e;&#x9645;&#x4fdd;&#x5b58;&#x5185;&#x5bb9;&#x7684;&#x6570;&#x7ec4;&#x3002",{"_index":3836,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5185;&#x90e8;&#x5305",{"_index":3022,"title":{},"body":{"commands/build.html#工具":{}}}],["x5185;&#x90e8;&#x6301;&#x6709;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x961f;&#x5217;&#x3002",{"_index":2695,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5185;&#x90e8;&#x7f13;&#x5b58;&#x6709;&#x6548;&#x5143;&#x7d20;&#x7684;&#x4e2a;&#x6570;&#x3002",{"_index":2718,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5185;&#x90e8;&#x7f13;&#x5b58;&#x7684;&#x5bb9;&#x91cf;&#x3002",{"_index":2717,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5185;&#x90e8;&#x901a;&#x8fc7",{"_index":3834,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5185;&#x90e8;&#xff1b;&#x5982;&#x679c;&#x662f;&#x591a;&#x4e2a",{"_index":4817,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x518d;&#x4e0b;&#x9762;&#x7684;&#x4e00;&#x884c;&#xff0c;&#x6307;&#x51fa;&#x7684;&#x5c31;&#x662f;&#x8fd9;&#x4e2a",{"_index":971,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x518d;&#x505a;&#x8fd9;&#x4e24;&#x79cd;&#x64cd;&#x4f5c;&#x3002",{"_index":4866,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5199;&#x5230;&#x6211;&#x4eec;&#x6307;&#x5b9a;&#x7684;&#x5199;&#x5165;&#x5668;&#x4e2d;&#x3002",{"_index":3354,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51c6;&#x5907;&#x73af;&#x5883",{"_index":2364,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x51cf;&#x5c11;&#x4e86;&#x5185;&#x5b58;&#x5206;&#x914d;&#x548c;&#x5185;&#x5bb9;&#x62f7;&#x8d1d;&#x7684;&#x6b21;&#x6570;&#xff1b",{"_index":3879,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x51fd;&#x6570",{"_index":953,"title":{"basic/function.html#函数":{}},"body":{"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/package.html#初始化包":{},"basic/map.html#map":{},"concurrent/channel.html#channel":{},"basic/test.html#性能测试的测试结果":{},"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x3001",{"_index":4130,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x51fd;&#x6570;&#x3002",{"_index":746,"title":{},"body":{"basic/interface.html#接口":{},"basic/package.html#初始化包":{},"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x3002;&#x4e0d;&#x8fc7;&#x8981;&#x7279;&#x522b;&#x6ce8;&#x610f;&#xff0c;&#x8be5;&#x51fd;&#x6570;&#x4f1a;&#x5f15;&#x8d77",{"_index":3359,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x3002;&#x4f46;&#x662f;&#x63a7;&#x5236;&#x6743;&#x4e5f;&#x4e0d;&#x4f1a;&#x505c;&#x7559;&#x5728;&#x90a3;&#x91cc;&#xff0c;&#x800c;&#x662f;&#x88ab",{"_index":989,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#x3002;&#x5176;&#x542b;&#x4e49;&#x662f;&#xff0c;&#x5982;&#x679c;&#x6240;&#x6709;&#x7684",{"_index":5160,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x3002;&#x800c;&#x4e3b",{"_index":4311,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x4f1a;&#x628a;&#x6536;&#x96c6;&#x597d;&#x7684;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#xff0c",{"_index":3353,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x5728;&#x88ab;&#x8c03;&#x7528;&#x7684;&#x65f6;&#x5019;&#x9700;&#x8981;&#x63a5;&#x53d7;&#x4e00;&#x4e2a;&#x4ee3;&#x8868;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x7684;&#x3001",{"_index":4099,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x51fd;&#x6570;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x6240;&#x505a;&#x7684;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x5148;&#x8c03;&#x7528",{"_index":753,"title":{},"body":{"basic/interface.html#接口":{}}}],["x51fd;&#x6570;&#x4e0d;&#x4f1a;&#x8fd4;&#x56de;&#x4efb;&#x4f55;&#x503c;&#x3002",{"_index":2489,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x51fd;&#x6570;&#x4e0d;&#x662f;&#x4e00;&#x4e2a;&#x6e05;&#x7406;&#x64cd;&#x4f5c;&#xff0c;&#x800c;&#x662f;&#x4e00;&#x4e2a;&#x63a7;&#x5236;&#x64cd;&#x4f5c",{"_index":2654,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x51fd;&#x6570;&#x4e0d;&#x80fd;&#x6709;&#x4efb;&#x4f55;&#x7684;&#x53c2;&#x6570;&#x548c;&#x8fd4;&#x56de;&#x503c;&#xff0c;&#x867d;&#x7136;&#x4e00;&#x4e2a",{"_index":1654,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#x4e2d;&#x58f0;&#x660e;&#x4e86;&#x4e00;&#x4e2a;&#x6570;&#x7ec4",{"_index":2586,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x51fd;&#x6570;&#x4e2d;&#x5c31;&#x662f;&#x8fd9;&#x4e48;&#x505a;&#x7684;&#xff09;&#x3002",{"_index":5184,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x4e2d;&#x6700;&#x540e;&#x7684;&#x90a3;&#x4e24;&#x884c;&#x4ee3;&#x7801;&#x4e86;&#x5417;&#xff1f;&#x91cd;&#x590d;&#x7684;&#x4e24;&#x4e2a;&#x63a5;&#x6536;&#x8868;&#x8fbe;&#x5f0f",{"_index":5035,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x51fd;&#x6570;&#x4e2d;&#x7684;&#x4ee3;&#x7801;&#x62ff;&#x5230;&#x8fd9;&#x4e2a;&#x7ed3;&#x679c;&#x4e4b;&#x540e;&#x6253;&#x5370;&#x4e86;&#x5b83;&#xff08;&#x5373",{"_index":2589,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x51fd;&#x6570;&#x4e2d;&#x8c03;&#x7528;&#x7684",{"_index":4407,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x4e2d;&#xff0c;&#x57fa;&#x4e8e;&#x8c03;&#x7528;&#x8868;&#x8fbe;&#x5f0f",{"_index":5219,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x4e2d;&#xff0c;&#x901a;&#x8fc7;&#x8c03;&#x7528;&#x8be5;&#x51fd;&#x6570;&#xff0c;&#x83b7;&#x5f97;&#x4e86;&#x4e00;&#x4e2a;&#x884d;&#x751f;&#x81ea;&#x4e0a;&#x4e0b;&#x6587;&#x6839;&#x8282;&#x70b9;&#x7684",{"_index":5199,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x4ee5;&#x53ca;&#x5c06;&#x4f1a;&#x63d0;&#x5230;&#x7684",{"_index":4131,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x51fd;&#x6570;&#x4ee5;&#x53ca;&#x6539;&#x9020;&#x540e;&#x7684",{"_index":4436,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x4f1a;&#x4e0d;&#x65ad;&#x5730;&#x83b7;&#x53d6;&#x4e00;&#x4e2a;&#x540d;&#x53eb",{"_index":4414,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x4f1a;&#x600e;&#x4e48;&#x6837;&#x5462;&#xff1f",{"_index":1034,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x4f1a;&#x6253;&#x5f00;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#x5e76;&#x8fd4;&#x56de;&#x5305;&#x88c5;&#x4e86;&#x8be5;&#x6587;&#x4ef6;&#x7684",{"_index":4105,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x51fd;&#x6570;&#x4f1a;&#x81ea;&#x5df1;&#x53bb;&#x5bfb;&#x627e;&#x5b83;&#x3002;&#x6b64;&#x65f6;&#x7684;&#x6253;&#x5370;&#x5185;&#x5bb9;&#x4f1a;&#x662f",{"_index":1206,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x51fd;&#x6570;&#x4f1a;&#x88ab;&#x591a;&#x4e2a",{"_index":4424,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x4f1a;&#x8fd4;&#x56de;&#x8fd9;&#x4e24;&#x4e2a;&#x7c7b;&#x578b;&#x7684;&#x6307;&#x9488;&#x503c;&#x5e76;&#x5206;&#x522b;&#x628a;&#x5b83;&#x4eec;&#x4f5c;&#x4e3a;&#x5176;&#x751f;&#x6210;&#x7684;&#x540c;&#x6b65;&#x5185;&#x5b58;&#x7ba1;&#x9053;&#x7684;&#x4e24;&#x7aef;&#xff0c;&#x6240;&#x4ee5;&#x53ef;&#x4ee5;&#x8bf4;&#xff0c",{"_index":3518,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x51fd;&#x6570;&#x4f53",{"_index":1116,"title":{},"body":{"basic/oop.html#方法":{},"basic/function.html#声明函数":{}}}],["x51fd;&#x6570;&#x4f5c;&#x4e3a;&#x503c",{"_index":2526,"title":{"basic/function.html#函数作为值":{}},"body":{}}],["x51fd;&#x6570;&#x4f5c;&#x4e3a;&#x53c2;&#x6570",{"_index":2530,"title":{"basic/function.html#函数作为参数":{}},"body":{}}],["x51fd;&#x6570;&#x5173;&#x95ed",{"_index":2651,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x51fd;&#x6570;&#x5185;&#x90e8;&#x8c03;&#x7528",{"_index":5059,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x51fd;&#x6570;&#x5219;&#x5c06;&#x7f13;&#x51b2;&#x533a;&#x5c3a;&#x5bf8;&#x7684;&#x51b3;&#x5b9a;&#x6743;&#x629b;&#x7ed9;&#x4e86;&#x4f7f;&#x7528;&#x65b9;&#x3002",{"_index":3550,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x51fd;&#x6570;&#x5219;&#x90fd;&#x53ef;&#x4ee5;&#x88ab;&#x7528;&#x6765;&#x4ea7;&#x751f;&#x4e00;&#x4e2a;&#x4f1a",{"_index":5201,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x521b;&#x5efa",{"_index":2696,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x51fd;&#x6570;&#x521b;&#x5efa;&#x590d;&#x6570;&#x3002",{"_index":3792,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x51fd;&#x6570;&#x521b;&#x5efa;&#x5b83;&#x7684;&#x6307;&#x9488;&#x503c",{"_index":4871,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x51fd;&#x6570;&#x521d;&#x59cb;&#x5316;&#x7684",{"_index":3546,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x51fd;&#x6570;&#x521d;&#x59cb;&#x5316;&#xff0c;&#x6216;&#x8005",{"_index":2013,"title":{},"body":{"basic/map.html#map":{}}}],["x51fd;&#x6570;&#x5220;&#x9664",{"_index":1970,"title":{},"body":{"basic/map.html#map":{}}}],["x51fd;&#x6570;&#x53ca",{"_index":2583,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x53ca;&#x5176;&#x53c2;&#x6570;&#x503c;&#x53e6;&#x884c;&#x5b58;&#x50a8;&#x5230;&#x4e00;&#x4e2a;&#x961f;&#x5217;&#x4e2d;&#x3002",{"_index":2577,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x53ef;&#x4ee5;&#x4e3a;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x5206;&#x914d;&#x5185;&#x5b58;&#xff0c;&#x4f46;&#x8fd9;&#x662f;&#x4e0d;&#x5b8c;&#x6574;&#x7684;&#x521b;&#x5efa;&#x3002;&#x6bd4;&#x5982",{"_index":237,"title":{},"body":{"index.html#make-和-new":{}}}],["x51fd;&#x6570;&#x53ef;&#x4ee5;&#x83b7;&#x53d6",{"_index":2716,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x51fd;&#x6570;&#x53ef;&#x4ee5;&#x89c2;&#x5bdf;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x503c;&#xff0c",{"_index":2567,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x540c;&#x6837;&#x9002;&#x7528;&#x4e8e",{"_index":1959,"title":{},"body":{"basic/map.html#map":{}}}],["x51fd;&#x6570;&#x540d",{"_index":2485,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x51fd;&#x6570;&#x548c",{"_index":4109,"title":{},"body":{"packages/os.html#os包中的API":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x548c;&#x666e;&#x901a;&#x51fd;&#x6570;&#x7c7b;&#x4f3c;&#xff0c;&#x4f46;&#x662f;&#x4e0d;&#x80fd;&#x88ab;&#x8c03;&#x7528;&#x6216;&#x5f15;&#x7528;&#x3002",{"_index":1652,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#x5728;&#x4e00;&#x4e2a;&#x5355;&#x72ec;&#x7684",{"_index":4256,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x5728;&#x4ea7;&#x751f;&#x65b0;&#x7684",{"_index":5234,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x5728;&#x88ab;&#x8c03;&#x7528;&#x540e;&#x4f1a;&#x4ea7;&#x751f;&#x4e24;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x3002;&#x7b2c;&#x4e00;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x5c31;&#x662f;&#x90a3;&#x4e2a;&#x53ef;&#x64a4;&#x9500;&#x7684",{"_index":5222,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x5728;&#x8c03;&#x7528",{"_index":4152,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x51fd;&#x6570;&#x58f0;&#x660e;&#x4f7f;&#x7528",{"_index":1586,"title":{},"body":{"basic/package.html#main":{}}}],["x51fd;&#x6570;&#x5bf9;&#x53c2;&#x6570",{"_index":2592,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x51fd;&#x6570;&#x5bf9;&#x5b83;&#x4eec;&#x8d77;&#x4e0d;&#x5230;&#x4efb;&#x4f55;&#x4f5c;&#x7528;&#x3002",{"_index":4853,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x51fd;&#x6570;&#x5bf9;&#x5b83;&#x8fdb;&#x884c;&#x521d;&#x59cb;&#x5316;&#x65f6;&#xff0c;&#x8be5;&#x53d8;&#x91cf;&#x7684;&#x503c;&#x5c31;&#x4f1a;&#x662f",{"_index":2745,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x51fd;&#x6570;&#x5c31;&#x662f",{"_index":4312,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x5c31;&#x662f;&#x547d;&#x4ee4;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x90a3;&#x4e2a",{"_index":967,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#x5e76;&#x4f20;&#x5165;&#x53c2;&#x6570;&#x503c",{"_index":3369,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x5f97;&#x5230;&#x4e00;&#x4e2a;&#x952e;&#x503c;&#x5bf9;&#x5e94;&#x7684;&#x53cd;&#x5c04;&#x7c7b",{"_index":5317,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x51fd;&#x6570;&#x5f97;&#x5230;&#x7684",{"_index":5230,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x5f97;&#x5230;&#x7684;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x5e76;&#x4e0d;&#x662f;&#x5b9e;&#x65f6;&#x7684;&#xff0c;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x5feb;&#x7167;&#xff0c;&#x662f;&#x5728;&#x6700;&#x8fd1;&#x4e00;&#x6b21;&#x7684;&#x5185;&#x5b58;&#x5783;&#x573e;&#x6536;&#x96c6;&#x5de5;&#x4f5c;&#x5b8c;&#x6210;&#x65f6;&#x4ea7",{"_index":3356,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x6062;&#x590d",{"_index":1008,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x624d;&#x662f;&#x6b63;&#x786e;&#x7684;&#x6253;&#x5f00;&#x65b9;&#x5f0f",{"_index":1039,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x6253;&#x5370;&#x7684;&#x4e00;&#x5b9a;&#x4f1a;&#x662f;&#x90a3;&#x4e2a;&#x5f53;&#x6b21;&#x8fed;&#x4ee3;&#x7684;&#x5e8f;&#x53f7;&#x3002",{"_index":4408,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x6267;&#x884c;&#x4e4b;&#x524d;&#xff0c;&#x6240;&#x6709;&#x4f9d;&#x8d56;&#x7684;&#x5305;&#x90fd;&#x5df2;&#x7ecf;&#x5b8c;&#x6210;&#x521d;&#x59cb;&#x5316;&#x5de5;&#x4f5c;&#x4e86;&#x3002",{"_index":1650,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#x63a5;&#x53d7;&#x4efb;&#x4f55;&#x503c;&#x4f5c;&#x4e3a;&#x53c2;&#x6570;&#x3002;&#x5f53;&#x67d0;&#x4e9b;&#x4e0d;&#x5e94;&#x8be5;&#x53d1;&#x751f;&#x7684;&#x573a;&#x666f;&#x53d1;&#x751f;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x5c31;&#x5e94;&#x8be5;&#x8c03;&#x7528",{"_index":954,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#x6539;&#x53d8;&#x6700;&#x5927",{"_index":3281,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x51fd;&#x6570;&#x6587;&#x6863;&#x7684;&#x4e00;&#x90e8;&#x5206;&#x3002",{"_index":3224,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x51fd;&#x6570;&#x65f6;&#x672a;&#x53d1;&#x751f",{"_index":1036,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x65f6;&#xff0c;&#x4f7f;&#x7528;&#x5360;&#x4f4d;&#x7b26",{"_index":1203,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x51fd;&#x6570;&#x65f6;&#xff0c;&#x628a;&#x67d0;&#x4e2a;&#x503c;&#x4f5c;&#x4e3a;&#x53c2;&#x6570;&#x4f20;&#x7ed9;&#x8be5;&#x51fd;&#x6570;&#x5c31;&#x53ef;&#x4ee5;&#x4e86;&#x3002",{"_index":997,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#x6765;&#x521b;&#x5efa;&#x5207;&#x7247",{"_index":2067,"title":{},"body":{"basic/slice.html#slice":{}}}],["x51fd;&#x6570;&#x6765;&#x7b80;&#x5316;&#x521d;&#x59cb;&#x5316;&#x5de5;&#x4f5c;&#xff0c",{"_index":1651,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#x6765;&#x83b7;&#x53d6;&#x8be5;&#x5b57;&#x6bb5;&#x7684;&#x503c;&#xff0c;&#x5e76;&#x4e14;&#x4e00;&#x65e6",{"_index":5106,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x51fd;&#x6570;&#x6ca1;&#x6709;&#x53c2;&#x6570;&#x3002;&#x6bd4;&#x5982;&#xff1a",{"_index":1584,"title":{},"body":{"basic/package.html#main":{}}}],["x51fd;&#x6570;&#x751f",{"_index":1020,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x7528;&#x4e8e;&#x4ea7;&#x751f;&#x4e00;&#x4e2a;&#x53ef;&#x64a4;&#x9500;&#x7684",{"_index":5197,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x7528;&#x4e8e;&#x6839;&#x636e;&#x7ed9;&#x5b9a;&#x7684;&#x8def;&#x5f84;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x6587;&#x4ef6;&#x3002;&#x5b83;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":4092,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x51fd;&#x6570;&#x7684",{"_index":4352,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x7684;&#x53c2;&#x6570",{"_index":4403,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x7684;&#x552f;&#x4e00;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x662f;&#x7a7a;&#x63a5;&#x53e3",{"_index":998,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#x7684;&#x5e8f;&#x53f7;&#x3002",{"_index":4441,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x7684;&#x5e95;&#x5c42;&#x652f;&#x6301;&#xff0c;&#x5b83;&#x6700;&#x4e3a;&#x7075;&#x6d3b;&#x3002;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x6709",{"_index":4110,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x51fd;&#x6570;&#x7684;&#x5f00;&#x59cb;&#x5904;&#x8bbe;&#x5b9a;&#x4e00;&#x6b21;&#x3002",{"_index":3351,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x4f1a;&#x4ee5;&#x600e;&#x6837;&#x7684;&#x65b9;&#x5f0f;&#x7ed3;&#x675f;&#xff0c",{"_index":5119,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x65f6;&#x95f4;&#x603b;&#x662f;&#x4f1a;&#x660e;&#x663e;&#x6ede;&#x540e;&#x4e8e;&#x5b83;&#x6240;&#x5c5e;&#x7684",{"_index":4337,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#xff0c;&#x5b83;&#x4f1a;&#x7acb;&#x523b;&#x53bb;&#x6267;&#x884c;&#x540e;&#x8fb9;&#x7684;&#x8bed;&#x53e5",{"_index":4346,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x7684;&#x65f6;&#x5019;&#x4f20;&#x5165;&#x7684;&#x662f;&#x4ec0;&#x4e48;&#x6837;&#x7684;&#x53c2;&#x6570;&#x503c;&#x4e86;&#x3002",{"_index":3395,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x4eec;&#x90fd;&#x4f1a;&#x6267;&#x884c;&#x540c;&#x4e00;&#x4e2a;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#xff0c;&#x5e76;&#x4e14;&#x5728;&#x6210;&#x529f;&#x4e4b;&#x540e;&#x5f97;&#x5230;&#x8fd9;&#x6837;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x3002",{"_index":4132,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x51fd;&#x6570;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x7ed9;&#x4e88;&#x7684;&#x64cd;&#x4f5c;&#x6a21;&#x5f0f;&#x662f",{"_index":4153,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x51fd;&#x6570;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x503c;&#x3002;&#x5b83;&#x662f;&#x4e00;&#x4e2a;&#x533f;&#x540d;&#x51fd;&#x6570;&#xff0c;&#x5176;&#x4e2d;&#x53ea;&#x5305;&#x542b;&#x4e86;&#x4e00;&#x6761",{"_index":5152,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x8fd4;&#x56de;&#x503c;&#x7528;&#x6765;&#x4f20;&#x9012;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x3002;&#x5982;&#x679c;&#x5bfc;&#x81f4;&#x5931;&#x8d25;&#x7684;&#x539f;&#x56e0;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#xff0c;&#x8fd4;&#x56de;&#x503c;&#x53ef;&#x4ee5;&#x662f;&#x4e00;&#x4e2a;&#x5e03;&#x5c14;&#x503c;&#xff0c",{"_index":2544,"title":{},"body":{"basic/function.html#错误":{}}}],["x51fd;&#x6570;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#xff0c;&#x4e3a;&#x4ec0;&#x4e48;&#x4e0d;&#x662f",{"_index":4973,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x51fd;&#x6570;&#x7684;&#x7b7e;&#x540d;&#x90e8;&#x5206;&#x3002;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x9664;&#x4e86;&#x9700;&#x8981;&#x4e24;&#x4e2a",{"_index":2535,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x51fd;&#x6570;&#x7684;&#x8def;&#x5f84;&#x4e4b;&#x4e0a",{"_index":4096,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x51fd;&#x6570;&#x76f8;&#x540c;&#x7684;&#x529f;&#x80fd;&#x3002",{"_index":5144,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x771f;&#x6b63;&#x88ab;&#x6267;&#x884c;&#x7684;&#x65f6;&#x95f4;&#x603b;&#x4f1a;&#x4e0e;&#x5176;&#x6240;&#x5c5e;&#x7684",{"_index":4314,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x7c7b;&#x578b;&#x3001;&#x5b57;&#x5178;&#x7c7b;&#x578b;&#x548c;&#x5207;&#x7247;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x5e76;&#x4e0d;&#x652f;&#x6301;&#x5224;&#x7b49;&#x64cd;&#x4f5c;&#xff0c;&#x6240;&#x4ee5;&#x5b57;&#x5178;&#x7684;&#x952e;&#x7c7b;&#x578b;&#x4e0d;&#x80fd;&#x662f;&#x8fd9;&#x4e9b;&#x7c7b;&#x578b;&#x3002",{"_index":1982,"title":{},"body":{"basic/map.html#map":{}}}],["x51fd;&#x6570;&#x88ab;&#x6267;&#x884c;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x4e0d;&#x4f1a;&#x5f71;&#x54cd;&#x5176;&#x4ed6;&#x5e76;&#x53d1;&#x4efb;&#x52a1;&#x3002",{"_index":4450,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x88ab;&#x770b;&#x4f5c;&#x7b2c;&#x4e00;&#x7c7b;&#x503c;&#xff1a;&#x51fd;&#x6570;&#x50cf;&#x5176;&#x4ed6;&#x503c;&#x4e00;&#x6837;&#xff0c;&#x62e5;&#x6709;&#x7c7b;&#x578b;&#xff0c;&#x53ef;&#x4ee5;&#x88ab;&#x8d4b;&#x503c;&#x7ed9;&#x5176;&#x4ed6;&#x53d8;&#x91cf;&#xff0c;&#x4f20;&#x9012;&#x7ed9;&#x51fd;&#x6570;&#xff0c;&#x4ece;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x3002",{"_index":2527,"title":{},"body":{"basic/function.html#函数作为值":{}}}],["x51fd;&#x6570;&#x88ab;&#x8c03;&#x7528;&#xff0c;&#x9488;&#x5bf9;&#x8be5;&#x901a;&#x9053;&#x7684;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x5c31;&#x4f1a;&#x9a6c;&#x4e0a;&#x7ed3;&#x675f;&#xff0c;&#x6240;&#x4ee5;&#xff0c;&#x8fd9;&#x6837;&#x505a;&#x5c31;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x201c;&#x7b49;&#x5f85;&#x6240;&#x6709;&#x7684",{"_index":5168,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528",{"_index":1016,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x4e4b;&#x540e;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x6839;&#x672c;&#x5c31;&#x6ca1;&#x6709;&#x6267;&#x884c;&#x7684;&#x673a;&#x4f1a",{"_index":1031,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x5e76;&#x4e0d;&#x4f1a;&#x8d77;&#x5230;&#x4efb;&#x4f55;&#x4f5c;&#x7528;&#xff0c;&#x751a;&#x81f3;&#x90fd;&#x6ca1;&#x6709;&#x673a;&#x4f1a;&#x6267;&#x884c;&#x3002;&#x56e0;&#x4e3a",{"_index":1028,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x7684;&#x6267;&#x884c;&#x987a;&#x5e8f;&#x4e0e;&#x5b83;&#x4eec;&#x5206;&#x522b;&#x6240;&#x5c5e;&#x7684",{"_index":2573,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x7684;&#x6267;&#x884c;&#x987a;&#x5e8f;&#x662f;&#x600e;&#x6837;&#x7684",{"_index":2571,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x7684;&#x65f6;&#x5019;&#xff0c;go",{"_index":2581,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x8c03;&#x7528;&#x90fd;&#x4f1a;&#x5728;&#x5b83;&#x5373;&#x5c06;&#x7ed3;&#x675f;&#x6267;&#x884c;&#x7684;&#x90a3;&#x4e00;&#x523b;&#x6267;&#x884c;&#x3002;&#x5373;&#x4f7f;&#x5bfc;&#x81f4;&#x5b83;&#x6267;&#x884c;&#x7ed3;&#x675f;&#x7684;&#x539f;&#x56e0;&#x662f;&#x4e00",{"_index":1041,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#x8fd4;&#x56de;&#x65f6;&#xff0c;&#x6240;&#x6709",{"_index":4261,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x8fd4;&#x56de;&#x7684;&#x662f;&#x6307;&#x5411;&#x539f;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x7684;&#x65b0;&#x5207;&#x7247;&#xff0c;&#x800c;&#x5728;&#x9700;&#x8981;&#x6269;&#x5bb9;&#x65f6;&#xff0c",{"_index":2107,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x51fd;&#x6570;&#x8fd4;&#x56de;&#x7684;&#x662f;&#x6307;&#x5411;&#x65b0;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x7684;&#x65b0;&#x5207;&#x7247",{"_index":2108,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x51fd;&#x6570;&#x8fd8;&#x53ef;&#x4ee5;&#x4fee;&#x6539;&#x51fd;&#x6570;&#x7684;&#x8fd4;&#x56de;&#x503c;&#xff1a",{"_index":2568,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#x8fdb;&#x884c;&#x5783;&#x573e;&#x56de;&#x6536",{"_index":863,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x51fd;&#x6570;&#x8fdb;&#x884c;&#x89e6;&#x53d1;&#x6761;&#x4ef6;&#x68c0;&#x6d4b",{"_index":862,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x51fd;&#x6570;&#x9000;&#x51fa;&#x6216;&#x8005;&#x76f4;&#x63a5;&#x7ec8;&#x6b62;&#x7a0b;&#x5e8f;&#x4e4b;&#x5916;&#xff0c;&#x6ca1;&#x6709;&#x5176;&#x5b83",{"_index":4264,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#x90fd;&#x6267",{"_index":5169,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x90fd;&#x6267;&#x884c;&#x5b8c;&#x6bd5;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x7acb;&#x5373;&#x901a;&#x77e5;&#x5206;&#x53d1;&#x5b50;&#x4efb;&#x52a1",{"_index":5161,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#x9700;&#x8981;&#x7528;&#x5230;&#x5b83;&#xff0c;&#x5b83;&#x4e5f;&#x6ca1;&#x6709;&#x4ec0;&#x4e48;&#x522b;&#x7684;&#x7528;&#x6b66;&#x4e4b;&#x5730;&#x4e86;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x5982;&#x679c;&#x4f60;&#x64cd;&#x4f5c;&#x7684;&#x53ea;&#x662f;&#x5e38;&#x89c4;&#x7684;&#x6587;&#x4ef6;&#x6216;&#x8005;&#x76ee;&#x5f55;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x65e0;&#x9700;&#x7279;&#x522b;&#x5730;&#x5728;&#x610f;&#x5b83;&#x4e86;&#x3002",{"_index":4138,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x51fd;&#x6570;&#xff08;&#x5982;&#x679c;&#x5b58;&#x5728;&#x7684;&#x8bdd;&#xff09;&#xff0c;&#x6700;&#x540e",{"_index":1669,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#xff08;&#x5982;&#x679c;&#x6709;&#x7684;&#x8bdd;&#xff09;&#xff0c;&#x4f9d;&#x6b21;&#x7c7b;&#x63a8;&#x3002;&#x7b49;&#x6240;&#x6709",{"_index":1665,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#xff08;&#x6216;&#x8005;&#x8bf4;&#x8be5;&#x51fd;&#x6570;&#x4e2d;&#x7684;&#x90a3;&#x4e9b;&#x4ee3;&#x7801;&#xff09;&#xff0c;&#x7136;&#x540e;&#x518d;&#x628a;&#x8fd9",{"_index":4331,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#xff0c",{"_index":755,"title":{},"body":{"basic/interface.html#接口":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#x8fd9;&#x91cc;&#x7684",{"_index":968,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x51fd;&#x6570;&#xff0c;&#x4f46;&#x8fd9;&#x65e0;&#x8bba;&#x662f;&#x5bf9;&#x4e8e;&#x53ef;&#x8bfb;&#x6027;&#x8fd8;&#x662f;&#x4ee5;&#x540e;&#x7684;&#x53ef;&#x7ef4;&#x62a4;&#x6027;&#x6765;&#x8bf4;&#xff0c",{"_index":1656,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x51fd;&#x6570;&#xff0c;&#x518d;&#x8c03;&#x7528",{"_index":1033,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x51fd;&#x6570;&#xff0c;&#x5373;&#x53ef;&#x5bf9;&#x963b;&#x585e;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x91c7;&#x6837;&#x9891;&#x7387;&#x8fdb;&#x884c;&#x8bbe;&#x5b9a;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x6709;&#x4e00;&#x4e2a;&#x540d;&#x53eb",{"_index":3362,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#xff0c;&#x5b83;&#x4f1a;&#x5904;&#x7406;&#x5b57;&#x7b26;&#x4e32;&#x683c;&#x5f0f;&#x5316;&#x3002",{"_index":750,"title":{},"body":{"basic/interface.html#接口":{}}}],["x51fd;&#x6570;&#xff0c;&#x5b83;&#x4f1a;&#x6e05;&#x9664;&#x6240;&#x6709;&#x7684",{"_index":5290,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x51fd;&#x6570;&#xff0c;&#x5c31;&#x6ca1;&#x6709;&#x518d;&#x4f7f;&#x7528;&#x901a;&#x9053;&#x3002",{"_index":4446,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#xff0c;&#x5e76;&#x5f97;&#x5230;&#x4e86;&#x4e00;&#x4e2a;&#x53ef;&#x64a4;&#x9500;&#x7684",{"_index":5146,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#xff0c;&#x5e76;&#x8bd5;&#x56fe;&#x9488;&#x5bf9;&#x8be5;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x7684;&#x901a;&#x9053;&#xff0c;&#x8fdb;&#x884c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x3002",{"_index":5167,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#xff0c;&#x5f97;&#x5230;&#x786e;&#x5207;&#x7684;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#xff1b;&#x518d;&#x8c03;&#x7528",{"_index":754,"title":{},"body":{"basic/interface.html#接口":{}}}],["x51fd;&#x6570;&#xff0c;&#x6211;&#x4eec;&#x5c31;&#x53ef;&#x4ee5;&#x83b7;&#x53d6;&#x5230",{"_index":5182,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x51fd;&#x6570;&#xff0c;&#x6211;&#x8981;&#x505a;&#x7684;&#x662f;&#xff0c;&#x8ba9",{"_index":4438,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x51fd;&#x6570;&#xff0c;&#x800c;&#x5728;&#x505c;&#x6b62;&#x91c7;&#x6837;&#x7684;&#x65f6;&#x5019;&#x5219;&#x9700;&#x8981;&#x8c03;&#x7528;&#x8be5;&#x5305;&#x4e2d;&#x7684",{"_index":3337,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x51fd;&#x6570;&#xff0c;&#x8bb0;&#x5f55;&#x4e86;&#x8fdb;&#x5165;&#x51fd;&#x6570;&#x7684;&#x65f6;&#x95f4;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x503c;&#xff0c;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x503c;&#x4f1a;&#x5ef6;&#x8fdf;&#x6267;&#x884c",{"_index":2560,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x51fd;&#x6570;&#xff0c;&#x8fd9;&#x4e2a;&#x662f;&#x7a0b;&#x5e8f;&#x7684;&#x5165;&#x53e3;&#x51fd;&#x6570;&#xff0c;&#x5e76;&#x4e14",{"_index":1583,"title":{},"body":{"basic/package.html#main":{}}}],["x51fd;&#x6570;&#xff0c;&#x90a3;&#x4e48;&#x5b83;&#x5c31;&#x662f;&#x547d;&#x4ee4;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x3002",{"_index":189,"title":{},"body":{"index.html#三种文件":{}}}],["x51fd;&#x6570;(&#x4e00;&#x822c;&#x79f0;&#x4e3a;&#x76d1;&#x63a7;&#x7ebf;&#x7a0b;)&#x3002;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x4f1a;&#x5468;&#x671f;&#x6027;&#x5730;&#x505a",{"_index":4579,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x51fd;&#x6570;/&#x65b9;&#x6cd5",{"_index":1321,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5206;&#x5272;&#x5b57;&#x7b26;&#x4e32",{"_index":3851,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5206;&#x6279;&#x5730;&#x542f;&#x7528;&#x6267;&#x884c;&#x5b50;&#x4efb;&#x52a1;&#x7684",{"_index":5135,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5206;&#x914d",{"_index":423,"title":{"advance/mm.html#分配":{}},"body":{}}],["x5206;&#x914d;&#x5668;&#x6309;&#x9875;&#x6570;&#x533a;&#x5206;&#x5927;&#x5c0f;&#x4e0d;&#x540c;&#x7684",{"_index":400,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x5206;&#x914d;&#x65f6;&#x4f7f;&#x7528;&#x3002;&#x53ea;&#x6709;&#x95f2;&#x7f6e;&#x5185;&#x5b58;&#x8fc7;&#x591a;&#x65f6;&#xff0c;&#x624d;&#x8003;&#x8651;&#x91ca;&#x653e;&#x3002",{"_index":429,"title":{},"body":{"advance/mm.html#回收":{}}}],["x5206;&#x914d;&#x7684;&#x5bf9;&#x8c61;&#x5c0f;&#x4e8e",{"_index":861,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x5206;&#x949f;&#x6ca1;&#x6709;&#x5783;&#x573e;&#x56de;&#x6536;&#xff0c;&#x5f3a;&#x5236;&#x6267;&#x884c;&#xff1b",{"_index":4594,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5206;&#x949f;&#x7684",{"_index":4591,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5207;&#x6362;&#x540c;&#x4e00;&#x57fa;&#x7840;&#x7c7b;&#x578b;&#x4e0d;&#x540c;&#x7cbe;&#x5ea6;&#x8303;&#x56f4",{"_index":256,"title":{},"body":{"index.html#类型转换":{}}}],["x5207;&#x6362;&#x591a;&#x4e2a;&#x8fdb;&#x7a0b;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x4f1a;&#x82b1;&#x8d39;&#x4e0d;&#x5c11;&#x7684;&#x65f6;&#x95f4;&#xff0c;&#x56e0;&#x4e3a;&#x5207;&#x6362;&#x8fdb;&#x7a0b;&#x9700;&#x8981;&#x5207;&#x6362;&#x5230;&#x5185;&#x6838;&#x6001;&#xff0c;&#x800c;&#x6bcf;&#x6b21;&#x8c03;&#x5ea6;&#x9700;&#x8981;&#x5185;&#x6838;&#x6001;&#x90fd;&#x9700;&#x8981;&#x8bfb;&#x53d6;&#x7528;&#x6237;&#x6001;&#x7684;&#x6570;&#x636e;&#xff0c;&#x8fdb;&#x7a0b",{"_index":4236,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5207;&#x6362;&#x6765;&#x5b9e;&#x73b0;&#x5e76;&#x53d1;&#xff0c;&#x51cf;&#x5c11;&#x4e86;&#x963b;&#x585e;&#x65f6;&#x95f4;&#xff0c;&#x8fd8;&#x907f;&#x514d;&#x4e86;&#x7ebf;&#x7a0b;&#x5207;&#x6362;&#x7684;&#x5f00;&#x9500;&#x3002;&#x4f46;&#x534f;&#x7a0b;&#x8fd0;&#x884c;&#x7684;&#x5e76;&#x53d1;&#x672c;&#x8d28;&#x4e0a;&#x8fd8;&#x662f;&#x4e32;&#x884c;&#x7684;&#x3002;&#x7ebf;&#x7a0b;&#x548c;&#x8fdb;&#x7a0b;&#x7684;&#x64cd;&#x4f5c;&#x662f;&#x7531;&#x7a0b;&#x5e8f;&#x89e6;&#x53d1;&#x7cfb;&#x7edf",{"_index":4243,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5207;&#x7247;&#x3001;&#x5b57;&#x7b26;&#x4e32;&#x3001;&#x5b57;&#x5178;&#x6216;&#x8005;&#x5141;&#x8bb8;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x7684;&#x901a;&#x9053;&#x4e2d;&#x7684;&#x67d0;&#x4e00;&#x4e2a;&#xff0c;&#x5e76;&#x4e14;&#x7ed3;&#x679c;&#x503c;&#x53ea;&#x80fd;&#x6709;&#x4e00;&#x4e2a;&#x3002;&#x8fd9;&#x91cc;&#x7684",{"_index":588,"title":{},"body":{"basic/flow.html#for":{}}}],["x5207;&#x7247;&#x7c7b;&#x578b;&#x5c5e;&#x4e8e;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x6211;&#x5728;&#x5916;&#x9762;&#x6539;&#x52a8;&#x8fd9;&#x4e2a;&#x5207;&#x7247;&#x503c;&#xff0c;&#x5c31;&#x7b49;&#x4e8e;&#x4fee;&#x6539;&#x4e86",{"_index":5017,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x5207;&#x7247;&#xff08;slice&#xff09",{"_index":2053,"title":{},"body":{"basic/slice.html#slice":{}}}],["x5217;&#x51fa;&#x5de5;&#x4f5c;&#x533a;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x5305",{"_index":3036,"title":{},"body":{"commands/build.html#工具":{}}}],["x5217;&#x51fa;&#x6307;&#x5b9a;&#x76ee;&#x5f55;&#x4e0b;&#x7684;&#x6240;&#x6709;&#x5305",{"_index":3037,"title":{},"body":{"commands/build.html#工具":{}}}],["x5219",{"_index":3648,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x5219;&#x4ee3;&#x8868;&#x4e86;&#x94fe;&#x8868;&#x4e2d;&#x5143;&#x7d20;&#x7684;&#x7ed3;&#x6784;&#x3002",{"_index":2408,"title":{},"body":{"packages/container.html#container-包":{}}}],["x5219;&#x8868;&#x793a;&#x65ad;&#x8a00;&#x5931;&#x8d25;&#x3002",{"_index":312,"title":{},"body":{"index.html#类型断言":{}}}],["x5219;&#x8868;&#x793a;&#x65ad;&#x8a00;&#x6210;&#x529f;&#xff0c",{"_index":311,"title":{},"body":{"index.html#类型断言":{}}}],["x521a;&#x624d;&#x8bf4;&#x8fc7;&#xff0c;&#x4e00;&#x65e6;&#x4e3b",{"_index":4375,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x521b;&#x5efa",{"_index":2639,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x521b;&#x5efa;&#x4e00;&#x4e2a",{"_index":744,"title":{},"body":{"basic/interface.html#接口":{}}}],["x521b;&#x5efa;&#x4e86;&#x4e00;&#x4e2a;&#x5b8c;&#x5168;&#x7684;&#x526f;&#x672c;&#x3002;&#x8fd9;&#x4e2a;&#x526f;&#x672c;&#x6d89;&#x53ca;&#x7684;&#x6570;&#x636e;&#x5df2;&#x7ecf;&#x4e0e;&#x539f;&#x503c;&#x6beb;&#x4e0d;&#x76f8;&#x5e72;&#x4e86;&#x3002;&#x7136;&#x540e;&#xff0c;&#x6211;&#x518d;&#x628a;&#x8fd9;&#x4e2a;&#x526f;&#x672c;&#x5b58;&#x5165",{"_index":5022,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x521b;&#x5efa;&#x5207;&#x7247",{"_index":2076,"title":{},"body":{"basic/slice.html#截取切片":{}}}],["x521d;&#x59cb;&#x5316",{"_index":4876,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x521d;&#x59cb;&#x5316;&#x51fd;&#x6570;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x533f;&#x540d;&#x5bfc;&#x5165;&#x3002",{"_index":1607,"title":{},"body":{"basic/package.html#点操作":{}}}],["x521d;&#x59cb;&#x5316;&#x5207;&#x7247;&#xff1a",{"_index":2059,"title":{},"body":{"basic/slice.html#slice":{}}}],["x521d;&#x59cb;&#x5316;&#x5207;&#x7247;s,&#x662f;&#x6570;&#x7ec4;arr&#x7684;&#x5f15;&#x7528",{"_index":2062,"title":{},"body":{"basic/slice.html#slice":{}}}],["x521d;&#x59cb;&#x5316;&#x5305",{"_index":1633,"title":{"basic/package.html#初始化包":{}},"body":{}}],["x521d;&#x59cb;&#x5316;&#x6570;&#x7ec4;&#x4e2d",{"_index":464,"title":{},"body":{"basic/array.html#数组":{}}}],["x521d;&#x59cb;&#x5316;&#x6570;&#x7ec4;&#xff1a",{"_index":463,"title":{},"body":{"basic/array.html#数组":{}}}],["x521d;&#x59cb;&#x5316;&#x7684;&#x65f6;&#x5019;&#x8bbe;&#x7f6",{"_index":874,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x521d;&#x59cb;&#x5316;&#x8fd9;&#x4e2a;&#x6c60;&#x7684;&#x65f6;&#x5019;&#x6700;&#x597d;&#x7ed9;&#x5b9a;&#x5b83",{"_index":5264,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5220;&#x9664",{"_index":2377,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x5224;&#x65ad",{"_index":295,"title":{},"body":{"index.html#类型断言":{}}}],["x5224;&#x65ad;&#x5b57;&#x7b26;&#x4e32;&#x662f;&#x5426;&#x4ee5",{"_index":3846,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5224;&#x65ad;&#x662f;&#x5426;&#x662f;&#x8be5;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf;&#xff1a",{"_index":300,"title":{},"body":{"index.html#类型断言":{}}}],["x5224;&#x65ad;2&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x5927;&#x5c0f;&#xff0c;&#x76f8;&#x7b49;0&#xff0c;&#x5de6;&#x8fb9;&#x5927;&#x4e8e;&#x53f3;&#x8fb9",{"_index":3849,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5230",{"_index":3779,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5230;&#x5b83;&#x7684;&#x5df2;&#x8bfb;&#x8ba1;&#x6570;&#x3002",{"_index":3965,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5230;&#x7d22;&#x5f15",{"_index":2083,"title":{},"body":{"basic/slice.html#截取切片":{}}}],["x5230;&#x7d22;&#x5f15;4(&#x4e0d;&#x5305;&#x542b",{"_index":2078,"title":{},"body":{"basic/slice.html#截取切片":{}}}],["x524d;&#x8005;&#x53ef;&#x4ee5;&#x7531;&#x4e00;&#x4e2a;&#x4ee5",{"_index":4013,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x524d;&#x9762;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":4000,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5256;&#x6790",{"_index":3210,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x5256;&#x6790;&#x6570;&#x636e;&#x6807;&#x8bc6;&#x4e86;&#x6700;&#x8017",{"_index":3213,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x529f;&#x5730;&#x5f15;&#x7528;&#x4e86;&#x5f53;&#x524d;&#x503c;&#x7684;&#x6240;&#x6709;&#x5b57;&#x6bb5;&#x3002",{"_index":1209,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x7684;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c",{"_index":3240,"title":{"basic/test.html#功能测试的测试结果":{}},"body":{}}],["x52a0",{"_index":626,"title":{},"body":{"basic/flow.html#for":{}}}],["x52a0;&#x62ec;&#x53f7;&#xff0c;&#x5426;&#x5219;&#x4f1a;&#x88ab;&#x89e3;&#x6790;&#x4e3a;*(int(&amp;x",{"_index":270,"title":{},"body":{"index.html#类型转换":{}}}],["x52a0;&#x8f7d",{"_index":5156,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x52a0;&#x9501;&#x5c31;&#x6ca1;&#x6709;&#x5fc5;&#x8981;&#x3002;&#x53ef;&#x4ee5;&#x4f7f",{"_index":4796,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x52a1;&#x7684",{"_index":5132,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305",{"_index":1557,"title":{"basic/package.html#包":{},"packages/container.html#container-包":{}},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5305;&#x3002;&#x5982",{"_index":3025,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x3002;&#x5982;&#x679c",{"_index":1660,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x4e0e;&#x5b57;&#x7b26;&#x4e32;&#x64cd;&#x4f5c",{"_index":3840,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#x4e0e;&#x5b57;&#x8282;&#x4e32;&#x64cd;&#x4f5c",{"_index":3929,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#x4e2d;&#x4ee3;&#x8868;&#x7740;&#x4ec0;&#x4e48;&#xff1f;&#x201c;&#x64a4;&#x9500;&#x201d;&#x4e00;&#x4e2a",{"_index":5207,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x4e2d;&#x58f0;&#x660e;&#x4e86;&#x5f88;&#x591a;&#x7528;&#x4e8e;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x7684;&#x51fd;&#x6570;&#x3002;&#x7531;&#x4e8e;&#x6211;&#x9009;&#x7528;&#x7684;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x5bf9;&#x88ab;&#x64cd;&#x4f5c;&#x7684;&#x6570;&#x503c;&#x7684;&#x7c7b;&#x578b;&#x6709;&#x7ea6;&#x675f;&#xff0c;&#x6240",{"_index":4430,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5305;&#x4e2d;&#x7684",{"_index":1668,"title":{},"body":{"basic/package.html#初始化包":{},"basic/test.html#性能分析":{},"concurrent/sync_lock.html#原子操作":{}}}],["x5305;&#x4e2d;&#x7684;&#x51fd;&#x6570;&#x53ef;&#x4ee5;&#x505a;&#x7684;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x6709;&#xff1a;&#x52a0;&#x6cd5;&#xff08;add&#xff09;&#x3001;&#x6bd4;&#x8f83;&#x5e76;&#x4ea4;&#x6362;&#xff08;compar",{"_index":4962,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5305;&#x4e2d;&#x7684;&#x51fd;&#x6570;&#x548c",{"_index":5140,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x4e2d;&#x7684;&#x5305;&#x7ea7;&#x5e38;&#x91cf;&#x548c;&#x53d8;&#x91cf;&#x8fdb;&#x884c;&#x521d;&#x59cb;&#x5316;&#xff0c;&#x7136;&#x540e;&#x6267;&#x884c",{"_index":1667,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x4e2d;&#x7684;&#x7a0b;&#x5e8f;&#x5b9e;&#x4f53;&#xff0c;&#x5b9e;&#x73b0;&#x4e00;&#x5bf9;&#x591a;&#x7684",{"_index":5138,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x4e2d;&#x8fd8;&#x5305;&#x542b;&#x4e86",{"_index":5189,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x4e2d;&#x90fd;&#x5305;&#x542b;&#x4e86",{"_index":1615,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5305;&#x4e2d;&#x9884;&#x5b9a;&#x4e49;&#x597d;&#x7684",{"_index":5178,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x4e3b;&#x8981;&#x9762;&#x5411;&#x7684;&#x662f",{"_index":3933,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x72ec;&#x7acb;&#x8fd0;&#x884c;&#x7684;&#x7a0b;&#x5e8f;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x4e00;&#x4e2a",{"_index":1580,"title":{},"body":{"basic/package.html#main":{}}}],["x5305;&#x5185;&#x4ee5;&#x5927;&#x5199;&#x5b57;&#x6bcd;&#x5f00;&#x5934;&#x5b9a;&#x4e49;&#x7684;&#x540d;&#x5b57;&#xff08;&#x5305;&#x62ec;&#x53d8;&#x91cf;&#xff0c;&#x7c7b;&#x578b;&#xff0c;&#x51fd;&#x6570;&#x7b49;&#x7b49;&#xff09;&#xff0c;&#x4f1a;&#x88ab;&#x5bfc;&#x51fa;&#xff0c;&#x53ef;&#x4ee5;&#x5728;&#x5305;&#x7684;&#x5916;&#x90e8;&#x8bbf;&#x95ee;&#x3002",{"_index":1619,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5305;&#x521d;&#x59cb;&#x5316;&#x7684;&#x65f6;&#x5019;&#x53ef;&#x4ee5;&#x8ba4;&#x4e3a",{"_index":1646,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x53ea;&#x80fd;&#x88ab;&#x548c",{"_index":3026,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x53ef;&#x4ee5;&#x8bf4;&#x662f;&#x4e00;&#x5bf9;&#x5b6a;&#x751f;&#x5144;&#x5f1f;&#xff0c;&#x5b83;&#x4eec;&#x5728",{"_index":3930,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#x540d;&#x5f88;&#x957f;&#x3002;&#x91cd;&#x547d;&#x540d;&#x4e00;&#x4e2a;&#x7b80;&#x77ed;&#x7684;&#x5305;&#x540d;&#x3002",{"_index":1598,"title":{},"body":{"basic/package.html#点操作":{}}}],["x5305;&#x542b",{"_index":1148,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5305;&#x542b;&#x4e00;&#x4e2a;&#x503c;&#xff0c;&#x4ee5;&#x53ca;&#x5e94;&#x8be5;&#x8ba9;&#x5b83;&#x5305;&#x542b;&#x4ec0;&#x4e48;&#x6837;&#x7684;&#x503c",{"_index":995,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5305;&#x542b;&#x7684;&#x6bcf;&#x4e00;&#x4e2a",{"_index":608,"title":{},"body":{"basic/flow.html#for":{}}}],["x5305;&#x542b;&#x9000;&#x683c;&#x548c;&#x6362;&#x884c",{"_index":3810,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#x547d;&#x540d",{"_index":1631,"title":{"basic/package.html#包命名":{}},"body":{}}],["x5305;&#x547d;&#x540d;&#x5c3d;&#x91cf;&#x6709;&#x63cf;&#x8ff0;&#x6027;&#x4e14;&#x65e0;&#x6b67;&#x4e49;&#xff0c;&#x7b80;&#x77ed;&#xff0c;&#x907f;&#x514d;&#x51b2;&#x7a81;&#x3002",{"_index":1632,"title":{},"body":{"basic/package.html#包命名":{}}}],["x5305;&#x548c",{"_index":1594,"title":{},"body":{"basic/package.html#点操作":{},"basic/package.html#包声明":{},"basic/basic_data.html#字符串":{}}}],["x5305;&#x5728",{"_index":5288,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5305;&#x5728;&#x4efb;&#x4f55;&#x7531;&#x6587;&#x4ef6;&#x7ed3;&#x675f;&#x5f15;&#x8d77;&#x7684;&#x8bfb;&#x53d6;&#x5931;&#x8d25;&#x90fd;&#x8fd4;&#x56de;&#x540c;&#x4e00;&#x4e2a;&#x9519;&#x8bef",{"_index":936,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x5305;&#x58f0;&#x660e",{"_index":1612,"title":{"basic/package.html#包声明":{}},"body":{}}],["x5305;&#x58f0;&#x660e;&#x8bed;&#x53e5;&#xff08;&#x5305;&#x540d;&#xff09;&#x5fc5;&#x987b;&#x5728;&#x6bcf;&#x4e2a;&#x6e90;&#x6587;&#x4ef6;&#x7684;&#x5f00;&#x5934;&#x3002;&#x88ab;&#x5176;&#x5b83;&#x5305;&#x5bfc;&#x5165;&#x65f6;&#x9ed8;&#x8ba4;&#x7684;&#x6807;&#x8bc6;&#x7b26;&#x3002;&#x6bcf;&#x4e2a;&#x5305;&#x90fd;&#x5bf9;&#x5e94;&#x4e00;&#x4e2a;&#x72ec;&#x7acb;&#x7684;&#x540d;&#x5b57;&#x7a7a;&#x95f4;&#xff0c",{"_index":1613,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5305;&#x5bfc;&#x5165;&#x4e86",{"_index":1644,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x5fc5;&#x7136;&#x5df2;&#x7ecf;&#x521d;&#x59cb;&#x5316;&#x8fc7;&#x4e86;&#x3002;&#x521d;&#x59cb;&#x5316;&#x5de5;&#x4f5c;&#x662f;&#x81ea;&#x4e0b;&#x800c;&#x4e0a;&#x8fdb;&#x884c;&#x7684;&#xff0c",{"_index":1647,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x603b;&#x662f;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x4e00;&#x4e9b",{"_index":5277,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5305;&#x6216;&#x8005",{"_index":3029,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x6392;&#x5e8f",{"_index":1974,"title":{},"body":{"basic/map.html#map":{}}}],["x5305;&#x63d0;&#x4f9b;&#x4e86;&#x4e24;&#x79cd;&#x9501;&#x7c7b;&#x578b;&#xff1a",{"_index":4779,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x5305;&#x63d0;&#x4f9b;&#x4e86;&#x590d;&#x6570;&#x5904;&#x7406;&#x7684;&#x8bb8;&#x591a;&#x51fd;&#x6570;&#x3002",{"_index":3793,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5305;&#x63d0;&#x4f9b;&#x652f;&#x6301;&#xff0c;&#x5e76;&#x4e14;&#x8fd9;&#x7c7b;&#x5305;&#x90fd;&#x6709;&#x7740;&#x76f8;&#x4f3c;&#x7684",{"_index":1443,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5305;&#x6587;&#x6863",{"_index":3000,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x6700;&#x540e;&#x88ab;&#x521d;&#x59cb;&#x5316;&#x3002;&#x4ee5;&#x8fd9;&#x79cd;&#x65b9;&#x5f0f;&#xff0c",{"_index":1648,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x751f;&#x4ea7;&#x7684;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#x653e;&#x5230",{"_index":2967,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x7684",{"_index":4392,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5305;&#x7684;&#x521d;&#x59cb;&#x5316;&#x9996;&#x5148;&#x662f;&#x89e3;&#x51b3;&#x5305;&#x7ea7;&#x53d8;&#x91cf;&#x7684;&#x4f9d;&#x8d56;&#x987a;&#x5e8f;&#xff0c;&#x7136;&#x540e;&#x6309;&#x7167;&#x5305;&#x7ea7;&#x53d8;&#x91cf;&#x58f0;&#x660e;&#x51fa;&#x73b0;&#x7684;&#x987a;&#x5e8f;&#x4f9d;&#x6b21;&#x521d;&#x59cb;&#x5316;&#xff1a",{"_index":1634,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x7684;&#x7f16;&#x7801;&#x548c;&#x89e3;&#x7801;&#x7684;&#x884c;&#x4e3a;&#xff0c",{"_index":1464,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5305;&#x76ee;&#x5f55;&#x3002",{"_index":2922,"title":{},"body":{"commands/build.html#工具":{}}}],["x5305;&#x88c5;&#x7684",{"_index":966,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5305;&#x8c03;&#x7528;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002",{"_index":3165,"title":{},"body":{"basic/test.html#测试":{}}}],["x5305;&#x8fd8;&#x5bfc;&#x5165;&#x4e86;&#x5176;&#x5b83;&#x7684;&#x5305;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x4f1a;&#x5728;&#x7f16;&#x8bd1;&#x65f6;&#x5c06;&#x5b83;&#x4eec;&#x4f9d;&#x6b21;&#x5bfc;&#x5165;&#x3002;&#x6709;&#x65f6;&#x4e00;&#x4e2a;&#x5305;&#x4f1a;&#x88ab;&#x591a;&#x4e2a;&#x5305;&#x540c;&#x65f6;&#x5bfc;&#x5165;&#xff0c",{"_index":1661,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#x8fd8;&#x63d0;&#x4f9b;&#x4e86;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":4971,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5305;&#x90fd;&#x4f1a;&#x6709;&#x4e00;&#x5957;&#x51fd;&#x6570;&#x7ed9;&#x4e88;&#x652f;&#x6301;&#x3002;&#x8fd9;&#x4e9b;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x6709;&#xff1a",{"_index":4967,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5305;&#x91cc",{"_index":1581,"title":{},"body":{"basic/package.html#main":{}}}],["x5305;&#x9762;&#x5bf9;&#x7684;&#x5219;&#x4e3b;&#x8981;&#x662f;&#x5b57;&#x8282;&#x548c;&#x5b57;&#x8282;&#x5207;&#x7247;&#x3002",{"_index":3936,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5305;&#xff0c",{"_index":1622,"title":{},"body":{"basic/package.html#包声明":{},"basic/package.html#初始化包":{},"commands/build.html#工具":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5305;&#xff0c;&#x4f46;&#x5b83;&#x53ea;&#x4f1a;&#x88ab;&#x5bfc;&#x5165;&#x4e00;&#x6b21;&#xff0c;&#x56e0;&#x4e3a;&#x6ca1;&#x6709;&#x5fc5;&#x8981;&#x5bfc;&#x5165;&#x591a;&#x6b21;&#xff09;&#x3002;&#x5f53;&#x4e00;&#x4e2a;&#x5305;&#x88ab;&#x5bfc;&#x5165;&#x65f6;&#xff0c;&#x5982;&#x679c;&#x8be5;&#x5305;&#x8fd8;&#x5bfc;&#x5165;&#x4e86",{"_index":1663,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5305;&#xff0c;&#x53ef;&#x4ee5;&#x4e3a;&#x4e00;&#x4e2a;&#x5305;&#x91cd;&#x547d;&#x540d;&#x6765;&#x89e3;&#x51b3;&#x540d;&#x5b57;&#x51b2;&#x7a81;&#xff1a",{"_index":1595,"title":{},"body":{"basic/package.html#点操作":{}}}],["x5305;&#xff0c;&#x5e76;&#x4e14;&#x5305;&#x542b;&#x4e00;&#x4e2a;&#x65e0;&#x53c2;&#x6570;&#x58f0;&#x660e;&#x4e14;&#x65e0;&#x7ed3;&#x679c;&#x58f0;&#x660e;&#x7684",{"_index":188,"title":{},"body":{"index.html#三种文件":{}}}],["x5305;&#xff0c;&#x5e76;&#x4ee5",{"_index":3182,"title":{},"body":{"basic/test.html#测试函数":{},"basic/test.html#基准测试":{}}}],["x5305;&#xff1a",{"_index":747,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5305;&#xff1f",{"_index":3032,"title":{},"body":{"commands/build.html#工具":{}}}],["x533a;&#x522b;&#x65e0;&#x975e;&#x662f;&#x62f7;&#x8d1d;&#x76ee;&#x6807;&#x5bf9;&#x8c61;&#x8fd8;&#x662f;&#x62f7;&#x8d1d;&#x6307;&#x9488;&#xff09;&#x5f53;&#x5728;&#x88ab;&#x8c03;&#x7528;&#x51fd;&#x6570;&#x4e2d;&#x4fee;&#x6539;&#x53c2;&#x6570;&#x503c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x8c03;&#x7528;&#x51fd;&#x6570;&#x4e2d;&#x76f8;&#x5e94;&#x5b9e;&#x53c2;&#x4e0d;&#x4f1a;&#x53d1;&#x751f;&#x4efb;&#x4f55;&#x53d8;&#x5316;&#xff0c;&#x56e0;&#x4e3a;&#x6570;&#x503c;&#x53d8;&#x5316;&#x53ea;&#x4f5c;&#x7528;&#x5728",{"_index":2504,"title":{},"body":{"basic/function.html#参数":{}}}],["x533f;&#x540d;&#x5bfc;&#x5165",{"_index":1601,"title":{},"body":{"basic/package.html#点操作":{}}}],["x533f;&#x540d;&#x5bfc;&#x5165;&#x6709;&#x4ec0;&#x4e48;&#x7528;&#xff1f;&#x6211;&#x4eec;&#x77e5;&#x9053;&#x5982;&#x679c;&#x5bfc;&#x5165;&#x4e00;&#x4e2a;&#x5305;&#x800c;&#x4e0d;&#x4f7f;&#x7528;&#x4f1a;&#x5bfc;&#x81f4;&#x7f16;&#x8bd1;&#x9519;&#x8bef",{"_index":1604,"title":{},"body":{"basic/package.html#点操作":{}}}],["x533f;&#x540d;&#x6210;&#x5458",{"_index":1764,"title":{"basic/struct.html#结构体嵌入-匿名成员":{}},"body":{}}],["x533f;&#x540d;&#x6210;&#x5458;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x662f;&#x547d;&#x540d;&#x7684;&#x7c7b;&#x578b;&#x6216;&#x6307;&#x5411;&#x4e00;&#x4e2a;&#x547d;&#x540d;&#x7684;&#x7c7b;&#x578b;&#x7684;&#x6307;&#x9488;&#x3002",{"_index":1774,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5343;&#x5b57;&#x8282;&#x3002",{"_index":3347,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x534e;&#x6c0f;&#x6e29;&#x5ea6",{"_index":278,"title":{},"body":{"index.html#自定义类型":{}}}],["x534f;&#x4f5c;&#x6d41;&#x7a0b",{"_index":5139,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x534f;&#x4f5c;&#x6d41;&#x7a0b;&#x3002",{"_index":5039,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x534f;&#x7a0b",{"_index":4240,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x534f;&#x7a0b;&#x7684;&#x5b9e;&#x4f53;&#xff0c;&#x5305;&#x62ec;&#x4e86;&#x8c03;&#x7528;&#x6808;&#xff0c;&#x91cd;&#x8981;&#x7684;&#x8c03;&#x5ea6;&#x4fe1;&#x606f;&#xff0c;&#x4f8b;&#x5982",{"_index":4286,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5355;&#x5411",{"_index":2709,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5360;&#x7528;&#x7684;&#x8d44;&#x6e90;&#x4e0d;&#x5c0f;&#x4e4b;&#x5916;&#xff0c;&#x64cd",{"_index":4473,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5360;&#x7528;&#x7684;&#x8d44;&#x6e90;&#x975e;&#x5e38;&#x5c0f;(goroutin",{"_index":4484,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5373;&#x4e3a",{"_index":1123,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5373;&#x4e3a;&#x88ab;&#x6d4b;&#x8bd5;&#x4ee3;&#x7801;&#x5305;&#x7684",{"_index":3176,"title":{},"body":{"basic/test.html#测试":{}}}],["x5373;&#x53ef;&#x8fd0;&#x884c;&#xff0c;&#x8be5",{"_index":4584,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5373;&#x6709;&#x591a;&#x5c11;&#x4e2a",{"_index":4299,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5373;&#x8c03;&#x7528",{"_index":4417,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x539f;&#x5207;&#x7247;&#x5bb9;&#x91cf;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x539f;&#x5bb9;&#x91cf;&#xff09;&#x7684",{"_index":2094,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x539f;&#x56e0;&#x5f88;&#x7b80;&#x5355;&#xff0c;&#x56e0;&#x4e3a;&#x5bf9;&#x5b83;&#x7684;&#x64cd;&#x4f5c;&#x5fc5;&#x987b;&#x662f;&#x201c;&#x539f;&#x5b50;&#x201d;&#x7684;&#x3002",{"_index":5104,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x539f;&#x56e0;&#x5f88;&#x7b80;&#x5355;&#xff0c;&#x5f53;&#x6211;&#x4eec;&#x4ece;&#x4e2d;&#x83b7;&#x53d6;&#x6570;&#x636e;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x9700;&#x8981;&#x6839;&#x636e;&#x7ed9;&#x5b9a;&#x7684;&#x952e;&#x6765;&#x67e5;&#x627e;&#x5bf9;&#x5e94;&#x7684;&#x503c;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8fd9;&#x79cd",{"_index":5240,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x539f;&#x5b50;&#x5730",{"_index":5155,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x539f;&#x5b50;&#x64cd;&#x4f5c",{"_index":4958,"title":{"concurrent/sync_lock.html#原子操作":{}},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x539f;&#x5b50;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x9700;&#x8981;&#x7684;&#x662f;&#x88ab;&#x64cd;&#x4f5c;&#x503c;&#x7684;&#x6307;&#x9488;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x8fd9;&#x4e2a;&#x503c;&#x672c;&#x8eab",{"_index":4976,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x539f;&#x6709;&#x5bb9;&#x91cf",{"_index":3987,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x539f;&#x751f;&#x652f;&#x6301;&#x5e76;&#x53d1",{"_index":4524,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x53bb;&#x5305;&#x88c5;&#x5f53;&#x524d;&#x7684;&#x90a3;&#x4e2a",{"_index":4330,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53bb;&#x6267;&#x884c;)&#xff0c",{"_index":4221,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x53bb;&#x9664;&#x5b57;&#x7b26;&#x4e32;2&#x7aef;&#x7a7a;&#x683c",{"_index":3853,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53c2;&#x6570",{"_index":2499,"title":{"basic/function.html#参数":{}},"body":{"basic/test.html#测试":{}}}],["x53c2;&#x6570;&#x4e3a;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x65f6;&#xff0c;&#x4f20;&#x8fdb;&#x53bb;&#x7684;&#x5927;&#x90fd;&#x662f;&#x503c;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x53e6;&#x5916;&#x590d;&#x5236;&#x4e86;&#x4e00;&#x4efd;&#x53c2;&#x6570;&#x5230;&#x5f53;&#x524d;&#x7684;&#x51fd;&#x6570;&#x8c03;&#x7528;&#x6808;&#x3002;&#x53c2;&#x6570;&#x4e3a;&#x9ad8;&#x7ea7;&#x7c7b;&#x578b;&#x65f6;&#xff0c;&#x4f20;&#x8fdb;&#x53bb;&#x7684;&#x57fa;&#x672c;&#x90fd;&#x662f;&#x5f15;&#x7528;&#x3002",{"_index":1323,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x53c2;&#x6570;&#x4e3b;&#x8981;&#x7684;&#x53ef;&#x9009;&#x503c;&#x6709;&#x4e24;&#x4e2a;&#xff0c;&#x5373;&#xff1a;0",{"_index":3378,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x53c2;&#x6570;&#x5c06;&#x5728;&#x6bcf;&#x4e2a;&#x4ee3;&#x7801;&#x5757;&#x63d2;&#x5165;&#x4e00;&#x4e2a;&#x8ba1;&#x6570;&#x5668;&#x800c;&#x4e0d;&#x662f;&#x5e03;&#x5c14;&#x6807;&#x5fd7;&#x91cf;&#x3002;&#x5728;&#x7edf;&#x8ba1;&#x7ed3;&#x679c;&#x4e2d;&#x8bb0;&#x5f55;&#x4e86;&#x6bcf;&#x4e2a;&#x5757;&#x7684;&#x6267;&#x884c;&#x6b21;&#x6570;&#xff0c",{"_index":3198,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["x53c2;&#x6570;&#x6307;&#x7684;&#x5219;&#x662f;&#x9700;&#x8981;&#x65bd;&#x52a0;&#x5728;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x4e4b;&#x4e0a;&#x7684;&#x6a21;&#x5f0f;&#xff0c;&#x53ef;&#x9009;&#x9879;&#x3002;&#x8fd9;&#x4e2a;&#x53ea;&#x8bfb;&#x6a21;&#x5f0f;&#x7531;&#x5e38;&#x91cf",{"_index":4113,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x53c2;&#x6570;&#x7528;&#x4e8e;&#x62a5;&#x544a;&#x6d4b;&#x8bd5;&#x5931;&#x8d25;&#x548c;&#x9644;&#x52a0;&#x7684;&#x65e5;&#x5fd7;&#x4fe1;&#x606f;&#x3002",{"_index":3185,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x53c2;&#x6570;&#x8868;&#x793a;&#x7528;json&#x683c;&#x5f0f;&#x6253;&#x5370;&#x6bcf;&#x4e2a;&#x5305;&#x7684;&#x5143;&#x4fe1;&#x606f",{"_index":3040,"title":{},"body":{"commands/build.html#工具":{}}}],["x53c2;&#x6570;&#x9664;&#x4e86;&#x63d0;&#x4f9b;&#x548c",{"_index":3203,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x53c2;&#x6570;&#xff0c;&#x6307;&#x5b9a;&#x8981;&#x8fd0;&#x884c;&#x7684;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002;&#x8be5;&#x53c2;&#x6570;&#x662f;&#x4e00;&#x4e2a;&#x6b63;&#x5219;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x7528;&#x4e8e;&#x5339;&#x914d;&#x8981;&#x6267;&#x884c;&#x7684;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x7684;&#x540d;&#x5b57;&#xff0c",{"_index":3207,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x53c2;&#x6570;&#xff0c;&#x7edf;&#x8ba1;&#x8986;&#x76d6;&#x7387;&#x6570;&#x636e;&#xff0c;&#x5e76;&#x5c06;&#x7edf;&#x8ba1;&#x65e5;&#x5fd7;&#x6570;&#x636e;&#x5199;&#x5165;&#x6307;&#x5b9a;&#x6587;&#x4ef6;&#xff0c;&#x5982",{"_index":3197,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["x53c8;&#x56e0;&#x4e3a",{"_index":3517,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x53c8;&#x662f",{"_index":347,"title":{},"body":{"index.html#编码":{},"packages/io.html#io包中的接口和工具":{}}}],["x53c8;&#x6bd4;&#x5982;&#xff0c;&#x5982;&#x679c;&#x5176;&#x4e2d;&#x7684;&#x7b2c",{"_index":4161,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x53c8;&#x7531;&#x4e8e;&#xff0c;&#x6bcf;&#x4e2a",{"_index":4033,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53cd;&#x4e4b;&#xff0c;&#x5982;&#x679c;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5269;&#x4f59;&#x5bb9;&#x91cf;&#x4e0d;&#x591f;&#x4e86;&#xff0c;&#x90a3;&#x4e48;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#x53ef;&#x80fd;&#x5c31;&#x4f1a;&#x7528;&#x65b0;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x53bb;&#x66ff;&#x4ee3;&#x539f;&#x6709;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff0c;&#x4ece;&#x800c;&#x5b9e;&#x73b0;&#x6269;&#x5bb9;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8fd9;&#x91cc;&#x8fd8;&#x4e00;&#x6b65;&#x4f18;&#x5316;&#x3002",{"_index":3979,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53cd;&#x5c04",{"_index":2166,"title":{"basic/reflect.html#反射":{}},"body":{}}],["x53cd;&#x5c04;&#x673a;&#x5236;&#xff0c;&#x80fd;&#x591f;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x66f4;&#x65b0;&#x53d8;&#x91cf;&#x548c;&#x68c0;&#x67e5;&#x5b83;&#x4eec;&#x7684;&#x503c;&#x3001;&#x8c03;&#x7528;&#x5b83;&#x4eec;&#x7684;&#x65b9;&#x6cd5;&#x548c;&#x5b83;&#x4eec;&#x652f;&#x6301;&#x7684;&#x5185;&#x5728;&#x64cd;&#x4f5c;&#xff0c;&#x800c;&#x4e0d;&#x9700;&#x8981;&#x5728;&#x7f16;&#x8bd1;&#x65f6;&#x5c31;&#x77e5;&#x9053",{"_index":2167,"title":{},"body":{"basic/reflect.html#反射":{}}}],["x53d1;&#x5b89;&#x5168;&#x6027;&#x3002;&#x5728",{"_index":4429,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53d1;&#x73b0;&#x8be5;&#x503c;&#x4e3a",{"_index":5107,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x53d1;&#x9001;&#x4e00;&#x4e2a;&#x503c",{"_index":2646,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x548c;&#x63a5;&#x6536;&#x4e24;&#x4e2a;&#x64cd;&#x4f5c;&#x4f7f;&#x7528",{"_index":2644,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x64cd;&#x4f5c;&#x4f1a;&#x5411",{"_index":2698,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x64cd;&#x4f5c;&#x548c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x4e2d;&#x5bf9;&#x5143;&#x7d20;&#x503c;&#x7684;&#x5904;&#x7406;&#x90fd;&#x662f;&#x4e0d;&#x53ef;&#x5206;&#x5272;&#x7684;&#x3002;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x8981;&#x4e48;&#x8fd8;&#x6ca1;&#x590d;&#x5236;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x8981;&#x4e48;&#x5df2;&#x7ecf;&#x590d;&#x5236;&#x5b8c;&#x6bd5;&#xff0c;&#x7edd;&#x4e0d;&#x4f1a;&#x51fa;&#x73b0;&#x53ea;&#x590d;&#x5236;&#x4e86;&#x4e00;&#x90e8;&#x5206",{"_index":2723,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x64cd;&#x4f5c;&#x548c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x5728;&#x4ec0;&#x4e48;&#x65f6;&#x5019;&#x53ef;&#x80fd;&#x88ab;&#x957f;&#x65f6;&#x95f4;&#x7684;&#x963b;&#x585",{"_index":2729,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x64cd;&#x4f5c;&#x5728;&#x5b8c;&#x5168;&#x5b8c;&#x6210;&#x4e4b;&#x524d;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#x3002;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x4e5f;&#x662f;&#x5982;&#x6b64;&#x3002",{"_index":2725,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x6570;&#x636e;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x4f1a",{"_index":2684,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x65b0;&#x7684;&#x6570;&#x636e;&#xff0c;&#x6240;&#x4ee5;&#x53ea;&#x6709;&#x5728",{"_index":2658,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d1;&#x9001;&#x6d88;&#x606f",{"_index":2636,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d6;&#x51fa;channel&#x7684;&#x503c;&#x5e76;&#x590d;&#x5236;&#x7ed9;&#x53d8;&#x91cf;x",{"_index":2649,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53d6;&#x6a21;&#x8fd0;&#x7b97;&#x7b26;&#x7684;&#x7b26;&#x53f7;&#x548c;&#x88ab;&#x53d6;&#x6a21;&#x6570;&#x7684;&#x7b26;&#x53f7;&#x603b;&#x662f;&#x4e00;&#x81f4;&#x7684;&#xff0c;&#x56e0;&#x6b64",{"_index":1874,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x53d8;&#x4e3a",{"_index":5070,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{}}}],["x53d8;&#x4e3a;&#x4e86",{"_index":4433,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53d8;&#x53c2;&#x672c;&#x8d28;&#x4e0a;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x5207;&#x7247;&#xff0c;&#x53ea;&#x80fd;&#x63a5;&#x53d7;&#x4e00;&#x5230;&#x591a;&#x4e2a;&#x540c;&#x7c7b;&#x578b;&#x53c2;&#x6570;&#xff0c;&#x800c;&#x4e14;&#x5fc5;&#x987b;&#x5728;&#x53c2;&#x6570;&#x5217;&#x8868;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a",{"_index":2517,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x53d8;&#x6210;&#x4e86;&#x5c0f;&#x5199;&#x7684",{"_index":1454,"title":{},"body":{"basic/json.html#序列化":{}}}],["x53d8;&#x91cf",{"_index":1308,"title":{"basic/var.html#变量":{}},"body":{"basic/pointer.html#指向指针的指针":{}}}],["x53d8;&#x91cf;&#x3001",{"_index":4435,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53d8;&#x91cf;&#x4e2d;&#x7684;&#x8bfb;&#x9501;&#xff0c",{"_index":4879,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53d8;&#x91cf;&#x540d",{"_index":458,"title":{},"body":{"basic/array.html#数组":{},"basic/oop.html#方法":{},"basic/map.html#map":{},"basic/slice.html#slice":{}}}],["x53d8;&#x91cf;&#x540d;&#x5b57",{"_index":1811,"title":{},"body":{"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{}}}],["x53d8;&#x91cf;&#x6210;&#x4e3a;&#x4e00;&#x4e2a;&#x4fe1;&#x53f7;&#xff0c",{"_index":4439,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53d8;&#x91cf;&#x7684",{"_index":4872,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x53d8;&#x91cf;&#x7684;&#x503c;&#x3002",{"_index":5158,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x53d8;&#x91cf;&#x7684;&#x503c;&#x52a0",{"_index":4419,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53d8;&#x91cf;&#x7684;&#x503c;&#x662f;&#x5426;&#x7b49;&#x4e8e",{"_index":4889,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53d8;&#x91cf;&#x7684;&#x503c;&#xff0c;&#x5e76;&#x5224;&#x65ad;&#x5b83;&#x662f;&#x5426;&#x7b49;&#x4e8",{"_index":5157,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x53d8;&#x91cf;&#x7684;&#x542b;&#x4e49;&#x662f;&#x5bf9;&#x5e94;&#x7684;&#x3002",{"_index":4874,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53d8;&#x91cf;&#x8d4b;&#x503c;&#x5373;&#x53ef;&#x3002",{"_index":3342,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x53d8;&#x91cf;&#xff0c",{"_index":306,"title":{},"body":{"index.html#类型断言":{}}}],["x53d8;&#x91cf;&#xff0c;&#x6bd4;&#x5982",{"_index":2003,"title":{},"body":{"basic/map.html#map":{}}}],["x53e6;&#x4e00;&#x65b9;&#x9762;&#xff0c;&#x4f60;&#x73b0;&#x5728;&#x662f;&#x53e6;&#x4e00;&#x4e2a",{"_index":4894,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53e6;&#x4e00;&#x65b9;&#x9762;&#xff0c;&#x6211;&#x4eec;&#x5728",{"_index":3868,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53e6;&#x5916;&#xff0c;&#x5982;&#x679c;&#x952e;&#x7684;&#x7c7b;&#x578b;&#x662f;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x7684;&#xff0c;&#x90a3;&#x4e48;&#x952e;&#x503c;&#x7684;&#x5b9e;&#x9645;&#x7c7b;&#x578b;&#x4e5f;&#x4e0d;&#x80fd;&#x662f;&#x4e0a;&#x8ff0;&#x4e09;&#x79cd;&#x7c7b;&#x578b;&#xff0c;&#x5426;&#x5219;&#x5728;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x8fc7;&#x7a0b;&#x4e2d;&#x4f1a;&#x5f15;&#x53d1",{"_index":1983,"title":{},"body":{"basic/map.html#map":{}}}],["x53e6;&#x5916;&#xff0c;&#x7c7b;&#x578b;&#x95f4;&#x7684;&#x7ec4;&#x5408;&#x4e5f;&#x662f;&#x7075;&#x6d3b;&#x7684;&#xff0c;&#x6211;&#x4eec;&#x603b;&#x662f;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x65b9;&#x5f0f;&#x628a;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x7684;&#x5c5e;&#x6027;&#x548c;&#x80fd;&#x529b;&#x201c;&#x5ac1;&#x63a5;&#x201d;&#x7ed9;&#x53e6;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x3002",{"_index":1178,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x53ea;&#x4e0d;&#x8fc7;&#xff0c",{"_index":3932,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53ea;&#x53d1;&#x9001;&#x6216;&#x8005;&#x53ea;&#x63a5;&#x6536",{"_index":2712,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53ea;&#x53ef;&#x80fd;&#x662f",{"_index":5097,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x53ea;&#x58f0;&#x660e;&#x4e00;&#x4e2a;&#x6210;&#x5458;&#x5bf9;&#x5e94;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x800c;&#x5b9a;&#x4e49;&#x6210;&#x5458;&#x7684;&#x540d;&#x5b57;&#xff1b;&#x8fd9;&#x7c7b;&#x6210;&#x5458;&#x5c31;&#x53eb;&#x533f;&#x540d;&#x6210;&#x5458",{"_index":1770,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x53ea;&#x6267;&#x884c;&#x540d;&#x79f0;&#x4e3a;&#x7a7a;&#x7684;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x4e0d;&#x6267;&#x884c;&#x4efb;&#x4f55;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002",{"_index":3260,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x53ea;&#x6709;&#x5728;&#x6761;&#x4ef6;&#x6ee1;&#x8db3;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#x624d;&#x4f1a;&#x8fdb;&#x884c;&#x503c;&#x7684;&#x4ea4;&#x6362",{"_index":4988,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x53ea;&#x6709;&#x5728;&#x6d89;&#x53ca;&#x5230;&#x52a0;&#x9501;&#xff0c",{"_index":4562,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x53ea;&#x6709;&#x5f53;&#x4e00;&#x4e2a;&#x952e;&#x503c;&#x5bf9;&#x5e94;&#x8be5;&#x88ab;&#x5220;&#x9664;&#xff0c;&#x4f46;&#x5374;&#x4ecd;&#x7136;&#x5b58;&#x5728;&#x4e8e;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x624d;&#x4f1a;&#x88ab;&#x7528;&#x6807;&#x8bb0;&#x4e3a;&#x201c;&#x5df2;&#x5220;&#x9664;&#x201d;&#x7684;&#x65b9;&#x5f0f;&#x8fdb;&#x884c;&#x903b;&#x8f91;&#x5220;&#x9664;&#xff0c;&#x800c;&#x4e0d;&#x4f1a;&#x76f4;&#x63a5;&#x88ab;&#x7269;&#x7406;&#x5220;&#x9664;&#x3002",{"_index":5355,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ea;&#x6709;&#x7c7b;&#x578b",{"_index":1132,"title":{},"body":{"basic/oop.html#方法":{}}}],["x53ea;&#x6709;&#x8fd9;&#x6837;&#xff0c;go",{"_index":4397,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ea;&#x7ba1;&#x7406;&#x5185;&#x5b58;&#xff0c;&#x4e0d;&#x5173;&#x5fc3;&#x5bf9;&#x8c61;&#x7684;&#x72b6;&#x6001;&#xff0c;&#x5e76;&#x4e14;&#x5b83;&#x4e0d;&#x4f1a;&#x4e3b;&#x52a8;&#x56de;&#x6536;&#x5185;&#x5b58;&#xff0c;&#x9700;&#x8981",{"_index":389,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x53ea;&#x80fd;&#x5728;&#x5171;&#x4eab;&#x53d8;&#x91cf;&#x6ca1;&#x6709;&#x4efb;&#x4f55;&#x5199;&#x5165;&#x64cd;&#x4f5c;&#x65f6;&#x53ef;&#x7528",{"_index":4805,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x53ea;&#x80fd;&#x5728;&#x51fd;&#x6570;&#x5185;&#x4f7f;&#x7528;&#xff0c;&#x4e0d;&#x80fd;&#x63d0;&#x4f9b;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":1825,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x53ea;&#x80fd;&#x7528;&#x4e8e;&#x5185;&#x5efa;&#x7c7b;&#x578b;&#xff08",{"_index":232,"title":{},"body":{"index.html#make-和-new":{}}}],["x53ea;&#x80fd;&#x88ab",{"_index":3028,"title":{},"body":{"commands/build.html#工具":{}}}],["x53ea;&#x8981",{"_index":4343,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ea;&#x8981;&#x4e3a",{"_index":3341,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x53ea;&#x8981;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x62ff;&#x5230;&#x4e86;&#x88ab;&#x64cd;&#x4f5c;&#x503c;&#x7684;&#x6307;&#x9488;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x5b9a;&#x4f4d;&#x5230;&#x5b58;&#x50a8;&#x8be5;&#x503c;&#x7684;&#x5185;&#x5b58;&#x5730;&#x5740;&#x3002;&#x53ea;&#x6709;&#x8fd9;&#x6837;&#xff0c;&#x5b83;&#x4eec;&#x624d;&#x80fd;&#x591f;&#x901a;&#x8fc7;&#x5e95;&#x5c42;&#x7684;&#x6307;&#x4ee4;&#xff0c;&#x51c6;&#x786e;&#x5730;&#x64cd;&#x4f5c;&#x8fd9;&#x4e2a;&#x5185",{"_index":4982,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x53ea;&#x8981;&#x540d;&#x79f0;&#x76f8;&#x540c;&#xff0c;&#x65e0;&#x8bba;&#x8fd9;&#x4e24;&#x4e2a;&#x65b9;&#x6cd5;&#x7684;&#x7b7e;&#x540d;&#x662f;&#x5426;&#x4e00;&#x81f4;&#xff0c;&#x88ab;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x7684;&#x65b9;&#x6cd5;&#x90fd;&#x4f1a;&#x201c;&#x5c4f;&#x853d;&#x201d;&#x6389;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x540c;&#x540d;&#x65b9;&#x6cd5",{"_index":1788,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x53ea;&#x8981;&#x6211;&#x4eec;&#x5728;&#x4e25;&#x683c;&#x9075;&#x5faa;&#x4e0a;&#x8ff0;&#x89c4;&#x5219;&#x7684;&#x524d;&#x63d0;&#x4e0b;&#xff0c;&#x5206;&#x6279;&#x5730;&#x542f;&#x7528;&#x6267;&#x884c;&#x5b50;&#x4efb;&#x52a1;&#x7684",{"_index":5136,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x53ea;&#x8981;&#x7b49;&#x5f85;&#x901a;&#x77e5;&#x5c31;&#x597d;&#x4e86;&#x3002",{"_index":4861,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53ea;&#x8981;&#x8c03;&#x7528;&#x4e86",{"_index":3910,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53ea;&#x8bfb;&#x5b57;&#x5178",{"_index":5329,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#x6ca1;&#x6709;&#xff0c;&#x4f46;&#x810f",{"_index":5348,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ea;&#x8bfb;&#x5b57;&#x5178;&#x867d;&#x7136;&#x4e0d;&#x4f1a;&#x589e;&#x51cf;&#x5176;&#x4e2d;&#x7684;&#x952e;&#xff0c;&#x4f46;&#x5374;&#x5141;&#x8bb8;&#x53d8;&#x66f4;&#x5176;&#x4e2d;&#x7684;&#x952e;&#x6240;&#x5bf9;&#x5e94;&#x7684;&#x503c",{"_index":5330,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ea;&#x9700;&#x8981;&#x786e;&#x4fdd;&#x5b9e;&#x9a8c;&#x76ee;&#x5f55;&#x4e0d;&#x5728",{"_index":2368,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x53eb",{"_index":4869,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53eb;&#x4f5c;&#x65b9;&#x6cd5;&#x7684;&#x63a5;&#x6536;&#x5668;&#xff0c;&#x7c7b;&#x4f3c",{"_index":1121,"title":{},"body":{"basic/oop.html#方法":{}}}],["x53eb;&#x505a",{"_index":4258,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":752,"title":{},"body":{"basic/interface.html#接口":{},"basic/map.html#map":{}}}],["x53ef;&#x4ee5;&#x4fdd;&#x8bc1;&#x8ba9;&#x4f60;&#x66f4;&#x4efb;&#x4f55;&#x60c5;&#x51b5;&#x4e0b;&#xff0c",{"_index":2555,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x53ef;&#x4ee5;&#x50cf;&#x8fd9;&#x6837;&#x62ff;&#x5230;&#x4e00;&#x4e2a;&#x5305;&#x88c5;&#x4e86;&#x6807;&#x51c6;&#x9519;&#x8bef;&#x8f93;&#x51fa;&#x7684",{"_index":4121,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x53ef;&#x4ee5;&#x5148;&#x4f7f;&#x7528",{"_index":2012,"title":{},"body":{"basic/map.html#map":{}}}],["x53ef;&#x4ee5;&#x540c;&#x65f6;&#x8fd0;&#x884c;&#x3002",{"_index":4300,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ef;&#x4ee5;&#x540c;&#x65f6;&#x8fd0;&#x884c;&#x3002;&#xff08;&#x524d;&#x63d0;&#xff1a;&#x7cfb;&#x7edf;&#x7684;&#x7269;&#x7406",{"_index":4526,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x53ef;&#x4ee5;&#x5b58;&#x50a8;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#xff0c;&#x90a3;&#x4e48;&#x600e;&#x4e48;&#x5224;&#x65ad;&#x5b58;&#x50a8;&#x4e86;&#x4ec0;&#x4e48;&#x7c7b;&#x578b;&#xff1f",{"_index":742,"title":{},"body":{"basic/interface.html#接口":{}}}],["x53ef;&#x4ee5;&#x5f88;&#x5bb9;&#x6613;&#x7684;&#x628a",{"_index":1964,"title":{},"body":{"basic/map.html#map":{}}}],["x53ef;&#x4ee5;&#x627f;&#x8f7d;&#x82e5;&#x5e72;&#x4e2a",{"_index":4291,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x53ef;&#x4ee5;&#x628a;&#x65e0;&#x7c7b;&#x578b;&#x7684;&#x5e38;&#x91cf",{"_index":250,"title":{},"body":{"index.html#类型转换":{}}}],["x53ef;&#x4ee5;&#x643a;&#x5e26;&#x5176;&#x7236;&#x503c;&#x7684;&#x5c5e;&#x6027;&#x548c;&#x6570;&#x636e;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x54cd;&#x5e94;&#x901a;&#x8fc7;&#x5176;&#x7236;&#x503c;&#x4f20;&#x8fbe;&#x7684;&#x4fe1;&#x53f7;&#x3002",{"_index":5174,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x53ef;&#x4ee5;&#x662f;&#x4efb;&#x610f;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x9762;&#x503c;&#xff0c;&#x4f46;&#x662f;&#x901a;&#x5e38;&#x662f;&#x4e00;&#x7cfb;&#x5217;&#x7528;&#x7a7a;&#x683c;&#x5206;&#x9694;&#x7684",{"_index":1459,"title":{},"body":{"basic/json.html#序列化":{}}}],["x53ef;&#x4ee5;&#x663e;&#x8457;&#x5730;&#x51cf;&#x5c11;&#x9501;&#x7684;&#x4e89;&#x7528;&#x3002",{"_index":5302,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ef;&#x4ee5;&#x6765;&#x89e3;&#x9501;&#xff0c;&#x90a3;&#x4e07;&#x4e00;&#x89e3;&#x9501;&#x91cd;&#x590d;&#x4e86;&#x600e;&#x4e48;&#x529e;&#xff1f",{"_index":4923,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53ef;&#x4ee5;&#x7701;&#x7565;&#x5176;&#x4e2d;&#x7684;&#x4e00;&#x4e2a;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x7c7b;&#x578b;&#xff0c;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8868;&#x8fbe;&#x5f0f;&#x63a8;&#x65ad;&#x51fa;&#x7c7b;&#x578b;&#xff0c",{"_index":1812,"title":{},"body":{"basic/var.html#变量":{}}}],["x53ef;&#x4ee5;&#x7701;&#x7565;&#x7684;&#x5199;&#x6210",{"_index":1591,"title":{},"body":{"basic/package.html#点操作":{}}}],["x53ef;&#x4ee5;&#x770b;&#x51fa;&#xff0c;&#x5728;&#x8bfb;&#x64cd;&#x4f5c;&#x6709;&#x5f88;&#x591a;&#x4f46;&#x5199;&#x64cd;&#x4f5c;&#x5374;&#x5f88;&#x5c11;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x7684;&#x6027;&#x80fd;&#x5f80;&#x5f80;&#x4f1a;&#x66f4;&#x597d;&#x3002;&#x5728;&#x51e0;&#x4e2a;&#x5199;&#x64cd;&#x4f5c;&#x5f53;&#x4e2d;&#xff0c;&#x65b0;&#x589e;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x64cd;&#x4f5c;&#x5bf9;&#x5e76;&#x53d1;&#x5b89",{"_index":5368,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x53ef;&#x4ee5;&#x770b;&#x5230",{"_index":5287,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x53ef;&#x4ee5;&#x786e;&#x4fdd;&#x5728",{"_index":1649,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x53ef;&#x4ee5;&#x7b80;&#x5355;&#x5730;&#x8ba4;&#x4e3a;&#x65b0;&#x5207;&#x7247;&#x7684;&#x5bb9;&#x91cf;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x65b0;&#x5bb9;&#x91cf;&#xff09;&#x5c06;&#x4f1a;&#x662f",{"_index":2093,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x53ef;&#x4ee5;&#x7b80;&#x5355;&#x7406;&#x89e3;&#x4e3a;&#x534f;&#x7a0b;&#xff0c;&#x5f00;&#x9500;&#x8f83;&#x4f4",{"_index":4250,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ef;&#x4ee5;&#x7ed9;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x5b9a;&#x4e49;&#x65b9;&#x6cd5",{"_index":1127,"title":{},"body":{"basic/oop.html#方法":{}}}],["x53ef;&#x4ee5;&#x83b7;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x957f;&#x5ea6;&#x3002",{"_index":3812,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53ef;&#x4ee5;&#x88ab;&#x7edf",{"_index":4843,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x53ef;&#x4ee5;&#x8bbe;&#x7f6e;&#x5f53;&#x5176;&#x5b83;&#x7684;&#x64cd;&#x4f5c",{"_index":2768,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53ef;&#x4ee5;&#x8de8",{"_index":4546,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x53ef;&#x4ee5;&#x8de8;&#x7ebf;&#x7a0b;&#x8c03;&#x5ea6;&#x3002;&#x6240;&#x4ee5",{"_index":4248,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x53ef;&#x4ee5;&#x9002;&#x7528;&#x4e8e;&#x6574;&#x6570;&#x3001;&#x6d6e;&#x70b9;&#x6570;&#x548c;&#x590d;&#x6570;&#x3002",{"_index":1873,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":2348,"title":{},"body":{"basic/env_config.html#Go-Module":{},"basic/basic_data.html#字符串":{}}}],["x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":3280,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x53ef;&#x4ee5;&#x907f;&#x514d;&#x8fdb;&#x884c;&#x6210;&#x672c;&#x8f83",{"_index":1332,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x53ef;&#x53d8;&#x53c2;&#x6570",{"_index":2516,"title":{"basic/function.html#可变参数":{}},"body":{}}],["x53ef;&#x5c06;&#x5185;&#x5bb9;&#x91cd;&#x7f6e;&#xff0c;&#x53ef;&#x91cd;&#x7528;&#x503c;&#x3002",{"_index":3880,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x53ef;&#x5e94;&#x7528;&#x4e8e;file&#x503c;&#x7684;&#x64cd;&#x4f5c;&#x6a21;&#x5f0f",{"_index":4139,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#x3002",{"_index":2924,"title":{},"body":{"commands/build.html#工具":{}}}],["x53ef;&#x662f;&#x65e0;&#x6cd5;&#x6062;&#x590d;&#x7684;&#x3002",{"_index":4925,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x53ef;&#x80fd;&#x4f1a;&#x627e;&#x4e0d;&#x5230;&#x547d;&#x4ee4;&#x3002",{"_index":3646,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x53ef;&#x8d4b;&#x503c;&#x6027",{"_index":1852,"title":{},"body":{"basic/var.html#赋值":{}}}],["x53ef;&#x8fd0;&#x884c",{"_index":2762,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x53ef;&#x8fd0;&#x884c;&#x3002",{"_index":558,"title":{},"body":{"basic/flow.html#select":{}}}],["x53ef;&#x8fd0;&#x884c;&#xff0c;&#x5b83;&#x5c06;&#x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x6709",{"_index":557,"title":{},"body":{"basic/flow.html#select":{},"concurrent/channel.html#channel":{}}}],["x53ef;&#x9009",{"_index":560,"title":{},"body":{"basic/flow.html#select":{},"concurrent/channel.html#channel":{}}}],["x5404;&#x81ea;&#x90fd;&#x6709;&#x4e00;&#x4e2a;&#x533f;&#x540d;&#x6210;&#x5458;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8bf4",{"_index":1776,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5408;&#x4f5c;&#x505c;&#x4e0b;&#x6765;&#xff0c;&#x8fd9;&#x4f1a;&#x9020;&#x6210;&#x8f83;&#x957f;&#x65f6",{"_index":4567,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5408;&#x5e76;&#x6784;&#x5efa;&#x66f4;&#x5927;&#x7684;&#x5185;&#x5b58;&#x5757;&#xff0c;&#x51cf;&#x5c11;&#x788e;&#x7247;&#x3002",{"_index":411,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x540c;&#x4e00;&#x65f6;&#x523b;&#x90fd;&#x8fd0;&#x884c;&#x4efb;&#x52a1;&#xff0c;&#x4e92;&#x4e0d;&#x62a2;&#x5360;&#x81ea;&#x5df1;&#x6240;&#x5728;&#x7684",{"_index":4226,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x540c;&#x6216;&#x8005;&#x80fd;&#x591f;&#x90fd;&#x7edf;&#x4e00;&#x5230",{"_index":530,"title":{},"body":{"basic/flow.html#switch":{}}}],["x540c;&#x65f6",{"_index":1779,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x540c;&#x65f6;&#x5b83;&#x8fd8;&#x4f1a;&#x68c0;&#x6d4b;&#x6bcf;&#x4e2a",{"_index":4581,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x540c;&#x65f6;&#x6ee1;&#x8db3;&#x6761;&#x4ef6;&#xff0c",{"_index":555,"title":{},"body":{"basic/flow.html#select":{},"concurrent/channel.html#channel":{}}}],["x540c;&#x65f6;&#x8fd4;&#x56de;&#x7f13;&#x51b2;&#x533a;&#x5df2;&#x6ee1;&#x7684;&#x9519;&#x8bef;&#x3002",{"_index":3575,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x540c;&#x65f6;&#xff0c;&#x7c7b;&#x578b;&#x7ec4;&#x5408;&#x4e5f;&#x662f;&#x975e;&#x4fb5;&#x5165;&#x5f0f;&#x7684;&#xff0c;&#x5b83;&#x4e0d;&#x4f1a;&#x7834;&#x574f;&#x7c7b;&#x578b;&#x7684;&#x5c01;&#x88c5;&#x6216;&#x52a0;&#x91cd;&#x7c7b;&#x578b;&#x4e4b;&#x95f4;&#x7684;&#x8026;&#x5408;&#x3002;&#x6211;&#x4eec;&#x8981;&#x505a;&#x7684;&#x53ea;&#x662f;&#x628a;&#x7c7b;&#x578b;&#x5f53;&#x505a;&#x5b57;&#x6bb5;&#x5d4c;&#x5165;&#x8fdb;&#x6765;&#xff0c;&#x7136;&#x540e;&#x5750",{"_index":1176,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x540c;&#x6b65;&#x548c;&#x9501",{"_index":4767,"title":{"concurrent/sync_lock.html#同步和锁":{}},"body":{}}],["x540c;&#x6b65;&#x9501",{"_index":4777,"title":{"concurrent/sync_lock.html#同步锁":{}},"body":{}}],["x540d;&#x5b57;&#x7684;&#x8def;&#x5f84;&#x6bb5;&#x7684;&#x5305;&#x5bfc;&#x5165;&#x8def;&#x5f84;&#x505a;&#x4e86;&#x7279;&#x6b8a;&#x5904;&#x7406;&#x3002;&#x8fd9;&#x79cd;&#x5305;&#x53eb",{"_index":3024,"title":{},"body":{"commands/build.html#工具":{}}}],["x540d;&#x8fd4;&#x56de;&#x503c;&#xff08;&#x4e5f;&#x5c31;&#x662f;&#x5bf9;&#x8fd4;&#x56de;&#x503c;&#x547d;&#x540d;&#xff09;&#x4f5c;&#x4e3a;&#x51fd;&#x6570;&#x6700;&#x5916;&#x5c42;&#x7684;&#x5c40;&#x90e8;&#x53d8;&#x91cf;&#xff0c;&#x88ab;&#x5b58;&#x50a8;&#x5728;&#x76f8;&#x540c;&#x7684;&#x8bcd;&#x6cd5;&#x5757;&#x4e2d;&#x3002",{"_index":2498,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x540e;&#x4e24;&#x8005;&#x53ea;&#x662f;&#x88ab;&#x7b80;&#x5355;&#x5730;&#x5b58;&#x50a8;&#x5728;&#x524d;&#x8005;&#x7684;&#x76f8;&#x5e94;&#x5b57;&#x6bb5;&#x4e2d;&#x800c;&#x5df2;&#x3002",{"_index":5242,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x540e;&#x5f97;&#x5230;&#x7684",{"_index":627,"title":{},"body":{"basic/flow.html#for":{}}}],["x540e;&#x6253;&#x5370",{"_index":4812,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x540e;&#x6267;&#x884c;&#x5b8c;&#x5f80;&#x5f80;&#x662f;&#x4e0d;&#x53ef;&#x9884;&#x77e5;&#x7684;&#xff0c;&#x9664;&#x975e;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x4e86;&#x67d0;&#x79cd",{"_index":4370,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x540e;&#x63a5;&#x6536;&#x4efb;&#x610f;&#x4e2a;&#x6570;&#x7684;&#x540e;&#x7eed;&#x53c2;&#x6570;&#x3002",{"_index":2520,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x540e;&#x7684;&#x51fd;&#x6570;&#x624d;&#x4f1a;&#x88ab;&#x6267;&#x884c;&#x3002",{"_index":2553,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x540e;&#xff0c;&#x8fdb;&#x5165",{"_index":4534,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5411;&#x5207;&#x7247;&#x8ffd;&#x52a0;&#x65b0;&#x5143;&#x7d20",{"_index":2073,"title":{},"body":{"basic/slice.html#append-和-copy":{}}}],["x5411;&#x53e6;&#x4e00;&#x4e2a",{"_index":2635,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5411;&#x957f;&#x65f6;&#x95f4;&#x8fd0;&#x884c;&#x7684",{"_index":4597,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5417",{"_index":5064,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5417;&#xff1f",{"_index":4921,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5426;&#x5219;&#xff0c;&#x5b83;&#x624d;&#x4f1a;&#x5728;&#x9501;&#x7684;&#x4fdd;&#x62a4;&#x4e0b;&#x628a;&#x952e;&#x503c;&#x5bf9;&#x5b58;&#x50a8;&#x5230;&#x810f;&#x5b57;&#x5178;&#x4e2d;&#x3002;&#x8fd9;&#x4e2a;&#x65f6;&#x5019;&#xff0c;&#x8be5;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x201c;&#x5df2;&#x5220;&#x9664;&#x201d;&#x6807;&#x8bb0;&#x4f1a;&#x88ab;&#x62b9;&#x53bb;&#x3002",{"_index":5354,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x542f;&#x52a8;&#x5f00;&#x53d1;&#x670d;&#x52a1;&#xff0c;&#x8bbf;&#x95e",{"_index":3651,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x542f;&#x52a8;&#x7684;&#x65f6;&#x5019;&#x901a;&#x8fc7",{"_index":876,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x5462;&#xff1f",{"_index":4975,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5473;&#x7740",{"_index":3366,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x547d;&#x4ee4",{"_index":2915,"title":{"commands/build.html#命令":{}},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x4e0b;&#x8f7d;&#x4e00;&#x4e2a;&#x5305;&#x3002;&#x5982",{"_index":2919,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x4e2d;&#x96c6;&#x6210;&#x4e86;&#x6d4b;&#x8bd5;&#x8986;&#x76d6;&#x7387;&#x5de5;&#x5177;&#x3002",{"_index":3192,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["x547d;&#x4ee4;&#x4f1a",{"_index":3235,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x547d;&#x4ee4;&#x4f1a;&#x591a;&#x6b21;&#x8fd0;&#x884c;&#x57fa;&#x51c6;&#x51fd;&#x6570;&#x4ee5;&#x8ba1;&#x7b97;&#x4e00;&#x4e2a;&#x5e73;&#x5747;&#x7684;&#x6267;&#x884c;&#x65f6;&#x95f4;&#x3002",{"_index":3162,"title":{},"body":{"basic/test.html#测试":{}}}],["x547d;&#x4ee4;&#x4f1a;&#x8c03;&#x7528;&#x8fd9;&#x4e9b;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x5e76;&#x62a5;&#x544a;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c;&#x662f",{"_index":3160,"title":{},"body":{"basic/test.html#测试":{}}}],["x547d;&#x4ee4;&#x53ef;&#x4ee5;&#x7528;&#x6765;&#x5206;&#x6790;&#x4e0a;&#x9762;&#x7684;&#x547d;&#x4ee4;&#x751f;&#x6210;&#x7684;&#x6570;&#x636e;&#x3002",{"_index":3218,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x547d;&#x4ee4;&#x540e;&#x9762;&#x52a0;&#x4e0a",{"_index":5373,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x547d;&#x4ee4;&#x548c",{"_index":2964,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x5728;&#x5f00;&#x59cb;&#x8fd0;&#x884c;&#x65f6;&#xff0c;&#x4f1a;&#x5148;&#x505a;&#x4e00;&#x4e9b;&#x51c6;&#x5907;&#x5de5;&#x4f5c;&#xff0c;&#x6bd4;&#x5982;&#xff0c;&#x786e;&#x5b9a;&#x5185;&#x90e8;&#x9700;&#x8981;&#x7528;&#x5230;&#x7684;&#x547d;&#x4ee4;&#xff0c;&#x68c0;&#x67e5;&#x6211;&#x4eec;&#x6307;&#x5b9a;&#x7684;&#x4ee3;&#x7801;&#x5305;&#x6216;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x7684;&#x6709;&#x6548;&#x6027;&#xff0c",{"_index":3229,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x547d;&#x4ee4;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x53c2;&#x6570;&#x6307;&#x5b9a;&#x5305;&#x90a3;&#x4e48;&#x5c06;&#x9ed8;&#x8ba4;&#x91c7;&#x7528;&#x5f53;&#x524d;&#x76ee;&#x5f55;&#x5bf9;&#x5e94;&#x7684;&#x5305;&#x3002",{"_index":3188,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x547d;&#x4ee4;&#x5b9e;&#x9645;&#x4e0a;&#x662f;&#x7ed3;&#x5408;&#x4e86;&#x6784;&#x5efa;&#x548c;&#x8fd0;&#x884c;&#x7684;&#x4e24;&#x4e2a;&#x6b65;&#x9aa4;&#x3002",{"_index":2963,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x5c31;&#x4f1a;&#x62a5;&#x544a;&#x9519;&#x8bef;&#x201c;illeg",{"_index":325,"title":{},"body":{"index.html#编码":{}}}],["x547d;&#x4ee4;&#x5c31;&#x4f1a;&#x9488;&#x5bf9;&#x6bcf;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#xff0c;&#x4f9d;&#x6b21;&#x5730;&#x8fdb;&#x884c;&#x6784;&#x5efa;&#x3001;&#x6267;&#x884c;&#x5305;&#x4e2d;&#x7b26;&#x5408;&#x8981;&#x6c42;&#x7684;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x6e05;&#x7406;&#x4e34;&#x65f6;&#x6587;&#x4ef6;&#xff0c",{"_index":3232,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x547d;&#x4ee4;&#x5e76;&#x53d1;&#x5730;&#x6267;&#x884c;&#xff0c;&#x800c;&#x5e76;&#x53d1;&#x6267;&#x884c;&#x7684;&#x6700;&#x5927;&#x6570;&#x91cf;&#x6b63;&#x662f",{"_index":3303,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x547d;&#x4ee4;&#x6267;&#x884c;&#x7684;&#x4e3b;&#x8981;&#x6d4b;&#x8bd5;&#x6d41;&#x7a0b",{"_index":3228,"title":{"basic/test.html#go-test-命令执行的主要测试流程":{}},"body":{}}],["x547d;&#x4ee4;&#x65f6;&#xff0c;&#x52a0;&#x5165;&#x6807;&#x8bb0",{"_index":3283,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x6765;&#x67e5;&#x770b;&#x7f13;&#x5b58;&#x76ee;&#x5f55;&#x7684;&#x8def;&#x5f84;&#x3002",{"_index":3244,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x67e5;&#x770b",{"_index":3043,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x67e5;&#x8be2;&#x53ef;&#x7528;&#x5305;&#x7684;&#x4fe1;&#x606f;&#x3002;&#x5982",{"_index":3035,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x6d4b;&#x8bd5;&#x4ee3;&#x7801;&#xff0c;&#x5305;&#x76ee;&#x5f55;&#x5185;&#xff0c;&#x6240;&#x6709;&#x4ee5",{"_index":3153,"title":{},"body":{"basic/test.html#测试":{}}}],["x547d;&#x4ee4;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#xff0c;&#x5982;&#x679c;&#x4e00;&#x4e2a;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x58f0;&#x660e;&#x5c5e;&#x4e8",{"_index":187,"title":{},"body":{"index.html#三种文件":{}}}],["x547d;&#x4ee4;&#x72ec;&#x7acb;&#x7f16;&#x8bd1;&#x3002;(&#x4ee5",{"_index":1626,"title":{},"body":{"basic/package.html#包声明":{}}}],["x547d;&#x4ee4;&#x7684;&#x65f6;&#x5019;&#x4e0d;&#x52a0",{"_index":3262,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x7684;&#x7f13;&#x5b58;&#x884c;&#x4e3a;&#x3002;&#x6bd4;&#x5982;&#xff0c;&#x8bbe;&#x7f6e;&#x503c;&#x4e3a",{"_index":3248,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x76f4;&#x63a5;&#x628a;&#x4e4b;&#x524d;&#x7f13;&#x5b58;&#x6d4b;&#x8bd5;&#x6210;&#x529f;&#x7684;&#x7ed3;&#x679c;&#x6253;&#x5370;&#x51fa;&#x6765;&#x4e86;&#x3002",{"_index":3242,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x76f8;&#x4f3c;&#xff0c;&#x4e0d;&#x540c;&#x7684;&#x662f",{"_index":2965,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x7ed5",{"_index":3250,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x547d;&#x4ee4;&#x7f16;&#x8bd1;&#x5b8c;&#x4e4b;&#x540e;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#x3002",{"_index":1623,"title":{},"body":{"basic/package.html#包声明":{}}}],["x547d;&#x4ee4;&#x7f16;&#x8bd1;&#xff0c;&#x547d;&#x4ee4;&#x884c;&#x53c2;&#x6570;&#x6307;&#x5b9a;&#x7684;&#x6bcf;&#x4e2a;&#x5305;&#x3002",{"_index":2931,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x4ee4;&#x901a;&#x5e38;&#x4f1a;&#x7f13;&#x5b58;&#x7a0b;&#x5e8f;&#x6784;&#x5efa;&#x7684;&#x7ed3;&#x679c;&#xff0c;&#x4ee5;&#x4fbf;&#x5728;&#x5c06;&#x6765;&#x7684;&#x6784;&#x5efa;&#x4e2d;&#x91cd;&#x7528;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8fd0;&#x884c",{"_index":3243,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x547d;&#x4ee4;&#xff0c;&#x9a8c;&#x8bc1;&#x662f;&#x5426;&#x5b89;&#x88c5;&#x6210;&#x529f;&#x3002;&#x5426;&#x5219;&#x68c0;&#x67e5;&#x73af;&#x5883;&#x53d8;&#x91cf",{"_index":2316,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x547d;&#x4ee4;&#xff1a",{"_index":2917,"title":{},"body":{"commands/build.html#工具":{}}}],["x547d;&#x540d",{"_index":217,"title":{"index.html#命名":{}},"body":{}}],["x547d;&#x540d;&#x53d8;&#x91cf;&#x7684;&#x8d4b;&#x503c",{"_index":1840,"title":{},"body":{"basic/var.html#赋值":{}}}],["x548c",{"_index":161,"title":{"index.html#make-和-new":{},"basic/slice.html#len-和-cap":{},"basic/slice.html#append-和-copy":{}},"body":{"index.html#Golang-介绍":{},"index.html#os-Args":{},"index.html#make-和-new":{},"index.html#编码":{},"basic/array.html#二维数组":{},"basic/flow.html#for":{},"basic/interface.html#接口":{},"basic/oop.html#String-方法":{},"basic/pointer.html#为什么需要指针":{},"basic/pointer.html#哪些值是不可寻址的":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/operator.html#算术运算符":{},"basic/operator.html#关系运算符":{},"basic/map.html#map":{},"basic/scope.html#作用域":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html#安装":{},"basic/env_config.html#Go-Module":{},"packages/container.html#container-包":{},"basic/function.html#错误":{},"concurrent/channel.html#channel":{},"basic/test.html#测试函数":{},"basic/test.html#性能测试函数中的计时器":{},"basic/test.html#性能分析":{},"packages/io.html#io包中的接口和工具":{},"packages/io.html#bufio包中的数据类型":{},"theme/theme-usage.html#Sidebar":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#布尔类型":{},"basic/basic_data.html#字符串":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-atomic-Value":{},"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x548c;&#x5176;&#x4ed6;&#x57fa;&#x672c;&#x578b;&#x522b;&#x4e0d;&#x540c;&#xff0c;&#x5b83;&#x4e0d;&#x662f",{"_index":1966,"title":{},"body":{"basic/map.html#map":{}}}],["x548c;&#x5176;&#x4ed6;&#x7684;&#x4e00;&#x4e9b;&#x914d;&#x7f6e;&#x3002",{"_index":3660,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x548c;&#x51fd;&#x6570;&#xff09;&#xff1a",{"_index":1821,"title":{},"body":{"basic/var.html#变量":{}}}],["x548c;&#x521a;&#x521a;&#x58f0;&#x660e;&#x7684;&#x53d8;&#x91cf",{"_index":4412,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x548c;&#x6307;&#x5411;&#x4ed6;&#x4eec;&#x7684;&#x6307;&#x9488",{"_index":1133,"title":{},"body":{"basic/oop.html#方法":{}}}],["x548c;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x5b83;&#x4e5f;&#x53ea;&#x9488;&#x5bf9;&#x5c11;&#x6570;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x63d0;&#x4f9b;&#x4e86;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x3002;&#x8fd9;&#x4e9b;&#x51fd;&#x6570;&#x90fd;&#x5b58;&#x5728;&#x4e8e;&#x6807;&#x51c6;&#x5e93;&#x4ee3",{"_index":4960,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x54ea;&#x4e9b;&#x503c;&#x662f;&#x4e0d;&#x53ef;&#x5bfb;&#x5740;&#x7684",{"_index":1372,"title":{"basic/pointer.html#哪些值是不可寻址的":{}},"body":{}}],["x5524;&#x9192;&#x7684",{"_index":4954,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x56db;&#x4e2a;&#x7528;&#x4e8e;&#x7e41;&#x884d",{"_index":5190,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x56de;&#x6536",{"_index":424,"title":{"advance/mm.html#回收":{}},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x56de;&#x6536;&#x5bf9;&#x8c61;&#x5185;&#x5b58;&#x65f6;&#xff0c;&#x5c06;&#x5c0f;&#x5757;&#x5185;&#x5b58;&#x8fd8;&#x7ed9;&#x539f;&#x94fe;&#x8868;&#xff0c;&#x4ee5;&#x4fbf;&#x590d;&#x7528;&#x3002",{"_index":386,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x56de;&#x6536;&#x9891;&#x7387;&#x76f8;&#x5bf9;&#x8f83;&#x4f4e;&#xff0c;&#x4ee3;&#x4ef7;&#x4e5f;&#x8f83;&#x5927;&#xff0c;&#x56e0;&#x6b64;&#x4f20",{"_index":1330,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x56de;&#x7b54;&#x662f;&#xff1a;&#x4e0d;&#x4f1a;&#x6709;&#x4efb;&#x4f55;&#x5185;&#x5bb9;&#x88ab;&#x6253;&#x5370;&#x51fa;&#x6765;&#x3002",{"_index":4276,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x56de;&#x7ed9;&#x4e86;&#x65b9;&#x6cd5;&#x7684;&#x8c03;&#x7528;&#x65b9;&#x3002",{"_index":3994,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x56e0",{"_index":980,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x56e0;&#x4e3a",{"_index":4454,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html#原子操作":{},"concurrent/sync_lock.html#sync-Map":{}}}],["x56e0;&#x4e3a;&#x5173;&#x95ed;&#x64cd;&#x4f5c;&#x53ea;&#x7528;&#x4e8e;&#x65ad;&#x8a00;&#x4e0d;&#x518d;&#x5411",{"_index":2657,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x56e0;&#x4e3a;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684",{"_index":4911,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x56e0;&#x4e3a;&#x8fd9;&#x6837;&#x7684;&#x5185;&#x90e8;&#x6784;&#x9020;&#xff0c",{"_index":3887,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x56e0;&#x6536;&#x5230;&#x901a;&#x77e5;&#x800c;&#x88ab;&#x5524;&#x9192;&#xff0c;&#x4e5f;&#x4f9d;&#x7136;&#x4f1a;&#x518d;&#x6b21;&#x6267;&#x884c;&#x8fd9;&#x4e2a",{"_index":4930,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x56e0;&#x6536;&#x5230;&#x901a;&#x77e5;&#x800c;&#x88ab;&#x5524;&#x9192;&#xff0c;&#x4f46;&#x5374;&#x53d1;&#x73b0;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#xff0c;&#x4f9d;&#x7136;&#x4e0d;&#x7b26;&#x5408;&#x5b83;&#x7684;&#x8981;&#x6c42;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x5e94;&#x8be5;&#x518d;&#x6b21;&#x8c03;&#x7528",{"_index":4944,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x56e0;&#x6b64;&#x5bf9;&#x4e00;&#x4e2a;&#x53ea;&#x63a5;&#x6536;&#x7684",{"_index":2662,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x56e0;&#x6b64;&#x6210;&#x5458",{"_index":1461,"title":{},"body":{"basic/json.html#序列化":{}}}],["x56e0;&#x6b64;&#xff0c",{"_index":4336,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x56e0;&#x6b64;&#xff0c;&#x5728",{"_index":1572,"title":{},"body":{"basic/package.html#包":{}}}],["x56e0;&#x6b64;&#xff0c;&#x5728;&#x4e0b;&#x5217;&#x60c5;&#x51b5;&#x53ef;&#x4ee5;&#x8003;&#x8651;&#x4f7f;&#x7528;&#x6307;&#x9488;&#xff1a",{"_index":1334,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x56e0;&#x6b64;&#xff0c;&#x6211;&#x4eec;&#x5728;&#x8fd9;&#x91cc;&#x9996;&#x5148;&#x8981;&#x505a;&#x7684;&#x4e00;&#x4ef6;&#x4e8b;&#x5c31;&#x662f;&#xff1a;&#x4e00;&#x5b9a;&#x4e0d;&#x8981;&#x8fdd;&#x53cd;&#x4e0a;&#x8ff0;&#x89c4;&#x5219;&#x3002;&#x6211;&#x4eec;&#x5e94;&#x8be5;&#x5728;&#x6bcf;&#x6b21;&#x64cd;&#x4f5c;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x90fd;&#x53bb;&#x663e;&#x5f0f;&#x5730;&#x68c0;&#x67e5;&#x952e;&#x503c;&#x7684;&#x5b9e;&#x9645",{"_index":5312,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5728",{"_index":253,"title":{},"body":{"index.html#类型转换":{},"advance/gc.html#垃圾回收":{},"basic/error.html#Recover-捕获异常":{},"basic/oop.html#String-方法":{},"basic/constant.html#iota":{},"basic/package.html#import":{},"basic/operator.html#算术运算符":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html#Go-Module":{},"basic/function.html#关键字-defer":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"basic/test.html#测试":{},"basic/test.html#性能分析":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["x5728;&#x4e00;&#x4e2a",{"_index":4164,"title":{},"body":{"packages/os.html#os包中的API":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5728;&#x4e00;&#x4e9b;&#x573a;&#x5408;&#x4e0b;&#x91cc;&#xff0c;&#x6211;&#x4eec;&#x4f7f;&#x7528;&#x901a;&#x9053;&#x7684;&#x65b9;&#x5f0f;&#x770b;&#x8d77;&#x6765;&#x90fd;&#x4f3c;&#x4e4e;&#x6709;&#x4e9b;&#x8e69;&#x811a;&#x3002;&#x6bd4;&#x5982;&#xff1a;&#x58f0;&#x660e;&#x4e00;&#x4e2a;&#x901a;&#x9053;&#xff0c;&#x4f7f;&#x5b83;&#x7684;&#x5bb9;&#x91cf;&#x4e0e;&#x6211;&#x4eec;&#x624b;&#x52a8;&#x542f;&#x7528;&#x7684",{"_index":5027,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5728;&#x4ee3;&#x7801;&#x4e2d;&#x6dfb;&#x52a0;&#x6ce8;&#x91ca;&#xff0c;&#x7528;&#x4e8e;&#x751f;&#x6210;&#x6587;&#x6863;&#x3002;go",{"_index":3001,"title":{},"body":{"commands/build.html#工具":{}}}],["x5728;&#x503c;&#x4e3a",{"_index":1996,"title":{},"body":{"basic/map.html#map":{}}}],["x5728;&#x5185;&#x90e8;&#xff0c",{"_index":3941,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5728;&#x5199",{"_index":192,"title":{},"body":{"index.html#package":{}}}],["x5728;&#x51c6;&#x5907;&#x5de5;&#x4f5c;&#x987a;&#x5229;&#x5b8c;&#x6210;&#x4e4b;&#x540e;&#xff0c;go",{"_index":3231,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x5728;&#x51fd;&#x6570;&#x4f53;&#x4e2d;&#xff0c;&#x51fd;&#x6570;&#x7684;&#x5f62;&#x53c2;&#x4f5c;&#x4e3a;&#x5c40;&#x90e8;&#x53d8;&#x91cf;&#xff0c;&#x88ab;&#x521d;&#x59cb;&#x5316;&#x4e3a;&#x8c03;&#x7528;&#x8005;&#x63d0;&#x4f9b;&#x7684;&#x503c;&#xff08;&#x51fd;&#x6570;&#x8c03;&#x7528;&#x5fc5;&#x987b;&#x6309;&#x7167;&#x58f0;&#x660e;&#x987a;&#x5e8f;&#x4e3a;&#x6240;&#x6709;&#x53c2;&#x6570;&#x63d0;&#x4f9b;&#x5b9e;&#x53c2;&#xff09;&#x3002;&#x51fd;&#x6570;&#x7684;&#x5f62;&#x53c2;&#x548c;&#x6709",{"_index":2497,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x5728;&#x51fd;&#x6570;&#x4f53;&#x5185;&#x6216;&#x4ee3;&#x7801;&#x5757;&#x5185;&#x58f0;&#x660e;&#x7684;&#x53d8;&#x91cf;&#x79f0;&#x4e4b;&#x4e3a;&#x5c40;&#x90e8;&#x53d8;&#x91cf;&#xff0c;&#x5b83;&#x4eec;&#x7684;&#x4f5c;&#x7528;&#x57df;&#x53ea;&#x5728;&#x4ee3;&#x7801;&#x5757;&#x5185;&#xff0c;&#x53c2;&#x6570;&#x548c;&#x8fd4;&#x56de;&#x503c;&#x53d8;&#x91cf;&#x4e5f;&#x662f;&#x5c40;&#x90e8;&#x53d8;&#x91cf;&#x3002",{"_index":2113,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5728;&#x51fd;&#x6570;&#x4f53;&#x5916;&#x58f0;&#x660e;&#x7684;&#x53d8;&#x91cf;&#x79f0;&#x4e4b;&#x4e3a;&#x5168;&#x5c40;&#x53d8;&#x91cf;&#xff0c",{"_index":2116,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5728;&#x51fd;&#x6570;&#x5185;&#x90e8;&#x58f0;&#x660e;&#x7684;&#x540d;&#x5b57;&#xff0c;&#x53ea;&#x80fd;&#x5728;&#x51fd;&#x6570;&#x5185;&#x90e8;&#x8bbf;&#x95e",{"_index":2129,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5728;&#x51fd;&#x6570;&#x5916;&#x90e8;&#xff08;&#x4e5f;&#x5c31;&#x662f;&#x5305;&#x7ea7;&#x8bed;&#x6cd5;&#x57df;&#xff09;&#x58f0;&#x660e;&#x7684;&#x540d;&#x5b57;&#x53ef;&#x4ee5;&#x5728;&#x540c;&#x4e00;&#x4e2a;&#x5305;&#x7684;&#x4efb;&#x4f55;&#x6e90;&#x6587;&#x4ef6;&#x4e2d;&#x8bbf;&#x95e",{"_index":2126,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5728;&#x5207;&#x6362;&#x7a0b;&#x5e8f;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5982;&#x679c;&#x4e0d;&#x4fdd;&#x5b58;&#x4e0a;&#x4e00;&#x4e2a;&#x7a0b;&#x5e8f;&#x7684;&#x72b6;&#x6001;&#xff08;&#x4e5f;&#x5c31;&#x662f;&#x6211;&#x4eec;&#x5e38;&#x8bf4;&#x7684",{"_index":4231,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5728;&#x53c2;&#x6570;&#x5217;&#x8868;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x7c7b;&#x578b;&#x4e4b;&#x524d;&#x52a0;&#x4e0a;&#x7701;&#x7565;&#x7b26;&#x53f7",{"_index":2521,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x5728;&#x540c;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x4e2d;&#xff0c",{"_index":2572,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5728;&#x540c;&#x4e00;&#x65f6;&#x523b;&#x8bbf;&#x95ee;&#x4e00;&#x4e2a;&#x5171;&#x4eab;&#x53d8;&#x91cf;&#xff1a",{"_index":4784,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x5728;&#x5806;&#x4e0a;&#x5206;&#x914d;&#x5927;&#x4e8",{"_index":859,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x5728;&#x58f0;&#x660e;&#x4e00;&#x4e2a",{"_index":1139,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5728;&#x5927;&#x591a;&#x6570;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x7f13;&#x51b2;&#x901a;&#x9053;&#x4f1a;&#x4f5c;&#x4e3a;&#x6536;&#x53d1;&#x53cc;&#x65b9;&#x7684;&#x4e2d;&#x95f4;&#x4ef6;&#x3002;&#x6b63;&#x5982;&#x524d;&#x6587;&#x6240;&#x8ff0;&#xff0c;&#x5143;&#x7d20;&#x503c;&#x4f1a;&#x5148;&#x4ece;&#x53d1;&#x9001;&#x65b9;&#x590d;&#x5236;&#x5230;&#x7f13;&#x51b2;&#x901a;&#x9053;&#xff0c;&#x4e4b;&#x540e;&#x518d;&#x7531;&#x7f13;&#x51b2;&#x901a;&#x9053;&#x590d;&#x5236;&#x7ed9;&#x63a5;&#x6536;&#x65b9;&#x3002",{"_index":2707,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5728;&#x5927;&#x591a;&#x6570;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x4e2d;&#xff0c;&#x53ea;&#x8981;&#x9000;&#x51fa;&#x72b6;&#x6001;&#x7801;&#x4e0d;&#x662f",{"_index":977,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5728;&#x5b58;&#x50a8;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x53ea;&#x8981;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#x5df2;&#x5b58;&#x6709;&#x8fd9;&#x4e2a;&#x952e;&#xff0c;&#x5e76;&#x4e14;&#x8be5;&#x952e;&#x503c;&#x5bf9;&#x672a;&#x88ab;&#x6807;&#x8bb0;&#x4e3a;&#x201c;&#x5df2;&#x5220;&#x9664;&#x201d;&#xff0c;&#x5c31;&#x4f1a;&#x628a;&#x65b0;&#x503c;&#x5b58;&#x5230;&#x91cc;&#x9762;&#x5e76",{"_index":5352,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5728;&#x5b66;&#x4e60;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x8bed;&#x8a00;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x603b;&#x662f;&#x8981;&#x5148;&#x641e;&#x6e05;&#x695a;&#xff0c;&#x5f53;&#x7ed9;&#x4e00;&#x4e2a",{"_index":1320,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5728;&#x5b8c;&#x6210;&#x6e05;&#x7406;&#x64cd;&#x4f5c;&#x540e;&#xff0c",{"_index":391,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x5728;&#x5de5;&#x4f5c;&#x533a;&#x76ee;&#x5f55;&#x4e0b;&#x8fd0;&#x884c",{"_index":3020,"title":{},"body":{"commands/build.html#工具":{}}}],["x5728;&#x5e95;&#x5c42;&#xff0c;&#x4e00;&#x4e2a",{"_index":3861,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5728;&#x6211;&#x4eec;&#x9700;&#x8981;&#x5b58;&#x50a8;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x6570;&#x503c;&#x7684;&#x65f6;&#x5019;&#x76f8;&#x5f53;&#x6709;&#x7528;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x53ef;&#x4ee5;&#x5b58;&#x50a8;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x6570;&#x503c;&#x3002",{"_index":736,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5728;&#x6269;&#x5bb9;&#x7684;&#x65f6;&#x5019;&#xff0c",{"_index":3974,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5728;&#x62ff;&#x5230;&#x4e86;&#x4e00;&#x4e2a;&#x7a7a;&#x95f2;&#x7684",{"_index":4327,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5728;&#x64a4;&#x9500;&#x51fd;&#x6570;&#x88ab;&#x8c03;&#x7528;&#x4e4b;&#x540e;&#xff0c;&#x5bf9;&#x5e94;&#x7684",{"_index":5225,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5728;&#x6574;&#x4e2a",{"_index":4585,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5728;&#x65e0;&#x9700;&#x6269;&#x5bb9;&#x65f6;&#xff0c",{"_index":2106,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x5728;&#x666e;&#x901a;&#x51fd;&#x6570;&#x6216;&#x65b9;&#x6cd5;&#x524d;&#x52a0;&#x5173;&#x952e;&#x5b57",{"_index":2548,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5728;&#x66ff;&#x6362;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x7684;&#x65f6;&#x5019;&#x6839;&#x672c;&#x7528;&#x4e0d;&#x7740;&#x9501;&#x3002;&#x53e6;&#x5916;&#xff0c;&#x8fd9;&#x4e2a;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x5728;&#x5b58;&#x50a8;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x8fd8;&#x5728;&#x503c;&#x4e4b;&#x4e0a",{"_index":5334,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5728;&#x6700;&#x540e;&#x4ece;&#x8fd9;&#x4e2a;&#x901a;&#x9053;&#x4e2d;&#x63a5;&#x6536;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x63a5;&#x6536;&#x7684;&#x6b21;&#x6570;&#x9700;&#x8981;&#x4e0e;&#x5176;&#x4ed6;&#x7684",{"_index":5033,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5728;&#x672a;&#x521d;&#x59cb;&#x5316;&#x4e4b;&#x524d;&#x9ed8;&#x8ba4;&#x4e3a",{"_index":1942,"title":{},"body":{"basic/map.html#map":{}}}],["x5728;&#x67e5;&#x627e;&#x6307;&#x5b9a;&#x7684;&#x952e;&#x6240;&#x5bf9;&#x5e94;&#x7684;&#x503c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x603b;&#x4f1a;&#x5148;&#x53bb;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#x5bfb;&#x627e;&#xff0c;&#x5e76;&#x4e0d;&#x9700;&#x8981;&#x9501;&#x5b9a;&#x4e92;&#x65a5;&#x9501;&#x3002;&#x53ea;&#x6709;&#x5f53;&#x786e;&#x5b9a",{"_index":5347,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5728;&#x6808;&#x4e0a;&#x590d;&#x5236;&#x5c0f;&#x5bf9;&#x8c61;&#xff0c;&#x8981;&#x6bd4;&#x5806;&#x4e0a;&#x5206;&#x914d;&#x5185;&#x5b58;&#x8981;&#x5feb;&#x7684;&#x591a;&#x3002",{"_index":2515,"title":{},"body":{"basic/function.html#参数":{}}}],["x5728;&#x6b64",{"_index":962,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5728;&#x6b64;&#x65f6;&#x7684;&#x6240;&#x6709;&#x672a;&#x8bfb;&#x5185;&#x5bb9;&#x3002;&#x5982;&#x6b64;&#x4e00;&#x6765;&#xff0c",{"_index":4006,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5728;&#x76f8;&#x540c;&#x7684",{"_index":2686,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5728;&#x76f8;&#x7b49;&#x7684;&#x60c5;&#x51b5;&#xff0c;&#x4e0d;&#x8bba;&#x8fd9;&#x4e9b;&#x7ed3;&#x679c;&#x503c;&#x76f8;&#x7b49;&#x7684;&#x5b50;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x662f;&#x5426;&#x5b58;&#x5728;&#x4e8e;&#x4e0d;&#x540c;&#x7684",{"_index":539,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5728;&#x7ebf;&#x670d;&#x52a1",{"_index":3016,"title":{},"body":{"commands/build.html#工具":{}}}],["x5728;&#x8bbe;&#x8ba1;&#x4e4b;&#x521d;&#x5e76;&#x6ca1;&#x8003;&#x8651;&#x5c06",{"_index":4559,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5728;&#x8fd0;&#x884c;&#x7ed3;&#x675f;&#x4e4b;&#x524d;&#xff0c",{"_index":5031,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5728;&#x8fd9;&#x4e4b;&#x540e;&#xff0c;&#x4e00;&#x65e6;&#x518d;&#x6709;&#x65b0;&#x7684;&#x952e;&#x503c;&#x5bf9;&#x5b58;&#x5165;&#xff0c;&#x5b83;&#x5c31;&#x4f1a;&#x4f9d;&#x636e;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x53bb;&#x91cd;&#x5efa;&#x810f;&#x5b57;&#x5178;&#x3002;&#x8fd9;&#x4e2a;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x4f1a;&#x628a;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#x5df2;&#x88ab;&#x903b;&#x8f91;&#x5220;&#x9664;&#x7684;&#x952e;&#x503c;&#x5bf9;&#x8fc7;&#x6ee4;&#x6389;&#x3002",{"_index":5365,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5728;&#x8fd9;&#x51e0;&#x79cd;&#x7f16;&#x7801;&#x683c;&#x5f0f;&#x7684;&#x540d;&#x79f0;&#x4e2d;&#xff0c",{"_index":353,"title":{},"body":{"index.html#编码":{}}}],["x5728;&#x8fd9;&#x91cc;&#x4f20;&#x5165;&#x4e86;&#x201c;500",{"_index":4385,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5728;&#x9700;&#x8981;&#x6267;&#x884c;&#x67d0;&#x4e2a;&#x51fd;&#x6570;&#x4e2d;&#x7684",{"_index":2580,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5730;&#x5740",{"_index":1305,"title":{},"body":{"basic/pointer.html#指向指针的指针":{}}}],["x5730;&#x6267;&#x884c;&#x3002",{"_index":4349,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5730;&#x9009;&#x62e9;&#x4e00;&#x4e2a;&#x6267;&#x884c;&#x3002",{"_index":2765,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5783;&#x573e;&#x56de;&#x6536",{"_index":842,"title":{"advance/gc.html#垃圾回收":{}},"body":{}}],["x5783;&#x573e;&#x56de;&#x6536;&#x5668",{"_index":390,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x5783;&#x573e;&#x56de;&#x6536;&#x5668;&#x662f;&#x9700;&#x8981",{"_index":4565,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5783;&#x573e;&#x56de;&#x6536;&#x7684;&#x6210;&#x672c",{"_index":2514,"title":{},"body":{"basic/function.html#参数":{}}}],["x578b;&#x503c;&#xff08;&#x5373;&#xff1a",{"_index":5318,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x578b;&#x7684;&#x6570;&#x7ec4;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x5728",{"_index":783,"title":{},"body":{"basic/interface.html#接口":{}}}],["x578b;&#x80af;&#x5b9a;&#x4f1a;&#x5f15;&#x53d1",{"_index":5311,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x578b;&#x8f6c;&#x4e3a",{"_index":258,"title":{},"body":{"index.html#类型转换":{}}}],["x57fa;&#x4e8",{"_index":4117,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x57fa;&#x4e8e;&#x4e00;&#x4e2a;&#x65e0;&#x7f13;&#x5b58",{"_index":2683,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x57fa;&#x4e8e;&#x6d41;&#x5f0f;&#x7684;&#x89e3;&#x7801;&#x5668",{"_index":1487,"title":{},"body":{"basic/json.html#序列化":{}}}],["x57fa;&#x51c6;&#x6d4b;&#x8bd5",{"_index":3200,"title":{"basic/test.html#基准测试":{}},"body":{}}],["x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x8861;&#x91cf;&#x4e00;&#x4e9b;&#x51fd;&#x6570;&#x7684;&#x6027;&#x80fd;&#x3002",{"_index":3161,"title":{},"body":{"basic/test.html#测试":{}}}],["x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x5bf9;&#x4e8e;&#x8861;&#x91cf;&#x7279;&#x5b9a;&#x64cd;&#x4f5c;&#x7684;&#x6027;&#x80fd;&#x662f;&#x6709;&#x5e2e;&#x52a9;&#x7684;&#xff0c;go",{"_index":3211,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x57fa;&#x672c;&#x7b56;&#x7565",{"_index":381,"title":{"advance/mm.html#基本策略":{}},"body":{}}],["x57fa;&#x7840;&#x636e;&#x7c7b;&#x578b",{"_index":3774,"title":{"basic/basic_data.html#基础据类型":{}},"body":{}}],["x57fa;&#x7840;&#x7c7b;&#x578b;&#xff0c;&#x6570;&#x503c;&#x3001;&#x5b57;&#x7b26;&#x4e32;&#x548c;&#x5e03;&#x5c14;&#x578b",{"_index":182,"title":{},"body":{"index.html#数据类型":{}}}],["x5806;&#x5256;&#x6790;&#x5219;&#x6807;&#x8bc6;&#x4e86;&#x6700;&#x8017;&#x5185;&#x5b58;&#x7684;&#x8bed;&#x53e5;&#x3002",{"_index":3215,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x585e;&#x76f4;&#x5230;&#x53e6;&#x4e00;&#x4e2a",{"_index":2702,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x58f0;&#x660e",{"_index":226,"title":{"index.html#声明":{}},"body":{"basic/struct.html#结构体":{}}}],["x58f0;&#x660e;&#x4e00;&#x4e2a;&#x540d;&#x53eb",{"_index":2531,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x58f0;&#x660e;&#x4e00;&#x4e2a;`string`&#x7c7b;&#x578b",{"_index":1512,"title":{},"body":{"basic/constant.html#常量":{}}}],["x58f0;&#x660e;&#x4e00;&#x7ec4",{"_index":1823,"title":{},"body":{"basic/var.html#声明一组变量":{}}}],["x58f0;&#x660e;&#x4e00;&#x7ec4;&#x4e0d;&#x540c;&#x7c7b;&#x578b",{"_index":1513,"title":{},"body":{"basic/constant.html#常量":{},"basic/var.html#声明一组变量":{}}}],["x58f0;&#x660e;&#x4e00;&#x7ec4;&#x53d8;&#x91cf",{"_index":1822,"title":{"basic/var.html#声明一组变量":{}},"body":{}}],["x58f0;&#x660e;&#x4e0b;&#x9762;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x5bfc;&#x5165;&#x4e00;&#x7cfb;&#x5217;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x7684;&#x5305;&#x3002;&#x6bd4;&#x5982",{"_index":1574,"title":{},"body":{"basic/package.html#import":{}}}],["x58f0;&#x660e;&#x4e2d;&#xff0c;&#x88ab;&#x91cd;&#x7f6e;&#x4e3a",{"_index":1523,"title":{},"body":{"basic/constant.html#iota":{}}}],["x58f0;&#x660e;&#x51fd;&#x6570",{"_index":230,"title":{"basic/function.html#声明函数":{}},"body":{"index.html#声明":{}}}],["x58f0;&#x660e;&#x51fd;&#x6570;&#x53d8;&#x91cf",{"_index":2528,"title":{},"body":{"basic/function.html#函数作为值":{}}}],["x58f0;&#x660e;&#x53d8;&#x91cf",{"_index":227,"title":{},"body":{"index.html#声明":{}}}],["x58f0;&#x660e;&#x53d8;&#x91cf;&#x548c;&#x5e38;&#x91cf",{"_index":162,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x58f0;&#x660e;&#x53d8;&#x91cf;&#xff0c;&#x5fc5;&#x987b;&#x4f7f;&#x7528;&#x7a7a;&#x683c;&#x9694;&#x5f00;&#xff1a",{"_index":1810,"title":{},"body":{"basic/var.html#变量":{}}}],["x58f0;&#x660e;&#x53d8;&#x91cf;&#xff0c;&#x9ed8;&#x8ba4",{"_index":1939,"title":{},"body":{"basic/map.html#map":{}}}],["x58f0;&#x660e;&#x5e38;&#x91cf",{"_index":228,"title":{},"body":{"index.html#声明":{}}}],["x58f0;&#x660e;&#x5e38;&#x91cf;&#xff0c;&#x8fd0;&#x884c;&#x65f6;&#x4e0d;&#x53ef;&#x6539;&#x53d8;&#xff08;&#x53ea;&#x8bfb;&#xff09;&#xff0c;&#x6ce8;&#x610f;&#x5e38;&#x91cf;&#x7684",{"_index":1506,"title":{},"body":{"basic/constant.html#常量":{}}}],["x58f0;&#x660e;&#x6240;&#x5c5e;&#x5305;&#x540d;&#x548c;&#x5bfc;&#x5165;&#x5305;&#x3002",{"_index":163,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x58f0;&#x660e;&#x6240;&#x5c5e;&#x7684;&#x4ee3;&#x7801;&#x5305;&#x4e0e;&#x5176;&#x6240;&#x5728;&#x76ee;&#x5f55;&#x7684;&#x540d;&#x79f0;&#x4e0d;&#x540c;&#x65f6",{"_index":1608,"title":{},"body":{"basic/package.html#点操作":{}}}],["x58f0;&#x660e;&#x6240;&#x5c5e;&#x7684;&#x4ee3;&#x7801;&#x5305;&#x540d;&#x79f0;&#x5bf9;&#x5e94;&#x3002;&#x4e3a;&#x4e86;&#x4e0d;&#x8ba9;&#x8be5;&#x4ee3;&#x7801;&#x5305;&#x7684;&#x4f7f;&#x7528;&#x8005;&#x4ea7;&#x751f;&#x56f0;&#x60d1;&#xff0c;&#x6211;&#x4eec;&#x603b;&#x662f;&#x5e94;&#x8be5;&#x8ba9;&#x58f0;&#x660e;&#x7684;&#x5305;&#x540d;&#x4e0e;&#x5176;&#x7236;&#x76ee;&#x5f55;&#x7684;&#x540d;&#x79f0;&#x4e00;&#x81f4;&#x3002",{"_index":1611,"title":{},"body":{"basic/package.html#点操作":{}}}],["x58f0;&#x660e;&#x6570;&#x7ec4",{"_index":472,"title":{},"body":{"basic/array.html#数组":{}}}],["x58f0;&#x660e;&#x6570;&#x7ec4;&#xff1a",{"_index":457,"title":{},"body":{"basic/array.html#数组":{}}}],["x58f0;&#x660e;&#x7c7b;&#x578b",{"_index":229,"title":{},"body":{"index.html#声明":{}}}],["x58f0;&#x660e;&#x8bed;&#x53e5;&#x3002;&#x6bd4;&#x5982",{"_index":194,"title":{},"body":{"index.html#package":{},"index.html#声明":{}}}],["x58f0;&#x660e;&#x8bed;&#x53e5;&#x4f5c;&#x7528;&#x57df;&#x8303;&#x56f4;&#x7684;&#x5927;&#x5c0f;&#x3002",{"_index":2123,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x58f0;&#x660e;&#x8bed;&#x53e5;&#x7684;&#x4f5c;&#x7528;&#x57df;&#x662f;&#x6307;&#x6e90;&#x4ee3;&#x7801;&#x4e2d;&#x53ef;&#x4ee5;&#x6709;&#x6548;&#x4f7f;&#x7528;&#x8fd9;&#x4e2a;&#x540d;&#x5b57;&#x7684;&#x8303;&#x56f4;&#x3002",{"_index":2111,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5904;&#x4e8e;&#x7b49;&#x5f85;&#x72b6;&#x6001;&#xff0c;&#x7b49;&#x5230;&#x901a;&#x77e5;&#x5230;&#x6765;&#x65f6;&#x518d;&#x51b3;&#x5b9a;&#x662f;&#x5426;&#x5524;&#x9192;&#x5b83;&#x3002;&#x6b64;&#x65f6;&#xff0c;&#x8fd9;&#x4e2a",{"_index":4905,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x590d;&#x5236;&#x7684;&#x90a3;&#x4e2a;&#x503c;&#x7684;&#x4e00;&#x4e2a;&#x5feb;&#x7167;&#x3002;&#x4e4b;&#x540e;&#xff0c;&#x4e0d;&#x8bba;&#x540e;&#x8005;&#x5b58;&#x50a8;&#x7684;&#x503c;&#x600e;&#x6837;&#x6539;&#x53d8;&#xff0c;&#x90fd;&#x4e0d;&#x4f1a;&#x5f71;&#x54cd;&#x5230;&#x524d;&#x8005;&#x3002",{"_index":5012,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x590d;&#x5408;&#x7c7b;&#x578b;&#xff0c;&#x6570;&#x7ec4;&#x548c;&#x7ed3;&#x6784;&#x4f53",{"_index":183,"title":{},"body":{"index.html#数据类型":{}}}],["x590d;&#x6570",{"_index":3788,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5916;&#x7684;&#x4efb;&#x4f55;&#x903b;&#x8f91;&#x91cc;&#x9762;&#x4f7f;&#x7528;&#xff0c;&#x5982;&#x679c;&#x4f60;&#x8981;&#x5728",{"_index":315,"title":{},"body":{"index.html#类型断言":{}}}],["x5916;&#x9762;&#x5224;&#x65ad;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x5c31;&#x4f7f;&#x7528",{"_index":316,"title":{},"body":{"index.html#类型断言":{}}}],["x5916;&#xff0c;&#x8fd8;&#x6709",{"_index":1904,"title":{},"body":{"basic/operator.html#赋值运算符":{}}}],["x591a;&#x4e2a;&#x5b57;&#x6bb5;&#x6765;&#x5b9e;&#x73b0;&#x529f;&#x80fd;&#x5f3a;&#x5927;&#x7684;&#x7c7b;&#x578b;&#xff0c;&#x5374;&#x4e0d;&#x4f1a;&#x6709;&#x591a;&#x91cd;&#x7ee7;&#x627f;&#x90a3;&#x6837;&#x590d;&#x6742;&#x7684;&#x5c42;&#x6b21;&#x7ed3;&#x6784;&#x548c;&#x53ef;&#x89c2;&#x7684;&#x7ba1;&#x7406;&#x6210;&#x672c;&#x3002",{"_index":1181,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x591a;&#x4f59;&#x7684;&#x90e8;&#x5206;&#x6784;&#x6210;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5c0f;&#x7684",{"_index":409,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x591a;&#x53d8;&#x91cf;&#x8d4b;&#x503c",{"_index":1854,"title":{},"body":{"basic/var.html#赋值":{}}}],["x591a;&#x7ebf;&#x7a0b;&#x548c;&#x591a;&#x8fdb;&#x7a0b;&#x662f;&#x5e76;&#x884c;&#x7684;&#x57fa;&#x672c;&#x6761;&#x4ef6;&#xff0c;&#x4f46;&#x662f;&#x5355;&#x7ebf;&#x7a0b;&#x53ef;&#x4ee5;&#x5229;&#x7528",{"_index":4241,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x591a;&#x8def;&#x590d;&#x7528",{"_index":2748,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x591a;&#x8def;&#x590d;&#x7528;&#x3002",{"_index":2758,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x591a;&#x989d;&#x5916;&#x7684;&#x5224;&#x65ad;&#xff0c;&#x8fd8;&#x7528;&#x5230;&#x4e86",{"_index":3826,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x591f;&#x5bb9;&#x7eb3;&#x65b0;&#x7684;&#x5185;&#x5bb9;&#x3002",{"_index":3976,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5927;&#x5bf9;&#x8c61;&#x5efa;&#x8bae;&#x4f7f;&#x7528",{"_index":1143,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5927;&#x5c0f;&#x3002",{"_index":3800,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5927;&#x5c0f;&#x5199;&#x8f6c;&#x6362",{"_index":3855,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5927;&#x6982;&#x662f",{"_index":4251,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5927;&#x91cf;&#x7684;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x6765;&#x5b58;&#x53d6;&#x952e;&#x548c;&#x503c;&#xff0c;&#x5e76;&#x4f7f;&#x7528;&#x4e86;&#x4e24;&#x4e2a;&#x539f;&#x751f;&#x7684",{"_index":5323,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5934;&#x4e0a",{"_index":4501,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5956;&#x91d1",{"_index":777,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5982",{"_index":1628,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5982;&#x4e0a;&#x9762;&#x7684;&#xff1a",{"_index":1457,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5982;&#x4e0d;&#x540c;&#x6e29;&#x5ea6;&#x5355;&#x4f4d;&#x5206;&#x522b;&#x5b9a;&#x4e49;&#x4e3a;&#x4e0d;&#x540c;&#x7684;&#x7c7b;&#x578b;&#xff1a",{"_index":276,"title":{},"body":{"index.html#自定义类型":{}}}],["x5982;&#x4f55;&#x5c06;&#x7a0b;&#x5e8f;&#x5185;&#x7684;&#x4f17;&#x591a",{"_index":4505,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5982;&#x4f55;&#x8ba9",{"_index":4554,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5982;&#x4f55;&#x9009;&#x62e9",{"_index":1136,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5982;&#x679c",{"_index":265,"title":{},"body":{"index.html#类型转换":{},"basic/array.html#数组":{},"concurrent/channel.html#channel":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5982;&#x679c;&#x4e00;&#x4e2a",{"_index":2682,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5982;&#x679c;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x4e2d;&#x6709;&#x591a;&#x6761",{"_index":2569,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5982;&#x679c;&#x4e00;&#x4e2a;&#x5b57;&#x6bb5;&#x7684;&#x58f0;&#x660e;&#x4e2d;&#x53ea;&#x6709;&#x5b57;&#x6bb5;&#x7684;&#x7c7b;&#x578b;&#x540d;&#x800c;&#x6ca1;&#x6709;&#x5b57;&#x6bb5;&#x7684;&#x540d;&#x79f0;&#xff0c;&#x90a3;&#x4e48;&#x5b83;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x79f0;&#x4e3a;&#x533f;&#x540d;&#x5b57;&#x6bb5;&#x3002",{"_index":1773,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5982;&#x679c;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x540d;&#x672c;&#x8eab;&#x662f;&#x4e00;&#x4e2a;&#x6307;&#x9488;&#x7684;&#x8bdd;&#xff0c;&#x662f;&#x4e0d;&#x5141;&#x8bb8;&#x5176;&#x51fa;&#x73b0;&#x5728;&#x63a5;&#x6536;&#x5668;&#x4e2d;&#x7684",{"_index":1135,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5982;&#x679c;&#x4e24;&#x4e2a;&#x503c;&#x76f8;&#x7b49;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x8c03;&#x7528",{"_index":5159,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5982;&#x679c;&#x4f60;&#x6709;&#x591a;&#x4e2a;&#x53ea;&#x9700;&#x8981;&#x6267;&#x884c;&#x4e00;&#x6b21;&#x7684;&#x51fd;&#x6570;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x5e94;&#x8be5;&#x4e3a;&#x5b83;&#x4eec;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#x90fd;&#x5206;&#x914d;&#x4e00;&#x4e2a",{"_index":5090,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5982;&#x679c;&#x4f60;&#x7684;&#x7f51;&#x7ad9;&#x5b58;&#x653e;&#x5728;&#x5b50;&#x76ee;&#x5f55;&#x4e2d;&#xff0c;&#x4f8b;&#x5982",{"_index":3647,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x5982;&#x679c;&#x4f60;&#x8981;&#x8bbe;&#x5b9a;&#x8fd9;&#x4e2a;&#x91c7;&#x6837;&#x9891;&#x7387;&#xff0c;&#x90a3;&#x4e48;&#x8d8a;&#x65e9;&#x8bbe;&#x5b9a;&#x8d8a;&#x597d;&#xff0c;&#x5e76;&#x4e14;&#x53ea;&#x5e94;&#x8be5;&#x8bbe;&#x5b9a;&#x4e00;&#x6b21;&#xff0c;&#x5426;&#x5219;&#x5c31;&#x53ef;&#x80fd;&#x4f1a;&#x5bf9",{"_index":3348,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5982;&#x679c;&#x4f7f;&#x7528",{"_index":1369,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5982;&#x679c;&#x4fe1;&#x7bb1;&#x91cc;&#x6ca1;&#x6709;&#x60c5;&#x62a5;&#xff0c;&#x90a3;&#x4e48;&#x6211;&#x5c31;&#x628a;&#x65b0;&#x60c5;&#x62a5;&#x653e;&#x8fdb;&#x53bb;&#xff0c;&#x5173;&#x4e0a;&#x4fe1;&#x7bb1;&#x3001;&#x9501;&#x4e0a;&#x9501;&#xff0c;&#x7136;&#x540e;&#x79bb;&#x5f00;&#x3002;&#x7528;&#x4ee3;&#x7801;&#x8868;&#x8fbe;&#x51fa;&#x6765;&#x5c31;&#x662f",{"_index":4891,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5982;&#x679c;&#x5199;&#x64cd;&#x4f5c;&#x8fd8;&#x6ca1;&#x6709;&#x8fdb;&#x884c;&#x5b8c;&#xff0c;&#x8bfb;&#x64cd;&#x4f5c;&#x5c31;&#x6765;&#x8bfb;&#x4e86;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x53ea;&#x80fd;&#x8bfb;&#x5230;&#x4ec5;&#x4fee;&#x6539;&#x4e86;&#x4e00;&#x90e8;&#x5206;&#x7684;&#x503c;&#x3002;&#x8fd9;&#x663e;&#x7136;&#x7834;&#x574f;&#x4e86;&#x503c;&#x7684;&#x5b8c;&#x6574;&#x6027;&#xff0c;&#x8bfb;&#x51fa;&#x6765;&#x7684;&#x503c;&#x4e5f;&#x662f;&#x5b8c;&#x5168;&#x9519;&#x8bef;&#x7684;&#x3002",{"_index":5005,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x5982;&#x679c;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x65e0;&#x540d;&#x53d8;&#x91cf;&#x6216;&#x8005;&#x6ca1;&#x6709;&#x8fd4;&#x56de;&#x503c;&#xff0c;&#x8fd4;&#x56de;&#x503c;&#x5217;&#x8868;&#x7684;&#x62ec;&#x53f7;&#x53ef;&#x4ee5;&#x7701;&#x7565;&#x3002;&#x5982;&#x679c;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x58f0;&#x660e;&#x6ca1;&#x6709;&#x8fd4;&#x56de;&#x503c;&#x5217;&#x8868;&#xff0c;&#x90a3;&#x4e48;&#x8fd9;&#x4e2a",{"_index":2488,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x5982;&#x679c;&#x52a0;&#x5165;&#x4e86;&#x9ed8;&#x8ba4;&#x5206;&#x652f;&#xff0c;&#x90a3;&#x4e48;&#x65e0;&#x8bba;&#x6d89;&#x53ca;&#x901a;&#x9053;&#x64cd;&#x4f5c;&#x7684;&#x8868;&#x8fbe;&#x5f0f;&#x662f;&#x5426;&#x6709;&#x963b;&#x585e;&#xff0c",{"_index":2775,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5982;&#x679c;&#x5305;&#x4e2d;&#x542b;&#x6709;&#x591a;&#x4e2a;&#x6e90;&#x6587;&#x4ef6;&#xff0c;&#x6784;&#x5efa;&#x5de5;&#x5177;&#x9996;&#x5148;&#x4f1a;&#x5c06",{"_index":1641,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x5982;&#x679c;&#x5305;&#x662f;&#x4e00;&#x4e2a;&#x5e93;&#xff0c;&#x5219;&#x5ffd;&#x7565;&#x8f93;&#x51fa;&#x7ed3;&#x679c;&#xff1b;&#x8fd9;&#x53ef;&#x4ee5;&#x7528;&#x4e8e;&#x68c0;&#x6d4b;&#x5305;&#x662f;&#x53ef;&#x4ee5;&#x6b63;&#x786e;&#x7f16;&#x8bd1;&#x7684;&#x3002",{"_index":2934,"title":{},"body":{"commands/build.html#工具":{}}}],["x5982;&#x679c;&#x53ef;&#x4ee5;&#xff0c;&#x90a3;&#x4e48;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#x4f1a;&#x5728;&#x5f53;&#x524d;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x4e4b;&#x4e0a;&#xff0c;&#x8fdb;&#x884c;&#x957f;&#x5ea6;&#x6269;&#x5145;&#x3002;&#x66f4;&#x5177;&#x4f53;&#x5730;&#x8bf4;&#xff0c;&#x5982;&#x679c;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x4e0e;&#x5176;&#x957f;&#x5ea6;&#x7684;&#x5dee;&#xff0c;&#x5927;&#x4e8e;&#x6216;&#x7b49;&#x4e8e;&#x53e6;&#x9700;&#x7684;&#x5b57",{"_index":3977,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5982;&#x679c;&#x5728;&#x4e00;&#x4e2a;&#x6b64;&#x7c7b;&#x503c;&#x7684",{"_index":5073,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5982;&#x679c;&#x5728;&#x6211;&#x4eec;&#x7ed9;&#x4e88",{"_index":4095,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x5982;&#x679c;&#x5728;&#x6211;&#x4eec;&#x8c03;&#x7528",{"_index":1035,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x5982;&#x679c;&#x591a;&#x4e2a",{"_index":554,"title":{},"body":{"basic/flow.html#select":{},"concurrent/channel.html#channel":{}}}],["x5982;&#x679c;&#x5bf9;&#x57fa;&#x4e8e;&#x7c7b;&#x6765;&#x5b9e;&#x73b0;&#x9762;&#x5411;&#x5bf9;&#x8c61;&#x7684;&#x8bed;&#x8a00;&#x6bd4;&#x8f83;&#x719f;&#x6089;&#x7684;&#x8bdd;&#xff0c;&#x53ef;&#x80fd;&#x4f1a;&#x503e;&#x5411;&#x4e8e;&#x5c06",{"_index":1157,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x5982;&#x679c;&#x5bfc;&#x5165;&#x4e24;&#x4e2a;&#x76f8;&#x540c;&#x540d;&#x5b57;&#x7684;&#x5305;&#xff0c;&#x5982",{"_index":1593,"title":{},"body":{"basic/package.html#点操作":{}}}],["x5982;&#x679c;&#x5f53;&#x524d;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x7684;&#x4e00;&#x534a;&#x4ecd;&#x7136;&#x5927;&#x4e8e;&#x6216;&#x7b49;&#x4e8e;&#x5176;&#x73b0;&#x6709;&#x957f;&#x5ea6;&#x518d;&#x52a0;&#x4e0a;&#x53e6;&#x9700;&#x7684;&#x5b57;&#x8282;&#x6570;&#x7684;&#x548c;&#xff0c;&#x5373;&#xff1a",{"_index":3980,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5982;&#x679c;&#x5f53;&#x524d;&#x7684",{"_index":4926,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5982;&#x679c;&#x6211;&#x4eec;&#x81ea;&#x5df1;&#x751f;&#x6210;&#x8fd9;&#x6837;&#x7684;&#x503c;&#xff0c;&#x7136;&#x540e;&#x628a;&#x5b83;&#x4f5c;&#x4e3a;&#x201c;&#x7ed9;&#x5b9a;&#x7684;&#x5143;&#x7d20;&#x201d;&#x4f20;&#x7ed9;&#x94fe;&#x8868;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x90a3;&#x4e48;&#x4f1a;&#x53d1;&#x751f;&#x4ec0;&#x4e48;&#xff1f;&#x94fe;&#x8868;&#x4f1a;&#x63a5;&#x53d7;&#x5b83;&#x5417;&#xff1f",{"_index":2415,"title":{},"body":{"packages/container.html#container-包":{}}}],["x5982;&#x679c;&#x65e0;&#x6cd5;&#x505a;&#x5230;&#xff0c;&#x90a3;&#x4e48;&#x8fd9;&#x6761",{"_index":532,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5982;&#x679c;&#x6709;&#x591a;&#x4e2a",{"_index":2753,"title":{},"body":{"concurrent/channel.html#channel":{},"concurrent/sync_lock.html#同步锁":{}}}],["x5982;&#x679c;&#x67d0;&#x4e9b;&#x5b50;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x6709;&#x91cd;&#x590d;&#x5e76;&#x4e14;&#x5b83;&#x4eec;&#x4e0",{"_index":545,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5982;&#x679c;&#x6ca1;&#x6709",{"_index":2761,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5982;&#x679c;&#x6ca1;&#x6709;&#x52a0;&#x5165;&#x9ed8;&#x8ba4;&#x5206;&#x652f;&#xff0c;&#x90a3;&#x4e48;&#x4e00;&#x65e6;&#x6240;&#x6709;&#x7684",{"_index":2778,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5982;&#x679c;&#x6ce8;&#x91ca;&#x540e;&#x4ec5;&#x8ddf;&#x7740;&#x5305;&#x58f0;&#x660e;&#x8bed;&#x53e5;&#xff0c;&#x90a3;&#x6ce8;&#x91ca;&#x5bf9;&#x5e94;&#x6574;&#x4e2a;&#x5305;&#x7684;&#x6587;&#x6863;&#x3002;&#x5305;&#x6587;&#x6863;&#x6ce8;&#x91ca;&#x53ea;&#x80fd;&#x6709;&#x4e00;&#x4e2a;&#x3002;&#x53ef;&#x4ee5;&#x5728;&#x4efb;&#x610f;&#x7684;&#x6e90;&#x6587;&#x4ef6;&#x4e2d;&#x3002",{"_index":3006,"title":{},"body":{"commands/build.html#工具":{}}}],["x5982;&#x679c;&#x78b0;&#x5230;&#x4f20;&#x9012;&#x4e00;&#x4e2a;&#x5927;&#x6570;&#x7ec4;&#x65f6;&#xff0c;&#x6548;&#x7387;&#x8f83;&#x4f4e;&#x3002;&#x8fd9;&#x4e2a;&#x65f6;&#x5019;&#x53ef;&#x4ee5;&#x663e;&#x793a;&#x7684;&#x4f20;&#x5165;&#x4e00;&#x4e2a;&#x6570;&#x7ec4;&#x6307;&#x9488",{"_index":484,"title":{},"body":{"basic/array.html#数组传入函数":{}}}],["x5982;&#x679c;&#x7ed3;&#x6784;&#x4f53;&#x6210;&#x5458;&#x540d;&#x5b57;&#x662f;&#x4ee5;&#x5927;&#x5199;&#x5b57;&#x6bcd;&#x5f00;&#x5934;&#x7684;&#xff0c;&#x90a3;&#x4e48;&#x8be5;&#x6210;&#x5458;&#x5c31;&#x662f;&#x5bfc;&#x51fa;&#x7684;&#x3002",{"_index":1749,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x5982;&#x679c;&#x88ab;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x548c;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x6709;&#x540c;&#x540d;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x90a3;&#x4e48;&#x8c03;&#x7528;&#x54ea;&#x4e00;&#x4e2a;&#x7684;&#x65b9;&#x6cd5",{"_index":1787,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5982;&#x679c;&#x88ab;&#x64cd;&#x4f5c;&#x7684;&#x952e;&#x503c;&#x5bf9;&#x5df2;&#x7ecf;&#x5b58;&#x5728;&#x4e8",{"_index":5370,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5982;&#x679c;&#x88ab;&#x8f6c;&#x6362;&#x4e3a",{"_index":4029,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5982;&#x679c;&#x8d85;&#x8fc7",{"_index":4593,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5982;&#x679c;&#x8fd9;&#x4e24;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x91cc;&#x5b58;&#x5728;&#x540c;&#x540d;&#x7684;&#x5b57;&#x6bb5;&#xff0c",{"_index":1790,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5982;&#x679c;&#x901a;&#x77e5;&#x5230;&#x6765;&#x5e76;&#x4e14;&#x51b3;&#x5b9a;&#x5524;&#x9192;&#x8fd9;&#x4e2a",{"_index":4908,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5982;&#x679c;&#x91cd;&#x590d;&#x4f7f;&#x7528;&#x7b80;&#x77ed;&#x58f0;&#x660e;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x53d8;&#x91cf;&#xff0c;&#x4f1a;&#x62a5;&#x9519;&#xff1a",{"_index":1836,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x5982;&#x679c;&#x95f2;&#x7f6e;&#x5185;&#x5b58;&#x8fc7;&#x591a;&#xff0c;&#x5219;&#x5c1d;&#x8bd5;&#x628a;&#x90e8;&#x5206;&#x5185;&#x5b58;&#x8fd8;&#x7ed9;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#xff0c;&#x964d;&#x4f4e;&#x5f00;&#x9500;&#x3002",{"_index":387,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x5982;&#x679c;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x4e00;&#x4e2a",{"_index":5280,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5982;&#x679c;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x80fd;&#x5728;&#x4e00;&#x5f00;&#x59cb;&#x5c31;&#x786e;&#x5b9a;&#x6267;&#x884c;&#x5b50;&#x4efb;&#x52a1;&#x7684",{"_index":5129,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5982;&#xff1a",{"_index":1614,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5b50;&#x53e5;&#x4e2d;&#x7684;&#x5b50;&#x8868;&#x8fbe;&#x5f0f;&#x603b;&#x662f;&#x4f1a;&#x88ab;&#x6700;&#x5148;&#x6c42;&#x503c;&#xff0c;&#x5728;&#x5224;&#x7b49;&#x7684;&#x65f6;&#x5019;&#x987a;&#x5e8f;&#x4e5f;&#x662f;&#x8fd9;&#x6837",{"_index":543,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5b50;&#x53e5;&#x603b;&#x4f1a;&#x88ab;&#x9009;&#x4e2d;&#x3002",{"_index":547,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5b50;&#x53e5;&#x7684",{"_index":602,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b50;&#x53e5;&#x7684;&#x7f16;&#x5199;&#x987a;&#x5e8f;&#x5f88;&#x91cd;&#x8981;&#xff0c;&#x6700;&#x4e0a;&#x8fb9;&#x7684",{"_index":542,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5b50;&#x53e5;&#x7684;&#x9009;&#x62e9;&#x4e0a;&#x662f;&#x5177;&#x6709;&#x552f;&#x4e00;&#x6027;&#x7684",{"_index":535,"title":{},"body":{"basic/flow.html#switch":{}}}],["x5b50;&#x64cd;&#x4f5c;&#x5417",{"_index":5002,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x5b57;&#x5178;&#x4e2d;&#x53ef;&#x80fd;&#x4f1a;&#x6709;&#x8fd9;&#x4e2a;&#x952",{"_index":5349,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x5178;&#x5185;&#x7684;&#x5065;&#x503c;&#x5bf9;&#x5206;&#x914d;&#x5185;&#x5b58;&#xff0c;&#x56e0;&#x6b64;&#x65e0;&#x6cd5;&#x6b63;&#x5e38;&#x5de5;&#x4f5c",{"_index":239,"title":{},"body":{"index.html#make-和-new":{}}}],["x5b57;&#x6bb5;&#x4e2d;&#x7684;&#x539f;&#x751f;&#x5b57;&#x5178;&#x4e00;&#x81f4;&#xff0c;&#x5b83;&#x7684;&#x952e;&#x7c7b;&#x578b",{"_index":5341,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x4e2d;&#xff0c;&#x7136;&#x540e;&#x628a;&#x4ee3;&#x8868;&#x810f;&#x5b57;&#x5178;&#x7684",{"_index":5363,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x4e2d;&#xff0c;&#x8be5;&#x5b57;&#x6bb5;&#x662f",{"_index":5327,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x4ee3;&#x8868;&#x3002;&#x5b83;&#x5b58;&#x50a8;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x65b9;&#x5f0f;&#x4e0",{"_index":5340,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x4ee3;&#x8868;&#x7740;&#x521b;&#x5efa;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x7684;&#x51fd;&#x6570;&#x3002;&#x5b83;&#x7684;&#x7c7b;&#x578b;&#x662f;&#x6ca1;&#x6709;&#x53c2;&#x6570;&#x4f46;&#x6709;&#x552f;&#x4e00;&#x7ed3;&#x679c;&#x7684;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#xff0c;&#x5373;&#xff1a",{"_index":5263,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5b57;&#x6bb5;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x503c;&#xff0c;&#x5e76;&#x76f4;&#x63a5;&#x5c06;&#x5176;&#x8fd4;&#x56d",{"_index":5262,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5b57;&#x6bb5;&#x540d;&#x7684;&#x6210;&#x5458;&#x5728;&#x7f16;&#x7801;&#x540e;&#x53d8;&#x6210;&#x4e86",{"_index":1453,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5b57;&#x6bb5;&#x7684;&#x503c;&#x4e0d;&#x662f",{"_index":5101,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5b57;&#x6bb5;&#x7684;&#x503c;&#x53d8;&#x4e3a",{"_index":5112,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5b57;&#x6bb5;&#x7684;&#x503c;&#x7f6e;&#x4e3a",{"_index":5364,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x7684;&#x503c;&#x90fd;&#x4f1a;&#x53d8;&#x4e3a",{"_index":5120,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5b57;&#x6bb5;&#x7684;&#x7c7b;&#x578b;&#x53ef;&#x77e5;&#xff0c",{"_index":5333,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b57;&#x6bb5;&#x7684;&#x8d4b;&#x503c;&#x7528;&#x7684;&#x662f;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#xff0c;&#x5e76;&#x4e14;&#xff0c;&#x8fd9;&#x4e00;&#x64cd;&#x4f5c;&#x662f;&#x88ab;&#x6302;&#x5728",{"_index":5117,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5b57;&#x7b26;&#x2019;&#x597d;&#x2019;&#x5bf9;&#x5e94;&#x7684;&#x7d22;&#x5f15;&#x503c;&#x5e76;&#x4e0d;&#x662f",{"_index":624,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b57;&#x7b26;&#x3002",{"_index":610,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b57;&#x7b26;&#x3002;&#x4e00;&#x4e2a",{"_index":4020,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x3002;&#x6bd4;&#x5982;&#xff0c;&#x2019;g&#x2019;&#x3001;&#x2019;o&#x2019;&#x3001;&#x2019;&#x7231;&#x2019;&#x3001;&#x2019;&#x597d;&#x2019;&#x3001",{"_index":4018,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x4e32",{"_index":1818,"title":{"basic/basic_data.html#字符串":{}},"body":{"basic/var.html#变量":{}}}],["x5b57;&#x7b26;&#x4e32;&#x503c",{"_index":4026,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x4e32;&#x57fa;&#x672c;&#x64cd;&#x4f5c",{"_index":3841,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x4e32;&#x5c31;&#x662f;&#x4e00;&#x4e32;&#x56fa;&#x5b9a;&#x957f;&#x5ea6;&#x7684;&#x5b57;&#x7b26;&#x8fde;&#x63a5;&#x8d77;&#x6765;&#x7684;&#x5b57;&#x7b26;&#x5e8f;&#x5217;&#xff0c;&#x4e0d;&#x53ef;&#x6539;&#x53d8;&#x3002;go",{"_index":3803,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x4e32;&#x64cd;&#x4f5c",{"_index":3811,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x4e32;&#x66ff;&#x6362;:&#x610f;&#x601d;&#x662f;&#xff1a;&#x5728;sourcestr&#x4e2d;&#xff0c;&#x628a;oldstr&#x7684;&#x524d;n&#x4e2a;&#x66ff;&#x6362;&#x6210;newstr&#xff0c;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x65b0;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5982;&#x679c;n0&#x5219;&#x5168;&#x90e8;&#x66ff;&#x6362",{"_index":3856,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x548c;&#x7ecf;&#x8fc7",{"_index":3934,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b57;&#x7b26;&#x6240;&#x5360;&#x7528;&#x7684;&#x5b57;&#x8282;&#x6570;&#x3002;&#x8bfb;&#x56de;&#x9000;&#x7684;&#x65f6;&#x5019;&#x4f1a;&#x7528;&#x5230;&#x5b83;&#x7684;&#x503c;&#x3002;&#x8fd9;&#x4e2a;&#x5b57;&#x6bb5;&#x53ea;&#x4f1a;&#x5728;&#x5176;&#x6240",{"_index":3539,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x5b57;&#x7b26;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x8c03;&#x7528",{"_index":3565,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x5b57;&#x7b26;&#xff0c;&#x5176;&#x7c7b;&#x578b;&#x4f1a;&#x662f",{"_index":615,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b57;&#x8282;&#x5e8f;&#x5217",{"_index":606,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b57;&#x8282;&#x6570;&#x91cf;&#x548c;&#x5bf9;&#x8c61;&#x6570;&#x91cf;&#x3002",{"_index":3328,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5b57;&#x9762;&#x503c;&#x7684;&#x8bed;&#x6cd5;&#x521b;&#x5efa",{"_index":1941,"title":{},"body":{"basic/map.html#map":{}}}],["x5b58;&#x50a8;&#xff08;store&#xff09;&#x548c;&#x4ea4;&#x6362;&#xff08;swap&#xff09;&#x3002",{"_index":4965,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5b58;&#x53d6;&#x65f6;&#xff0c;&#x5fc5;&#x987b;&#x4f7f;&#x7528",{"_index":1968,"title":{},"body":{"basic/map.html#map":{}}}],["x5b58;&#x5728;&#x7684;&#x6587;&#x4ef6;&#x7684;&#x63cf;&#x8ff0;&#x7b26;&#xff0c;&#x6765;&#x65b0;&#x5efa;&#x4e00;&#x4e2a;&#x5305;&#x88c5;&#x4e86;&#x8be5;&#x6587;&#x4ef6;&#x7684;file&#x503c",{"_index":4104,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x5b58;&#x5730;&#x5740;&#x4e0a;&#x7684;&#x6570;&#x636e;&#x3002",{"_index":4983,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5b58;&#x653e;&#x5230;&#x7ba1;&#x7406;&#x6570;&#x7ec4;&#x4e2d;&#xff0c;&#x9700;&#x8981;&#x65f6;&#x5c31;&#x4ee5;&#x9875;&#x6570;&#x4e3a;&#x7d22;&#x5f15;&#x8fdb;&#x884c;&#x67e5;&#x627e;&#x3002",{"_index":402,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x5b58;&#x653e;&#x7a7a;&#x95f2;&#x7684",{"_index":4320,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5b58;&#x653e;&#x7f16;&#x8bd1;&#x540e;&#x7684;&#x5305;&#x7684;&#x76ee;&#x6807;&#x6587;&#x4ef6",{"_index":2334,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x5b58;&#x653e;&#x7f16;&#x8bd1;&#x540e;&#x7684;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f",{"_index":2333,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x5b83;&#x4ec5;&#x7528;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x7684;&#x4e8c;&#x8fdb;&#x5236;&#x6570;&#x5c31;&#x53ef;&#x4ee5;&#x8868;&#x793a;&#xff0c;&#x800c;&#x5bf9;&#x4e8e;&#x4e00;&#x4e2a;&#x4e2d;&#x6587;&#x5b57;&#x7b26;&#xff0c;&#x5b83;&#x9700;&#x8981;&#x4f7f;&#x7528;&#x4e09;&#x4e2a;&#x5b57;&#x8282;&#x624d;&#x80fd;&#x591f;&#x8868;&#x793a;&#x3002;&#x4e0d;&#x8bba;&#x600e;&#x6837;&#xff0c;&#x4e00;&#x4e2a;&#x53d7;&#x652f;&#x6301;&#x7684;&#x5b57;&#x7b26;&#x603b;&#x662f;&#x53ef;&#x4ee5;&#x7531",{"_index":368,"title":{},"body":{"index.html#编码":{}}}],["x5b83;&#x4ee3;&#x8868;&#x7684;&#x662f;&#x5b57;&#x7b26;&#x4e0e;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x4e4b;&#x95f4;&#x7684;&#x8f6c;&#x6362;&#x65b9;&#x5f0f;&#x3002",{"_index":352,"title":{},"body":{"index.html#编码":{}}}],["x5b83;&#x4eec;&#x662f",{"_index":3156,"title":{},"body":{"basic/test.html#测试":{}}}],["x5b83;&#x4f1a;&#x7528;&#x4e00;&#x4e2a;&#x6216;&#x591a;&#x4e2a;&#x5b57;&#x8282;&#x7684;&#x4e8c;&#x8fdb;&#x5236;&#x6570;&#x6765;&#x8868;&#x793a;&#x67d0;&#x4e2a;&#x5b57;&#x7b26;&#xff0c;&#x6700;&#x591a;&#x4f7f;&#x7528;&#x56db;&#x4e2a;&#x5b57;&#x8282",{"_index":366,"title":{},"body":{"index.html#编码":{}}}],["x5b83;&#x5148;&#x628a;&#x503c;&#x8f6c;&#x6362;&#x4e3a;&#x4e86",{"_index":5336,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5b83;&#x53ea;&#x6709;&#x4e24;&#x4e2a;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#x2014;&#x2014",{"_index":5008,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x5b83;&#x53ef;&#x4ee5;&#x5e2e;&#x4f60;&#x683c;&#x5f0f;&#x5316;&#x4f60;&#x5199;&#x597d;&#x7684;&#x4ee3;&#x7801;&#x6587;&#x4ef6;&#xff0c;&#x4f7f;&#x4f60;&#x5199;&#x4ee3;&#x7801;&#x7684;&#x65f6;&#x5019;&#x4e0d;&#x9700;&#x8981;&#x5173;&#x5fc3;&#x683c;&#x5f0f;&#xff0c;&#x4f60;&#x53ea;&#x9700;&#x8981;&#x5728;&#x5199;&#x5b8c;&#x4e4b;&#x540e;&#x6267;&#x884c",{"_index":2989,"title":{},"body":{"commands/build.html#工具":{}}}],["x5b83;&#x6307;&#x7684;&#x662f;&#x88ab;&#x6d4b;&#x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x6b21;&#x6570;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x6b21;&#x6570",{"_index":3288,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x5b83;&#x662f",{"_index":3364,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5b83;&#x7684;&#x4f5c;&#x7528;&#x662f;&#x8bb0;&#x5f55;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x7684",{"_index":5095,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5b83;&#x7684;&#x503c;&#x603b;&#x662f;&#x4e0b;&#x4e00;&#x4e2a;&#x53ef;&#x4ee5;&#x8c03;&#x7528;&#x6253;&#x5370;&#x51fd;&#x6570;&#x7684",{"_index":4440,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5b83;&#xff08;&#x5728",{"_index":5183,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5b89;&#x5168;&#x7684;&#x64cd;&#x4f5c;&#x3002;&#x600e;&#x6837;&#x4fee;&#x8865;&#xff1a",{"_index":5019,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x5b89;&#x88c5",{"_index":2301,"title":{"basic/env_config.html#安装":{}},"body":{}}],["x5b89;&#x88c5;&#x4f9d;&#x8d56",{"_index":3644,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x5b89;&#x88c5;&#x6839;&#x76ee;&#x5f55",{"_index":2312,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x5b89;&#x88c5;&#x7684;&#x6587;&#x4ef6",{"_index":2983,"title":{},"body":{"commands/build.html#工具":{}}}],["x5b89;&#x88c5;&#x76f8;&#x5e94;&#x7684;&#x5305;&#xff0c;&#x7f16;&#x8bd1;&#x5e76;&#x4e14",{"_index":2940,"title":{},"body":{"commands/build.html#工具":{}}}],["x5b8c;&#x6574;&#x7684;&#x6253;&#x5370;&#x5185;&#x5bb9;&#x5982;&#x4e0b;&#xff1a",{"_index":617,"title":{},"body":{"basic/flow.html#for":{}}}],["x5b9a;&#x4e49",{"_index":763,"title":{},"body":{"basic/interface.html#接口":{},"basic/map.html#map":{}}}],["x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf",{"_index":769,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5b9a;&#x4e49;&#x4e86;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b",{"_index":1738,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x5b9a;&#x4e49;&#x5207;&#x7247;&#xff0c;&#x548c;&#x5b9a;&#x4e49;&#x6570;&#x7ec4;&#x7684;&#x533a;&#x522b;&#x5c31;&#x662f;&#x4e0d;&#x9700;&#x8981;&#x6307;&#x5b9a",{"_index":2055,"title":{},"body":{"basic/slice.html#slice":{}}}],["x5b9a;&#x4e49;&#x5c40;&#x90e8;&#x53d8;&#x91cf",{"_index":2494,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x5b9a;&#x4e49;&#x63a5;&#x53e3;&#xff1a",{"_index":722,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5b9a;&#x4e49;&#x7ed3;&#x6784;&#x4f53",{"_index":726,"title":{},"body":{"basic/interface.html#接口":{},"basic/oop.html#方法":{}}}],["x5b9a;&#x4e49;a&#x4e3a;&#x7a7a;&#x63a5;&#x53e3",{"_index":737,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5b9a;&#x65f6;&#x64a4;&#x9500",{"_index":5202,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x5b9e;&#x4f8b;&#xff1a",{"_index":247,"title":{},"body":{"index.html#类型转换":{},"basic/flow.html#for":{},"basic/interface.html#接口":{},"basic/oop.html#方法":{},"basic/struct.html#结构体":{}}}],["x5b9e;&#x73b0;&#x3002",{"_index":3860,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b9e;&#x73b0;&#x4e86;&#x4e00;&#x4e2a;&#x53cc;&#x5411;&#x94fe;&#x8868;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x94fe;&#x8868;&#xff09;&#xff0c",{"_index":2407,"title":{},"body":{"packages/container.html#container-包":{}}}],["x5b9e;&#x73b0;&#x4e92;&#x65a5;&#x6240",{"_index":4781,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x5b9e;&#x73b0;&#x63a5;&#x53e3",{"_index":764,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5b9e;&#x73b0;&#x63a5;&#x53e3;&#x65b9;&#x6cd5",{"_index":727,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5b9e;&#x73b0;&#x7684;&#x3002;&#x8fd9;&#x6837;&#x7684;&#x58f0;&#x660e;&#x5b9a;&#x4e49;&#x4e86;&#x51fd;&#x6570;&#x6807;&#x8bc6;&#x7b26;&#x3002",{"_index":2512,"title":{},"body":{"basic/function.html#参数":{}}}],["x5b9e;&#x73b0;&#x7684;&#x5199;&#x5165;&#x76f8;&#x5173;&#x7684;&#x63a5;&#x53e3;&#xff1a",{"_index":3464,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x5b9e;&#x73b0;&#xff0c;&#x4e0d;&#x50cf;&#x76f4;&#x63a5;&#x8fd0;&#x7b97;&#x7b26;&#x8fd9;&#x79cd;&#x4f1a;&#x4ea7;&#x751f;&#x5f88;&#x591a;&#x4e34;&#x65f6;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x4f46;&#x662f;&#x5185;&#x90e8;&#x7684;&#x903b;&#x8f91;&#x6bd4;&#x8f83;&#x590d;&#x6742;&#xff0c;&#x6709;&#x5f88",{"_index":3825,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5b9e;&#x9645;&#x4e0a;&#x5e94;&#x8be5;&#x5199;&#x505a",{"_index":1352,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5b9e;&#x9645;&#x4e0a;&#x76f8;&#x5f53;&#x4e8e;&#x5bf9;&#x5176;&#x4f9d;&#x9644;&#x7684",{"_index":1360,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5b9e;&#x9645;&#x4e0a;&#xff0c",{"_index":758,"title":{},"body":{"basic/interface.html#接口":{},"packages/io.html#io包中的接口和工具":{}}}],["x5b9e;&#x9645;&#x4e0a;&#xff0c;&#x6211;&#x4eec;&#x5728;&#x8c03;&#x7528;&#x524d;&#x6587;&#x6240;&#x8ff0;&#x7684",{"_index":4129,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x5bb9;&#x5668;&#x5bb9;&#x91cf;&#x7684;&#x4e8c;&#x500d;&#x518d;&#x52a0;&#x4e0a",{"_index":3907,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5bf9;&#x4e00;&#x4e2a;&#x5df2;&#x7ecf;&#x88ab;&#x9501;&#x5b9a;&#x7684;&#x4e92;&#x65a5;&#x9501;&#x8fdb;&#x884c;&#x9501;&#x5b9a;&#xff0c;&#x662f;&#x4f1a;&#x7acb;&#x5373;&#x963b;&#x585e;&#x5f53;&#x524d;&#x7684",{"_index":4821,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x5bf9;&#x4e8e",{"_index":2736,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5bf9;&#x4e8e;&#x503c;&#x4e3a",{"_index":2739,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5bf9;&#x4e8e;&#x5176;&#x4ed6;&#x5e8f;&#x5217;&#x5316;&#x534f;&#x8bae;&#x5982",{"_index":1438,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5bf9;&#x4e8e;&#x51fd;&#x6570;&#xff08",{"_index":1343,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5bf9;&#x4e8e;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#xff0c;&#x4e3a;&#x4e86;&#x52a0;&#x5feb;&#x6d4b;&#x8bd5;&#x901f;&#x5ea6;&#xff0c;&#x547d;&#x4ee4;&#x901a;&#x5e38;&#x4f1a;&#x5e76;&#x53d1;&#x5730;&#x6d4b;&#x8bd5;&#x591a;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#x3002;&#x4f46;&#x662f;&#xff0c;&#x5728;&#x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#xff0c",{"_index":3295,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x5bf9;&#x4e8e;&#x540c;&#x4e00;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#x4e2d;&#x7684;&#x591a;&#x4e2a;&#x529f",{"_index":3296,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x5bf9;&#x4e8e;&#x540c;&#x4e00;&#x4e2a;&#x901a;&#x9053;&#xff0c;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x4e4b;&#x95f4;&#x662f;&#x4e92;&#x65a5;&#x7684;&#xff0c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x4e4b;&#x95f4;&#x4e5f;&#x662f;&#x4e92;&#x65a5;&#x7684;&#x3002;go",{"_index":2720,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5bf9;&#x4e8e;&#x5728;&#x5305;&#x4e00;&#x7ea7;&#x58f0;&#x660e;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x5b83;&#x4eec;&#x7684;&#x751f;&#x547d;&#x5468;&#x671f;&#x548c;&#x7a0b;&#x5e8f;&#x7684;&#x8fd0;&#x884c;&#x5468;&#x671f;&#x662f;&#x4e00;&#x81f4;&#x7684;&#x3002",{"_index":318,"title":{},"body":{"index.html#类型断言":{}}}],["x5bf9;&#x4e8e;&#x5904;&#x5728;&#x96f6;&#x503c;&#x72b6;&#x6001;&#x7684",{"_index":3959,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5bf9;&#x4e8e;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#xff0c;&#x6bd4;&#x5982;&#xff1a;&#x5207;&#x7247;&#x3001;&#x5b57;&#x5178;&#x3001;&#x901a;&#x9053;&#xff0c;&#x50cf;&#x4e0a;&#x9762;&#x90a3;&#x6837;&#x590d;&#x5236;&#x5b83;&#x4eec;&#x7684;&#x503c;&#xff0c;&#x53ea;&#x4f1a;&#x62f7;&#x8d1d;&#x5b83;&#x4eec;&#x672c;&#x8eab;&#x800c;&#x5df2;&#xff0c;&#x5e76;&#x4e0d;&#x4f1a;&#x62f7;&#x8d1d;&#x5b83;&#x4eec;&#x5f15;&#x7528;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x636e;&#x3002",{"_index":2598,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x5bf9;&#x4e8e;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#xff0c;&#x76f4;&#x63a5;&#x4f7f;&#x7528",{"_index":1146,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5bf9;&#x4e8e;&#x5f88;&#x591a;&#x7f51;&#x7edc;&#x670d;&#x52a1;&#x7a0b;&#x5e8f;&#xff0c;&#x7531;&#x4e8e;&#x4e0d;&#x80fd;&#x5927;&#x91cf;&#x521b;&#x5efa",{"_index":4466,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5bf9;&#x4e8e;&#x6240;&#x6709;&#x7684;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x3001;&#x6307;&#x9488;&#x7c7b;&#x578b;&#xff0c;&#x4ee5;&#x53ca;&#x6570;&#x7ec4;&#x7c7b;&#x578b;&#x3001;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x548c;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#xff0c;go",{"_index":1988,"title":{},"body":{"basic/map.html#map":{}}}],["x5bf9;&#x4e8e;&#x6574;&#x6570;&#x7c7b;&#x578b;&#x503c;&#x3001;&#x6574;&#x6570;&#x5e38;&#x91cf;&#x4e4b;&#x95f4;&#x7684;&#x7c7b;&#x578b;&#x8f6c;&#x6362;&#xff0c;&#x539f;&#x5219;&#x4e0a;&#x53ea;&#x8981;&#x6e90;&#x503c;&#x5728;&#x76ee;&#x6807;&#x7c7b;&#x578b;&#x7684;&#x53ef;&#x8868;&#x793a;&#x8303;&#x56f4;&#x5185;&#x5c31;&#x662f;&#x5408;&#x6cd5;&#x7684;&#x3002;&#x6bd4;&#x5982;&#xff0c",{"_index":249,"title":{},"body":{"index.html#类型转换":{}}}],["x5bf9;&#x4e8e;&#x65b9;&#x6cd5;&#xff08",{"_index":1345,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5bf9;&#x4e8e;&#x67d0;&#x4e2a;&#x53d7;&#x5230;&#x8bfb;&#x5199;&#x9501;&#x4fdd;&#x62a4;&#x7684;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#xff0c;&#x591a;&#x4e2a;&#x5199;&#x64cd;&#x4f5c;&#x4e0d;&#x80fd;&#x540c;&#x65f6;&#x8fdb;&#x884c;&#xff0c;&#x5199;&#x64cd;&#x4f5c;&#x548c;&#x8bfb;&#x64cd;&#x4f5c;&#x4e5f;&#x4e0d;&#x80fd;&#x540c;&#x65f6;&#x8fdb;&#x884c;&#xff0c;&#x4f46;&#x591a;&#x4e2a;&#x8bfb;&#x64cd;&#x4f5c;&#x5374;&#x53ef;&#x4ee5;&#x540c;&#x65f6;&#x8fdb;&#x884c",{"_index":4804,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x5bf9;&#x4e8e;&#x6bcf;&#x4e2a;&#x5bfc;&#x822a;&#x9879;&#xff0c;&#x5fc5;&#x987b;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a",{"_index":3661,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x5bf9;&#x4e8e;&#x6bcf;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#xff0c",{"_index":3234,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x5bf9;&#x4e8e;&#x901a;&#x9053;&#x4e2d;&#x7684;&#x540c;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x503c;&#x6765;&#x8bf4;&#xff0c;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x548c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x4e4b;&#x95f4;&#x4e5f;&#x662f;&#x4e92;&#x65a5;&#x7684;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x867d;&#x7136;&#x4f1a;&#x51fa;&#x73b0;&#xff0c;&#x6b63;&#x5728;&#x88ab;&#x590d;&#x5236;&#x8fdb;&#x901a;&#x9053;&#x4f46;&#x8fd8;&#x672a;&#x590d;&#x5236;&#x5b8c;&#x6210;&#x7684;&#x5143;&#x7d20;&#x503c;&#xff0c",{"_index":2727,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5bf9;&#x4e8e;io&#x5305;&#x4e2d;&#x6700;&#x6838;&#x5fc3;&#x7684",{"_index":4086,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x5bf9;&#x53c2;&#x6570;&#x503c;&#x7a0d;&#x4f5c;&#x4fee;&#x6539;&#x540e;&#x5c06;&#x5176;&#x4f5c;&#x4e3a;&#x7ed3;&#x679c;&#x503c;&#x8fd4;&#x56de;&#x3002",{"_index":2588,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x5bf9;&#x5e94;&#x503c;&#x7684;&#x7b2c;&#x4e00;&#x90e8;&#x5206;&#x7528;&#x4e8e;&#x6307;&#x5b9a",{"_index":1468,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5bf9;&#x5e94;&#x7684",{"_index":1898,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x5bf9;&#x5e94;&#x7684;&#x662f",{"_index":3781,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5bf9;&#x63a5;&#xff0c;&#x5e76;&#x5f97;&#x5230;&#x771f;&#x6b63;&#x8fd0;&#x884c;&#x7684;&#x4e2d;&#x4ecb;&#x3002;p",{"_index":4294,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5bf9;&#x7684;&#x96c6;&#x5408;&#x3002",{"_index":1931,"title":{},"body":{"basic/map.html#map":{}}}],["x5bf9;&#x8c61;&#x3002",{"_index":1474,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5bf9;&#x8c61;&#x7684;&#x540d;&#x5b57;&#xff0c",{"_index":1469,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5bf9;&#x8c61;&#x7684;&#x65f6;&#x5019;&#x8fdb;&#x884c;&#x68c0;&#x6d4b;&#x6b64;&#x65f6;&#x662f;&#x5426;&#x6ee1;&#x8db3;&#x5783;&#x573e;&#x56de;&#x6536;&#x6761;&#x4ef6;&#xff0c;&#x5982;&#x679c;&#x6ee1;&#x8db3;&#x5219;&#x8fdb;&#x884c;&#x5783;&#x573e;&#x56de;&#x6536;&#x3002",{"_index":860,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x5bf9;&#x8c61;&#x8981;&#x4e48;&#x6d3b;&#x7740;&#x8981;&#x4e48;&#x6b7b;&#x7740;&#xff0c;&#x6240;&#x4ee5;&#x4f1a;&#x9020;&#x6210;&#x4e2d;&#x95f4;&#x6682;&#x505c;&#x65f6;&#x95f4;&#x53ef;&#x80fd;&#x4f1a;&#x5f88;&#x2ed3;&#xff0c;&#x2f64;&#x6237;&#x903b;&#x8f91;&#x5bf9;&#x4e8e;&#x2f64;&#x6237;&#x7684;&#x53cd;&#x5e94;&#x5c31;&#x4e2d;&#x2f4c;&#x4e86;&#x3002",{"_index":850,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x5bf9;&#x8c61;&#x91cd;&#x7528;&#x7684;&#x51e0;&#x7387;&#xff0c;&#x51cf;&#x5c11",{"_index":5272,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5bf9;&#x8c61;&#xff08;&#x8fd9;&#x91cc",{"_index":1479,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5bfc;&#x5165;&#x4e00;&#x4e2a;&#x5305",{"_index":1577,"title":{},"body":{"basic/package.html#import":{}}}],["x5bfc;&#x5165;&#x5305;&#x91cd;&#x547d;&#x540d",{"_index":1592,"title":{},"body":{"basic/package.html#点操作":{}}}],["x5bfc;&#x5165;&#x591a;&#x4e2a",{"_index":1578,"title":{},"body":{"basic/package.html#import":{}}}],["x5bfc;&#x5165;&#x7684;&#x5305;&#x5fc5;&#x987b;&#x5728;&#x6587;&#x4ef6;&#x7684;&#x5934;&#x90e8;&#x663e;&#x5f0f;&#x58f0;&#x660e;&#xff0c;&#x8fd9;&#x6837;&#x7684;&#x8bdd;&#x7f16;&#x8bd1;&#x5668;&#x5c31;&#x6ca1;&#x6709;&#x5fc5;&#x8981;&#x8bfb;&#x53d6;&#x548c;&#x5206;&#x6790;&#x6574;&#x4e2a;&#x6e90;&#x6587;&#x4ef6;&#x6765;&#x5224;&#x65ad;&#x5305;&#x7684;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x3002",{"_index":1569,"title":{},"body":{"basic/package.html#包":{}}}],["x5bfc;&#x5165;&#x7684;&#x5305;&#xff0c;&#x5982",{"_index":2127,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5bfc;&#x5165;&#x8def;&#x5f84;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x7684;&#x540d;&#x79f0;&#x3002",{"_index":3177,"title":{},"body":{"basic/test.html#测试":{}}}],["x5bfc;&#x81f4;&#x7684;&#xff0c",{"_index":1456,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5bfc;&#x81f4;&#x7a0b;&#x5e8f;&#x7ed3;&#x675f;&#x8fd0;&#x884c;&#x7684;&#x9000;&#x51fa;&#x72b6;&#x6001;&#x7801;&#x4e00;&#x822c;&#x90fd;&#x4f1a;&#x662f",{"_index":981,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5bfc;&#x822a;&#x9879;&#x4e0b;&#x7ea7;&#x6587;&#x6863",{"_index":3668,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x5bfc;&#x822a;&#x9879;&#x7684;&#x6807;&#x7b7",{"_index":3667,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x5c01;&#x88c5",{"_index":1182,"title":{"basic/oop.html#封装":{}},"body":{}}],["x5c01;&#x88c5;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#xff0c;&#x5fc5;&#x987b;&#x5b9a;&#x4e49;&#x4e3a;&#x4e00;&#x4e2a",{"_index":1184,"title":{},"body":{"basic/oop.html#封装":{}}}],["x5c01;&#x88c5;&#x4e86",{"_index":749,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5c01;&#x88c5;&#x4e86;&#x4e00;&#x5c42;&#x3002",{"_index":5335,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5c06",{"_index":4520,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c06;&#x4e4b;&#x79f0;&#x4e3a",{"_index":4483,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c06;&#x4f1a;&#x5220;&#x9664;&#x6240;&#x6709;&#x7684;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c;&#x7f13;&#x5b58;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8fd9;&#x6837;&#x505a;&#x80af;&#x5b9a;&#x4e0d;&#x4f1a;&#x5220;&#x9664;&#x4efb;&#x4f55;&#x6784;&#x5efa;&#x7ed3;&#x679c;&#x7f13;&#x5b58;&#x3002",{"_index":3245,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x5c06;&#x4f1a;&#x5bfc;&#x81f4",{"_index":3249,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x5c06;&#x4f1a;&#x88ab;&#x7f6e;&#x4e3a",{"_index":1525,"title":{},"body":{"basic/constant.html#iota":{}}}],["x5c06;&#x518d;&#x6b21;&#x8fdb;&#x5165",{"_index":4645,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c06;&#x662f;&#x4e00;&#x4e2a;&#x7f16;&#x8bd1;&#x9519;&#x8bef;&#x3002",{"_index":2663,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5c06;&#x7533;&#x8bf7;&#x5230;&#x7684;&#x5927;&#x5757;&#x5185;&#x5b58;&#x6309;&#x7167;&#x7279;&#x5b9a;&#x5927;&#x5c0f;&#x5207;&#x5206;&#x6210;&#x5c0f;&#x5757;&#xff0c;&#x591f;&#x6210;&#x94fe;&#x8868;&#x3002",{"_index":384,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x5c06;&#x83b7;&#x5f97;&#x8d44;&#x6e90;&#x5f00;&#x59cb;&#x6267;&#x884c;&#x3001;&#x54ea;&#x4e2a",{"_index":4459,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c06;&#x89e3;&#x7ed1",{"_index":4612,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c06;&#x8c03;&#x7528;&#x94fe;&#x63a5;&#x5668;&#x5728;&#x5f53;&#x524d;&#x76ee;&#x5f55;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#xff0c;&#x4ee5;&#x5bfc;&#x5165;&#x8def;&#x5f84;&#x7684;&#x6700;&#x540e;&#x4e00;&#x6bb5;&#x4f5c;&#x4e3a;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#x7684;&#x540d;&#x5b57;&#x3002",{"_index":2933,"title":{},"body":{"commands/build.html#工具":{}}}],["x5c06;&#x8fd9;&#x4e2a;http&#x9519;&#x8bef;&#x8fd4;&#x56de;&#x7ed9;&#x8c03;&#x7528;&#x8005",{"_index":928,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x5c06;&#x957f;&#x65f6;&#x95f4;&#x672a;&#x5904;&#x7406;&#x7684",{"_index":4595,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c06;arr&#x4e2d;&#x4ece;&#x4e0b;&#x6807;startindex&#x5230;endindex",{"_index":2063,"title":{},"body":{"basic/slice.html#slice":{}}}],["x5c0f;&#x4e8e",{"_index":5066,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5c1d;&#x8bd5;&#x6bd4;&#x8f83",{"_index":2184,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x5c31;&#x4f1a;&#x5f15;&#x53d1",{"_index":406,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x5c31;&#x4f1a;&#x76f4;&#x63a5;&#x8fd4;&#x56de;&#x3002;&#x8fd9;&#x4e5f;&#x521d;&#x6b65;&#x4fdd;&#x8bc1;&#x4e86;&#x201c",{"_index":5108,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x5c31;&#x4f1a;&#x7ee7;&#x7eed;&#x6267;&#x884c;&#x540e;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4e86;&#x3002",{"_index":4910,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5c31;&#x4f1a;&#x963b;&#x585e;&#x5728;&#x8c03;&#x7528;&#x8fd9",{"_index":4906,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5c31;&#x4f1a;&#x963b;&#x585e;&#x5f53;&#x524d",{"_index":2674,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5c31;&#x50cf;&#x6307;&#x9488;&#x4e00;&#x6837;&#x3002;&#x5b83;&#x5e95;&#x5c42;&#x7684;&#x6570;&#x636e;&#x7ed3;&#x6784;&#x662f",{"_index":1934,"title":{},"body":{"basic/map.html#map":{}}}],["x5c31;&#x5df2;&#x7ecf;&#x4e0e;&#x51fd;&#x6570;&#x5916;&#x7684;&#x90a3;&#x4e2a;&#x503c;&#x6beb;&#x65e0;&#x5173;&#x7cfb;&#x4e86;&#x3002",{"_index":4978,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x5c31;&#x662f",{"_index":847,"title":{},"body":{"advance/gc.html#垃圾回收":{},"concurrent/sync_lock.html#sync-Once":{}}}],["x5c31;&#x662f;&#x4e00;&#x4e2a;&#x6307;&#x9488;&#xff0c",{"_index":1291,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x5c31;&#x662f;&#x51fd;&#x6570;&#x6700;&#x7ec8;&#x7684;&#x8fd4;&#x56de;&#x503c",{"_index":2564,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x5c31;&#x662f;&#x5305;&#x540d;&#x3002;&#x4e09;&#x79cd;&#x60c5;&#x51b5;&#x4f8b;&#x5916;&#xff1a",{"_index":1621,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5c31;&#x662f;&#x53d6;&#x53d8;&#x91cf",{"_index":1289,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x5c31;&#x662f;&#x53d8;&#x91cf;&#x7684;&#x503c;&#xff0c",{"_index":302,"title":{},"body":{"index.html#类型断言":{}}}],["x5c31;&#x662f;&#x8d4b;&#x503c;&#x64cd;&#x4f5c",{"_index":1835,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x5c31;&#x662f;&#x8dd1;&#x5728",{"_index":4532,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5c31;&#x662f;&#x8fd9;&#x4e2a;&#x795e;&#x79d8;&#x7684;&#x672a;&#x77e5;&#x7c7b;&#x578b;&#xff0c;&#x5176",{"_index":293,"title":{},"body":{"index.html#类型断言":{}}}],["x5c3d;&#x91cf;&#x4e0d;&#x8981;&#x5411;&#x539f;&#x5b50;&#x503c;&#x4e2d;&#x5b58;&#x50a8;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x3002;&#x56e0;&#x4e3a;&#x8fd9;&#x5f88;&#x5bb9;&#x6613;&#x9020;&#x6210;&#x5b89;&#x5168;&#x6f0f;&#x6d1e;&#x3002",{"_index":5015,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x5c3d;&#x91cf;&#x4e0d;&#x8981;&#x5728",{"_index":5058,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5c3d;&#x91cf;&#x628a",{"_index":1045,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x5c40;&#x90e8;&#x53d8;&#x91cf",{"_index":2112,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x5c40;&#x90e8;&#x53d8;&#x91cf;&#xff08;&#x5305;&#x62ec;&#x51fd;&#x6570;&#x7684;&#x53c2;&#x6570;&#x548c;&#x8fd4;&#x56de;&#x503c;&#x4e5f;&#x662f;&#x5c40;&#x90e8;&#x53d8;&#x91cf;&#xff09;&#x7684;&#x751f;&#x547d;&#x5468;&#x671f;&#x5219;&#x662f;&#x52a8;&#x6001;&#x7684;&#xff1a;&#x6bcf;&#x6b21;&#x4ece;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x53d8;&#x91cf;&#x7684;&#x58f0;&#x660e;&#x8bed;&#x53e5;&#x5f00;&#x59cb;&#xff0c",{"_index":319,"title":{},"body":{"index.html#类型断言":{}}}],["x5c5e;&#x3002",{"_index":1199,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x5c5e;&#x4e8",{"_index":1118,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5c5e;&#x503c;&#x7684",{"_index":3540,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x672c;&#x8eab;&#x4e5f;&#x6709;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x60c5;&#x51b5;&#xff0c;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x201c;&#x5c4f;&#x853d;&#x201d;&#x73b0;&#x8c61;&#x4f1a;&#x4ee5;&#x5d4c;&#x5165;&#x7684;&#x5c42;&#x7ea7;&#x4e3a;&#x4f9d;&#x636e;&#xff0c;&#x5d4c;&#x5165;&#x5c42;&#x7ea7;&#x8d8a;&#x6df1;&#x7684;&#x5b57;&#x6bb5;&#x6216;&#x65b9;&#x6cd5;&#x8d8a;&#x53ef;&#x80fd;&#x88ab;&#x201c;&#x5c4f;&#x853d;&#x201d;&#x3002",{"_index":1794,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x5d4c;&#x5165;&#x7ed3;&#x6784;&#x4f53;&#x6269;&#x5c55;&#x7c7b;&#x578b",{"_index":1155,"title":{"basic/oop.html#嵌入结构体扩展类型":{}},"body":{}}],["x5de5;&#x4f5c;&#x533a",{"_index":2317,"title":{"basic/env_config.html#工作区":{}},"body":{}}],["x5de5;&#x4f5c;&#x533a;&#x7684;&#x76ee;&#x5f55;&#x7ed3;&#x6784;&#xff1a",{"_index":2331,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x5de5;&#x4f5c;&#x6765;&#x8bf4;&#x8fd8;&#x662f;&#x53ef;&#x4ee5;&#x63a5;&#x53d7;&#x7684;&#x3002",{"_index":5381,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x5de5;&#x5177",{"_index":2916,"title":{"commands/build.html#工具":{}},"body":{}}],["x5de5;&#x5177;&#x6240;&#x9700;&#x7684;&#x5185;&#x5b58;&#x5730;&#x5740;&#xff0c;&#x8fd9;&#x4e9b;&#x5185;&#x5b58;&#x5730;&#x5740;&#x4f1a;&#x4ee5;&#x5341;&#x516d;&#x8fdb;&#x5236;&#x7684;&#x5f62;&#x5f0f;&#x5c55;&#x73b0;&#x51fa;&#x6765;&#x3002",{"_index":3382,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5de6;&#x8fb9;&#x53d8;&#x91cf;&#x7684;&#x6570;&#x76ee;&#x5fc5;&#x987b;&#x548c;&#x53f3;&#x8fb9;&#x4e00;&#x81f4;&#xff0c;&#x51fd;&#x6570;&#x4e00;&#x822c;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":1848,"title":{},"body":{"basic/var.html#赋值":{}}}],["x5df2;&#x5b58;&#x5728;&#x4e8e",{"_index":3889,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5df2;&#x5b58;&#x5728;&#x7684;&#x5185;&#x5bb9;&#x4e0d;&#x53ef;&#x53d8;&#xff0c;&#x4f46;&#x53ef;&#x4ee5;&#x62fc;&#x63a5;&#x66f4;&#x591a;&#x7684;&#x5185;&#x5bb9;&#xff1b",{"_index":3878,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5df2;&#x7ecf;&#x5b58;&#x5728;&#x4e86;&#x4e00;&#x4e2a;&#x6587;&#x4ef6;&#xff0c;&#x90a3;&#x4e48;&#x8be5;&#x51fd;&#x6570;&#x4f1a;&#x5148;&#x6e05;&#x7a7a;&#x73b0;&#x6709;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x5168;&#x90e8;&#x5185;&#x5bb9",{"_index":4097,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x5df2;&#x7ecf;&#x652f;&#x6301",{"_index":2342,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x5df2;&#x7ecf;&#x9000;&#x51fa",{"_index":5062,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x5df2;&#x8bfb;&#x8ba1;&#x6570",{"_index":3946,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5df2;&#x8bfb;&#x8ba1;&#x6570;&#x4e5f;&#x4ee3;&#x8868;&#x7740;&#x4e0b;&#x4e00;&#x6b21;&#x8bfb;&#x53d6;&#x7684;&#x8d77;&#x59cb;&#x7d22;&#x5f15;&#x4f4d;&#x7f6e;&#x3002",{"_index":3927,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5e03;&#x5c14;&#x503c;&#xff0c;&#x8868;&#x793a;&#x662f;&#x5426;&#x64cd;&#x4f5c",{"_index":1949,"title":{},"body":{"basic/map.html#map":{}}}],["x5e03;&#x5c14;&#x578b;&#x3001;&#x6570;&#x5b57;&#x7c7b;&#x578b;&#x548c;&#x5b57;&#x7b26;&#x4e32;&#x7b49;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x90fd;&#x662f;&#x53ef;&#x6bd4;&#x8f83;&#x7684;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#x4e24;&#x4e2a;&#x76f8;&#x540c;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x53ef;&#x4ee5;&#x7528",{"_index":1884,"title":{},"body":{"basic/operator.html#关系运算符":{}}}],["x5e03;&#x5c14;&#x7c7b;&#x578b",{"_index":3801,"title":{"basic/basic_data.html#布尔类型":{}},"body":{}}],["x5e03;&#x5c14;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x53ea;&#x6709;&#x4e24;&#x79cd;&#xff1a",{"_index":3802,"title":{},"body":{"basic/basic_data.html#布尔类型":{}}}],["x5e03;&#x5c14;&#x7c7b;&#x578b;&#xff1a",{"_index":1817,"title":{},"body":{"basic/var.html#变量":{}}}],["x5e03;&#x5c14;&#x8868;&#x8fbe;&#x5f0f",{"_index":521,"title":{},"body":{"basic/flow.html#if":{}}}],["x5e26;&#x6709",{"_index":604,"title":{},"body":{"basic/flow.html#for":{}}}],["x5e26;&#x6765;&#x4e86;&#x7f16;&#x7a0b;&#x7684;&#x65b9;&#x4fbf;&#x4f46;&#x540c;&#x65f6;&#x4e5f;&#x589e;&#x52a0;&#x4e86;&#x8fd0;&#x884c;&#x65f6;&#x5f00;&#x9500;&#xff0c;&#x4f7f;&#x7528;&#x4e0d;&#x5f53;&#x751a;&#x81f3;&#x4f1a;&#x4e25;&#x91cd;&#x5f71;&#x54cd;&#x7a0b;&#x5e8f;&#x7684;&#x6027;&#x80fd;&#x3002;&#x56e0;&#x6b64;&#x6027;&#x80fd",{"_index":5274,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5e26;&#x6765;&#x989d;&#x5916;&#x7684;&#x8d1f;&#x62c5;&#xff0c;&#x6240;&#x4ee5;&#x6027;&#x80fd;&#x6bd4;&#x8f83;&#x5dee;&#x3002",{"_index":3823,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5e26;&#x7f13;&#x5b58",{"_index":2693,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5e26;&#x7f13;&#x5b58;&#x7684",{"_index":2694,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5e38;&#x7528",{"_index":2386,"title":{},"body":{"basic/env_config.html#开发工具":{}}}],["x5e38;&#x7ed3;&#x675f",{"_index":979,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5e38;&#x89c1;&#x7684;&#x8d4b;&#x503c;&#x7684;&#x65b9;&#x5f0f;&#xff1a",{"_index":1839,"title":{},"body":{"basic/var.html#赋值":{}}}],["x5e38;&#x91cf",{"_index":1505,"title":{"basic/constant.html#常量":{}},"body":{}}],["x5e38;&#x91cf;&#x540d;&#x5b57",{"_index":1508,"title":{},"body":{"basic/constant.html#常量":{}}}],["x5e38;&#x91cf;&#x7684;&#x503c;&#x505a;&#x6309;&#x4f4d;&#x4e0",{"_index":4168,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x5e38;&#x91cf;&#x7ec4;&#x4e2d;&#xff0c;&#x5982;&#x679c;&#x4e0d;&#x6307;&#x5b9a;&#x7c7b;&#x578b;&#x548c;&#x521d;&#x59cb;&#x503c;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x548c;&#x4e0a;&#x4e00;&#x884c;&#x975e;&#x7a7a;&#x5e38;&#x91cf;&#x53f3;&#x503c;&#x76f8;&#x540c",{"_index":1518,"title":{},"body":{"basic/constant.html#常量":{}}}],["x5e38;&#x91cf;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x503c;&#x5728",{"_index":1515,"title":{},"body":{"basic/constant.html#常量":{}}}],["x5e72;&#x9884;&#x3002",{"_index":4372,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5e73;&#x53f0;&#x673a;&#x5668;&#x7684;&#x5b57;&#x5927;&#x5c0f;&#x3002",{"_index":3782,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x5e74;&#x53d1;&#x5e03;&#x7684",{"_index":5300,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5e76;&#x4e0d;&#x4fdd;&#x7559",{"_index":4544,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e76;&#x4e0d;&#x5c5",{"_index":1380,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x5e76;&#x4e0d;&#x662f;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#x3002;&#x6362;&#x53e5;&#x8bdd;&#x8bf4;&#xff0c;&#x5728;&#x540c;&#x4e00;&#x65f6;&#x95f4;&#x6bb5;&#x5185;&#xff0c;&#x8ba9;&#x4e0d;&#x540c",{"_index":5296,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5e76;&#x4e0d;&#x662f;&#x6709;&#x6548;&#x7684;&#xff0c;&#x90a3;&#x4e48;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x5c06;&#x4f1a;&#x8fd4;&#x56d",{"_index":4101,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x5e76;&#x4e0d;&#x662f;&#xff0c;&#x6240;&#x4ee5;&#x5c3d;&#x7ba1",{"_index":1167,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x5e76;&#x4e14",{"_index":1465,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5e76;&#x4e14;&#xff0c;&#x662f;&#x5728;&#x51fd;&#x6570;&#x5916;&#x5b9a;&#x4e49;&#x7684;&#x540d;&#x5b57;&#xff0c;&#x5982;&#x679c;&#x4ee5;&#x5927;&#x5199;&#x5b57;&#x6bcd;&#x5f00;&#x5934;&#xff0c;&#x90a3;&#x4e48;&#x4f1a;&#x88ab;&#x5bfc;&#x51fa;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x5728;&#x5305;&#x7684;&#x5916;&#x90e8;&#x4e5f;&#x53ef;&#x4ee5;&#x8bbf;&#x95ee;&#xff0c;&#x6240;&#x4ee5;&#x5b9a;&#x4e49;&#x540d;&#x5b57;&#x65f6;&#xff0c;&#x8981;&#x6ce8;&#x610f;&#x5927;&#x5c0f;&#x5199;&#x3002",{"_index":225,"title":{},"body":{"index.html#命名":{}}}],["x5e76;&#x4ee5",{"_index":2171,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"basic/test.html#示例函数":{}}}],["x5e76;&#x4f7f;&#x5b83;&#x518d;&#x6b21;&#x6267;&#x884c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x3002",{"_index":2735,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5e76;&#x53d1",{"_index":4217,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5e76;&#x53d1;&#x5355;&#x5143;&#x95f4;&#x901a;&#x4fe1;&#x56f0;&#x96be;&#xff0c;&#x6613;&#x9519;&#xff1a;&#x591a;&#x4e2a",{"_index":4476,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e76;&#x53d1;&#x548c;&#x5e76;&#x884c",{"_index":4216,"title":{"concurrent/goroutine.html#并发和并行":{}},"body":{}}],["x5e76;&#x53d1;&#x5730;&#x8c03;&#x7528;&#xff0c;&#x6240;&#x4ee5;&#x5b83;&#x7528;&#x5230;&#x7684",{"_index":4425,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5e76;&#x53d1;&#x5b89;&#x5168",{"_index":2630,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x5185;&#x90e8;&#x4f7f;&#x7528;&#x7684;&#x5b58;&#x50a8;&#x4ecb;&#x8d28;&#x6b63;&#x662f;&#x539f;&#x751f;&#x5b57;&#x5178;&#xff0c;&#x53c8;&#x56e0;&#x4e3a;&#x5b83;&#x4f7f;&#x7528;&#x7684;&#x539f;&#x751f;&#x5b57;&#x5178;&#x952e;&#x7c7b;&#x578b;&#x4e5f;&#x662f;&#x53ef;&#x4ee5;&#x5305;&#x7f57;&#x4e07;&#x8c61;&#x7684",{"_index":5306,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x5982;&#x4f55;&#x505a;&#x5230;&#x5c3d;&#x91cf;&#x907f;&#x514d;&#x4f7f;&#x7528;&#x9501",{"_index":5321,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x5e76;&#x53d1;&#x7684;&#x6d4b;&#x8bd5;&#x4f1a;&#x8ba9;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x7684;&#x7ed3;&#x679c;&#x5b58;&#x5728;&#x504f;&#x5dee;&#xff0c;&#x6240;&#x4ee5;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x4e00;&#x822c;&#x90fd;&#x662f;&#x4e32;&#x884c;&#x8fdb;&#x884c;&#x7684",{"_index":3239,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x5e76;&#x53d1;&#x8bbf;&#x95ee;&#x540c;&#x4e00;&#x53d8;&#x91cf;&#xff0c;&#x4e14;&#x81f3;&#x5c11;&#x5176;&#x4e2d;&#x7684;&#x4e00;&#x4e2a;&#x662f;&#x5199;&#x64cd;&#x4f5c;&#x7684;&#x65f6;&#x5019;&#x5c31;&#x4f1a;&#x53d1;&#x751f;&#x6570;&#x636e;&#x7ade;&#x4e89;&#x3002",{"_index":4770,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x5e76;&#x56de;&#x5230",{"_index":4542,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e76;&#x628a",{"_index":3650,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x5e76;&#x628a;&#x6301;&#x6709;&#x76f8;&#x5e94;&#x6307;&#x9488;&#x503c;&#x7684",{"_index":3871,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5e76;&#x6307;&#x5411",{"_index":2015,"title":{},"body":{"basic/map.html#map":{}}}],["x5e76;&#x6ca1;&#x6709;&#x65f6;&#x95f4;&#x7247;&#x7684;&#x6982;&#x5ff5;&#x3002;&#x5982;&#x679c;&#x67d0;&#x4e2a",{"_index":4549,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e76;&#x6ca1;&#x6709;&#x8f93;&#x51fa",{"_index":1482,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5e76;&#x6dfb;&#x52a0;&#x73af;&#x5883;&#x53d8;&#x91cf",{"_index":2310,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x5e76;&#x884c",{"_index":4223,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5e76;&#x8f93;&#x51fa;&#x65e5;&#x5fd7;&#x4fe1;&#x606f;&#x3002",{"_index":946,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5e76;&#x901a;&#x77e5",{"_index":4575,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e8f;&#x5217;&#x5316",{"_index":1437,"title":{"basic/json.html#序列化":{}},"body":{}}],["x5e8f;&#x7684;&#x8fd0;&#x884c;&#x51c6;&#x5907;&#x5de5;&#x4f5c;&#x5b8c;&#x6210;&#x540e;&#x88ab;&#x81ea;&#x52a8;&#x5730;&#x542f;&#x7528;&#xff0c;&#x5e76;&#x4e0d;&#x9700;&#x8981;&#x6211;&#x4eec;&#x505a;&#x4efb;&#x4f55;&#x624b;&#x52a8;&#x7684;&#x64cd;&#x4f5c;&#x3002",{"_index":4308,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5e93;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#xff0c;&#x5e93;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x662f;&#x4e0d;&#x80fd;&#x88ab;&#x76f4;&#x63a5;&#x8fd0;&#x884c;&#x7684;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#xff0c;&#x5b83;&#x4ec5;&#x7528;&#x4e8e;&#x5b58;&#x653e;&#x7a0b;&#x5e8f;&#x5b9e;&#x4f53;&#xff0c;&#x8fd9;&#x4e9b;&#x7a0b;&#x5e8f;&#x5b9e;&#x4f53;&#x53ef;&#x4ee5;&#x88ab;&#x5176;&#x4ed6;&#x4ee3;&#x7801;&#x4f7f;&#x7528",{"_index":190,"title":{},"body":{"index.html#三种文件":{}}}],["x5e94;&#x8be5;&#x505c;&#x6b62;&#x6267;&#x884c;&#x8ba9;&#x51fa;&#x8d44;&#x6e90;&#x3001;&#x54ea;&#x4e2a",{"_index":4460,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e94;&#x8be5;&#x88ab;&#x5524;&#x9192;&#x6062;&#x590d;&#x6267;&#x884c;&#x7b49;&#x3002",{"_index":4461,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5e95;&#x5c42;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x53ea;&#x80fd;&#x662f;&#x57fa;&#x7840;&#x7c7b;&#x578b;&#xff08;&#x5e03;&#x5c14;&#x578b;&#x3001;&#x6570;&#x503c;&#x578b;&#x548c;&#x5b57;&#x7b26;&#x4e32;&#x578b;&#xff09",{"_index":1507,"title":{},"body":{"basic/constant.html#常量":{}}}],["x5e95;&#x5c42;&#x7c7b;&#x578b",{"_index":275,"title":{},"body":{"index.html#自定义类型":{}}}],["x5efa;&#x7acb;&#x4e86;&#x4e00;&#x4e2a;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60;&#xff0c;&#x5b58;&#x653e;&#x7740;&#x8fd9;&#x4e9b;&#x5bf9;&#x8c61;&#xff0c",{"_index":5279,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x5efa;&#x8bae;&#x4f7f;&#x7528;&#x6307;&#x9488;&#x4f5c;&#x4e3a;&#x65b9;&#x6cd5;&#xff08;method&#xff1a;printmethodpointer&#xff09;&#x7684;&#x63a5;&#x6536;&#x8005;&#xff08;receiver&#xff1a;*mypoint&#xff09;&#xff0c;&#x4e00;&#x662f;&#x53ef;&#x4ee5;&#x4fee;&#x6539;&#x63a5;&#x6536;&#x8005;&#x7684;&#x503c;&#xff0c;&#x4e8c;&#x662f;&#x53ef;&#x4ee5;&#x907f;&#x514d;&#x5927;&#x5bf9;&#x8c61;&#x7684;&#x590d;&#x5236",{"_index":1356,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5f00;&#x4e86;&#x4e00;&#x6761;&#x540e;&#x53f0;&#x7ebf;&#x7a0b;&#xff0c;&#x8fd0;&#x884c;&#x4e00;&#x4e2a",{"_index":4578,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5f00;&#x53d1;&#x5de5;&#x5177",{"_index":2385,"title":{"basic/env_config.html#开发工具":{}},"body":{}}],["x5f00;&#x542f;&#x7f16;&#x8bd1;&#x7684;&#x65f6;&#x5019;&#x81ea;&#x52a8;&#x68c0;&#x6d4b;&#x6570;&#x636e;&#x7ade;&#x4e89;&#x7684;&#x60c5;&#x51b5;&#xff0c;&#x76ee;&#x524d;&#x53ea;&#x652f;&#x6301;64&#x4f4d;&#x7684;&#x673a;&#x5668",{"_index":2944,"title":{},"body":{"commands/build.html#工具":{}}}],["x5f00;&#x5934",{"_index":3847,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x5f00;&#x5934;&#x7684;&#x6e90;&#x6587;&#x4ef6;&#x4f1a;&#x88ab;&#x6784;&#x5efa;&#x5de5;&#x5177;&#x5ffd;&#x7565",{"_index":1627,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5f00;&#x5934;&#x952e;&#x540d;&#x5bf9;&#x5e94;&#x7684;&#x503c;&#x7528;&#x4e8e;&#x63a7;&#x5236",{"_index":1463,"title":{},"body":{"basic/json.html#序列化":{}}}],["x5f00;&#x5934;&#xff0c;&#x53ef;&#x4ee5;&#x5305;&#x542b;&#x5b57;&#x6bcd;&#xff0c;&#x6570;&#x5b57;&#x6216;&#x8005",{"_index":219,"title":{},"body":{"index.html#命名":{}}}],["x5f02;&#x5e38",{"_index":939,"title":{"basic/error.html#Panic-异常":{}},"body":{}}],["x5f02;&#x5e38;&#x3002",{"_index":941,"title":{},"body":{"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{}}}],["x5f02;&#x5e38;&#x53d1;&#x751f;&#x65f6;&#xff0c;&#x7a0b;&#x5e8f;&#x4f1a;&#x4e2d;&#x65ad;&#x8fd0;&#x884c;&#xff0c;&#x5e76;&#x7acb;&#x5373;&#x6267;&#x884c;&#x5728;&#x8be5",{"_index":943,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5f02;&#x5e38;&#xff0c;&#x6740;&#x6389;&#x6574;&#x4e2a;&#x8fdb;&#x7a0b;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":1007,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x5f02;&#x6b65;&#x5e76;&#x53d1",{"_index":4348,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5f0f",{"_index":3293,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x5f15;&#x53d1",{"_index":1026,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x5f15;&#x7528;&#x7c7b;&#x578b",{"_index":2509,"title":{},"body":{"basic/function.html#参数":{}}}],["x5f15;&#x7528;&#x7c7b;&#x578b;&#xff0c;&#x6307;&#x9488;&#x3001;&#x5207;&#x7247;&#x3001;&#x5b57;&#x5178;&#x3001;&#x51fd;&#x6570;&#x3001;&#x901a;&#x9053",{"_index":184,"title":{},"body":{"index.html#数据类型":{}}}],["x5f15;&#x7528;/&#x6307;&#x9488",{"_index":1331,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x5f15;&#x7ed3;&#x679c;&#x503c;&#x7684;&#x53d6;&#x5740;&#x64cd;&#x4f5c;&#x90fd;&#x662f;&#x4e0d;&#x5b89;&#x5168;&#x7684;&#x3002;&#x53e6;&#x5916;&#xff0c;&#x83b7;&#x53d6;&#x7531;&#x5b57;&#x9762;&#x91cf;&#x6216;&#x6807;&#x8bc6;&#x7b26;&#x4ee3;&#x8868;&#x7684;&#x51fd;&#x6570;&#x6216;&#x65b9;&#x6cd5;&#x7684;&#x5730;&#x5740;&#x663e;&#x7136;&#x4e5f;&#x662f;&#x4e0d;&#x5b89;&#x5168;&#x7684;&#x3002",{"_index":1384,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x5f3a;&#x5236;&#x4f7f;&#x7528;&#x663e;&#x793a;&#x7c7b;&#x578b;&#x8f6c;&#x6362",{"_index":241,"title":{},"body":{"index.html#类型转换":{}}}],["x5f52;&#x4e3a;&#x534f;&#x7a0b;&#x5e76;&#x4e0d;&#x5408;&#x9002;&#x3002;go",{"_index":4246,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5f53",{"_index":583,"title":{},"body":{"basic/flow.html#for":{},"basic/error.html#Recover-捕获异常":{},"concurrent/goroutine.html#goroutine-1":{}}}],["x5f53;&#x4e00;&#x4e2a",{"_index":2710,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5f53;&#x4e00;&#x4e2a;&#x6307;&#x9488;&#x88ab;&#x5b9a;&#x4e49;&#x540e;&#x6ca1;&#x6709;&#x5206;&#x914d;&#x5230;&#x4efb;&#x4f55;&#x53d8;&#x91cf;&#x65f6;&#xff0c;&#x5b83;&#x7684;&#x503c;&#x4e3a",{"_index":1302,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x5f53;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#x53d1;&#x751f;&#x53d8;&#x5316;&#x65f6;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x88ab;&#x7528;&#x6765;&#x901a;&#x77e5;&#x88ab;&#x4e92;&#x65a5;&#x9501;&#x963b;&#x585e;&#x7684;&#x7ebf;&#x7a0b",{"_index":4859,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x5f53;&#x51fd;&#x6570;&#x8c03;&#x7528;&#x8fd4;&#x56de;&#x9519;&#x8bef;&#x65f6;&#xff0c;&#x6700;&#x5e38;&#x7528;&#x7684;&#x5904;&#x7406;&#x65b9;&#x5f0f;&#x662f",{"_index":925,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x5f53;&#x524d;&#x7684;&#x6d41;&#x7a0b;&#x5c31;&#x4f1a;&#x88ab;&#x4e00;&#x76f4;&#x201c;&#x963b;&#x585e;&#x201d;&#x5728;&#x8fd9;&#x91cc;&#x3002",{"_index":4995,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x5f53;&#x6211;&#x4eec;&#x4ec5;&#x58f0;&#x660e;&#x800c;&#x4e0d;&#x521d;&#x59cb;&#x5316;&#x4e00;&#x4e2a;&#x5b57;&#x5178;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x7684;&#x503c;&#x4f1a;&#x662f",{"_index":1998,"title":{},"body":{"basic/map.html#map":{}}}],["x5f53;&#x6211;&#x4eec;&#x53ea;&#x58f0;&#x660e;&#x8be5;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf;&#x4f46;&#x6ca1",{"_index":2743,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5f53;&#x6211;&#x4eec;&#x5e76;&#x4e0d;&#x60f3;&#x5c06;&#x5185;&#x90e8;&#x7684;&#x5b50;&#x5305;&#x7ed3;&#x6784;&#x66b4;&#x9732;&#x51fa;&#x53bb;&#x3002;&#x540c;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x80fd;&#x8fd8;&#x5e0c;&#x671b;&#x5728;&#x5185;&#x90e8;&#x5b50;&#x5305;&#x4e4b;&#x95f4;&#x5171;&#x4eab;&#x4e00;&#x4e9b;&#x901a;&#x7528;&#x7684;&#x5904;&#x7406;&#x5305;&#x65f6;&#x3002",{"_index":3033,"title":{},"body":{"commands/build.html#工具":{}}}],["x5f53;&#x6211;&#x4eec;&#x60f3;&#x83b7;&#x53d6;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x8fd8;&#x9700;&#x8981;&#x8c03;&#x7528",{"_index":3352,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5f53;&#x6211;&#x4eec;&#x60f3;&#x901a;&#x8fc7;&#x6a21;&#x677f;&#x5316;&#x7684;&#x65b9;&#x5f0f;&#x751f;&#x6210;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#xff0c;&#x5e76;&#x5f97;&#x5230;&#x9519;&#x8bef;&#x503c;&#x65f6;&#xff0c",{"_index":751,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5f53;&#x6211;&#x4eec;&#x62ff;&#x5230;&#x4e00;&#x4e2a;&#x6b64;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x65f6;&#xff0c;&#x53ef;&#x4ee5;&#x628a;&#x5b83",{"_index":4167,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x5f53;&#x6211;&#x4eec;&#x9700;&#x8981;&#x83b7;&#x53d6;&#x963b;&#x585e;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x9700;&#x8981;&#x5148;&#x8c03;&#x7528",{"_index":3368,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5f53;&#x6709;&#x591a;&#x4e2a",{"_index":2339,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x5f53;&#x6761;&#x4ef6;&#x6ee1;&#x8db3;&#x65f6;&#xff0c",{"_index":551,"title":{},"body":{"basic/flow.html#select":{}}}],["x5f53;&#x7a0b;&#x5e8f;&#x6267;&#x884c;&#x5230;&#x4e00;&#x6761",{"_index":4316,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5f53;&#x7cfb;&#x7edf;&#x6709;&#x591a;&#x4e2a",{"_index":4224,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x5f53;&#x8be5;&#x503c;&#x4e3a",{"_index":3383,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x5f53;&#x8c03;&#x7528;&#x51fd;&#x6570;&#x65f6;&#xff0c;&#x51fd;&#x6570;&#x7684;&#x5f62;&#x53c2;&#x4f1a;&#x88ab;&#x8d4b;&#x503c;&#xff0c",{"_index":480,"title":{},"body":{"basic/array.html#数组传入函数":{}}}],["x5f53;&#x963b;&#x585e;&#x5728",{"_index":4636,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5f62;&#x5f0f;&#x53c2;&#x6570;&#x5217;&#x8868",{"_index":2486,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x5f62;&#x5f0f;&#x8bbf;&#x95ee;&#x3002",{"_index":1618,"title":{},"body":{"basic/package.html#包声明":{}}}],["x5f62;&#x5f0f;&#x8f6c;&#x6362",{"_index":1004,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x5f62;&#x5f0f;&#x8fd4;&#x56de;&#x5176;&#x52a8;&#x6001;&#x503c;&#xff1a",{"_index":2178,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x5f62;&#x5f0f;&#x8fd4;&#x56de;&#x5176;&#x52a8;&#x6001;&#x7c7b;&#x578b;&#xff1a",{"_index":2172,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["x5f80;&#x5f80;&#x4f1a;&#x3001;&#x6bd4;&#x65b0;&#x957f;&#x5ea6;&#x5927;&#x4e00;&#x4e9b;&#xff0c;&#x5f53;&#x7136;&#xff0c;&#x76f8;&#x7b49;&#x4e5f;&#x662f;&#x53ef;&#x80fd;&#x7684;&#x3002",{"_index":2102,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x5f80;&#x5f80;&#x8fd8;&#x6ca1;&#x6709;&#x83b7;&#x5f97;&#x8fd0;&#x884c;&#x7684;&#x673a;&#x4f1a;&#x3002;&#x4f46;&#x662f;&#x5982;&#x679c;&#x6709;&#x673a;&#x4f1a;&#x8fd0;&#x884c;&#xff0c;&#x6253;&#x5370;&#x7684;&#x7ed3;&#x679c;&#x662f;&#x4ec0;&#x4e48;&#xff0c",{"_index":4353,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x5f88;&#x591a;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x5b9e;&#x73b0;&#x4e86",{"_index":3484,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x5f88;&#x6709;&#x5fc5;&#x8981;&#x3002;&#x5176;&#x4e2d;&#x7684;&#x9053;&#x7406;&#x4f60;&#x53ef;&#x4ee5;&#x5bf9;&#x7167;&#x4e00;&#x4e0b;&#x8bfb;&#x5199;&#x9501;&#x3002;&#x4e3a;&#x4ec0;&#x4e48;&#x5728;&#x8bfb;&#x5199;&#x9501;&#x4fdd;&#x62a4;&#x4e0b;&#x7684;&#x5199;&#x64cd;&#x4f5c;&#x548c;&#x8bfb;&#x64cd;&#x4f5c;&#x4e4b;&#x95f4;&#x662f;&#x4e92;&#x65a5;&#x7684;&#xff1f;&#x8fd9;&#x662f;&#x4e3a;&#x4e86;&#x9632;&#x6b62;&#x8bfb;&#x64cd;&#x4f5c;&#x8bfb;&#x5230;&#x6ca1;&#x6709",{"_index":5003,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x5f97;&#x5230;&#x4e00;&#x4e2a",{"_index":2001,"title":{},"body":{"basic/map.html#map":{}}}],["x5f97;&#x5230;&#x5305;&#x542b;&#x8be5;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x7684",{"_index":756,"title":{},"body":{"basic/interface.html#接口":{}}}],["x5f97;&#x5230;&#x80af;&#x5b9a;&#x7ed3;&#x679c;&#x540e;&#xff0c;&#x901a;&#x8fc7",{"_index":2802,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5faa;&#x73af;&#x3002;&#x8fd9;&#x5c31;&#x76f8;&#x5f53;&#x4e8e;&#xff0c;&#x53ea;&#x8981;&#x6761;&#x4ef6;&#x672a;&#x88ab;&#x6ee1;&#x8db3;&#xff0c",{"_index":4994,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x5faa;&#x73af;&#x53ef;&#x76f4;&#x63a5;&#x5728",{"_index":2664,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x5faa;&#x73af;&#x6216;&#x8df3;&#x51fa",{"_index":593,"title":{},"body":{"basic/flow.html#for":{}}}],["x5faa;&#x73af;&#x63a7;&#x5236;&#x8bed;&#x53e5;&#xff1a",{"_index":591,"title":{},"body":{"basic/flow.html#for":{}}}],["x5faa;&#x73af;&#x7684;&#x673a;&#x5236;&#x5927;&#x81f4;&#x662f;&#x4ece;&#x5404;&#x79cd;&#x961f;&#x5217;&#x3001;p",{"_index":4536,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5faa;&#x73af;&#x7684;&#x6e05;&#x9664;&#x5728",{"_index":2985,"title":{},"body":{"commands/build.html#工具":{}}}],["x5faa;&#x73af;&#xff1b",{"_index":4535,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x5fc5;&#x987b;&#x662f;&#x4e00;&#x4e2a;&#x901a;&#x4fe1;&#x64cd;&#x4f5c;&#xff0c;&#x8981;&#x4e48;&#x662f;&#x53d1;&#x9001;&#x8981;&#x4e48;&#x662f;&#x63a5;&#x6536;&#x3002",{"_index":550,"title":{},"body":{"basic/flow.html#select":{}}}],["x5fc5;&#x987b;&#x6709",{"_index":1582,"title":{},"body":{"basic/package.html#main":{}}}],["x5fc5;&#x987b;&#x6709;&#xff0c;&#x5426;&#x5219;&#x4f1a;&#x88ab;&#x7406;&#x89e3;&#x4e3a",{"_index":1129,"title":{},"body":{"basic/oop.html#方法":{}}}],["x5fc5;&#x987b;&#x914d;&#x7f6e;&#x4e00;&#x4e2a;&#x73af;&#x5883;&#x53d8;&#x91cf",{"_index":2325,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x600e;&#x6837;&#x4f30;&#x7b97;&#x5207;&#x7247;&#x5bb9;&#x91cf;&#x7684;&#x589e;&#x957f",{"_index":2087,"title":{"basic/slice.html#怎样估算切片容量的增长":{}},"body":{}}],["x600e;&#x6837;&#x624d;&#x80fd;&#x8ba9;&#x4e3b",{"_index":4373,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x600e;&#x6837;&#x8ba9",{"_index":994,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x600e;&#x6837;&#x8ba9;&#x542f;&#x7528;&#x7684;&#x591a;&#x4e2a",{"_index":4393,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x600e;&#x6837;&#x8bbe;&#x5b9a;&#x5e38;&#x89c4;&#x6587;&#x4ef6;&#x7684;&#x8bbf;&#x95ee;&#x6743;&#x9650",{"_index":4154,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x600e;&#x6837;&#x901a;&#x8fc7",{"_index":5232,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6027;&#x80fd;&#x5206;&#x6790",{"_index":3310,"title":{"basic/test.html#性能分析":{}},"body":{}}],["x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x4e2d;&#x7684;&#x8ba1;&#x65f6;&#x5668",{"_index":3305,"title":{"basic/test.html#性能测试函数中的计时器":{}},"body":{}}],["x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x7684;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c",{"_index":3252,"title":{"basic/test.html#性能测试的测试结果":{}},"body":{}}],["x603b;&#x5f00;&#x652f",{"_index":778,"title":{},"body":{"basic/interface.html#接口":{}}}],["x603b;&#x662f;&#x4f1a;&#x6309;&#x7167;&#x5148;&#x5165;&#x5148;&#x51fa;&#x7684;&#x987a;&#x5e8f;&#xff0c;&#x5f88;&#x5feb;&#x5730;&#x7531;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x5185;&#x90e8;&#x7684;&#x8c03;&#x5ea6;&#x5668;&#x5b89;&#x6392;&#x8fd0;&#x884c;&#x3002",{"_index":4334,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x603b;&#x662f;&#x4f1a;&#x88ab;&#x4f18;&#x5148;&#x590d;&#x7528;&#x3002",{"_index":4326,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x60c5;&#x51b5;&#x4e0b;&#x7684;&#x8c03;&#x5ea6",{"_index":4602,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x610f;&#x5473;&#x7740;&#xff1a",{"_index":3259,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6210;&#x4e00;&#x4e2a",{"_index":1021,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x6210;&#x529f",{"_index":1950,"title":{},"body":{"basic/map.html#map":{}}}],["x6210;&#x529f;&#x4f20;&#x8f93;&#x4e4b;&#x540e;&#xff0c;&#x4e24;&#x4e2a",{"_index":2691,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6210;&#x5458;&#x3002",{"_index":1483,"title":{},"body":{"basic/json.html#序列化":{},"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x6210;&#x5458;&#x5bf9;&#x5e94;&#x5230",{"_index":1472,"title":{},"body":{"basic/json.html#序列化":{}}}],["x6210;&#x5458;&#x7684",{"_index":1475,"title":{},"body":{"basic/json.html#序列化":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5",{"_index":4791,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5bb9;&#x91cf;&#x53ea;&#x6709",{"_index":4782,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x5229;&#x7528",{"_index":2771,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x628a;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60;&#x5f53;&#x4f5c;&#x9488;&#x5bf9;&#x67d0;&#x79cd;&#x6570;&#x636e;&#x7684;&#x7f13;&#x5b58;&#x6765;&#x7528",{"_index":5253,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x9009;&#x7528;&#x53e6;&#x5916;&#x4e00;&#x4e2a;&#x540c;&#x6b65;&#x5de5;&#x5177;&#xff0c;&#x5373;&#xff1a",{"_index":5037,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x4e3a;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x7f16;&#x5199;&#x540d;&#x4e3a",{"_index":1189,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x6211;&#x4eec;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8c03;&#x7528;&#x5b83;&#xff0c;&#x4ea7;&#x751f;&#x4e00;&#x4e2a;&#x4f1a;&#x643a;&#x5e26;&#x989d;&#x5916;&#x6570;&#x636e;&#x7684",{"_index":5204,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6211;&#x4eec;&#x5411;&#x539f;&#x5b50;&#x503c;&#x5b58;&#x50a8;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x503c;&#xff0c;&#x51b3;&#x5b9a;&#x4e86;&#x5b83;&#x4eca;&#x540e;&#x80fd;&#x4e14;&#x53ea;&#x80fd;&#x5b58;&#x50a8;&#x54ea;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x3002",{"_index":5014,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x6211;&#x4eec;&#x5728",{"_index":3866,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6211;&#x4eec;&#x5b89;&#x88c5;&#x597d",{"_index":2323,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x6211;&#x4eec;&#x7edd;&#x5bf9;&#x4e0d;&#x80fd;&#x5e26;&#x7740;&#x4efb;&#x4f55;&#x5b9e;&#x9645;&#x7c7b;&#x578b;&#x4e3a;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#x3001;&#x5b57;&#x5178;&#x7c7b;&#x578b;&#x6216;&#x5207;&#x7247;&#x7c7b;&#x578b;&#x7684;&#x952e;&#x503c;&#x53bb;&#x64cd;&#x4f5c;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178",{"_index":5308,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x6211;&#x4eec;&#x8fd8;&#x53ef;&#x4ee5;&#x8fdb;&#x4e00;&#x6b65;&#x5730;&#x62c6;&#x5206;&#xff0c;&#x628a;&#x6bcf;&#x4e2a;&#x5b57;&#x7b26;&#x7684",{"_index":4036,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6211;&#x4eec;&#x90fd;&#x5f3a;&#x70c8;&#x5efa;&#x8bae;&#x7528;&#x6237;&#x5728;&#x4e00;&#x4e2a",{"_index":1657,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x6211;&#x4eec;&#x90fd;&#x77e5;&#x9053;&#xff0c",{"_index":3995,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6211;&#x7684;&#x7406;&#x89e3;&#x5c31;&#x662f;&#x8fd9;&#x91cc;&#x5c06;&#x6570;&#x636e;push&#x5230;channel",{"_index":2647,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6211;&#x7684;2&#x8fb9;&#x6709;&#x7a7a;&#x683c",{"_index":3854,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6216",{"_index":1617,"title":{},"body":{"basic/package.html#包声明":{},"basic/struct.html#结构体":{},"basic/struct.html#结构体比较":{},"basic/var.html#赋值":{},"basic/map.html#map":{},"basic/env_config.html#Go-Module":{},"basic/test.html#测试":{},"basic/test.html#测试函数":{},"basic/basic_data.html#数值类型":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6216;&#x8005",{"_index":197,"title":{},"body":{"index.html#package":{},"index.html#类型断言":{},"basic/error.html#error-类型":{},"basic/oop.html#方法":{},"basic/package.html#包":{},"basic/package.html#main":{},"basic/var.html#变量":{},"basic/env_config.html#Go-Module":{},"theme/theme-usage.html#Quick-Start":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["x6216;&#x8005;&#x8bf4;&#x662f",{"_index":4480,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6216;&#x8005;&#x8bf4;&#x66f4;&#x52a0;&#x5bbd;&#x677e;&#x7684;&#x505a;&#x6cd5;&#x3002",{"_index":5000,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x622a;&#x53d6;&#x5207;&#x7247",{"_index":2075,"title":{"basic/slice.html#截取切片":{}},"body":{}}],["x6240;&#x4ee5;&#x51fd;&#x6570;&#x53c2;&#x6570;&#x53d8;&#x91cf;&#x63a5;&#x6536;&#x7684;&#x662f;&#x4e00;&#x4e2a;&#x590d;&#x5236;&#x7684;&#x526f;&#x672c;&#xff0c;&#x5e76;&#x4e0d;&#x662f;&#x539f;&#x59cb;&#x8c03;&#x7528;&#x7684;&#x53d8;&#x91cf;&#x3002",{"_index":481,"title":{},"body":{"basic/array.html#数组传入函数":{}}}],["x6240;&#x4ee5;&#x53ef;&#x80fd;&#x7684;&#x8bdd;&#xff0c;&#x5c06;&#x53d8;&#x91cf;&#x9650;&#x5b9a;&#x5728",{"_index":4816,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6240;&#x4ee5;&#x54ea;&#x4e2a",{"_index":4368,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6240;&#x4ee5;&#x6bcf;&#x4e2a",{"_index":2750,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6240;&#x4ee5;&#x8bf4;&#xff0c;&#x5982;&#x679c;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684",{"_index":4932,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6240;&#x4ee5;&#xff0c",{"_index":5089,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x6240;&#x4ee5;&#xff0c;&#x4e00;&#x65e6;&#x4f60;&#x51b3;&#x5b9a;&#x4e86;&#x8981;&#x5bf9;&#x4e00;&#x4e2a;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x8fdb;&#x884c;&#x4fdd;&#x62a4;&#xff0c;&#x90a3;&#x5c31;&#x8981;&#x505a;&#x5230;&#x5b8c;&#x5168;&#x7684;&#x4fdd;&#x62a4;&#x3002;&#x4e0d;&#x5b8c;&#x5168;&#x7684;&#x4fdd;&#x62a4;&#x57fa;&#x672c;&#x4e0a;&#x4e0e;&#x4e0d;&#x4fdd;&#x62a4;&#x6ca1;&#x6709;&#x4ec0;&#x4e48;&#x533a;&#x522b;&#x3002",{"_index":5006,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x6240;&#x4ee5;&#xff0c;&#x4f20;&#x5165;&#x503c;&#x672c;&#x8eab;&#x6ca1;&#x6709;&#x4efb;&#x4f55;&#x610f;&#x4e49;&#x3002",{"_index":4979,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x6240;&#x4ee5;&#xff0c;&#x7ecf;&#x8fc7;&#x8fd9;&#x6837;&#x7684;&#x6309;&#x4f4d;&#x4e0e;&#x64cd;&#x4f5c;&#x4e4b;&#x540e;&#xff0c;&#x6211;&#x4eec;&#x5373;&#x53ef;&#x5f97;&#x5230;&#x8fd9;&#x4e2a;filemode&#x503c;&#x4e2d;&#x6240;&#x6709;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x6587;&#x4ef6;&#x6743;&#x9650;&#x7684;&#x6bd4;&#x7279;&#x4f4d;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8be5;&#x503c;&#x6240;&#x8868;&#x793a;&#x7684;&#x6743;&#x9650;&#x6a21;&#x5f0f;&#x3002",{"_index":4174,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x6240;&#x5728;&#x7684",{"_index":2660,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6240;&#x6267;&#x884c;&#x7684;&#x6d41;&#x7a0b;&#xff0c",{"_index":4823,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6240;&#x6709;&#x4f20;&#x7ed9;&#x51fd;&#x6570;&#x7684;&#x53c2;&#x6570;&#x503c;&#x90fd;&#x4f1a;&#x88ab;&#x590d;&#x5236;&#xff0c;&#x51fd;&#x6570;&#x5728;&#x5176;&#x5185;&#x90e8;&#x4f7f;&#x7528;&#x7684;&#x5e76;&#x4e0d;&#x662f;&#x53c2;&#x6570;&#x503c;&#x7684;&#x539f;&#x503c;&#xff0c",{"_index":2595,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x6240;&#x6709;&#x547d;&#x540d;&#x53ea;&#x80fd;&#x4ee5;&#x5b57;&#x6bcd;&#x6216;&#x8005",{"_index":218,"title":{},"body":{"index.html#命名":{}}}],["x6240;&#x6709;&#x7684",{"_index":4488,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6240;&#x6709;&#x7684;&#x6784;&#x5efa;&#xff0c;&#x90fd;&#x4e0d;&#x4f7f;&#x7528",{"_index":2352,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6240;&#x6709;&#x7684;&#x6784;&#x5efa;&#xff0c;&#x90fd;&#x4f7f;&#x7528",{"_index":2351,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6240;&#x6709;&#x76f8;&#x5173;&#x7684;&#x73af;&#x5883;&#x53d8;&#x91cf;&#x3002",{"_index":3044,"title":{},"body":{"commands/build.html#工具":{}}}],["x6240;&#x8c13;&#x7684",{"_index":4838,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6240;&#x8c13;&#x7684;&#x4ea4;&#x6362;&#x6307;&#x7684;&#x662f;&#xff0c;&#x628a;&#x65b0;&#x503c;&#x8d4b;&#x7ed9;&#x53d8;&#x91cf;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x53d8;&#x91cf;&#x7684;&#x65e7;&#x503c",{"_index":4989,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x6240;&#x8c13;&#x7684;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#xff0c;&#x662f;&#x7531;&#x901a;&#x5e38;&#x5f88;&#x5c0f;&#x7684;&#x975e;&#x8d1f;&#x6574;&#x6570;&#x4ee3;&#x8868;&#x7684;&#x3002;&#x5b83;&#x4e00;&#x822c;&#x4f1a;&#x7531",{"_index":4123,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x6240;&#x9700;&#x5b57;&#x8282;&#x6570",{"_index":3988,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x624d;&#x4f1a;&#x8c03;&#x7528",{"_index":2661,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6253;&#x5370",{"_index":1745,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x6253;&#x5370;&#x51fa;&#x6765;&#x6211;&#x4eec;&#x6b63;&#x5728;&#x7f16;&#x8bd1;&#x7684;&#x5305;&#x540d",{"_index":2945,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x51fa;&#x6765;&#x6267;&#x884c;&#x7684;&#x547d;&#x4ee4;&#xff0c;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x548c",{"_index":2947,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x51fa;&#x6765;&#x6267;&#x884c;&#x7684;&#x8be6;&#x7ec6;&#x547d;&#x4ee4;&#xff0c;&#x5176;&#x5b9e;&#x5c31;&#x662f",{"_index":2987,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x51fa;&#x6765;&#x7f16;&#x8bd1;&#x65f6;&#x5019;&#x7684;&#x4e34;&#x65f6;&#x6587;&#x4ef6;&#x5939;&#x540d;&#x79f0;&#xff0c;&#x5e76;&#x4e14;&#x5982;&#x679c;&#x5df2;&#x7ecf;&#x5b58;&#x5728;&#x7684;&#x8bdd;&#x5c31;&#x4e0d;&#x8981;&#x5220;&#x9664",{"_index":2946,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x5b50;&#x5207;&#x7247;&#x4ece;&#x7d22;&#x5f15",{"_index":2081,"title":{},"body":{"basic/slice.html#截取切片":{}}}],["x6253;&#x5370;&#x5b50;&#x5207;&#x7247;&#x4ece;&#x7d22;&#x5f15;1(&#x5305;&#x542b",{"_index":2077,"title":{},"body":{"basic/slice.html#截取切片":{}}}],["x6253;&#x5370;&#x6240;&#x6709;&#x7684;&#x8bed;&#x6cd5;&#x9519;&#x8bef;&#x5230;&#x6807;&#x51c6;&#x8f93;&#x51fa;&#x3002;&#x5982;&#x679c;&#x4e0d;&#x4f7f;&#x7528;&#x6b64;&#x6807;&#x8bb0;&#xff0c;&#x5219;&#x53ea;&#x4f1a;&#x6253;&#x5370;&#x4e0d;&#x540c;&#x884c;&#x7684;&#x524d;10&#x4e2a;&#x9519;&#x8bef;&#x3002",{"_index":2998,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x6587;&#x6863;&#x3002",{"_index":3009,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x6d4b;&#x8bd5;&#x7ed3;&#x679c;&#x3002;&#x8fd9;&#x5c31;&#x662f;&#x901a;&#x5e38;&#x60c5;&#x51b5;&#x4e0b;&#x7684;&#x4e3b;&#x8981;&#x6d4b;&#x8bd5;&#x6d41;&#x7a0b;&#x3002",{"_index":3233,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x6253;&#x5370;&#x7684;&#x5185;&#x5bb9;&#x4f1a;&#x662f",{"_index":573,"title":{},"body":{"basic/flow.html#for":{}}}],["x6253;&#x5370;&#x7684;&#x6267;&#x884c;&#x7248;&#x672c",{"_index":2988,"title":{},"body":{"commands/build.html#工具":{}}}],["x6253;&#x5370;&#x9519;&#x8bef;&#x65e5;&#x5fd7;&#x3002",{"_index":3186,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x6253;&#x5f00",{"_index":2314,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x6267;&#x884c",{"_index":1670,"title":{},"body":{"basic/package.html#初始化包":{},"concurrent/sync_lock.html#同步锁":{}}}],["x6267;&#x884c;&#x201c;&#x9996;&#x6b21;&#x88ab;&#x8c03;&#x7528;&#x65f6;&#x4f20;&#x5165;&#x7684;&#x201d;&#x90a3;&#x4e2a;&#x51fd;&#x6570;&#xff0c;&#x5e76;&#x4e14;&#x4e4b;&#x540e;&#x4e0d;&#x4f1a;&#x518d;&#x6267;&#x884c;&#x4efb;&#x4f55;&#x53c2;&#x6570;&#x51fd;&#x6570",{"_index":5088,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x6267;&#x884c;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x800c;&#x5411;&#x961f;&#x5217;&#x63d2;&#x5165;&#x5143;&#x7d20;&#x3002",{"_index":2706,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6267;&#x884c;&#x5b8c;&#x4f1a;&#x81ea;&#x52a8;&#x4e2d;&#x65ad",{"_index":524,"title":{},"body":{"basic/flow.html#switch":{}}}],["x6267;&#x884c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x800c;&#x91ca;&#x653e;&#x4e86;&#x65b0;&#x7684;&#x961f;&#x5217;&#x7a7a;&#x95f4;&#x3002",{"_index":2703,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6267;&#x884c;&#x8c03;&#x5ea6;&#x3002",{"_index":4576,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6269;&#x5bb9;&#x65b9;&#x6cd5",{"_index":3902,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6279;&#x91cf;&#x58f0;&#x660e;&#x591a;&#x4e2a;&#x5e38;&#x91cf",{"_index":1514,"title":{},"body":{"basic/constant.html#常量":{}}}],["x628a;&#x6240;&#x6709;&#x7684;&#x7ebf;&#x7a0b;&#x5168;&#x90e8;&#x51bb;&#x7ed3;&#x6389;&#xff0c;&#x610f;&#x5473;&#x7740;&#x2f64;&#x6237;&#x903b;&#x8f91;&#x90fd;&#x662f;&#x6682;&#x505c;&#x7684;&#xff0c;&#x6240;&#x6709;&#x7684;&#x2f64;&#x6237;&#x5bf9;&#x8c61;&#x90fd;&#x4e0d;&#x4f1a;&#x88ab;&#x4fee;&#x6539;&#x4e86",{"_index":848,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x628a;&#x6539;&#x5199;&#x540e;&#x7684;&#x5185;&#x5bb9;&#x76f4;&#x63a5;&#x5199;&#x5165;&#x5230;&#x6587;&#x4ef6;&#x4e2d;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x4f5c;&#x4e3a;&#x7ed3;&#x679c;&#x6253;&#x5370;&#x5230;&#x6807;&#x51c6;&#x8f93;&#x51fa;&#x3002",{"_index":2993,"title":{},"body":{"commands/build.html#工具":{}}}],["x628a;&#x8c03;&#x7528;&#x5b83;&#x7684",{"_index":4900,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x628a;&#x9700;&#x8981;&#x6267;&#x884c;&#x7684;&#x6e05;&#x9664;&#x547d;&#x4ee4;&#x6253;&#x5370;&#x51fa;&#x6765;&#xff0c;&#x4f46;&#x662f;&#x4e0d;&#x6267;&#x884c;&#xff0c;&#x8fd9;&#x6837;&#x5c31;&#x53ef;&#x4ee5;&#x5f88;&#x5bb9;&#x6613;&#x7684;&#x77e5;&#x9053;&#x5e95;&#x5c42;&#x662f;&#x5982;&#x4f55;&#x8fd0;&#x884c;&#x7684",{"_index":2984,"title":{},"body":{"commands/build.html#工具":{}}}],["x628a;&#x9700;&#x8981;&#x6267;&#x884c;&#x7684;&#x7f16;&#x8bd1;&#x547d;&#x4ee4;&#x6253;&#x5370;&#x51fa;&#x6765;&#xff0c;&#x4f46;&#x662f;&#x4e0d;&#x6267;&#x884c;&#xff0c;&#x8fd9;&#x6837;&#x5c31;&#x53ef;&#x4ee5;&#x5f88;&#x5bb9;&#x6613;&#x7684;&#x77e5;&#x9053;&#x5e95;&#x5c42;&#x662f;&#x5982;&#x4f55;&#x8fd0;&#x884c;&#x7684",{"_index":2942,"title":{},"body":{"commands/build.html#工具":{}}}],["x629b;&#x51fa;&#x7684",{"_index":959,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x62a2;&#x5360;&#x5f0f;&#x8c03;&#x5ea6",{"_index":4548,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x62a2;&#x5360;&#x5f0f;&#x8c03;&#x5ea6;&#x53ef;&#x4ee5;&#x89e3;&#x51b3;&#x8fd9;&#x79cd;&#x95ee;&#x9898;&#xff0c;&#x5728;&#x62a2;&#x5360;&#x5f0f;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x5982;&#x679c;&#x4e00;&#x4e2a",{"_index":4570,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x62a2;&#x8d70;&#x4e86;)&#xff0c",{"_index":4626,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x62e5;&#x6709;&#x7684",{"_index":1961,"title":{},"body":{"basic/map.html#map":{}}}],["x62e5;&#x6709;&#x7c7b;&#x4f3c;c&#x8bed;&#x8a00;&#x7684;&#x6307;&#x9488;&#x8fd9;&#x4e2a;&#x76f8;&#x5bf9;&#x53e4;&#x8001;&#x7684;&#x7279;&#x6027;&#x3002;&#x4f46;&#x4e0d;&#x540c;&#x4e8",{"_index":1315,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x62f7;&#x8d1d;&#x5207;&#x7247",{"_index":2074,"title":{},"body":{"basic/slice.html#append-和-copy":{}}}],["x62f7;&#x8d1d;&#x5230",{"_index":3479,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x62fc;&#x63a5;&#x5b57;&#x7b26;&#x4e32;&#xff0c",{"_index":3828,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x62fc;&#x63a5;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5185;&#x90e8;&#x4f7f;&#x7528",{"_index":3824,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x62fc;&#x63a5;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5982",{"_index":3820,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x62fc;&#x63a5;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x6bd4;&#x8f83;&#x7406;&#x60f3;&#xff0c;&#x53ef;&#x4ee5;&#x5f53;&#x6210;&#x53ef;&#x53d8;&#x5b57;&#x7b26;&#x4f7f;&#x7528;&#xff0c;&#x5bf9;&#x5185;&#x5b58;&#x7684;&#x589e;&#x957f;&#x4e5f;&#x6709;&#x4f18;&#x5316;&#xff0c;&#x5982;&#x679c;&#x80fd;&#x9884;&#x4f30;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x957f;&#x5ea6;&#xff0c;&#x8fd8;&#x53ef",{"_index":3831,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x62fc;&#x63a5;&#x65b9;&#x6cd5",{"_index":3895,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6307;&#x4ee3;&#x7684;&#x5c31;&#x662f;&#x6587;&#x4ef6;&#x7684;&#x8def;&#x5f84;&#x3002",{"_index":4112,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x6307;&#x4ee3;&#x7684;&#x6a21;&#x5f0f;&#x53eb;&#x505a;&#x64cd;&#x4f5c;&#x6a21;&#x5f0f;&#xff0c;&#x800c;&#x628a;&#x53c2;&#x6570",{"_index":4119,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x6307;&#x4ee3;&#x7684;&#x6a21;&#x5f0f;&#x53eb;&#x505a;&#x6743;&#x9650;&#x6a21;&#x5f0f;&#x3002;&#x524d;&#x8005;&#x9650;&#x5b9a;&#x4e86;&#x64cd;&#x4f5c;&#x6587;&#x4ef6;&#x7684;&#x65b9;&#x5f0f;&#xff0c;&#x800c;&#x540e;&#x8005;&#x5219;&#x53ef;&#x4ee5;&#x63a7;&#x5236;&#x6587;&#x4ef6;&#x7684;&#x8bbf;&#x95ee;&#x6743;&#x9650;&#x3002",{"_index":4120,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x6307;&#x5411;&#x6307;&#x9488",{"_index":1306,"title":{},"body":{"basic/pointer.html#指向指针的指针":{}}}],["x6307;&#x5411;&#x6307;&#x9488;&#x7684;&#x6307;&#x9488",{"_index":1304,"title":{"basic/pointer.html#指向指针的指针":{}},"body":{}}],["x6307;&#x5411;&#x6307;&#x9488;&#x7684;&#x6307;&#x9488;&#x53d8;&#x91cf",{"_index":1310,"title":{},"body":{"basic/pointer.html#指向指针的指针":{}}}],["x6307;&#x5b9a;&#x5305",{"_index":3010,"title":{},"body":{"commands/build.html#工具":{}}}],["x6307;&#x5b9a;&#x5305;&#x6210;&#x5458",{"_index":3011,"title":{},"body":{"commands/build.html#工具":{}}}],["x6307;&#x5b9a;&#x53ef;&#x4ee5;&#x5e76;&#x884c;&#x53ef;&#x8fd0;&#x884c;&#x7684;&#x7f16;&#x8bd1;&#x6570;&#x76ee;&#xff0c;&#x9ed8;&#x8ba4;&#x662f;cpu&#x6570;&#x76e",{"_index":2943,"title":{},"body":{"commands/build.html#工具":{}}}],["x6307;&#x5b9a;&#x5bb9;&#x91cf",{"_index":2070,"title":{},"body":{"basic/slice.html#slice":{}}}],["x6307;&#x5b9a;&#x76f8;&#x5e94;&#x7684;&#x7f16;&#x8bd1;&#x5668;&#xff0c;gccgo&#x8fd8;&#x662f;gc",{"_index":2952,"title":{},"body":{"commands/build.html#工具":{}}}],["x6307;&#x5b9a;&#x8f93;&#x51fa;&#x7684;&#x6587;&#x4ef6;&#x540d;&#xff0c;&#x53ef;&#x4ee5;&#x5e26;&#x4e0a;&#x8def;&#x5f84;&#xff0c;&#x4f8b;&#x5982",{"_index":2939,"title":{},"body":{"commands/build.html#工具":{}}}],["x6307;&#x9488",{"_index":1283,"title":{"basic/pointer.html#指针":{}},"body":{"basic/pointer.html#指向指针的指针":{}}}],["x6307;&#x9488;&#x4e5f;&#x79f0;&#x4e3a;&#x7a7a;&#x6307;&#x9488;&#x3002",{"_index":1303,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x6307;&#x9488;&#x53d8;&#x91cf",{"_index":1309,"title":{},"body":{"basic/pointer.html#指向指针的指针":{}}}],["x6307;&#x9488;&#x548c;&#x5185;&#x5b58;&#x5730;&#x5740;&#x4e0d;&#x80fd;&#x6df7;&#x4e3a;&#x4e00;&#x8c08",{"_index":1284,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x6307;&#x9488;&#x5f02;&#x5e38",{"_index":2017,"title":{},"body":{"basic/map.html#map":{}}}],["x6307;&#x9488;&#x5f02;&#x5e38;&#xff0c;&#x8fd9;&#x5c06;&#x5bfc;&#x81f4;&#x7a0b;&#x5e8f;&#x7ec8;&#x6b62;&#x8fd0;&#x884c;&#x3002;&#x6240;&#x4ee5;&#x4e0d;&#x5e94;&#x8be5;&#x521d;&#x59cb;&#x5316;&#x4e00;&#x4e2a;&#x7a7a;&#x7684",{"_index":2002,"title":{},"body":{"basic/map.html#map":{}}}],["x6307;&#x9488;&#x65b9;&#x6cd5;&#xff0c;&#x5c31;&#x662f;&#x63a5;&#x6536;&#x8005;&#x7c7b;&#x578b;&#x662f;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":1154,"title":{},"body":{"basic/oop.html#方法":{}}}],["x6307;&#x9488;&#x7c7b;&#x578b;&#x7684;&#x6210;&#x5458;&#xff0c;&#x8fd9;&#x53ef;&#x4ee5;&#x8ba9;&#x6211;&#x4eec;&#x521b;&#x5efa;&#x9012;&#x5f52;&#x7684;&#x6570;&#x636e;&#x7ed3;&#x6784;&#xff0c;&#x6bd4;&#x5982;&#x94fe;&#x8868;&#x548c;&#x6811;&#x7ed3;&#x6784;&#x7b49;&#xff1a",{"_index":1757,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x6309;&#x7167;&#x4e00;&#x5b9a;&#x7b97;&#x6cd5;&#x653e;&#x5230;&#x201c;cpu&#x201d;&#x4e0a;&#x6267;&#x884c;&#x7684;&#x7a0b;&#x5e8f;&#x5c31;&#x53eb;&#x505a",{"_index":4492,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6309;&#x7167;&#x4e00;&#x5b9a;&#x7b97;&#x6cd5;&#x653e;&#x5230;&#x4e0d;&#x540c;&#x7684;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7ebf;&#x7a0b;&#x4e2d;&#x53bb;&#x6267;&#x884c",{"_index":4521,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6309;&#x7167;&#x4e00;&#x5b9a;&#x7b97;&#x6cd5;&#x8c03;&#x5ea6;&#x5230",{"_index":4506,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6309;&#x7167;&#x65e2;&#x5b9a;&#x7684;&#x987a;&#x5e8f;&#x8fd0;&#x884c",{"_index":4394,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6309;&#x7279;&#x5b9a;&#x5927;&#x5c0f;&#x5207;&#x5206;&#x6210;&#x591a;&#x4e2a;&#x5c0f;&#x5757;&#xff0c;&#x6bcf;&#x4e2a;&#x5c0f;&#x5757;&#x53ef;&#x5b58;&#x50a8;&#x4e00;&#x4e2a;&#x5bf9;&#x8c61;&#x3002",{"_index":399,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x6355;&#x83b7;&#x5f02;&#x5e38",{"_index":1005,"title":{"basic/error.html#Recover-捕获异常":{}},"body":{}}],["x63a5;&#x53d7;&#x4e00;&#x4e2a;&#x503c",{"_index":2648,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x63a5;&#x53d7;&#x4efb;&#x610f;&#x7684",{"_index":2170,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{}}}],["x63a5;&#x53d7;&#x7684;&#x503c;&#x4f1a;&#x88ab;&#x4e22;&#x5f03",{"_index":2650,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x63a5;&#x53e3",{"_index":713,"title":{"basic/interface.html#接口":{}},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x3002",{"_index":1444,"title":{},"body":{"basic/json.html#序列化":{},"packages/io.html#io包中的接口和工具":{}}}],["x63a5;&#x53e3;&#x5373;&#x53ef",{"_index":3481,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x63a5;&#x53e3;&#x53ea;&#x6709;&#x5f53;&#x6709;&#x4e24;&#x4e2a;&#x6216;&#x4e24;&#x4e2a;&#x4ee5;&#x4e0a;&#x7684;&#x5177;&#x4f53;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x4ee5;&#x76f8;&#x540c;&#x7684;&#x65b9;&#x5f0f;&#x8fdb;&#x884c;&#x5904;&#x7406;&#x65f6;&#x624d;&#x9700;&#x8981",{"_index":716,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x540d",{"_index":723,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x548c",{"_index":3492,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x63a5;&#x53e3;&#x552f;&#x4e00;&#x62e5;&#x6709;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":3498,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x63a5;&#x53e3;&#x5c31;&#x884c;&#x3002",{"_index":3483,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x63a5;&#x53e3;&#x6216;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#xff08;&#x5305;&#x62ec",{"_index":1819,"title":{},"body":{"basic/var.html#变量":{}}}],["x63a5;&#x53e3;&#x6765;&#x8bbe;&#x7f6",{"_index":3833,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x63a5;&#x53e3;&#x7684;&#x5b9e;&#x73b0;&#x7c7b;&#x578b;&#xff1a",{"_index":3500,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x63a5;&#x53e3;&#x7684;&#x5b9e;&#x9645;&#x7528;&#x9014",{"_index":762,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x7684;&#x7ec4;&#x5408;&#x3002",{"_index":3493,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x63a5;&#x53e3;&#x7684;&#x96f6;&#x503c;&#x5c31;&#x662f;&#x5b83;&#x7684;&#x7c7b;&#x578b;&#x548c;&#x503c;&#x7684;&#x90e8;&#x5206;&#x90fd;&#x662f",{"_index":717,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x7c7b",{"_index":782,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#x7c7b;&#x578b",{"_index":185,"title":{},"body":{"index.html#数据类型":{}}}],["x63a5;&#x53e3;&#x7c7b;&#x578b;&#x4e5f;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x7ec4;&#x5408;&#x5df2;&#x6709;&#x7684;&#x63a5;&#x53e3;&#x6765;&#x5b9a;&#x4e49;&#xff1a",{"_index":731,"title":{},"body":{"basic/interface.html#接口":{}}}],["x63a5;&#x53e3;&#xff0c;&#x662f;&#x56e0;&#x4e3a;&#x5b83;&#x4eec;&#x63d0;&#x4f9b;&#x4e86;&#x4ece;&#x67d0;&#x5904;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#x7684;&#x529f;&#x80fd;&#x3002;&#x7c7b;&#x4f3c;&#x7684;&#xff0c;&#x8bb8;&#x591a;&#x80fd;&#x591f;&#x628a;&#x6570;&#x636e;&#x5199;&#x5165;&#x67d0;&#x5904;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#xff0c;&#x4e5f;&#x90fd;&#x4f1a;&#x53bb;&#x5b9e;&#x73b0",{"_index":3485,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x63a5;&#x53e3;&#xff0c;&#x6700;&#x540e;&#x7684;&#x6267;&#x884c;&#x8005;&#x662f;&#x7cfb;&#x7edf;&#xff1b;&#x534f;&#x7a0b;&#x7684;&#x64cd;&#x4f5c;&#x6267;&#x884c;&#x8005;&#x5219;&#x662f;&#x7528;&#x6237;&#x81ea;&#x8eab;&#x7a0b;&#x5e8f;&#x3002",{"_index":4244,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x63a5;&#x53e3;&#xff0c;&#x800c;&#x4e14;&#x8fd8;&#x5b9e;&#x73b0;&#x4e86",{"_index":3513,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x63a5;&#x6536;&#x4e00;&#x4e2a;&#x7684;&#x5fc5;&#x5907;&#x53c2;&#x6570;&#xff0c;&#x4e4b",{"_index":2519,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x63a5;&#x6536;&#x6570;&#x636e;&#xff0c;&#x5f53",{"_index":2666,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x63a7;&#x5236;&#x8bed;&#x53e5",{"_index":520,"title":{"basic/flow.html#控制语句":{}},"body":{}}],["x63cf;&#x8ff0",{"_index":1742,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x63d0;&#x4f9b",{"_index":3226,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x63d0;&#x4f9b;&#x5207;&#x5206;&#x597d;&#x7684;&#x540e;&#x5907",{"_index":419,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x63d0;&#x4f9b;&#x7684;&#x5b89;&#x5168;&#x4fdd;&#x62a4;&#x3002",{"_index":5026,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x63d0;&#x4f9b;&#x7684;&#x9519;&#x8bef;&#x673a;&#x5236;&#xff0c;&#x800c;&#x4e0d;&#x662f",{"_index":951,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x641c;&#x7d22;&#x3002",{"_index":1567,"title":{},"body":{"basic/package.html#包":{}}}],["x642d;&#x5efa;&#x3002",{"_index":3639,"title":{},"body":{"theme/theme-usage.html#使用文档主题":{}}}],["x6444;&#x6c0f;&#x6e29;&#x5ea6",{"_index":277,"title":{},"body":{"index.html#自定义类型":{}}}],["x64a4;&#x9500;&#x4fe1;&#x53f7;&#x662f;&#x5982;&#x4f55;&#x5728;&#x4e0a;&#x4e0b;&#x6587;&#x6811;&#x4e2d;&#x4f20;&#x64ad;&#x7684",{"_index":5221,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x64cd;&#x4f5c",{"_index":4986,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x64cd;&#x4f5c;&#x3001;&#x6ca1;&#x6709;&#x963b;&#x585e;&#x5728;&#x4e00;&#x4e2a",{"_index":4552,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x3002",{"_index":4169,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x64cd;&#x4f5c;&#x4e0a;&#x65f6;&#xff0c;g",{"_index":4605,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x4e0a;&#xff0c;&#x90a3;&#x4e48",{"_index":4553,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x4e0a;&#xff0c;&#x90a3;&#x4e48;&#x4e0d;&#x5149",{"_index":4622,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x53d8;&#x91cf",{"_index":4422,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x64cd;&#x4f5c;&#x53ef;&#x4ee5;&#x4e0d;&#x505c;&#x5730;&#x68c0;&#x67e5;&#x67d0;&#x4e2a;&#x9700;&#x8981;&#x6ee1;&#x8db3;&#x7684;&#x6761;&#x4ef6;&#xff0c;&#x4e00;&#x65e6;&#x6761;&#x4ef6;&#x6ee1;&#x8db3;&#x5c31;&#x9000;&#x51fa",{"_index":4993,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x64cd;&#x4f5c;&#x5b8c;&#x6210;&#xff0c",{"_index":4615,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x6216",{"_index":4604,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x6a21;&#x5f0f;&#x7684;&#x4f7f;&#x7528;&#xff0c;os.create&#x51fd;&#x6570;&#x548c;os.open&#x51fd;&#x6570;&#x90fd;&#x662f;&#x73b0;&#x6210;&#x7684;&#x4f8b;&#x5b50;&#xff1a",{"_index":4151,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x64cd;&#x4f5c;&#x7528;&#x9014;&#x8981;&#x66f4;&#x5e7f;&#x6cdb;&#x4e00;&#x4e9b;&#x3002;&#x4f8b;&#x5982;&#xff0c;&#x6211;&#x4eec;&#x5c06;&#x5b83;&#x4e0",{"_index":4990,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x64cd;&#x4f5c;&#x7684;&#x5047;&#x8bbe;&#x5f80;&#x5f80;&#x662f;&#xff1a;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x72b6;&#x6001;&#x7684;&#x6539;&#x53d8;&#x5e76;&#x4e0d;&#x9891;&#x7e41;&#xff0c;&#x6216;&#x8005;&#xff0c;&#x5b83;&#x7684;&#x72b6;&#x6001;&#x603b;&#x4f1a;&#x53d8;&#x6210;&#x671f;&#x671b;&#x7684;&#x90a3;&#x6837;&#x3002;&#x8fd9;&#x662f;&#x4e00;&#x79cd;&#x66f4;&#x52a0;&#x4e50;&#x89c2;&#xff0c",{"_index":4999,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x64cd;&#x4f5c;&#x7b26;&#x8bbf;&#x95ee;&#x7ed3;&#x6784;&#x4f53;&#x6210;&#x5458",{"_index":1741,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x5bf9;&#x8fdb;&#x7a0b;&#x3001;&#x7ebf;&#x7a0b;&#x7684;&#x8c03;&#x5ea6;&#x662f;&#x6307;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x8c03;&#x5ea6;&#x5668;&#x5c06;&#x7cfb;&#x7edf;&#x4e2d;&#x7684;&#x591a;&#x4e2a;&#x7ebf;&#x7a0b;&#x6309;&#x7167;&#x4e00;&#x5b9a;&#x7b97;&#x6cd5;&#x8c03;&#x5ea6;&#x5230;&#x7269;&#x7406",{"_index":4462,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x5c42;&#x9762;&#xff0c;thread",{"_index":4509,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x64cd;&#x4f5c;&#x90fd;&#x9700;&#x8981;&#x7528;&#x5230;&#x8fd9;&#x4e2a;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x3002;&#x53ea;&#x4e0d;&#x8fc7;&#xff0c;go",{"_index":4126,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x64cd;&#x4f5c;&#xff0c",{"_index":4580,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["x652f;&#x6301;&#x63a5;&#x53e3;&#x6570;&#x636e;&#x7c7b;&#x578b;&#xff0c;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x662f;&#x4e00;&#x79cd;&#x62bd;&#x8c61;&#x7684;&#x7c7b;&#x578b;&#x3002;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x5177;&#x4f53;&#x63cf;&#x8ff0;&#x4e86;&#x4e00;&#x7cfb;&#x5217;&#x65b9;&#x6cd5;&#x7684;&#x96c6;&#x5408;&#xff0c;&#x4efb;&#x4f55;&#x5176;&#x4ed6;&#x7c7b;&#x578b;&#x53ea;&#x8981;&#x5b9e;&#x73b0;&#x4e86;&#x8fd9;&#x4e9b;&#x65b9;&#x6cd5;&#x5c31;&#x662f;&#x5b9",{"_index":714,"title":{},"body":{"basic/interface.html#接口":{}}}],["x652f;&#x6301;&#x8c03;&#x8bd5;&#x6a21;&#x5f0f;&#xff0c;&#x5199;&#x5165;&#x76f8;&#x5e94;&#x7684;cpufile&#x5230;&#x6307;&#x5b9a;&#x7684;&#x6587;&#x4ef6",{"_index":2999,"title":{},"body":{"commands/build.html#工具":{}}}],["x652f;&#x6301;&#x904d;&#x5386;&#x6570;&#x7ec4;&#xff0c;&#x5207;&#x7247;&#xff0c;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5b57;&#x5178;&#xff0c;&#x901a;&#x9053;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x7d22;&#x5f15;&#x548c;&#x952e;&#x503c;&#x3002",{"_index":564,"title":{},"body":{"basic/flow.html#for":{}}}],["x652f;&#x6301;&#x9762;&#x5411;&#x5bf9;&#x8c61;&#x7f16;&#x7a0b;&#x3002",{"_index":1113,"title":{},"body":{"basic/oop.html#面向对象":{}}}],["x6536;&#x56de;&#x56e0",{"_index":4599,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6536;&#x901a;&#x9053;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8fd9;&#x4e2a;&#x63a5;&#x6536;&#x901a;&#x9053;&#x7684;&#x7528;&#x9014;&#x5e76;&#x4e0d;&#x662f;&#x4f20;&#x9012;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x800c;&#x662f",{"_index":5213,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6539;&#x53d8;&#x4f1a;&#x4f53;&#x73b0;&#x5728",{"_index":1364,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x6539;&#x9020;&#x7248;&#x672c;&#xff1a",{"_index":5057,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x653e;&#x56de;&#x7ba1;&#x7406;&#x6570;&#x7ec4;&#x3002;&#x53e6;&#x5916;&#xff0c;&#x5206;&#x914d;&#x5668;&#x8fd8;&#x4f1a;&#x628a;&#x76f8;&#x90bb;&#x7684;&#x7a7a;&#x95f2;&#x7684",{"_index":410,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x6570;&#x503c;&#x7c7b;&#x578b",{"_index":3775,"title":{"basic/basic_data.html#数值类型":{}},"body":{}}],["x6570;&#x503c;&#x7c7b;&#x578b;&#xff1a",{"_index":1816,"title":{},"body":{"basic/var.html#变量":{}}}],["x6570;&#x636e",{"_index":179,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x6570;&#x636e;&#x5b58;&#x50a8;&#x4e2d;&#x4ecb;&#xff0c;&#x5b83;&#x4ecb;&#x4e8e;&#x5e95;&#x5c42;&#x8bfb;&#x53d6;&#x5668;&#x4e0e;&#x8bfb;&#x53d6;&#x65b9;&#x6cd5;&#x53ca;&#x5176;&#x8c03;&#x7528;&#x65b9;&#x4e4b;&#x95f4",{"_index":3526,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x6570;&#x636e;&#x6765;&#x6e90;&#x7684;&#x3001",{"_index":3477,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x6570;&#x636e;&#x6ca1;&#x6709;&#x88ab;&#x63a5;&#x6536;&#x800c;&#x88ab;&#x5361;&#x4f4f;&#x3002;&#x6cc4;&#x6f0f;&#x7684",{"_index":4455,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6570;&#x636e;&#x76ee;&#x7684;&#x5730;&#x3001",{"_index":3474,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x6570;&#x636e;&#x7c7b;&#x578b",{"_index":180,"title":{"index.html#数据类型":{}},"body":{}}],["x6570;&#x7ec4",{"_index":455,"title":{"basic/array.html#数组":{}},"body":{}}],["x6570;&#x7ec4;&#x3001;slic",{"_index":1843,"title":{},"body":{"basic/var.html#赋值":{}}}],["x6570;&#x7ec4;&#x4f20;&#x5165;&#x51fd;&#x6570",{"_index":479,"title":{"basic/array.html#数组传入函数":{}},"body":{}}],["x6570;&#x7ec4;&#x662f;&#x4e00;&#x4e2a;&#x7531;&#x56fa;&#x5b9a;&#x957f;&#x5ea6;&#x7684;&#x6307;&#x5b9a;&#x7c7b;&#x578b;&#x5143;&#x7d20;&#x7ec4;&#x6210;&#x7684;&#x5e8f;&#x5217;&#x3002;&#x6570;&#x7ec4;&#x7684;&#x957f;&#x5ea6;&#x5728;&#x7f16;&#x8bd1;&#x9636;&#x6bb5;&#x786e;&#x5b9a;&#x3002",{"_index":456,"title":{},"body":{"basic/array.html#数组":{}}}],["x6570;&#x91cf",{"_index":3285,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6570;&#x91cf;&#x4e3a",{"_index":3268,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6570;&#x91cf;&#x76f8;&#x5f53;&#x4e8e;&#x53ef;&#x4ee5;&#x540c;&#x65f6;&#x8fd0;&#x884c",{"_index":3271,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6570;&#x91cf;&#xff08;&#x8fd9;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x8c03;&#x7528;&#x8868;&#x8fb",{"_index":3292,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x6570;&#x91cf;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x5728;&#x8fd0;&#x884c",{"_index":3282,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6574;&#x578b",{"_index":3776,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x6587;&#x4ef6;&#x3002;&#x8fd9;&#x4e2a",{"_index":3653,"title":{},"body":{"theme/theme-usage.html#Index":{}}}],["x6587;&#x4ef6;&#x4e2d;&#x3002",{"_index":2383,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6587;&#x4ef6;&#x4e2d;&#xff0c;&#x6709;&#x4e09;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x51fd;&#x6570;&#xff1a",{"_index":3158,"title":{},"body":{"basic/test.html#测试":{}}}],["x6587;&#x4ef6;&#x4f1a;&#x5b89;&#x88c5;&#x5728",{"_index":2306,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x6587;&#x4ef6;&#x540d;.go",{"_index":2990,"title":{},"body":{"commands/build.html#工具":{}}}],["x6587;&#x4ef6;&#x5c31;&#x662f;&#x6587;&#x6863;&#x9996;&#x9875;&#x3002",{"_index":3654,"title":{},"body":{"theme/theme-usage.html#Index":{}}}],["x6587;&#x4ef6;&#x5c5e;&#x4e8e;&#x54ea;&#x4e2a;&#x5305;&#xff08;&#x7c7b;&#x4f3c;&#x5176;&#x4ed6;&#x8bed;&#x8a00;&#x7684",{"_index":196,"title":{},"body":{"index.html#package":{}}}],["x6587;&#x4ef6;&#x6839;&#x636e;&#x6587;&#x4ef6;&#x540d;&#x6392;&#x5e8f;&#xff0c;&#x7136;&#x540e;&#x4f9d;&#x6b21;&#x8c03;&#x7528;&#x7f16;&#x8bd1;&#x5668;&#x7f16;&#x8bd1;&#x3002",{"_index":1642,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x6587;&#x4ef6;&#x7684;&#x5185;&#x5bb9;&#x50cf;&#x4e0b;&#x9762;&#x8fd9;&#x6837;&#xff1a",{"_index":2384,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6587;&#x4ef6;&#x7ed3;&#x5c3e;&#x9519;&#x8bef",{"_index":935,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x6587;&#x4ef6;&#xff0c;&#x4f8b;&#x5982;&#xff1a",{"_index":3656,"title":{},"body":{"theme/theme-usage.html#添加文档":{}}}],["x6587;&#x672c;&#x3002",{"_index":3807,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65ad;&#x5f00;&#x5b83;&#x4e0e;&#x5176;&#x7236;&#x503c;&#x4e4b;&#x95f4;&#x7684;&#x5173;&#x8054;&#x3002",{"_index":5229,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x65ad;&#x8a00;&#x64cd;&#x4f5c;&#x5c31;&#x662f;&#x7528;&#x6765",{"_index":294,"title":{},"body":{"index.html#类型断言":{}}}],["x65ad;&#x8a00;&#xff0c;&#x987e;&#x540d;&#x601d;&#x4e49;&#x5c31;&#x662f;&#x679c;&#x65ad;&#x7684;&#x53bb;&#x731c;&#x6d4b;&#x4e00;&#x4e2a;&#x672a;&#x77e5;&#x7684;&#x4e8b;&#x7269;&#x3002;&#x5728",{"_index":291,"title":{},"body":{"index.html#类型断言":{}}}],["x65b0;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf",{"_index":3986,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b0;&#x5bb9;&#x91cf;&#x57fa;&#x51c6;&#x4f1a;&#x88ab;&#x8c03;&#x6574;&#xff08;&#x4e0d;&#x65ad;&#x5730;&#x4e0",{"_index":2100,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x65b9",{"_index":3299,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x65b9;&#x5411;&#x622a;&#x65ad;&#x4f59;&#x6570;&#x3002",{"_index":1880,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x65b9;&#x6cd5",{"_index":1114,"title":{"basic/oop.html#方法":{},"basic/oop.html#String-方法":{}},"body":{"basic/oop.html#String-方法":{}}}],["x65b9;&#x6cd5;&#x3001",{"_index":3582,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x3002",{"_index":761,"title":{},"body":{"basic/interface.html#接口":{},"packages/io.html#bufio包中的数据类型":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x3002;&#x53ef;&#x662f",{"_index":3968,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x3002;&#x6ce8;&#x610f;&#xff0c;&#x8fd9;&#x4e2a",{"_index":4885,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x4e00;&#x6837;&#xff0c",{"_index":3948,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x4e0d;&#x5148;&#x89e3;&#x9501;&#x4e92;&#x65a5;&#x9501;&#x7684;&#x8bdd;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x53ea;&#x4f1a;&#x9020;&#x6210;&#x4e24;&#x79cd;&#x540e;&#x679c;&#xff1a;&#x4e0d;&#x662f;&#x5f53;&#x524d;&#x7684;&#x7a0b;&#x5e8f;&#x56e0",{"_index":4933,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x4e0d;&#x9700",{"_index":1191,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x65b9;&#x6cd5;&#x4e2d;&#x624d;&#x4f1a;&#x88ab;&#x8d4b;&#x4e88;&#x6709;&#x610f;&#x4e49;&#x7684;&#x503c;&#x3002;&#x5728;&#x5176;&#x4ed6;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x5b83;&#x90fd;&#x4f1a;&#x88ab;&#x7f6e;&#x4e3a",{"_index":3541,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x4e3b;&#x8981;&#x505a;&#x4e86;&#x56db;&#x4ef6;&#x4e8b;&#x3002",{"_index":4899,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x4e4b;&#x524d;&#x6211;&#x4eec;&#x5fc5;&#x987b;&#x5148",{"_index":4914,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x79f0",{"_index":3901,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x4f1a;&#x4f9d;&#x8d56;&#x4e8e;&#x5b83;&#x7684",{"_index":3579,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x4f1a;&#x5728;&#x53c2;&#x6570;&#x503c;&#x7684;&#x957f;&#x5ea6;&#x8fc7;&#x5927;&#xff0c;&#x4e14;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x5df2;&#x65e0;&#x672a;&#x8bfb;&#x5b57;&#x8282;&#x65f6;&#xff0c;&#x8de8;&#x8fc7;&#x7f13;&#x51b2;&#x533a;&#x5e76;&#x76f4;&#x63a5;&#x5411;&#x5e95;&#x5c42;&#x8bfb;&#x53d6;&#x5668;&#x7d22;&#x8981;&#x6570;&#x636e;&#x3002",{"_index":3572,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x4f1a;&#x5728;&#x7f13;&#x51b2;&#x533a;&#x7684;&#x672a;&#x8bfb;&#x90e8;&#x5206;&#x4e2d;&#x5bfb;&#x627e;&#x7ed9;&#x5b9a;&#x7684;&#x5206;&#x9694;&#x7b26;&#xff0c;&#x5e76;&#x5728;&#x5fc5;&#x8981;&#x65f6;&#x5bf9;&#x7f13;&#x51b2;&#x533a;&#x8fdb;&#x884c;&#x586b;&#x5145;&#x3002;&#x5982;&#x679c;&#x5728;&#x586b;&#x6ee1;&#x7f13;&#x51b2;&#x533a;&#x4e4b;&#x540e;&#x4ecd;&#x7136;&#x672a;&#x80fd;&#x627e;&#x5230;&#x5206;&#x9694;&#x7b26;&#xff0c;&#x90a3;&#x4e48;&#x8be5;&#x65b9;&#x6cd5;&#x5c31;&#x4f1a;&#x628a;&#x6574;&#x4e2a;&#x7f13;&#x51b2;&#x533a;&#x4f5c;&#x4e3a;&#x7b2c;&#x4e00;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x8fd4;&#x56de;&#xff0c",{"_index":3574,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x4f1a;&#x628a;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x4e2d;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x589e;&#x52a0",{"_index":3905,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x4e3a",{"_index":5211,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x65b9;&#x6cd5;&#x4f1a;&#x8fd4;&#x56de;&#x7684;&#x90a3;&#x4e2a;&#x901a;&#x9053;&#x3002",{"_index":5227,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x65b9;&#x6cd5;&#x4f1a;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":3576,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x5199;&#x8fdb;&#x5199;&#x5165;&#x5668;&#x7684;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x4ec5;&#x4f1a;&#x5305;&#x542b",{"_index":3381,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65b9;&#x6cd5;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x5728;&#x6307;&#x5b9a;&#x7684;&#x5143;&#x7d20;&#x4e4b;&#x524d;&#x548c;&#x4e4b;&#x540e;&#x63d2;&#x5165;&#x65b0;&#x5143;&#x7d20",{"_index":2418,"title":{},"body":{"packages/container.html#container-包":{}}}],["x65b9;&#x6cd5;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x5bf9;&#x5176;&#x4e2d;&#x5199;&#x9501;&#x7684;&#x9501;&#x5b9a;&#x548c;&#x89e3;&#x9501;&#xff0c;&#x5b83;&#x4eec;&#x4e0",{"_index":4873,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x5bf9;&#x5199;&#x9501;&#x8fdb;&#x884c",{"_index":4801,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x65b9;&#x6cd5;&#x5219;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x5728;&#x94fe;&#x8868;&#x7684;&#x6700;&#x524d;&#x7aef;&#x548c;&#x6700;&#x540e;&#x7aef;&#x63d2;&#x5165;&#x65b0;&#x5143;&#x7d20;&#x3002",{"_index":2419,"title":{},"body":{"packages/container.html#container-包":{}}}],["x65b9;&#x6cd5;&#x5219;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x5bf9;&#x8bfb;&#x9501;&#x8fdb;&#x884c;&#x9501;&#x5b9a;&#x548c;&#x89e3;&#x9501;&#x3002",{"_index":4803,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x65b9;&#x6cd5;&#x5219;&#x5b8c;&#x5168;&#x4f9d;&#x8d56;&#x4e8e",{"_index":3581,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x53ea;&#x4f1a;&#x5728;&#x53c2;&#x6570;&#x51fd;&#x6570;&#x6267;&#x884c;&#x7ed3;&#x675f;&#x4e4b;&#x540e;&#x628a",{"_index":5111,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x53ea;&#x63a5;&#x53d7;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#xff0c;&#x8fd9;&#x4e2a;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x662f",{"_index":5085,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x8fd9;&#x4e00;&#x9700;&#x6c42;&#x3002",{"_index":4880,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x53ef;&#x4ee5;&#x7ed9;&#x51fa;&#x5185;&#x5bb9;&#x957f;&#x5ea6;&#x7684;&#x503c;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x7528;&#x5185;&#x5bb9;&#x957f;&#x5ea6;&#x51cf;&#x53bb;&#x672a;&#x8bfb;&#x90e8;&#x5206;&#x7684;&#x957f;&#x5ea6;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x5f88;&#x65b9;&#x4fbf;&#x5730;&#x5f97",{"_index":3964,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x53ef;&#x80fd;&#x4f1a;&#x4ece;&#x5f53;&#x524d;&#x7684;&#x6c60;&#x4e2d;&#x5220;&#x9664;&#x6389;&#x4efb;&#x4f55;&#x4e00;&#x4e2a;&#x503c;&#xff0c;&#x7136;&#x540e;&#x628a;&#x8fd9;&#x4e2a;&#x503c;&#x4f5c;&#x4e3a;&#x7ed3;&#x679c;&#x8fd4;&#x56de;&#x3002;&#x5982;&#x679c;&#x6b64;&#x65f6;&#x5f53;&#x524d;&#x7684;&#x6c60;&#x4e2d;&#x6ca1;&#x6709;&#x4efb;&#x4f55;&#x503c;&#xff0c",{"_index":5260,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x65b9;&#x6cd5;&#x540d",{"_index":724,"title":{},"body":{"basic/interface.html#接口":{},"basic/oop.html#方法":{}}}],["x65b9;&#x6cd5;&#x540d;1",{"_index":728,"title":{},"body":{"basic/interface.html#接口":{}}}],["x65b9;&#x6cd5;&#x540d;2",{"_index":730,"title":{},"body":{"basic/interface.html#接口":{}}}],["x65b9;&#x6cd5;&#x548c",{"_index":2410,"title":{},"body":{"packages/container.html#container-包":{},"packages/io.html#bufio包中的数据类型":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x5728;&#x4e00;&#x5f00;&#x59cb;&#x5c31;&#x4f1a;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":5105,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x5728;&#x4e92;&#x65a5;&#x9501;&#x5df2;&#x7ecf;&#x9501;&#x5b9a;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x963b;&#x585e;&#x4e86;&#x5f53;&#x524d;&#x7684",{"_index":4919,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x5728;&#x529f;&#x80fd;&#x65b9;&#x9762;&#x7684;&#x4e24;&#x4e2a;&#x7279;&#x70b9",{"_index":5110,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x5728;&#x53c2;&#x6570;&#x51fd;&#x6570;&#x6267;&#x884c;&#x7ed3;&#x675f;&#x540e;&#xff0c;&#x5bf9",{"_index":5116,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x5728;&#x8fd9;&#x91cc;&#x610f;&#x5473;&#x7684;&#x662f;&#xff1a;&#x6301;&#x6709;&#x4fe1;&#x7bb1;&#x4e0a;&#x7684;&#x9501;&#xff0c;&#x5e76;&#x4e14;&#x6709;&#x6253;&#x5f00;&#x4fe1;&#x7bb1;&#x7684;&#x6743;&#x5229;&#xff0c",{"_index":4886,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x5728;&#x963b;&#x585e;&#x5f53;&#x524d;&#x7684",{"_index":4912,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x58f0;&#x660e;&#xff1a",{"_index":1115,"title":{},"body":{"basic/oop.html#方法":{}}}],["x65b9;&#x6cd5;&#x5982;&#x679c;&#x5230;&#x4e86;&#x6700;&#x540e;&#xff0c;&#x4ecd;&#x7136;&#x65e0;&#x6cd5;&#x83b7;&#x53d6;&#x5230;&#x4e00;&#x4e2a;&#x503c;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x4f1a;&#x8c03;&#x7528;&#x8be5;&#x51fd;&#x6570;&#x3002;&#x8be5;&#x51fd;&#x6570;&#x7684;&#x7ed3",{"_index":5267,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x65b9;&#x6cd5;&#x5b9e;&#x73b0",{"_index":729,"title":{},"body":{"basic/interface.html#接口":{}}}],["x65b9;&#x6cd5;&#x5c31;&#x4e00;&#x5b9a;&#x4f1a;&#x88ab;&#x8c03;&#x7528",{"_index":3567,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x5c31;&#x53ef;&#x4ee5;&#x505a;&#x5230;&#x3002",{"_index":3900,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x5c31;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x8fd9;&#x4e00;&#x6b65;&#x9aa4;&#x3002",{"_index":4893,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x5c31;&#x76f8;&#x5f53;&#x4e8e;&#x5176;&#x4ed6;&#x7c7b;&#x578b;&#x503c;&#x7684",{"_index":760,"title":{},"body":{"basic/interface.html#接口":{}}}],["x65b9;&#x6cd5;&#x5f97;&#x5230;&#x7684;&#x7ed3;&#x679c;&#x503c",{"_index":4001,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x603b;&#x4f1a;&#x4ece;&#x901a;&#x77e5;&#x961f;&#x5217;&#x7684;&#x961f;&#x9996;&#x5f00;&#x59cb;&#x67e5;&#x627e;&#x53ef;&#x88ab",{"_index":4953,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x603b;&#x4f1a;&#x628a;&#x5f53;&#x524d;&#x7684",{"_index":4951,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x6210",{"_index":1208,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x65b9;&#x6cd5;&#x63d0;&#x4f9b;&#x7684;&#x662f;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#xff0c;&#x4e5f;&#x4e0d;&#x662f;&#x5185;&#x5bb9;&#x957f;&#x5ea6;&#x3002",{"_index":3969,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x65f6;&#xff0c;&#x5c31;&#x4f1a;&#x5f15;&#x53d1;&#x4e00;&#x4e2a;&#x4e0d;&#x53ef;&#x6062;&#x590d;&#x7684",{"_index":4916,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x6700;&#x540e;&#x7684;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x83b7;&#x53d6;&#x624b;&#x6bb5;&#x3002",{"_index":5266,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x65b9;&#x6cd5;&#x6709;&#x4e00;&#x4e2a;&#x9c9c;&#x660e;&#x7684;&#x7279;&#x70b9;&#xff0c;&#x90a3;&#x5c31;&#x662f;&#xff1a;&#x5373;&#x4f7f;&#x5b83;&#x8bfb;&#x53d6;&#x4e86;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x7684;&#x6570;&#x636e;&#xff0c;&#x4e5f;&#x4e0d;&#x4f1a;&#x66f4;&#x6539;&#x5df2;&#x8bfb;&#x8ba1;&#x6570;&#x7684;&#x503c;&#x3002",{"_index":3573,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x6709;&#x4e24;&#x4e2a;&#x53c2;&#x6570;&#xff0c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x5c31;&#x662f;&#x6211;&#x4eec;&#x521a;&#x521a;&#x63d0;&#x5230;&#x7684;&#x5199;&#x5165;&#x5668;&#xff0c;&#x5b83;&#x662f",{"_index":3375,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65b9;&#x6cd5;&#x6709;&#x54ea;&#x4e9b;&#x5f02;&#x540c",{"_index":4948,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x6709;&#x65f6;&#x5019;&#x4f1a;&#x5728;&#x628a;&#x6570;&#x636e;&#x5199;&#x8fdb;&#x7f13;&#x51b2;&#x533a;&#x4e4b;&#x540e;&#xff0c;&#x8c03;&#x7528",{"_index":3561,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x6765;&#x589e;&#x52a0;&#xff0c;&#x6216;&#x8005;&#x51cf;&#x5c11;&#x8fd9;&#x4e2a;&#x8ba1;&#x6570;&#x5668;&#x7684;&#x503c",{"_index":5046,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x65b9;&#x6cd5;&#x7684;&#x4ee3;&#x7801;&#xff0c;&#x653e;&#x5728;&#x4e0d;&#x540c;&#x7684",{"_index":5077,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x65b9;&#x6cd5;&#x7684;&#x529f;&#x80fd;&#x662f;&#xff0c;&#x963b;&#x585e;&#x5f53;&#x524d;&#x7684",{"_index":5055,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x65b9;&#x6cd5;&#x7684;&#x540c;&#x65f6;&#xff0c;&#x4e3a;&#x4e86;&#x589e;&#x5927;&#x5176;&#x8ba1;&#x6570;&#x5668;&#x7684;&#x503c;&#xff0c;&#x800c;&#x5e76;&#x53d1;&#x5730;&#x8c03;&#x7528;&#x8be5;&#x503c;&#x7684",{"_index":5127,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x65b9;&#x6cd5;&#x7684;&#x63a5;&#x6536;&#x8005;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x662f;&#x67d0;&#x4e2a;&#x81ea;&#x5b9a;&#x4e49;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#xff0c;&#x800c;&#x4e14;&#x4e0d;&#x80fd;&#x662f;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x6216;&#x63a5;&#x53e3;&#x7684;&#x6307;&#x9488;&#x7c7b;&#x578b",{"_index":1152,"title":{},"body":{"basic/oop.html#方法":{}}}],["x65b9;&#x6cd5;&#x7684;&#x7279;&#x70b9;&#x662f;&#x5373;&#x4f7f;&#x8bfb;&#x53d6;&#x4e86;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x7684;&#x6570;&#x636e;&#xff0c;&#x4e5f;&#x4e0d;&#x4f1a;&#x66f4;&#x6539;&#x5df2;&#x8bfb;&#x8ba1;&#x6570;&#x7684;&#x503c;&#x3002;&#x800c",{"_index":3571,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x7684;&#x884c;&#x4e3a;&#x4e0e;&#x4e4b;&#x7c7b;&#x4f3c;&#x3002",{"_index":3563,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#x7684;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x7528",{"_index":4938,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x7684;&#x8c03;&#x7528;&#x3002",{"_index":1161,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x65b9;&#x6cd5;&#x7684;&#x8c03;&#x7528;&#x65b9;&#x3002",{"_index":5269,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x65b9;&#x6cd5;&#x7684;&#x901a;&#x77e5;&#x800c;&#x88ab;&#x5524;&#x9192;&#x7684",{"_index":4956,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x7684;&#x90a3;&#x884c;&#x4ee3;&#x7801;&#x4e0a;&#x3002",{"_index":4907,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x7684;&#x90a3;&#x884c;&#x4ee3;&#x7801;&#x4e0a;&#x3002;&#x76f4;&#x5230;&#x8be5;&#x4e92;&#x65a5;&#x9501;&#x7684",{"_index":4825,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x65b9;&#x6cd5;&#x7684;&#x9996;&#x6b21;&#x8c03;&#x7528;&#x5b8c;&#x6210;&#xff0c;&#x5b83;&#x7684;&#x503c;&#x5c31;&#x4f1a;&#x4ec",{"_index":5099,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x88ab;&#x6267;&#x884c;&#x671f;&#x95f4;&#xff0c;&#x8de8;&#x8d8a;&#x4e86;&#x4e24;&#x4e2a;&#x8ba1;&#x6570;&#x5468;&#x671f;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x4f1a;&#x5f15;&#x53d1;&#x4e00;&#x4e2a",{"_index":5074,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x65b9;&#x6cd5;&#x88ab;&#x8c03;&#x7528;&#x7684;&#x6b21;&#x6570;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8be5;&#x5b57;&#x6bb5;&#x7684;&#x503c",{"_index":5096,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#x88ab;&#x8c03;&#x7528;&#xff0c;&#x5e76;&#x4e14;&#x8fd9;&#x91cc;&#x7684;&#x9501;&#x5b9a;&#x64cd;&#x4f5c;&#x6210;&#x529f;&#x5b8c;&#x6210;&#xff0c;&#x540e;&#x7eed;&#x7684;&#x4ee3;&#x7801",{"_index":4826,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x65b9;&#x6cd5;&#x8981;&#x8fd9;&#x4e48;&#x505a;&#x5462;&#xff1f;&#x4f60;&#x53ef;&#x4ee5;&#x60f3;&#x8c61;&#x4e00;&#x4e0b;&#xff0c;&#x5982;&#x679c",{"_index":4918,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x8c03;&#x7528;&#x7684;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x5c31;&#x4f1a;&#x88ab",{"_index":3302,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x65b9;&#x6cd5;&#x8f93;&#x51fa;&#x7684;&#x8fd9;&#x4e9b;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x5c31;&#x662f;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8bfb;&#x61c2",{"_index":3389,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65b9;&#x6cd5;&#x8fd4;&#x56de;&#x7684;&#x4e5f;&#x662f;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x4e2d;&#x672a;&#x88ab;&#x8bfb;&#x53d6;&#x90e8;&#x5206;&#x7684;&#x957f;&#x5ea6;&#xff0c",{"_index":3949,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x8fd4;&#x56de;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x53d8;&#x4e3a;&#x4e86",{"_index":3956,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x90fd;&#x53ef;&#x80fd;&#x4f1a;&#x9020;&#x6210;&#x5185;&#x5bb9;&#x7684;&#x6cc4;&#x9732",{"_index":3992,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65b9;&#x6cd5;&#x90fd;&#x662f;&#x88ab;&#x7528;&#x6765;&#x53d1;&#x9001;&#x901a;&#x77e5;&#x7684;&#xff0c;&#x4e0d;&#x540c;&#x7684;&#x662f;&#xff0c;&#x524d;&#x8005;&#x7684;&#x901a;&#x77e5;&#x53ea;&#x4f1a;&#x5524;&#x9192;&#x4e00;&#x4e2a;&#x56e0;&#x6b64;&#x800c;&#x7b49;&#x5f85;&#x7684",{"_index":4949,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#x90fd;&#x6709;&#x53ef;&#x80fd;&#x4f1a;&#x9020;&#x6210;&#x5185;&#x5bb9;&#x6cc4;&#x9732;&#x3002;&#x8fd9;&#x4e3b;&#x8981;&#x662f;&#x56e0;&#x4e3a;&#x5b83;&#x4eec;&#x5728;&#x6b63;&#x5e38;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#x90fd;&#x4f1a;&#x8fd4;&#x56de;&#x76f4;&#x63a5;&#x57fa;&#x4e8e;&#x7f13;&#x51b2;&#x533a;&#x7684;&#x5b57;&#x8282;&#x5207;&#x7247",{"_index":3583,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#xff0c",{"_index":3373,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x4e00;&#x6b21;&#x53c8;&#x4e00;&#x6b21;&#x5730;&#x586b;&#x5145;&#x7f13;&#x51b2;&#x533a;&#xff0c;&#x5e76;&#x5728;&#x5176;&#x4e2d;&#x5bfb;&#x627e;&#x5206;&#x9694;&#x7b26;&#x3002;&#x9664;&#x975e;&#x53d1;&#x751f;&#x4e86;&#x672a;&#x9884;&#x6599;&#x5230;&#x7684;&#x9519;&#x8bef;&#x6216;&#x8005;&#x627e;&#x5230;&#x4e86;&#x5206;&#x9694;&#x7b26;&#xff0c;&#x5426;&#x5219;&#x8fd9;&#x4e00;&#x8fc7;&#x7a0b;&#x5c06;&#x4f1a;&#x4e00;&#x76f4;&#x8fdb;&#x884c;&#x4e0b;&#x53bb;&#x3002",{"_index":3577,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x4ee5;&#x4fbf;&#x4e3a;&#x540e;&#x7eed;&#x7684;&#x65b0;&#x6570;&#x636e;&#x817e;&#x51fa;&#x7a7a;&#x95f4;&#x3002",{"_index":3562,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x628a;&#x7ed9;&#x5b9a;&#x7684;&#x5143;&#x7d20;&#x79fb;&#x52a8;&#x5230;&#x94fe;&#x8868;&#x7684;&#x6700;&#x524d;&#x7aef;&#x548c;&#x6700;&#x540e;&#x7aef;&#x3002",{"_index":2412,"title":{},"body":{"packages/container.html#container-包":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x53ea;&#x4f1a;&#x6267;&#x884c;&#x9996;&#x6b21;&#x88ab;&#x8c03;&#x7528;&#x65f6;&#x4f20;&#x5165;&#x7684;&#x51fd;&#x6570;&#x201d;&#x3002",{"_index":5109,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x53ea;&#x80fd;&#x591f;&#x8bfb;&#x53d6;&#x539f;&#x59cb;&#x6570;&#x636e;&#x4e2d;&#x7684;&#x67d0;&#x4e00;&#x4e2a;&#x90e8;&#x5206;&#xff08;&#x6216;&#x8005;&#x8bf4;&#x67d0;&#x4e00;&#x6bb5;&#xff09;&#x3002",{"_index":3505,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5b83;&#x4eec;&#x5206;&#x522b;&#x7528;&#x4e8e;&#x628a;&#x7ed9;&#x5b9a;&#x7684;&#x5143;&#x7d20;&#x79fb;&#x52a8;&#x5230;&#x53e6;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x7684;&#x524d;&#x9762;&#x548c;&#x540e;&#x9762;&#x3002",{"_index":2411,"title":{},"body":{"packages/container.html#container-包":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5e76;&#x518d;&#x6b21;&#x88ab;&#x963b;&#x585e;&#x3002",{"_index":4931,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5e76;&#x7ee7;&#x7eed;&#x7b49;&#x5f85;&#x4e0b;&#x6b21;&#x901a;&#x77e5;&#x7684;&#x5230;&#x6765;&#x3002",{"_index":4946,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x5f97;&#x5230;&#x786e;&#x5207;&#x7684;&#x5224;&#x65ad;&#x7ed3;&#x679c;&#x3002",{"_index":5320,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x7528;&#x4e8e;&#x5bf9;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x4e2d;&#x8ba1;&#x6570;&#x5668",{"_index":5049,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x800c;&#x5176",{"_index":3580,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x5f88;&#x53ef;&#x80fd;&#x4f1a;&#x5f15;&#x53d1",{"_index":5128,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x65b9;&#x6cd5;&#xff0c;&#x90fd;&#x4f1a;&#x5728;&#x53d1;&#x73b0;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x7684;&#x53ef;&#x5199;&#x7a7a;&#x95f4;&#x4e0d;&#x8db3;&#x4ee5;&#x5bb9;&#x7eb3;&#x65b0;&#x7684;&#x5b57;&#x8282;&#xff0c;&#x6216",{"_index":3564,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x65b9;&#x6cd5;&#xff1f",{"_index":4898,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65b9;&#x9762;&#x975e;&#x5e38;&#x7684;&#x76f8;&#x4f3c;&#x3002;&#x5355;&#x4ece;&#x5b83;&#x4eec;&#x63d0;&#x4f9b;&#x7684;&#x51fd;&#x6570;&#x7684;&#x6570;&#x91cf;&#x548c;&#x529f;&#x80fd;&#x4e0a;&#x8bb2;&#xff0c;&#x5dee;&#x522b;&#x5fae;&#x4e4e;&#x5176;&#x5fae;&#x3002",{"_index":3931,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x65e0;&#x6cd5;&#x63a5;&#x6536;&#x4e86;&#x3002;&#x8fd9;&#x65f6;&#x5019;&#x5c31;&#x9700;&#x8981;&#x4f7f;&#x7528",{"_index":2757,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x65e0;&#x6cd5;&#x786e;&#x5b9a;&#x65f6;&#xff0c;&#x4f7f;&#x7528",{"_index":1151,"title":{},"body":{"basic/oop.html#方法":{}}}],["x65e0;&#x6cd5;&#x8131;&#x79bb",{"_index":2362,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x65e0;&#x6cd5;&#x89e3;&#x9501;&#xff0c;&#x522b;&#x7684",{"_index":4927,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x65e0;&#x7f13;&#x5b58",{"_index":2679,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x65e0;&#x8bba;&#x4efb;&#x4f55;&#x65f6;&#x5019;&#xff0c;&#x53ea;&#x8981;&#x6709;&#x4e24;&#x4e2a;&#x4ee5;&#x4e0a",{"_index":4769,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x65e0;&#x8bba;&#x51fd;&#x6570;&#x662f;&#x5426;&#x51fa;&#x9519",{"_index":2551,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x65e0;&#x8bba;&#x51fd;&#x6570;&#x7ed3;&#x675f;&#x6267;&#x884c;&#x7684;&#x539f;&#x56e0;&#x662f;&#x4ec0;&#x4e48;&#xff0c;&#x5176;&#x4e2d;&#x7684",{"_index":1040,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x65e0;&#x8bba;&#x6211;&#x518d;&#x5bf9",{"_index":5024,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x65e0;&#x9700;&#x663e;&#x5f0f;&#x5730;&#x8c03;&#x7528;&#x5b83;&#x7684",{"_index":1205,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x65e0;&#x9700;&#x7ed1;&#x5b9a",{"_index":4583,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x65e2;&#x7136",{"_index":5100,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x65e7;&#x7684;gotest&#x6587;&#x4ef6;&#xff0c;&#x7531;makefiles&#x9057;&#x7559",{"_index":2973,"title":{},"body":{"commands/build.html#工具":{}}}],["x65e7;&#x7684;object&#x76ee;&#x5f55;&#xff0c;&#x7531;makefiles&#x9057;&#x7559",{"_index":2971,"title":{},"body":{"commands/build.html#工具":{}}}],["x65e7;&#x7684;test&#x76ee;&#x5f55;&#xff0c;&#x7531;makefiles&#x9057;&#x7559",{"_index":2972,"title":{},"body":{"commands/build.html#工具":{}}}],["x65e7;&#x7684;test&#x8bb0;&#x5f55;&#xff0c;&#x7531;makefiles&#x9057;&#x7559",{"_index":2974,"title":{},"body":{"commands/build.html#工具":{}}}],["x65f6;&#x4e0d;&#x4f1a;&#x88ab;&#x6784;&#x5efa;&#x6210;&#x5305;&#x7684;&#x4e00;&#x90e8;&#x5206;&#xff0c",{"_index":3155,"title":{},"body":{"basic/test.html#测试":{}}}],["x65f6;&#x4f1a;&#x8c03;&#x7528",{"_index":1009,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x65f6;&#x4f7f;&#x7528;&#xff0c;&#x6bd4;&#x5982;&#x6211;&#x4eec;&#x8981;&#x5c06",{"_index":257,"title":{},"body":{"index.html#类型转换":{}}}],["x65f6;&#x662f;&#x76f8;&#x7b49;&#x7684;&#x3002",{"_index":1301,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x65f6;&#x7684;&#x6982;&#x8981;&#x4fe1;&#x606f;&#xff0c",{"_index":3385,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65f6;&#x901a;&#x8fc7;&#x7b2c;&#x4e8c;&#x4e2a;&#x53c2;&#x6570;&#x6307;&#x5b9a;&#x961f;&#x5217;&#x7684;&#x6700;&#x5927;&#x5bb9;&#x91cf;&#x3002",{"_index":2697,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x65f6;&#x949f;&#x548c",{"_index":4340,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x65f6;&#x95f4;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":3214,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x65f6;&#xff0c;&#x53e6;&#x4e00;&#x4e2a",{"_index":4814,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x65f6;&#xff0c;&#x5982;&#x679c;&#x6ca1;&#x6709;&#x627e;&#x5230;&#x5927;&#x5c0f;&#x5408;&#x9002;&#x7684;&#xff0c;&#x90a3;&#x4e48;&#x4f1a;&#x9009;&#x62e9;&#x9875;&#x6570;&#x66f4;&#x591a;&#x7684",{"_index":404,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x65f6;&#xff0c;&#x76f8;&#x5e94;&#x7684;&#x5305;&#x540d;&#x3001;&#x51fd;&#x6570;&#x540d;&#x3001;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x8def;&#x5f84;&#x3001;&#x4ee3;&#x7801;&#x884c;&#x53f7;&#x7b49;&#x4fe1;&#x606f;&#x5c31;&#x90fd;&#x4f1a;&#x4f5c;&#x4e3a;&#x6ce8;&#x91ca;&#x88ab;&#x52a0;&#x5165;&#x8fdb;&#x53bb;&#x3002;&#x53e6;&#x5916;&#xff0c",{"_index":3384,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65f6;&#xff0c;&#x901a;&#x8fc7",{"_index":3380,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x65f6;&#xff0c;&#x90a3;&#x4e2a;&#x5f53;&#x6b21;&#x8fed;&#x4ee3;&#x7684;&#x5e8f;&#x53f7;&#x3002",{"_index":4443,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x65f6;&#xff0c;&#x9996;&#x5148;&#x8ba1;&#x7b97;&#x51fa;&#x6240;&#x6709;&#x53f3;&#x503c;&#xff0c;&#x7136;&#x540e;&#x518d;&#x4f9d;&#x6b21;&#x8d4b;&#x503c;&#xff1a",{"_index":1855,"title":{},"body":{"basic/var.html#赋值":{}}}],["x65f6;&#xff0c;&#x9ed8;&#x8ba4;&#x4f1a;&#x5c06",{"_index":2340,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x65f6;&#xff0c;go",{"_index":2097,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x65f6;,&#x6bcf;&#x4e2a",{"_index":4225,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x662f",{"_index":303,"title":{},"body":{"index.html#类型断言":{},"index.html#编码":{},"advance/gc.html#垃圾回收":{},"basic/error.html#Panic-异常":{},"basic/error.html#Recover-捕获异常":{},"basic/map.html#map":{},"concurrent/channel.html#channel":{},"basic/test.html#基准测试":{},"packages/io.html#io包中的接口和工具":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x662f;&#x4e00;&#x4e2a;&#x4fe1;&#x7bb1;&#xff0c;&#x5982;&#x679c;&#x5728;&#x653e;&#x7f6e;&#x7684;&#x65f6;&#x5019;&#x53d1;&#x73b0;&#x4fe1;&#x7bb1;&#x91cc;&#x8fd8;&#x6709;&#x672a;&#x88ab;&#x53d6;&#x8d70;&#x7684;&#x60c5;&#x62a5;&#xff0c;&#x90a3;&#x5c31;&#x4e0d;&#x518d;&#x653e;&#x7f6e;&#xff0c;&#x800c;&#x5148;&#x8fd4;&#x56de;&#x3002;&#x53e6;&#x4e00;&#x65b9;&#x9762;&#xff0c;&#x5982;&#x679c;&#x4f60;&#x5728;&#x83b7;&#x53d6;&#x7684;&#x65f6;&#x5019;&#x53d1;&#x73b0;&#x4fe1",{"_index":4883,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x662f;&#x4e00;&#x4e2a;&#x5207;&#x7247;,&#x90a3;&#x4e48;&#x8fed;&#x4ee3;&#x53d8;&#x91cf;&#x5c31;&#x53ef;&#x4ee5",{"_index":589,"title":{},"body":{"basic/flow.html#for":{}}}],["x662f;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x5207;&#x7247;&#x3002;&#x6211;&#x4eec;&#x6253;&#x5370;&#x770b;&#x4e00;&#x4e0b;&#xff1a",{"_index":210,"title":{},"body":{"index.html#os-Args":{}}}],["x662f;&#x4e00;&#x4e2a;&#x65e0;&#x5e8f;&#x7684",{"_index":1930,"title":{},"body":{"basic/map.html#map":{}}}],["x662f;&#x4e00;&#x4e2a;&#x7279;&#x6b8a;&#x7684;&#x5305;&#xff0c",{"_index":1579,"title":{},"body":{"basic/package.html#main":{}}}],["x662f;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x4e3a",{"_index":4867,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x662f;&#x4e00;&#x4e2a;&#x9ed1;&#x767d;&#x7535;&#x5f71;&#xff0c",{"_index":1481,"title":{},"body":{"basic/json.html#序列化":{}}}],["x662f;&#x4e00;&#x79cd;&#x53ef;&#x53d8;&#x5bbd;&#x7684;&#x7f16;&#x7801;&#x65b9;&#x6848",{"_index":364,"title":{},"body":{"index.html#编码":{}}}],["x662f;&#x4e00;&#x7ec4",{"_index":719,"title":{},"body":{"basic/interface.html#接口":{}}}],["x662f;&#x4e0d;&#x4e00;&#x6837;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#xff0c;&#x4f46;&#x662f;&#x53ef;&#x4ee5;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a",{"_index":781,"title":{},"body":{"basic/interface.html#接口":{}}}],["x662f;&#x4e2a;&#x672a;&#x77e5;&#x7c7b;&#x578b;&#xff0c;&#x5728;&#x7f16;&#x8bd1;&#x65f6;&#x65e0;&#x6cd5;&#x786e;&#x5b9a;&#xff0c;&#x6240;&#x4ee5;&#x7c7b;&#x578b;&#x65ad;&#x8a00;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x786e;&#x5b9a;&#x3002",{"_index":298,"title":{},"body":{"index.html#类型断言":{}}}],["x662f;&#x503c;&#xff0c;&#x90a3;&#x4e48;&#x6309;&#x7167;&#x4f20;&#x503c;&#x7684;&#x65b9;&#x5f0f",{"_index":1349,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x662f;&#x5168;&#x5c40;&#x4f5c;&#x7528;&#x57df",{"_index":2125,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x662f;&#x5176;&#x4ed6",{"_index":1023,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x662f;&#x5206;&#x53f7",{"_index":2336,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x662f;&#x5207;&#x7247;&#x7684;&#x4e0b;&#x6807;&#xff0c;&#x5f53",{"_index":575,"title":{},"body":{"basic/flow.html#for":{}}}],["x662f;&#x52a8;&#x6001;&#x7684;&#xff0c",{"_index":2051,"title":{},"body":{"basic/slice.html#slice":{}}}],["x662f;&#x53d6;&#x5730;&#x5740;&#x64cd;&#x4f5c;&#xff0c",{"_index":1288,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x662f;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x4f7f;&#x7528",{"_index":771,"title":{},"body":{"basic/interface.html#接口":{}}}],["x662f;&#x5426;&#x5305;&#x542b",{"_index":3842,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x662f;&#x5426;&#x5df2;&#x7ecf;&#x5728;&#x8fd0;&#x884c;&#x4e86;&#x3002",{"_index":4378,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x662f;&#x5426;&#x5df2;&#x7ecf;&#x6267;&#x884c;&#x3002",{"_index":4815,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x662f;&#x5426;&#x5e94;&#x8be5;&#x88ab;&#x6062;&#x590d;&#x3002",{"_index":1014,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x662f;&#x5426;&#x8fd0;&#x884c;&#x4e86;&#x8f83;&#x957f;&#x65f6;&#x95f4;&#x3002;&#x8be5",{"_index":4582,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x662f;&#x57fa;&#x4e8",{"_index":4155,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x662f;&#x5bf9;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x4e00;&#x4e2a;&#x8fde;&#x7eed;&#x7247;&#x6bb5;&#x7684;&#x5f15;&#x7528;&#xff0c;&#x6240;&#x4ee5;&#x5207;&#x7247;&#x662f;&#x4e00;&#x4e2a;&#x5f15;&#x7528;&#x7c7b;&#x578b",{"_index":2054,"title":{},"body":{"basic/slice.html#slice":{}}}],["x662f;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x7684;&#x3002",{"_index":3938,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x662f;&#x5f15;&#x7528;&#x7c7b;&#x578b",{"_index":1932,"title":{},"body":{"basic/map.html#map":{}}}],["x662f;&#x5fc5;&#x987b;&#x7684;&#xff0c;&#x5982;&#x679c;&#x6ca1;&#x6709;&#xff0c;&#x90a3;&#x5c31;&#x662f;&#x5207;&#x7247;&#x4e86;&#x3002",{"_index":473,"title":{},"body":{"basic/array.html#数组":{}}}],["x662f;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x8fd8;&#x662f;&#x975e;&#x6307;&#x9488;&#x7c7b;&#x578b;&#xff0c;&#x90fd;&#x662f;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x6307;&#x9488;/&#x975e;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x8fdb;&#x884c;&#x8c03;&#x7528;&#x7684;&#xff0c;&#x7f16;&#x8bd1;&#x5668;&#x4f1a;&#x5e2e;&#x4f60;&#x505a;&#x7c7b;&#x578b;&#x8f6c;&#x6362",{"_index":1138,"title":{},"body":{"basic/oop.html#方法":{}}}],["x662f;&#x6570;&#x7ec4;&#x7684;&#x957f;&#x5ea6;&#x5e76;&#x4e14;&#x4e5f;&#x662f;&#x5207;&#x7247;&#x7684;&#x521d;&#x59cb;&#x957f;&#x5ea6",{"_index":2068,"title":{},"body":{"basic/slice.html#slice":{}}}],["x662f;&#x65ad;&#x8a00;&#x7684;&#x7c7b;&#x578b;&#x3002",{"_index":307,"title":{},"body":{"index.html#类型断言":{}}}],["x662f;&#x65e0;&#x5e8f;&#x7684;&#xff0c;&#x6bcf;&#x6b21;&#x6253;&#x5370;&#x51fa;&#x6765;&#x7684",{"_index":1952,"title":{},"body":{"basic/map.html#map":{}}}],["x662f;&#x6ca1;&#x6709;&#x53c2;&#x6570;&#x4e5f;&#x6ca1;&#x6709;&#x8fd4;&#x56de;&#x503c;&#x7684;&#x51fd;&#x6570;&#x7c7b;&#x578b",{"_index":2541,"title":{},"body":{"basic/function.html#闭包":{}}}],["x662f;&#x7a7a;&#x767d;&#x6807;&#x8bc6;&#x7b26;&#xff0c;&#x4e0d;&#x80fd;&#x88ab;&#x8bbf;&#x95ee;&#x3002",{"_index":1603,"title":{},"body":{"basic/package.html#点操作":{}}}],["x662f;&#x7a7a;&#x7684;&#xff0c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x5c06;&#x963b;&#x585e;&#x76f4;&#x5230;&#x6709;&#x53e6;&#x4e00;&#x4e2a",{"_index":2705,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x662f;&#x82f1;&#x6587;&#x201c;american",{"_index":327,"title":{},"body":{"index.html#编码":{}}}],["x662f;&#x88ab;&#x62a2;&#x5360;&#x8c03;&#x5ea6;&#x7684;&#x3002",{"_index":4558,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x662f;&#x89e3;&#x6790;&#x6240;&#x6709;&#x7684;&#x5305;&#x5f15;&#x7528;&#xff0c;&#x7136;&#x540e;&#x5728",{"_index":2358,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x662f;&#x975e;&#x7ebf;&#x7a0b;&#x5b89;&#x5168;&#xff0c;&#x6027;&#x80fd;&#x4e0a;&#x548c",{"_index":3837,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x662f;os&#x4ee3;&#x7801;&#x5305;&#x4e2d;&#x7684",{"_index":4078,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x663e;&#x5f0f;&#x5730;&#x5173;&#x95ed;&#x4fe1;&#x9053",{"_index":2678,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x663e;&#x7136;&#xff0c;&#x5f53",{"_index":3873,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x663e;&#x793a;&#x683c;&#x5f0f;&#x5316;&#x524d;&#x540e;&#x7684;diff&#x800c;&#x4e0d;&#x662f;&#x5199;&#x5165;&#x6587;&#x4ef6;&#xff0c;&#x9ed8;&#x8ba4;&#x662f",{"_index":2997,"title":{},"body":{"commands/build.html#工具":{}}}],["x663e;&#x793a;&#x90a3;&#x4e9b;&#x9700;&#x8981;&#x683c;&#x5f0f;&#x5316;&#x7684;&#x6587;&#x4ef6",{"_index":2992,"title":{},"body":{"commands/build.html#工具":{}}}],["x666e;&#x901a",{"_index":541,"title":{},"body":{"basic/flow.html#switch":{}}}],["x666e;&#x901a;&#x6316;&#x6398;&#x673a;&#x5458;&#x5de5",{"_index":775,"title":{},"body":{"basic/interface.html#接口":{}}}],["x6682;&#x505c;&#xff0c;&#x91ca;&#x653e;&#x7ebf;&#x7a0b;&#x53bb;&#x6267;&#x884c;&#x5176;&#x4ed6;&#x4efb;&#x52a1;&#x3002",{"_index":4447,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x66f4;&#x50cf;&#x662f;&#x591a;&#x7ebf;&#x7a0b;&#x548c;&#x534f;&#x7a0b;&#x7684;&#x7ed3;&#x5408;&#x4f53;&#x3002",{"_index":4249,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x66f4;&#x5177;&#x4f53;&#x5730;&#x8bf4;&#xff0c",{"_index":5258,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x66f4;&#x591a",{"_index":1564,"title":{},"body":{"basic/package.html#包":{}}}],["x66f4;&#x597d;&#x7684;&#x505a;&#x6cd5;&#x662f;&#xff0c;&#x628a;&#x9488;&#x5bf9;&#x540c;&#x4e00;&#x4e2a;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x7684;&#x8fd9;&#x51e0;&#x79cd;&#x64cd;&#x4f5c;&#x90fd;&#x96c6;&#x4e2d;&#x8d77;&#x6765;&#xff0c;&#x7136;&#x540e;&#x7edf;&#x4e00;&#x5730;&#x7f16;&#x5199;&#x68c0;&#x67e5;&#x4ee3;&#x7801;&#x3002;&#x9664;&#x6b64;&#x4e4b;&#x5916;&#xff0c;&#x628a;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x5b57;&#x5178;&#x5c01;&#x88c5;&#x5728;&#x4e00",{"_index":5314,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x66f4;&#x65b0;&#x5168;&#x90e8;&#x5df2;&#x7ecf;&#x662f;&#x6700;&#x65b0;&#x7684;&#x5305;&#x7684;&#xff0c;&#x4f46;&#x662f;&#x5bf9;&#x6807;&#x51c6;&#x5305;&#x4e0d;&#x9002;&#x7528",{"_index":2941,"title":{},"body":{"commands/build.html#工具":{}}}],["x66f4;&#x6613;&#x7528;&#x3001;&#x66f4;&#x9ad8;&#x6548;&#x3001;&#x66f4;&#x8f7b;&#x4fbf;&#x3002;&#x6211;&#x4eec;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x7684",{"_index":4255,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6700;&#x4e45;&#x7684;&#x64cd;&#x4f5c;&#xff0c;&#x4f8b;&#x5982;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x3001;&#x7ba1;&#x9053;&#x53d1;&#x9001;&#x548c;&#x63a5;&#x6536;&#xff0c;&#x8fd8;&#x6709;&#x83b7;&#x53d6;&#x9501;&#x7b49;&#x3002",{"_index":3217,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x6700;&#x540e;&#x4e00;&#x4e2a;&#x8fd0;&#x884c;&#x5b8c;&#x6bd5;&#xff0c;&#x6240;&#x4ee5;&#x8fd8;&#x9700;&#x8981;&#x52a0;&#x4e00;&#x884c;&#x4ee3;&#x7801;&#x3002;&#x4e0d;&#x8fc7;&#x65e2;&#x7136;&#x6709;&#x4e86",{"_index":4445,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6700;&#x540e;&#xff0c",{"_index":5358,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x6700;&#x5927",{"_index":3270,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6700;&#x597d;&#x4f20;&#x5165",{"_index":1002,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x6700;&#x7b80;&#x5355;&#x3001;&#x6709;&#x6548;&#x7684;&#x65b9;&#x5f0f;&#x5c31;&#x662f;&#x8ba9;&#x6bcf;&#x4e00;&#x4e2a;&#x4e92;&#x65a5;&#x9501;&#x90fd;&#x53ea;&#x4fdd;&#x62a4;&#x4e00;&#x4e2a;&#x4e34;&#x754c;&#x533a;&#x6216;&#x4e00;&#x7ec4;&#x76f8;&#x5173;&#x4e34;&#x754c;&#x533a",{"_index":4855,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6700;&#x7b80;&#x5355;&#x7684;&#x65b9;&#x6cd5;&#x5c31;&#x662f;&#x8c03;&#x7528",{"_index":745,"title":{},"body":{"basic/interface.html#接口":{}}}],["x6709;&#x4e00;&#x4e2a",{"_index":3944,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6709;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x662f",{"_index":1162,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x6709;&#x4e09;&#x79cd;&#x7c7b;&#x578b",{"_index":2350,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6709;&#x4e24;&#x4e2a;&#xff0c;&#x53f3;&#x8fb9;&#x7684;&#x8fed;&#x4ee3;&#x53d8;&#x91cf;&#x4ee3;&#x8868;&#x5f53;&#x6b21;&#x8fed;&#x4ee3;&#x5bf9;&#x5e94;&#x7684;&#x67d0;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x800c;&#x5de6;&#x8fb9;&#x7684;&#x8fed;&#x4ee3;&#x53d8;&#x91cf;&#x5219;&#x4ee3;&#x8868;&#x8be5;&#x5143;&#x7d20;&#x503c;&#x5728;&#x5207;&#x7247;&#x4e2d;&#x7684;&#x7d22;&#x5f15;&#x503c;&#x3002",{"_index":590,"title":{},"body":{"basic/flow.html#for":{}}}],["x6709;&#x4e24;&#x79cd;&#x60c5;&#x51b5;&#xff1a",{"_index":2932,"title":{},"body":{"commands/build.html#工具":{}}}],["x6709;&#x4e24;&#x79cd;&#x7c7b;&#x578b;&#xff1a",{"_index":3666,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x6709;&#x4e9b;&#x60c5;&#x51b5;&#x4e0b;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x5305;&#x91cd;&#x547d;&#x540d;&#xff1a",{"_index":1597,"title":{},"body":{"basic/package.html#点操作":{}}}],["x6709;&#x4ec0;&#x4e48;&#x4e0d;&#x540c",{"_index":4274,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6709;&#x540d;&#x8fd4;&#x56de;&#x503c",{"_index":2496,"title":{},"body":{"basic/function.html#声明函数":{},"basic/function.html#关键字-defer":{}}}],["x6709;&#x591a;&#x5927;&#xff0c;&#x90fd;&#x53ea;&#x4f1a;&#x6709;&#x4e00;&#x4e2a;&#x526f;&#x672c;&#x3002",{"_index":1936,"title":{},"body":{"basic/map.html#map":{}}}],["x6709;&#x65f6;&#x95f4;&#x4e0a;&#x7684;&#x91cd;&#x53e0;&#xff08;&#x5b8f;&#x89c2;&#x4e0a;&#x662f;&#x540c;&#x65f6;&#x7684;&#xff0c;&#x5fae;&#x89c2;&#x4ecd;&#x662f;&#x987a;&#x5e8f;&#x6267;&#x884c;&#xff09;,&#x8fd9;&#x6837;&#x770b;&#x8d77;&#x6765;&#x591a;&#x4e2a;&#x4efb;&#x52a1;&#x50cf;&#x662f;&#x540c;&#x65f6;&#x6267;&#x884c;&#xff0c;&#x8fd9;&#x5c31;&#x662f",{"_index":4222,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x6709;&#x66f4;&#x516c;&#x5e73;&#x7684;&#x8fd0;&#x884c;&#x673a;&#x4f1a;&#x3002",{"_index":4367,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6709;&#x6ca1;&#x6709;&#x6ce8;&#x610f;&#x5230;&#xff0c",{"_index":1452,"title":{},"body":{"basic/json.html#序列化":{}}}],["x6709;&#x7528",{"_index":2744,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6709;&#x7740",{"_index":1168,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x6709;&#x84dd;&#x7fd4;&#x6280;&#x6821;&#x8bc1;&#x7684;&#x5458;&#x5de5",{"_index":776,"title":{},"body":{"basic/interface.html#接口":{}}}],["x6709;&#x8fd4;&#x56de;&#x503c;&#x7684;&#x51fd;&#x6570;&#x5176;&#x5b9e;&#x53ef;&#x4ee5;&#x4e0d;&#x52a0;&#x62ec;&#x53f7;&#xff0c;&#x4f46;&#x662f;&#x52a0;&#x62ec;&#x53f7;&#x7684;&#x8bdd;&#xff0c;&#x8bed;&#x4e49;&#x6e05;&#x6670",{"_index":271,"title":{},"body":{"index.html#类型转换":{}}}],["x670d;&#x52a1;&#x63d0;&#x4f9b;&#x53ef;&#x4ee5;&#x76f8;&#x4e92;&#x4ea4;&#x53c9;&#x5f15;&#x7528;&#x7684",{"_index":3014,"title":{},"body":{"commands/build.html#工具":{}}}],["x670d;&#x52a1;&#xff1a",{"_index":3019,"title":{},"body":{"commands/build.html#工具":{}}}],["x672a;&#x547d;&#x540d;&#x7c7b;&#x578b",{"_index":286,"title":{"index.html#未命名类型":{}},"body":{"index.html#未命名类型":{}}}],["x672a;&#x5bfc;&#x51fa;&#x7684;&#x6210;&#x5458",{"_index":1750,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x672c;&#x6587;&#x6863;&#x4f7f;&#x7528",{"_index":3638,"title":{},"body":{"theme/theme-usage.html#使用文档主题":{}}}],["x672c;&#x8d28;&#x4e0a;&#x53ef;&#x4ee5;&#x7406;&#x89e3;&#x4e3a;&#x9996;&#x5148;&#x7b2c;&#x4e00;&#x6b65;&#x662f;&#x901a;&#x8fc7;&#x6e90;&#x7801;&#x5de5;&#x5177",{"_index":2925,"title":{},"body":{"commands/build.html#工具":{}}}],["x672c;&#x8eab;&#x867d;&#x7136;&#x4e5f;&#x7528;&#x5230;&#x4e86;&#x9501;&#xff0c;&#x4f46;&#x662f;&#xff0c;&#x5b83;&#x5176;&#x5b9e;&#x5728;&#x5c3d;&#x53ef;&#x80fd;&#x5730;&#x907f;&#x514d;&#x4f7f;&#x7528;&#x9501;&#x3002",{"_index":5303,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x673a;&#x5236",{"_index":1969,"title":{},"body":{"basic/map.html#map":{},"basic/env_config.html#Go-Module":{}}}],["x673a;&#x5236;&#xff09;&#x3002;&#x968f;&#x540e;&#xff0c;&#x7a0b;&#x5e8f;&#x5d29;&#x6e83",{"_index":945,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x673a;&#x5236;&#xff0c;&#x4e0d;&#x5728",{"_index":2355,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x673a;&#x5236;&#xff0c;&#x800c;&#x662f;&#x4f7f;&#x7528",{"_index":2353,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x675c;&#x7edd;&#x5bf9;&#x540c;&#x4e00;&#x4e2a",{"_index":5079,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x675f;&#x5f53;&#x524d;&#x7684",{"_index":2794,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf",{"_index":4856,"title":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x5728;&#x8fd9;&#x91cc;&#x7684;&#x6700;&#x5927;&#x4f18;&#x52bf;&#x5c31;&#x662f;&#x5728;&#x6548;&#x7387;&#x65b9;&#x9762;&#x7684;&#x63d0;&#x5347;&#x3002;&#x5f53;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#x4e0d;&#x6ee1;&#x8db3;&#x6761;&#x4ef6;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x60f3;&#x64cd;&#x4f5c;&#x5b83;&#x7684;&#x7ebf;&#x7a0b;&#x518d;&#x4e5f;&#x4e0d;&#x7528;&#x5faa;&#x73af;&#x5f80;&#x590d;&#x5730;&#x505a;&#x68c0;&#x67e5;&#x4e86;&#xff0c",{"_index":4860,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x600e;&#x6837;&#x4e0e;&#x4e92;&#x65a5;&#x9501;&#x914d;&#x5408;&#x4f7f;&#x7528",{"_index":4862,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x63d0;&#x4f9b;&#x7684;&#x65b9;&#x6cd5;&#x6709;&#x4e09;&#x4e2a;&#xff1a;&#x7b49;&#x5f85;&#x901a;&#x77e5;&#xff08;wait&#xff09;&#x3001;&#x5355;&#x53d1;&#x901a;&#x77e5;&#xff08;signal&#xff09;&#x548c;&#x5e7f;&#x64ad;&#x901a;&#x77e5;&#xff08;broadcast&#xff09;&#x3002;&#x6211;&#x4eec;&#x5728;&#x5229;&#x7528;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7b49;&#x5f85;&#x901a;&#x77e5;&#x7684;&#x65f6;&#x5019;&#xff0c",{"_index":4864,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x662f;&#x57fa;&#x4e8e;&#x4e92;&#x65a5;&#x9501;&#x7684;&#xff0c;&#x5b83;&#x5fc5;&#x987b;&#x6709;&#x4e92;&#x65a5;&#x9501;&#x7684;&#x652f;&#x6491;&#x624d;&#x80fd;&#x53d1;&#x6325;&#x4f5c;&#x7528;&#x3002;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x5e76;&#x4e0d;&#x662f;&#x88ab;&#x7528;&#x6765;&#x4fdd;&#x62a4;&#x4e34;&#x754c;&#x533a;&#x548c;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#xff0c;&#x5b83;&#x662f;&#x7528;&#x4e8e;&#x534f;&#x8c03;&#x60f3;&#x8981;&#x8bbf;&#x95ee;&#x5171;&#x4eab",{"_index":4857,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684",{"_index":4945,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684;&#x521d;&#x59cb;&#x5316;&#x79bb;&#x4e0d;&#x5f00;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x5e76;&#x4e14;&#x5b83;&#x7684;&#x65b9;&#x6cd5;&#x6709;&#x7684;&#x4e5f;&#x662f;&#x57fa;&#x4e8e;&#x4e92;&#x65a5;&#x9501;&#x7684;&#x3002",{"_index":4863,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6765",{"_index":4792,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6765;&#x4fdd;&#x5b58;&#x548c;&#x7ba1;&#x7406;&#x5185;&#x5bb9;&#x3002",{"_index":3835,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6765;&#x4fdd;&#x8bc1;&#x6700;&#x591a;&#x53ea;&#x6709;&#x4e00;&#x4e2a",{"_index":4783,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6765;&#x5171;&#x4eab;&#x6570;&#x636",{"_index":4776,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x6765;&#x56de;&#x5207;&#x6362;&#x4efb;&#x52a1;&#x6267;&#x884c;(&#x5728;&#x67d0;&#x6bb5;&#x5f88;&#x77ed;&#x65f6;&#x95f4;&#x5185;&#x6267;&#x884c;&#x7a0b;&#x5e8f",{"_index":4219,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x6765;&#x5b9a;&#x4e49;&#x5bf9;&#x8c61;&#x7684;&#x4e00;&#x7ec4;&#x884c;&#x4e3a;&#x3002",{"_index":721,"title":{},"body":{"basic/interface.html#接口":{}}}],["x6765;&#x6253;&#x65ad;&#x53e6;&#x4e00;&#x4e2a;&#x7684;&#x6267;&#x884c;&#xff0c;&#x4f46;&#x662f;&#x4e4b;&#x540e;&#x53ef;&#x4ee5;&#x770b;&#x5230;&#x4e00;&#x79cd;&#x65b9;&#x5f0f;&#x6765;&#x5b9e;&#x73b0;&#x8fd9;&#x4e2a;&#x76ee;&#x7684;&#xff0c;&#x901a;&#x8fc7",{"_index":4266,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6765;&#x63a7;&#x5236;&#x662f;&#x5426;&#x542f;&#x7528;&#xff0c",{"_index":2349,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6765;&#x6784;&#x5efa;&#x9879;&#x76ee;&#xff0c",{"_index":2361,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6765;&#x7ec4;&#x7ec7;&#x3002",{"_index":200,"title":{},"body":{"index.html#package":{}}}],["x6765;&#x8981;&#x9ad8;&#x6548;&#x5f97;&#x591a;&#x3002",{"_index":5284,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x6765;&#x8bbe;&#x7f6e;&#x4e00;&#x4e2a;&#x6700;&#x5927",{"_index":3284,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6765;&#x8bbe;&#x7f6e;&#x8d85;&#x65f6;&#xff0c;&#x907f;&#x514d",{"_index":2772,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6765;&#x8bbe;&#x7f6e;&#xff0c;p",{"_index":4296,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6765;&#x8bbf;&#x95ee",{"_index":1944,"title":{},"body":{"basic/map.html#map":{}}}],["x6765;&#x8bbf;&#x95ee;&#x533f;&#x540d;&#x6210;&#x5458;&#x94fe;&#x4e2d;&#x5d4c;&#x5957;&#x7684",{"_index":1767,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x6765;&#x8bf4;&#x5c31;&#x662f",{"_index":988,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x6784;&#x5efa;&#x5305",{"_index":2929,"title":{},"body":{"commands/build.html#工具":{}}}],["x6784;&#x6210;&#x5faa;&#x73af;&#xff0c;&#x8df3;&#x51fa;&#x5faa;&#x73af;&#x4f53;&#x7b49;&#x529f;&#x80fd;&#x3002;&#x4e0d;&#x63a8;&#x8350",{"_index":597,"title":{},"body":{"basic/flow.html#for":{}}}],["x67b6;&#x6784;&#x3002",{"_index":413,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x67d0;&#x4e2a;&#x4e3b;&#x9898;&#x76f8;&#x5173;&#x7684;&#x6240;&#x6709;&#x5305",{"_index":3038,"title":{},"body":{"commands/build.html#工具":{}}}],["x67e5;&#x627e;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x503c;&#xff0c;&#x5931;&#x8d25;&#x65f6;&#x8fd4;&#x56de;&#x96f6;&#x503c",{"_index":1850,"title":{},"body":{"basic/var.html#赋值":{}}}],["x67e5;&#x627e;&#xff0c;&#x8fd4;&#x56de;&#x5e03;&#x5c14;&#x503c;&#x7c7b;&#x8868;&#x793a;&#x64cd;&#x4f5c;&#x662f;&#x5426;&#x6210;&#x529f",{"_index":1849,"title":{},"body":{"basic/var.html#赋值":{}}}],["x67e5;&#x770b",{"_index":3041,"title":{},"body":{"commands/build.html#工具":{}}}],["x67e5;&#x770b;&#x5305;&#x7684;&#x6570;&#x91cf;&#x3002",{"_index":1563,"title":{},"body":{"basic/package.html#包":{}}}],["x67e5;&#x770b;go&#x5f53;&#x524d;&#x7684;&#x7248;&#x672c",{"_index":3046,"title":{},"body":{"commands/build.html#工具":{}}}],["x67e5;&#x8be2;&#x5305",{"_index":3034,"title":{},"body":{"commands/build.html#工具":{}}}],["x6807;&#x8bb0",{"_index":3289,"title":{"basic/test.html#parallel-标记":{}},"body":{}}],["x6807;&#x8bb0;&#x503c;&#x51b3;&#x5b9a;&#x7684;&#x3002;&#x8981;&#x6ce8;&#x610f;&#xff0c;&#x540c;&#x4e00;&#x4e2a;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x7684;&#x591a;&#x6b21;&#x6267;&#x884c;&#x4e4b;&#x95f4;&#x4e00;&#x5b9a;&#x662f;&#x4e32;&#x884c;&#x7684;&#x3002",{"_index":3304,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x6807;&#x8bb0;&#x6e05;&#x626b;&#x7b97;&#x6cd5",{"_index":844,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x6807;&#x8bb0;&#xff0c",{"_index":3263,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6807;&#x8bc6;&#x7b26;&#x53ef;&#x4ee5;&#x8ba4;&#x4e3a;&#x662f",{"_index":1521,"title":{},"body":{"basic/constant.html#iota":{}}}],["x6811;&#x6839;&#xff08;&#x6216;&#x8005;&#x79f0;&#x4e0a;&#x4e0b;&#x6587;&#x6839;&#x8282;&#x70b9;&#xff09;&#x662f;&#x4e00;&#x4e2a;&#x5df2;&#x7ecf",{"_index":5177,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6837;&#x662f;&#x4e0d;&#x53ef;&#x6062;&#x590d;&#x7684;&#x3002",{"_index":4833,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6838;&#x5fc3;&#x7684;&#x60c5;&#x51b5;&#x4e0b",{"_index":5305,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x6838;&#x5fc3;&#xff0c;&#x4f46;&#x5b83;&#x5e76;&#x4e0d;&#x7b49;&#x540c",{"_index":3275,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6838;&#x5fc3;&#xff0c;&#x53ea;&#x662f",{"_index":3277,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6838;&#x6570",{"_index":4527,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6839;&#x636e;&#x4e0d;&#x540c;&#x7684;&#x573a;&#x666f;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x80fd;&#x8981;&#x5bf9;&#x9519;&#x8bef;&#x505a;&#x4e9b;&#x7279;&#x6b8a;&#x5904;&#x7406;&#xff0c;&#x6bd4;&#x5982;&#x9519;&#x8bef;&#x91cd;&#x8bd5;&#x673a;&#x5236;&#xff0c;&#x6216;&#x8005;&#x6253;&#x5370;&#x9519;&#x8bef;&#x65e5;&#x5fd7;&#xff0c;&#x6216;&#x8005;&#x76f4;&#x63a5;&#x5ffd;&#x7565;&#x9519;&#x8bef;&#x3002",{"_index":934,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x683c;&#x5f0f;&#x5316;&#x8f93;&#x51fa",{"_index":1449,"title":{},"body":{"basic/json.html#序列化":{}}}],["x68c0;&#x67e5",{"_index":4888,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6982;&#x8981;&#x4fe1;&#x606f;&#x8fdb;&#x884c;&#x91c7;&#x6837",{"_index":3333,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6982;&#x8981;&#x4fe1;&#x606f;&#x8fdb;&#x884c;&#x91c7;&#x6837;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x9700;&#x8981;&#x8c03;&#x7528;&#x8fd9;&#x4e2a;&#x4ee3;&#x7801;&#x5305;&#x4e2d",{"_index":3336,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6982;&#x8981;&#x6587;&#x4ef6;&#xff08;cpu",{"_index":3318,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6982;&#x8981;&#x6587;&#x4ef6;&#xff0c;&#x5176;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x6bb5;&#x72ec;&#x7acb;&#x7684;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x90fd;&#x8bb0;&#x5f55;&#x7740;&#xff0c;&#x5728;&#x8fdb;&#x884c;&#x67d0;&#x4e00;&#x6b21;&#x91c7;&#x6837;&#x7684;&#x90a3;&#x4e2a;&#x65f6;&#x523b;&#xff0c;cpu",{"_index":3323,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6a21;&#x578b",{"_index":4525,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6a21;&#x578b;&#x3002",{"_index":2638,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6a21;&#x5f0f;&#xff0c;&#x5c31;&#x662f;&#x5728;&#x591a;&#x8fd4;&#x56de;&#x503c;&#x4e2d;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":1948,"title":{},"body":{"basic/map.html#map":{}}}],["x6b63",{"_index":969,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x6b63;&#x56e0;&#x4e3a;&#x5982;&#x6b64;&#xff0c;&#x5728",{"_index":5218,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6b63;&#x56e0;&#x4e3a;&#x5982;&#x6b64;&#xff0c;&#x6211;&#x5728;&#x8c03;&#x7528",{"_index":1202,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x6b63;&#x56e0;&#x4e3a;&#x5982;&#x6b64;&#xff0c;&#x6240;&#x6709;&#x7684",{"_index":5175,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6b63;&#x56e0;&#x4e3a;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x5b57;&#x6bb5;&#x548c;&#x65b9;&#x6cd5;&#x90fd;&#x53ef;&#x4ee5;&#x201c;&#x5ac1;&#x63a5;&#x201d;&#x5230;&#x88ab;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x4e0a;&#xff0c;&#x6240;&#x4ee5;&#x5373;&#x4f7f;&#x5728;&#x4e24;&#x4e2a;&#x540c;&#x540d;&#x7684;&#x6210;&#x5458;&#x4e00;&#x4e2a;&#x662f;&#x5b57;&#x6bb5;&#xff0c;&#x53e6;&#x4e00;&#x4e2a;&#x662f;&#x65b9;&#x6cd5;&#x7684;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x8fd9;&#x79cd;&#x201c;&#x5c4f;&#x853d;&#x201d;&#x73b0;&#x8c61;&#x4f9d;&#x7136;&#x4f1a;&#x5b58;&#x5728;&#x3002",{"_index":1792,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x6b63;&#x662f;&#x7531;&#x4e8e;&#x5df2;&#x4f7f;&#x7528;&#x7684",{"_index":3915,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6b63;&#x786e;&#x7684;&#x8bed;&#x6cd5",{"_index":1783,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x6b63;&#x786e;&#x8c03;&#x7528",{"_index":1025,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x6b64;&#x5904;&#x7684;&#x64cd;&#x4f5c;&#x662f;&#x5b89;&#x5168;&#x7684;&#x3002",{"_index":5020,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x6b64;&#x7c7b;&#x578b;&#x7684",{"_index":5054,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x6b64;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x76f8;&#x5f53;&#x4e8e;&#x4e00;&#x4e2a;&#x5bb9;&#x5668;&#xff0c;&#x53ef;&#x4ee5;&#x88ab;&#x7528;&#x6765;&#x201c;&#x539f;&#x5b50;&#x5730;&#x201d;&#x5b58;&#x50a8;&#x548c;&#x52a0;&#x8f7d;&#x4efb;&#x610f;&#x7684;&#x503c;&#x3002;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x3002",{"_index":5007,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x6b64;&#x884c;&#x4ee3;&#x7801;&#x6240;&#x5c5e;&#x51fd;&#x6570;&#x7684;&#x6267;&#x884c;&#x968f;&#x5373;&#x7ec8;&#x6b62;&#x3002;&#x7d27;&#x63a5;&#x7740;&#xff0c;&#x63a7;&#x5236;&#x6743;&#x5e76;&#x4e0d;&#x4f1a;&#x5728;&#x6b64;&#x6709;&#x7247;&#x523b;&#x505c;&#x7559;&#xff0c;&#x5b83;&#x53c8;&#x4f1a;&#x7acb;&#x5373;&#x8f6c;&#x79fb;&#x81f3;&#x518d;&#x4e0a;&#x4e00;&#x7ea7;&#x7684;&#x8c03;&#x7528;&#x4ee3;&#x7801;&#x5904;&#x3002;&#x63a7;&#x5236;&#x6743;&#x5982;&#x6b64;&#x4e00;&#x7ea7;&#x4e00",{"_index":984,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x6b64;&#xff0c;&#x8fd9;&#x6bb5;&#x4ee3;&#x7801;&#x6253;&#x5370;&#x51fa;&#x7684;&#x7b2c;&#x4e8c;&#x884c;&#x5185;&#x5bb9;&#x5c31;&#x4f1a;&#x5982;&#x4e0b;&#x6240;&#x793a;&#xff1a",{"_index":4032,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6b7b;&#x9501",{"_index":4839,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6b8a;&#x7c7b;&#x578b;&#xff0c;&#x6765;&#x6807;&#x8bc6;&#x67d0;&#x4e2a",{"_index":1013,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x6bcf",{"_index":4587,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6bcf;&#x4e00;&#x4e2a",{"_index":2759,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6bcf;&#x4e2a;&#x5305;&#x5728;&#x89e3;&#x51b3;&#x4f9d;&#x8d56;&#x7684;&#x524d;&#x63d0;&#x4e0b;&#xff0c;&#x4ee5;&#x5bfc;&#x5165;&#x58f0;&#x660e;&#x7684;&#x987a;&#x5e8f;&#x521d;&#x59cb;&#x5316;&#xff0c;&#x6bcf;&#x4e2a;&#x5305;&#x53ea;&#x4f1a;&#x88ab;&#x521d;&#x59cb;&#x5316;&#x4e00;&#x6b21;&#x3002;&#x56e0;&#x6b64;&#xff0c;&#x5982;&#x679c;&#x4e00;&#x4e2a",{"_index":1643,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x6bcf;&#x4e2a;&#x5bfc;&#x822a;&#x9879;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a",{"_index":3664,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x6bcf;&#x4e2a;&#x6587;&#x4ef6;&#x4ee5",{"_index":231,"title":{},"body":{"index.html#声明":{}}}],["x6bcf;&#x6761",{"_index":4309,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6bcf;&#x6b21;&#x4ece;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7533;&#x8bf7;&#x4e00;&#x5927;&#x5757;&#x5185;&#x5b58;&#xff08;&#x5982",{"_index":382,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x6bd4",{"_index":4254,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6bd4;&#x5982",{"_index":1602,"title":{},"body":{"basic/package.html#点操作":{}}}],["x6bd4;&#x5982;&#x4e4b;&#x524d;&#x7684;&#x9879;&#x76ee;&#x7684;&#x7ed3;&#x6784;&#x662f",{"_index":2376,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x6bd4;&#x5982;&#x5c06",{"_index":1470,"title":{},"body":{"basic/json.html#序列化":{}}}],["x6bd4;&#x5982;&#x6570;&#x7ec4;&#xff0c;&#x5207;&#x7247;&#xff0c;&#x5b57;&#x5178;&#xff0c;&#x901a;&#x9053;&#x7b49;&#x7c7b;&#x578b;&#x4e0e;&#x5185;&#x90e8;&#x5177;&#x4f53;&#x7684;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x548c;&#x957f;&#x5ea6;&#x7b49;&#x5c5e;&#x6027;&#x6709;&#x5173;&#xff0c;&#x6240;&#x4ee5;&#x53eb;&#x505a",{"_index":287,"title":{},"body":{"index.html#未命名类型":{}}}],["x6bd4;&#x5982;&#xff0c",{"_index":3560,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x6bd4;&#x5982;&#xff0c;&#x53ea;&#x5728",{"_index":3350,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6bd4;&#x5982;&#xff0c;&#x5982;&#x679c;&#x5728;&#x5176;&#x6700;&#x9ad8;&#x6bd4;&#x7279;&#x4f4d;&#x4e0a;&#x7684;&#x4e8c;&#x8fdb;&#x5236;&#x6570;&#x662f;1&#xff0c;&#x90a3;&#x4e48;&#x8be5;&#x503c;&#x8868;&#x793a;&#x7684;&#x6587;&#x4ef6;&#x6a21;&#x5f0f;&#x5c31;&#x7b49;&#x540c;&#x4e8",{"_index":4159,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x6bd4;&#x5982;&#xff1a",{"_index":1511,"title":{},"body":{"basic/constant.html#常量":{},"basic/var.html#声明一组变量":{}}}],["x6bd4;&#x8f83;&#x5e76;&#x4ea4;&#x6362;&#x64cd;&#x4f5c;&#x4e0e;&#x4ea4;&#x6362;&#x64cd;&#x4f5c;&#x76f8;&#x6bd4;&#x6709;&#x4ec0;&#x4e48;&#x4e0d;&#x540c",{"_index":4984,"title":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}},"body":{}}],["x6bd4;&#x8f83;&#x5e76;&#x4ea4;&#x6362;&#x64cd;&#x4f5c;&#x5373",{"_index":4985,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x6bd4;&#x8f83;&#x7b80;&#x5355;&#x7684;&#x529e;&#x6cd5;&#x662f;&#x4f7f;&#x7528",{"_index":2180,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x6bd4;&#x8f83;&#x7b80;&#x6d01;&#x4f46;&#x662f;&#x5728;&#x4f7f;&#x7528;&#x65f6;&#x9700;&#x591a;&#x52a0;&#x5c0f;&#x5fc3;&#x3002",{"_index":2186,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x6bd4;&#x8f83;&#x8fd0;&#x7b97;&#x7b26;&#x6765;&#x6bd4;&#x8f83;&#x4e24;&#x4e2a;&#x6570;&#x7ec4;&#xff0c;&#x53ea;&#x6709;&#x5f53;&#x4e24;&#x4e2a;&#x6570;&#x7ec4;&#x7684;&#x6240;&#x6709;&#x5143;&#x7d20;&#x90fd;&#x662f;&#x76f8;&#x7b49;&#x7684;&#x65f6;&#x5019;&#x6570;&#x7ec4;&#x624d;&#x662f;&#x76f8;&#x7b49;&#x7684;&#x3002",{"_index":478,"title":{},"body":{"basic/array.html#二维数组":{}}}],["x6beb;&#x79d2;&#x201d",{"_index":4386,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6c42;&#x54c8;&#x5e0c;&#x548c;&#x5224;&#x7b49;&#x64cd;&#x4f5c;&#x7684;&#x901f;&#x5ea6;&#x8d8a;&#x5feb;&#xff0c;&#x5bf9;&#x5e94;&#x7684;&#x7c7b;&#x578b;&#x5c31;&#x8d8a;&#x9002;&#x5408;&#x4f5c;&#x4e3a;&#x952e;&#x7c7b;&#x578b;&#x3002",{"_index":1987,"title":{},"body":{"basic/map.html#map":{}}}],["x6ca1;&#x6709;&#x50cf;&#x5176;&#x5b83;&#x8bed;&#x8a00;&#x90a3;&#x6837;&#x7528",{"_index":1125,"title":{},"body":{"basic/oop.html#方法":{}}}],["x6ca1;&#x6709;&#x51c6;&#x5907;&#x597d;&#x5199;&#x6216;&#x8005;&#x8bfb;&#x65f6;&#x3002",{"_index":2767,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6ca1;&#x6709;&#x51fd;&#x6570;&#x4f53;&#x7684;&#x51fd;&#x6570;&#x58f0;&#x660e;&#xff0c;&#x8fd9;&#x8868;&#x793a;&#x8be5;&#x51fd;&#x6570;&#x4e0d;&#x662f;&#x4ee5",{"_index":2511,"title":{},"body":{"basic/function.html#参数":{}}}],["x6ca1;&#x6709;&#x6570;&#x636e;&#x4e86;&#xff0c;&#x90a3;&#x4e48",{"_index":2673,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6ca1;&#x6709;&#x6ca1;&#x6709;&#x4e86;&#x610f;&#x4e49;&#x3002;&#x770b;&#x4e0b;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff1a",{"_index":773,"title":{},"body":{"basic/interface.html#接口":{}}}],["x6ca1;&#x6709;&#x6d88;&#x606f;&#x53d1;&#x8fc7;&#x6765;&#xff0c;&#x90a3;&#x4e48;&#x7a0b;&#x5e8f;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#xff0c;&#x7b2c;&#x4e8c;&#x4e2a",{"_index":2755,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6ca1;&#x6709;&#x7ee7;&#x627f;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x5b83;&#x6240;&#x505a;&#x7684;&#x662f;&#x901a;&#x8fc7;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x65b9;&#x5f0f;&#x5b9e;&#x73b0;&#x4e86;&#x7c7b;&#x578b;&#x4e4b;&#x95f4;&#x7684;&#x7ec4;&#x5408",{"_index":1172,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x6ca1;&#x6709;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x5c06;&#x4f1a;&#x6839;&#x636e;&#x7c7b;&#x578b;&#x521d;&#x59cb;&#x5316;&#x4e3a;&#x5bf9;&#x5e94;&#x7684;&#x96f6;&#x503c",{"_index":1813,"title":{},"body":{"basic/var.html#变量":{}}}],["x6ca1;&#x6709;&#x8fdb;&#x884c",{"_index":4550,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x6cb8;&#x6c34;&#x6e29;&#x5ea6",{"_index":281,"title":{},"body":{"index.html#自定义类型":{}}}],["x6cc4;&#x6f0f",{"_index":4451,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6cc4;&#x6f0f;&#xff0c;&#x4f8b;&#x5982;&#x5f53;&#x4f7f;&#x7528;&#x4e86;&#x65e0;&#x7f13;&#x5b58;&#x7684",{"_index":4453,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x6cd5;&#x3002",{"_index":3300,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x6cd5;&#x5c31;&#x90fd;&#x4f1a;&#x5f15;&#x53d1",{"_index":3913,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6ce8;&#x610f",{"_index":2182,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["x6ce8;&#x610f;&#x4e00;&#x4e0b;&#xff0c;&#x8fd9;&#x4e2a",{"_index":5185,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6ce8;&#x610f;&#x4e0a;&#x9762;&#x7684;&#x4ee3;&#x7801;&#x4f1a;&#x62a5",{"_index":2669,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x6ce8;&#x610f;&#x4e86;&#xff0c;&#x2019;&#x7231;&#x2019;&#x662f;&#x7531;&#x4e09;&#x4e2a;&#x5b57;&#x8282;&#x5171;&#x540c;&#x8868;&#x8fbe;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x7b2c;&#x56db;&#x4e2a",{"_index":623,"title":{},"body":{"basic/flow.html#for":{}}}],["x6ce8;&#x610f;&#x4e8b;&#x9879",{"_index":4819,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6ce8;&#x610f;&#x533a;&#x5206",{"_index":2173,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["x6ce8;&#x610f;&#x6211;&#x7ed9;&#x4e88",{"_index":5151,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x6ce8;&#x610f;&#xff0c",{"_index":313,"title":{},"body":{"index.html#类型断言":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html#channel":{}}}],["x6ce8;&#x610f;&#xff0c;&#x4e0",{"_index":3947,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6ce8;&#x610f;&#xff0c;&#x4e0d;&#x8981;&#x88ab;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x7684;&#x540d;&#x79f0;&#x8bef;&#x5bfc;&#x4e86;&#xff0c;&#x5b83;&#x7684;&#x529f;&#x80fd;&#x5e76;&#x4e0d;&#x662f;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x800c;&#x662f;&#x4f9d;&#x636e;&#x4e00;&#x4e2a;&#x5df2;&#x7ecf",{"_index":4103,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x6ce8;&#x610f;&#xff0c;&#x53ea;&#x6709;&#x5bfc;&#x51fa;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x6210;&#x5458;&#x624d;&#x4f1a;&#x88ab;&#x7f16;&#x7801",{"_index":1484,"title":{},"body":{"basic/json.html#序列化":{}}}],["x6ce8;&#x610f;&#xff0c;&#x5982;&#x679c;&#x5b9e;&#x53c2;&#x662f",{"_index":2507,"title":{},"body":{"basic/function.html#参数":{}}}],["x6ce8;&#x610f;&#xff0c;&#x6211;&#x4eec;&#x901a;&#x8fc7",{"_index":3355,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x6ce8;&#x610f;&#xff0c;&#x6b64;&#x5904;&#x7684;&#x64cd;&#x4f5c;&#x4e0d;&#x662f;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#xff01",{"_index":5016,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x6ce8;&#x610f;&#xff0c;&#x8fd9;&#x6837;&#x7684;&#x6307;&#x9488;&#x503c;&#x6307;&#x5411;&#x7684;&#x90fd;&#x4f1a;&#x662f;&#x540c;&#x4e00;&#x4e2a",{"_index":3922,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x6ce8;&#x610f;&#xff0c;&#x8fd9;&#x79cd;&#x7531",{"_index":4850,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x6ce8;&#x610f;&#xff0c;&#x91cd;&#x547d;&#x540d;&#x7684;&#x5305;&#x540d;&#x53ea;&#x5728;&#x5f53;&#x524d;&#x6e90;&#x6587;&#x4ef6;&#x6709;&#x6548;&#x3002",{"_index":1596,"title":{},"body":{"basic/package.html#点操作":{}}}],["x6ce8;&#x610f;&#xff1a;&#x51fd;&#x6570;&#x5185;&#x90e8;&#x5b9a;&#x4e49;&#x7684;&#xff0c;&#x53ea;&#x80fd;&#x5728;&#x51fd;&#x6570;&#x5185;&#x90e8;&#x4f7f;&#x7528;&#xff08;&#x51fd;&#x6570;&#x7ea7;&#xff09;&#xff0c;&#x5728;&#x51fd;&#x6570;&#x5916;&#x90e8;&#x5b9a;&#x4e49;&#x7684;&#xff08;&#x5305;&#x7ea7;&#xff09;&#xff0c;&#x53ef;&#x4ee5;&#x5728;&#x5f53;&#x524d;&#x5305;&#x7684;&#x6240;&#x6709;&#x6587;&#x4ef6;&#x4e2d;&#x662f;&#x4f7f;&#x7528;&#x3002",{"_index":224,"title":{},"body":{"index.html#命名":{}}}],["x6ce8;&#x91ca",{"_index":201,"title":{"index.html#注释":{}},"body":{"commands/build.html#工具":{}}}],["x6ce8;&#x91ca;&#x4e2d;&#x51fd;&#x6570;&#x7684;&#x53c2;&#x6570;&#x6216;&#x5176;&#x5b83;&#x7684;&#x6807;&#x8bc6;&#x7b26;&#x5e76;&#x4e0d;&#x9700;&#x8981;&#x989d;&#x5916;&#x7684;&#x5f15;&#x53f7;&#x6216;&#x5176;&#x5b83;&#x6807;&#x8bb0;&#x6ce8;&#x660e;&#x3002;&#x4f8b;&#x5982",{"_index":3004,"title":{},"body":{"commands/build.html#工具":{}}}],["x6d41;&#x7a0b;&#x63a7;&#x5236;&#x8bed;&#x53e5",{"_index":172,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x6d4b;&#x8bd5",{"_index":3152,"title":{"basic/test.html#测试":{}},"body":{}}],["x6d4b;&#x8bd5;&#x51fd;&#x6570",{"_index":3180,"title":{"basic/test.html#测试函数":{}},"body":{}}],["x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x5fc5;&#x987b;&#x5bfc;&#x5165",{"_index":3181,"title":{},"body":{"basic/test.html#测试函数":{},"basic/test.html#基准测试":{}}}],["x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x6d4b;&#x8bd5;&#x7a0b;&#x5e8f;&#x7684;&#x4e00;&#x4e9b;&#x903b;&#x8f91;&#x884c;&#x4e3a;&#x662f;&#x5426;&#x6b63;&#x786e;&#x3002",{"_index":3159,"title":{},"body":{"basic/test.html#测试":{}}}],["x6d4b;&#x8bd5;&#x540d;&#x79f0;&#x53f3;&#x8fb9;&#x7684;&#x662f;&#x6267;&#x884c;&#x6b21;&#x6570;&#x3002",{"_index":3287,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6d4b;&#x8bd5;&#x6e90;&#x7801;&#x6587;&#x4ef6",{"_index":191,"title":{},"body":{"index.html#三种文件":{}}}],["x6d4b;&#x8bd5;&#x7684;&#x4e00;&#x90e8;&#x5206;&#x3002",{"_index":3157,"title":{},"body":{"basic/test.html#测试":{}}}],["x6d4b;&#x8bd5;&#x7ed3;&#x679c;&#xff0c;&#x91cd;&#x70b9;&#x5728;&#x5012;&#x6570;&#x7b2c;&#x4e09;&#x884c;&#x7684;&#x5185;&#x5bb9;&#x3002",{"_index":3265,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x6d6e;&#x70b9;&#x6570",{"_index":3783,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x6d6e;&#x70b9;&#x6570;&#x7cbe;&#x5ea6;&#x3002",{"_index":3790,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x6df7;&#x5408",{"_index":732,"title":{},"body":{"basic/interface.html#接口":{}}}],["x6df7;&#x5408;&#x7c7b;&#x578b;&#x8868;&#x8fbe;&#x5f0f;&#x5fc5;&#x987b;&#x4fdd;&#x8bc1;&#x7c7b;&#x578b;&#x4e00;&#x81f4",{"_index":244,"title":{},"body":{"index.html#类型转换":{}}}],["x6df7;&#x5408;&#x7c7b;&#x578b;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x4fdd;&#x6301;&#x4e00;&#x81f4",{"_index":260,"title":{},"body":{"index.html#类型转换":{}}}],["x6dfb;&#x52a0",{"_index":3196,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["x6dfb;&#x52a0;&#x5230;&#x901a;&#x77e5;&#x961f;&#x5217;&#x7684;&#x961f;&#x5c3e;&#xff0c;&#x800c;&#x5b83;&#x7684",{"_index":4952,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x6dfb;&#x52a0;&#x5f62;&#x5982;&#x201c;a[b:len(a",{"_index":2994,"title":{},"body":{"commands/build.html#工具":{}}}],["x6dfb;&#x52a0;&#x6587;&#x6863",{"_index":3655,"title":{"theme/theme-usage.html#添加文档":{}},"body":{}}],["x6dfb;&#x52a0;&#x6ce8;&#x91ca;&#x3002;&#x4e00;&#x822c;&#x6211;&#x4eec;&#x4f1a;&#x5728;&#x5305;&#x58f0;&#x660e;&#x524d;&#x6dfb;&#x52a0;&#x6ce8;&#x91ca;&#xff0c;&#x6765;&#x5bf9;&#x6574;&#x4e2a;&#x5305;&#x6325;&#x7740;&#x7a0b;&#x5e8f;&#x505a;&#x6574;&#x4f53;&#x7684;&#x63cf;&#x8ff0;&#x3002",{"_index":203,"title":{},"body":{"index.html#注释":{}}}],["x6dfb;&#x52a0;&#x952",{"_index":2009,"title":{},"body":{"basic/map.html#map":{}}}],["x6e05;&#x9664;&#x5173;&#x8054;&#x7684;&#x5b89;&#x88c5;&#x7684;&#x5305;&#x548c;&#x53ef;&#x8fd0;&#x884c;&#x6587;&#x4ef6;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x901a;&#x8fc7",{"_index":2982,"title":{},"body":{"commands/build.html#工具":{}}}],["x6e10;&#x5730;&#x79ef;&#x7d2f;&#x548c;&#x5b8c;&#x5584;&#xff0c;&#x5e76;&#x4f1a;&#x5728;&#x7a0b;&#x5e8f;&#x7ec8;&#x6b62;&#x4e4b;&#x524d;&#x88ab;&#x6253;&#x5370;&#x51fa;&#x6765;&#x3002",{"_index":993,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x6e90;&#x7801;&#x6587;&#x4ef6;&#x6240;&#x5728;&#x7684;&#x76ee;&#x5f55;&#x76f8;&#x5bf9;&#x4e8",{"_index":1609,"title":{},"body":{"basic/package.html#点操作":{}}}],["x6e90;&#x7801;&#x76ee;&#x5f55",{"_index":2332,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x70b9;&#x64cd;&#x4f5c",{"_index":1589,"title":{"basic/package.html#点操作":{}},"body":{}}],["x70b9;&#x64cd;&#x4f5c;&#x7b26;&#x4e5f;&#x53ef;&#x4ee5;&#x548c;&#x6307;&#x5411;&#x7ed3;&#x6784;&#x4f53;&#x7684;&#x6307;&#x9488;&#x4e00;&#x8d77;&#x5de5;&#x4f5c",{"_index":1747,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7136;&#x540e;&#x53d1;&#x901a;&#x77e5;&#xff0c;&#x201c;&#x4fe1;&#x7bb1;&#x91cc;&#x5df2;&#x7ecf;&#x6709;&#x65b0;&#x60c5;&#x62a5;&#x4e86;&#x201d;&#xff0c;&#x6211;&#x4eec;&#x8c03;&#x7528",{"_index":4892,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7136;&#x540e;&#x5c06;&#x628a;&#x539f;&#x6709;&#x7684;&#x5143;&#x7d20;&#x548c;&#x65b0;&#x5143;&#x7d20;&#x4e00;&#x5e76;&#x62f7;&#x8d1d;&#x5230;&#x65b0;&#x5207;&#x7247;&#x4e2d",{"_index":2091,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x7136;&#x540e;&#x8bbf;&#x95e",{"_index":3021,"title":{},"body":{"commands/build.html#工具":{}}}],["x7136;&#x540e;&#x8d4b;&#x503c",{"_index":1857,"title":{},"body":{"basic/var.html#赋值":{}}}],["x7136;&#x540e;&#x8fd0;&#x884c;&#xff1a",{"_index":212,"title":{},"body":{"index.html#os-Args":{}}}],["x7136;&#x540e;&#xff0c;&#x5b83;&#x4f1a;&#x5411;&#x5b83;&#x7684;&#x6240;&#x6709;&#x5b50;&#x503c;&#xff08;&#x6216;&#x8005;&#x8bf4;&#x5b50;&#x8282;&#x70b9;&#xff09;&#x4f20;&#x8fbe;&#x64a4;&#x9500;&#x4fe1;&#x53f7;&#x3002;&#x8fd9;&#x4e9b;&#x5b50;&#x503c;&#x4f1a;&#x5982;&#x6cd5;&#x70ae;&#x5236;&#xff0c;&#x628a;&#x64a4;&#x9500;&#x4fe1;&#x53f7;&#x7ee7;&#x7eed;&#x4f20;&#x64ad;&#x4e0b;&#x53bb;&#x3002;&#x6700;&#x540e;&#xff0c;&#x8fd9;&#x4e2a",{"_index":5228,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7136;&#x800c;&#xff0c",{"_index":3966,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7231;&#x597d;&#x8005",{"_index":616,"title":{},"body":{"basic/flow.html#for":{},"basic/basic_data.html#字符串":{}}}],["x7231;&#x597d;&#x8005;&#x201d",{"_index":4028,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7248;&#x672c",{"_index":3045,"title":{},"body":{"commands/build.html#工具":{}}}],["x7269;&#x7406;&#x5185;&#x5b58;&#xff1b",{"_index":4592,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x72b6;&#x6001;&#x3002;&#x5982;&#x679c;&#x6b64;&#x65f6;&#x6709",{"_index":4628,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x72b6;&#x6001;&#x3002;&#x5f53",{"_index":4614,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x72b6;&#x6001;&#xff0c;&#x8fd9;&#x662f",{"_index":4545,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x73af;&#x5883;&#x4e0b;&#x4f7f;&#x7528",{"_index":3172,"title":{},"body":{"basic/test.html#测试":{}}}],["x73af;&#x5883;&#x53d8;&#x91cf",{"_index":2318,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x73af;&#x5883;&#x53d8;&#x91cf;&#x4e2d;&#x3002",{"_index":2309,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x73af;&#x5883;&#x914d;&#x7f6",{"_index":2300,"title":{"basic/env_config.html#Go-环境配置":{}},"body":{}}],["x73b0;&#x4e86;&#x8fd9;&#x4e2a;&#x63a5;&#x53e3;&#xff0c;&#x65e0;&#x987b;&#x663e;&#x793a;&#x58f0;&#x660e;&#x3002",{"_index":715,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7406;&#x60f3;&#x6a21;&#x5f0f;&#x3002",{"_index":4229,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x7406;&#x6240;&#x5f53;&#x7136;&#xff0c;&#x8fd9;&#x4e9b;&#x8f6c;&#x6362;&#x64cd;&#x4f5c;&#x80af;&#x5b9a;&#x90fd;&#x9700;&#x8981;&#x5728;&#x9501;&#x7684;&#x4fdd;&#x62a4;&#x4e0b;&#x8fdb;&#x884c;&#x3002",{"_index":5366,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x751f;&#x547d;&#x5468;&#x671f",{"_index":317,"title":{},"body":{"index.html#类型断言":{}}}],["x751f;&#x7684",{"_index":3357,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7528",{"_index":950,"title":{},"body":{"basic/error.html#Panic-异常":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7528;&#x4e8e",{"_index":173,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x4ece;&#x51fd;&#x6570;&#x8fd4;&#x56d",{"_index":165,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x4ee3;&#x8868",{"_index":3473,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7528;&#x4e8e;&#x5404;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x5185;&#x5b58;&#x5206;&#x914d",{"_index":234,"title":{},"body":{"index.html#make-和-new":{}}}],["x7528;&#x4e8e;&#x58f0;&#x660",{"_index":176,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x58f0;&#x660e;&#x81ea;&#x5b9a;&#x4e49;&#x7c7b;&#x578b",{"_index":175,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x5b9a;&#x4e49;&#x51fd;&#x6570;&#x548c;&#x65b9;&#x6cd5",{"_index":164,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x5b9a;&#x4e49;&#x62bd;&#x8c61;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":170,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x5b9a;&#x4e49;&#x63a5;&#x53e3",{"_index":169,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x5e76;&#x53d1",{"_index":167,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x7c7b;&#x4f3c;&#x6790;&#x6784;&#x51fd;&#x6570",{"_index":166,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x89e6;&#x53d1;&#x64a4;&#x9500;&#x4fe1;&#x53f7;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":5224,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7528;&#x4e8e;&#x8bfb;&#x53d6",{"_index":178,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x4e8e;&#x9009;&#x62e9;&#x4e0d;&#x540c;&#x7c7b;&#x578b;&#x7684;&#x901a;&#x8baf",{"_index":168,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7528;&#x6237;&#x5c42;&#x8f7b;&#x91cf;&#x7ea7",{"_index":4479,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7528;&#x6765;&#x6307;&#x5b9a",{"_index":2319,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7528;&#x6765;&#x79fb;&#x9664;&#x5f53;&#x524d;&#x6e90;&#x7801;&#x5305;&#x548c;&#x5173;&#x8054;&#x6e90;&#x7801;&#x5305;&#x91cc;&#x9762;&#x7f16;&#x8bd1;&#x751f;&#x6210;&#x7684;&#x6587;&#x4ef6;&#x3002;&#x6587;&#x4ef6;&#x5305;&#x62ec;&#xff1a",{"_index":2970,"title":{},"body":{"commands/build.html#工具":{}}}],["x7528;&#x70b9;&#x53f7",{"_index":1740,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7531",{"_index":1442,"title":{},"body":{"basic/json.html#序列化":{},"commands/build.html#工具":{},"basic/test.html#parallel-标记":{},"concurrent/sync_lock.html#sync-Map":{}}}],["x7531;&#x4e09;&#x4e2a;&#x90e8;&#x5206;&#x6784;&#x6210;&#xff1a;&#x6307;&#x9488;&#x3001;&#x957f;&#x5ea6;&#x548c;&#x5bb9;&#x91cf;&#x3002;&#x957f;&#x5ea6;&#x4e0d;&#x80fd;&#x8d85;&#x8fc7;&#x5bb9;&#x91cf;&#x3002",{"_index":2056,"title":{},"body":{"basic/slice.html#slice":{}}}],["x7531;&#x4e09;&#x79cd;&#x7ec4;&#x4ef6;&#x7ec4;&#x6210;&#xff1a",{"_index":414,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x7531;&#x4e8e",{"_index":947,"title":{},"body":{"basic/error.html#Panic-异常":{},"basic/function.html#关键字-defer":{},"basic/test.html#go-test-命令执行的主要测试流程":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#sync-Map":{}}}],["x7531;&#x4e8e;&#x6570;&#x7ec4;&#x662f;&#x503c;&#x7c7b;&#x578b;&#xff0c;&#x6240;&#x4ee5;&#x6bcf;&#x4e00;&#x6b21;&#x590d;&#x5236;&#x90fd;&#x4f1a;&#x62f7;&#x8d1d;&#x5b83;&#xff0c;&#x4ee5;&#x53ca;&#x5b83;&#x7684;&#x6240;&#x6709;&#x5143;&#x7d20;&#x503c;&#x3002",{"_index":2597,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x7531;&#x4e8e;&#x8fd9;&#x4e2a;&#x7c7b;&#x578b;&#x4e2d;&#x5305;&#x542b;&#x4e86;&#x4e00;&#x4e2a",{"_index":5083,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7531;&#x4e8e;&#x8fd9;&#x6837;&#x7684;&#x5b57;&#x8282;&#x5207;&#x7247;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x8bf4;&#x5b83;&#x4e0",{"_index":3883,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7531;&#x4e8e;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x7ecf;&#x5e38;&#x662f;&#x4ee5;&#x94fe;&#x5f0f;&#x7ec4;&#x5408;&#x5728;&#x4e00;&#x8d77;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x4e2d;&#x5e94;&#x907f;&#x514d;&#x5927;&#x5199;&#x548c;&#x6362;&#x884c;&#x7b26;&#x3002",{"_index":931,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x7531;&#x4e8e;&#x9700;&#x8981;&#x989d;&#x5916;&#x7684;&#x8bb0;&#x5f55;&#xff0c;&#x56e0;&#x6b64;&#x6784;&#x5efa;&#x65f6;&#x52a0;&#x4e86;&#x7ade;&#x4e89;&#x68c0;&#x6d4b;&#x7684;&#x7a0b;&#x5e8f;&#x8dd1;&#x8d77;&#x6765;&#x4f1a;&#x6162;&#x4e00;&#x4e9b;&#xff0c;&#x4e14;&#x9700;&#x8981;&#x66f4;&#x5927;&#x7684;&#x5185;&#x5b58;&#xff0c;&#x5373;&#x4f7f;&#x662f;&#x8fd9;&#x6837;&#xff0c;&#x8fd9;&#x4e9b;&#x4ee3;&#x4ef7;&#x5bf9;&#x4e8e;&#x5f88;&#x591a;&#x751f;&#x4ea7;&#x73af;&#x5883;&#x7684",{"_index":5380,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x7531;&#x6807;&#x51c6;&#x5e93;&#x4e2d;&#x7684",{"_index":1440,"title":{},"body":{"basic/json.html#序列化":{}}}],["x7531;&#x6b64;&#x5f15;&#x53d1;&#x7684",{"_index":4924,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7531;go",{"_index":2976,"title":{},"body":{"commands/build.html#工具":{}}}],["x754c;&#x3002",{"_index":1194,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x7684",{"_index":1122,"title":{},"body":{"basic/oop.html#方法":{},"basic/oop.html#String-方法":{},"basic/json.html#序列化":{},"basic/package.html#包声明":{},"basic/map.html#map":{},"concurrent/channel.html#channel":{},"basic/test.html#性能分析":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{},"concurrent/sync_lock.html#sync-Map":{}}}],["x7684;&#x3002",{"_index":5239,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x3002;&#x5982;&#x679c;&#x5783;&#x573e;&#x56de;&#x6536;&#x5668;&#x60f3;&#x8981;&#x8fd0;&#x884c;&#x4e86;&#xff0c;&#x90a3;&#x4e48;&#x5b83;&#x5fc5;&#x987b;&#x5148;&#x901a;&#x77e5;&#x5176;&#x5b83;&#x7684",{"_index":4566,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x3002;&#x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":5181,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x4e0d;&#x4e00;&#x81f4",{"_index":1355,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x4ee3;&#x4ef7;&#x4e5f;&#x4e0d;&#x5c0f;&#xff1b",{"_index":4475,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x4ee3;&#x4ef7;&#x5df2;&#x7ecf;&#x6bd4;&#x8fdb;&#x7a0b;&#x5c0f;&#x4e86;&#x5f88;&#x591a;&#x4e86;&#xff0c;&#x4f46;&#x6211;&#x4eec;&#x4f9d;&#x7136;&#x4e0d;&#x80fd;&#x5927;&#x91cf;&#x521b;&#x5efa",{"_index":4471,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x4ee5;&#x4e0b;&#x6587;&#x4ef6;&#x62f7;&#x8d1d;&#x5230;&#x9879;&#x76e",{"_index":3641,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x7684;&#x4efb;&#x52a1;&#xff1a",{"_index":4519,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x4f18;&#x5148;&#x7ea7;&#x6700;&#x4f4e;&#x3002",{"_index":1871,"title":{},"body":{"basic/operator.html#优先级":{}}}],["x7684;&#x4f18;&#x5148;&#x7ea7;&#x6700;&#x9ad8;&#xff0c",{"_index":1870,"title":{},"body":{"basic/operator.html#优先级":{}}}],["x7684;&#x4f7f;&#x7528;&#x6709;&#x70b9;&#x590d;&#x6742;&#xff0c",{"_index":1341,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x503c",{"_index":1296,"title":{},"body":{"basic/pointer.html#指针":{},"basic/pointer.html#指向指针的指针":{}}}],["x7684;&#x503c;&#x4e3a",{"_index":248,"title":{},"body":{"index.html#类型转换":{},"basic/test.html#性能分析":{}}}],["x7684;&#x503c;&#x4e5f;&#x53ef;&#x4ee5;&#x662f",{"_index":3392,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7684;&#x503c;&#x4e5f;&#x53ef;&#x4ee5;&#x7a0d;&#x7a0d;&#x5730;&#x6539;&#x53d8",{"_index":3247,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x7684;&#x503c;&#x505a;&#x600e;&#x6837;&#x7684;&#x4fee;&#x6539;&#xff0c;&#x90fd;&#x4e0d;&#x4f1a;&#x7834;&#x574f",{"_index":5025,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x7684;&#x503c;&#x53ef;&#x4ee5;&#x5f88;&#x65b9;&#x4fbf;&#x7684;&#x4fee;&#x6539;&#xff0c;&#x901a;&#x8fc7",{"_index":1963,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x503c;&#x662f;&#x6587;&#x4ef6;&#x7684;&#x8def;&#x5f84;&#xff0c;&#x4f46;&#x6ce8;&#x610f;&#x6269;&#x5c55;&#x540d;&#x4e3a",{"_index":3670,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x7684;&#x503c;&#x76f8;&#x540c;&#x3002;&#x5982;&#x679c;&#x76f8;&#x540c;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x7acb",{"_index":4416,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x503c;&#x7b49;&#x4e8e",{"_index":576,"title":{},"body":{"basic/flow.html#for":{}}}],["x7684;&#x503c;&#x8fdb;&#x884c;&#x51cf;&#x4e00;&#x64cd;&#x4f5c",{"_index":5050,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7684;&#x5143;&#x7d20;&#x8d4b;&#x503c",{"_index":1844,"title":{},"body":{"basic/var.html#赋值":{}}}],["x7684;&#x5185;&#x5b58;&#x5206;&#x914d;&#x5668;&#x91c7;&#x7528;&#x7684;&#x662f",{"_index":412,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x7684;&#x5185;&#x5b58;&#x5730;&#x5740;&#x3002;&#x63a5;&#x4e0b;&#x6765",{"_index":1294,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x7684;&#x5185;&#x5b58;&#x5730;&#x5740;&#xff0c;&#x90a3;&#x4e48",{"_index":1290,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x5728;&#x6b64;&#x65f6;&#x8fd8;&#x5171;&#x7528;&#x7740;&#x540c;&#x4e00;&#x4e2a;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#xff0c;&#x6240;&#x4ee5;&#xff0c;&#x6211;&#x53ea;&#x9700;&#x901a;&#x8fc7;&#x7b80;&#x5355;&#x7684;&#x518d;&#x5207;&#x7247;&#x64cd;&#x4f5c;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x5229;&#x7528;&#x8fd9;&#x4e2a",{"_index":4004,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5185;&#x5bb9;&#x653e;&#x5728;&#x7b2c;&#x4e00;&#x4e2a;&#x76ee;&#x5f55;&#x4e0b;&#x3002",{"_index":2341,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7684;&#x51fd;&#x6570;&#x3002;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x5e94;&#x8be5;&#x5177;&#x6709;&#x4e0a",{"_index":5142,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x6709;&#x4e24;&#x4e2a;&#x53c2;&#x6570;&#x548c;&#x4e00;&#x4e2a;&#x7ed3;&#x679c;&#xff0c;&#x90fd;&#x662f",{"_index":2532,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x7684;&#x51fd;&#x6570;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x63a5;&#x53d7;&#x82e5;&#x5e72;&#x4e2a",{"_index":3508,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7684;&#x51fd;&#x6570;&#xff0c;&#x5e76;&#x628a",{"_index":4411,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x51fd;&#x6570;&#xff0c;&#x8c03;&#x7528",{"_index":4540,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x5206;&#x914d;&#x3002",{"_index":417,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x7684;&#x5207;&#x7247;&#x4f5c;&#x4e3a;&#x4e86;&#x65b0;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x7684;&#x7a97;&#x53e3;&#xff0c;&#x800c;&#x6ca1;&#x6709;&#x5bf9;&#x539f;&#x5207;&#x7247;&#x53ca;&#x5176;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x505a;&#x4efb;&#x4f55;&#x6539;&#x52a8;&#x3002",{"_index":2105,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x7684;&#x5217;&#x8868;&#xff0c;&#x4ee5;&#x4f9b;&#x547d;&#x4ee4;&#x5728;&#x591a;&#x6b21;&#x6d4b;&#x8bd5;&#x65f6;&#x4f7f;&#x7528;&#x3002",{"_index":3286,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7684;&#x522b;&#x540d",{"_index":3795,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x7684;&#x522b;&#x540d;&#xff09;&#x4e3a;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x7684;&#x5207;&#x7247;&#x6765;&#x8868;&#x793a;&#xff0c;&#x800c;&#x540e;&#x8005;&#x5219;&#x53ef;&#x4ee5;&#x7531;&#x4e00;&#x4e2a;&#x4ee5",{"_index":4015,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x533a;&#x522b",{"_index":2357,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x7684;&#x53c2;&#x6570;&#xff0c",{"_index":3363,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7684;&#x53d8;&#x91cf;&#x7684;&#x503c;&#xff0c;&#x5e76;&#x5224;&#x65ad;&#x8be5;&#x503c;&#x662f;&#x5426;&#x4e0e;&#x53c2;&#x6570",{"_index":4415,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x53d8;&#x91cf;&#xff0c;&#x662f;&#x4e00;&#x4e2a;&#x8bfb;&#x5199;&#x9501;&#x3002;&#x57fa;&#x4e8e;&#x8fd9;&#x628a;&#x9501;&#xff0c;&#x6211;&#x8fd8;&#x521b;&#x5efa;&#x4e86;&#x4e24;&#x4e2a;&#x4ee3;&#x8868;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x540d;&#x5b57;&#x5206;&#x522b",{"_index":4868,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7684;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x4e2d;&#xff0c;&#x5e76;&#x4e14;&#x6ca1;&#x6709;&#x88ab;&#x903b;&#x8f91;&#x5220;&#x9664;&#xff0c;&#x90a3;&#x4e48;&#x4fee;&#x6539;&#x5b83;&#x5e76;&#x4e0d;&#x4f1a;&#x4f7f;&#x7528;&#x5230;&#x9501;&#xff0c;&#x5bf9;&#x5176;&#x6027;&#x80fd;&#x7684;&#x5f71;&#x54cd;&#x5c31;&#x4f1a;&#x5f88;&#x5c0f;&#x3002",{"_index":5371,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7684;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x548c;&#x810f;&#x5b57;&#x5178;&#x4e2d;&#x7684;&#x952e;&#x503c;&#x5bf9;&#x96c6;&#x5408;&#x5e76;&#x4e0d;&#x662f;&#x5b9e;&#x65f6;&#x540c;&#x6b65;&#x7684;&#xff0c;&#x5b83;&#x4eec;&#x5728;&#x67d0;&#x4e9b;&#x65f6;&#x95f4;&#x6bb5;&#x5185;&#x53ef;&#x80fd;&#x4f1a;&#x6709;&#x4e0d;&#x540c",{"_index":5367,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7684;&#x540c;&#x4e00;&#x7ec4;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x7684;&#x9519;&#x8bef;&#x5728;&#x6784;&#x6210;&#x548c;&#x5904;&#x7406;&#x65b9;&#x5f0f;&#x4e0a;&#x662f;&#x76f8;&#x4f3c;&#x7684;&#x3002",{"_index":933,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x7684;&#x540c;&#x65f6;&#x963b;&#x585e",{"_index":5115,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7684;&#x542b;&#x4e49;&#x662f;&#xff0c;&#x8fd9;&#x662f;&#x4e00;&#x4e2a",{"_index":957,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x7684;&#x5462;&#xff1f",{"_index":4556,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x5927;&#x5c0f;&#x4e0d;&#x662f;&#x56fa;&#x5b9a;&#x4e0d;&#x53d8;&#x7684;&#x3002;&#x5728;&#x83b7;&#x53d6;&#x95f2;&#x7f6",{"_index":403,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x7684;&#x5b50;&#x503c",{"_index":5198,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x5b50;&#x503c;&#x3002",{"_index":5205,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x5b50;&#x503c;&#x3002;&#x81f3;&#x4e8e",{"_index":5203,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x5b57;&#x5178;&#x4e0a;&#x505a;&#x4efb;&#x4f55;&#x64cd;&#x4f5c;&#x90fd;&#x4e0d;&#x4f1a;&#x5f15;&#x8d77;&#x9519;&#x8bef",{"_index":2006,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x5b57;&#x5178;&#x4e0a;&#x6267;&#x884c;&#x8bfb;&#x5199;&#x64cd;&#x4f5c;&#x4f1a;&#x6210;&#x529f;&#x5417",{"_index":1997,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x5b57;&#x5178;&#x4e2d",{"_index":2008,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x5b57;&#x5178;&#x503c;&#x6539;&#x4e3a",{"_index":1965,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x5b57;&#x7b26;&#x4e32;&#x662f;&#x7531;&#x5355;&#x4e2a;&#x5b57;&#x8282;&#x8fde;&#x63a5;&#x8d77;&#x6765;&#x7684;&#x3002;go",{"_index":3804,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x5b57;&#x8282;&#x4f7f",{"_index":3805,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#xff0c;&#x4ee5;&#x5404;&#x79cd;&#x5f62;&#x5f0f;&#x5bfc;&#x51fa;&#x5176;&#x4e2d;&#x7684;&#x5185;&#x5bb9;&#xff0c;&#x8fd8;&#x53ef;&#x4ee5;&#x987a;&#x5e8f;&#x5730;&#x8bfb;&#x53d6;&#x5176;&#x4e2d;&#x7684;&#x5b50;&#x5e8f;&#x5217;&#x3002",{"_index":3940,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#x6765;&#x521b;&#x5efa;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x3002",{"_index":3962,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5b57;&#x8282;&#x6570;&#xff0c;&#x5426;&#x5219;&#x8ba9",{"_index":3972,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x5b58;&#x5728;&#x3002",{"_index":2344,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x7684;&#x5b89;&#x88c5;&#x76ee;&#x5f55;&#xff08",{"_index":2329,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7684;&#x5b89;&#x88c5;&#x76ee;&#x5f55;&#xff0c;go",{"_index":2320,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7684;&#x5b9a;&#x4f4d;&#x4e0d;&#x662f;&#x505a;&#x7c7b;&#x4f3c;&#x8fde;&#x63a5;&#x6c60;&#x7684;&#x4e1c;&#x897f;&#xff0c;&#x5b83;&#x7684;&#x7528;&#x9014;&#x4ec5;&#x4ec5;&#x662f;&#x589e;&#x52a0",{"_index":5271,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7684;&#x5bf9;&#x5e94;&#x7684",{"_index":1896,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x7684;&#x5f15;&#x7528;&#xff0c;&#x5b83;&#x4e0d;&#x5b58;&#x50a8;&#x6570;&#x636e;&#xff0c;&#x53ea;&#x662f;&#x5bf9",{"_index":1361,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x60c5;&#x51b5;&#x3002;&#x5982;&#x679c;&#x901a;&#x9053;&#x5df2;&#x6ee1;&#xff0c;&#x90a3;&#x4e48;&#x5bf9;&#x5b83;&#x7684;&#x6240;&#x6709;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x90fd;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x901a;&#x9053;&#x4e2d;&#x6709;&#x5143;&#x7d20;&#x503c;&#x88ab;&#x63a5;&#x6536;&#x8d70;&#x3002;&#x76f8;&#x5bf9;&#x7684;&#xff0c;&#x5982;&#x679c;&#x901a;&#x9053;&#x5df2;&#x7a7a;&#xff0c",{"_index":2732,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x60c5;&#x51b5;&#x3002;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x5728;&#x51c6;&#x5907;&#x597d;&#x5143;&#x7d20;&#x503c;&#x7684;&#x526f;&#x672c;&#x4e4b;&#x540e;&#xff0c;&#x4e00;&#x5b9a;&#x4f1a;&#x5220;&#x9664;&#x6389;&#x901a;&#x9053;&#x4e2d;&#x7684;&#x539f;&#x503c;&#xff0c;&#x7edd;&#x4e0d;&#x4f1a;&#x51fa;&#x73b0;&#x901a;&#x9053;&#x4e2d;&#x4ecd;&#x6709;&#x6b8b;&#x7559;&#x7684;&#x60c5;&#x51b5;&#x3002",{"_index":2724,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x60c5;&#x51b5;&#x4e0b;&#x624d;&#x4f1a;&#x53bb;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684",{"_index":4324,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x610f;&#x601d;&#x662f;&#xff1a;&#x4e0d;&#x9700;&#x8981;&#x6301;&#x4e45;&#x4f7f;&#x7528;&#x7684;&#x67d0;&#x4e00;&#x7c7b;&#x503c;&#x3002;&#x8fd9;&#x7c7b;&#x503c;&#x5bf9;&#x4e8e;&#x7a0b;&#x5e8f;&#x6765;&#x8bf4;&#x53ef;&#x6709;&#x53ef;&#x65e0;&#xff0c;&#x4f46;&#x5982;&#x679c;&#x6709;&#x7684;&#x8bdd;&#x4f1a;&#x660e;&#x663e;&#x66f4;&#x597d;&#x3002;&#x5b83;&#x4eec;&#x7684;&#x521b;&#x5efa;&#x548c;&#x9500;&#x6bc1;&#x53ef;&#x4ee5;&#x5728",{"_index":5251,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7684;&#x6240;&#x6709",{"_index":1366,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x6267;&#x884c;&#x6808;&#x4e0a;&#x5e76;&#x6267;&#x884c",{"_index":4539,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6269;&#x5bb9;&#x7b56;&#x7565",{"_index":3970,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x6269;&#x5c55;&#x63a5;&#x53e3;&#x3002",{"_index":3462,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7684;&#x6269;&#x5c55;&#x63a5;&#x53e3;&#xff0c;&#x4e5f;&#x662f",{"_index":3489,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7684;&#x6269;&#x5c55;&#x63a5;&#x53e3;&#xff0c;&#x800c",{"_index":3461,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7684;&#x6269;&#x5c55;&#x63a5;&#x53e3;&#xff1a",{"_index":3487,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7684;&#x62a2;&#x5360;&#xff0c;&#x53ea;&#x6709;&#x957f;&#x65f6;&#x95f4;&#x963b;&#x585e;&#x4e8e;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#xff0c;&#x6216;&#x8005;&#x8fd0;&#x884c;&#x4e86;&#x8f83;&#x957f;&#x65f6;&#x95f4;&#x624d;&#x4f1a;&#x88ab;&#x62a2;&#x5360;&#x3002;runtim",{"_index":4573,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6307",{"_index":1317,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x6307;&#x9488;&#x57fa;&#x672c;&#x5c31;&#x662f;&#x4e00;&#x79cd;&#x5f15;&#x7528;&#x3002",{"_index":1319,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x6307;&#x9488;&#xff0c;&#x53cd;&#x800c;&#x4f1a;&#x4ea7;&#x751f;&#x9519;&#x8bef",{"_index":1370,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x63a5",{"_index":5212,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#xff0c;&#x624d;&#x80fd;&#x591f;&#x8d77;&#x5230;&#x611f;&#x77e5;&#x64a4;&#x9500;&#x4fe1;&#x53f7;&#x7684;&#x4f5c;&#x7528;&#x3002",{"_index":5220,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x6539;&#x52a8;&#x65e0;&#x6cd5;&#x4f5c;&#x7528;&#x5728;&#x5916;&#x90e8;&#x7684;&#x53d8;&#x91cf;&#x4e0a;&#xff0c;&#x4f8b;&#x5982;&#xff1a",{"_index":1351,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7684;&#x6570;&#x91cf",{"_index":1962,"title":{},"body":{"basic/map.html#map":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6570;&#x91cf;&#x3002;&#x76f8;&#x5bf9;&#x5e94;&#x7684;&#xff0c;&#x8fd9;&#x4e2a;&#x7c7b;&#x578b;&#x7684",{"_index":5048,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7684;&#x6570;&#x91cf;&#x51b3;&#x5b9a;&#x4e86;&#x7cfb;&#x7edf;&#x5185;&#x6700;&#x5927;&#x53ef;&#x5e76;&#x884c;&#x7684",{"_index":4297,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6570;&#x91cf;&#x53ef;&#x4ee5;&#x901a;&#x8fc7",{"_index":4295,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6570;&#x91cf;&#x76f8;&#x540c;&#x3002",{"_index":5028,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7684;&#x6570;&#x91cf;&#xff0c",{"_index":4298,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6570;&#x91cf;&#xff0c;&#x90a3;&#x4e48;&#x4f7f;&#x7528",{"_index":5130,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x6587;&#x6863;&#x6ce8;&#x91ca;&#xff1a",{"_index":3005,"title":{},"body":{"commands/build.html#工具":{}}}],["x7684;&#x65b0;&#x5185;&#x5bb9;&#x5c31;&#x88ab;&#x6cc4;&#x9732;&#x51fa;&#x6765;&#x4e86;&#x3002",{"_index":4007,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7684;&#x65b9;&#x6cd5;&#xff0c;&#x5b83;&#x7684;&#x4e3b;&#x8981;&#x529f;&#x80fd;&#x662f;&#x628a;&#x76f8;&#x5e94;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x6682;&#x5b58;&#x7684;&#x6240;&#x6709;&#x6570;&#x636e;&#xff0c;&#x90fd;&#x5199;&#x5230;&#x5e95;&#x5c42;&#x5199;&#x5165;&#x5668;&#x4e2d;&#x3002;&#x6570;&#x636e;&#x4e00;&#x65e6;&#x88ab;&#x5199;&#x8fdb;&#x5e95;&#x5c42;&#x5199;&#x5165;&#x5668;&#xff0c;&#x8be5;&#x65b9;&#x6cd5;&#x5c31;&#x4f1a;&#x628a;&#x5b83;&#x4eec",{"_index":3557,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7684;&#x65b9;&#x6cd5;&#xff0c;&#x6765;&#x81ea;&#x5b9a;&#x4e49;&#x8be5;&#x7c7b;&#x578b;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x8868;&#x793a;&#x5f62;&#x5f0f;&#x3002;&#x8fd9;&#x4e2a",{"_index":1190,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x7684;&#x65f6;&#x5019",{"_index":872,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x7684;&#x65f6;&#x5019;&#x4f7f;&#x7528;&#x7684;&#x90fd;&#x662f;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x3002;&#x8fd9;&#x662f;&#x7531;&#x4e8e",{"_index":4423,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x65f6;&#x5019;&#x6ce8;&#x518c;&#x4e86;&#x4e00;&#x4e2a",{"_index":5289,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7684;&#x65f6;&#x5019;&#xff0c",{"_index":3388,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7684;&#x65f6;&#x5019;&#xff0c;&#x4e0e;&#x4e4b;&#x5bf9;&#x5e94;&#x7684;&#x662f;&#x5207;&#x7247;&#x4e2d;&#x7684;&#x7b2c",{"_index":577,"title":{},"body":{"basic/flow.html#for":{}}}],["x7684;&#x65f6;&#x5019;&#xff0c;&#x5b83;&#x624d;&#x4f1a;&#x5728;&#x9501;&#x7684;&#x4fdd;&#x62a4;&#x4e0b;&#x53bb;&#x8bbf;&#x95ee;&#x810f;&#x5b57;&#x5178;&#x3002",{"_index":5350,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7684;&#x65f6;&#x5019;&#xff0c;&#x5c31;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x4e86;&#x3002",{"_index":5338,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7684;&#x666e;&#x901a;&#x6587;&#x672c;&#x4e86;&#x3002",{"_index":3390,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7684;&#x6700;&#x5927;&#x4e2a;&#x6570;&#x3002;&#x8fd9;&#x91cc;&#x7684;&#x903b;&#x8f91",{"_index":3273,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7684;&#x672c;&#x5730;&#x961f;&#x5217;&#x4e2d;&#x83b7;&#x53d6",{"_index":4537,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6784;&#x5efa;&#x5de5;&#x5177;&#x5bf9;&#x5305;&#x542b",{"_index":3023,"title":{},"body":{"commands/build.html#工具":{}}}],["x7684;&#x6807;&#x51c6;&#x5305;&#xff0c;&#x53ef;&#x4ee5;&#x4f7f;&#x7528",{"_index":1562,"title":{},"body":{"basic/package.html#包":{}}}],["x7684;&#x6807;&#x51c6;&#x5e93;&#x4e5f;&#x5728;&#x8fd9;&#x4e2a;&#x4f4d;&#x7f6e;&#x3002;&#x76ee;&#x5f55;&#x7ed3;&#x6784;&#x4e0",{"_index":2321,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7684;&#x6807;&#x51c6;&#x6a21;&#x5f0f;&#x6765;&#x6784;&#x5efa;&#x534f;&#x4f5c;&#x6d41;&#x7a0b;&#x3002;&#x5982;&#x679c;&#x5728;&#x8c03;&#x7528",{"_index":5125,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7684;&#x6807;&#x5fd7;&#xff1b;&#x540e;&#x9762;&#x534a;&#x53e5;&#x7684;&#x610f;&#x601d;&#x662f;&#x5f53;&#x524d;&#x5806;&#x4e0a;&#x7684;&#x6d3b;&#x8dc3;&#x5bf9;&#x8c61;&#x5927;&#x4e8e;&#x6211;&#x4eec;&#x521d;&#x59cb;&#x5316;&#x65f6;&#x5019;&#x8bbe;&#x7f6e;&#x7684",{"_index":869,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x7684;&#x6807;&#x8bc6;&#x7b26;&#x4f5c;&#x7528;&#x57df;&#x662f;&#x57fa;&#x4e8e;&#x4ee3;&#x7801;&#x5757;&#x7684;&#x3002;&#x4ee3;&#x7801;&#x5757;&#x5c31;&#x662f;&#x5305;&#x88f9;&#x5728;&#x4e00;&#x5bf9;&#x5927;&#x62ec;&#x53f7;&#x5185;&#x90e8;&#x7684;&#x58f0;&#x660e;&#x548c;&#x8bed;&#x53e5;&#xff0c;&#x5e76;&#x4e14;&#x662f;&#x53ef;&#x5d4c;&#x5957;&#x7684;&#x3002;&#x4ee3;&#x7801;&#x5757;&#x5185;&#x90e8;&#x58f0;&#x660e;&#x7684;&#x540d;&#x5b57;&#x662f;&#x65e0;&#x6cd5",{"_index":2121,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x7684;&#x6982;&#x5ff5;&#x6765;&#x89e3;&#x51b3;&#x8fd9;&#x4e9b;&#x95ee;&#x9898;&#xff0c;go",{"_index":4482,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x6d88;&#x606f;&#x5c31;&#x4e5f",{"_index":2756,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x6e90;&#x6587;&#x4ef6;&#x4e2d;&#x3002",{"_index":3008,"title":{},"body":{"commands/build.html#工具":{}}}],["x7684;&#x72b6;&#x6001;&#x4e0d;&#x53d8;&#xff0c;&#x5373;&#x4f7f;&#x5f53;&#x524d;&#x7684",{"_index":4929,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7684;&#x73af;&#x5883;&#x9700;&#x8981;&#x5f00;&#x542f",{"_index":2365,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x7684;&#x7b2c;&#x4e8c;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x6765;&#x5224;&#x65ad;&#x901a;&#x9053;&#x662f;&#x5426;&#x5df2;&#x7ecf;&#x5173;&#x95ed;&#x3002;&#x4e00;&#x65e6;&#x53d1;&#x73b0;&#x67d0;&#x4e2a;&#x901a;&#x9053;&#x5173;&#x95ed;&#x4e86;&#xff0c;&#x6211;&#x4eec;&#x5c31;&#x5e94;&#x8be5;&#x53ca;&#x65f6;&#x5730;&#x5c4f;&#x853d;&#x6389;&#x5bf9;&#x5e94;&#x7684;&#x5206;&#x652f;&#x6216;&#x8005;&#x91c7;&#x53d6;&#x5176;&#x4ed6;&#x63aa;&#x65bd;&#x3002;&#x8fd9;&#x5bf9",{"_index":2784,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x7c7b;&#x578b",{"_index":296,"title":{},"body":{"index.html#类型断言":{},"basic/oop.html#方法":{}}}],["x7684;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x88ab;&#x7528;&#x6765;&#x5b58;&#x50a8;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x3002",{"_index":4972,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x7684;&#x7ec4;&#x5408;&#x3002",{"_index":3499,"title":{},"body":{"packages/io.html#io包中的接口和工具":{},"packages/os.html#os包中的API":{}}}],["x7684;&#x7ec4;&#x5408;&#xff0c;&#x6211;&#x4eec;&#x901a;&#x8fc7",{"_index":720,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7684;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x5c06;&#x4e0d;&#x80fd;&#x518d;&#x5305;&#x542b",{"_index":1754,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7684;&#x7ed3;&#x679c;&#x503c;&#x3002",{"_index":3511,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7684;&#x7ed3;&#x679c;&#x662f",{"_index":1878,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x7684;&#x7f13;&#x5b58;&#x961f;&#x5217",{"_index":2699,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x7f16;&#x7a0b;&#x65b9;&#x6cd5;&#x80fd;&#x591f;&#x8ba9;&#x4e00;&#x4e2a",{"_index":4265,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x7f29;&#x5199;&#x3002",{"_index":345,"title":{},"body":{"index.html#编码":{}}}],["x7684;&#x7f29;&#x5199;&#xff09;&#xff0c",{"_index":4285,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x7f29;&#x5199;&#xff09;&#xff0c;&#x4ee3;&#x8868;&#x7684;&#x662f;&#x7cfb;&#x7edf;&#x7ea7;&#x7ebf;&#x7a0b;&#xff0c;&#x7531;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7ba1;&#x7406;&#x3002",{"_index":4302,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x7f29;&#x5199;&#xff09;&#xff0c;&#x4ee3;&#x8868;&#x7684;&#x662f;&#x7cfb;&#x7edf;&#x7ea7;&#x7ebf;&#x7a0b;&#xff0c;&#x7531;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7ba1;&#x7406;&#x3002;goroutin",{"_index":4531,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x7f29;&#x5199;&#xff09;&#xff0c;&#x662f;&#x8854;&#x63a5",{"_index":4289,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x7f29;&#x5199;&#xff0c;&#x4f46;&#x4e5f;&#x53ef;&#x4ee5;&#x4ee3;&#x8868",{"_index":348,"title":{},"body":{"index.html#编码":{}}}],["x7684;&#x80fd;&#x529b;&#x3002",{"_index":3279,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7684;&#x8303;&#x56f4;&#x5185;&#x3002",{"_index":254,"title":{},"body":{"index.html#类型转换":{}}}],["x7684;&#x8303;&#x56f4;&#x5185;&#xff0c;&#x8fd9;&#x4e24;&#x79cd;&#x7f16;&#x7801;&#x8868;&#x793a;&#x7684;&#x5b57;&#x7b26;&#x90fd;&#x662f;&#x76f8;&#x540c;&#x7684;&#x3002",{"_index":361,"title":{},"body":{"index.html#编码":{}}}],["x7684;&#x884c;&#x4e3a;&#x5219;&#x4f9d;&#x8d56;&#x4e8e;&#x64cd;&#x4f5c;&#x6570;&#x662f;&#x5426;&#x4e3a;&#x5168;&#x4e3a;&#x6574;&#x6570;&#xff0c;&#x6bd4;&#x5982",{"_index":1877,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x7684;&#x89e3;&#x6784;&#x8d4b;&#x503c;&#x7684;&#x8bed;&#x6cd5",{"_index":2525,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x7684;&#x89e6;&#x53d1;&#x9608;&#x503c",{"_index":875,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x7684;&#x8bdd",{"_index":1894,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x7684;&#x8bed;&#x53e5;&#x4e4b;&#x540e;&#x7684;&#x6240;&#x6709;&#x8bed;&#x53e5;&#xff0c;&#x90fd;&#x4e0d;&#x4f1a;&#x6709;&#x4efb;&#x4f55;&#x6267;&#x884c;&#x673a;&#x4f1a",{"_index":1047,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x7684;&#x8bed;&#x6cd5;&#x548c;&#x6570;&#x7ec4;&#x5f88;&#x50cf;&#xff0c;&#x7531;&#x4e8e;&#x6570;&#x7ec4;&#x957f;&#x5ea6;&#x662f;&#x56fa;&#x5b9a;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x4f7f;&#x7528",{"_index":2049,"title":{},"body":{"basic/slice.html#slice":{}}}],["x7684;&#x8c03;&#x5ea6;&#x4e0a;&#x4e0b;&#x6587;&#xff0c;&#x4e00;&#x4e2a",{"_index":4290,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x8c03;&#x5ea6;&#x5168;&#x8981;&#x9760",{"_index":4496,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x8c03;&#x5ea6;&#x95ee;&#x9898;&#x5c31;&#x53d8;&#x6210;&#x4e86",{"_index":4504,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x8d1f;&#x62c5;&#x3002;&#x56e0;&#x4e3a",{"_index":5273,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7684;&#x8eab;&#x4efd;&#x4fe1;&#x606f;&#x3002;&#x8bb0;&#x5f55;&#x4e0b;&#x6240;&#x6709;&#x7684;&#x540c;&#x6b65;&#x4e8b;&#x4ef6;&#xff0c;&#x6bd4;&#x5982",{"_index":5376,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x7684;&#x8fd0;&#x884c;&#x7ed3;&#x675f;&#x3002;&#x66f4;&#x5177;&#x4f53;&#x5730;&#x8bf4;&#x5c31;&#x662f;&#xff1a;&#x8ba9;&#x5176;&#x4ed6;&#x7684",{"_index":5030,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7684;&#x8fed;&#x4ee3;&#x987a;&#x5e8f;&#x662f;&#x4e0d;&#x786e;&#x5b9a;&#x7684;&#x3002;&#x53ef;&#x4ee5;&#x5148;&#x4f7f;&#x7528",{"_index":1973,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x901a;&#x4fe1;&#x6765;&#x8ba9;&#x4e00;&#x4e2a",{"_index":4268,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x901a;&#x9053;&#xff0c;&#x4e0d;&#x8bba;&#x5b83;&#x7684;&#x5177;&#x4f53;&#x7c7b;&#x578b;&#x662f;&#x4ec0;&#x4e48;&#xff0c;&#x5bf9;&#x5b83;&#x7684;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x548c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x90fd;&#x4f1a;&#x6c38;&#x4e45;&#x5730;&#x5904;&#x4e8e;&#x963b;&#x585e;&#x72b6;&#x6001",{"_index":2740,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x903b;&#x8f91",{"_index":3272,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7684;&#x90a3;&#x4e2a;&#x503c;&#xff0c;&#x6240;&#x4ee5;&#x9700;&#x8981;&#x7684;&#x4ecd;&#x7136;&#x662f;&#x6307;&#x5411;&#x8fd9;&#x4e2a;&#x6307;&#x9488;&#x503c;&#x7684;&#x6307;&#x9488;&#x3002",{"_index":4981,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x7684;&#x9519;&#x8bef;&#xff09",{"_index":2372,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x7684;&#x952e;&#x548c;&#x5143;&#x7d20;&#x7684;&#x6700;&#x5927;&#x4e0d;&#x540c;&#x5728;&#x4e8e;&#xff0c;&#x524d;&#x8005;&#x7684;&#x7c7b;&#x578b;&#x662f;&#x53d7;&#x9650;&#x7684;&#xff0c;&#x800c;&#x540e;&#x8005;&#x5374;&#x53ef;&#x4ee5;&#x662f;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x3002",{"_index":1976,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x952e;&#x7c7b;&#x578b;&#x4e0d;&#x53ef;&#x4ee5;&#x662f;&#x51fd;&#x6570;&#x7c7b;&#x578b;&#x3001;&#x5b57;&#x5178;&#x7c7b;&#x578b;&#x548c;&#x5207;&#x7247;&#x7c7b;&#x578b",{"_index":1977,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x952e;&#x7c7b;&#x578b;&#x4e0d;&#x80fd;&#x662f;&#x54ea;&#x4e9b;&#x7c7b;&#x578b",{"_index":1975,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x957f;&#x5ea6;&#x662f;&#x4e0d;&#x56fa;&#x5b9a;&#x7684;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x548c",{"_index":1956,"title":{},"body":{"basic/map.html#map":{}}}],["x7684;&#x961f;&#x5217;&#x4e2d;&#x3002;&#x8fd9;&#x7c7b;&#x961f;&#x5217;&#x4e2d;&#x7684",{"_index":4333,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x961f;&#x5217;&#x4e2d;&#x83b7;&#x53d6;&#x4e00;&#x4e2a",{"_index":4321,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7684;&#x961f;&#x5217;&#x4e2d;&#xff0c;&#x7ed1;&#x5b9a;&#x4e00;&#x4e2a",{"_index":4619,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7684;&#x96c6;&#x5408;&#x800c;&#x8a00;&#x7684;&#x3002",{"_index":5332,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7684;&#x96f6;&#x503c;&#x662f",{"_index":2643,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#x9879;&#x76ee;&#x6784;&#x5efa;&#xff0c;&#x5176;&#x4e3b;&#x8981;&#x662f;&#x901a;&#x8fc7",{"_index":2346,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x7684;&#xff0c;&#x8fd9;&#x4e5f;&#x662f",{"_index":2631,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7684;&#xff0c;&#x90a3;&#x4e48;&#x6211;&#x4eec;&#x5b9a;&#x4e49;&#x7684;&#x53d8;&#x91cf",{"_index":772,"title":{},"body":{"basic/interface.html#接口":{}}}],["x76ee;&#x3002",{"_index":1197,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x76ee;&#x5f55",{"_index":3643,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x76ee;&#x5f55;&#x3002",{"_index":2938,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x3002;&#x5b89;&#x88c5;&#x5b8c;&#x6210;&#x540e;&#x9ed8;&#x8ba4;&#x4f1a;&#x5c06",{"_index":2307,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x4f1a;&#x6709",{"_index":2921,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x521b;&#x5efa",{"_index":3652,"title":{},"body":{"theme/theme-usage.html#Index":{},"theme/theme-usage.html#添加文档":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x53ef;&#x4ee5;&#x770b;&#x5230",{"_index":2923,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#x4e0b;&#x7684",{"_index":3658,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x76ee;&#x5f55;&#x4e0b;&#xff0c;&#x4f8b;&#x5982",{"_index":3642,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x76ee;&#x5f55;&#x4e0b;&#xff0c;&#x76ee;&#x5f55;&#x8def;&#x5f84;&#x548c",{"_index":2936,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#x6709;&#x540c;&#x4e00;&#x4e2a;&#x7236;&#x76ee;&#x5f55;&#x7684;&#x5305;&#x6240;&#x5bfc;&#x5165;&#x3002;&#x5982;&#xff1a",{"_index":3027,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#x6dfb;&#x52a0;&#x5230",{"_index":2308,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x76ee;&#x5f55;&#x7684;&#x76f8;&#x5bf9;&#x8def;&#x5f84;&#x5c31;&#x662f;&#x5b83;&#x7684;&#x4ee3;&#x7801;&#x5305;&#x5bfc;&#x5165;&#x8def;&#x5f84;&#xff0c;&#x800c;&#x5b9e;&#x9645;&#x4f7f;&#x7528;&#x5176;&#x7a0b;&#x5e8f;&#x5b9e;&#x4f53;&#x65f6;&#x7ed9;&#x5b9a;&#x7684;&#x9650;&#x5b9a;&#x7b26;&#x8981;&#x4e0e;&#x5b83",{"_index":1610,"title":{},"body":{"basic/package.html#点操作":{}}}],["x76ee;&#x5f55;&#x8def;&#x5f84;&#x5bf9;&#x5e94;&#xff0c;&#x53ef;&#x6267;&#x884c;&#x7a0b;&#x5e8f;&#x88ab;&#x4fdd;&#x5b58;&#x5230",{"_index":2937,"title":{},"body":{"commands/build.html#工具":{}}}],["x76ee;&#x5f55;&#xff0c",{"_index":2968,"title":{},"body":{"commands/build.html#工具":{}}}],["x76f4;&#x5230;&#x4fe1;&#x9053;&#x5173;&#x95ed;&#xff0c;&#x6240;&#x4ee5;&#x5bfc",{"_index":2675,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x76f4;&#x5230;&#x6301;&#x6709;&#x8fd9;&#x4e2a;&#x9501;&#x7684",{"_index":4789,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x76f4;&#x5230;&#x81f3;&#x5c11;&#x6709;&#x4e00;&#x4e2a",{"_index":2781,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x76f4;&#x5230;&#x8be5;&#x53d8;&#x91cf;&#x4e0d;&#x518d;&#x88ab;&#x5f15;&#x7528;&#x4e3a;&#x6b62;&#xff0c;&#x7136;&#x540e;&#x53d8;&#x91cf;&#x7684;&#x5b58;&#x50a8;&#x7a7a;&#x95f4;&#x53ef;&#x80fd;&#x88ab;&#x56de;&#x6536;&#x3002",{"_index":320,"title":{},"body":{"index.html#类型断言":{}}}],["x76f4;&#x63a5;&#x521d;&#x59cb;&#x5316;&#x5207;&#x7247;&#xff0c",{"_index":2060,"title":{},"body":{"basic/slice.html#slice":{}}}],["x76f4;&#x63a5;&#x8fd4;&#x56de;&#xff0c;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#x4e5f;&#x4e0d;&#x9700;&#x8981;&#x7528;&#x5230;&#x9501;&#x3002",{"_index":5353,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x76f8;&#x4e58;&#xff09;&#xff0c;&#x76f4;&#x5230;&#x7ed3;&#x679c;&#x4e0d;&#x5c0f;&#x4e8e;&#x539f;&#x957f;&#x5ea6;&#x4e0e;&#x8981;&#x8ffd;&#x52a0;&#x7684;&#x5143;&#x7d20;&#x6570;&#x91cf;&#x4e4b;&#x548c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x65b0;&#x957f;&#x5ea6;&#xff09;&#x3002;&#x6700;&#x7ec8;&#xff0c;&#x65b0;&#x5bb9;&#x91cf",{"_index":2101,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x76f8;&#x5173;&#x73af;&#x5883;&#x53d8;&#x91cf",{"_index":3042,"title":{},"body":{"commands/build.html#工具":{}}}],["x76f8;&#x5173;&#x7684;&#x7cfb;&#x7edf;&#x8c03;&#x7528;&#x8fd4;&#x56de;&#xff0c;&#x5e76;&#x4f5c;&#x4e3a;&#x67d0;&#x4e2a;&#x6587;&#x4ef6;&#x7684;&#x4e00;&#x4e2a;&#x6807;&#x8bc6;&#x5b58;&#x5728;&#x3002",{"_index":4124,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x76f8;&#x53cd;&#xff0c;&#x5982;&#x679c",{"_index":2704,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x76f8;&#x5bf9;&#x5e94;&#x7684;&#xff0c",{"_index":5351,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x76f8;&#x5dee;&#x65e0;&#x51e0;&#x3002",{"_index":3838,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x76f8;&#x5e94;&#x7684",{"_index":1900,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x76f8;&#x5f53;&#x4e8e",{"_index":561,"title":{},"body":{"basic/flow.html#for":{}}}],["x76f8;&#x5f53;&#x4e8e;&#x91cd;&#x65b0;&#x5b9a;&#x4e49;&#x5e76;&#x521d;&#x59cb;&#x5316;&#x4e86;&#x540c;&#x540d;&#x7684;&#x5c40;&#x90e8;&#x53d8;&#x91cf",{"_index":1828,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x76f8;&#x6bd4",{"_index":1312,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x76f8;&#x6bd4;&#x6570;&#x7ec4;&#x4f1a;&#x66f4;&#x7075;&#x6d3b;&#xff0c",{"_index":2050,"title":{},"body":{"basic/slice.html#slice":{}}}],["x7701;&#x7565;&#x53f7;&#xff0c;&#x8868;&#x793a;&#x6570;&#x7ec4;&#x7684;&#x957f;&#x5ea6;&#x662f;&#x6839;&#x636e;&#x521d;&#x59cb;&#x5316;&#x503c;&#x7684;&#x4e2a;&#x6570;&#x6765;&#x8ba1;&#x7b97",{"_index":471,"title":{},"body":{"basic/array.html#数组":{}}}],["x770b;&#x4f5c;&#x4e00;&#x4e2a;&#x57fa;&#x7c7b;&#xff0c;&#x800c",{"_index":1158,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x770b;&#x4f5c;&#x5176;&#x5b50;&#x7c7b;&#x6216;&#x8005;&#x7ee7;&#x627f;&#x7c7b;&#x3002",{"_index":1159,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x7801;&#x5305",{"_index":4961,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x7801;&#x70b9;&#x3002",{"_index":3797,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x786e;&#x4fdd;&#x9879;&#x76ee;&#x76ee;&#x5f55;&#x4e0d;&#x5728",{"_index":2367,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x793a;&#x4f8b;&#x51fd;&#x6570",{"_index":3219,"title":{"basic/test.html#示例函数":{}},"body":{}}],["x793a;&#x4f8b;&#x51fd;&#x6570;&#x5c06;&#x662f",{"_index":3223,"title":{},"body":{"basic/test.html#示例函数":{}}}],["x793a;&#x4f8b;&#x51fd;&#x6570;&#xff0c;&#x63d0;&#x4f9b;&#x4e00;&#x4e2a;&#x7531;&#x7f16;&#x8bd1;&#x5668;&#x4fdd;&#x8bc1;&#x6b63;&#x786e;&#x6027;&#x7684;&#x793a;&#x4f8b;&#x6587;&#x6863;&#x3002",{"_index":3163,"title":{},"body":{"basic/test.html#测试":{}}}],["x793a;&#x4f8b;1&#x3002",{"_index":3951,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x793a;&#x4f8b;2&#x3002",{"_index":3952,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7981;&#x6b62;&#x5305;&#x7684;&#x5faa;&#x73af;&#x4f9d;&#x8d56;&#xff0c;&#x6bcf;&#x4e2a;&#x5305;&#x53ef;&#x4ee5;&#x88ab;&#x72ec;&#x7acb;&#x7f16;&#x8bd1;&#xff0c;&#x800c;&#x4e14;&#x5f88;&#x53ef;&#x80fd;&#x662f;&#x88ab;&#x5e76;&#x53d1;&#x7f16;&#x8bd1;&#x3002",{"_index":1570,"title":{},"body":{"basic/package.html#包":{}}}],["x79cd;&#x3002",{"_index":1200,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x79d1;&#x3002",{"_index":1198,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x79f0;&#x4e3a;&#x7528;&#x6237;&#x7ea7;&#x7684",{"_index":4844,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x7a0b",{"_index":4307,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x4e2d;&#x5b58;&#x5728;&#x8fc7;&#x591a;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x62fc;&#x63a5;&#x64cd;&#x4f5c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x4f1a;&#x5bf9;&#x5185;&#x5b58;&#x7684;&#x5206;&#x914d;&#x4ea7;&#x751f;&#x975e;&#x5e38;&#x5927;&#x7684;&#x538b;&#x529b",{"_index":3874,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7a0b;&#x5e8f;&#x4e2d;&#x7684;&#x4e00;&#x4e2a",{"_index":3330,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7a0b;&#x5e8f;&#x4e2d;&#xff0c;&#x9664;&#x4e86;&#x7528;&#x6237;&#x4ee3;&#x7801;&#xff0c;&#x5269;&#x4e0b;&#x7684;&#x5c31;&#x662f",{"_index":4502,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x4f1a;&#x7acb;&#x5373;&#x7ed3;&#x675f;&#x8fd0;&#x884c;&#x3002;&#x90a3;&#x4e48;&#xff0c;&#x5982;&#x679c;&#x8fd9;&#x6837;&#x7684;&#x8bdd;&#xff0c;&#x8fd8;&#x4f1a;&#x6709;&#x4efb;&#x4f55;&#x5185;&#x5bb9;&#x88ab;&#x6253;&#x5370;&#x51fa;&#x6765;&#x5417;&#xff1f",{"_index":4360,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x5185",{"_index":4498,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x5728;&#x8fd0;&#x884c;&#x65f6;&#x4e5f;&#x603b;&#x4f1a;&#x6709;&#x4e00;&#x4e2a;&#x4e3b",{"_index":4304,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x5728;&#x8fd0;&#x884c;&#x671f;&#x95f4;&#x7684;&#x5806;&#x5185;&#x5b58;&#x4f7f;&#x7528;&#x60c5;&#x51b5;&#x3002;&#x8bbe;&#x5b9a;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x91c7;&#x6837;&#x9891;&#x7387;&#x7684;&#x65b9;&#x6cd5;&#x5f88;&#x7b80;&#x5355;&#xff0c",{"_index":3340,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7a0b;&#x5e8f;&#x5b8c;&#x5168;&#x4e0d;&#x4f1a;&#x7b49;&#x5f85",{"_index":4345,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x5bf9",{"_index":3332,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7a0b;&#x5e8f;&#x5bf9;&#x4e8e;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x6765;&#x8bf4;&#x53ea;&#x662f;&#x4e00;&#x4e2a;&#x7528;&#x6237;&#x5c42;&#x7a0b;&#x5e8f;&#xff0c;&#x5bf9;&#x4e8e;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x800c;&#x8a00;&#xff0c;&#x5b83;&#x7684;&#x773c;&#x4e2d;&#x53ea;&#x6709",{"_index":4493,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x5c31;&#x4f1a;&#x7ed3;&#x675f;&#x8fd0;&#x884c;&#xff0c;&#x65e0;&#x8bba;&#x5176;&#x4ed6;&#x7684",{"_index":4377,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x5c42;&#x9762;&#xff0c;&#x5404;&#x4e2a",{"_index":4513,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x5f00;&#x59cb;&#x6267;&#x884c;&#x65f6;&#x6309;&#x7167;&#x5b83;&#x4eec;&#x58f0;&#x660e;&#x7684;&#x987a;&#x5e8f;&#x81ea;&#x52a8;&#x8c03;&#x7528;&#x3002",{"_index":1653,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x7a0b;&#x5e8f;&#x662f;&#x7528;&#x6237;&#x5c42;&#x7a0b;&#x5e8f;&#xff0c;&#x5b83;&#x672c;&#x8eab;&#x6574;&#x4f53;&#x662f;&#x8fd0;&#x884c;&#x5728;&#x4e00;&#x4e2a;&#x6216;&#x591a;&#x4e2a;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7ebf;&#x7a0b;&#x4e0a;&#x7684;&#xff0c;&#x56e0;&#x6b64",{"_index":4516,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x6765;&#x8bf4;&#x7684;&#x3002;&#x6211;&#x4eec;&#x5728;&#x5927;&#x591a;&#x6570;&#x65f6;&#x5019;&#x90fd;&#x4e0d;&#x4f1a;&#x6709;&#x660e;&#x663e;&#x7684;&#x611f;&#x89c9;&#x3002",{"_index":4341,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x4e00;&#x7cfb;&#x5217;&#x72b6;&#x6001;&#xff0c;&#x4e8e;&#x662f;&#x5f15;&#x5165;&#x4e86;&#x8fdb;&#x7a0b;&#x8fd9;&#x4e2a;&#x6982;&#x5ff5;&#xff0c;&#x7528;&#x4ee5;&#x5212;&#x5206;&#x597d;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x65f6;&#x6240;&#x9700;&#x8981;&#x7684;&#x8d44;&#x6e90;&#x3002;&#x56e0;&#x6b64;&#x8fdb;&#x7a0b;&#x5c31;&#x662f;&#x4e00;&#x4e2a;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x65f6;&#x5019;&#x7684;&#x6240;&#x9700;&#x8981;&#x7684;&#x57fa;&#x672c;&#x8d44;&#x6e90;&#x5355",{"_index":4233,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x521d;&#x59cb;&#x5316;&#x548c;&#x6267;&#x884c;&#x90fd;&#x8d77;&#x59cb;&#x4e8",{"_index":1659,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x521d;&#x59cb;&#x5316;&#x8fc7;&#x7a0b;&#x4e2d;&#xff0c;runtim",{"_index":4577,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x547d;&#x4ee4;&#x884c;&#x53c2;&#x6570;&#x53ef;&#x4f7f;&#x7528",{"_index":208,"title":{},"body":{"index.html#os-Args":{}}}],["x7a0b;&#x5e8f;&#x7684;&#x8fd0;&#x884c;&#x8fc7;&#x7a0b;&#x4e2d;&#x81f3;&#x5173;&#x91cd;&#x8981;&#x3002",{"_index":4586,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7a7a",{"_index":735,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7a7a;&#x63a5;&#x53e3;&#x7c7b;&#x578b",{"_index":733,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7a7a;&#x6807;&#x8bc6;&#x7b26",{"_index":213,"title":{"index.html#空标识符":{}},"body":{}}],["x7acb;&#x5373;&#x7ec8;&#x6b62;&#x5f53;&#x524d;&#x4efb;&#x52a1;&#xff0c;runtim",{"_index":4448,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7acb;&#x5373;&#x8c03;&#x7528",{"_index":5166,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7ade;&#x4e89;&#x68c0;&#x67e5;&#x5668",{"_index":5372,"title":{"concurrent/sync_lock.html#竞争检查器":{}},"body":{}}],["x7ade;&#x4e89;&#x7684",{"_index":4510,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7b26;&#x4e32;&#x7c7b;&#x578b;&#xff0c;&#x7531;&#x4e8e;&#x5b83;&#x7684;&#x5bbd;&#x5ea6;&#x662f;&#x4e0d;&#x5b9a;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x8981;&#x770b;&#x5b83;&#x7684;&#x503c;&#x7684;&#x5177;&#x4f53;&#x957f;&#x5ea6;&#xff0c;&#x957f;&#x5ea6;&#x8d8a;&#x77ed;&#x6c42;&#x54c8;&#x5e0c;&#x8d8a;&#x5feb;&#x3002",{"_index":1991,"title":{},"body":{"basic/map.html#map":{}}}],["x7b26;&#x4e32;&#xff0c;&#x9700;&#x8981;&#x91cd;&#x65b0;&#x5206;&#x914d;&#x5185;&#x5b58;&#xff0c;&#x4f1a;&#x7ed9;&#x5185;&#x5b58;&#x5206;&#x914d;&#x548c",{"_index":3822,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7b2c;&#x4e00;&#x4e2a;&#x521d;&#x59cb;&#x5316",{"_index":1640,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x7b2c;&#x4e00;&#x4e2a;&#x6807;&#x8bb0;&#x53ca;&#x5176;&#x503c;&#x4e3a",{"_index":3253,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7b2c;&#x4e00;&#x884c;&#x662f",{"_index":956,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x7b2c;&#x4e00;&#x884c;&#x7d22;&#x5f15;&#x4e3a",{"_index":475,"title":{},"body":{"basic/array.html#二维数组":{}}}],["x7b2c;&#x4e00;&#x884c;&#x901a;&#x5e38;&#x662f;&#x6458;&#x8981;&#x8bf4;&#x660e;&#xff0c;&#x4ee5;&#x88ab;&#x6ce8;&#x91ca;&#x8005;&#x7684;&#x540d;&#x5b57;&#x5f00;&#x5934;&#x3002",{"_index":3003,"title":{},"body":{"commands/build.html#工具":{}}}],["x7b2c;&#x4e09;&#x4e2a;&#x521d;&#x59cb;&#x5316",{"_index":1635,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x7b2c;&#x4e09;&#x884c;&#x7d22;&#x5f15;&#x4e3a",{"_index":477,"title":{},"body":{"basic/array.html#二维数组":{}}}],["x7b2c;&#x4e8c;&#x4e2a;&#x521d;&#x59cb;&#x5316",{"_index":1637,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x7b2c;&#x4e8c;&#x4e2a;&#x5faa;&#x73af;&#x53d8;&#x91cf;&#x53ef;&#x4ee5;&#x5ffd;&#x7565;&#xff0c;&#x4f46;&#x662f;&#x7b2c;&#x4e00;&#x4e2a;&#x53d8;&#x91cf;&#x8981;&#x5ffd;&#x7565;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x7a7a;&#x6807;&#x8bc6;&#x7b26",{"_index":562,"title":{},"body":{"basic/flow.html#for":{}}}],["x7b2c;&#x4e8c;&#x4e2a;&#x6807;&#x8bb0;&#x53ca;&#x5176;&#x503c;&#x662f",{"_index":3257,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x7b2c;&#x4e8c;&#x884c;&#x7d22;&#x5f15;&#x4e3a",{"_index":476,"title":{},"body":{"basic/array.html#二维数组":{}}}],["x7b49;&#x3002",{"_index":4287,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7b49;&#x3002;&#x8fd9;&#x4e9b;&#x7c7b;&#x578b;&#x7684;&#x5185;&#x5b58;&#x5360;&#x7528;&#x5c0f;&#xff0c;&#x5bb9;&#x6613;&#x56de;&#x6536;&#xff0c;&#x57fa;&#x672c;&#x4e0a;&#x5b83;&#x4eec;&#x7684;&#x503c;&#x548c;&#x6307;&#x9488;&#x5360;&#x7528;&#x7684;&#x7a7a;&#x95f4;&#x5dee;&#x4e0d;&#x591a;&#xff0c;&#x56e0;&#x6b64;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x590d;&#x5236;&#xff0c",{"_index":1326,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7b49;&#x4ef7;&#x4e8",{"_index":1845,"title":{},"body":{"basic/var.html#赋值":{}}}],["x7b49;&#x5176;&#x4ed6;&#x5c5e;&#x6027;&#x3002",{"_index":3663,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x7b49;&#x5305;&#x63d0;&#x4f9b;&#x652f;&#x6301;&#xff0c",{"_index":1441,"title":{},"body":{"basic/json.html#序列化":{}}}],["x7b49;&#x540c;&#x6b65;&#x5b57;&#x6bb5;&#xff0c;&#x4f7f;&#x7528",{"_index":1149,"title":{},"body":{"basic/oop.html#方法":{}}}],["x7b49;&#x5f15;&#x7528;&#x7c7b;&#x578b;&#x7684;&#x8bed;&#x8a00;&#xff0c;golang",{"_index":1314,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7b49;&#x5f85;&#x5176;&#x4ed6",{"_index":4374,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7b49;&#x64cd;&#x4f5c;&#x65f6;&#x624d;&#x4f1a;&#x89e6;&#x53d1;&#x5207;&#x6362;&#x3002",{"_index":4564,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7b49;&#x7684;&#x5e76;&#x53d1;&#x5b9e;&#x73b0;&#x5c31;&#x662f;&#x57fa",{"_index":4464,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7b49;&#x7b49;&#x7684;&#x8c03;&#x7528;&#x3002",{"_index":5379,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x7b49;&#x7c7b;&#x578b;&#xff08",{"_index":2508,"title":{},"body":{"basic/function.html#参数":{}}}],["x7b54;&#x6848;&#x662f;&#xff1a;&#x539f;&#x6570;&#x7ec4;&#x4e0d;&#x4f1a;&#x6539;&#x53d8;&#x3002;&#x4e3a;&#x4ec0;&#x4e48;&#x5462;&#xff1f;&#x539f;&#x56e0;&#x662f;&#xff0c",{"_index":2594,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x7b54;&#x6848;&#x662f;&#xff1a;g",{"_index":4557,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7b80;&#x5316;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x4ee3;&#x7801",{"_index":2996,"title":{},"body":{"commands/build.html#工具":{}}}],["x7b80;&#x5355;&#x5730;&#x5728",{"_index":2791,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7b80;&#x5355;&#x6765;&#x8bf4;&#xff0c;&#x9762;&#x5411;&#x5bf9;&#x8c61;&#x7f16;&#x7a0b;&#x4e2d;&#x7684;&#x7ee7;&#x627f;&#xff0c;&#x5176;&#x5b9e;&#x662f;&#x901a;&#x8fc7;&#x727a;&#x7272;&#x4e00;&#x5b9a;&#x7684;&#x4ee3;&#x7801;&#x7b80;&#x6d01;&#x6027;&#x6765;&#x6362;&#x53d6;&#x53ef;&#x6269;&#x5c55;&#x6027;&#xff0c;&#x800c;&#x4e14;&#x8fd9;&#x79cd;&#x53ef;&#x6269;&#x5c55;&#x6027;&#x662f;&#x901a;&#x8fc7;&#x4fb5;&#x5165;&#x7684;&#x65b9;&#x5f0f;&#x6765;&#x5b9e;&#x73b0;&#x7684;&#x3002",{"_index":1174,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x7b80;&#x5355;&#x7684;&#x8bf4;&#xff0c",{"_index":718,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7b80;&#x77ed;&#x5199;&#x6cd5",{"_index":1130,"title":{},"body":{"basic/oop.html#方法":{}}}],["x7b80;&#x77ed;&#x58f0;&#x660",{"_index":1824,"title":{"basic/var.html#简短声明":{}},"body":{}}],["x7b80;&#x77ed;&#x58f0;&#x660e;&#xff0c;&#x5e76;&#x4e0d;&#x603b;&#x662f;&#x91cd;&#x65b0;&#x5b9a;&#x4e49;&#x6bd4;&#x53d8;&#x91cf;&#xff0c;&#x8981;&#x907f;&#x514d;&#x91cd;&#x65b0;&#x5b9a;&#x4e49;&#xff0c;&#x9996;&#x5148;&#x8981;&#x5728;&#x540c;&#x4e00;&#x4e2a;&#x4f5c;&#x7528;&#x57df;&#x4e2d;&#xff0c;&#x81f3;&#x5c11;&#x6709;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x53d8;&#x91cf;&#x88ab;&#x5b9a;&#x4e49;&#xff1a",{"_index":1832,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x7b97;&#x672f;&#x8fd0;&#x7b97;&#x7b26",{"_index":1872,"title":{"basic/operator.html#算术运算符":{}},"body":{}}],["x7bb1;&#x91cc;&#x6ca1;&#x6709;&#x60c5;&#x62a5;&#xff0c;&#x90a3;&#x4e5f;&#x53ea;&#x80fd;&#x5148;&#x56de;&#x53bb;&#x4e86;&#x3002",{"_index":4884,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7c7b",{"_index":4481,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7c7b;&#x4f3c;&#x3002",{"_index":2322,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7c7b;&#x4f3c;&#x3002;go",{"_index":1559,"title":{},"body":{"basic/package.html#包":{}}}],["x7c7b;&#x4f3c;&#x4e8e;&#x7528;&#x4e8e;&#x901a;&#x4fe1;&#x7684",{"_index":548,"title":{},"body":{"basic/flow.html#select":{}}}],["x7c7b;&#x4f3c;&#x7684;&#x65b9;&#x6cd5;&#xff0c;&#x8fd8;&#x6709;&#x989d;&#x5916;&#x4e00;&#x4e9b;&#x548c;&#x6027;&#x80fd;&#x6d4b;&#x91cf;&#x76f8;&#x5173;&#x7684;&#x65b9;&#x6cd5;&#x3002",{"_index":3204,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x7c7b;&#x4f3c;&#x7684;&#xff0c;&#x7531;&#x4e8e;&#x6211;&#x4eec;&#x540c;&#x6837;&#x53ef;&#x4ee5;&#x50cf;&#x8bbf;&#x95ee;&#x88ab;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#x90a3;&#x6837;&#xff0c;&#x76f4;&#x63a5;&#x8bbf;&#x95ee;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x6240;&#x4ee5",{"_index":1789,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x7c7b;&#x578b",{"_index":920,"title":{"basic/error.html#error-类型":{},"concurrent/sync_lock.html#context-Context-类型":{}},"body":{"basic/oop.html#方法":{},"basic/constant.html#常量":{},"basic/struct.html#结构体":{},"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#赋值":{},"basic/slice.html#slice":{},"basic/reflect.html#reflect-TypeOf":{},"basic/reflect.html#reflect-ValueOf":{},"concurrent/channel.html#channel":{},"basic/basic_data.html#字符串":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x3002",{"_index":2414,"title":{},"body":{"packages/container.html#container-包":{},"basic/function.html#错误":{}}}],["x7c7b;&#x578b;&#x3002;&#x5b83;&#x6bd4;&#x901a;&#x9053;&#x66f4;&#x52a0;&#x9002;&#x5408;&#x5b9e;&#x73b0;&#x8fd9;&#x79cd;&#x4e00;&#x5bf9;&#x591a;&#x7684",{"_index":5038,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7c7b;&#x578b;&#x3002;&#x65e0;&#x8bba;&#x662f;&#x5b58;&#x3001;&#x53d6;&#x8fd8;&#x662f;&#x5220;&#xff0c;&#x90fd;&#x5e94;&#x8be5;&#x5982;&#x6b64",{"_index":5313,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7c7b;&#x578b;&#x4e00;&#x6837;&#xff0c",{"_index":5081,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#x4e0d;&#x88ab;&#x5c40;&#x9650;&#x4e8e;&#x5e38;&#x91cf;&#x6216;&#x6574;&#x6570;&#xff0c;&#x4f46;&#x5fc5;&#x987b;&#x662f;&#x76f8;&#x540c;&#x7684;&#x7c7b;&#x578b;&#x3002",{"_index":526,"title":{},"body":{"basic/flow.html#switch":{}}}],["x7c7b;&#x578b;&#x4e2d;&#x7684",{"_index":4800,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x7c7b;&#x578b;&#x4e2d;&#x8fd8;&#x6709;&#x4e00;&#x4e2a;&#x540d;&#x53eb",{"_index":5093,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#x4e3b;&#x8981;&#x7528;&#x4e8e;&#x8bfb;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5b83;&#x7684;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x5b9e;&#x73b0;&#x7684;&#x63a5;&#x53e3;&#x6bd4;&#x8f83;&#x591a;&#xff0c;&#x5305;&#x62ec;&#xff1a",{"_index":3452,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7c7b;&#x578b;&#x4e4b;&#x95f4;&#x7684;&#x7ec4;&#x5408;&#x91c7;&#x7528;&#x7684;&#x662f;&#x975e;&#x58f0;&#x660e;&#x7684;&#x65b9;&#x5f0f;&#xff0c;&#x6211;&#x4eec;&#x4e0d;&#x9700;&#x8981;&#x663e;&#x5f0f;&#x5730;&#x58f0;&#x660e;&#x67d0;&#x4e2a;&#x7c7b;&#x578b;&#x5b9e;&#x73b0;&#x4e86;&#x67d0;&#x4e2a;&#x63a5;&#x53e3;&#xff0c;&#x6216;&#x8005;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x7ee7;&#x627f;&#x4e86;&#x53e6;&#x4e00;&#x4e2a;&#x7c7b;&#x578b;&#x3002",{"_index":1175,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x7c7b;&#x578b;&#x4e5f;&#x5c5",{"_index":5248,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x4f5c;&#x4e3a;&#x5b9e;&#x73b0;&#x5de5;&#x5177;&#xff0c;&#x5b9e;&#x73b0",{"_index":5141,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x503c;&#x4e2d;&#x7684;&#x7f13;&#x51b2;&#x533a;&#x7684;&#x4f5c;&#x7528",{"_index":3524,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x503c;&#x4e2d;&#x8ba1;&#x6570;&#x5668;&#x7684;&#x503c;&#x53ef;&#x4ee5;&#x5c0f;&#x4e8",{"_index":5063,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7c7b;&#x578b;&#x503c;&#x6240;&#x62e5;&#x6709;&#x7684;&#x67d0;&#x4e00;&#x4e2a;&#x65b9;&#x6cd5;&#x800c;&#x5df2;&#x3002",{"_index":3516,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7c7b;&#x578b;&#x503c;&#x7684",{"_index":759,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7c7b;&#x578b;&#x503c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;writer&#x503c;&#xff09;&#x62e5;&#x6709;&#x7684;&#x6240;&#x6709;&#x6570;&#x636e;&#x5199;&#x5165;&#x65b9;&#x6cd5;&#x90fd;&#x4f1a;&#x5728;&#x5fc5;&#x8981;&#x7684;&#x65f6;&#x5019;&#x8c03;&#x7528;&#x5b83;&#x7684",{"_index":3559,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x503c;&#xff0c;&#x6700;&#x540e;&#x8fd4;&#x56de;&#x8be5;&#x503c",{"_index":757,"title":{},"body":{"basic/interface.html#接口":{}}}],["x7c7b;&#x578b;&#x5374;&#x6ca1;&#x6709;&#x8fd9;&#x6837;&#x4e00;&#x4e2a;&#x65b9;&#x6cd5;&#xff0c;&#x5b83;&#x53ea;&#x6709",{"_index":3967,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x53c2;&#x6570",{"_index":2491,"title":{},"body":{"basic/function.html#声明函数":{},"basic/test.html#性能分析":{}}}],["x7c7b;&#x578b;&#x53ea;&#x6709;&#x4e24;&#x4e2a;&#x65b9;&#x6cd5;&#x2014;&#x2014",{"_index":5254,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x53ef;&#x4ee5;&#x88ab;&#x79f0;&#x4e3a;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#x6c60;&#xff0c;&#x5b83;&#x7684;&#x503c;&#x53ef;&#x4ee5;&#x88ab;&#x7528;&#x6765;&#x5b58;&#x50a8;&#x4e34;&#x65f6;&#x7684;&#x5bf9;&#x8c61;&#x3002;&#x4e0",{"_index":5246,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x53ef;&#x80fd;&#x662f",{"_index":922,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x7c7b;&#x578b;&#x540c;&#x6837;&#x662f;&#x4f7f;&#x7528;&#x5b57;&#x8282;&#x5207;&#x7247;&#x4f5c;&#x4e3a;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x3002;&#x5e76;&#x4e14;&#xff0c;&#x4e0",{"_index":3942,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x540d;&#x5b57",{"_index":274,"title":{},"body":{"index.html#自定义类型":{}}}],["x7c7b;&#x578b;&#x540d;(&#x8868;&#x8fbe;&#x5f0f",{"_index":246,"title":{},"body":{"index.html#类型转换":{}}}],["x7c7b;&#x578b;&#x540e;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x7b2c;&#x4e8c;&#x4e2a;&#x503c;&#x662f;&#x4e00;&#x4e2a;&#x5e03;&#x5c14;&#x503c;&#xff0c;&#x82e5;&#x4e3a",{"_index":310,"title":{},"body":{"index.html#类型断言":{}}}],["x7c7b;&#x578b;&#x5462",{"_index":5103,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#x548c",{"_index":3514,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7c7b;&#x578b;&#x5728;&#x5185;&#x90e8;&#x4f7f;&#x7528;&#x4e86",{"_index":5322,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7c7b;&#x578b;&#x5bf9;&#x8c61;&#x4e2d;&#x7684;&#x5c5e;&#x6027",{"_index":1124,"title":{},"body":{"basic/oop.html#方法":{}}}],["x7c7b;&#x578b;&#x5bf9;&#x8c61;&#x4e2d;&#x7684;&#x65b9;&#x6cd5",{"_index":1119,"title":{},"body":{"basic/oop.html#方法":{}}}],["x7c7b;&#x578b;&#x5c31;&#x662f;io&#x5305;&#x63d0;&#x4f9b;&#x7684;&#x540c;&#x6b65;&#x5185;&#x5b58;&#x7ba1;&#x9053;&#x7684;&#x6838;&#x5fc3;&#x5b9e;&#x73b0;&#x3002",{"_index":3519,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7c7b;&#x578b;&#x5c5e;&#x4e8e;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#xff0c;&#x800c;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x5c5e;&#x4e8e;&#x503c;&#x7c7b;&#x578b;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x590d;&#x5236;&#x8be5;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x4f1a;&#x4ea7;&#x751f;&#x4e00;&#x4e2a;&#x5b8c;&#x5168;&#x5206;&#x79bb;&#x7684;&#x65b0;&#x503c;&#x3002;&#x8fd9;&#x4e2a;&#x65b0;&#x503c;&#x76f8;&#x5f53;&#x4e8e;&#x88ab",{"_index":5011,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x7c7b;&#x578b;&#x5e76;&#x4e0d;&#x662f;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x7684;&#x3002;&#x53ea;&#x80fd;&#x5229;&#x7528",{"_index":4870,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x7c7b;&#x578b;&#x5e76;&#x4e0d;&#x662f;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x7684;&#xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x5305;&#x542b;&#x4e86;&#x4e00;&#x4e9b;&#x9700;&#x8981;&#x663e;&#x5f0f;&#x521d;&#x59cb;&#x5316;&#x7684;&#x5b57;&#x6bb5;&#x3002;&#x4e00;&#x4e9b;&#x5b57;&#x6bb5;&#xff1a",{"_index":3531,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x62e5;&#x6709;&#x4e09;&#x4e2a;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#xff1a",{"_index":5042,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7c7b;&#x578b;&#x62e5;&#x6709;&#x5f88;&#x591a;&#x7528;&#x4e8e;&#x8bfb;&#x53d6;&#x6570;&#x636e;&#x7684;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#xff0c;&#x8fd9;&#x91cc;&#x9762;&#x6709",{"_index":3569,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x62e5;&#x6709;&#x7684;&#x6240;&#x6709;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#x90fd;&#x662f;&#x4ee5;&#x5b83;&#x4e3a;&#x57fa;&#x7840;&#x7684;&#x3002;&#x8fd9;&#x4e9b;&#x65b9;&#x6cd5;&#x90fd;&#x53ea;&#x662f;&#x4ee3;&#x7406;&#x4e86",{"_index":3515,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7c7b;&#x578b;&#x62e5;&#x6709;&#x7684;&#x90fd;&#x662f;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#xff0c;&#x6240;&#x4ee5;&#x9664;&#x4e86;&#x7a7a;&#x63a5;&#x53e3;&#x4e4b;&#x5916;&#xff0c;&#x5b83;&#x672c;&#x8eab;&#x6ca1;&#x6709;&#x5b9e;&#x73b0;&#x4efb;&#x4f55;&#x63a5;&#x53e3;&#x3002;&#x800c;&#x5b83;&#x7684;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x5219;&#x5b9e;&#x73b0;&#x4e86;&#x5f88;&#x591a;io&#x4ee3;&#x7801;&#x5305;&#x4e2d;&#x7684;&#x63a5;&#x53e3;&#x3002",{"_index":4085,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x7c7b;&#x578b;&#x6570;&#x636e",{"_index":177,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x7c7b;&#x578b;&#x65ad;&#x8a00",{"_index":290,"title":{"index.html#类型断言":{}},"body":{}}],["x7c7b;&#x578b;&#x65f6;&#x3002",{"_index":259,"title":{},"body":{"index.html#类型转换":{}}}],["x7c7b;&#x578b;&#x65f6;&#xff0c",{"_index":1019,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x7c7b;&#x578b;&#x662f",{"_index":1292,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x7c7b;&#x578b;&#x662f;&#x4e3a;&#x4e86;&#x9ad8;&#x6548;&#x8bfb;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#x800c;&#x5b58;&#x5728;&#x7684;&#x3002;&#x53ef;&#x4ee5;&#x8ba9;&#x6211;&#x4eec;&#x5f88;&#x65b9;&#x4fbf;&#x5730;&#x8bfb;&#x53d6;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x4e32;&#x4e2d;&#x7684;&#x5185;&#x5bb9;&#x3002;&#x5728;&#x8bfb;&#x53d6;&#x7684;&#x8fc7;&#x7a0b;&#x4e2d;&#xff0c",{"_index":3924,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x662f;&#x5185;&#x7f6e;&#x7684;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#x3002",{"_index":921,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x7c7b;&#x578b;&#x6709;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":3556,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x6709;&#x4e00;&#x4e2a;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#xff0c;&#x540d;&#x53eb",{"_index":4134,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x7c7b;&#x578b;&#x6709;&#x8fd9;&#x4e48;&#x51e0;&#x4e2a;&#x6307;&#x9488;&#x65b9;&#x6cd5;&#xff1a",{"_index":3306,"title":{},"body":{"basic/test.html#性能测试函数中的计时器":{}}}],["x7c7b;&#x578b;&#x7684",{"_index":3202,"title":{},"body":{"basic/test.html#基准测试":{},"basic/basic_data.html#字符串":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x7684;&#x3002",{"_index":2533,"title":{},"body":{"basic/function.html#函数作为参数":{},"basic/test.html#性能分析":{},"packages/os.html#os包中的API":{}}}],["x7c7b;&#x578b;&#x7684;&#x3002;&#x7b80;&#x79f0;&#x5b83;&#x4e3a",{"_index":5328,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7c7b;&#x578b;&#x7684;&#x3002;&#x800c;&#x53e6;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x5219;&#x662f;&#x4ee3;&#x8868;&#x4e86;&#x6982;&#x8981;&#x4fe1;&#x606f",{"_index":3376,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7c7b;&#x578b;&#x7684;&#x4e00;&#x4e2a;&#x503c;&#x9700;&#x8981;&#x5360;&#x7528;&#x7684;&#x5b57;&#x8282;&#x6570;&#x90fd;&#x662f",{"_index":1993,"title":{},"body":{"basic/map.html#map":{}}}],["x7c7b;&#x578b;&#x7684;&#x4ee3;&#x7406;&#x7c7b;&#x578b;&#x3002",{"_index":3521,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c",{"_index":2493,"title":{},"body":{"basic/function.html#声明函数":{},"concurrent/sync_lock.html#sync-Once":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x3002",{"_index":3545,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x3002;&#x8fd9;&#x4e2a;&#x503c;&#x5c31;&#x4ee3;&#x8868;&#x4e86;&#x5f53;&#x524d;&#x7684;file&#x503c;&#x6240;&#x6301;&#x6709;&#x7684;&#x90a3;&#x4e2a;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x3002",{"_index":4136,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x4f1a;&#x7531;&#x56db;&#x4e2a;&#x5b57;&#x8282;&#x5bbd;&#x5ea6;&#x7684;&#x7a7a;&#x95f4;&#x6765;&#x5b58;&#x50a8;&#x3002;&#x5b83;&#x7684;&#x5b58;&#x50a8;&#x7a7a;&#x95f4;&#x603b;&#x662f;&#x80fd;&#x591f;&#x5b58;&#x4e0b;&#x4e00",{"_index":4021,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x5728;&#x5e95;&#x5c42;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x4e00;&#x4e2a",{"_index":4022,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x5728;&#x5e95;&#x5c42;&#x600e;&#x6837;&#x88ab;&#x8868;&#x8fb",{"_index":4008,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x5728;&#x5e95;&#x5c42;&#x90fd;&#x662f;&#x7531;&#x4e00;&#x4e2a",{"_index":4034,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x65e2;&#x53ef;&#x4ee5;&#x88ab;&#x62c6;&#x5206;&#x4e3a;&#x4e00;&#x4e2a;&#x5305;&#x542b;&#x591a;&#x4e2a;&#x5b57;&#x7b26;&#x7684;&#x5e8f;&#x5217;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x88ab;&#x62c6;&#x5206;&#x4e3a;&#x4e00;&#x4e2a;&#x5305;&#x542b;&#x591a;&#x4e2a;&#x5b57;&#x8282;&#x7684;&#x5e8f;&#x5217;&#x3002",{"_index":4012,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x662f;&#x4e0d;&#x53ef;&#x53d8;&#x7684;&#x3002;&#x5982;&#x679c;&#x6211;&#x4eec;&#x60f3;&#x83b7;&#x5f97;&#x4e00;&#x4e2a;&#x4e0d;&#x4e00;&#x6837;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x53ea;&#x80fd;&#x57fa;&#x4e8e;&#x539f;&#x5b57;&#x7b26;&#x4e32;&#x8fdb;&#x884c;&#x88c1;&#x526a;&#x3001;&#x62fc;&#x63a5;&#x7b49;&#x64cd;&#x4f5c;&#xff0c",{"_index":3857,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x662f;&#x7531;&#x4e00;&#x7cfb;&#x5217;&#x76f8;&#x5bf9;&#x5e94;&#x7684",{"_index":4009,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x6709;&#x54ea;&#x4e9b;&#x4f18;&#x52bf",{"_index":3877,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#x7684;&#x8bdd;&#xff0c;&#x5176;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#xff08;&#x4e0d;&#x8bba;&#x662f;&#x82f1;&#x6587;&#x5b57;&#x7b26;&#x8fd8;&#x662f;&#x4e2d;&#x6587;&#x5b57;&#x7b26;&#xff09;&#x5c31;&#x90fd;&#x4f1a;&#x72ec;&#x7acb;&#x6210;&#x4e3a;&#x4e00",{"_index":4030,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0",{"_index":5171,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x539f;&#x5b50;&#x503c;&#xff09;&#x88ab;&#x771f;&#x6b63;&#x4f7f;&#x7528;&#xff0c;&#x5b83;&#x5c31;&#x4e0d;&#x5e94;&#x8be5;&#x518d;&#x88ab;&#x590d;&#x5236;&#x4e86;&#x3002;&#x53ea;&#x8981;&#x7528;&#x5b83;&#x6765;&#x5b58;&#x50a8;&#x503c;&#x4e86;&#xff0c;&#x5c31;&#x76f8;&#x5f53;&#x4e8e;&#x5f00;&#x59cb;&#x771f;&#x6b63;&#x4f7f;&#x7528;&#x4e86;&#x3002",{"_index":5010,"title":{},"body":{"concurrent/sync_lock.html#sync-atomic-Value":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;filemode&#x503c;&#xff09;&#x4e2d;&#xff0c;&#x53ea;&#x6709;&#x6700;&#x4f4e;&#x7684",{"_index":4165,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;profile&#x503c;&#xff09;&#x3002;&#x5728;&#x8fd9;&#x4e4b;&#x540e;&#xff0c;&#x6211;&#x4eec;&#x8fd8;&#x9700;&#x8981;&#x8c03;&#x7528;&#x8fd9;&#x4e2a",{"_index":3371,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff09;&#xff0c;&#x7136;&#x540e;&#x518d;&#x8c03;&#x7528;&#x8fd9;&#x4e2a;&#x503c;&#x7684",{"_index":5319,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff0c;&#x4ee5;&#x53ca;&#x4e00;&#x4e2a;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x6587;&#x4ef6;&#x540d;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x503c;&#x3002;&#x5982;&#x679c;&#x6211;&#x4eec;&#x7ed9;&#x5b9a;&#x7684;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26",{"_index":4100,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff0c;&#x5e76;&#x4e14;&#x4f1a;&#x9650;&#x5236;&#x5b83;&#x7684",{"_index":3504,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff0c;&#x5e76;&#x63d0;&#x4f9b;&#x4e00;&#x4e2a;&#x989d;&#x5916;&#x7684;&#x53d7;&#x9650;&#x8bfb;&#x53d6;&#x7684;&#x529f;&#x80fd;&#x3002;&#x3002",{"_index":3502,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff0c;&#x662f;&#x56e0;&#x4e3a",{"_index":252,"title":{},"body":{"index.html#类型转换":{}}}],["x7c7b;&#x578b;&#x7684;&#x503c;&#xff0c;&#x7136;&#x540e;&#x518d;&#x628a;&#x540e;&#x8005;&#x5c01;&#x88c5;&#xff0c;&#x5e76;&#x50a8;&#x5b58;&#x5728;&#x5176;&#x4e2d;&#x7684;&#x539f;&#x751f;&#x5b57;&#x5178;&#x4e2d;&#x3002;&#x5982;&#x6b64;&#x4e00;&#x6765;&#xff0c;&#x5728;&#x53d8;&#x66f4;&#x67d0;&#x4e2a;&#x952e;&#x6240;&#x5bf9;&#x5e94;&#x7684;&#x503c",{"_index":5337,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x7c7b;&#x578b;&#x7684;&#x5143;&#x7d20;&#x503c;&#x3002;&#x56e0",{"_index":4031,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x518d;&#x5b9a;&#x4e49;&#x7c7b;&#x578b;&#x3002",{"_index":4118,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x7c7b;&#x578b;&#x7684;&#x518d;&#x5b9a;&#x4e49;&#x7c7b;&#x578b;&#xff0c;&#x6240;&#x4ee5;&#x5b83;&#x7684;&#x6bcf;&#x4e2a;&#x503c;&#x90fd;&#x5305;&#x542b;&#x4e86",{"_index":4156,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570",{"_index":3475,"title":{},"body":{"packages/io.html#io包中的接口和工具":{},"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570;&#x3002",{"_index":2537,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570;&#x4e4b;&#x5916;&#xff0c;&#x8fd8;&#x5e94;&#x8be5;&#x6709;&#x4e00;&#x4e2a",{"_index":2536,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570;&#x503c;&#x3002",{"_index":3528,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570;&#x503c;&#xff0c;&#x5e76;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x5b9",{"_index":3509,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570;&#x58f0;&#x660e",{"_index":3184,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x7c7b;&#x578b;&#x7684;&#x53c2;&#x6570;&#xff1b",{"_index":5256,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7c7b;&#x578b;&#x7684;&#x58f0;&#x660e;&#x8bb2;&#x8d77;&#x3002;&#x8fd9;&#x4e2a;&#x63a5;&#x53e3;&#x4e2d;&#x6709;&#x4e24;&#x4e2a;&#x65b9;&#x6cd5;&#x4e0e;&#x201c;&#x64a4;&#x9500;&#x201d;&#x606f;&#x606f;&#x76f8;&#x5173;&#x3002",{"_index":5210,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5",{"_index":3552,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#x3002",{"_index":5094,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#x3002;&#x5b83;&#x7684;&#x503c;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x5728;&#x4ece;&#x5e95;&#x5c42;&#x8bfb;&#x53d6;&#x5668;&#x83b7;&#x5f97;&#x6570;&#x636e;&#x65f6;&#x53d1;&#x751f;&#x7684;&#x9519;&#x8bef;&#x3002;&#x8fd9;&#x91cc;&#x7684;&#x503c;&#x5728;&#x88ab;&#x8bfb;&#x53d6;&#x6216;&#x5ffd;&#x7565;&#x4e4b;&#x540e;&#xff0c;&#x8be5;&#x5b57;&#x6bb5;&#x4f1a;&#x88ab;&#x7f6e;&#x4e3a",{"_index":3536,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#x3002;&#x5b83;&#x7684;&#x503c;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x5728;&#x5411;&#x5e95;&#x5c42;&#x5199;&#x5165;&#x5668;&#x5199;&#x6570;&#x636e;&#x65f6;&#x53d1;&#x751f;&#x7684;&#x9519;&#x8bef;&#x3002",{"_index":3553,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#x6765;&#x6301;&#x6709;&#x90a3;&#x4e2a;&#x6307;&#x5411;&#x4e86;&#x5e95;&#x5c42;&#x5b57;&#x8282;&#x6570;&#x7ec4;&#x7684;&#x6307;&#x9488;&#x503c;&#x7684;&#x3002",{"_index":3886,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x4ee3;&#x8868;&#x5bf9;&#x7f13;&#x51b2;&#x533a;&#x8fdb;&#x884c;&#x4e0b;&#x4e00;&#x6b21;&#x5199;&#x5165;&#x65f6;&#x7684;&#x5f00;&#x59cb;&#x7d22;&#x5f15;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x79f0;&#x4e4b;&#x4e3a;&#x5df2;&#x5199;&#x8ba1;&#x6570;&#x3002",{"_index":3535,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x4ee3;&#x8868;&#x5bf9;&#x7f13;&#x51b2;&#x533a;&#x8fdb;&#x884c;&#x4e0b;&#x4e00;&#x6b21;&#x8bfb;&#x53d6;&#x65f6;&#x7684;&#x5f00;&#x59cb;&#x7d22;&#x5f15;&#x3002;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x79f0;&#x5b83;&#x4e3a;&#x5df2;&#x8bfb;&#x8ba1;&#x6570;&#x3002",{"_index":3534,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x4ee3;&#x8868;&#x5e95;&#x5c42;&#x5199;&#x5165;&#x5668;&#x3002",{"_index":3555,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x4ee3;&#x8868;&#x5e95;&#x5c42;&#x8bfb;&#x53d6;&#x5668;&#x3002;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x7684;&#x6570;&#x636e;&#x5c31;&#x662f;&#x4ece;&#x8fd9;&#x91cc;&#x62f7;&#x8d1d;&#x6765;&#x7684;&#x3002",{"_index":3533,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x4ee3;&#x8868;&#x7f13;&#x51b2;&#x533a;&#x3002;&#x5728;&#x521d;&#x59cb;&#x5316;&#x4e4b;&#x540e;&#xff0c;&#x5b83;&#x7684;&#x957f;&#x5ea6;&#x4f1a;&#x4fdd;&#x6301;&#x4e0d;&#x53d8;&#x3002",{"_index":3554,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x5373;&#x5b57;&#x8282;&#x5207;&#x7247;&#xff0c;&#x4ee3;&#x8868;&#x7f13;&#x51b2;&#x533a;&#x3002;&#x867d;&#x7136;&#x5b83;&#x662f;&#x5207;&#x7247;&#x7c7b;&#x578b;&#x7684;&#xff0c;&#x4f46;&#x662f;&#x5176;&#x957f;&#x5ea6;&#x5374;&#x4f1a;&#x5728;&#x521d;&#x59cb;&#x5316;&#x7684;&#x65f6;&#x5019;&#x6307;&#x5b9a;&#xff0c;&#x5e76;&#x5728;&#x4e4b;&#x540e;&#x4fdd;&#x6301;&#x4e0d;&#x53d8;&#x3002",{"_index":3532,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x6240;&#x4ee5;&#xff0c;&#x590d;&#x5236;&#x8be5;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x4e5f;&#x4f1a;&#x5bfc;&#x81f4;&#x529f;&#x80fd;&#x7684;&#x5931;&#x6548;&#x3002",{"_index":5084,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x7528;&#x4e8e;&#x4ee3;&#x8868;&#x5df2;&#x8bfb;&#x5b57;&#x8282;&#x7684;&#x8ba1;&#x6570;&#xff0c;&#x53ef;&#x4ee5;&#x7b80;&#x79f0;&#x4e3a",{"_index":3945,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x7528;&#x4e8e;&#x8bb0;&#x5f55;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x88ab;&#x8bfb;&#x53d6;&#x7684",{"_index":3538,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5b57;&#x6bb5;&#xff0c;&#x7528;&#x4e8e;&#x8bb0;&#x5f55;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x88ab;&#x8bfb;&#x53d6;&#x7684;&#x5b57;&#x8282;&#x3002;&#x8bfb;&#x56de;&#x9000;&#x65f6;&#x4f1a;&#x7528;&#x5230;&#x5b83;&#x7684;&#x503c;&#x3002",{"_index":3537,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x5bbd;&#x5ea6;&#x662f;&#x6307;&#x5b83;&#x7684;&#x5355;&#x4e2a;&#x503c;&#x9700;&#x8981;&#x5360;&#x7528;&#x7684;&#x5b57;&#x8282;&#x6570;&#x3002;&#x6bd4;&#x5982;&#xff0c",{"_index":1992,"title":{},"body":{"basic/map.html#map":{}}}],["x7c7b;&#x578b;&#x7684;&#x5bfc;&#x822a;&#x9879;&#x7684",{"_index":3669,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x7c7b;&#x578b;&#x7684;&#x6210;&#x5458;&#xff1a;&#x56e0;&#x4e3a;&#x4e00;&#x4e2a;&#x805a;&#x5408;&#x7684;&#x503c;&#x4e0d;&#x80fd;&#x5305;&#x542b;&#x5b83;&#x81ea;&#x8eab;&#x3002;&#xff08;&#x8be5;&#x9650;&#x5236;&#x540c;&#x6837;&#x9002;&#x5e94;&#x4e8e;&#x6570;&#x7ec4;&#x3002;&#xff09",{"_index":1755,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7c7b;&#x578b;&#x7684;&#x64a4;&#x9500;&#x51fd;&#x6570;&#xff08;&#x7531;&#x53d8;&#x91cf",{"_index":5149,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x7c7b;&#x578b;&#x7684;&#x7528;&#x9014;&#x4e3b;&#x8981;&#x662f;&#x4f5c;&#x4e3a;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x7684;&#x7f13;&#x51b2;&#x533a;&#x3002",{"_index":3937,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x7ea6;&#x675f",{"_index":3909,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x7684;&#x7ed3;&#x679c;&#x58f0;&#x660",{"_index":1193,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x7c7b;&#x578b;&#x7684;&#x9519;&#x8bef;&#x503c;&#xff0c;&#x6216;&#x8005;&#x5176;&#x4ed6;&#x7684;&#x53ef;&#x4ee5;&#x88ab;&#x6709;&#x6548;&#x5e8f;&#x5217;&#x5316;&#x7684;&#x503c;&#x3002;&#x8fd9;&#x91cc;&#x7684;&#x201c;&#x6709;&#x6548;&#x5e8f;&#x5217;&#x5316;&#x201d;&#x6307;&#x7684;&#x662f;&#xff0c;&#x53ef;&#x4ee5;&#x66f4;&#x6613;&#x8bfb;&#x5730;&#x53bb;&#x8868;&#x793a",{"_index":1003,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x7c7b;&#x578b;&#x7c7b;&#x4f3c;&#xff0c",{"_index":3943,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7c7b;&#x578b;&#x867d;&#x7136;&#x662f;&#x6307;&#x9488;&#x7c7b;&#x578b;&#xff0c;&#x4f46;&#x662f;&#x90a3;&#x4e9b;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x51fd;&#x6570;&#x8981;&#x64cd;&#x4f5c;&#x7684;&#x662f;&#x8fd9;&#x4e2a;&#x6307;&#x9488;&#x503c;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x5b83;&#x6307;&#x5411",{"_index":4980,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x7c7b;&#x578b;&#x88ab;&#x5d4c;&#x5165;&#x5230;&#x4e86",{"_index":1777,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x7c7b;&#x578b;&#x8f6c;&#x6362",{"_index":240,"title":{"index.html#类型转换":{}},"body":{"basic/interface.html#接口":{}}}],["x7c7b;&#x578b;&#x8f6c;&#x6362;&#x5728;&#x7f16;&#x8bd1;&#x671f;&#x5b8c;&#x6210;&#xff0c;&#x5305;&#x62ec;&#x5f3a;&#x5236;&#x8f6c;&#x6362;&#x548c;&#x9690;&#x5f0f;&#x8f6c;&#x6362",{"_index":243,"title":{},"body":{"index.html#类型转换":{}}}],["x7c7b;&#x578b;&#x8f6c;&#x6362;&#x7528;&#x4e8e;&#x5c06;&#x4e00;&#x79cd;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf;&#x8f6c;&#x6362;&#x4e3a;&#x53e6;&#x5916;&#x4e00;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x53d8;&#x91cf;&#xff1a",{"_index":245,"title":{},"body":{"index.html#类型转换":{}}}],["x7c7b;&#x578b;&#x90fd;&#x5b9e;&#x73b0;&#x4e86;&#x5b83;&#x4eec;&#x3002",{"_index":4088,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x7c7b;&#x578b;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0",{"_index":5040,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{},"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#xff09;&#x4e5f;&#x5c5e;&#x4e8e;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#xff0c;&#x540c;&#x6837;&#x4e5f;&#x662f;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x548c;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#x3002",{"_index":5082,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x7c7b;&#x578b;&#xff09;&#x662f;&#x5f00;&#x7bb1;&#x5373;&#x7528;&#x7684;&#xff0c;&#x4e5f;&#x662f;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#x3002",{"_index":5041,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x7c7b;&#x578b;&#xff0c",{"_index":305,"title":{},"body":{"index.html#类型断言":{}}}],["x7c7b;&#x578b;&#xff0c;&#x4f46;&#x662f;&#x8fd9;&#x91cc;&#x7684",{"_index":1163,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x7c7b;&#x578b;&#xff0c;&#x8be5;&#x5305;&#x5e76;&#x672a;&#x63d0;&#x4f9b;&#x8fdb;&#x884c;&#x539f;&#x5b50;&#x52a0;&#x6cd5;&#x64cd;&#x4f5c;&#x7684;&#x51fd;&#x6570;&#x3002",{"_index":4970,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x7c7b;&#xff0c;&#x4f46",{"_index":1166,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x7cfb;&#x7edf;&#x662f;&#x5192;&#x53f7",{"_index":2338,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x7ea7;&#x5730;&#x6cbf;&#x7740;&#x8c03;&#x7528;&#x6808;&#x7684;&#x53cd;&#x65b9;&#x5411;&#x4f20;&#x64ad;&#x81f3;&#x9876;&#x7aef;&#xff0c",{"_index":985,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x7eb2;&#x3002",{"_index":1196,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x7eb5;&#x89c2",{"_index":4434,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7ebf;&#x7a0b",{"_index":4235,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x7ec4;&#x6210;&#x7684;&#x5927;&#x5757;&#x5185;&#x5b58;&#x3002",{"_index":397,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x7ec4;&#x88c5;&#x5b57;&#x7b26;&#x4e32",{"_index":3852,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7ed3;&#x51b0;&#x70b9;&#x6e29;&#x5ea6",{"_index":280,"title":{},"body":{"index.html#自定义类型":{}}}],["x7ed3;&#x5408;&#xff0c;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x7528;&#x901a;&#x4fe1;&#x4ee3;&#x66ff;&#x5171;&#x4eab;&#x5185;&#x5b58;&#x7684",{"_index":2637,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7ed3;&#x5c3",{"_index":3848,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7ed3;&#x5c3e;&#x3002;&#x591a;&#x4e2a;&#x8bed;&#x53e5;&#x5199;&#x5728;&#x540c;&#x4e00;&#x884c;&#xff0c;&#x5219;&#x5fc5;&#x987b;&#x4f7f;&#x7528",{"_index":206,"title":{},"body":{"index.html#行分隔符":{}}}],["x7ed3;&#x675f;&#x8fd0;&#x884c;&#x5462;&#xff1f",{"_index":4381,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x7ed3;&#x6784;&#x4f53",{"_index":1733,"title":{"basic/struct.html#结构体":{}},"body":{}}],["x7ed3;&#x6784;&#x4f53;&#x3002;&#x4f46;&#x662f;&#x7ed3;&#x6784;&#x4f53;&#x5b57;&#x9762;&#x503c;&#x5e76;&#x6ca1;&#x6709;&#x7b80;&#x77ed;&#x8868;&#x793a;&#x533f;&#x540d;&#x6210;&#x5458;&#x7684;&#x8bed;&#x6cd5;&#xff0c;&#x6240;&#x4ee5;&#x4e0b;&#x9762;&#x7684;&#x4ee3;&#x7801;&#xff0c",{"_index":1780,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x7ed3;&#x6784;&#x4f53;&#x5b57;&#x6bb5;&#x8d4b;&#x503c",{"_index":1842,"title":{},"body":{"basic/var.html#赋值":{}}}],["x7ed3;&#x6784;&#x4f53;&#x5b57;&#x9762;&#x503c",{"_index":1758,"title":{"basic/struct.html#结构体字面值":{}},"body":{}}],["x7ed3;&#x6784;&#x4f53;&#x5b57;&#x9762;&#x503c;&#x53ef;&#x4ee5;&#x6307;&#x5b9a;&#x6bcf;&#x4e2a;&#x6210;&#x5458;&#x7684;&#x503c",{"_index":1759,"title":{},"body":{"basic/struct.html#结构体字面值":{}}}],["x7ed3;&#x6784;&#x4f53;&#x5b9a;&#x4e49;&#x9700;&#x8981;&#x4f7f;&#x7528",{"_index":1735,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7ed3;&#x6784;&#x4f53;&#x5d4c;&#x5165",{"_index":1763,"title":{"basic/struct.html#结构体嵌入-匿名成员":{}},"body":{}}],["x7ed3;&#x6784;&#x4f53;&#x662f;&#x7531;&#x4e00;&#x7cfb;&#x5217;&#x5177;&#x6709;&#x76f8;&#x540c;&#x7c7b;&#x578b;&#x6216;&#x4e0d;&#x540c;&#x7c7b;&#x578b;&#x7684;&#x6570;&#x636e;&#x6784;&#x6210;&#x7684;&#x6570;&#x636e;&#x96c6;&#x5408;&#x3002",{"_index":1734,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x7ed3;&#x6784;&#x4f53;&#x6bd4;&#x8f83",{"_index":1760,"title":{"basic/struct.html#结构体比较":{}},"body":{}}],["x7ed3;&#x6784;&#x4f53;&#x7684;&#x6210;&#x5458",{"_index":1458,"title":{},"body":{"basic/json.html#序列化":{}}}],["x7ed3;&#x6784;&#x4f53;&#xff0c",{"_index":1778,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x7ed3;&#x679c",{"_index":1895,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["x7ed3;&#x679c;&#x503c;&#x62ff;&#x5230",{"_index":4005,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7ed3;&#x679c;&#x6dfb;&#x52a0;&#x5230;&#x4efb;&#x52a1;&#x961f;&#x5217;&#xff1b",{"_index":4596,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7ed3;&#x679c;&#x90fd;&#x662f",{"_index":1875,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x7ed9;&#x4e86;&#x8bed;&#x6cd5;&#x7cd6;&#xff0c;&#x51cf;&#x5c11;&#x4e86;&#x9ebb;&#x70e6;&#xff0c;&#x4f46;&#x662f;&#x4e5f;&#x5bfc;&#x81f4;&#x4e86",{"_index":1354,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x7edd;&#x5927;&#x591a;&#x6570;&#x88ab;&#x89c6;&#x4e3a",{"_index":1376,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["x7edd;&#x5bf9;&#x96f6;&#x5ea6",{"_index":279,"title":{},"body":{"index.html#自定义类型":{}}}],["x7ee7;&#x7eed;&#x6267;&#x884c;&#x3002",{"_index":4620,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x7f13;&#x51b2;&#x533a;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x4e00;&#x4e2a",{"_index":3525,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7f13;&#x51b2;&#x533a;&#x7684;&#x597d;&#x5904;&#x662f;&#xff0c;&#x53ef;&#x4ee5;&#x5728;&#x5927;&#x591a;&#x6570;&#x7684;&#x65f6;&#x5019;&#x964d;&#x4f4e;&#x8bfb;&#x53d6;&#x65b9;&#x6cd5;&#x7684;&#x6267;&#x884c;&#x65f6;&#x95f4;&#x3002",{"_index":3530,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x7f13;&#x51b2;&#x901a;&#x9053",{"_index":2731,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x7f13;&#x5b58;&#x5bf9;&#x8c61;&#x7684;&#x671f;&#x9650;&#x662f;&#x5f88;&#x8be1;&#x5f02;&#x7684;&#xff0c;&#x5148;&#x770b;&#x4e00;&#x4e0b",{"_index":5285,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7f13;&#x5b58;&#x7684;&#x671f;&#x9650;&#x53ea;&#x662f;&#x4e24;&#x6b21;gc&#x4e4b;&#x95f4;&#x8fd9;&#x6bb5;&#x65f6;&#x95f4",{"_index":5294,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x7f16;&#x5199",{"_index":2534,"title":{},"body":{"basic/function.html#函数作为参数":{}}}],["x7f16;&#x5199;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x65f6;&#xff0c;&#x6211;&#x4eec;&#x8981;&#x786e;&#x4fdd;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x5bf9;&#x95ee;&#x9898;&#x7ec6;&#x8282;&#x7684;&#x63cf;&#x8ff0;&#x662f;&#x8be6;&#x5c3d;&#x7684;&#x3002;&#x5c24;&#x5176;&#x662f;&#x8981;&#x6ce8;&#x610f;&#x9519;&#x8bef;&#x4fe1;&#x606f;&#x8868;&#x8fbe;&#x7684;&#x4e00;&#x81f4;&#x6027;&#xff0c;&#x5373;&#x76f8;&#x540c;&#x7684;&#x51fd;&#x6570;&#x6216;&#x540c;&#x5305;&#x5185",{"_index":932,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x7f16;&#x7801",{"_index":321,"title":{"index.html#编码":{}},"body":{"index.html#编码":{},"basic/flow.html#for":{}}}],["x7f16;&#x7801;&#x503c",{"_index":4023,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x503c;&#x3002",{"_index":370,"title":{},"body":{"index.html#编码":{},"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x503c;&#x4ee3;&#x8868;&#x7684;&#x90a3;&#x4e2a",{"_index":614,"title":{},"body":{"basic/flow.html#for":{}}}],["x7f16;&#x7801;&#x503c;&#x6765;&#x8868;&#x8fbe;&#x7684;&#x3002",{"_index":4011,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x503c;&#x6765;&#x8868;&#x8fbe;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x6362;&#x4e00;&#x79cd;&#x65b9;&#x5f0f;&#x6765;&#x5c55;&#x73b0;&#x8fd9;&#x4e2a;&#x5b57;&#x7b26;&#x5e8f;&#x5217;&#xff1a",{"_index":4035,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x503c;&#x90fd;&#x62c6;&#x6210;&#x76f8;&#x5e94;&#x7684;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x3002;&#x4e0a;&#x8ff0;&#x4ee3;&#x7801;&#x4e2d;&#x7684;&#x7b2c;&#x4e94;&#x884c;&#x5c31;&#x662f;&#x8fd9;&#x4e48;&#x505a;&#x7684;&#x3002;&#x5b83;&#x4f1a;&#x5f97;&#x5230;&#x5982;&#x4e0b;&#x7684;&#x8f93;&#x51fa;&#xff1a",{"_index":4037,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x503c;&#xff0c;&#x6216;&#x8005;&#x8bf4;&#x6bcf;&#x4e00;&#x4e2a",{"_index":609,"title":{},"body":{"basic/flow.html#for":{}}}],["x7f16;&#x7801;&#x5219;&#x5c06;&#x6b64;&#x4f4d;&#x4e5f;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x5b57;&#x7b26;&#x3002;ascii",{"_index":332,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x5bf9;&#x8c61",{"_index":1489,"title":{},"body":{"basic/json.html#序列化":{}}}],["x7f16;&#x7801;&#x652f;&#x6301;&#x7684;&#x53ef;&#x6253;&#x5370;&#x5b57;&#x7b26;&#x548c;&#x63a7;&#x5236;&#x5b57;&#x7b26;&#x7684;&#x96c6;&#x5408;&#x4e5f;&#x88ab;&#x53eb;&#x505a",{"_index":333,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x65b9;&#x6848;&#x4f7f;&#x7528;&#x5355;&#x4e2a;&#x5b57;&#x8282;&#xff08;byte&#xff09;&#x7684;&#x4e8c;&#x8fdb;&#x5236;&#x6570;&#x6765;&#x7f16;&#x7801;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x3002;&#x6807;&#x51c6;&#x7684",{"_index":329,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x662f;&#x5b8c;&#x5168;&#x517c;&#x5bb9;&#x7684;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x5728",{"_index":360,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x6807;&#x8bc6",{"_index":3806,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x683c;&#x5f0f;&#x7684;&#x4e00;&#x4e2a;&#x5de8;&#x5927;&#x4f18;&#x52bf;&#x3002",{"_index":363,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x683c;&#x5f0f;&#x8fdb;&#x884c;&#x5b58;&#x50a8;&#x3002;&#x5982;&#x679c;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x4e2d;&#x51fa;&#x73b0;&#x4e86;&#x975",{"_index":323,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x7528;&#x4e00;&#x4e2a;&#x5b57;&#x8282;&#x7684;&#x6700;&#x9ad8;&#x6bd4;&#x7279;&#xff08;bit&#xff09;&#x4f4d;&#x4f5c;&#x4e3a;&#x5947;&#x5076;&#x6821;&#x9a8c;&#x4f4d;&#xff0c",{"_index":330,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x800c",{"_index":3935,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x7f16;&#x7801;&#x7684;&#x5b57;&#x7b26;&#xff0c;&#x90a3;&#x4e48;&#x5728;&#x6784;&#x5efa;&#x3001;&#x5b89;&#x88c5;&#x4ee5;&#x53ca;&#x8fd0;&#x884c;&#x7684;&#x65f6;&#x5019;&#xff0c",{"_index":324,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x89c4;&#x8303;&#x4e2d;&#xff0c;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#x80fd;&#x4e14;&#x53ea;&#x80fd;&#x7531;&#x4e0e;&#x5b83;&#x5bf9;&#x5e94;&#x7684;&#x90a3;&#x4e2a;&#x4ee3;&#x7801;&#x70b9;&#x8868;&#x793a;&#x3002",{"_index":342,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x89c4;&#x8303;&#x63d0;&#x4f9b;&#x4e86;&#x4e09;&#x79cd;&#x4e0d;&#x540c;&#x7684;&#x7f16;&#x7801;&#x683c;&#x5f0f;&#xff0c;&#x5373;&#xff1a",{"_index":343,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x89c4;&#x8303;&#x901a;&#x5e38;&#x4f7f;&#x7528;&#x5341;&#x516d;&#x8fdb;&#x5236;&#x8868;&#x793a;&#x6cd5;&#x6765;&#x8868;&#x793a",{"_index":338,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x89c4;&#x8303;&#xff0c;&#x5b9e;&#x9645;&#x4e0a;&#x662f;&#x53e6;&#x4e00;&#x4e2a;&#x66f4;&#x52a0;&#x901a;&#x7528;&#x7684;&#x3001;&#x9488;&#x5bf9;&#x4e66;&#x9762;&#x5b57;&#x7b26;&#x548c;&#x6587;&#x672c;&#x7684;&#x5b57;&#x7b26;&#x7f16;&#x7801;&#x6807;&#x51c6;&#x3002;&#x5b83;&#x4e3a;&#x4e16;&#x754c;&#x4e0a;&#x73b0;&#x5b58;&#x7684;&#x6240;&#x6709;&#x81ea;&#x7136;&#x8bed;&#x8a00;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#xff0c",{"_index":335,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x7801;&#x96c6;&#x3002",{"_index":334,"title":{},"body":{"index.html#编码":{}}}],["x7f16;&#x8bd1;&#x4e00;&#x4e2a;&#x5305;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x7f16;&#x8bd1;&#x5668;&#x53ea;&#x9700;&#x8bfb;&#x53d6;&#x6bcf;&#x4e2a;&#x5bfc;&#x5165;&#x5305;&#x7684;&#x76ee;&#x6807;&#x6587;&#x4ef6;&#xff0c;&#x800c;&#x4e0d;&#x9700;&#x8981;&#x904d;&#x5386;&#x6240;&#x6709;&#x4f9d;&#x8d56;&#x7684;&#x7684;&#x6587;&#x4ef6",{"_index":1573,"title":{},"body":{"basic/package.html#包":{}}}],["x7f16;&#x8bd1;&#x4f1a;&#x5931;&#x8d25;&#x3002",{"_index":1576,"title":{},"body":{"basic/package.html#import":{}}}],["x7f16;&#x8bd1;&#x540e;&#x5305;&#x7684;&#x76ee;&#x6807;&#x6587;&#x4ef6;&#x4e0d;&#x4ec5;&#x4ec5;&#x8bb0;&#x5f55;&#x5305;&#x672c;&#x8eab;&#x7684;&#x5bfc;&#x51fa;&#x4fe1;&#x606f;&#xff0c;&#x540c;&#x65f6;&#x8fd8;&#x8bb0;&#x5f55;&#x4e86;&#x5305;&#x7684;&#x4f9d;&#x8d56;&#x5173;&#x7cfb;&#x3002",{"_index":1571,"title":{},"body":{"basic/package.html#包":{}}}],["x7f16;&#x8bd1;&#x5668;&#x4f1a;&#x9690;&#x5f0f;&#x5730;&#x5e2e;&#x6211;&#x4eec;&#x7528;&amp;p&#x53bb;&#x8c03;&#x7528;scaleby&#x8fd9;&#x4e2a;&#x65b9;&#x6cd5;&#x3002;&#x8fd9;&#x79cd;&#x7b80;&#x5199;&#x65b9;&#x6cd5;&#x53ea;&#x9002;&#x7528;&#x4e8e;&#x201c;&#x53d8;&#x91cf;&#x201d",{"_index":1131,"title":{},"body":{"basic/oop.html#方法":{}}}],["x7f16;&#x8bd1;&#x671f;&#x8ba1;&#x7b97",{"_index":1516,"title":{},"body":{"basic/constant.html#常量":{}}}],["x7f3a;&#x7701;endindex&#x65f6;&#x5c06;&#x8868;&#x793a;&#x4e00;&#x76f4;&#x5230;arr&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x5143;&#x7d20",{"_index":2065,"title":{},"body":{"basic/slice.html#slice":{}}}],["x7f3a;&#x7701;startindex&#x65f6;&#x5c06;&#x8868;&#x793a;&#x4ece;arr&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x5f00;&#x59cb",{"_index":2066,"title":{},"body":{"basic/slice.html#slice":{}}}],["x800c",{"_index":346,"title":{},"body":{"index.html#编码":{},"basic/oop.html#String-方法":{},"basic/pointer.html#为什么需要指针":{},"packages/container.html#container-包":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x800c;&#x4e0d;&#x662f;&#x5176;&#x4e2d;&#x5df2;&#x5b58;&#x5185;&#x5bb9;&#x7684;&#x603b;&#x957f;&#x5ea6;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x5185;&#x5bb9;&#x957f;&#x5ea6;&#xff09;&#x3002",{"_index":3950,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x800c;&#x4e0d;&#x662f;&#x9501;&#x4e0a;&#x8fd9;&#x4e2a;&#x9501;&#x3002",{"_index":4887,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x800c;&#x540e;&#x8005;&#x5219;&#x88ab;&#x7528;&#x4e8e;&#x4ece;&#x5f53;&#x524d;&#x7684;&#x6c60;&#x4e2d;&#x83b7;&#x53d6;&#x4e34;&#x65f6;&#x5bf9;&#x8c61;&#xff0c;&#x5b83;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":5257,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x800c;&#x540e;&#x8005;&#x7684;&#x901a;&#x77e5;&#x5374;&#x4f1a;&#x5524;&#x9192;&#x6240;&#x6709;&#x4e3a;&#x6b64;&#x7b49;&#x5f85;&#x7684",{"_index":4950,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x800c;&#x5728",{"_index":1338,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x800c;&#x5d29;&#x6e83;&#xff0c;&#x5c31;&#x662f;&#x76f8;&#x5173;&#x7684",{"_index":4934,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x800c;&#x6269;&#x5c55;&#x7684",{"_index":331,"title":{},"body":{"index.html#编码":{}}}],["x800c;&#x662f",{"_index":4974,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x800c;&#x662f;&#x5b83;&#x7684;&#x526f;&#x672c",{"_index":2596,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["x800c;&#x82e5;&#x201c;&#x7761;&#x7720;&#x201d;&#x592a;&#x957f;&#x5219;&#x7eaf;&#x5c5e;&#x6d6a;&#x8d39;&#x65f6;&#x95f4;&#xff0c;&#x8fd9;&#x4e2a;&#x65f6;&#x95f4;&#x5c31;&#x592a;&#x96be;&#x628a;&#x63e1;&#x4e86;&#x3002",{"_index":4390,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x547d;&#x4ee4;&#x4f1a;&#x4e32;&#x884c;&#x5730;&#x6267;&#x884c;&#x5b83;&#x4eec",{"_index":3297,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x80fd;&#x8868;&#x793a;&#x7684;&#x6700;&#x5927;&#x6570;&#x503c;&#xff0c;&#x5927;&#x7ea6;&#x662f",{"_index":3787,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x810f;&#x5b57;&#x5178",{"_index":5344,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x810f;&#x5b57;&#x5178;&#x548c;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x5982;&#x679c;&#x90fd;&#x5b58;&#x6709;&#x540c;&#x4e00;&#x4e2a;&#x952e;&#x503c;&#x5bf9;&#xff0c;&#x90a3;&#x4e48;&#x8fd9;&#x91cc;&#x7684;&#x4e24;&#x4e2a;&#x952e;&#x6307;&#x7684;&#x80af;&#x5b9a;&#x662f;&#x540c;&#x4e00;&#x4e2a;&#x57fa;&#x672c;&#x503c;&#xff0c;&#x5bf9;&#x4e8e;&#x4e24;&#x4e2a;&#x503c;&#x6765;&#x8bf4;&#x4e5f;&#x662f;&#x5982;&#x6b64;&#x3002;&#x6b63;&#x5982;&#x524d;&#x6587;&#x6240;&#x8ff0;&#xff0c",{"_index":5345,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x810f;&#x5b57;&#x5178;&#x76f4;&#x63a5;&#x4f5c;&#x4e3a;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#xff0c;&#x4fdd;&#x5b58;&#x5728;&#x5b83;&#x7684",{"_index":5362,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x81ea;&#x51cf",{"_index":1882,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x81ea;&#x52a8;&#x5783;&#x573e;&#x56de;&#x6536",{"_index":858,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x81ea;&#x589e;&#xff0c",{"_index":1881,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["x81ea;&#x5b9a;&#x4e49;&#x7c7b;&#x578b",{"_index":272,"title":{"index.html#自定义类型":{}},"body":{}}],["x81ea;&#x5b9a;&#x4e49;&#x7c7b;&#x578b;&#x867d;&#x7136;&#x7f6e;&#x9876;&#x4e86;&#x5e95;&#x5c42;&#x7c7b;&#x578b;&#xff0c;&#x4f46;&#x662f;&#x53ea;&#x662f;&#x5e95;&#x5c42;&#x6570;&#x636e;&#x7ed3;&#x6784;&#x76f8;&#x540c;&#xff0c;&#x4e0d;&#x4f1a;&#x7ee7;&#x627f;&#x5e95;&#x5c42;&#x7c7b;&#x578b;&#x7684;&#x5176;&#x4ed6;&#x4fe1;&#x606f;&#xff0c;&#x6bd4;&#x5982;&#xff08;&#x65b9;&#x6cd5;&#xff09;&#x3002",{"_index":282,"title":{},"body":{"index.html#自定义类型":{}}}],["x81ea;&#x5b9a;&#x4e49;&#x7c7b;&#x578b;&#xff0c;&#x4e00;&#x822c;&#x51fa;&#x73b0;&#x5728;&#x5305;&#x4e00;&#x7ea7;&#xff0c;&#x4e0e;&#x53d8;&#x91cf;&#x4e00;&#x6837;&#xff0c;&#x5982;&#x679c;&#x7c7b;&#x578b;&#x540d;&#x5b57;&#x7684;&#x9996;&#x5b57;&#x6bcd;&#x662f;&#x5927;&#x5199;&#xff0c;&#x5219;&#x5728;&#x5305;&#x5916;&#x90e8;&#x4e5f;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#xff1a",{"_index":273,"title":{},"body":{"index.html#自定义类型":{}}}],["x81ea;&#x5df1;&#x5b8c;&#x6210;&#xff0c;&#x5b9e;&#x73b0",{"_index":4497,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x81ea;&#x884c;&#x7ed3;&#x675f;&#x6267;&#x884c;&#x3002",{"_index":4271,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x81f3;&#x4e8e;&#x6807;&#x51c6;&#x5de5;&#x5177;&#xff0c;&#x4e3b;&#x8981;&#x6709",{"_index":3314,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x81f4;&#x4e86;&#x6b7b;&#x9501",{"_index":2676,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8282;&#x6570;&#x7ec4;&#x7684;&#x60c5;&#x51b5;&#x3002;&#x8fd9;&#x6837;&#x4e5f;&#x5c31;&#x907f;&#x514d;&#x4e86;&#x591a;&#x4e2a;&#x540c;&#x6e90;&#x7684",{"_index":3918,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8282;&#x6570;&#xff0c;&#x90a3;&#x4e48;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#x5c31;&#x4f1a;&#x901a;&#x8fc7;&#x5207;&#x7247;&#x64cd;&#x4f5c;&#x5bf9;&#x539f;&#x6709;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x957f;&#x5ea6;&#x8fdb;&#x884c;&#x6269;&#x5145;&#xff0c;&#x5c31;&#x50cf;&#x4e0b;&#x9762;&#x8fd9;&#x6837;&#xff1a",{"_index":3978,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8282;&#x7701;&#x5185;&#x5b58",{"_index":1337,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x82e5;&#x8fd9;&#x4e00;&#x6b65;&#x4f18;&#x5316;&#x672a;&#x80fd;&#x8fbe;&#x6210;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x5f53;&#x524d;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#x7684;&#x5bb9;&#x91cf;&#x5c0f;&#x4e8e;&#x65b0;&#x957f;&#x5ea6;&#x7684;&#x4e8c;&#x500d;&#xff0c;&#x90a3;&#x4e48;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#x5c31;&#x53ea;&#x80fd;&#x518d;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff0c;&#x5e76;&#x628a;&#x539f;&#x6709;&#x5bb9;&#x5668",{"_index":3984,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x83b7;&#x53d6",{"_index":1307,"title":{},"body":{"basic/pointer.html#指向指针的指针":{},"basic/map.html#map":{},"basic/basic_data.html#字符串":{}}}],["x83b7;&#x53d6;&#x5207;&#x7247;&#x957f;&#x5ea6;&#x3002",{"_index":2071,"title":{},"body":{"basic/slice.html#len-和-cap":{}}}],["x83b7;&#x53d6;&#x5230;&#x963b;&#x585e;&#x6982;&#x8981;&#x4fe1;&#x606f",{"_index":3361,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x83b7;&#x53d6;&#x5305;&#x5b8c;&#x6574;&#x7684;&#x5143;&#x4fe1;&#x606f",{"_index":3039,"title":{},"body":{"commands/build.html#工具":{}}}],["x83b7;&#x53d6;&#x5b57;&#x7b26;&#x4e32;&#x957f;&#x5ea6",{"_index":3843,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x83b7;&#x53d6;&#x5b57;&#x7b26;&#x5728;&#x5b57;&#x7b26;&#x4e32;&#x7684;&#x4f4d;&#x7f6",{"_index":3844,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x83b7;&#x53d6;&#x6570;&#x7ec4;&#x957f;&#x5ea6;&#x3002;&#x901a;&#x8fc7;&#x4e0b;&#x6807;&#x8bbf;&#x95ee;&#x5143;&#x7d20;&#xff1a",{"_index":461,"title":{},"body":{"basic/array.html#数组":{}}}],["x83b7;&#x53d6;&#x67d0;&#x4e2a;&#x7d22;&#x5f15;&#x4f4d;&#x7f6e;&#x7684;&#x5b57;&#x8282;&#x503c;&#xff0c;&#x5b57;&#x7b26;&#x4e32;&#x662f;&#x4e0d;&#x53ef;&#x4fee;&#x6539;&#x7684;&#xff0c;&#x4e0d;&#x80fd;&#x4f7f;&#x7528",{"_index":3813,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x83b7;&#x53d6;&#x6e90;&#x7801",{"_index":3640,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x83b7;&#x53d6;&#x7c7b;&#x578b;&#x4fe1;&#x606f;&#x3002",{"_index":2169,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["x83b7;&#x53d6;&#xff0c;&#x800c;&#x5fc5;&#x987b;&#x901a;&#x8fc7",{"_index":1955,"title":{},"body":{"basic/map.html#map":{}}}],["x83b7;&#x5f97;&#x7684",{"_index":3997,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x83b7;&#x5f97;&#x8fd9;&#x4e2a;&#x9501;&#xff0c;&#x518d;&#x6709",{"_index":4787,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x83b7;&#x5f97;&#xff09;&#x3002",{"_index":3294,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x85aa;&#x8d44;&#x8ba1;&#x7b97;&#x5668;&#x63a5;&#x53e3",{"_index":774,"title":{},"body":{"basic/interface.html#接口":{}}}],["x867d;&#x7136;&#x8c8c",{"_index":1164,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x867d;&#x7136;&#x8fd9;&#x4f1a;&#x5f88;&#x5feb;&#xff0c;&#x4f46;&#x662f;&#x7531;&#x4e8e;&#x4e0a;&#x9762;&#x6240;&#x8bf4;&#x7684;&#x90a3;&#x4e9b;&#x51c6;&#x5907;&#x5de5;&#x4f5c;&#x8fd8;&#x662f;&#x4e0d;&#x53ef;&#x907f;&#x514d;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x8017;&#x65f6;&#x8fd8;&#x662f;&#x5b58;&#x5728;&#x7684;&#x3002",{"_index":4335,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x884c;&#x5206;&#x9694;&#x7b26",{"_index":204,"title":{"index.html#行分隔符":{}},"body":{}}],["x884c;&#x52a0",{"_index":1527,"title":{},"body":{"basic/constant.html#iota":{}}}],["x884c;&#x5b8c;&#x6bd5;&#x201d;&#x7684;&#x529f;&#x80fd;&#x3002",{"_index":5170,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8868;&#x660e;&#x4e86;&#x8fd9;&#x4e2a",{"_index":965,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8868;&#x660e;&#x6211;&#x7684;&#x8fd9;&#x4e2a;&#x7a0b;&#x5e8f;&#x662f;&#x4ee5;&#x9000;&#x51fa;&#x72b6;&#x6001;&#x7801;2&#x7ed3;&#x675f;&#x8fd0;&#x884c;&#x7684;&#x3002",{"_index":976,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8868;&#x660e;&#x9700;&#x8981;&#x6267;&#x884c;&#x4efb;&#x610f;&#x540d;&#x79f0;&#x7684;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002",{"_index":3256,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x8868;&#x660e;&#xff0c;&#x7531;&#x4e8e;&#x6d4b;&#x8bd5;&#x4ee3;&#x7801;&#x4e0e;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x90fd;&#x6ca1;&#x6709;&#x4efb;&#x4f55;&#x53d8;&#x52a8;&#xff0c;&#x6240;&#x4ee5",{"_index":3241,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x8868;&#x683c;&#x9a71;&#x52a8;&#x6d4b;&#x8bd5;&#x5728;&#x6211;&#x4eec;&#x8981;&#x521b;&#x5efa;&#x4e00;&#x7cfb;&#x5217;&#x76f8;&#x540c;&#x6d4b;&#x8bd5;&#x65b9;&#x5f0f;&#x7684;&#x6d4b;&#x8bd5;&#x7528;&#x4f8b;&#x65f6;&#x5f88;&#x6709;&#x7528;&#x3002;&#x4f8b;&#x5982",{"_index":3189,"title":{},"body":{"basic/test.html#测试函数":{}}}],["x8868;&#x793a",{"_index":3786,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["x8868;&#x793a;&#x4e00;&#x4e2a;&#x53ea;&#x53d1;&#x9001",{"_index":2713,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x793a;&#x4e00;&#x4e2a;&#x53ea;&#x63a5;&#x6536",{"_index":2715,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x793a;&#x6210;&#x529f;&#x3002",{"_index":923,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x8868;&#x793a;&#x64cd;&#x4f5c;&#x7ed3;&#x679c;&#xff0c;&#x662f;&#x4e00;&#x4e2a;&#x5e03;&#x5c14;&#x503c;&#x3002",{"_index":1946,"title":{},"body":{"basic/map.html#map":{}}}],["x8868;&#x793a;&#x662f;&#x5207;&#x7247;&#x7c7b;&#x578b;&#xff0c;{1,2,3}&#x521d;&#x59cb;&#x5316;&#x503c;&#x4f9d;&#x6b21;&#x662f;1,2,3.&#x5176",{"_index":2061,"title":{},"body":{"basic/slice.html#slice":{}}}],["x8868;&#x793a;&#x8bfb;&#x53d6;&#x6307;&#x9488;&#x6307;&#x5411;&#x7684;&#x53d8;&#x91cf;&#x7684;&#x503c;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x53d8;&#x91cf",{"_index":1295,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x8868;&#x8fbe;&#x5f0f",{"_index":1509,"title":{},"body":{"basic/constant.html#常量":{},"basic/var.html#变量":{},"basic/var.html#声明一组变量":{},"basic/var.html#简短声明":{},"basic/operator.html#位运算符":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x3002",{"_index":567,"title":{},"body":{"basic/flow.html#for":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x4e2d;&#x7684;&#x5b50;&#x8868;&#x8fbe;&#x5f0f;&#x7ed3;&#x679c;&#x503c;&#x5b58",{"_index":538,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x4e2d;&#x90fd;&#x53ea;&#x80fd;&#x5305;&#x542b;&#x64cd;&#x4f5c;&#x901a;&#x9053;&#x7684;&#x8868;&#x8fbe;&#x5f0f",{"_index":2751,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x4e2d;&#xff0c;&#x90fd;&#x4f1a;&#x662f;&#x8fd9;&#x6837;&#x7684;&#x7ed3;&#x679c;&#x3002",{"_index":540,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x53ea;&#x4f1a;&#x5728",{"_index":568,"title":{},"body":{"basic/flow.html#for":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x5404;&#x6c42;&#x503c;&#x4e00;&#x6b21;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x5982;&#x679c;&#x6211;&#x4eec;&#x60f3;&#x8fde;&#x7eed;&#x6216;&#x5b9a;&#x65f6;&#x5730;&#x64cd;&#x4f5c;&#x5176;&#x4e2d;&#x7684;&#x901a;&#x9053;&#x7684;&#x8bdd;&#xff0c;&#x5c31;&#x5f80;&#x5f80;&#x9700;&#x8981",{"_index":2787,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x6ee1;&#x8db3;&#x6761;&#x4ef6;&#x4e3a;&#x6b62;&#x3002",{"_index":2782,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x6240;&#x6709;&#x5b50;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x90fd;&#x662f;&#x8981;&#x4e0",{"_index":528,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x6c42;&#x503c;&#x7ed3;&#x679c;&#x4f1a;&#x88ab;&#x590d;&#x5236;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x88ab;&#x8fed;&#x4ee3;&#x7684;&#x5bf9;&#x8c61;&#x662f",{"_index":571,"title":{},"body":{"basic/flow.html#for":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x5224;&#x7b49;&#x7684;&#xff0c;&#x56e0;&#x6b64;&#x5b83;&#x4eec;&#x7684;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x76f8",{"_index":529,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x53ef;&#x4ee5;&#x662f;&#x6570;&#x7ec4;&#x3001;&#x6570;&#x7ec4;&#x7684;&#x6307;&#x9488;&#x3001",{"_index":587,"title":{},"body":{"basic/flow.html#for":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x503c;&#x76f8;&#x7b49;&#xff0c;&#x90a3;&#x4e48;&#x4f4d;&#x7f6e;&#x9760;&#x4e0a;&#x7684",{"_index":546,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7ed3;&#x679c;&#x7c7b;&#x578b;&#x3002",{"_index":531,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x7ed3;&#x679c;&#x503c;&#x7684;&#x526f;&#x672c;&#x800c;&#x4e0d;&#x662f;&#x539f;&#x503c;&#x3002",{"_index":572,"title":{},"body":{"basic/flow.html#for":{}}}],["x8868;&#x8fbe;&#x5f0f;&#x90fd;&#x6ca1;&#x6709;&#x6ee1;&#x8db3;&#x6c42;&#x503c;&#x6761;&#x4ef6;&#xff0c;&#x90a3;&#x4e48",{"_index":2779,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8868;&#x9762;&#x4e0a;&#x770b;&#xff0c;&#x6307;&#x9488;&#x53c2;&#x6570;&#x6027;&#x80fd;&#x4f1a;&#x66f4;&#x597d;&#xff0c;&#x4f46;&#x662f;&#x8981;&#x6ce8;&#x610f;&#x88ab;&#x590d;&#x5236;&#x7684;&#x6307;&#x9488;&#x4f1a;&#x5ef6;&#x957f;&#x76ee;&#x6807;&#x5bf9;&#x8c61;&#x7684;&#x751f;&#x547d;&#x5468;&#x671f;&#xff0c;&#x8fd8;&#x53ef;&#x80fd;&#x5bfc;&#x81f4;&#x5b83;&#x88ab;&#x5206;&#x914d;&#x5230;&#x5806;&#x4e0a;&#xff0c;&#x5176;&#x6027;&#x80fd;&#x6d88;&#x8017;&#x8981;&#x52a0;&#x4e0a;&#x5806;&#x5185;&#x5b58;&#x5206;&#x914d;&#x548c",{"_index":2513,"title":{},"body":{"basic/function.html#参数":{}}}],["x88ab;&#x4fee;&#x6539;&#x5b8c;&#x7684;&#x503c;&#xff0c;&#x5bf9;&#x5417;&#xff1f",{"_index":5004,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x88ab;&#x5173;&#x95ed;&#x5e76;&#x4e14;&#x6ca1;&#x6709;&#x503c;&#x53ef;&#x63a5;&#x6536;&#x65f6",{"_index":2667,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x88ab;&#x5916;&#x90e8;&#x5757;&#x8bbf;&#x95ee;&#x7684;&#x3002",{"_index":2122,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x88ab;&#x5b58;&#x5728;&#x4e86",{"_index":5326,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x88ab;&#x5bfc;&#x5165;&#x7684;&#x5305;&#x90fd;&#x52a0;&#x8f7d;&#x5b8c;&#x6bd5;&#x4e86;&#xff0c;&#x5c31;&#x4f1a;&#x5f00;&#x59cb;&#x5bf9",{"_index":1666,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x88ab;&#x5f15;&#x53d1;&#x5230;&#x7a0b;&#x5e8f;&#x7ec8;&#x6b62;&#x8fd0;&#x884c;&#x7684;&#x5927;&#x81f4;&#x8fc7;&#x7a0b;&#x662f;&#x4ec0;&#x4e48",{"_index":983,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x88ab;&#x5f15;&#x53d1;&#x65f6;&#x6b63;&#x5728;&#x6267;&#x884c;&#x3002;&#x542b;&#x4e86;&#x6b64;&#x884c;&#x4ee3;&#x7801;&#x5728;&#x5176;&#x6240;&#x5c5e;&#x7684;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x884c;&#x6570;&#xff0c",{"_index":973,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x88ab;&#x5f15;&#x53d1;&#x7684;&#x65f6;&#x5019;&#x6b63;&#x5728;&#x8fd0;&#x884c;&#x3002;&#x8fd9;&#x91cc;&#x7684",{"_index":963,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x88ab;&#x6c38;&#x8fdc;&#x5361;&#x4f4f;&#xff0c;&#x5c31;&#x4f1a;&#x5bfc;&#x81f4",{"_index":4452,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x88ab;&#x79f0;&#x4e3a;&#x5355;&#x4e2a;&#x6027;&#x80fd;&#x6d4b;&#x8bd5;&#x7684;&#x540d;&#x79f0;&#xff0c;&#x5b83;&#x8868;&#x793a;&#x547d;&#x4ee4;&#x6267;&#x884c;&#x4e86;&#x6027;&#x80fd;&#x6d4b;&#x8bd5",{"_index":3266,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x88ab;&#x79f0;&#x4e3a;&#x7a7a;&#x63a5;&#x53e3;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x6ca1;&#x6709;&#x4efb;&#x4f55;&#x65b9;&#x6cd5;&#x3002;&#x6240;&#x6709;&#x7684;&#x7c7b;&#x578b;&#x90fd;&#x5b9e;&#x73b0;&#x4e86;&#x7a7a",{"_index":734,"title":{},"body":{"basic/interface.html#接口":{}}}],["x88ab;&#x7f16;&#x8bd1;&#x7684;&#x5305;&#x4f1a;&#x88ab;&#x4fdd;&#x5b58;&#x5230",{"_index":2935,"title":{},"body":{"commands/build.html#工具":{}}}],["x88ab;&#x89c6;&#x4e3a;&#x5bf9;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x5199;&#x64cd;&#x4f5c;&#x3002",{"_index":4875,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x88ab;&#x963b;&#x585e;&#x5728;&#x67d0;&#x4e2a",{"_index":4603,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x88c1;&#x526a",{"_index":407,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x8981;&#x4efb;&#x4f55;&#x53c2;&#x6570;&#x58f0;&#x660e;&#xff0c;&#x4f46;&#x9700;&#x8981;&#x6709;&#x4e00;&#x4e2a",{"_index":1192,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x8981;&#x4fee;&#x6539;&#x5b9e;&#x4f8b;&#x72b6;&#x6001;&#xff0c;&#x7528",{"_index":1141,"title":{},"body":{"basic/oop.html#方法":{}}}],["x8981;&#x53bb;&#x6267;&#x884c;&#xff0c",{"_index":4633,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8981;&#x53d1;&#x9001;&#x7684;&#x6570;&#x636e;&#x7684;&#x7c7b;&#x578b;&#x3002;&#x7b2c;&#x4e8c;&#x4e2a;&#x53c2;&#x6570;&#x4ee3;&#x8868;&#x521b;&#x5efa;&#x4e00;&#x5e26;&#x7f13;&#x5b58;&#x7684",{"_index":2641,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8981;&#x6587;&#x4ef6;&#xff08;block",{"_index":3321,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8981;&#x6c42;&#x9ad8;&#x7684;&#x573a;&#x666f;&#x4e0d;&#x80fd;&#x4efb;&#x610f;&#x4ea7;&#x751f;&#x592a;&#x591a;&#x7684;&#x5783;&#x573e;&#x3002;&#x5982;&#x4f55;&#x89e3;&#x51b3;&#x5462;&#xff1f;&#x90a3;&#x5c31;&#x662f;&#x8981;&#x91cd;&#x7528;&#x5bf9;&#x8c61;&#x4e86;&#x3002",{"_index":5275,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8981;&#x6ce8;&#x610f;&#xff0c;&#x6211;&#x4eec;&#x8981",{"_index":1044,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x8981;&#x7ade;&#x4e89;&#x7684",{"_index":4514,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8981;&#x8f6c;&#x6362;&#x4e3a;&#x6307;&#x9488;&#x7c7b;&#x578b;&#xff0c;&#x6216;&#x8005;&#x5355;&#x5411",{"_index":266,"title":{},"body":{"index.html#类型转换":{}}}],["x8981;&#x9009;&#x62e9;&#x6b63;&#x786e;&#x7684;&#x65b9;&#x5f0f;&#x3002",{"_index":2176,"title":{},"body":{"basic/reflect.html#reflect-TypeOf":{}}}],["x8986;&#x76d6;&#x7387",{"_index":3191,"title":{"basic/test.html#覆盖率":{}},"body":{}}],["x89c2;&#x5bdf;&#x51fd;&#x6570;&#x7684;&#x8fd4;&#x56de;&#x503c",{"_index":2562,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x89e3;&#x7801;&#x64cd;&#x4f5c;&#xff0c;&#x4f7f;&#x7528",{"_index":1485,"title":{},"body":{"basic/json.html#序列化":{}}}],["x89e3;&#x9501;&#x201c;&#x8bfb;&#x5199;&#x9501;&#x4e2d;&#x672a;&#x88ab;&#x9501;&#x5b9a;&#x7684;&#x5199;&#x9501;&#x201d;&#xff0c;&#x4f1a;&#x7acb;&#x5373;&#x5f15;&#x53d1",{"_index":4831,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x89e3;&#x9501;&#x5f53;&#x524d;&#x7684;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x57fa;&#x4e8e;&#x7684;&#x90a3;&#x4e2a;&#x4e92;&#x65a5;&#x9501;&#x3002",{"_index":4903,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x89e6;&#x53d1;&#x5185;&#x5b58;&#x5206;&#x914d;&#x5668;&#x7684;&#x56de;&#x6536;&#x64cd;&#x4f5c;&#x3002",{"_index":392,"title":{},"body":{"advance/mm.html#基本策略":{}}}],["x89e6;&#x53d1;&#x6761;&#x4ef6",{"_index":867,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x89e6;&#x53d1;&#x6761;&#x4ef6;&#x4e3b;&#x8981;&#x5173;&#x6ce8;&#x4e0b;&#x9762;&#x4ee3;&#x7801;&#x4e2d;&#x7684;&#x4e2d;&#x95f4;&#x90e8;&#x5206;&#xff1a",{"_index":868,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x89e6;&#x53d1;&#x9608;&#x503c;&#x3002",{"_index":870,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x89e6;&#x53d1;&#x9608;&#x503c;&#x7b49;&#x4e8",{"_index":878,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x8ba1;&#x6570;&#x5fc5;&#x987b;&#x663e;&#x793a;&#x6062;&#x590d",{"_index":1531,"title":{},"body":{"basic/constant.html#iota":{}}}],["x8ba1;&#x7b97;&#x5207;&#x7247;&#x7684;&#x6700;&#x5927;&#x5bb9;&#x91cf",{"_index":2072,"title":{},"body":{"basic/slice.html#len-和-cap":{}}}],["x8ba9;&#x4e3b",{"_index":4383,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8ba9;&#x5f53;&#x524d;&#x7684",{"_index":4904,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8ba9;&#x8c03;&#x7528;&#x65b9;&#x53bb;&#x611f;&#x77e5;&#x201c;&#x64a4;&#x9500;&#x201d;&#x5f53;&#x524d;context&#x503c;&#x7684;&#x90a3;&#x4e2a;&#x4fe1;&#x53f7",{"_index":5214,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8bb0;&#x5f55;&#x4f55;&#x65f6;&#x8fdb;&#x5165;&#x548c;&#x9000;&#x51fa;&#x51fd;&#x6570",{"_index":2558,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bbe;&#x4e3a",{"_index":3649,"title":{},"body":{"theme/theme-usage.html#Quick-Start":{}}}],["x8bbe;&#x5b9a;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x91c7;&#x6837;&#x9891;&#x7387",{"_index":3338,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bbe;&#x7f6",{"_index":3659,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["x8bbe;&#x7f6e;&#x4e86",{"_index":467,"title":{},"body":{"basic/array.html#数组":{}}}],["x8bbe;&#x7f6e;&#x5728;&#x7f16;&#x8bd1;&#x7684;&#x65f6;&#x5019;&#x53ef;&#x4ee5;&#x9002;&#x914d;&#x7684;&#x90a3;&#x4e9b;tag&#xff0c;&#x8be6;&#x7ec6;&#x7684;tag&#x9650;&#x5236;&#x53c2;&#x8003;&#x91cc;&#x9762;&#x7684",{"_index":2962,"title":{},"body":{"commands/build.html#工具":{}}}],["x8bbe;&#x7f6e;&#x6210;&#x7279",{"_index":1012,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x8bbe;&#x7f6e;&#x73af;&#x5883;&#x53d8;&#x91cf",{"_index":3246,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x8bbe;&#x8ba1;&#x6210;&#x62a2;&#x5360;&#x5f0f;&#x7684;&#x3002;&#x7528;&#x6237;&#x8d1f;&#x8d23;&#x8ba9;&#x5404;&#x4e2a",{"_index":4560,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8bbf;&#x95ee;&#x3002",{"_index":209,"title":{},"body":{"index.html#os-Args":{}}}],["x8bbf;&#x95ee;&#x53d8;&#x91cf;&#xff0c;&#x5c3d;&#x91cf;&#x628a;&#x53d8;&#x91cf;&#x9650;&#x5b9a;&#x5728;&#x4e86;&#x4e00;&#x4e2a;&#x5355;&#x72ec;&#x7684",{"_index":4774,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x8bbf;&#x95ee;&#x8fd9;&#x4e2a;&#x52a0;&#x9501;&#x7684;&#x53d8;&#x91cf;&#x5c31;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#xff0c",{"_index":4788,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8be5",{"_index":1117,"title":{},"body":{"basic/oop.html#方法":{},"basic/basic_data.html#字符串":{}}}],["x8be5;&#x503c;&#x7684",{"_index":5126,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8be5;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x5b9e;&#x73b0;&#x7684;&#x8bfb;&#x53d6;&#x76f8;&#x5173;&#x7684;&#x63a5;&#x53e3;&#x6709;&#x4e0b;&#x9762;&#x51e0;&#x4e2a;&#xff1a",{"_index":3463,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x8be5;&#x662f;&#x6307;&#x9488;&#x8fd8;&#x662f;&#x975e;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x65f6;&#xff0c;&#x4f60;&#x9700;&#x8981;&#x8003;&#x8651;&#xff1a",{"_index":1140,"title":{},"body":{"basic/oop.html#方法":{}}}],["x8be5;&#x6807;&#x8bb0;&#x7684;&#x4f5c;&#x7528;&#x662f;&#xff1a;&#x8bbe;&#x7f6e;&#x540c;&#x4e00;&#x4e2a;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#x4e2d;&#x7684;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x7684;&#x6700;&#x5927;&#x5e76;&#x53d1;&#x6267;&#x884c;&#x6570;&#x3002",{"_index":3290,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x8be5;&#x6807;&#x8bb0;&#x7684;&#x9ed8;&#x8ba4;&#x503c;&#x662f;&#x6d4b;&#x8bd5;&#x8fd0;&#x884c;&#x65f6;&#x7684;&#x6700;&#x5927",{"_index":3291,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x8be5;&#x8bed;&#x6cd5;&#x8fd4;&#x56de;&#x4e24;&#x4e2a;&#x53c2;&#x6570;&#xff0c;&#x7b2c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x662f",{"_index":308,"title":{},"body":{"index.html#类型断言":{}}}],["x8be6;&#x60c5;&#x4e2d;&#x90fd;&#x6709;&#x4ec0;&#x4e48",{"_index":955,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8be6;&#x60c5;&#x4f1a;&#x88ab;&#x9010",{"_index":992,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8be6;&#x7ec6;&#x7a0b;&#x5ea6;&#x7684",{"_index":3377,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x53e5",{"_index":594,"title":{},"body":{"basic/flow.html#for":{},"basic/struct.html#结构体":{}}}],["x8bed;&#x53e5;&#x3002;&#x6bcf;&#x4e2a",{"_index":549,"title":{},"body":{"basic/flow.html#select":{}}}],["x8bed;&#x53e5;&#x3002;&#x8fd9;&#x6761",{"_index":5153,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8bed;&#x53e5;&#x4e00;&#x822c;&#x88ab;&#x7528;&#x4e8e;&#x5904;&#x7406;&#x6210;&#x5bf9;&#x7684;&#x64cd;&#x4f5c;&#xff0c;&#x5982;&#x6253;&#x5f00;&#x3001;&#x5173;&#x95ed;&#x3001;&#x8fde;&#x63a5;&#x3001;&#x65ad;&#x5f00;&#x8fde;&#x63a5;&#x3001;&#x52a0;&#x9501;&#x3001;&#x91ca;&#x653e;&#x9501;&#x3002;&#x56e0;&#x4e3a",{"_index":2554,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#x4e00;&#x822c;&#x90fd;&#x4f1a;&#x643a;&#x5e26;&#x4e00;&#x4e2a;&#x51fd;&#x6570;&#x8c03;&#x7528;&#xff0c;&#x8fd9;&#x4e2a;&#x88ab;&#x8c03;&#x7528;&#x7684;&#x51fd;&#x6570;&#x5e38;&#x5e38;&#x88ab;&#x79f0;&#x4e3a",{"_index":4310,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x4e0d;&#x5141;&#x8bb8",{"_index":537,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8bed;&#x53e5;&#x4e0d;&#x884c;&#x5417;&#xff1f",{"_index":4939,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8bed;&#x53e5;&#x4e2d;&#x5d4c;&#x5165",{"_index":2789,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x4e2d;&#x7684",{"_index":4992,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x8bed;&#x53e5;&#x4e2d;&#x7684;&#x3002;&#x56e0;&#x6b64;&#xff0c;&#x4e0d;&#x8bba;&#x53c2;&#x6570",{"_index":5118,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["x8bed;&#x53e5;&#x4e2d;&#x7684;&#x90a3;&#x4e2a",{"_index":4396,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x4e4b;&#x540e;&#xff0c",{"_index":4358,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x4ea7;&#x751f;&#x4f5c;&#x7528;&#x3002;&#x8fd9;&#x79cd;&#x9519;&#x8bef;&#x7684;&#x7528;&#x6cd5;&#x53ef;&#x80fd;&#x4f1a;&#x8ba9;&#x8fd9;&#x4e2a",{"_index":2796,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x4f1a",{"_index":5154,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8bed;&#x53e5;&#x4f1a;&#x5148;&#x628a;&#x88ab;&#x904d;&#x5386;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x503c;&#x62c6;&#x6210;&#x4e00;&#x4e2a",{"_index":605,"title":{},"body":{"basic/flow.html#for":{}}}],["x8bed;&#x53e5;&#x5199;&#x5728;&#x51fd;&#x6570;&#x4f53;&#x7684;&#x5f00;&#x59cb;&#x5904;&#xff0c;&#x56e0;&#x4e3a;&#x5728;&#x5f15;&#x53d1",{"_index":1046,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x8bed;&#x53e5;&#x52a0",{"_index":4998,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x8bed;&#x53e5;&#x5373;&#x662f;&#x6700;&#x540e;&#x4e00;&#x6761;&#x8bed;&#x53e5;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x5728;&#x6267;&#x884c;&#x5b8c;&#x8fd9;&#x6761",{"_index":4357,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x5374;&#x53ef;&#x4ee5;&#x505a;&#x591a;&#x6b21;&#x68c0;&#x67e5;&#xff0c;&#x76f4;&#x5230;&#x8fd9;&#x4e2a;&#x72b6;&#x6001;&#x6539;&#x53d8;&#x4e3a;&#x6b62;&#x3002",{"_index":4941,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8bed;&#x53e5;&#x53ea;&#x4f1a;&#x5bf9;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#x68c0;&#x67e5;&#x4e00;&#x6b21;&#xff0c;&#x800c",{"_index":4940,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8bed;&#x53e5;&#x53ea;&#x6709;&#x4e00;&#x4e2a;&#x5019;&#x9009;&#x5206;&#x652f;&#xff0c;&#x6211;&#x5728;&#x5176;&#x4e2d;&#x5229;&#x7528;&#x63a5;&#x6536;&#x8868;&#x8fbe;&#x5f0f;&#x7684;&#x7b2c;&#x4e8c;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x5bf9",{"_index":2800,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x53ea;&#x80fd;&#x5bf9;&#x5176;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a",{"_index":2786,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x53ef;&#x4ee5;&#x4e3a;&#x4e24;&#x4e2a;&#x8fed;&#x4ee3;&#x53d8;&#x91cf;&#x8d4b;&#x503c;&#x3002;&#x5982;&#x679c;&#x5b58;&#x5728;&#x4e24;&#x4e2a;&#x8fed;&#x4ee3;&#x53d8;&#x91cf;&#xff0c;&#x90a3;&#x4e48;&#x8d4b;&#x7ed9;&#x7b2c;&#x4e00;&#x4e2a;&#x53d8;&#x91cf;&#x7684;&#x503c;&#x5c31;&#x5c06;&#x4f1a;&#x662f;&#x5f53;&#x524d;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x4e2d;&#x7684;&#x67d0;&#x4e2a",{"_index":612,"title":{},"body":{"basic/flow.html#for":{}}}],["x8bed;&#x53e5;&#x540e;&#xff0c;&#x4f1a",{"_index":5165,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8bed;&#x53e5;&#x548c",{"_index":4437,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x5728",{"_index":534,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8bed;&#x53e5;&#x5b9a;&#x4e49;&#x4e00;&#x4e2a;&#x65b0;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":1736,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x8bed;&#x53e5;&#x5b9a;&#x4e49;&#x4e86;&#x7ed3;&#x6784;&#x4f53;&#x7684;&#x540d;&#x79f0;&#xff1a",{"_index":1737,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x8bed;&#x53e5;&#x5c31;&#x4e0d;&#x80fd;&#x901a;&#x8fc7;&#x7f16;&#x8bd1;&#x3002",{"_index":533,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8bed;&#x53e5;&#x5c31;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#x3002",{"_index":2780,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x5f00;&#x59cb;&#x6267;&#x884c;&#x65f6;&#x88ab;&#x6c42;&#x503c;&#x4e00;&#x6b21;&#xff0c;&#x65e0;&#x8bba;&#x540e;&#x8fb9;&#x4f1a;&#x6709;&#x591a;&#x5c11;&#x6b21;&#x8fed;&#x4ee3",{"_index":569,"title":{},"body":{"basic/flow.html#for":{}}}],["x8bed;&#x53e5;&#x6240;&#x5c5e;&#x7684;&#x51fd;&#x6570;&#x662f;&#x5bf9;&#x5e94;&#x7684;&#xff0c;&#x5e76;&#x4e14;&#xff0c;&#x5b83;&#x662f;&#x5148;&#x8fdb;&#x540e;&#x51fa;&#xff08;filo&#xff09;&#x7684;&#xff0c;&#x76f8;&#x5f53;&#x4e8e;&#x4e00;&#x4e2a;&#x6808;&#x3002",{"_index":2579,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#x65e0;&#x4f11;&#x6b62;&#x5730;&#x8fd0;&#x884c;&#x4e0b;&#x53bb",{"_index":2797,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x662f;&#x4e13;&#x4e3a;&#x901a;&#x9053;&#x800c;&#x8bbe;&#x8ba1;&#x7684;&#xff0c",{"_index":2749,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x672c;&#x8eab;&#x6267;&#x884c;&#x5b8c;&#x6bd5;&#xff0c;go",{"_index":4344,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x6765;&#x5305;&#x88f9;&#x8c03;&#x7528;&#x5176",{"_index":4937,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8bed;&#x53e5;&#x6bcf;&#x6b21;&#x6267;&#x884c;&#x7684;&#x65f6;&#x5019;&#xff0c;go",{"_index":2575,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#x7684;&#x51fa;&#x73b0;&#x987a;&#x5e8f;&#xff08;&#x66f4;&#x4e25;&#x8c28;&#x5730;&#x8bf4;&#xff0c;&#x662f;&#x6267;&#x884c;&#x987a;&#x5e8f;&#xff09;&#x5b8c;&#x5168;&#x76f8;&#x53cd",{"_index":2574,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#x7684;&#x51fd;&#x6570;&#x6267;&#x884c;&#x5b8c;&#x6bd5;&#x65f6;&#xff08",{"_index":2550,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#x7684;&#x5206;&#x652f;&#x4e2d;&#x4f7f;&#x7528",{"_index":2792,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x7684;&#x6267;&#x884c;&#x3002",{"_index":2804,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x7684;&#x6267;&#x884c;&#x65f6;&#x95f4",{"_index":4338,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x7684;&#x6267;&#x884c;&#xff0c;&#x800c;&#x5e76;&#x4e0d;&#x4f1a;&#x5bf9;&#x5916;&#x5c42;&#x7684",{"_index":2795,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x7684;&#x65b9;&#x5f0f;&#x5b9e;&#x73b0;&#x3002;&#x4f46;&#x8fd9;&#x65f6;&#x8981;&#x6ce8;&#x610f;&#xff0c",{"_index":2790,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x7684;&#x65f6;&#x5019;&#xff0c",{"_index":4317,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x9700;&#x8981;&#x6ce8;&#x610f;&#x7684;&#x4e8b;&#x60c5",{"_index":2774,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x7684;&#x6700;&#x540e;&#x4e00;&#x4e2a;&#x8fed;&#x4ee3;&#x8fd0;&#x884c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5176;&#x4e2d;&#x7684;&#x90a3;&#x6761",{"_index":4356,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x7acb;&#x5373;&#x7ed3;&#x675f;&#x5f53;&#x524d",{"_index":2803,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#x8054;&#x7528;&#x5c31;&#x53ef;&#x4ee5;&#x5b9e;&#x73b0;&#x4e00;&#x79cd;&#x7b80;&#x6613;&#x7684;&#x81ea;&#x65cb;&#x9501;&#xff08;spinlock&#xff09;&#x3002",{"_index":4991,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x8bed;&#x53e5;&#x88ab;&#x6267;&#x884c;&#x65f6;&#xff0c;&#x6211;&#x4eec",{"_index":4401,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x88ab;&#x6267;&#x884c;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5728",{"_index":584,"title":{},"body":{"basic/flow.html#for":{}}}],["x8bed;&#x53e5;&#x88ab;&#x6267;&#x884c;&#x7684;&#x65f6;&#x95f4;&#x4e0d;&#x540c",{"_index":4315,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x53e5;&#x8c03;&#x7528",{"_index":1038,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x8bed;&#x53e5;&#x8c03;&#x7528;&#x5b83;&#x3002",{"_index":5053,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x8bed;&#x53e5;&#x904d;&#x5386;&#x5b57;&#x7b26;&#x4e32;&#x503c;&#x7684;&#x65f6;&#x5019;&#x5e94;&#x8be5;&#x6ce8;&#x610f",{"_index":603,"title":{},"body":{"basic/flow.html#for":{}}}],["x8bed;&#x53e5;&#x90fd;&#x4e0d;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#x3002;&#x5982;&#x679c;&#x90a3;&#x51e0;&#x4e2a;&#x8868;&#x8fbe;&#x5f0f;&#x90fd;&#x963b;&#x585e;&#x4e86;&#xff0c;&#x6216;&#x8005",{"_index":2776,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#xff0c",{"_index":5377,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["x8bed;&#x53e5;&#xff0c;&#x4f60;&#x8981;&#x660e;&#x767d;&#x5176;&#x4e2d;&#x7684",{"_index":527,"title":{},"body":{"basic/flow.html#switch":{}}}],["x8bed;&#x53e5;&#xff0c;&#x53ea;&#x80fd;&#x7ed3",{"_index":2793,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x53e5;&#xff0c;&#x90a3;&#x4e48;&#x90a3;&#x51e0;&#x4e2a",{"_index":2570,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x53e5;&#xff1b;&#x907f;&#x514d;&#x91cd;&#x590d;&#x9501;&#x5b9a;&#x3002",{"_index":4829,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bed;&#x6cd5;&#x4e0d;&#x80fd;&#x5728",{"_index":314,"title":{},"body":{"index.html#类型断言":{}}}],["x8bed;&#x8a00",{"_index":1743,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x8bed;&#x8a00;&#x4e00;&#x5b9a;&#x4f1a;&#x751f;&#x6210;&#x65b0;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#xff0c;&#x4f46;&#x662f;&#x5b83;&#x4e5f;&#x540c;&#x65f6;&#x751f;&#x6210;&#x4e86;&#x65b0;&#x7684;&#x5207;&#x7247;&#x3002;&#x5b83;&#x662f;&#x628a;&#x65b0",{"_index":2104,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x8bed;&#x8a00;&#x4e0d;&#x4f46;&#x6709;&#x7740;&#x72ec;&#x7279;&#x7684;&#x5e76;&#x53d1;&#x7f16;&#x7a0b;&#x6a21;&#x578b;&#xff0c;&#x4ee5;&#x53ca;&#x7528;&#x6237;&#x7ea7;&#x7ebf;&#x7a0b",{"_index":4277,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x4e2d",{"_index":1171,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x8bed;&#x8a00;&#x4e2d;&#x4f7f;&#x7528;&#x7684;&#x5783;&#x573e;&#x56de;&#x6536;&#x4f7f;&#x7528;&#x7684;&#x662f",{"_index":843,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x8bed;&#x8a00;&#x4e2d;&#x7684",{"_index":1471,"title":{},"body":{"basic/json.html#序列化":{}}}],["x8bed;&#x8a00;&#x4e2d;&#x7684;&#x4e00;&#x4e9b;&#x6570;&#x636e;&#x7c7b;&#x578b;&#xff0c;&#x4e3a;&#x6211;&#x4eec;&#x9690;&#x533f;&#x6389;&#x4e86;&#x8fd9;&#x4e2a;&#x63cf;&#x8ff0;&#x7b26;&#xff0c;&#x5982;&#x6b64;&#x4e00;&#x6765;&#x6211;&#x4eec;&#x5c31;&#x65e0;&#x9700;&#x65f6;&#x523b;&#x5173;&#x6ce8;&#x548c;&#x8fa8;&#x522b;&#x5b83;&#x4e86",{"_index":4127,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x8bed;&#x8a00;&#x4e2d;&#xff0c",{"_index":292,"title":{},"body":{"index.html#类型断言":{},"basic/error.html#Panic-异常":{},"basic/oop.html#String-方法":{},"basic/basic_data.html#字符串":{}}}],["x8bed;&#x8a00;&#x4e2d;&#xff0c;&#x7528;&#x4e8e;&#x5206;&#x6790;&#x7a0b;&#x5e8f;&#x6027;&#x80fd;&#x7684;&#x6982;&#x8981;&#x6587;&#x4ef6;&#x6709;&#x4e09;&#x79cd;&#xff0c;&#x5206;&#x522b;&#x662f;&#xff1a",{"_index":3317,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x4e3a;&#x7a0b;&#x5e8f;&#x5f00;&#x53d1;&#x8005;&#x4eec;&#x63d0;&#x4f9b;&#x4e86;&#x4e30;&#x5bcc;&#x7684;&#x6027;&#x80fd;&#x5206;&#x6790",{"_index":3311,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x4f1a;&#x5148;&#x62ff;&#x5230;&#x5bf9;&#x5e94;&#x7684;&#x961f;&#x5217;&#xff0c;&#x7136;&#x540e;&#x4ece;&#x8be5;&#x961f;&#x5217;&#x4e2d;&#x4e00;&#x4e2a;&#x4e00;&#x4e2a;&#x5730;&#x53d6;&#x51fa",{"_index":2582,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x8a00;&#x4f1a;&#x628a;&#x5b83;&#x643a;&#x5e26;&#x7684",{"_index":2576,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8bed;&#x8a00;&#x4f1a;&#x628a;&#x6240;&#x6709;&#x88ab;&#x62fc;&#x63a5;&#x7684;&#x5b57;&#x7b26;&#x4e32;&#x4f9d;&#x6b21;&#x62f7;&#x8d1d;&#x5230;&#x4e00;&#x4e2a;&#x5d2d;&#x65b0;&#x4e14;&#x8db3;&#x591f;&#x5927;&#x7684;&#x8fde;&#x7eed;&#x5185;&#x5b58;&#x7a7a;&#x95f4;&#x4e2d;&#xff0c",{"_index":3870,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8bed;&#x8a00;&#x4f1a;&#x6839;&#x636e;&#x5143;&#x7d20;&#x7684;&#x4e2a;&#x6570;&#x6765;&#x8bbe;&#x7f6e;&#x6570;&#x7ec4;&#x7684;&#x5927;&#x5c0f;&#x3002",{"_index":469,"title":{},"body":{"basic/array.html#数组":{}}}],["x8bed;&#x8a00;&#x4f7f;&#x7528;&#x7684;&#x662f",{"_index":2500,"title":{},"body":{"basic/function.html#参数":{}}}],["x8bed;&#x8a00;&#x5305;&#x4e2d;&#x7684",{"_index":4778,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bed;&#x8a00;&#x53ef;&#x4ee5;&#x8f7b;&#x800c;&#x6613;&#x4e3e;&#x5730;&#x901a;&#x8fc7;&#x5d4c;&#x5165",{"_index":1180,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x8bed;&#x8a00;&#x5728;&#x8bed;&#x8a00;&#x5c42;&#x9762;&#x4e0a;&#x652f;&#x6301;&#x4e86;&#x5e76;&#x53d1;&#xff0c;&#x7b80;&#x5355;&#x5c06",{"_index":4245,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x5b98;&#x65b9;&#x7ec8;&#x4e8e;&#x5728",{"_index":5299,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8bed;&#x8a00;&#x5c06;&#x4f1a;&#x4ee5;&#x539f;&#x5bb9;&#x91cf;&#x7684",{"_index":2098,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x8bed;&#x8a00;&#x5c31;&#x4f1a;&#x60f3;&#x529e;&#x6cd5;&#x6269;&#x5bb9;&#x3002;&#x4f46;&#x5b83;&#x5e76;&#x4e0d;&#x4f1a;&#x6539;&#x53d8;&#x539f;&#x6765;&#x7684;&#x5207;&#x7247;&#xff0c;&#x800c;&#x662f;&#x4f1a;&#x751f;&#x6210;&#x4e00;&#x4e2a;&#x5bb9;&#x91cf;&#x66f4;&#x5927;&#x7684;&#x5207;&#x7247;&#xff0c",{"_index":2090,"title":{},"body":{"basic/slice.html#怎样估算切片容量的增长":{}}}],["x8bed;&#x8a00;&#x5e76;&#x4e0d;&#x4f1a;&#x53bb;&#x4fdd;&#x8bc1;&#x8fd9;&#x4e9b",{"_index":4361,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x5f00;&#x6e90;&#x5305;&#xff0c;&#x53ef;&#x4ee5;&#x5728",{"_index":1565,"title":{},"body":{"basic/package.html#包":{}}}],["x8bed;&#x8a00;&#x624d;&#x80fd;&#x4fdd;&#x8bc1;&#x6bcf;&#x4e2a",{"_index":4398,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x63d0;&#x4f9b;&#x7684;&#x4e0d;&#x540c;&#x5bfb;&#x5e38;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x5d4c;&#x5165;&#x673a;&#x5236;&#x8ba9;&#x4e00;&#x4e2a;&#x547d;&#x540d;&#x7684;&#x7ed3;&#x6784;&#x4f53;&#x5305;&#x542b;&#x53e6;&#x4e00;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x7c7b;&#x578b;&#x7684;&#x533f;&#x540d;&#x6210;&#x5458;&#xff0c",{"_index":1765,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x8bed;&#x8a00;&#x63d0;&#x4f9b;&#x7684;&#x65b9;&#x5f0f;&#x8fdb;&#x884c;&#x4e86;&#x4eba;&#x4e3a",{"_index":4371,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x652f;&#x6301;&#x533f;&#x540d;&#x51fd;&#x6570;&#xff0c;&#x53ef;&#x4f5c;&#x4e3a;&#x95ed;&#x5305;&#x3002",{"_index":2539,"title":{},"body":{"basic/function.html#闭包":{}}}],["x8bed;&#x8a00;&#x652f;&#x6301;&#x591a;&#x79cd;&#x7c7b;&#x578b;&#x7684;&#x5256;&#x6790;&#x6027;&#x80fd;&#x5206;&#x6790;&#xff1a",{"_index":3212,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x8bed;&#x8a00;&#x6559;&#x7a0b",{"_index":1744,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x8bed;&#x8a00;&#x662f;&#x7528;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x5b9e;&#x73b0;&#x4e86;&#x7ee7;&#x627f;&#x5417",{"_index":1170,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x8bed;&#x8a00;&#x6700;&#x91cd;&#x8981;&#x7684;&#x7f16;&#x7a0b;&#x7406;&#x5ff5;&#x3002",{"_index":2628,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x8a00;&#x6709;&#x4e00;&#x4e2a;&#x7279;&#x6027;&#x53ef;&#x4ee5",{"_index":1769,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x8bed;&#x8a00;&#x6709;&#x8d85;&#x8fc7",{"_index":1560,"title":{},"body":{"basic/package.html#包":{}}}],["x8bed;&#x8a00;&#x6807;&#x51c6;&#x5e93;&#x4e2d;&#x6700;&#x91cd;&#x8981;&#x7684;&#x90a3;&#x51e0;&#x4e2a;&#x540c;&#x6b65;&#x5de5;&#x5177;&#xff0c;&#x8fd9;&#x5305;&#x62ec",{"_index":5244,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8bed;&#x8a00;&#x6807;&#x51c6;&#x5e93;&#x4e2d;&#x7684;&#x8fd8;&#x6709;&#x53e6;&#x4e00;&#x4e2a;&#x540c;&#x6b65;&#x5de5;&#x5177;&#xff1a",{"_index":5245,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8bed;&#x8a00;&#x7279;&#x6709;&#x7684;&#x4e00;&#x4e2a;&#x57fa;&#x672c;&#x6570;&#x636e;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x7684;&#x4e00;&#x4e2a;&#x503c;&#x5c31;&#x4ee3;&#x8868;&#x4e00;&#x4e2a;&#x5b57;&#x7b26;&#xff0c;&#x5373;&#xff1a;&#x4e00;&#x4e2a",{"_index":4017,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8bed;&#x8a00;&#x7684;&#x4ee3;&#x7801;&#x5c31;&#x662f;&#x901a;&#x8fc7;&#x8fd9;&#x4e2a",{"_index":199,"title":{},"body":{"index.html#package":{}}}],["x8bed;&#x8a00;&#x7684;&#x4ee3;&#x7801;&#x65f6;&#xff0c;&#x6bcf;&#x4e2a;&#x6587;&#x4ef6;&#x7684;&#x5934;&#x90e8;&#x90fd;&#x6709;&#x4e00;&#x884c",{"_index":193,"title":{},"body":{"index.html#package":{}}}],["x8bed;&#x8a00;&#x7684;&#x5305;&#x4e0e;&#x5176;&#x4ed6;&#x8bed;&#x8a00;&#x7684",{"_index":1558,"title":{},"body":{"basic/package.html#包":{}}}],["x8bed;&#x8a00;&#x7684;&#x539f;&#x5b50;&#x64cd;&#x4f5c;&#x5f53;&#x7136;&#x662f;&#x57fa;&#x4e8",{"_index":4959,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x8bed;&#x8a00;&#x7684;&#x56db;&#x7c7b;&#x6570;&#x636e;&#x7c7b;&#x578b",{"_index":181,"title":{},"body":{"index.html#数据类型":{}}}],["x8bed;&#x8a00;&#x7684;&#x5f88;&#x591a;&#x540c;&#x6b65;&#x5de5;&#x5177;&#x4e00;&#x6837;&#xff0c",{"_index":5247,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8bed;&#x8a00;&#x7684;&#x6e90;&#x7801;&#x6587;&#x4ef6;&#x5fc5;&#x987b;&#x4f7f;&#x7528",{"_index":322,"title":{},"body":{"index.html#编码":{}}}],["x8bed;&#x8a00;&#x7684;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x5c31;&#x4f1a;&#x7acb;&#x5373;&#x629b;&#x51fa;&#x4e00;&#x4e2a",{"_index":2011,"title":{},"body":{"basic/map.html#map":{}}}],["x8bed;&#x8a00;&#x7684;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#xff09;&#x53ea;&#x4f1a;&#x6267;&#x884c;&#x5bf9;&#x540c;&#x4e00;&#x4e2a;&#x901a",{"_index":2721,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x8a00;&#x7684;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#xff0c;&#x4f1a;&#x5148;&#x8bd5;&#x56fe;&#x4ece;&#x67d0;&#x4e2a",{"_index":4319,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x7684;&#x94fe;&#x8868;&#x5b9e;&#x73b0;&#x5728;&#x6807;&#x51c6;&#x5e93;&#x7684",{"_index":2404,"title":{},"body":{"packages/container.html#container-包":{}}}],["x8bed;&#x8a00;&#x7ed3;&#x6784;&#x4f53;&#x6210;&#x5458;&#x4e3a;&#x7a7a;&#x6216;&#x96f6;&#x503c;&#x65f6;&#x4e0d;&#x751f;&#x6210",{"_index":1478,"title":{},"body":{"basic/json.html#序列化":{}}}],["x8bed;&#x8a00;&#x7f16;&#x8bd1;&#x5668;&#x662f;&#x65e0;&#x6cd5;&#x5728;&#x7f16;&#x8bd1;&#x671f;&#x5bf9;&#x5b83;&#x4eec;&#x8fdb;&#x884c;&#x68c0;&#x67e5;&#x7684;&#xff0c;&#x4e0d;&#x6b63;&#x786e;&#x7684;&#x952e;&#x503c;&#x5b9e;&#x9645;&#x7c7b",{"_index":5310,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8bed;&#x8a00;&#x7f16;&#x8bd1;&#x901f;&#x5ea6;&#x5f88;&#x5feb;&#xff0c;&#x4e3b;&#x8981;&#x4f9d;&#x8d56;&#x4e0b;&#x9762;&#x4e09;&#x70b9;&#xff1a",{"_index":1568,"title":{},"body":{"basic/package.html#包":{}}}],["x8bed;&#x8a00;&#x81ea;&#x5e26;&#x7684;&#x3001;&#x552f;&#x4e00;&#x4e00;&#x4e2a;&#x53ef;&#x4ee5;&#x6ee1;&#x8db3;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x6027;&#x7684;&#x7c7b;&#x578b",{"_index":2632,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bed;&#x8a00;&#x81ea;&#x5e26;&#x7684;&#x5b57;&#x5178;&#x7c7b;&#x578b",{"_index":5295,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8bed;&#x8a00;&#x89c4;&#x8303;&#x89c4;&#x5b9a;&#xff0c",{"_index":1772,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x8bed;&#x8a00;&#x89c4;&#x8303;&#x89c4;&#x5b9a;&#xff0c;&#x5728",{"_index":1979,"title":{},"body":{"basic/map.html#map":{}}}],["x8bed;&#x8a00;&#x8c03;&#x5ea6;&#x5668;&#x7684;&#x77ed;&#x6682;&#x505c;&#x987f;&#x3002",{"_index":3360,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x4f1a;&#x7528;&#x8fd9;&#x4e2a",{"_index":4329,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x5185;&#x90e8;&#x7684;&#x4e00;&#x4e2a;&#x6982;&#x5ff5;&#xff0c;&#x4ee3;&#x8868;&#x7740;&#x5b83;&#x540c;&#x65f6;&#x8fd0;&#x884c",{"_index":3278,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x5c06;&#x4f1a;&#x5b8c;&#x5168;&#x505c;&#x6b62;&#x5bf9;&#x963b;&#x585e;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x91c7;&#x6837;&#x3002",{"_index":3367,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x5c31",{"_index":3344,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x6536;&#x56de;&#x3002",{"_index":990,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x662f;&#x4e0d;&#x5141;&#x8bb8;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x51fa;&#x73b0;&#x7684;&#xff0c;&#x53ea;&#x8981;&#x5b83;&#x53d1;&#x73b0;&#x6240;&#x6709;&#x7684;&#x7528;&#x6237;&#x7ea7",{"_index":4846,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x7684;&#x91c7;&#x6837;&#x5de5;&#x4f5c;&#xff0c;&#x9020;&#x6210;&#x4e0d;&#x826f;&#x5f71;&#x54cd",{"_index":3349,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8bed;&#x8a00;&#x8fd0;&#x884c;&#x65f6;&#x7cfb;&#x7edf;&#x81ea;&#x884c;&#x629b;&#x51fa;&#x7684",{"_index":4851,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bed;&#x8a00;&#x90fd;&#x6709;&#x4e00;&#x5957;&#x7b97;&#x6cd5;&#x4e0e;&#x4e4b;&#x5bf9;&#x5e94;&#x3002;&#x8fd9;&#x5957;&#x7b97;&#x6cd5;&#x4e2d;&#x5c31;&#x5305;&#x542b;&#x4e86;&#x54c8;&#x5e0c;&#x548c;&#x5224;&#x7b49;&#x3002",{"_index":1989,"title":{},"body":{"basic/map.html#map":{}}}],["x8bed;&#x8a00;&#x91cc;&#x9762;&#x6709;&#x4e00;&#x4e2a;&#x8bed;&#x6cd5;&#xff0c;&#x53ef;&#x4ee5;&#x76f4;&#x63a5",{"_index":299,"title":{},"body":{"index.html#类型断言":{}}}],["x8bed;&#x8a00;&#x975e;&#x5e38;&#x7b80;&#x5355;&#xff0c;&#x53ea;&#x6709",{"_index":159,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x8bed;&#x8a00;&#xff0c;golang",{"_index":1316,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x8bf4;&#x90fd;&#x6ca1;&#x6709;&#x6ee1;&#x8db3;&#x6c42;&#x503c;&#x7684;&#x6761;&#x4ef6;&#xff0c;&#x90a3;&#x4e48;&#x9ed8;&#x8ba4;&#x5206;&#x652f;&#x5c31;&#x4f1a;&#x88ab;&#x9009;&#x4e2d;&#x5e76;&#x6267;&#x884c;&#x3002",{"_index":2777,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8bf7;&#x6c42;&#x5176;&#x5b83;&#x7684",{"_index":4269,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bf7;&#x8bb0;&#x4f4f;&#xff0c",{"_index":4342,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8bfb;&#x5199;&#x901a;&#x9053;&#x6216;&#x8005;&#x4e3b;&#x52a8;&#x8ba9;&#x51fa",{"_index":4563,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8bfb;&#x5199;&#x9501",{"_index":4794,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8bfb;&#x5199;&#x9501;&#x662f;&#x628a;&#x5bf9;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x201c;&#x8bfb;&#x64cd;&#x4f5c;&#x201d;&#x548c;&#x201c;&#x5199;&#x64cd;&#x4f5c;&#x201d;&#x533a;&#x522b;&#x5bf9;&#x5f85;&#x4e86;&#x3002;&#x5b83;&#x53ef;&#x4ee5;&#x5bf9;&#x8fd9;&#x4e24;&#x79cd;&#x64cd;&#x4f5c;&#x65bd;&#x52a0;&#x4e0d;&#x540c;&#x7a0b;&#x5ea6;&#x7684;&#x4fdd;&#x62a4",{"_index":4798,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bfb;&#x5199;&#x9501;&#xff08;&#x591a;&#x8bfb;&#x5355;&#x5199;&#x9501;&#xff09;&#x3002",{"_index":4797,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8bfb;&#x53d6;&#x53d8;&#x91cf;&#xff0c;&#x90a3;&#x4e48;&#x662f;&#x5e76;&#x53d1;&#x5b89;&#x5168;&#x7684;&#xff0c;&#x8fd9;&#x4e2a;&#x65f6;&#x5019;&#x4f7f;&#x7528",{"_index":4795,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8c03;&#x5ea6;&#x4f1a;&#x6d88;&#x8017;&#x4e00;&#x5927;&#x5806;&#x8d44;&#x6e90;&#xff0c;&#x56e0;&#x6b64;&#x5f15;&#x5165;&#x4e86;&#x7ebf;&#x7a0b;&#x7684;&#x6982;&#x5ff5;&#xff0c;&#x7ebf;&#x7a0b;&#x672c;&#x8eab;&#x51e0;&#x4e4e;&#x4e0d;&#x5360;&#x6709;&#x8d44;&#x6e90;&#xff0c;&#x4ed6;&#x4eec;&#x5171;&#x4eab;&#x8fdb;&#x7a0b;&#x91cc;&#x7684;&#x8d44;&#x6e90;&#xff0c;&#x5185;&#x6838;&#x8c03;&#x5ea6;&#x8d77;&#x6765;&#x4e0d",{"_index":4238,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x8c03;&#x5ea6;&#x5668",{"_index":4280,"title":{"concurrent/goroutine.html#Goroutine-调度器":{}},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8c03;&#x5ea6;&#x5668;&#x7684;&#x4e3b;&#x8981;&#x6709",{"_index":4281,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8c03;&#x5ea6;&#x7684;&#x5207;&#x6362;&#x4e5f;&#x4e0d;&#x7528;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x5185;&#x6838;&#x5c42;&#x5b8c;&#x6210;&#xff0c;&#x4ee3;&#x4ef7;&#x5f88;&#x4f4",{"_index":4487,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8c03;&#x5ea6;&#x7684;&#x57fa;&#x7840;&#x3002",{"_index":4547,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8c03;&#x5ea6;&#xff0c;&#x53c8;&#x56e0;&#x4e3a;&#x8c03;&#x5ea6;&#x5668;&#x5f88;&#x53ef;&#x80fd;&#x4f1a;&#x5728",{"_index":4365,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8c03;&#x7528",{"_index":2523,"title":{},"body":{"basic/function.html#可变参数":{},"concurrent/channel.html#channel":{},"commands/build.html#工具":{},"basic/test.html#性能分析":{}}}],["x8c03;&#x7528;&#x3001;&#x6ca1;&#x6709;&#x8fdb;&#x884c",{"_index":4551,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8c03;&#x7528;&#x4e0a;&#x8ff0;&#x65b9;&#x6cd5;&#x628a;&#x65b0;&#x7684;&#x5185;&#x5bb9;&#x62fc;&#x63a5;&#x5230;&#x5df2;&#x5b58;&#x5728;&#x7684;&#x5185;&#x5bb9;&#x7684;&#x5c3e;&#x90e8;&#xff08;&#x4e5f;&#x5c31;&#x662f;&#x53f3;&#x8fb9;&#xff09;&#x3002;&#x8fd9;&#x65f6;&#xff0c;&#x5982;&#x6709;&#x5fc5;&#x8981;&#xff0c",{"_index":3896,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8c03;&#x7528;&#x540e;&#xff0c;g",{"_index":4638,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8c03;&#x7528;&#x6307;&#x9488;&#x7c7b;&#x578b;&#x65b9;&#x6cd5",{"_index":1128,"title":{},"body":{"basic/oop.html#方法":{}}}],["x8c03;&#x7528;&#x65b9;&#x4e0d;&#x80fd;&#x76f4;&#x63a5;&#x4fee;&#x6539;&#x5bf9;&#x8c61;&#x7684;&#x53d8;&#x91cf;&#x503c",{"_index":1186,"title":{},"body":{"basic/oop.html#封装":{}}}],["x8c03;&#x7528;&#x65f6;&#x4f1a;&#x4ea7;&#x751f;&#x4e00;&#x6b21;&#x62f7;&#x8d1d;&#x3002",{"_index":1145,"title":{},"body":{"basic/oop.html#方法":{}}}],["x8d1f;&#x8d23;&#x5bf9",{"_index":4457,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d44;&#x6e90;&#x3002",{"_index":420,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["x8d44;&#x6e90;&#x4e0a;&#x8fd0;&#x884c",{"_index":4507,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d44;&#x6e90;&#x5c31;&#x662f;&#x64cd;&#x4f5c;&#x7cfb;&#x7edf;&#x7ebf;&#x7a0b",{"_index":4518,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d44;&#x6e90;&#x662f;&#x4ec0;&#x4e48;&#x5462;&#xff1f",{"_index":4515,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d44;&#x6e90;&#x662f;&#x771f;&#x5b9e;&#x7684;&#x7269;&#x7406",{"_index":4511,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d44;&#x6e90;&#x7684;&#x90a3;&#x4e9b;&#x7ebf;&#x7a0b;&#x7684;&#x3002",{"_index":4858,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8d44;&#x6e90;&#x90fd;&#x4f1a;&#x88ab;&#x91ca;&#x653e;&#x3002",{"_index":2556,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8d44;&#x6e90;&#xff0c;&#x540c;&#x65f6;&#x8fdb;&#x884c;&#xff0c;&#x79f0;&#x4e3a",{"_index":4227,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x8d44;&#x6e90;&#xff0c;&#x8fd9;&#x4e2a;&#x4efb;&#x52a1;&#x5c31;&#x843d;&#x5230;&#x4e86",{"_index":4500,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8d4b;&#x503c",{"_index":1838,"title":{"basic/var.html#赋值":{}},"body":{}}],["x8d4b;&#x503c;&#x8fd0;&#x7b97;&#x7b26",{"_index":1902,"title":{"basic/operator.html#赋值运算符":{}},"body":{}}],["x8d77;&#x521d;&#x6240;&#x6709;&#x5bf9;&#x8c61;&#x90fd;&#x662f;&#x767d;&#x8272;&#x3002",{"_index":852,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x8d85;&#x65f6",{"_index":2770,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8def;&#x5f84;&#x662f;&#x7528;&#x6765;&#x6307;&#x5b9a;&#x5f53;&#x524d;&#x5de5;&#x4f5c;&#x76ee;&#x5f55;&#x7684;&#x3002",{"_index":2327,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["x8df3;&#x51fa;&#x5faa;&#x73af;&#x3002",{"_index":2668,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8df3;&#x8fc7;&#x8fed;&#x4ee3",{"_index":599,"title":{},"body":{"basic/flow.html#for":{}}}],["x8f6c;&#x5316;&#x4e3a",{"_index":309,"title":{},"body":{"index.html#类型断言":{}}}],["x8f6c;&#x6362;&#x4e3a",{"_index":251,"title":{},"body":{"index.html#类型转换":{}}}],["x8f6c;&#x6362;&#x4e3a;&#x5b57;&#x8282;&#x6d41;&#x3002;&#x800c;&#x5728",{"_index":3387,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8f6c;&#x6362;&#x683c;&#x5f0f;&#x3002",{"_index":351,"title":{},"body":{"index.html#编码":{}}}],["x8f91;&#x5220;&#x9664;&#x7684;&#x952e;&#x503c;&#x5bf9;&#x6c38;&#x8fdc;&#x4f1a;&#x88ab;&#x65e0;&#x89c6;&#x3002",{"_index":5357,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8f93;&#x5165",{"_index":2315,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x8f93;&#x51fa",{"_index":2565,"title":{},"body":{"basic/function.html#关键字-defer":{},"basic/basic_data.html#字符串":{}}}],["x8f93;&#x51fa;&#xff1a",{"_index":1451,"title":{},"body":{"basic/json.html#序列化":{}}}],["x8fc1;&#x79fb;&#x5230",{"_index":2373,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x8fc7;&#x4efb;&#x4f55;&#x7684;&#x7f13;&#x5b58;&#x6570;&#x636e;&#xff0c;&#x800c;&#x771f;&#x6b63;&#x5730;&#x6267;&#x884c;&#x64cd;&#x4f5c;&#x5e76;&#x91cd;&#x65b0;&#x751f;&#x6210;&#x6240;&#x6709;&#x7ed3;&#x679c;&#xff0c;&#x7136;&#x540e;&#x518d;&#x53bb;&#x68c0;&#x67e5;&#x65b0;&#x7684;&#x7ed3;&#x679c;&#x4e0e;&#x73b0;&#x6709;&#x7684;&#x7f13;&#x5b58;&#x6570;&#x636e;&#x662f;&#x5426;&#x4e00;&#x81f4;&#x3002",{"_index":3251,"title":{},"body":{"basic/test.html#功能测试的测试结果":{}}}],["x8fc7;&#x7a0b;&#x4e2d;&#x9700;&#x8981;&#x6ce8;&#x610f;&#x7684;&#x51e0;&#x70b9;&#xff1a",{"_index":1951,"title":{},"body":{"basic/map.html#map":{}}}],["x8fd0;&#x7b97;&#x7b26",{"_index":1867,"title":{"basic/operator.html#运算符":{}},"body":{}}],["x8fd0;&#x7b97;&#x7b26;&#x8fdb;&#x884c;&#x6bd4;&#x8f83;&#x3002",{"_index":1762,"title":{},"body":{"basic/struct.html#结构体比较":{}}}],["x8fd0;&#x7b97;&#x7b26;&#xff09;&#x3002",{"_index":1888,"title":{},"body":{"basic/operator.html#逻辑运算符":{}}}],["x8fd0;&#x7b97;&#x7b26;&#xff0c;&#x4e00;&#x4e2a;&#x5de6;&#x5c16;&#x62ec;&#x53f7;&#x7d27;&#x63a5;&#x7740;&#x4e00;&#x4e2a;&#x51cf;&#x53f7;&#x5f62;&#x8c61;&#x5730;&#x4ee3;&#x8868;&#x4e86;&#x5143;&#x7d20;&#x503c;&#x7684;&#x4f20;&#x8f93;&#x65b9;&#x5411;&#xff1a",{"_index":2645,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8fd0;&#x884c",{"_index":2559,"title":{},"body":{"basic/function.html#关键字-defer":{},"commands/build.html#工具":{},"basic/test.html#覆盖率":{},"basic/test.html#功能测试的测试结果":{}}}],["x8fd0;&#x884c;&#x4e00;&#x6b21;&#xff0c",{"_index":4588,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd0;&#x884c;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5",{"_index":3205,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x8fd0;&#x884c;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x9700;&#x8981;&#x4f7f;&#x7528",{"_index":3206,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x8fd0;&#x884c;&#x5b8c;&#x6bd5;&#x4e4b;&#x540e;&#xff0c;&#x518d;&#x8ba9;&#x4e3b",{"_index":4380,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8fd0;&#x884c;&#x5b8c;&#x6bd5;&#xff0c",{"_index":4389,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8fd0;&#x884c;&#x65f6;&#x9519;&#x8bef;&#x4f1a;&#x5f15;&#x8d77",{"_index":940,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8fd0;&#x884c;&#x65f6;&#x95f4;&#x8fc7;&#x957f;&#xff0c;&#x5b83;&#x5c31;&#x4f1a;&#x88ab;&#x5265;&#x593a;&#x8fd0;&#x884c;&#x6743;&#x3002;go",{"_index":4571,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd0;&#x884c;&#xff0c;&#x5982",{"_index":3168,"title":{},"body":{"basic/test.html#测试":{}}}],["x8fd0;&#x884c;&#xff0c;&#x90a3;&#x4e48",{"_index":4611,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":2492,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x51fd;&#x6570",{"_index":2540,"title":{},"body":{"basic/function.html#闭包":{}}}],["x8fd4;&#x56de;&#x503c;&#x5217;&#x8868",{"_index":2487,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x8fd4;&#x56de;&#x521d;&#x59cb;&#x5316;&#x540e;&#x7684;&#xff08;&#x975e;&#x96f6;&#xff09;&#x503c;&#xff0c",{"_index":235,"title":{},"body":{"index.html#make-和-new":{}}}],["x8fd4;&#x56de;&#x591a;&#x4e2a;&#x7c7b;&#x578b;&#x7684;&#x503c",{"_index":2495,"title":{},"body":{"basic/function.html#声明函数":{}}}],["x8fd4;&#x56de;&#x6307;&#x9488",{"_index":236,"title":{},"body":{"index.html#make-和-new":{}}}],["x8fd4;&#x56de;&#x7684;&#x672c;&#x8eab;&#x662f;&#x4e2a;&#x5f15;&#x7528;&#xff0c;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x7528;&#x6765;&#x64cd;&#x4f5c",{"_index":1368,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x8fd4;&#x56de;&#x7c7b;&#x578b",{"_index":725,"title":{},"body":{"basic/interface.html#接口":{},"basic/oop.html#方法":{}}}],["x8fd4;&#x56de;&#x7ed9;&#x8c03;&#x7528;&#x8005;&#x3002",{"_index":1022,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["x8fd8;&#x53ea;&#x662f;&#x5f15;&#x5165;&#x4e86;&#x4e00;&#x4e9b;&#x5f88;&#x521d;&#x7ea7",{"_index":4572,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd8;&#x53ef;&#x4ee5;&#x4f7f;&#x7528;&#x7c7b;&#x4f3c",{"_index":2524,"title":{},"body":{"basic/function.html#可变参数":{}}}],["x8fd8;&#x53ef;&#x80fd;&#x662f",{"_index":4808,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8fd8;&#x5e26;&#x4e86;&#x4e00;&#x4e2a;&#x989d;&#x5916;&#x7684",{"_index":1476,"title":{},"body":{"basic/json.html#序列化":{}}}],["x8fd8;&#x6709;&#x4e00;&#x4e2a",{"_index":3963,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fd8;&#x672a;&#x6267;&#x884c;&#xff0c",{"_index":5061,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x8fd8;&#x8bb0;&#x5f97;&#x5417;&#xff1f;&#x6211;&#x4eec;&#x53ef;&#x80fd;&#x4f1a;&#x56e0;&#x4e3a;&#x901a;&#x9053;&#x5173;&#x95ed;&#x4e86;&#xff0c;&#x800c;&#x76f4;&#x63a5;&#x4ece;&#x901a;&#x9053;&#x63a5;&#x6536;&#x5230;&#x4e00;&#x4e2a;&#x5176;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x7684;&#x96f6;&#x503c;&#x3002;&#x6240;&#x4ee5;&#xff0c;&#x5728;&#x5f88;&#x591a;&#x65f6;&#x5019;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x901a;&#x8fc7;&#x63a5;&#x6536;&#x8868;&#x8fbe;&#x5f0f",{"_index":2783,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8fd9",{"_index":4877,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8fd9;&#x4e09;&#x4e2a;&#x63a5;&#x53e3;&#x7684;&#x7ec4;&#x5408;&#x3002",{"_index":3494,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x8fd9;&#x4e0d;&#x4f46;&#x4f1a;&#x8ba9;&#x4f60;&#x7684;&#x7a0b;&#x5e8f;&#x53d8;&#x6162;&#xff0c;&#x8fd8;&#x4f1a;&#x5927;&#x5927;&#x589e;&#x52a0;&#x6b7b;&#x9501;&#xff08",{"_index":4836,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8fd9;&#x4e24;&#x4e2a;&#x3002;&#x5b83;&#x4eec;&#x53ef;&#x4ee5;&#x89e3;&#x6790;&#x6982;&#x8981;&#x6587;&#x4ef6;&#x4e2d;&#x7684;&#x4fe1;&#x606f;&#xff0c;&#x5e76;&#x4ee5;&#x4eba;&#x7c7b;&#x6613;&#x8bfb;&#x7684;&#x65b9;&#x5f0f;&#x628a;&#x8fd9;&#x4e9b",{"_index":3315,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8fd9;&#x4e24;&#x4e2a;&#x5b57;&#x5178;&#x5728;&#x5b58;&#x50a8;&#x952e;&#x548c;&#x503c;&#x7684;&#x65f6;&#x5019;&#x90fd;&#x53ea;&#x4f1a;&#x5b58;&#x5165;&#x5b83;&#x4eec;&#x7684;&#x67d0;&#x4e2a;&#x6307;&#x9488;&#xff0c;&#x800c;&#x4e0d;&#x662f;&#x57fa;&#x672c;&#x503c;&#x3002",{"_index":5346,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8fd9;&#x4e24;&#x4e2a;&#x6807;&#x8bb0;&#x7684;&#x503c;&#x90fd;&#x662f;&#x6b63;&#x5219;&#x8868;&#x8fbe;&#x5f0f;&#x3002;&#x5b9e;&#x9645;&#x4e0a;&#xff0c;&#x5b83;&#x4eec;&#x53ea;&#x80fd;&#x4ee5;&#x6b63;&#x5219;&#x8868;&#x8fbe;&#x5f0f;&#x4e3a;&#x503c;&#x3002;&#x6b64;&#x5916;&#xff0c;&#x5982;&#x679c;&#x8fd0;&#x884c",{"_index":3261,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x8fd9;&#x4e2a;&#x4ee3;&#x7801;&#x5305;&#x4e2d;&#x6709;&#x4e24;&#x4e2a;&#x516c;&#x5f00;&#x7684;&#x7a0b;&#x5e8f;&#x5b9e;&#x4f53;&#x2014;&#x2014",{"_index":2406,"title":{},"body":{"packages/container.html#container-包":{}}}],["x8fd9;&#x4e2a;&#x4f4d;&#x7f6e;&#x4e0a;&#x7684;&#x53c2;&#x6570;&#x5bf9;&#x5e94;&#x7684;&#x90fd;&#x662f;&#x5b83;&#x4eec;&#x5c06;&#x4f1a;&#x4ea7;&#x751f",{"_index":5195,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8fd9;&#x4e2a;&#x5185;&#x5d4c;&#x7c7b;&#x578b;&#xff0c;&#x6211;&#x4eec;&#x4e5f;&#x5fc5;&#x987b;&#x8981;&#x663e;&#x5f0f;&#x4f20;&#x5165",{"_index":1169,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x5176;&#x5b9e;&#x662f",{"_index":4108,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x662f",{"_index":5265,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8fd9;&#x4e2a;&#x53c2;&#x6570;&#x7684;&#x542b;&#x4e49;&#x662f;&#xff0c;&#x53ea;&#x8981;&#x53d1;&#x73b0;&#x4e00;&#x4e2a;&#x963b;&#x585e;&#x4e8b;&#x4ef6;&#x7684;&#x6301;&#x7eed;&#x65f6;&#x95f4;&#x8fbe;&#x5230;&#x4e86;&#x591a;&#x5c11;&#x4e2a;&#x7eb3;&#x79d2;&#xff0c;&#x5c31;&#x53ef;&#x4ee5;&#x5bf9;&#x5176;&#x8fdb;&#x884c;&#x91c7;&#x6837;&#x3002;&#x5982;&#x679c;&#x8fd9;&#x4e2a;&#x53c2;&#x6570;&#x7684;&#x503c;&#x5c0f;&#x4e8e;&#x6216;&#x7b49;&#x4e8e;0&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x610f",{"_index":3365,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8fd9;&#x4e2a;&#x53d8;&#x91cf;&#x7684;&#x542b;&#x4e49;&#x662f;&#xff0c;&#x5e73;&#x5747;&#x6bcf;&#x5206;&#x914d;&#x591a;&#x5c11;&#x4e2a;&#x5b57;&#x8282;&#xff0c;&#x5c31;&#x5bf9;&#x5806;&#x5185;&#x5b58;&#x7684;&#x4f7f;&#x7528;&#x60c5;&#x51b5;&#x8fdb;&#x884c;&#x4e00;&#x6b21;&#x91c7;&#x6837;&#x3002;&#x5982;&#x679c;&#x628a;&#x8be5;&#x53d8;&#x91cf;&#x7684;&#x503c;&#x8bbe;&#x4e3a;0&#xff0c;&#x90a3;&#x4e48;&#xff0c;go",{"_index":3343,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8fd9;&#x4e2a;&#x5e38;&#x91cf;&#x7684;&#x503c;&#x662f",{"_index":4170,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x8fd9;&#x4e2a;&#x5e8f;&#x53f7;&#x5176;&#x5b9e;&#x5c31;&#x662f;&#x542f;&#x7528",{"_index":4442,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x8fd9;&#x4e2a;&#x6307;&#x9488;&#x4fdd;&#x5b58;&#x4e86;&#x53d8;&#x91cf",{"_index":1293,"title":{},"body":{"basic/pointer.html#指针":{}}}],["x8fd9;&#x4e2a;&#x6587;&#x4ef6;&#x63cf;&#x8ff0;&#x7b26;&#x5c06;&#x4f1a;&#x88ab;&#x50a8;&#x5b58;&#x5728;&#x5b83;&#x4eec;&#x8fd4;&#x56de;&#x7684;file&#x503c;&#x4e2d;&#x3002",{"_index":4133,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x8fd9;&#x4e2a;&#x65f6;&#x5019;&#x4f53;&#x73b0;&#x51fa;&#x4e86;&#x63a5;&#x53e3;&#x7684;&#x4f5c;&#x7528;&#xff0c",{"_index":780,"title":{},"body":{"basic/interface.html#接口":{}}}],["x8fd9;&#x4e2a;&#x65f6;&#x5019;&#xff0c;&#x8fd9;&#x4e9b;&#x5305;&#x542b;&#x4e86",{"_index":3301,"title":{},"body":{"basic/test.html#parallel-标记":{}}}],["x8fd9;&#x4e2a;&#x70b9;&#x64cd;&#x4f5c;&#x7684;&#x542b;&#x4e49;&#x5c31;&#x662f;&#x8fd9;&#x4e2a;&#x5305;&#x5bfc;&#x5165;&#x4e4b;&#x540e;&#x5728;&#x4f60;&#x8c03;&#x7528;&#x8fd9;&#x4e2a;&#x5305;&#x7684;&#x51fd;&#x6570;&#x65f6;&#xff0c;&#x4f60;&#x53ef;&#x4ee5;&#x7701;&#x7565;&#x524d;&#x7f00;&#x7684;&#x5305;&#x540d;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x524d;&#x9762;&#x4f60;&#x8c03;&#x7528;&#x7684",{"_index":1590,"title":{},"body":{"basic/package.html#点操作":{}}}],["x8fd9;&#x4e2a;&#x7c7b;&#x578b;&#x7684",{"_index":5259,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x8fd9;&#x4e2a;&#x9501;&#x3002",{"_index":4790,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8fd9;&#x4e2a;&#x961f;&#x5217;&#x4e0e;&#x8be5",{"_index":2578,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["x8fd9;&#x4e5f;&#x662f",{"_index":362,"title":{},"body":{"index.html#编码":{}}}],["x8fd9;&#x4e9b;&#x51fd;&#x6570;&#x7684;&#x7b2c;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x90fd;&#x662f",{"_index":5192,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8fd9;&#x4e9b;&#x51fd;&#x6570;&#x9488;&#x5bf9;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x5e76;&#x4e0d;&#x591a;&#x3002;&#x5bf9;&#x8fd9;&#x4e9b;&#x7c7b;&#x578b;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x4e2a;&#xff0c",{"_index":4966,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["x8fd9;&#x4e9b;&#x53d8;&#x91cf;&#x7684;&#x5177;&#x4f53;&#x7c7b;&#x578b;&#x3002;&#x5f25;&#x8865;&#x4e86;&#x9759;&#x6001;&#x8bed;&#x8a00;&#x5728;&#x52a8;&#x6001;&#x884c;&#x4e3a;&#x4e0a;&#x7684;&#x4e00;&#x4e9b;&#x4e0d;&#x8db3;&#x3002",{"_index":2168,"title":{},"body":{"basic/reflect.html#反射":{}}}],["x8fd9;&#x4e9b;&#x5b57;&#x6bb5;&#x7528;&#x4e8e;&#x8bb0;&#x5f55;&#xff1a;&#x5f53;&#x524d;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x5728;&#x5f53;&#x6b21;&#x6267;&#x884c;&#x8fc7;&#x7a0b;&#x4e2d;&#x8017;&#x8d39;&#x7684;&#x65f6;&#x95f4;&#x3001;&#x5206;&#x914d;&#x7684;&#x5806;&#x5185;&#x5b58;&#x7684;&#x5b57;&#x8282;&#x6570;&#x4ee5;&#x53ca;&#x5206;&#x914d;&#x6b21;&#x6570;&#x3002",{"_index":3309,"title":{},"body":{"basic/test.html#性能测试函数中的计时器":{}}}],["x8fd9;&#x4e9b;&#x6a21;&#x5f0f;&#x5206;&#x522b;&#x7531;&#x5e38;&#x91cf",{"_index":4141,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x8fd9;&#x4e9b;&#x7c7b;&#x578b;&#x5b9e;&#x73b0;&#x4e86;&#x8fd9;&#x4e48;&#x591a;&#x7684;&#x63a5;&#x53e3;&#xff0c;&#x76ee;&#x7684;&#x662f;&#x4ec0;&#x4e48;&#xff1f",{"_index":3469,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x8fd9;&#x4e9b;&#x952e;&#x503c;&#x7684;&#x5b9e;&#x9645;&#x7c7b;&#x578b;&#x53ea;&#x6709;&#x5728;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x671f;&#x95f4;&#x624d;&#x80fd;&#x591f;&#x786e;&#x5b9a;&#xff0c;&#x6240;&#x4ee5",{"_index":5309,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8fd9;&#x53eb;&#x505a",{"_index":1947,"title":{},"body":{"basic/map.html#map":{}}}],["x8fd9;&#x53ef;&#x4ee5;&#x7528;&#x4e8e;&#x8861;&#x91cf;&#x54ea;&#x4e9b;&#x662f;&#x88ab;&#x9891;&#x7e41;&#x6267;&#x884c;&#x7684;&#x70ed;&#x70b9;&#x4ee3;&#x7801;&#x3002",{"_index":3199,"title":{},"body":{"basic/test.html#覆盖率":{}}}],["x8fd9;&#x5728;&#x6548;&#x679c;&#x4e0a;&#x4e0e;&#x4e92;&#x65a5;&#x9501;&#x6709;&#x4e9b;&#x7c7b;&#x4f3c;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x5b83;&#x4eec;&#x7684;&#x9002;&#x7528;&#x573a;&#x666f;&#x662f;&#x4e0d;&#x540c;&#x7684;&#x3002;&#x6211;&#x4eec;&#x5728;&#x4f7f;&#x7528;&#x4e92;&#x65a5;&#x9501;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x603b;&#x662f;&#x5047;&#x8bbe;&#x5171;&#x4eab;&#x8d44;&#x6e90;&#x7684;&#x72b6;&#x6001;&#x4f1a;&#x88ab;&#x5176;&#x4ed6",{"_index":4996,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x8fd9;&#x5957;&#x673a;&#x5236;&#xff0c;&#x5373;&#x4fbf;&#x6709",{"_index":4469,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd9;&#x65f6;&#x5019;&#xff0c;&#x88ab;&#x5d4c;&#x5165;&#x7c7b;&#x578b;&#x4e5f;&#x5c31;&#x81ea;&#x7136;&#x800c;&#x7136;&#x5730;&#x5b9e;&#x73b0;&#x4e86;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x6240;&#x5b9e;&#x73b0;&#x7684;&#x63a5;&#x53e3;&#x3002;&#x518d;&#x8005;&#xff0c;&#x7ec4;&#x5408;&#x8981;&#x6bd4;&#x7ee7;&#x627f;&#x66f4;&#x52a0;&#x7b80;&#x6d01;&#x548c;&#x6e05;&#x6670;&#xff0c;go",{"_index":1179,"title":{},"body":{"basic/oop.html#嵌入结构体扩展类型":{}}}],["x8fd9;&#x662f;&#x4f5c;&#x4e3a",{"_index":2627,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x8fd9;&#x6837;&#x5c31;&#x53ef;&#x4ee5;&#x5728;&#x4efb;&#x610f;&#x76ee;&#x5f55;&#x6267;&#x884c;&#x7f16;&#x8bd1;&#x597d;&#x7684;&#x547d;&#x4ee4;&#x3002",{"_index":2969,"title":{},"body":{"commands/build.html#工具":{}}}],["x8fd9;&#x6837;&#x5c31;&#x53ef;&#x4ee5;&#x901a;&#x8fc7;&#x7b80;&#x5355;&#x7684;&#x70b9;&#x8fd0;&#x7b97;&#x7b26",{"_index":1766,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x8fd9;&#x6837;&#x7684",{"_index":611,"title":{},"body":{"basic/flow.html#for":{}}}],["x8fd9;&#x6837;&#x7684;&#x590d;&#x7528;&#x9884;&#x8ba1;&#x53ef;&#x4ee5;&#x81f3;&#x5c11;&#x8282;&#x7701;&#x6389;&#x4e00;&#x6b21;&#x540e;&#x7eed;&#x7684;&#x6269;&#x5bb9;&#x6240;&#x5e26;&#x6765;&#x7684;&#x5185;&#x5b58;&#x5206;&#x914d;&#xff0c;&#x4ee5;&#x53ca;&#x82e5;&#x5e72;&#x5b57;&#x8282;&#x7684;&#x62f7;&#x8d1d;&#x3002",{"_index":3983,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fd9;&#x6837;&#x7684;&#x7b2c;&#x4e09;&#x65b9;&#x5e93;&#x5e2e;&#x5fd9;&#xff0c;&#x5199;&#x8d77;&#x8fd9;&#x6837;&#x7684;&#x7a0b;&#x5e8f;&#x4e5f;&#x662f;&#x5f88;&#x4e0d;&#x6613;&#x7684",{"_index":4470,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4f1a;&#x5728;&#x91cd;&#x5efa;&#x810f;&#x5b57;&#x5178;&#x4ee5;&#x540e;&#x7684;&#x4e00;&#x6bb5;&#x65f6;&#x95f4;&#x5185;&#x51fa;&#x73b0;&#x3002;&#x4e0d;&#x8fc7;&#xff0c;&#x8fc7;&#x4e0d;&#x4e86;&#x591a;&#x4e45;&#xff0c;&#x5b83;&#x4eec;&#x5c31;&#x4f1a;&#x88ab;&#x771f;&#x6b63;&#x5220;&#x9664;&#x6389;&#x3002;&#x5728;&#x67e5;&#x627e;&#x548c;&#x904d;&#x5386;&#x952e;&#x503c;&#x5bf9;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5df2;&#x88ab;&#x903b",{"_index":5356,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x662f;&#x5f88;&#x6709;&#x53ef;&#x80fd;&#x53d1;&#x751f;&#x7684;&#x3002",{"_index":4947,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x8fd9;&#x79cd;&#x65b9;&#x5f0f;&#x6539;&#x53d8;&#x5b57;&#x7b26;&#x4e32",{"_index":3814,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fd9;&#x79cd;&#x673a;&#x5236;&#xff0c",{"_index":483,"title":{},"body":{"basic/array.html#数组传入函数":{}}}],["x8fd9;&#x79cd;&#x7c7b;&#x578b;&#x8f6c;&#x6362;&#x4e3b;&#x8981;&#x5728",{"_index":255,"title":{},"body":{"index.html#类型转换":{}}}],["x8fd9;&#x79cd;&#x7ed3;&#x679c;&#xff0c;&#x5728;&#x4e00;&#x4e2a",{"_index":4810,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x8fd9;&#x91cc",{"_index":1566,"title":{},"body":{"basic/package.html#包":{}}}],["x8fd9;&#x91cc;&#x4f1a;&#x5f15;&#x53d1",{"_index":1985,"title":{},"body":{"basic/map.html#map":{}}}],["x8fd9;&#x91cc;&#x5206;&#x53d1;&#x5b50;&#x4efb;&#x52a1;&#x7684",{"_index":5162,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8fd9;&#x91cc;&#x7684",{"_index":1120,"title":{},"body":{"basic/oop.html#方法":{}}}],["x8fd9;&#x91cc;&#x7684;&#x6700;&#x5916;&#x5c42;&#x51fd;&#x6570;&#x6307;&#x7684;&#x662f;go&#x51fd;&#x6570;&#xff0c;&#x5bf9;&#x4e8e;&#x4e3b",{"_index":987,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x8fd9;&#x91cc;&#x7684;&#x81ea;&#x52a8;&#x6269;&#x5bb9;&#x7b56;&#x7565;&#x4e0e;&#x5207;&#x7247;&#x7684;&#x6269;&#x5bb9;&#x7b56;&#x7565;&#x4e00;&#x81f4;&#x3002",{"_index":3898,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fd9;&#x9700;&#x8981;&#x4ece",{"_index":5209,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x8fd9;&#x9700;&#x8981;&#x7528;&#x5230",{"_index":3334,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x8fdb;&#x7a0b",{"_index":4230,"title":{},"body":{"concurrent/goroutine.html#并发和并行":{}}}],["x8fdb;&#x884c",{"_index":1853,"title":{},"body":{"basic/var.html#赋值":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fdb;&#x884c;&#x201c;&#x8c03;&#x5ea6;&#x201d;&#x3002;&#x8c03;&#x5ea6;&#x672c;&#x8d28;&#x4e0a;&#x5c31;&#x662f;&#x51b3;&#x5b9a;&#x4f55;&#x65f6;&#x54ea;&#x4e2a",{"_index":4458,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x8fdb;&#x884c;&#x5b57;&#x7b26;&#x4e32;&#x62fc;&#x63a5;&#x7684;&#x65f6;&#x5019;&#xff0c;go",{"_index":3869,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fdb;&#x884c;&#x5b57;&#x7b26;&#x4e32;&#x6bd4;&#x8f83;&#x3002",{"_index":3839,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x8fdb;&#x884c;&#x6309;&#x4f4d;&#x6216;&#x64cd;&#x4f5c;&#x5f97;&#x5230;&#x7684;&#x7ed3;&#x679c;&#x662f",{"_index":581,"title":{},"body":{"basic/flow.html#for":{}}}],["x8fdb;&#x884c;&#x63cf;&#x8ff0;&#x3002;&#x56e0;&#x6b64;&#xff0c;&#x4fee;&#x6539",{"_index":1362,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x8fdb;&#x884c;&#x6bd4;&#x8f83;&#x3002",{"_index":1885,"title":{},"body":{"basic/operator.html#关系运算符":{}}}],["x8ffd;&#x52a0;&#x5230;&#x67d0;&#x4e2a;&#x5b58;&#x653e;&#x53ef;&#x8fd0;&#x884c;&#x7684",{"_index":4332,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x9000;&#x51fa;&#x5d4c;&#x5957;&#x5faa;&#x73af;&#xff1a",{"_index":2798,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9002;&#x65f6;&#x5730;&#x4e0e",{"_index":4293,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x9009;&#x62e9;&#x7528;&#x7b80;&#x77ed;&#x540d;&#x79f0;&#x91cd;&#x547d;&#x540d;&#x5bfc;&#x5165;&#x5305;&#x65f6;&#x5019;&#x6700;&#x597d;&#x7edf;&#x4e00;&#xff0c;&#x4ee5;&#x907f;&#x514d;&#x5305;&#x540d;&#x6df7;&#x4e71;&#x3002",{"_index":1600,"title":{},"body":{"basic/package.html#点操作":{}}}],["x9009;&#x9879;&#xff0c;&#x8868;&#x793a;&#x5f53",{"_index":1477,"title":{},"body":{"basic/json.html#序列化":{}}}],["x901a;&#x5e38;&#x4e00;&#x884c;&#x5bf9;&#x5e94;&#x4e00;&#x4e2a;&#x7ed3;&#x6784;&#x4f53;&#x6210;&#x5458;&#xff0c;&#x6210;&#x5458;&#x7684;&#x540d;&#x5b57;&#x5728;&#x524d;&#x7c7b;&#x578b;&#x5728;&#x540e;&#xff0c;&#x4e0d;&#x8fc7;&#x5982;&#x679c;&#x76f8;&#x90bb;&#x7684;&#x6210;&#x5458;&#x7c7b;&#x578b;&#x5982;&#x679c;&#x76f8;&#x540c;&#x7684;&#x8bdd;&#x53ef;&#x4ee5;&#x88ab;&#x5408;&#x5e76;&#x5230;&#x4e00;&#x884c",{"_index":1752,"title":{},"body":{"basic/struct.html#结构体":{}}}],["x901a;&#x5e38;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x53ea;&#x8981;&#x7f13;&#x51b2;&#x533a;&#x4e2d;&#x7684;&#x53ef;&#x5199;&#x7a7a;&#x95f4;&#x65e0;&#x6cd5;&#x5bb9;&#x7eb3;&#x9700;&#x8981;&#x5199;&#x5165;&#x7684;&#x65b0;&#x6570;&#x636e;&#xff0c",{"_index":3566,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["x901a;&#x5e38;&#x88ab;&#x547d;&#x540d;&#x4e3a",{"_index":2545,"title":{},"body":{"basic/function.html#错误":{}}}],["x901a;&#x8baf",{"_index":174,"title":{},"body":{"index.html#Golang-介绍":{}}}],["x901a;&#x8fc7",{"_index":2634,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x901a;&#x8fc7;&#x5207;&#x7247;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x8bbf;&#x95ee;&#x548c;&#x64cd;&#x7eb5;&#x5b83;&#x7684;&#x5e95;&#x5c42;&#x6570;&#x7ec4;&#x3002;&#x4e0d;&#x8bba;&#x8fd9;&#x4e2a;&#x5207;&#x7247;&#x662f;&#x57fa;&#x4e8e;&#x67d0;&#x4e2a;&#x6570;&#x7ec4;&#x5f97;&#x6765;&#x7684;&#xff0c;&#x8fd8;&#x662f;&#x901a;&#x8fc7;&#x5bf9;&#x53e6;&#x4e00;&#x4e2a;&#x5207;&#x7247;&#x505a;&#x5207;&#x7247;&#x64cd;&#x4f5c",{"_index":3996,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x901a;&#x8fc7;&#x5728",{"_index":2788,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x901a;&#x8fc7;&#x5b9a;&#x4e49;&#x5408;&#x9002;&#x7684;go&#x8bed;&#x8a00;&#x6570;&#x636e;&#x7ed3;&#x6784;&#xff0c;&#x6211;&#x4eec;&#x53ef;&#x4ee5;&#x9009;&#x62e9;&#x6027;&#x5730;&#x89e3;&#x7801;json&#x4e2d;&#x611f;&#x5174;&#x8da3;&#x7684;&#x6210;&#x5458;&#x3002",{"_index":1486,"title":{},"body":{"basic/json.html#序列化":{}}}],["x901a;&#x8fc7;&#x6307;&#x9488;&#x95f4;&#x63a5;&#x8d4b;&#x503c",{"_index":1841,"title":{},"body":{"basic/var.html#赋值":{}}}],["x901a;&#x8fc7;&#x7d22;&#x5f15;&#x4e0b;&#x6807",{"_index":1943,"title":{},"body":{"basic/map.html#map":{}}}],["x901a;&#x8fc7;&#x8c03;&#x7528",{"_index":1638,"title":{},"body":{"basic/package.html#初始化包":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["x901a;&#x9053;&#x662f;&#x5426;&#x5df2;&#x5173;&#x95ed;&#x505a;&#x4e86;&#x5224;&#x65ad;&#xff0c;&#x5e76;&#x5728",{"_index":2801,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x901a;&#x9053;&#x7684;&#x53d1;&#x9001;&#x548c;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x7684;&#x7279;&#x6027",{"_index":2719,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x901a;&#x9053;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x662f",{"_index":2629,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x903b;&#x8f91;&#x8fd0;&#x7b97;&#x7b26",{"_index":1886,"title":{"basic/operator.html#逻辑运算符":{}},"body":{}}],["x904d;&#x5386",{"_index":1972,"title":{},"body":{"basic/map.html#map":{}}}],["x9053;&#x5173;&#x95ed;&#x662f;&#x4e0d;&#x4f1a;&#x7ed3;&#x675f;&#x8bfb;&#x53d6;&#x7684;&#x3002;&#x4e5f;&#x5c31;&#x662f;&#x5982;&#x679c",{"_index":2672,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9053;&#x7684;&#x4efb;&#x610f;&#x4e2a;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x4e2d;&#x7684;&#x67d0;&#x4e00;&#x4e2a;&#x3002;&#x76f4;&#x5230;&#x8fd9;&#x4e2a;&#x5143;&#x7d20;&#x503c;&#x88ab;&#x5b8c;&#x5168;&#x590d;&#x5236;&#x8fdb;&#x8be5;&#x901a;&#x9053;&#x4e4b;&#x540e;&#xff0c;&#x5176;&#x4ed6;&#x9488;&#x5bf9;&#x8be5;&#x901a;&#x9053;&#x7684;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x624d;&#x53ef;&#x80fd;&#x88ab;&#x6267;&#x884c;&#x3002",{"_index":2722,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x907f;&#x514d;&#x4ece;&#x591a;&#x4e2a",{"_index":4773,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x907f;&#x514d;&#x590d;&#x5236;&#x64cd;&#x4f5c",{"_index":1336,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x907f;&#x514d;&#x6570;&#x636e;&#x7ade;&#x4e89;&#x7684;&#x4e09;&#x79cd;&#x65b9;&#x5f0f;&#xff1a",{"_index":4771,"title":{},"body":{"concurrent/sync_lock.html#共享变量":{}}}],["x90a3;&#x4e2a;&#x4f5c;&#x4e3a;&#x7a0b;&#x5e8f;&#x5165;&#x53e3;&#x7684",{"_index":4313,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x90a3;&#x4e3a;&#x4ec0;&#x4e48;&#x8981;&#x505a;&#x591a;&#x6b21;&#x68c0;&#x67e5;&#x5462;&#xff1f",{"_index":4942,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x90a3;&#x4e48;&#x4e5f;&#x5c31;&#x53ef;&#x4ee5;&#x8fd4;&#x56de;&#x4efb;&#x610f;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x3002",{"_index":741,"title":{},"body":{"basic/interface.html#接口":{}}}],["x90a3;&#x4e48;&#x53c8;&#x7531;&#x8c01;&#x6765;&#x89e3;&#x9501;&#x5462;&#xff1f;&#x522b;&#x7684",{"_index":4920,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x90a3;&#x4e48;&#x5728",{"_index":1645,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x90a3;&#x4e48;&#x5b83;&#x53ea;&#x4f1a;&#x88ab;&#x5bfc;&#x5165;&#x4e00;&#x6b21;&#xff08;&#x4f8b;&#x5982;&#x5f88;&#x591a;&#x5305;&#x53ef;&#x80fd;&#x90fd;&#x4f1a;&#x7528;&#x5230",{"_index":1662,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x90a3;&#x4e48;&#x5bf9;&#x5b83;&#x7684;&#x6240;&#x6709;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x90fd;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x901a;&#x9053;&#x4e2d;&#x6709;&#x65b0;&#x7684;&#x5143;&#x7d20;&#x503c;&#x51fa;&#x73b0;&#x3002;&#x8fd9;&#x65f6;&#xff0c;&#x901a;&#x9053;&#x4f1a;&#x901a;&#x77e5;&#x6700;&#x65e9;&#x7b49;&#x5f85;&#x7684;&#x90a3;&#x4e2a;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#x6240;&#x5728;&#x7684",{"_index":2733,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x90a3;&#x4e48;&#x5c31;&#x4f1a;&#x4f7f;&#x5b83;&#x6267;&#x884c;&#x88ab;&#x6d4b;&#x4ee3;&#x7801;&#x5305;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x3002",{"_index":3264,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["x90a3;&#x4e48;&#x5c31;&#x4f1a;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0",{"_index":4634,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x90a3;&#x4e48;&#x5d4c;&#x5165;&#x5b57;&#x6bb5;&#x4e2d;&#x7684;&#x90a3;&#x4e2a;&#x5b57;&#x6bb5;&#x4e00;&#x5b9a;&#x4f1a;&#x88ab;&#x201c;&#x5c4f;&#x853d;&#x201d",{"_index":1791,"title":{},"body":{"basic/struct.html#结构体嵌入-匿名成员":{}}}],["x90a3;&#x4e48;&#x8fd9;&#x4e2a;&#x65b9;&#x6cd5;&#x5c31;&#x4f1a;&#x4f7f;&#x7528;&#x5f53;&#x524d;&#x6c60;&#x7684",{"_index":5261,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x90a3;&#x4e48;&#xff0c;&#x600e;&#x6837;&#x624d;&#x80fd;&#x505a;&#x5230;&#x7b49;&#x5176;&#x4ed6;&#x7684",{"_index":4379,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x90a3;&#x4e48;&#xff0c;&#x6269;&#x5bb9;&#x4ee3;&#x7801;&#x5c31;&#x4f1a;&#x590d;&#x7528;&#x73b0;&#x6709;&#x7684;&#x5185;&#x5bb9;&#x5bb9;&#x5668;&#xff0c;&#x5e76;&#x628a;&#x5bb9;&#x5668;&#x4e2d;&#x7684;&#x672a;&#x8bfb;&#x5185;&#x5bb9;&#x62f7;&#x8d1d;&#x5230;&#x5b83;&#x7684;&#x5934;&#x90e8;&#x4f4d;&#x7f6e;&#x3002;&#x8fd9;&#x4e5f;&#x610f;&#x5473;&#x7740;&#x5176;&#x4e2d;&#x7684;&#x5df2;&#x8bfb;&#x5185;&#x5bb9;&#xff0c;&#x5c06;&#x4f1a;&#x5168;&#x90e8;&#x88ab;&#x672a;&#x8bfb;&#x5185;&#x5bb9;&#x548c",{"_index":3981,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["x90fd;&#x4e0d;&#x80fd;&#x591f;&#x9a6c;&#x4e0a;&#x88ab;&#x5904;&#x7406;&#x65f6;&#x7a0b;&#x5e8f;&#x9700;&#x8981;&#x6267;&#x884c;&#x54ea;&#x4e9b;&#x903b;&#x8f91",{"_index":2769,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x90fd;&#x4f1a;&#x4e0d;&#x4e00;&#x6837",{"_index":1953,"title":{},"body":{"basic/map.html#map":{}}}],["x90fd;&#x4f1a;&#x88ab;&#x6253;&#x65ad;&#xff0c;&#x7a0b;&#x5e8f;&#x9000;&#x51fa",{"_index":4262,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x90fd;&#x505c;&#x4e0b;&#x6765;&#x4e86;&#xff0c;&#x53ea;&#x6709;&#x5176;&#x4e2d;&#x4e00;&#x4e2a;&#x6ca1;&#x6709;&#x505c;&#xff0c;&#x90a3;&#x4e48;&#x5783;&#x573e;&#x56de;&#x6536;&#x5c31;&#x4f1a;&#x4e00;&#x76f4;&#x7b49;&#x5f85;&#x7740;&#x6ca1;&#x6709;&#x505c;&#x7684;&#x90a3;&#x4e00;&#x4e2a;&#x3002",{"_index":4569,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x90fd;&#x53ea;&#x80fd;&#x653e;&#x5728;&#x53d8;&#x91cf;&#x540d;,&#x5982",{"_index":211,"title":{},"body":{"index.html#os-Args":{}}}],["x90fd;&#x53ef;&#x4ee5;&#x62ff;&#x5230;&#x4e00;&#x4e2a;&#x552f;&#x4e00;&#x7684;&#x6574;&#x6570;&#x3002;&#x8fd9;&#x91cc;&#x6709;&#x70b9;&#x50cf",{"_index":4399,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x90fd;&#x53ef;&#x4ee5;&#x76f4;&#x63a5;&#x4f7f;&#x7528;&#xff0c;&#x4e0d;&#x7528;&#x8003;&#x8651;&#x662f;&#x503c;&#x8fd8;&#x662f;&#x6307;&#x9488",{"_index":1342,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x90fd;&#x5411;&#x8fd9;&#x4e2a;&#x901a;&#x9053;&#x53d1;&#x9001;&#x4e00;&#x4e2a;&#x5143;&#x7d20;&#x503c;&#xff0c;&#x5e76;&#x4e14;&#xff0c;&#x8ba9;&#x4e3b",{"_index":5032,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["x90fd;&#x5904;&#x4e8e;&#x7b49;&#x5f85;&#x72b6;&#x6001;&#xff0c;&#x5c31;&#x4f1a;&#x81ea;&#x884c;&#x629b;&#x51fa;&#x4e00;&#x4e2a;&#x5e26;&#x6709;&#x5982;&#x4e0b",{"_index":4847,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x90fd;&#x5c5e;&#x4e8e;&#x81f4;&#x547d;&#x9519;&#x8bef;&#xff0c;&#x90fd;&#x662f;&#x65e0;&#x6cd5;&#x88ab;&#x6062;&#x590d;&#x7684;&#xff0c;&#x8c03;&#x7528",{"_index":4852,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x90fd;&#x5df2;&#x7ecf;&#x88ab;&#x963b;&#x585e;&#x3002;&#x8fd9;&#x4e9b",{"_index":4842,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x90fd;&#x8bbe;&#x5b9a;&#x4e86;&#x4e00;&#x4e2a;&#x552f;&#x4e00;&#x7684;&#x4e8c;&#x8fdb;&#x5236;&#x7f16;&#x7801",{"_index":336,"title":{},"body":{"index.html#编码":{}}}],["x90fd;&#x9700;&#x8981;&#x8bbf;&#x95ee;&#x7684;&#x53d8;&#x91cf;&#xff0c;&#x4f7f;&#x7528;&#x4e92;&#x65a5;&#x6761;&#x4ef6;&#x6765;&#x8bbf;&#x95ee;&#x3002",{"_index":4818,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x914d;&#x7f6e;&#x4ee3;&#x7406",{"_index":2370,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x91ca;&#x653e;&#x95f2;&#x7f6e;&#x8d85;&#x8fc7",{"_index":4590,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x91cc;&#x505a;&#x7f51;&#x7edc;&#x591a;&#x8def;&#x590d;&#x7528;&#xff0c;&#x5373;&#xff1a",{"_index":4468,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x91cc;&#x9762;&#x53ef;&#x4ee5;&#x5199;&#x4efb;&#x610f;&#x591a;&#x4e2a",{"_index":1655,"title":{},"body":{"basic/package.html#初始化包":{}}}],["x91cc;&#x9762;&#x62ff;&#xff0c;&#x5982;&#x679c;&#x62ff;&#x4e0d;&#x5230;&#x5c31;&#x5206;&#x914d;&#x4e00;&#x4efd;&#x3002;&#x8fd9;&#x6bd4;&#x8d77;&#x4e0d;&#x505c;&#x751f;&#x6210;&#x65b0;&#x7684",{"_index":5282,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x91cc;&#x9762;&#x7684;&#x4e00;&#x6bb5;&#x5b9e;&#x73b0;&#x4ee3;&#x7801;&#xff1a",{"_index":5286,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x91cc;&#x9762;&#x7684;&#x6240;&#x6709;&#x7f13;&#x5b58;&#x7684;&#x5bf9;&#x8c61;&#xff0c;&#x8be5;&#x51fd;&#x6570;&#x6ce8;&#x518c;&#x8fdb;&#x53bb",{"_index":5291,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["x91cd;&#x590d",{"_index":855,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x9488;&#x5bf9",{"_index":2730,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9488;&#x5bf9;&#x5185;&#x5b58;&#x6982;&#x8981;&#x4fe1;&#x606f;&#x7684;&#x91c7;&#x6837;&#x4f1a;&#x6309;&#x7167;&#x4e00;&#x5b9a;&#x6bd4;&#x4f8b;&#x6536;&#x96c6",{"_index":3339,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x9488;&#x662f;&#x5355;&#x72ec;&#x7684;&#x7c7b;&#x578b;&#xff0c;&#x800c;&#x4e14;&#x4e5f;&#x4e0d;&#x80fd;&#x5bf9;&#x6307;&#x9488;&#x505a;&#x6574;&#x6570;&#x8fd0;&#x7b97;&#x3002;&#x4ece;&#x8fd9;&#x4e00;&#x70b9;&#x770b;&#xff0c;golang",{"_index":1318,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x9501;&#x5b9a;&#x548c;&#x89e3;&#x9501;&#xff0c;&#x800c;&#x5b83;&#x7684",{"_index":4802,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x9501;&#x5b9a;&#x90a3;&#x4e2a;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x5426;&#x5219;&#x5728;&#x8c03;&#x7528;&#x8fd9;&#x4e2a",{"_index":4915,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x9501;&#xff0c;&#x4fdd;&#x8bc1;&#x5728;&#x51fd;&#x6570;&#x8fd4;&#x56de;&#x4e4b;&#x540e;&#x6216;&#x8005;&#x53d1;&#x751f;&#x9519;&#x8bef;&#x8fd4;&#x56de;&#x65f6;&#x4e00;&#x5b9a;&#x4f1a;&#x6267;&#x884c",{"_index":4793,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["x9519;&#x8bef",{"_index":263,"title":{"basic/error.html#错误":{},"basic/function.html#错误":{}},"body":{"index.html#类型转换":{}}}],["x9519;&#x8bef;&#x5904;&#x7406",{"_index":924,"title":{},"body":{"basic/error.html#error-类型":{}}}],["x9519;&#x8bef;&#xff0c",{"_index":1837,"title":{},"body":{"basic/var.html#简短声明":{}}}],["x9519;&#x8bef;&#xff1a;cannot",{"_index":284,"title":{},"body":{"index.html#自定义类型":{}}}],["x9519;&#x8bef;&#xff1a;invalid",{"_index":285,"title":{},"body":{"index.html#自定义类型":{}}}],["x952e;&#x503c;&#x5bf9;&#x5e8f;&#x5217;&#xff1b;&#x56e0;&#x4e3a;&#x503c;&#x4e2d;&#x542b;&#x4e49;&#x53cc;&#x5f15;&#x53f7;&#x5b57;&#x7b26;&#xff0c",{"_index":1460,"title":{},"body":{"basic/json.html#序列化":{}}}],["x952e;&#x7684;&#x7c7b;&#x578b;&#x5fc5;&#x987b;&#x662f;&#x53ef;&#x5224;&#x7b49",{"_index":5238,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x952e;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x4e4b;&#x95f4;&#x5fc5;&#x987b;&#x53ef;&#x4ee5;&#x65bd;&#x52a0;&#x64cd;&#x4f5c;&#x7b26",{"_index":1980,"title":{},"body":{"basic/map.html#map":{}}}],["x952e;&#x7c7b;&#x578b;]&#x503c;&#x7c7b;&#x578b",{"_index":1940,"title":{},"body":{"basic/map.html#map":{}}}],["x957f;&#x5ea6;&#x53ef;&#x4ee5;&#x589e;&#x52a0;&#x4e5f;&#x53ef;&#x4ee5;&#x51cf;&#x5c11;&#x3002;&#x8fd8;&#x6709;&#x4e00;&#x70b9;&#x4e0e;&#x6570;&#x7ec4;&#x4e0d;&#x540c;&#xff0c;&#x5207;&#x7247;&#x4e0d;&#x9700;&#x8981;&#x8bf4;&#x660e;&#x957f;&#x5ea6;&#x3002",{"_index":2052,"title":{},"body":{"basic/slice.html#slice":{}}}],["x957f;&#x65f6;&#x95f4;&#x963b;&#x585e;&#x7684;p&#xff1b",{"_index":4600,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x95e8;&#x3002",{"_index":1195,"title":{},"body":{"basic/oop.html#String-方法":{}}}],["x95ed;&#x5305",{"_index":2538,"title":{"basic/function.html#闭包":{}},"body":{"basic/function.html#闭包":{}}}],["x95ee;&#x9898;&#x662f;&#x6211;&#x4eec;&#x8ba9;&#x4e3b",{"_index":4387,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x95f4;&#x7684;&#x7b49;&#x5f85;&#x65f6;&#x95f4;&#x3002;&#x8003;&#x8651;&#x4e00;&#x79cd;&#x5f88;&#x6781;&#x7aef;&#x7684;&#x60c5;&#x51b5;&#xff0c;&#x6240;&#x6709;&#x7684",{"_index":4568,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x961f;&#x5217;&#x4e2d;&#x7684",{"_index":4616,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x961f;&#x5217;&#x4e2d;&#xff0c;&#x800c",{"_index":4607,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x961f;&#x5217;&#xff0c;&#x91cc;&#x9762;&#x5b58;&#x50a8",{"_index":4529,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x963b;&#x585e;&#x4e8b;&#x4ef6;&#x3002",{"_index":3331,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x963b;&#x585e;&#x5256;&#x6790;&#x5219;&#x8bb0;&#x5f55;&#x963b;&#x585",{"_index":3216,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x963b;&#x585e;&#x60c5;&#x51b5;&#x4e0b;&#x7684;&#x8c03;&#x5ea6",{"_index":4621,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x963b;&#x585e;&#x6216",{"_index":4601,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x963b;&#x585e;&#x6982;&#x8981;&#x6587;&#x4ef6;&#xff0c;&#x5176;&#x4e2d;&#x7684;&#x6bcf;&#x4e00;&#x6bb5;&#x6982;&#x8981;&#x4fe1;&#x606f;&#xff0c;&#x90fd;&#x4ee3;&#x8868;&#x7740",{"_index":3329,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x963b;&#x585e;&#x7684;&#x60c5;&#x51b5;&#xff1a",{"_index":2773,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x53e6;&#x4e00;&#x4e2a",{"_index":2685,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x963b;&#x6b62;&#x4e86;&#x5916;&#x90e8;&#x8c03;&#x7528;&#x65b9;&#x5bf9;&#x5bf9;&#x8c61;&#x5185;&#x90e8;&#x7684;&#x503c;&#x4efb;&#x610f;&#x5730;&#x8fdb;&#x884c;&#x4fee;&#x6539;&#x3002",{"_index":1188,"title":{},"body":{"basic/oop.html#封装":{}}}],["x9645;&#x7c7b;&#x578b;&#x4e3a",{"_index":3510,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["x9664;&#x4e86",{"_index":1903,"title":{},"body":{"basic/operator.html#赋值运算符":{},"basic/basic_data.html#字符串":{}}}],["x9664;&#x4e86;&#x6dfb;&#x52a0;&#x952",{"_index":2004,"title":{},"body":{"basic/map.html#map":{}}}],["x9664;&#x6b64;&#x4e4b;&#x5916;&#xff0c",{"_index":3391,"title":{},"body":{"basic/test.html#性能分析":{}}}],["x9664;&#x6b64;&#x4e4b;&#x5916;&#xff0c;&#x8fd8;&#x6709;&#x4e00;&#x4e2a;&#x7ec6;&#x8282;&#x9700;&#x8981;&#x6ce8;&#x610f;&#xff0c;&#x53ea;&#x8bfb;&#x5b57;&#x5178;&#x548c;&#x810f;&#x5b57;&#x5178;&#x4e4b;&#x95f4;&#x662f;&#x4f1a;&#x4e92;&#x76f8;&#x8f6c;&#x6362;&#x7684;&#x3002;&#x5728;&#x810f;&#x5b57;&#x5178;&#x4e2d;&#x67e5;&#x627e;&#x952e;&#x503c;&#x5bf9;&#x6b21;&#x6570;&#x8db3;&#x591f;&#x591a;&#x7684;&#x65f6;&#x5019;&#xff0c",{"_index":5361,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["x968f;&#x540e;&#xff0c;&#x7a0b;&#x5e8f;&#x5d29;&#x6e83;&#x5e76;&#x7ec8;&#x6b62;&#x8fd0;&#x884c;&#xff0c;&#x627f;&#x8f7d;&#x7a0b;&#x5e8f;&#x8fd9;&#x6b21;&#x8fd0;&#x884c;&#x7684;&#x8fdb;&#x7a0b;&#x4e5f;&#x4f1a;&#x968f;&#x4e4b;&#x6b7b;&#x4ea1;&#x5e76;&#x6d88;&#x5931;&#x3002;&#x4e0e;&#x6b64;&#x540c;&#x65f6;&#xff0c;&#x5728;&#x8fd9;&#x4e2a;&#x63a7;&#x5236;&#x6743;&#x4f20;&#x64ad;&#x7684;&#x8fc7;&#x7a0b;&#x4e2d;&#xff0c;pan",{"_index":991,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["x968f;&#x673a",{"_index":2764,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9690;&#x85cf;&#x5b9e;&#x73b0;&#x7684;&#x7ec6;&#x8282;&#xff0c;&#x9632;&#x6b62;&#x8c03;&#x7528;&#x65b9;&#x4f9d;&#x8d56;&#x90a3;&#x4e9b;&#x53ef;&#x80fd;&#x53d8;&#x5316;&#x7684;&#x5177;&#x4f53;&#x5b9e;&#x73b0;&#xff0c;&#x8fd9;&#x6837;&#x4f7f;&#x8bbe;&#x8ba1;&#x5305;&#x7684;&#x7a0b;&#x5e8f;&#x5458;&#x5728;&#x4e0d;&#x7834;&#x574f;&#x5bf9;&#x5916;&#x7684;api&#x60c5;&#x51b5;&#x4e0b;&#x80fd;&#x5f97;&#x5230;&#x66f4;&#x5927;&#x7684;&#x81ea;&#x7531;&#x3002",{"_index":1187,"title":{},"body":{"basic/oop.html#封装":{}}}],["x9700;&#x8981;&#x5728;&#x5b83;&#x57fa;&#x4e8e;&#x7684;&#x90a3;&#x4e2a;&#x4e92;&#x65a5;&#x9501;&#x4fdd;&#x62a4;&#x4e0b;&#x8fdb;&#x884c;&#x3002;&#x800c;&#x5728;&#x8fdb;&#x884c;&#x5355;&#x53d1;&#x901a;&#x77e5;&#x6216;&#x5e7f;&#x64ad;&#x901a;&#x77e5;&#x7684;&#x65f6;&#x5019;&#xff0c;&#x5374;&#x662f;&#x6070;&#x6070;&#x76f8;&#x53cd;&#x7684;&#xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x9700;&#x8981;&#x5728;&#x5bf9;&#x5e94;&#x7684;&#x4e92;&#x65a5;&#x9501;&#x89e3;&#x9501;&#x4e4b;&#x540",{"_index":4865,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["x9700;&#x8981;&#x63a5;&#x53d7;&#x6d88;&#x606f;&#xff0c;&#x5982;&#x679c;&#x7b2c;&#x4e00;&#x4e2a",{"_index":2754,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9700;&#x8981;&#x6539;&#x53d8;&#x53c2;&#x6570;&#x7684;&#x503c",{"_index":1335,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x975e;&#x672c;&#x5730;&#x53d8;&#x91cf",{"_index":4426,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x975e;&#x7f13;&#x51b2;&#x901a;&#x9053",{"_index":2737,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["x9762",{"_index":5143,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["x9762;&#x5411;&#x5bf9;&#x8c61",{"_index":1112,"title":{"basic/oop.html#面向对象":{}},"body":{}}],["x9875;&#x9762;&#xff0c;godoc&#x7684",{"_index":3015,"title":{},"body":{"commands/build.html#工具":{}}}],["x9875;&#xff08;page&#xff09",{"_index":396,"title":{},"body":{"advance/mm.html#内存块":{}}}],["x9879;&#x76ee",{"_index":2374,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["x987a;&#x5e8f;&#x9010;&#x4e2a;&#x8fdb;&#x884c;&#xff0c;&#x8fd9;&#x4f1a;&#x8ba9;&#x6211;&#x4eec;&#x611f;&#x89c9;&#x5230;&#x5b83;&#x662f;&#x5728;&#x5b8c;&#x5168;&#x4e32;&#x884c;&#x5730;&#x6267;&#x884c;&#x6d4b;&#x8bd5;&#x6d41;&#x7a0b;&#x3002",{"_index":3238,"title":{},"body":{"basic/test.html#go-test-命令执行的主要测试流程":{}}}],["x9891;&#x7e41;&#x5730;&#x6539;&#x53d8;&#x3002",{"_index":4997,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["x989d;&#x5916;&#x7684;&#x64cd;&#x4f5c;&#x6a21;&#x5f0f;&#xff0c;&#x53ef;&#x9009;&#x9879;&#x5982;&#x4e0b;&#x6240;&#x793a;&#xff1a",{"_index":4143,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["x9996;&#x5148;&#xff0c;&#x6211;&#x4eec;&#x9700;&#x8981;&#x7a0d;&#x5fae;&#x6539;&#x9020;&#x4e00;&#x4e0b",{"_index":4395,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["x9996;&#x5b57;&#x6bcd;&#x5927;&#x5199;&#xff09;&#x4f7f;&#x7528",{"_index":2119,"title":{},"body":{"basic/scope.html#作用域":{}}}],["x9ad8;&#x7684;&#x590d;&#x5236;&#x64cd;&#x4f5c;&#xff0c;&#x5e76;&#x4e14;&#x8282;&#x7701;&#x5185;&#x5b58;&#xff0c;&#x63d0;&#x9ad8;&#x7a0b;&#x5e8f;&#x8fd0;&#x884c;&#x6548;&#x7387;&#x3002",{"_index":1333,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["x9ed8;&#x8ba4;&#x4e0a;&#x9650;&#x4e3a",{"_index":2080,"title":{},"body":{"basic/slice.html#截取切片":{}}}],["x9ed8;&#x8ba4;&#x4e0b;&#x9650;&#x4e3a",{"_index":2079,"title":{},"body":{"basic/slice.html#截取切片":{}}}],["x9ed8;&#x8ba4;&#x4e3a",{"_index":4485,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["x9ed8;&#x8ba4;&#x503c;&#x662f;&#x7a7a;&#x7684;&#x3002",{"_index":3208,"title":{},"body":{"basic/test.html#基准测试":{}}}],["x9ed8;&#x8ba4;&#x5305;&#x540d;&#x4e00;&#x822c;&#x91c7;&#x7528;&#x5bfc;&#x5165;&#x8def;&#x5f84;&#x540d;&#x7684;&#x6700;&#x540e;&#x4e00;&#x6bb5;&#xff0c;&#x6bd4;&#x5982",{"_index":1620,"title":{},"body":{"basic/package.html#包声明":{}}}],["x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b",{"_index":2305,"title":{},"body":{"basic/env_config.html#安装":{}}}],["x9ed8;&#x8ba4;&#x60c5;&#x51b5;&#x4e0b;&#xff0c;&#x6570;&#x7ec4;&#x7684;&#x6bcf;&#x4e2a;&#x5143;&#x7d20;&#x90fd;&#x88ab;&#x521d;&#x59cb;&#x5316;&#x4e3a;&#x5143;&#x7d20;&#x7c7b;&#x578b;&#x5bf9;&#x5e94;&#x7684;&#x96f6;&#x503c;&#x3002",{"_index":462,"title":{},"body":{"basic/array.html#数组":{}}}],["x9ed8;&#x8ba4;&#x662f",{"_index":879,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["x:0",{"_index":4666,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["x:1",{"_index":4665,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["x\\n",{"_index":3769,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["x]\\n",{"_index":506,"title":{},"body":{"basic/flow.html":{},"basic/flow.html#for":{},"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["xe9;t&#xe9",{"_index":3190,"title":{},"body":{"basic/test.html#测试函数":{}}}],["xff01",{"_index":2747,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff08",{"_index":4014,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff08;&#x4e0d;&#x63a8;&#x8350;&#x4f7f;&#x7528;&#xff09;&#x3002",{"_index":207,"title":{},"body":{"index.html#行分隔符":{}}}],["xff08;&#x4e0d;&#x8981;&#x901a;&#x8fc7;&#x5171;&#x4eab;&#x5185;&#x5b58;&#x6765;&#x901a;&#x4fe1;&#xff0c;&#x800c;&#x5e94;&#x8be5;&#x901a;&#x8fc7;&#x901a;&#x4fe1;&#x6765;&#x5171;&#x4eab;&#x5185;&#x5b58;&#x3002;&#xff09",{"_index":2626,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff08;&#x4e5f;&#x5c31;&#x662f",{"_index":999,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["xff08;&#x4e5f;&#x5c31;&#x662f;&#x4e34;&#x754c;&#x533a;&#x4e2d;&#x7684;&#x4ee3;&#x7801;&#xff09;&#x624d;&#x4f1a;&#x5f00;&#x59cb;&#x6267;&#x884c;&#x3002;&#x8fd9;&#x4e5f;&#x6b63;&#x662f;&#x4e92;&#x65a5;&#x9501;&#x80fd;&#x591f;&#x4fdd;&#x62a4;&#x4e34;&#x754c;&#x533a;&#x7684;&#x539f;&#x56e0;&#x6240;&#x5728;&#x3002",{"_index":4827,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff08;&#x4e5f;&#x5c31;&#x662f;&#x5f53;&#x524d;&#x7684",{"_index":4901,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["xff08;&#x4ee5;&#x4e0b;&#x7b80;&#x79f0",{"_index":5091,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["xff08;&#x4f4d;&#x6e05;&#x7a7a",{"_index":1890,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["xff08;&#x5176;&#x4ed6;&#x8bed;&#x8a00;&#x5176;&#x5b9e;&#x662f;&#x9690;&#x5f0f;&#x7684;&#x4f20;&#x9012;&#x6307;&#x9488;&#xff09;&#x3002",{"_index":485,"title":{},"body":{"basic/array.html#数组传入函数":{}}}],["xff08;&#x53d6;&#x5730;&#x5740;&#x64cd;&#x4f5c;&#xff09;&#xff0c",{"_index":1910,"title":{},"body":{"basic/operator.html#其他运算符":{}}}],["xff08;&#x5982;&#x679c;&#x5728",{"_index":3171,"title":{},"body":{"basic/test.html#测试":{}}}],["xff08;&#x5c31;&#x50cf;os.file&#x7c7b;&#x578b;&#x8fd9;&#x6837;&#xff09;&#x3002",{"_index":4128,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff08;&#x6307;&#x9488;&#x53d8;&#x91cf;&#xff09;&#x3002",{"_index":1911,"title":{},"body":{"basic/operator.html#其他运算符":{}}}],["xff08;&#x6bd4;&#x5982;&#x6267;&#x884c;&#x4e00;&#x4e9b;&#x5b88;&#x62a4;&#x4efb;&#x52a1;&#xff09;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x6709;&#x53ef;&#x80fd;&#x4f1a;&#x5bfc;&#x81f4;&#x76f8;&#x5173",{"_index":5114,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["xff08;&#x6ce8;&#x610f;&#x662f;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#xff09;&#xff0c;&#x7136;&#x540e;&#x518d;&#x8bd5;&#x56fe;&#x627e;&#x51fa;&#x8fd9;&#x4e2a;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x4e2d",{"_index":607,"title":{},"body":{"basic/flow.html#for":{}}}],["xff08;&#x7531;&#x53d8;&#x91cf",{"_index":5147,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff08;&#x76f8;&#x4e58;&#x540e;&#x518d;&#x8d4b;&#x503c;&#xff09;&#x7b49;&#x7b49;&#xff0c;&#x5176;&#x4ed6;&#x7684;&#x8d4b;&#x503c;&#x8fd0;&#x7b97;&#x7b26;&#x4e5f;&#x90fd;&#x662f",{"_index":1907,"title":{},"body":{"basic/operator.html#赋值运算符":{}}}],["xff08;&#x76f8;&#x51cf;&#x540e;&#x518d;&#x8d4b;&#x503c;&#xff09;&#xff0c",{"_index":1906,"title":{},"body":{"basic/operator.html#赋值运算符":{}}}],["xff08;&#x76f8;&#x52a0;&#x540e;&#x518d;&#x8d4b;&#x503c;&#xff09;&#xff0c",{"_index":1905,"title":{},"body":{"basic/operator.html#赋值运算符":{}}}],["xff08;&#x88ab;&#x5bfc;&#x51fa;&#x540",{"_index":2118,"title":{},"body":{"basic/scope.html#作用域":{}}}],["xff08;&#x903b;&#x8f91",{"_index":1887,"title":{},"body":{"basic/operator.html#逻辑运算符":{}}}],["xff08;unnam",{"_index":288,"title":{},"body":{"index.html#未命名类型":{}}}],["xff09",{"_index":3173,"title":{},"body":{"basic/test.html#测试":{}}}],["xff09;&#x3002",{"_index":198,"title":{},"body":{"index.html#package":{},"concurrent/goroutine.html#goroutine-1":{}}}],["xff09;&#x3002;&#x901a;&#x5e38",{"_index":2543,"title":{},"body":{"basic/function.html#错误":{}}}],["xff09;&#x4e00;&#x6837",{"_index":2330,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["xff09;&#x52a0;&#x5165;&#x5230;&#x5f53;&#x524d;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x7684;&#x901a;&#x77e5;&#x961f;&#x5217;&#x4e2d;&#x3002",{"_index":4902,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["xff09;&#x53ef;&#x4ee5;&#x662f;&#x6307;&#x9488;&#xff0c;&#x4e5f;&#x53ef;&#x4ee5;&#x662f;&#x503c;&#xff0c;golang",{"_index":1347,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["xff09;&#x7684;&#x5185;&#x5b58;&#x5206;&#x914d;&#x3002",{"_index":233,"title":{},"body":{"index.html#make-和-new":{}}}],["xff09;&#x7c7b;&#x578b;&#x7684;&#xff0c;&#x6240;&#x4ee5;&#x4ece;&#x8bed;&#x6cd5;&#x4e0a;&#x8bb2;&#xff0c;&#x5b83;&#x53ef;&#x4ee5;&#x63a5;&#x53d7;&#x4efb;&#x4f55;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x3002",{"_index":1000,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["xff09;&#xff0c",{"_index":2552,"title":{},"body":{"basic/function.html#关键字-defer":{},"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff09;&#xff0c;&#x4ee5;&#x53ca;&#x539f;&#x6765;&#x7684;&#x6570;&#x7ec4",{"_index":2590,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["xff09;&#xff0c;&#x5b83;&#x53ea;&#x6709;&#x5728;&#x627e;&#x4e0d;&#x5230;&#x7a7a;&#x95f2",{"_index":4323,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff09;&#xff0c;&#x5b83;&#x7ef4;&#x62a4;&#x4e86;&#x4e00;&#x4e2a",{"_index":4528,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["xff09;&#xff0c;&#x5b8c;&#x6210;&#x540e;&#x518d;&#x8f6c;&#x56de;&#x6765;&#x3002",{"_index":3816,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff09;&#xff0c;&#x5b9e;&#x53c2;&#x53ef;&#x80fd;&#x4f1a;&#x7531;&#x4e8e;&#x51fd;&#x6570;&#x7684;&#x95f4;&#x63a5;&#x5f15;&#x7528;&#x88ab;&#x4fee;&#x6539;&#x3002",{"_index":2510,"title":{},"body":{"basic/function.html#参数":{}}}],["xff09;&#xff0c;&#x63a5;&#x6536;&#x8005;&#xff08",{"_index":1346,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["xff09;&#xff0c;&#x7531;&#x51fd;&#x6570;&#x7684;&#x53c2;&#x6570;&#x7c7b;&#x578b;&#x6307;&#x5b9a;&#xff0c;&#x4f20;&#x5165;&#x7684;&#x53c2;&#x6570;&#x7684;&#x7c7b;&#x578b;&#x4e0d;&#x5bf9;&#x4f1a;&#x62a5;&#x9519;&#xff0c;&#x4f8b;&#x5982;&#xff1a",{"_index":1344,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["xff0c",{"_index":222,"title":{},"body":{"index.html#命名":{},"basic/interface.html#接口":{},"basic/error.html#error-类型":{},"basic/oop.html#方法":{},"basic/pointer.html#指针":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html#序列化":{},"basic/constant.html#常量":{},"basic/constant.html#iota":{},"basic/package.html#点操作":{},"basic/operator.html#优先级":{},"basic/operator.html#关系运算符":{},"basic/operator.html#逻辑运算符":{},"basic/operator.html#位运算符":{},"basic/reflect.html#reflect-ValueOf":{},"basic/env_config.html#工作区":{},"packages/container.html#container-包":{},"basic/function.html#可变参数":{},"basic/function.html#传入函数的那些参数值后来怎么样了":{},"concurrent/channel.html#channel":{},"commands/build.html#工具":{},"basic/basic_data.html#数值类型":{},"packages/os.html#os包中的API":{},"concurrent/goroutine.html#goroutine-1":{},"concurrent/goroutine.html#Goroutine-调度器":{},"concurrent/sync_lock.html#条件变量-sync-Cond":{},"concurrent/sync_lock.html#竞争检查器":{}}}],["xff0c;&#x4e00;&#x822c;&#x7528;&#x4e8e;&#x5f3a;&#x8c03;&#x6570;&#x503c;&#x662f;&#x4e00;&#x4e2a;&#x539f;&#x59cb;&#x7684;&#x6570;&#x636e;&#x800c;&#x4e0d;&#x662f;&#x4e00;&#x4e2a;&#x5c0f;&#x7684;&#x6574;&#x6570;&#x3002",{"_index":3798,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x4e3a;&#x4ec0;&#x4e48;&#xff0c;&#x9996;&#x5148",{"_index":574,"title":{},"body":{"basic/flow.html#for":{}}}],["xff0c;&#x4e5f;&#x5c31;&#x662f;&#x7f16;&#x7801;&#x64cd;&#x4f5c;&#xff1a",{"_index":1446,"title":{},"body":{"basic/json.html#序列化":{}}}],["xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x76f8;&#x5e94;&#x7684;&#x6587;&#x4ef6;&#x4ee3;&#x8868;&#x7684;&#x662f;&#x4e00;&#x4e2a;&#x76ee;&#x5f55;&#x3002",{"_index":4160,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff0c;&#x4e5f;&#x5c31;&#x662f;&#x8bf4;&#xff0c;&#x90a3;&#x4e2a;&#x6587;&#x4ef6;&#x4ee3;&#x8868;&#x7684;&#x662f;&#x4e00;&#x4e2a;&#x547d;&#x540d;&#x7ba1;&#x9053;&#x3002",{"_index":4163,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff0c;&#x4ee5;&#x514d",{"_index":5060,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["xff0c;&#x4ee5;&#x53ca",{"_index":4968,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["xff0c;&#x4ee5;&#x53ca;&#x6211;&#x4eec;&#x542f;&#x7528;&#x7684;&#x90a3;&#x4e9b",{"_index":4841,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff0c;&#x4ee5;&#x53ca;&#x7528;&#x4e8e;&#x4ee3;&#x8868",{"_index":3476,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["xff0c;&#x4f1a;&#x4f7f;&#x51fd;&#x6570;&#x6216;&#x65b9;&#x6cd5;&#x5ef6;&#x8fdf;&#x6267;&#x884c;&#xff0c;&#x76f4;&#x5230;&#x5305;&#x542b;&#x8be5",{"_index":2549,"title":{},"body":{"basic/function.html#关键字-defer":{}}}],["xff0c;&#x4f46;&#x5728",{"_index":4512,"title":{},"body":{"concurrent/goroutine.html#Goroutine-调度器":{}}}],["xff0c;&#x4f46;&#x662f",{"_index":1010,"title":{},"body":{"basic/error.html#Recover-捕获异常":{},"basic/operator.html#算术运算符":{}}}],["xff0c;&#x4f46;&#x662f;&#x4e0d;&#x80fd;&#x4fdd;&#x8bc1;&#x6253;&#x5370",{"_index":4813,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff0c;&#x4f60;&#x4f1a",{"_index":2000,"title":{},"body":{"basic/map.html#map":{}}}],["xff0c;&#x4f7f;&#x7528",{"_index":1937,"title":{},"body":{"basic/map.html#map":{}}}],["xff0c;&#x4f7f;&#x88ab;&#x8bf7;&#x6c42",{"_index":4270,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x4f8b;&#x5982;&#xff1a",{"_index":1450,"title":{},"body":{"basic/json.html#序列化":{}}}],["xff0c;&#x503c;&#x4e3a",{"_index":2311,"title":{},"body":{"basic/env_config.html#安装":{}}}],["xff0c;&#x5176;&#x4e2d;&#x7684",{"_index":3175,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x518d;&#x5e76;&#x53d1",{"_index":5123,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x51cf;&#x5c11;&#x590d;&#x5236;&#x6210;&#x672c;&#xff0c",{"_index":1144,"title":{},"body":{"basic/oop.html#方法":{}}}],["xff0c;&#x524d;&#x8005;&#x662f;&#x4e92;&#x65a5;&#x9501;&#xff0c;&#x540e;&#x8005;&#x662f;&#x8bfb;&#x5199;&#x9501;&#x3002",{"_index":4780,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff0c;&#x5305;&#x542b;&#x4e86;&#x5728;&#x90a3;&#x65f6;&#x5176;&#x4e2d;&#x7684;&#x6240;&#x6709;&#x672a;&#x8bfb;&#x5185;&#x5bb9;&#x3002",{"_index":4002,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x5373;&#x4e3a;&#x6267;&#x884c",{"_index":5163,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x5373;&#xff1a;&#x65e0;&#x53c2;&#x6570;&#x58f0;&#x660e;&#x548c;&#x7ed3;&#x679c;&#x58f0;&#x660e;&#x7684;&#x51fd;&#x6570;&#x3002;&#x8be5;&#x65b9;&#x6cd5;&#x7684;&#x529f;&#x80fd;&#x5e76",{"_index":5086,"title":{},"body":{"concurrent/sync_lock.html#sync-Once":{}}}],["xff0c;&#x53ea;&#x6709;&#x6709;&#x4e86;&#x8fd9;&#x4e2a;&#x6807;&#x8bb0;&#xff0c;&#x547d;&#x4ee4;&#x624d;&#x4f1a;&#x8fdb;&#x884c;&#x6027;&#x80fd;&#x6d4b;&#x8bd5",{"_index":3254,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["xff0c;&#x53ef;&#x4ee5;&#x7b80;&#x5355;&#x7c97;&#x66b4;&#x7684",{"_index":4382,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x5426;&#x5219",{"_index":1897,"title":{},"body":{"basic/operator.html#位运算符":{},"theme/theme-usage.html#Quick-Start":{}}}],["xff0c;&#x5426;&#x5219;&#xff0c;&#x5b83;&#x5c06;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a;&#x4ee3;&#x8868;&#x4e86;&#x76f8;&#x5e94;&#x6587;&#x4ef6;&#x7684",{"_index":4102,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff0c;&#x56e0;&#x4e3a",{"_index":1829,"title":{},"body":{"basic/var.html#简短声明":{}}}],["xff0c;&#x56e0;&#x4e3a;&#x5b83;&#x4eec;&#x672c;&#x8eab;&#x5c31;&#x662f;&#x6307;&#x9488;&#x5305;&#x88c5;&#x7684;&#x3002",{"_index":1147,"title":{},"body":{"basic/oop.html#方法":{}}}],["xff0c;&#x56e0;&#x4e3a;&#x6574;&#x6570;&#x9664;&#x6cd5;&#x4f1a;&#x5411;&#x7740",{"_index":1879,"title":{},"body":{"basic/operator.html#算术运算符":{}}}],["xff0c;&#x5728;&#x5176;&#x5185;&#x90e8;&#x4f1a;&#x5206;&#x522b;&#x8c03;&#x7528",{"_index":4881,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["xff0c;&#x5728;&#x591a;&#x4e2a",{"_index":1967,"title":{},"body":{"basic/map.html#map":{}}}],["xff0c;&#x5728;&#x786e;&#x5b9a;&#x8fd9;&#x4e2a",{"_index":2655,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff0c;&#x5728;&#x7b2c;&#x4e00;&#x4e2a;&#x58f0;&#x660e;&#x7684;&#x5e38;&#x91cf;&#x6240;&#x5728;&#x7684;&#x884c;&#xff0c",{"_index":1524,"title":{},"body":{"basic/constant.html#iota":{}}}],["xff0c;&#x5982;&#x3002",{"_index":927,"title":{},"body":{"basic/error.html#error-类型":{}}}],["xff0c;&#x5982;&#x6b64;&#x5c31;&#x5f97;&#x5230;&#x4e86;&#x5f53;&#x6b21;&#x8fed;&#x4ee3;&#x7684;&#x5e8f;&#x53f7;&#x3002;&#x4e4b;&#x540e;&#xff0c;&#x65e0;&#x8bba",{"_index":4405,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x5982;&#xff1a",{"_index":269,"title":{},"body":{"index.html#类型转换":{}}}],["xff0c;&#x5b83;&#x4e0d;&#x80fd;&#x901a;&#x8fc7",{"_index":1954,"title":{},"body":{"basic/map.html#map":{}}}],["xff0c;&#x5b83;&#x4ec5;&#x5206;&#x914d;&#x4e86;&#x5b57;&#x5178;&#x672c;&#x8eab;&#x9700;&#x8981;&#x7684;&#x5185;&#x5b58;&#xff0c;&#x4f46;&#x662f;&#x5e76;&#x6ca1;&#x6709;&#x4e3a",{"_index":238,"title":{},"body":{"index.html#make-和-new":{}}}],["xff0c;&#x5b83;&#x4eec;&#x90fd;&#x4f1a;&#x8fd4;&#x56de;&#x4e00;&#x4e2a",{"_index":3544,"title":{},"body":{"packages/io.html#bufio包中的数据类型":{}}}],["xff0c;&#x5b83;&#x5728;&#x5224;&#x65ad;&#x4e24;&#x4e2a;&#x53d8;&#x91cf;&#x662f;&#x5426;&#x76f8;&#x7b49;&#x65f6;&#x5341;&#x5206;&#x6709;&#x7528;&#x3002",{"_index":2181,"title":{},"body":{"basic/reflect.html#reflect-ValueOf":{}}}],["xff0c;&#x5b83;&#x63a5;&#x53d7;&#x4e00;&#x4e2a",{"_index":3903,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x5b83;&#x662f",{"_index":5179,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x5b83;&#x8868;&#x793a;&#x6709;&#x4e00;&#x4e2a",{"_index":960,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["xff0c;&#x5b89;&#x88c5;/&#x91cd;&#x65b0;&#x5b89;&#x88c5;&#x8fd0;&#x884c;&#x6d4b;&#x8bd5;&#x6240;&#x9700;&#x7684;&#x4f9d;&#x8d56;&#x5305;&#xff0c;&#x4f46;&#x4e0d;&#x7f16;&#x8bd1;&#x548c;&#x8fd0;&#x884c;&#x6d4b;&#x8bd5;&#x4ee3;&#x7801;&#x3002",{"_index":3178,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x5bb9;&#x91cf;&#x4e3a",{"_index":2642,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff0c;&#x5bf9;&#x4e8e;&#x5176;&#x4e2d;&#x7684;&#x8bfb;&#x9501;&#x4e5f;&#x662f;&#x5982;&#x6b64;&#xff0c;&#x5e76;&#x4e14;&#x540c",{"_index":4832,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff0c;&#x5bf9;&#x5e94",{"_index":3789,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x5bf9;&#x5e94;&#x5173;&#x7cfb;&#xff1a",{"_index":1815,"title":{},"body":{"basic/var.html#变量":{}}}],["xff0c;&#x5c06",{"_index":408,"title":{},"body":{"advance/mm.html#内存块":{}}}],["xff0c;&#x5c06;&#x63a7;&#x5236;&#x8f6c;&#x79fb;&#x5230;&#x88ab;&#x6807;&#x8bb0;&#x7684;&#x8bed;&#x53e5;&#x3002;&#x901a;&#x5e38;&#x4e0e;&#x6761;&#x4ef6;&#x8bed;&#x53e5;&#x914d;&#x5408;&#x4f7f;&#x7528;&#x3002;&#x53ef;&#x7528;&#x6765;&#x5b9e;&#x73b0;&#x6761;&#x4ef6;&#x8f6c;&#x79fb;&#xff0c",{"_index":596,"title":{},"body":{"basic/flow.html#for":{}}}],["xff0c;&#x5c31;&#x4f1a;&#x4f7f;&#x7f16;&#x8bd1;&#x5668;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x4f60;&#x7684;&#x5e94;&#x7528;&#x7684;&#x201c;&#x4fee;&#x6539;&#x201d;&#x7248;&#x3002",{"_index":5374,"title":{},"body":{"concurrent/sync_lock.html#竞争检查器":{}}}],["xff0c;&#x5c31;&#x53bb",{"_index":5281,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["xff0c;&#x5c31;&#x662f;&#x6709;&#x4e00;&#x5b9a;&#x98ce;&#x9669;&#x7684",{"_index":5133,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x5c31;&#x80af;&#x5b9a;&#x4e0d;&#x4f1a;&#x6709;&#x95ee;&#x9898;&#x3002",{"_index":5137,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x5c31;&#x88ab;&#x591a;&#x4e2a;&#x7528;&#x6237;&#x7ea7;&#x7ebf;&#x7a0b;&#x5171;&#x7528;&#x4e86;&#x3002;&#x56e0;&#x6b64;&#xff0c;&#x5bf9;&#x5b83;&#x7684;&#x64cd;&#x4f5c;&#x5c31;&#x4ea7;&#x751f;&#x4e86;&#x7ade;&#x6001;&#x6761;&#x4ef6;&#xff08;rac",{"_index":4427,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x5c3d;&#x91cf;&#x907f;&#x514d;&#x7a0b;&#x5e8f;&#x7684;&#x5d29;&#x6e83;&#x3002",{"_index":952,"title":{},"body":{"basic/error.html#Panic-异常":{}}}],["xff0c;&#x5e76;&#x4e14",{"_index":2366,"title":{},"body":{"basic/env_config.html#Go-Module":{}}}],["xff0c;&#x5e76;&#x4e14;&#x540c;&#x6837;&#x662f;&#x628a;&#x503c;&#x5148;&#x505a;&#x8f6c;&#x6362;&#x548c;&#x5c01;&#x88c5;&#x540e;&#x518d;&#x8fdb;&#x884c;&#x50a8;&#x5b58;&#x7684;&#x3002;&#x79f0;&#x4e3a",{"_index":5343,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["xff0c;&#x5e76;&#x4e14;&#x5f53;&#x65f6;&#x6240;&#x7528;&#x7684;&#x6700;&#x5927",{"_index":3267,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["xff0c;&#x5e76;&#x6839;&#x636e;&#x7c7b;&#x578b;&#x5b9a;&#x4e49",{"_index":3662,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["xff0c;&#x5e76;&#x68c0;&#x67e5",{"_index":1017,"title":{},"body":{"basic/error.html#Recover-捕获异常":{}}}],["xff0c;&#x5f53;&#x6211;&#x4eec;&#x4f20;&#x4e00;&#x4e2a;&#x53c2;&#x6570;&#x503c;&#x5230;&#x88ab;&#x8c03;&#x7528;&#x51fd;&#x6570;&#x91cc;&#x9762;&#x65f6;&#xff0c;&#x5b9e;&#x9645;&#x4e0a;&#x662f;&#x4f20;&#x4e86;&#x8fd9;&#x4e2a;&#x503c;&#x7684;&#x4e00;&#x4efd",{"_index":2502,"title":{},"body":{"basic/function.html#参数":{}}}],["xff0c;&#x5f53;&#x7136;&#x4f1a;&#x6839;&#x636e;&#x76f8;&#x5e94;&#x7684;&#x6570;&#x636e;&#x4f38;&#x7f29;&#x3002;&#x4e5f;&#x6b63;&#x56e0;&#x4e3a;&#x5982;&#x6b64;&#xff0c;&#x53ef;&#x540c;&#x65f6;&#x8fd0;&#x884c;&#x6210;&#x5343",{"_index":4252,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x5f88;&#x4e11;&#x964b;&#x3002",{"_index":5036,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["xff0c;&#x60c5;&#x51b5;&#x8981;&#x7b80;&#x5355;&#x4e00;&#x4e9b;&#x3002;&#x65e0;&#x8bba;&#x662f;&#x53d1;&#x9001;&#x64cd;&#x4f5c;&#x8fd8;&#x662f;&#x63a5;&#x6536;&#x64cd;&#x4f5c;&#xff0c;&#x4e00;&#x5f00;&#x59cb;&#x6267;&#x884c;&#x5c31;&#x4f1a;&#x88ab;&#x963b;&#x585e;&#xff0c;&#x76f4;&#x5230;&#x914d;&#x5bf9;&#x7684;&#x64cd;&#x4f5c;&#x4e5f;&#x5f00;&#x59cb;&#x6267;&#x884c;&#xff0c;&#x624d;&#x4f1a;&#x7ee7;&#x7eed;&#x4f20;&#x9012;&#x3002",{"_index":2738,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff0c;&#x60f3;&#x8981;&#x9002;&#x65f6;&#x5730;&#x4ece;&#x4fe1;&#x7bb1;&#x4e2d;&#x83b7;&#x53d6;&#x60c5;&#x62a5;&#xff0c;&#x7136;&#x540e;&#x901a;&#x77e5;&#x6211;&#x3002",{"_index":4895,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["xff0c;&#x6216;&#x8005;&#x51fd;&#x6570;&#xff0c;&#x8981;&#x7ed9;&#x7c7b;&#x578b;&#x52a0;&#x4e0a",{"_index":267,"title":{},"body":{"index.html#类型转换":{}}}],["xff0c;&#x6240;&#x4ee5;&#x6027;&#x80fd;&#x4e00;&#x822c;&#x3002",{"_index":3827,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x6240;&#x4ee5;&#x6253;&#x5370;&#x51fa;&#x6765;&#x7684;&#x7ed3;&#x679c;&#x5b8c;&#x5168;&#x4e0d;&#x540c;&#x3002",{"_index":1831,"title":{},"body":{"basic/var.html#简短声明":{}}}],["xff0c;&#x6240;&#x4ee5;&#xff0c",{"_index":5307,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["xff0c;&#x624d;&#x662f;&#x53ef;&#x80fd;&#x4f1a;&#x51fa;&#x73b0;&#x5728;&#x63a5;&#x6536;&#x5668;&#x58f0;&#x660e;&#x91cc;&#x7684;&#x4e24;&#x79cd;&#x63a5;&#x6536;&#x5668;&#x3002;&#x6b64;&#x5916;&#xff0c;&#x4e3a;&#x4e86;&#x907f;&#x514d;&#x6b67;&#x4e49;&#xff0c;&#x5728;&#x58f0;&#x660e;&#x65b9;&#x6cd5;&#x65f6;&#xff0c",{"_index":1134,"title":{},"body":{"basic/oop.html#方法":{}}}],["xff0c;&#x6253;&#x5370;&#x6bcf;&#x4e2a;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x7684;&#x540d;&#x5b57;&#x548c;&#x8fd0;&#x884c;&#x65f6;&#x95f4;&#x3002",{"_index":3166,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x6307;&#x5b9a;&#x4e00;&#x4e2a;&#x6b63;&#x5219;&#x8868;&#x8fbe;&#x5f0f;&#xff0c;&#x53ea;&#x6709;&#x5339;&#x914d;&#x5230;&#x7684;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#x540d;&#x624d;&#x4f1a;&#x88ab",{"_index":3167,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x6307;&#x5b9a;&#x7528;&#x4e8e;&#x8fd0;&#x884c;&#x6d4b;&#x8bd5;&#x7684;&#x53ef;&#x6267;&#x884c;&#x6587;&#x4ef6;&#x7684;&#x540d;&#x79f0;&#x3002;&#x8ffd;&#x52a0;&#x8be5;&#x6807;&#x8bb0;&#x4e0d;&#x4f1a;&#x5f71;&#x54cd;&#x6d4b;&#x8bd5;&#x4ee3;&#x7801;&#x7684;&#x8fd0;&#x884c;&#xff0c;&#x9664;&#x975e;&#x540c;&#x65f6;&#x8ffd;&#x52a0;&#x4e86;&#x6807;&#x8bb0",{"_index":3179,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x6307;&#x7684;&#x5c31;&#x662f;&#x5f53;&#x524d;&#x7a0b;&#x5e8f;&#x4e2d;&#x7684;&#x4e3b",{"_index":4840,"title":{},"body":{"concurrent/sync_lock.html#同步锁":{}}}],["xff0c;&#x65b9;&#x6cd5;&#x5185;&#x90e8;&#x5bf9",{"_index":1350,"title":{},"body":{"basic/pointer.html#为什么需要指针":{}}}],["xff0c;&#x65e0;&#x7b26;&#x53f7",{"_index":3777,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x65e0;&#x7b26;&#x53f7;&#x6574;&#x578b;&#xff0c;&#x7528;&#x4e8e;&#x5b58;&#x653e;&#x4e00;&#x4e2a;&#x6307;&#x9488;&#xff0c;&#x6ca1;&#x6709;&#x6307;&#x5b9a;&#x5177;&#x4f53;&#x7684",{"_index":3799,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x65e0;&#x9700;&#x4fee;&#x6539;&#x4f7f;&#x7528",{"_index":1142,"title":{},"body":{"basic/oop.html#方法":{}}}],["xff0c;&#x662f;&#x4e00;&#x4e2a;&#x516b;&#x8fdb;&#x5236;&#x7684;&#x65e0;&#x7b26;&#x53f7;&#x6574;&#x6570;&#xff0c;&#x5176;&#x6700;&#x4f4e;&#x7684",{"_index":4171,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff0c;&#x662f;&#x5bf9;&#x5e94;&#x6e90;&#x6587;&#x4ef6;&#x7ea7;&#x7684;&#x4f5c;&#x7528;&#x57df;&#xff0c;&#x53ea;&#x80fd;&#x5728;&#x5f53;&#x524d;&#x7684;&#x6e90;&#x6587;&#x4ef6;&#x4e2d;&#x8bbf;&#x95e",{"_index":2128,"title":{},"body":{"basic/scope.html#作用域":{}}}],["xff0c;&#x662f;&#x6709;&#x6761;&#x4ef6;&#x7684;&#x4ea4;&#x6362;&#x64cd;&#x4f5c;&#xff0c",{"_index":4987,"title":{},"body":{"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}],["xff0c;&#x6700;&#x540e",{"_index":5124,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x6700;&#x540e;&#x663e;&#x5f0f;&#x5730;&#x9000;&#x51fa;&#x5f53;&#x524d;&#x7684;&#x5faa;&#x73af;&#x3002;&#x5426;&#x5219;&#xff0c;&#x6211;&#x4eec;&#x5c31;&#x5148;&#x8ba9;&#x5f53;&#x524d;&#x7684",{"_index":4420,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x6709;&#x7b26;&#x53f7",{"_index":3780,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x6b64;&#x7c7b;&#x578b;&#x662f;&#x4e00;&#x4e2a",{"_index":4116,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff0c;&#x6bd4;&#x5982;&#x63a5;&#x6536;&#x8868;&#x8fbe;&#x5f0f;&#x3002",{"_index":2752,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff0c;&#x6bd4;&#x5982;&#xff1a",{"_index":216,"title":{},"body":{"index.html#空标识符":{}}}],["xff0c;&#x6d4b;&#x8bd5;&#x8986;&#x76d6;&#x7387;&#x3002",{"_index":3169,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x7136;&#x540e;&#x518d;&#x628a;&#x5b83;&#x4f5c;&#x4e3a;&#x7b2c;&#x4e00;&#x4e2a;&#x7ed3;&#x679c;&#x503c;&#x8fd4;&#x56de;&#x3002",{"_index":4098,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff0c;&#x7136;&#x540e;&#x5728;&#x6bcf;&#x4e00;&#x4e2a;&#x6709;&#x5e38;&#x91cf;&#x58f0;&#x660e;&#x7684",{"_index":1526,"title":{},"body":{"basic/constant.html#iota":{}}}],["xff0c;&#x7136;&#x540e;&#x628a;&#x5b83;&#x4f20;&#x7ed9;&#x4e86;&#x51fd;&#x6570",{"_index":2587,"title":{},"body":{"basic/function.html#传入函数的那些参数值后来怎么样了":{}}}],["xff0c;&#x751f;&#x6210;&#x7528;&#x4e8e;&#x8fd0;&#x884c;&#x6d4b;&#x8bd5;&#x7684;&#x53ef;&#x6267;&#x884c;&#x6587;&#x4ef6;&#xff0c;&#x4f46;&#x4e0d;&#x6267;&#x884c;&#x5b83;&#x3002;&#x8fd9;&#x4e2a;&#x53ef;&#x6267;&#x884c;&#x6587;&#x4ef6;&#x4f1a;&#x88ab;&#x547d;&#x540d;&#x4e3a",{"_index":3174,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x7528;&#x4e8e;&#x4e2d;&#x65ad;&#x5f53;&#x524d",{"_index":592,"title":{},"body":{"basic/flow.html#for":{}}}],["xff0c;&#x7528;&#x5b8c;&#x4e86;&#x518d;&#x7b49;&#x5f85",{"_index":5283,"title":{},"body":{"concurrent/sync_lock.html#临时对象池-sync-Pool":{}}}],["xff0c;&#x76f4;&#x5230;&#x5176;&#x6240;&#x5c5e;&#x503c;&#x4e2d;&#x7684;&#x8ba1;&#x6570;&#x5668;&#x5f52;&#x96f6",{"_index":5056,"title":{},"body":{"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["xff0c;&#x76f4;&#x63a5;&#x5b89;&#x88c5;&#x3002",{"_index":2304,"title":{},"body":{"basic/env_config.html#安装":{}}}],["xff0c;&#x800c;&#x540d;&#x79f0;&#x90fd;&#x4e3a",{"_index":5193,"title":{},"body":{"concurrent/sync_lock.html#context-Context-类型":{}}}],["xff0c;&#x82e5;&#x62ff;&#x5230;&#x67d0;&#x503c;&#x7684;&#x6307;&#x9488;&#x53ef;&#x80fd;&#x4f1a;&#x7834;&#x574f;&#x7a0b;&#x5e8f;&#x7684;&#x4e00;&#x81f4;&#x6027;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x662f;&#x4e0d;&#x5b89;&#x5168;&#x7684;&#x3002;&#x7531;&#x4e8e;&#x5b57;&#x5178;&#x7684;&#x5185;&#x90e8;&#x673a;&#x5236;&#xff0c;&#x5bf9;&#x5b57;&#x5178;&#x7684;&#x7d22",{"_index":1383,"title":{},"body":{"basic/pointer.html#哪些值是不可寻址的":{}}}],["xff0c;&#x8868;&#x793a;&#x8be5;&#x51fd;&#x6570;&#x4f1a;&#x63a5;&#x6536;&#x4efb;&#x610f;&#x6570;&#x91cf;&#x7684;&#x8be5;&#x7c7b;&#x578b;&#x53c2;&#x6570;&#x3002",{"_index":2522,"title":{},"body":{"basic/function.html#可变参数":{}}}],["xff0c;&#x8981;&#x4fee;&#x6539;&#x5b57;&#x7b26;&#x4e32;&#xff0c;&#x5fc5;&#x987b;&#x5c06;&#x5176;&#x8f6c;&#x4e3a;&#x53ef;&#x53d8;&#x7c7b;&#x578b;&#xff08",{"_index":3815,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x8be5;&#x53c2;&#x6570;&#x7528;&#x4e8e;&#x4ee3;&#x8868;&#x5c06;&#x8981;&#x6269;&#x5145;&#x7684;&#x5b57;&#x8282;&#x6570;&#x91cf;&#x3002",{"_index":3904,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x8df3;&#x8fc7;&#x5f53;&#x524d;&#x5faa;&#xff0c;&#x7ee7;&#x7eed;&#x8fdb;&#x884c;&#x4e0b;&#x4e00;&#x8f6e;&#x5faa;&#x73af;&#x3002",{"_index":595,"title":{},"body":{"basic/flow.html#for":{}}}],["xff0c;&#x8fd0;&#x884c;&#x57fa;&#x51c6;&#x6d4b;&#x8bd5;&#x3002;&#x4f8b;&#x5982",{"_index":3170,"title":{},"body":{"basic/test.html#测试":{}}}],["xff0c;&#x8fd4;&#x56de",{"_index":1960,"title":{},"body":{"basic/map.html#map":{}}}],["xff0c;&#x8fd8;&#x62e5;&#x6709;&#x5f3a;&#x5927;&#x7684;&#x7528;&#x4e8e;&#x8c03;&#x5ea6",{"_index":4278,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{}}}],["xff0c;&#x8fd9;&#x4e2a",{"_index":2326,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["xff0c;&#x8fd9;&#x4e2a;&#x5c5e;&#x6027;&#x53ef;&#x4ee5;&#x5d4c;&#x5957;&#x5bfc;&#x822a;&#x9879;&#x3002",{"_index":3665,"title":{},"body":{"theme/theme-usage.html#Sidebar":{}}}],["xff0c;&#x8fd9;&#x4e2a;&#x6807;&#x8bb0;&#x7528;&#x4e8e;&#x8868;&#x660e;&#x9700;&#x8981;&#x6267;&#x884c;&#x54ea;&#x4e9b;&#x529f;&#x80fd;&#x6d4b;&#x8bd5;&#x51fd;&#x6570;&#xff0c;&#x8fd9;&#x540c;&#x6837;&#x4e5f;&#x662f;&#x4ee5;&#x51fd;&#x6570;&#x540d;&#x79f0;&#x4e3a;&#x4f9d;&#x636e;&#x7684;&#x3002;&#x8be5;&#x6807;&#x8bb0;&#x7684;&#x503c",{"_index":3258,"title":{},"body":{"basic/test.html#性能测试的测试结果":{}}}],["xff0c;&#x8fd9;&#x65f6;&#x5019;&#x53bb;&#x626b;&#x63cf;&#x80af;&#x5b9a;&#x662f;&#x5b89;&#x5168;&#x7684;&#xff0c",{"_index":849,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["xff0c;&#x8fd9;&#x662f;&#x53e6;&#x4e00;&#x79cd;&#x903b;&#x8f91;&#x5220;&#x9664;&#x7684;&#x65b9;&#x5f0f;&#x3002",{"_index":5360,"title":{},"body":{"concurrent/sync_lock.html#sync-Map":{}}}],["xff0c;&#x8fd9;&#x662f;&#x56e0;&#x4e3a",{"_index":2681,"title":{},"body":{"concurrent/channel.html#channel":{}}}],["xff0c;&#x8fd9;&#x662f;&#x963b;&#x585e;&#x5f0f;&#x7684;&#x3002",{"_index":866,"title":{},"body":{"advance/gc.html#垃圾回收":{}}}],["xff0c;&#x8fd9;&#x79cd;&#x60c5;&#x51b5;&#x4e0b;&#x5305;&#x540d;&#x662f",{"_index":1630,"title":{},"body":{"basic/package.html#包声明":{}}}],["xff0c;&#x8fd9;&#x91cc",{"_index":301,"title":{},"body":{"index.html#类型断言":{}}}],["xff0c;&#x901a;&#x5e38;&#x7528;&#x4e8e;&#x8868;&#x793a;&#x4e00;&#x4e2a",{"_index":3796,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;&#x907f;&#x514d;&#x56e0;&#x4e3a;&#x590d;&#x5236;&#x9020;&#x6210;&#x9501;&#x64cd;&#x4f5c;&#x65e0;&#x6548;&#x3002",{"_index":1150,"title":{},"body":{"basic/oop.html#方法":{}}}],["xff0c;&#x907f;&#x514d;&#x7f16;&#x8bd1;&#x5668;&#x5206;&#x6790;&#x9519;&#x8bef",{"_index":268,"title":{},"body":{"index.html#类型转换":{}}}],["xff0c;&#x90a3;&#x4e48;&#x5c31;&#x5728;&#x5524;&#x9192;&#x5b83;&#x4e4b;&#x540e;&#x91cd;&#x65b0;&#x9501;&#x5b9a;&#x5f53;&#x524d;&#x6761;&#x4ef6;&#x53d8;&#x91cf;&#x57fa;&#x4e8e;&#x7684;&#x4e92;&#x65a5;&#x9501;&#x3002;&#x81ea;&#x6b64;&#x4e4b;&#x540e;&#xff0c;&#x5f53;&#x524d",{"_index":4909,"title":{},"body":{"concurrent/sync_lock.html#条件变量-sync-Cond":{}}}],["xff0c;&#x90fd;&#x662f;&#x5982;&#x6b64;&#x3002",{"_index":3998,"title":{},"body":{"basic/basic_data.html#字符串":{}}}],["xff0c;&#x90fd;&#x6709;&#x826f;&#x597d;&#x7684;&#x652f;&#x6301;&#xff0c",{"_index":1439,"title":{},"body":{"basic/json.html#序列化":{}}}],["xff0c;&#x957f;&#x5ea6;&#x4e3a",{"_index":2058,"title":{},"body":{"basic/slice.html#slice":{}}}],["xff0c;go",{"_index":468,"title":{},"body":{"basic/array.html#数组":{},"basic/var.html#简短声明":{}}}],["xff0c;ieee",{"_index":3784,"title":{},"body":{"basic/basic_data.html#数值类型":{}}}],["xff0c;linux",{"_index":2337,"title":{},"body":{"basic/env_config.html#工作区":{}}}],["xff1a",{"_index":937,"title":{},"body":{"basic/error.html#error-类型":{},"basic/oop.html#封装":{},"basic/pointer.html#为什么需要指针":{},"basic/json.html#序列化":{},"basic/constant.html#常量":{},"basic/map.html#map":{},"basic/slice.html#slice":{},"concurrent/channel.html#channel":{},"basic/test.html#测试函数":{},"basic/test.html#覆盖率":{},"basic/test.html#基准测试":{},"packages/io.html#io包中的接口和工具":{},"packages/io.html#bufio包中的数据类型":{},"theme/theme-usage.html#Quick-Start":{},"concurrent/sync_lock.html#sync-WaitGroup":{}}}],["xff1a;&#x4e3a;&#x6240;&#x6709",{"_index":418,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["xff1a;&#x5728;&#x6253;&#x5f00;&#x7684;&#x6587;&#x4ef6;&#x4e4b;&#x4e0a;&#x5b9e;&#x65bd;&#x540c;&#x6b65",{"_index":4148,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff1a;&#x591a;&#x4e2a;&#x5730;&#x5740;&#x8fde;&#x7eed;&#x7684",{"_index":395,"title":{},"body":{"advance/mm.html#内存块":{}}}],["xff1a;&#x5982;&#x679c;&#x5bf9;&#x5e94",{"_index":1892,"title":{},"body":{"basic/operator.html#位运算符":{}}}],["xff1a;&#x5982;&#x679c;&#x6587;&#x4ef6;&#x5df2;&#x5b58;&#x5728;&#xff0c;&#x5e76;&#x4e14;&#x662f;&#x5e38;&#x89c4;&#x7684;&#x6587;&#x4ef6;&#xff0c;&#x90a3;&#x4e48;&#x5c31;&#x5148;&#x6e05;&#x7a7a;&#x5176;&#x4e2d;&#x5df2;&#x7ecf;&#x5b58;&#x5728;&#x7684;&#x4efb;&#x4f55;&#x5185;&#x5bb9;&#x3002",{"_index":4150,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff1a;&#x5c06",{"_index":398,"title":{},"body":{"advance/mm.html#内存块":{}}}],["xff1a;&#x5f53;&#x5411;&#x6587;&#x4ef6;&#x4e2d;&#x5199;&#x5165;&#x5185;&#x5bb9;&#x65f6;&#xff0c;&#x628a;&#x65b0;&#x5185;&#x5bb9;&#x8ffd;&#x52a0;&#x5230;&#x73b0;&#x6709;&#x5185;&#x5bb9;&#x7684;&#x540e;&#x8fb9;&#x3002",{"_index":4144,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff1a;&#x5f53;&#x7ed9;&#x5b9a;&#x8def;&#x5f84;&#x4e0a;&#x7684;&#x6587;&#x4ef6;&#x4e0d;&#x5b58;&#x5728;&#x65f6;&#xff0c;&#x521b;&#x5efa;&#x4e00;&#x4e2a;&#x65b0;&#x6587;&#x4ef6;&#x3002",{"_index":4145,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff1a;&#x6b64;&#x63a5;&#x53e3;&#x65e2;&#x662f",{"_index":3488,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["xff1a;&#x6b64;&#x63a5;&#x53e3;&#x7684;&#x7279;&#x70b9;&#x662f;&#x62e5;&#x6709;&#x4e00;&#x4e2a;&#x7528;&#x4e8e;&#x5bfb;&#x627e;&#x8bfb;&#x5199;&#x4f4d;&#x7f6e;&#x7684;&#x57fa;&#x672c;&#x65b9;&#x6cd5",{"_index":3495,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["xff1a;&#x6b64;&#x63a5;&#x53e3;&#x9664;&#x4e86;&#x5305;&#x542b;&#x57fa;&#x672c;&#x7684;&#x5b57;&#x8282;&#x5e8f;&#x5217;&#x8bfb;&#x53d6;&#x65b9;&#x6cd5;&#x4e4b;&#x5916;&#xff0c;&#x8fd8;&#x62e5;&#x6709;&#x4e00;&#x4e2a;&#x57fa;&#x672c;&#x7684;&#x5173;&#x95ed;&#x65b9;&#x6cd5",{"_index":3490,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["xff1a;&#x6b64;&#x7c7b;&#x578b;&#x4e3a;&#x4e00;&#x4e2a;&#x5305;&#x7ea7;&#x79c1;&#x6709;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#xff0c;&#x5b83;&#x6bd4;&#x4e0a;&#x8ff0;&#x7c7b;&#x578b;&#x90fd;&#x8981;&#x590d;&#x6742;&#x5f97;&#x591a;&#x3002;&#x5b83;&#x4e0d;&#x4f46;&#x5b9e;&#x73b0;&#x4e86",{"_index":3512,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["xff1a;&#x6b64;&#x7c7b;&#x578b;&#x4e5f;&#x662f;&#x4e00;&#x4e2a;&#x5305;&#x7ea7;&#x79c1;&#x6709;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#x3002;&#x7c7b;&#x4f3c;&#x7684;&#xff0c;io&#x5305;&#x4e2d;&#x6709;&#x4e00;&#x4e2a;&#x540d;&#x4e3a",{"_index":3507,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["xff1a;&#x6b64;&#x7c7b;&#x578b;&#x53ef;&#x4ee5;&#x88ab;&#x89c6;&#x4e3a",{"_index":3520,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["xff1a;&#x6b64;&#x7c7b;&#x578b;&#x662f;&#x4e00;&#x4e2a;&#x5305;&#x7ea7;&#x79c1;&#x6709;&#x7684;&#x6570;&#x636e;&#x7c7b;&#x578b;&#xff0c;&#x4e5f;&#x662f;io.teereader&#x51fd;&#x6570;&#x7ed3;&#x679c;&#x503c;&#x7684;&#x5b9e;&#x9645;&#x7c7b;&#x578b;&#x3002;&#x8fd9;&#x4e2a;&#x51fd;&#x6570;&#x63a5;&#x53d7;&#x4e24;&#x4e2a;&#x53c2;&#x6570;r&#x548c;w&#xff0c;&#x7c7b;&#x578b;&#x5206;&#x522b;&#x662f",{"_index":3506,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["xff1a;&#x6b64;&#x7c7b;&#x578b;&#x7684;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x4f1a;&#x5305;&#x88c5",{"_index":3501,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["xff1a;&#x6b64;&#x7c7b;&#x578b;&#x7684;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x53ef;&#x4ee5;&#x5305;&#x88c5",{"_index":3503,"title":{},"body":{"packages/io.html#io包中的接口和工具":{}}}],["xff1a;&#x7ba1;&#x7406;&#x95f2;&#x7f6e;&#x7684",{"_index":421,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["xff1a;&#x8fd0;&#x884c;&#x671f;&#x7684;&#x6bcf;&#x4e2a;&#x7ebf;&#x7a0b;&#x90fd;&#x4f1a;&#x7ed1;&#x5b9a;&#x4e00;&#x4e2a",{"_index":415,"title":{},"body":{"advance/mm.html#tcmalloc":{}}}],["xff1a;&#x9700;&#x8981;&#x4e0",{"_index":4146,"title":{},"body":{"packages/os.html#os包中的API":{}}}],["xff1b",{"_index":570,"title":{},"body":{"basic/flow.html#for":{},"basic/test.html#性能分析":{},"packages/io.html#bufio包中的数据类型":{}}}],["xff1b;&#x88ab;&#x4f20;&#x5165;&#x51fd;&#x6570;&#x7684;&#x53c2;&#x6570;&#x503c;&#x90fd;&#x4f1a;&#x88ab;&#x590d;&#x5236;&#xff0c;&#x50cf;&#x8fd9;&#x79cd;&#x57fa;&#x672c;&#x7c7b;&#x578b;&#x7684;&#x503c;&#x4e00;&#x65e6;&#x88ab;&#x4f20;&#x5165;&#x51fd;&#x6570;&#xff0c",{"_index":4977,"title":{},"body":{"concurrent/sync_lock.html#原子操作":{}}}],["xff1f",{"_index":4355,"title":{},"body":{"concurrent/goroutine.html#goroutine-1":{},"concurrent/sync_lock.html#同步锁":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{},"concurrent/sync_lock.html#sync-Once":{}}}],["xml",{"_index":1386,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{},"commands/build.html":{},"commands/build.html#工具":{}}}],["xx",{"_index":3718,"title":{},"body":{"basic/basic_data.html":{},"basic/basic_data.html#字符串":{}}}],["xxx",{"_index":2212,"title":{},"body":{"basic/env_config.html":{},"basic/env_config.html#Go-Module":{}}}],["y",{"_index":1076,"title":{},"body":{"basic/oop.html":{},"basic/oop.html#嵌入结构体扩展类型":{},"basic/pointer.html":{},"basic/pointer.html#为什么需要指针":{},"basic/struct.html":{},"basic/struct.html#结构体字面值":{},"basic/struct.html#结构体比较":{},"basic/struct.html#结构体嵌入-匿名成员":{},"basic/var.html":{},"basic/var.html#简短声明":{},"basic/var.html#赋值":{},"basic/operator.html":{},"basic/operator.html#位运算符":{},"basic/reflect.html":{},"basic/reflect.html#reflect-TypeOf":{},"basic/function.html":{},"basic/function.html#声明函数":{},"basic/function.html#函数作为参数":{},"concurrent/channel.html":{},"concurrent/channel.html#channel":{},"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["y&#xff0c;&#x8fd9;&#x91cc;&#x7684;&#x7b80;&#x77ed;&#x58f0;&#x660",{"_index":1834,"title":{},"body":{"basic/var.html#简短声明":{}}}],["y+3",{"_index":1808,"title":{},"body":{"basic/var.html":{},"basic/var.html#赋值":{}}}],["y:0",{"_index":4664,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["y:1",{"_index":4667,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#同步锁":{}}}],["yaml",{"_index":1556,"title":{},"body":{"basic/package.html":{},"basic/package.html#包声明":{}}}],["yarn",{"_index":3598,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["year",{"_index":1395,"title":{},"body":{"basic/json.html":{},"basic/json.html#序列化":{}}}],["z",{"_index":1861,"title":{},"body":{"basic/operator.html":{},"basic/operator.html#位运算符":{}}}],["zappr.yaml",{"_index":3597,"title":{},"body":{"theme/theme-usage.html":{},"theme/theme-usage.html#Quick-Start":{}}}],["zero",{"_index":4697,"title":{},"body":{"concurrent/sync_lock.html":{},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{}}}]],"pipeline":["stemmer"]},"store":{"index.html":{"title":"Golang 介绍","path":"\\golang-learn\\index.html","body":"Golang 介绍 Go 语言非常简单，只有 25 个关键字： var 和 const 声明变量和常量 package 和 import 声明所属包名和导入包。 func 用于定义函数和方法 return 用于从函数返回 defer 用于类似析构函数 go 用于并发 select 用于选择不同类型的通讯 interface 用于定义接口 struct 用于定义抽象数据类型 break 、 case 、 continue 、 for 、 fallthrough 、 else 、 if 、 switch 、 goto 、 default 流程控制语句 chan 用于 channel 通讯 type 用于声明自定义类型 map 用于声明 map 类型数据 range 用于读取 slice 、 map 、 channel 数据 数据类型 Go 语言的四类数据类型 基础类型，数值、字符串和布尔型 复合类型，数组和结构体 引用类型，指针、切片、字典、函数、通道 接口类型 三种文件 命令源码文件，如果一个源码文件声明属于 main 包，并且包含一个无参数声明且无结果声明的 main 函数，那么它就是命令源码文件。 库源码文件，库源码文件是不能被直接运行的源码文件，它仅用于存放程序实体，这些程序实体可以被其他代码使用 测试源码文件 package 在写 Go 语言的代码时，每个文件的头部都有一行 package 声明语句。比如 package main 。这个声明表示这个源 文件属于哪个包（类似其他语言的 modules 或者 libraries ）。 Go 语言的代码就是通过这个 package 来组织。 注释 使用 // 添加注释。一般我们会在包声明前添加注释，来对整个包挥着程序做整体的描述。 行分隔符 Go 中，一行代表一个语句结束，不需要以分号 ; 结尾。多个语句写在同一行，则必须使用 ; （不推荐使用）。 os.Args 程序的命令行参数可使用 os.Args 访问。 os.Args 是一个字符串的切片。我们打印看一下： 1 2 3 4 5 6 7 8 9 10 11 12 13 package main import ( \"fmt\" \"os\" ) // ++ 和 -- 都只能放在变量名,如 i ++ func main ()  for i := 1 ; i  len (os.Args); i ++  \tfmt.Println(os.Args[i])   然后运行： 1 go run args1.go arg1 arg2 arg3 空标识符 _ 代表空标识符， Go 不允许有无用的变量，空标识符可以作为忽略占位符 ，比如： 1 2 3 4 5 var s, sep string for _, arg := range os.Args[ 1 :]  \ts += sep + arg \tsep = \" \"  命名 所有命名只能以字母或者 _ 开头，可以包含字母，数字或者 _ 。区分大小写。 关键字不能定义变量名，如 func ， default 。 注意：函数内部定义的，只能在函数内部使用（函数级），在函数外部定义的（包级），可以在当前包的所有文件中是使用。 并且，是在函数外定义的名字，如果以大写字母开头，那么会被导出，也就是在包的外部也可以访问，所以定义名字时，要注意大小写。 声明 var 声明变量 const 声明常量 type 声明类型 func 声明函数 每个文件以 package 声明语句。比如 package main 。 make 和 new make 只能用于内建类型（ map 、 slice 和 channel ）的内存分配。 new 用于各种类型的内存分配 。 make 返回初始化后的（非零）值， new 返回指针 。 new 函数可以为引用类型分配内存，但这是不完整的创建。比如 map ，它仅分配了字典本身需要的内存，但是并没有为 字典内的健值对分配内存，因此无法正常工作 。 类型转换 Go 强制使用显示类型转换 。这样可以确定语句和表达式的明确含义。 类型转换在编译期完成，包括强制转换和隐式转换 。 1 2 3 a := 10 b := byte (a) c := a + int (b) // 混合类型表达式必须保证类型一致 类型转换用于将一种数据类型的变量转换为另外一种类型的变量： 1 类型名(表达式) 实例： 1 2 3 4 5 6 var sum int = 17 var count int = 5 var mean float32 mean = float32 (sum)/ float32 (count) fmt.Printf( \"mean 的值为: %f\\n\" ,mean) 对于整数类型值、整数常量之间的类型转换，原则上只要源值在目标类型的可表示范围内就是合法的。比如， uint8(255) 可以把无类型的常量 255 转换为 uint8 类型的值，是因为 255 在 [0, 255] 的范围内。 这种类型转换主要在 切换同一基础类型不同精度范围 时使用，比如我们要将 int 型转为 int64 类型时。 1 2 3 a := 100 b := byte (a) c := a + int (b) 混合类型表达式，类型必须保持一致 在 Go 中，非布尔值不能当做 true/false 使用，这点和我常用的js不同： 1 2 3 4 5 x := 100 if x  // 错误 x 不是布尔值  如果 要转换为指针类型，或者单向 channel ，或者函数，要给类型加上 () ，避免编译器分析错误 ，如： 1 2 3 4 5 6 x := 100 (* int )(&amp;x) // *int 加括号，否则会被解析为*(int(&amp;x)) (- channel int )(c) ( func () ) (f) ( func () int ) (f) // 有返回值的函数其实可以不加括号，但是加括号的话，语义清晰 自定义类型 使用 type 自定义类型，一般出现在包一级，与变量一样，如果类型名字的首字母是大写，则在包外部也可以使用： 1 type 类型名字 底层类型 如不同温度单位分别定义为不同的类型： 1 2 3 4 5 6 7 8 9 10 11 12 type Celsius float64 // 摄氏温度 type Fahrenheit float64 // 华氏温度 const ( \tAbsoluteZeroC Celsius = -273.15 // 绝对零度 \tFreezingC Celsius = 0 // 结冰点温度 \tBoilingC Celsius = 100 // 沸水温度 ) func CToF (c Celsius) Fahrenheit  return Fahrenheit(c* 9 / 5 + 32 )  func FToC (f Fahrenheit) Celsius  return Celsius((f - 32 ) * 5 / 9 )  自定义类型虽然置顶了底层类型，但是只是底层数据结构相同，不会继承底层类型的其他信息，比如（方法）。 不能隐式转换，不能直接用于比较表达式 。 1 2 3 4 5 6 type data int var d data = 10 var x int = d // 错误：cannot use d (type data) as type int in assignment fmt.Println(d == x) // 错误：invalid operation: d == x (mismatched types data and int) 未命名类型 比如数组，切片，字典，通道等类型与内部具体的元素类型和长度等属性有关，所以叫做 未命名类型 （unnamed type）。 类型断言 断言，顾名思义就是果断的去猜测一个未知的事物。在 go 语言中， interface{} 就是这个神秘的未知类型，其 断言操作就是用来 判断 interface{} 的类型 。因为 interface{} 是个未知类型，在编译时无法确定，所以类型断言在运行时确定。 Go 语言里面有一个语法，可以直接 判断是否是该类型的变量： value, ok = x.(T) ，这里 value 就是变量的值， ok 是 一个 bool 类型， x 是 interface{} 变量， T 是断言的类型。 该语法返回两个参数，第一个参数是 x 转化为 T 类型后的变量，第二个值是一个布尔值，若为 true 则表示断言成功， false 则表示断言失败。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // comma-ok for index, element := range list  \t if value, ok := element.( int ); ok  \t\tfmt.Printf( \"list[%d] is an int and its value is %d\\n\" , index, value) \t else if value, ok := element.( string ); ok  \t\tfmt.Printf( \"list[%d] is a string and its value is %s\\n\" , index, value) \t else if value, ok := element.(Person); ok  \t\tfmt.Printf( \"list[%d] is a Person and its value is %s\\n\" , index, value) \t else  \t\tfmt.Printf( \"list[%d] is of a different type\\n\" , index) \t  // 或者 使用 switch for index, element := range list \t switch value := element.( type )  \t\t case int : \t\t\tfmt.Printf( \"list[%d] is an int and its value is %d\\n\" , index, value) \t\t case string : \t\t\tfmt.Printf( \"list[%d] is a string and its value is %s\\n\" , index, value) \t\t case Person: \t\t\tfmt.Printf( \"list[%d] is a Person and its value is %s\\n\" , index, value) \t\t default : \t\t\tfmt.Println( \"list[%d] is of a different type\" , index) \t  注意， x.(type) 语法不能在 switch 外的任何逻辑里面使用，如果你要在 switch 外面判断一个类型就使用 comma-ok 。 生命周期 对于在包一级声明的变量，它们的生命周期和程序的运行周期是一致的。 局部变量（包括函数的参数和返回值也是局部变量）的生命周期则是动态的：每次从创建一个新变量的声明语句开始， 直到该变量不再被引用为止，然后变量的存储空间可能被回收。 编码 Go 语言的源码文件必须使用 UTF-8 编码格式进行存储。如果源码文件中出现了非 UTF-8 编码的字符，那么在构建、安装以及运行的时候， go 命令就会报告错误“illegal UTF-8 encoding”。 ASCII 编码 ASCII 是英文“American Standard Code for Information Interchange”的缩写，中文译为美国信息交换标准代码。 ASCII 编码方案使用单个字节（byte）的二进制数来编码一个字符。标准的 ASCII 编码用一个字节的最高比特（bit）位作为奇偶校验位， 而扩展的 ASCII 编码则将此位也用于表示字符。ASCII 编码支持的可打印字符和控制字符的集合也被叫做 ASCII 编码集。 unicode 编码 unicode 编码规范，实际上是另一个更加通用的、针对书面字符和文本的字符编码标准。它为世界上现存的所有自然语言中的每一个字符， 都设定了一个唯一的二进制编码 。它定义了不同自然语言的文本数据在国际间交换的统一方式，并为全球化软件创建了一个重要的基础。 Unicode 编码规范通常使用十六进制表示法来表示 Unicode 代码点的整数值，并使用“U+”作为前缀。比如，英文字母字符“a”的 Unicode 代码点是 U+0061 。在 Unicode 编码规范中，一个字符能且只能由与它对应的那个代码点表示。 Unicode 编码规范提供了三种不同的编码格式，即： UTF-8 、 UTF-16 和 UTF-32 。其中的 UTF 是 UCS Transformation Format 的缩写。 而 UCS 又是 Universal Character Set 的缩写，但也可以代表 Unicode Character Set。所以，UTF 也可以被翻译为 Unicode 转换格式。 它代表的是字符与字节序列之间的转换方式。 在这几种编码格式的名称中， “-”右边的整数的含义是，以多少个比特位作为一个编码单元 。以 UTF-8 为例，它会以 8 个比特，也就是一个字节， 作为一个编码单元。它与标准的 ASCII 编码是完全兼容的。也就是说，在 [0x00, 0x7F] 的范围内，这两种编码表示的字符都是相同的。 这也是 UTF-8 编码格式的一个巨大优势。 UTF-8 是一种可变宽的编码方案 。换句话说， 它会用一个或多个字节的二进制数来表示某个字符，最多使用四个字节 。比如，对于一个英文字符， 它仅用一个字节的二进制数就可以表示，而对于一个中文字符，它需要使用三个字节才能够表示。不论怎样，一个受支持的字符总是可以由 UTF-8 编码 为一个字节序列。以下会简称后者为 UTF-8 编码值。"},"index.html#Golang-介绍":{"title":"Golang &#x4ECB;&#x7ECD;","path":"\\golang-learn\\index.html#Golang-介绍","body":"Go &#x8BED;&#x8A00;&#x975E;&#x5E38;&#x7B80;&#x5355;&#xFF0C;&#x53EA;&#x6709; 25 &#x4E2A;&#x5173;&#x952E;&#x5B57;&#xFF1A; var &#x548C; const &#x58F0;&#x660E;&#x53D8;&#x91CF;&#x548C;&#x5E38;&#x91CF; package &#x548C; import &#x58F0;&#x660E;&#x6240;&#x5C5E;&#x5305;&#x540D;&#x548C;&#x5BFC;&#x5165;&#x5305;&#x3002; func &#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x51FD;&#x6570;&#x548C;&#x65B9;&#x6CD5; return &#x7528;&#x4E8E;&#x4ECE;&#x51FD;&#x6570;&#x8FD4;&#x56DE; defer &#x7528;&#x4E8E;&#x7C7B;&#x4F3C;&#x6790;&#x6784;&#x51FD;&#x6570; go &#x7528;&#x4E8E;&#x5E76;&#x53D1; select &#x7528;&#x4E8E;&#x9009;&#x62E9;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x901A;&#x8BAF; interface &#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x63A5;&#x53E3; struct &#x7528;&#x4E8E;&#x5B9A;&#x4E49;&#x62BD;&#x8C61;&#x6570;&#x636E;&#x7C7B;&#x578B; break &#x3001; case &#x3001; continue &#x3001; for &#x3001; fallthrough &#x3001; else &#x3001; if &#x3001; switch &#x3001; goto &#x3001; default &#x6D41;&#x7A0B;&#x63A7;&#x5236;&#x8BED;&#x53E5; chan &#x7528;&#x4E8E; channel &#x901A;&#x8BAF; type &#x7528;&#x4E8E;&#x58F0;&#x660E;&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B; map &#x7528;&#x4E8E;&#x58F0;&#x660E; map &#x7C7B;&#x578B;&#x6570;&#x636E; range &#x7528;&#x4E8E;&#x8BFB;&#x53D6; slice &#x3001; map &#x3001; channel &#x6570;&#x636E;"},"index.html#数据类型":{"title":"&#x6570;&#x636E;&#x7C7B;&#x578B;","path":"\\golang-learn\\index.html#数据类型","body":"Go &#x8BED;&#x8A00;&#x7684;&#x56DB;&#x7C7B;&#x6570;&#x636E;&#x7C7B;&#x578B; &#x57FA;&#x7840;&#x7C7B;&#x578B;&#xFF0C;&#x6570;&#x503C;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5E03;&#x5C14;&#x578B; &#x590D;&#x5408;&#x7C7B;&#x578B;&#xFF0C;&#x6570;&#x7EC4;&#x548C;&#x7ED3;&#x6784;&#x4F53; &#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF0C;&#x6307;&#x9488;&#x3001;&#x5207;&#x7247;&#x3001;&#x5B57;&#x5178;&#x3001;&#x51FD;&#x6570;&#x3001;&#x901A;&#x9053; &#x63A5;&#x53E3;&#x7C7B;&#x578B;"},"index.html#三种文件":{"title":"&#x4E09;&#x79CD;&#x6587;&#x4EF6;","path":"\\golang-learn\\index.html#三种文件","body":"&#x547D;&#x4EE4;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x58F0;&#x660E;&#x5C5E;&#x4E8E; main &#x5305;&#xFF0C;&#x5E76;&#x4E14;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x65E0;&#x53C2;&#x6570;&#x58F0;&#x660E;&#x4E14;&#x65E0;&#x7ED3;&#x679C;&#x58F0;&#x660E;&#x7684; main &#x51FD;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5C31;&#x662F;&#x547D;&#x4EE4;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x3002; &#x5E93;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#xFF0C;&#x5E93;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x662F;&#x4E0D;&#x80FD;&#x88AB;&#x76F4;&#x63A5;&#x8FD0;&#x884C;&#x7684;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#xFF0C;&#x5B83;&#x4EC5;&#x7528;&#x4E8E;&#x5B58;&#x653E;&#x7A0B;&#x5E8F;&#x5B9E;&#x4F53;&#xFF0C;&#x8FD9;&#x4E9B;&#x7A0B;&#x5E8F;&#x5B9E;&#x4F53;&#x53EF;&#x4EE5;&#x88AB;&#x5176;&#x4ED6;&#x4EE3;&#x7801;&#x4F7F;&#x7528; &#x6D4B;&#x8BD5;&#x6E90;&#x7801;&#x6587;&#x4EF6;"},"index.html#package":{"title":"package","path":"\\golang-learn\\index.html#package","body":"&#x5728;&#x5199; Go &#x8BED;&#x8A00;&#x7684;&#x4EE3;&#x7801;&#x65F6;&#xFF0C;&#x6BCF;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x5934;&#x90E8;&#x90FD;&#x6709;&#x4E00;&#x884C; package &#x58F0;&#x660E;&#x8BED;&#x53E5;&#x3002;&#x6BD4;&#x5982; package main &#x3002;&#x8FD9;&#x4E2A;&#x58F0;&#x660E;&#x8868;&#x793A;&#x8FD9;&#x4E2A;&#x6E90; &#x6587;&#x4EF6;&#x5C5E;&#x4E8E;&#x54EA;&#x4E2A;&#x5305;&#xFF08;&#x7C7B;&#x4F3C;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x7684; modules &#x6216;&#x8005; libraries &#xFF09;&#x3002; Go &#x8BED;&#x8A00;&#x7684;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x901A;&#x8FC7;&#x8FD9;&#x4E2A; package &#x6765;&#x7EC4;&#x7EC7;&#x3002;"},"index.html#注释":{"title":"&#x6CE8;&#x91CA;","path":"\\golang-learn\\index.html#注释","body":"&#x4F7F;&#x7528; // &#x6DFB;&#x52A0;&#x6CE8;&#x91CA;&#x3002;&#x4E00;&#x822C;&#x6211;&#x4EEC;&#x4F1A;&#x5728;&#x5305;&#x58F0;&#x660E;&#x524D;&#x6DFB;&#x52A0;&#x6CE8;&#x91CA;&#xFF0C;&#x6765;&#x5BF9;&#x6574;&#x4E2A;&#x5305;&#x6325;&#x7740;&#x7A0B;&#x5E8F;&#x505A;&#x6574;&#x4F53;&#x7684;&#x63CF;&#x8FF0;&#x3002;"},"index.html#行分隔符":{"title":"&#x884C;&#x5206;&#x9694;&#x7B26;","path":"\\golang-learn\\index.html#行分隔符","body":"Go &#x4E2D;&#xFF0C;&#x4E00;&#x884C;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x8BED;&#x53E5;&#x7ED3;&#x675F;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x4EE5;&#x5206;&#x53F7; ; &#x7ED3;&#x5C3E;&#x3002;&#x591A;&#x4E2A;&#x8BED;&#x53E5;&#x5199;&#x5728;&#x540C;&#x4E00;&#x884C;&#xFF0C;&#x5219;&#x5FC5;&#x987B;&#x4F7F;&#x7528; ; &#xFF08;&#x4E0D;&#x63A8;&#x8350;&#x4F7F;&#x7528;&#xFF09;&#x3002;"},"index.html#os-Args":{"title":"os.Args","path":"\\golang-learn\\index.html#os-Args","body":"&#x7A0B;&#x5E8F;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x53EF;&#x4F7F;&#x7528; os.Args &#x8BBF;&#x95EE;&#x3002; os.Args &#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5207;&#x7247;&#x3002;&#x6211;&#x4EEC;&#x6253;&#x5370;&#x770B;&#x4E00;&#x4E0B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 package main import ( fmt os ) // ++ &#x548C; -- &#x90FD;&#x53EA;&#x80FD;&#x653E;&#x5728;&#x53D8;&#x91CF;&#x540D;,&#x5982; i ++ func main () { for i := 1 ; i  len (os.Args); i ++ { \tfmt.Println(os.Args[i]) } } &#x7136;&#x540E;&#x8FD0;&#x884C;&#xFF1A; 1 go run args1.go arg1 arg2 arg3"},"index.html#空标识符":{"title":"&#x7A7A;&#x6807;&#x8BC6;&#x7B26;","path":"\\golang-learn\\index.html#空标识符","body":"_ &#x4EE3;&#x8868;&#x7A7A;&#x6807;&#x8BC6;&#x7B26;&#xFF0C; Go &#x4E0D;&#x5141;&#x8BB8;&#x6709;&#x65E0;&#x7528;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x7A7A;&#x6807;&#x8BC6;&#x7B26;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x5FFD;&#x7565;&#x5360;&#x4F4D;&#x7B26; &#xFF0C;&#x6BD4;&#x5982;&#xFF1A; 1 2 3 4 5 var s, sep string for _, arg := range os.Args[ 1 :] { \ts += sep + arg \tsep =   }"},"index.html#命名":{"title":"&#x547D;&#x540D;","path":"\\golang-learn\\index.html#命名","body":"&#x6240;&#x6709;&#x547D;&#x540D;&#x53EA;&#x80FD;&#x4EE5;&#x5B57;&#x6BCD;&#x6216;&#x8005; _ &#x5F00;&#x5934;&#xFF0C;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x5B57;&#x6BCD;&#xFF0C;&#x6570;&#x5B57;&#x6216;&#x8005; _ &#x3002;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#x3002; &#x5173;&#x952E;&#x5B57;&#x4E0D;&#x80FD;&#x5B9A;&#x4E49;&#x53D8;&#x91CF;&#x540D;&#xFF0C;&#x5982; func &#xFF0C; default &#x3002; &#x6CE8;&#x610F;&#xFF1A;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x7684;&#xFF0C;&#x53EA;&#x80FD;&#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#xFF08;&#x51FD;&#x6570;&#x7EA7;&#xFF09;&#xFF0C;&#x5728;&#x51FD;&#x6570;&#x5916;&#x90E8;&#x5B9A;&#x4E49;&#x7684;&#xFF08;&#x5305;&#x7EA7;&#xFF09;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5F53;&#x524D;&#x5305;&#x7684;&#x6240;&#x6709;&#x6587;&#x4EF6;&#x4E2D;&#x662F;&#x4F7F;&#x7528;&#x3002; &#x5E76;&#x4E14;&#xFF0C;&#x662F;&#x5728;&#x51FD;&#x6570;&#x5916;&#x5B9A;&#x4E49;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x5982;&#x679C;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x88AB;&#x5BFC;&#x51FA;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5728;&#x5305;&#x7684;&#x5916;&#x90E8;&#x4E5F;&#x53EF;&#x4EE5;&#x8BBF;&#x95EE;&#xFF0C;&#x6240;&#x4EE5;&#x5B9A;&#x4E49;&#x540D;&#x5B57;&#x65F6;&#xFF0C;&#x8981;&#x6CE8;&#x610F;&#x5927;&#x5C0F;&#x5199;&#x3002;"},"index.html#声明":{"title":"&#x58F0;&#x660E;","path":"\\golang-learn\\index.html#声明","body":"var &#x58F0;&#x660E;&#x53D8;&#x91CF; const &#x58F0;&#x660E;&#x5E38;&#x91CF; type &#x58F0;&#x660E;&#x7C7B;&#x578B; func &#x58F0;&#x660E;&#x51FD;&#x6570; &#x6BCF;&#x4E2A;&#x6587;&#x4EF6;&#x4EE5; package &#x58F0;&#x660E;&#x8BED;&#x53E5;&#x3002;&#x6BD4;&#x5982; package main &#x3002;"},"index.html#make-和-new":{"title":"make &#x548C; new","path":"\\golang-learn\\index.html#make-和-new","body":"make &#x53EA;&#x80FD;&#x7528;&#x4E8E;&#x5185;&#x5EFA;&#x7C7B;&#x578B;&#xFF08; map &#x3001; slice &#x548C; channel &#xFF09;&#x7684;&#x5185;&#x5B58;&#x5206;&#x914D;&#x3002; new &#x7528;&#x4E8E;&#x5404;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x5185;&#x5B58;&#x5206;&#x914D; &#x3002; make &#x8FD4;&#x56DE;&#x521D;&#x59CB;&#x5316;&#x540E;&#x7684;&#xFF08;&#x975E;&#x96F6;&#xFF09;&#x503C;&#xFF0C; new &#x8FD4;&#x56DE;&#x6307;&#x9488; &#x3002; new &#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x4E3A;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C;&#x4F46;&#x8FD9;&#x662F;&#x4E0D;&#x5B8C;&#x6574;&#x7684;&#x521B;&#x5EFA;&#x3002;&#x6BD4;&#x5982; map &#xFF0C;&#x5B83;&#x4EC5;&#x5206;&#x914D;&#x4E86;&#x5B57;&#x5178;&#x672C;&#x8EAB;&#x9700;&#x8981;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x4F46;&#x662F;&#x5E76;&#x6CA1;&#x6709;&#x4E3A; &#x5B57;&#x5178;&#x5185;&#x7684;&#x5065;&#x503C;&#x5BF9;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C;&#x56E0;&#x6B64;&#x65E0;&#x6CD5;&#x6B63;&#x5E38;&#x5DE5;&#x4F5C; &#x3002;"},"index.html#类型转换":{"title":"&#x7C7B;&#x578B;&#x8F6C;&#x6362;","path":"\\golang-learn\\index.html#类型转换","body":"Go &#x5F3A;&#x5236;&#x4F7F;&#x7528;&#x663E;&#x793A;&#x7C7B;&#x578B;&#x8F6C;&#x6362; &#x3002;&#x8FD9;&#x6837;&#x53EF;&#x4EE5;&#x786E;&#x5B9A;&#x8BED;&#x53E5;&#x548C;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x660E;&#x786E;&#x542B;&#x4E49;&#x3002; &#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x5B8C;&#x6210;&#xFF0C;&#x5305;&#x62EC;&#x5F3A;&#x5236;&#x8F6C;&#x6362;&#x548C;&#x9690;&#x5F0F;&#x8F6C;&#x6362; &#x3002; 1 2 3 a := 10 b := byte (a) c := a + int (b) // &#x6DF7;&#x5408;&#x7C7B;&#x578B;&#x8868;&#x8FBE;&#x5F0F;&#x5FC5;&#x987B;&#x4FDD;&#x8BC1;&#x7C7B;&#x578B;&#x4E00;&#x81F4; &#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x7528;&#x4E8E;&#x5C06;&#x4E00;&#x79CD;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x8F6C;&#x6362;&#x4E3A;&#x53E6;&#x5916;&#x4E00;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#xFF1A; 1 &#x7C7B;&#x578B;&#x540D;(&#x8868;&#x8FBE;&#x5F0F;) &#x5B9E;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 var sum int = 17 var count int = 5 var mean float32 mean = float32 (sum)/ float32 (count) fmt.Printf( mean &#x7684;&#x503C;&#x4E3A;: %f\\n ,mean) &#x5BF9;&#x4E8E;&#x6574;&#x6570;&#x7C7B;&#x578B;&#x503C;&#x3001;&#x6574;&#x6570;&#x5E38;&#x91CF;&#x4E4B;&#x95F4;&#x7684;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#xFF0C;&#x539F;&#x5219;&#x4E0A;&#x53EA;&#x8981;&#x6E90;&#x503C;&#x5728;&#x76EE;&#x6807;&#x7C7B;&#x578B;&#x7684;&#x53EF;&#x8868;&#x793A;&#x8303;&#x56F4;&#x5185;&#x5C31;&#x662F;&#x5408;&#x6CD5;&#x7684;&#x3002;&#x6BD4;&#x5982;&#xFF0C; uint8(255) &#x53EF;&#x4EE5;&#x628A;&#x65E0;&#x7C7B;&#x578B;&#x7684;&#x5E38;&#x91CF; 255 &#x8F6C;&#x6362;&#x4E3A; uint8 &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x662F;&#x56E0;&#x4E3A; 255 &#x5728; [0, 255] &#x7684;&#x8303;&#x56F4;&#x5185;&#x3002; &#x8FD9;&#x79CD;&#x7C7B;&#x578B;&#x8F6C;&#x6362;&#x4E3B;&#x8981;&#x5728; &#x5207;&#x6362;&#x540C;&#x4E00;&#x57FA;&#x7840;&#x7C7B;&#x578B;&#x4E0D;&#x540C;&#x7CBE;&#x5EA6;&#x8303;&#x56F4; &#x65F6;&#x4F7F;&#x7528;&#xFF0C;&#x6BD4;&#x5982;&#x6211;&#x4EEC;&#x8981;&#x5C06; int &#x578B;&#x8F6C;&#x4E3A; int64 &#x7C7B;&#x578B;&#x65F6;&#x3002; 1 2 3 a := 100 b := byte (a) c := a + int (b) &#x6DF7;&#x5408;&#x7C7B;&#x578B;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x4FDD;&#x6301;&#x4E00;&#x81F4; &#x5728; Go &#x4E2D;&#xFF0C;&#x975E;&#x5E03;&#x5C14;&#x503C;&#x4E0D;&#x80FD;&#x5F53;&#x505A; true/false &#x4F7F;&#x7528;&#xFF0C;&#x8FD9;&#x70B9;&#x548C;&#x6211;&#x5E38;&#x7528;&#x7684;js&#x4E0D;&#x540C;&#xFF1A; 1 2 3 4 5 x := 100 if x { // &#x9519;&#x8BEF; x &#x4E0D;&#x662F;&#x5E03;&#x5C14;&#x503C; } &#x5982;&#x679C; &#x8981;&#x8F6C;&#x6362;&#x4E3A;&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF0C;&#x6216;&#x8005;&#x5355;&#x5411; channel &#xFF0C;&#x6216;&#x8005;&#x51FD;&#x6570;&#xFF0C;&#x8981;&#x7ED9;&#x7C7B;&#x578B;&#x52A0;&#x4E0A; () &#xFF0C;&#x907F;&#x514D;&#x7F16;&#x8BD1;&#x5668;&#x5206;&#x6790;&#x9519;&#x8BEF; &#xFF0C;&#x5982;&#xFF1A; 1 2 3 4 5 6 x := 100 (* int )(&amp;x) // *int &#x52A0;&#x62EC;&#x53F7;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x88AB;&#x89E3;&#x6790;&#x4E3A;*(int(&amp;x)) (- channel int )(c) ( func () ) (f) ( func () int ) (f) // &#x6709;&#x8FD4;&#x56DE;&#x503C;&#x7684;&#x51FD;&#x6570;&#x5176;&#x5B9E;&#x53EF;&#x4EE5;&#x4E0D;&#x52A0;&#x62EC;&#x53F7;&#xFF0C;&#x4F46;&#x662F;&#x52A0;&#x62EC;&#x53F7;&#x7684;&#x8BDD;&#xFF0C;&#x8BED;&#x4E49;&#x6E05;&#x6670;"},"index.html#自定义类型":{"title":"&#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;","path":"\\golang-learn\\index.html#自定义类型","body":"&#x4F7F;&#x7528; type &#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;&#xFF0C;&#x4E00;&#x822C;&#x51FA;&#x73B0;&#x5728;&#x5305;&#x4E00;&#x7EA7;&#xFF0C;&#x4E0E;&#x53D8;&#x91CF;&#x4E00;&#x6837;&#xFF0C;&#x5982;&#x679C;&#x7C7B;&#x578B;&#x540D;&#x5B57;&#x7684;&#x9996;&#x5B57;&#x6BCD;&#x662F;&#x5927;&#x5199;&#xFF0C;&#x5219;&#x5728;&#x5305;&#x5916;&#x90E8;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#xFF1A; 1 type &#x7C7B;&#x578B;&#x540D;&#x5B57; &#x5E95;&#x5C42;&#x7C7B;&#x578B; &#x5982;&#x4E0D;&#x540C;&#x6E29;&#x5EA6;&#x5355;&#x4F4D;&#x5206;&#x522B;&#x5B9A;&#x4E49;&#x4E3A;&#x4E0D;&#x540C;&#x7684;&#x7C7B;&#x578B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 type Celsius float64 // &#x6444;&#x6C0F;&#x6E29;&#x5EA6; type Fahrenheit float64 // &#x534E;&#x6C0F;&#x6E29;&#x5EA6; const ( \tAbsoluteZeroC Celsius = -273.15 // &#x7EDD;&#x5BF9;&#x96F6;&#x5EA6; \tFreezingC Celsius = 0 // &#x7ED3;&#x51B0;&#x70B9;&#x6E29;&#x5EA6; \tBoilingC Celsius = 100 // &#x6CB8;&#x6C34;&#x6E29;&#x5EA6; ) func CToF (c Celsius) Fahrenheit { return Fahrenheit(c* 9 / 5 + 32 ) } func FToC (f Fahrenheit) Celsius { return Celsius((f - 32 ) * 5 / 9 ) } &#x81EA;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;&#x867D;&#x7136;&#x7F6E;&#x9876;&#x4E86;&#x5E95;&#x5C42;&#x7C7B;&#x578B;&#xFF0C;&#x4F46;&#x662F;&#x53EA;&#x662F;&#x5E95;&#x5C42;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x76F8;&#x540C;&#xFF0C;&#x4E0D;&#x4F1A;&#x7EE7;&#x627F;&#x5E95;&#x5C42;&#x7C7B;&#x578B;&#x7684;&#x5176;&#x4ED6;&#x4FE1;&#x606F;&#xFF0C;&#x6BD4;&#x5982;&#xFF08;&#x65B9;&#x6CD5;&#xFF09;&#x3002; &#x4E0D;&#x80FD;&#x9690;&#x5F0F;&#x8F6C;&#x6362;&#xFF0C;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x7528;&#x4E8E;&#x6BD4;&#x8F83;&#x8868;&#x8FBE;&#x5F0F; &#x3002; 1 2 3 4 5 6 type data int var d data = 10 var x int = d // &#x9519;&#x8BEF;&#xFF1A;cannot use d (type data) as type int in assignment fmt.Println(d == x) // &#x9519;&#x8BEF;&#xFF1A;invalid operation: d == x (mismatched types data and int)"},"index.html#未命名类型":{"title":"&#x672A;&#x547D;&#x540D;&#x7C7B;&#x578B;","path":"\\golang-learn\\index.html#未命名类型","body":"&#x6BD4;&#x5982;&#x6570;&#x7EC4;&#xFF0C;&#x5207;&#x7247;&#xFF0C;&#x5B57;&#x5178;&#xFF0C;&#x901A;&#x9053;&#x7B49;&#x7C7B;&#x578B;&#x4E0E;&#x5185;&#x90E8;&#x5177;&#x4F53;&#x7684;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x548C;&#x957F;&#x5EA6;&#x7B49;&#x5C5E;&#x6027;&#x6709;&#x5173;&#xFF0C;&#x6240;&#x4EE5;&#x53EB;&#x505A; &#x672A;&#x547D;&#x540D;&#x7C7B;&#x578B; &#xFF08;unnamed type&#xFF09;&#x3002;"},"index.html#类型断言":{"title":"&#x7C7B;&#x578B;&#x65AD;&#x8A00;","path":"\\golang-learn\\index.html#类型断言","body":"&#x65AD;&#x8A00;&#xFF0C;&#x987E;&#x540D;&#x601D;&#x4E49;&#x5C31;&#x662F;&#x679C;&#x65AD;&#x7684;&#x53BB;&#x731C;&#x6D4B;&#x4E00;&#x4E2A;&#x672A;&#x77E5;&#x7684;&#x4E8B;&#x7269;&#x3002;&#x5728; go &#x8BED;&#x8A00;&#x4E2D;&#xFF0C; interface{} &#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x795E;&#x79D8;&#x7684;&#x672A;&#x77E5;&#x7C7B;&#x578B;&#xFF0C;&#x5176; &#x65AD;&#x8A00;&#x64CD;&#x4F5C;&#x5C31;&#x662F;&#x7528;&#x6765; &#x5224;&#x65AD; interface{} &#x7684;&#x7C7B;&#x578B; &#x3002;&#x56E0;&#x4E3A; interface{} &#x662F;&#x4E2A;&#x672A;&#x77E5;&#x7C7B;&#x578B;&#xFF0C;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x65E0;&#x6CD5;&#x786E;&#x5B9A;&#xFF0C;&#x6240;&#x4EE5;&#x7C7B;&#x578B;&#x65AD;&#x8A00;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x786E;&#x5B9A;&#x3002; Go &#x8BED;&#x8A00;&#x91CC;&#x9762;&#x6709;&#x4E00;&#x4E2A;&#x8BED;&#x6CD5;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5; &#x5224;&#x65AD;&#x662F;&#x5426;&#x662F;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#xFF1A; value, ok = x.(T) &#xFF0C;&#x8FD9;&#x91CC; value &#x5C31;&#x662F;&#x53D8;&#x91CF;&#x7684;&#x503C;&#xFF0C; ok &#x662F; &#x4E00;&#x4E2A; bool &#x7C7B;&#x578B;&#xFF0C; x &#x662F; interface{} &#x53D8;&#x91CF;&#xFF0C; T &#x662F;&#x65AD;&#x8A00;&#x7684;&#x7C7B;&#x578B;&#x3002; &#x8BE5;&#x8BED;&#x6CD5;&#x8FD4;&#x56DE;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F; x &#x8F6C;&#x5316;&#x4E3A; T &#x7C7B;&#x578B;&#x540E;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x5E03;&#x5C14;&#x503C;&#xFF0C;&#x82E5;&#x4E3A; true &#x5219;&#x8868;&#x793A;&#x65AD;&#x8A00;&#x6210;&#x529F;&#xFF0C; false &#x5219;&#x8868;&#x793A;&#x65AD;&#x8A00;&#x5931;&#x8D25;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 // comma-ok for index, element := range list { \t if value, ok := element.( int ); ok { \t\tfmt.Printf( list[%d] is an int and its value is %d\\n , index, value) \t} else if value, ok := element.( string ); ok { \t\tfmt.Printf( list[%d] is a string and its value is %s\\n , index, value) \t} else if value, ok := element.(Person); ok { \t\tfmt.Printf( list[%d] is a Person and its value is %s\\n , index, value) \t} else { \t\tfmt.Printf( list[%d] is of a different type\\n , index) \t} } // &#x6216;&#x8005; &#x4F7F;&#x7528; switch for index, element := range list{ \t switch value := element.( type ) { \t\t case int : \t\t\tfmt.Printf( list[%d] is an int and its value is %d\\n , index, value) \t\t case string : \t\t\tfmt.Printf( list[%d] is a string and its value is %s\\n , index, value) \t\t case Person: \t\t\tfmt.Printf( list[%d] is a Person and its value is %s\\n , index, value) \t\t default : \t\t\tfmt.Println( list[%d] is of a different type , index) \t} } &#x6CE8;&#x610F;&#xFF0C; x.(type) &#x8BED;&#x6CD5;&#x4E0D;&#x80FD;&#x5728; switch &#x5916;&#x7684;&#x4EFB;&#x4F55;&#x903B;&#x8F91;&#x91CC;&#x9762;&#x4F7F;&#x7528;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x8981;&#x5728; switch &#x5916;&#x9762;&#x5224;&#x65AD;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x5C31;&#x4F7F;&#x7528; comma-ok &#x3002; &#x751F;&#x547D;&#x5468;&#x671F; &#x5BF9;&#x4E8E;&#x5728;&#x5305;&#x4E00;&#x7EA7;&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x548C;&#x7A0B;&#x5E8F;&#x7684;&#x8FD0;&#x884C;&#x5468;&#x671F;&#x662F;&#x4E00;&#x81F4;&#x7684;&#x3002; &#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF08;&#x5305;&#x62EC;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#x4E5F;&#x662F;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF09;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#x5219;&#x662F;&#x52A8;&#x6001;&#x7684;&#xFF1A;&#x6BCF;&#x6B21;&#x4ECE;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x53D8;&#x91CF;&#x7684;&#x58F0;&#x660E;&#x8BED;&#x53E5;&#x5F00;&#x59CB;&#xFF0C; &#x76F4;&#x5230;&#x8BE5;&#x53D8;&#x91CF;&#x4E0D;&#x518D;&#x88AB;&#x5F15;&#x7528;&#x4E3A;&#x6B62;&#xFF0C;&#x7136;&#x540E;&#x53D8;&#x91CF;&#x7684;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#x53EF;&#x80FD;&#x88AB;&#x56DE;&#x6536;&#x3002;"},"index.html#编码":{"title":"&#x7F16;&#x7801;","path":"\\golang-learn\\index.html#编码","body":"Go &#x8BED;&#x8A00;&#x7684;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x5FC5;&#x987B;&#x4F7F;&#x7528; UTF-8 &#x7F16;&#x7801;&#x683C;&#x5F0F;&#x8FDB;&#x884C;&#x5B58;&#x50A8;&#x3002;&#x5982;&#x679C;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x4E2D;&#x51FA;&#x73B0;&#x4E86;&#x975E; UTF-8 &#x7F16;&#x7801;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x6784;&#x5EFA;&#x3001;&#x5B89;&#x88C5;&#x4EE5;&#x53CA;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C; go &#x547D;&#x4EE4;&#x5C31;&#x4F1A;&#x62A5;&#x544A;&#x9519;&#x8BEF;&#x201C;illegal UTF-8 encoding&#x201D;&#x3002; ASCII &#x7F16;&#x7801; ASCII &#x662F;&#x82F1;&#x6587;&#x201C;American Standard Code for Information Interchange&#x201D;&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x4E2D;&#x6587;&#x8BD1;&#x4E3A;&#x7F8E;&#x56FD;&#x4FE1;&#x606F;&#x4EA4;&#x6362;&#x6807;&#x51C6;&#x4EE3;&#x7801;&#x3002; ASCII &#x7F16;&#x7801;&#x65B9;&#x6848;&#x4F7F;&#x7528;&#x5355;&#x4E2A;&#x5B57;&#x8282;&#xFF08;byte&#xFF09;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x6765;&#x7F16;&#x7801;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x3002;&#x6807;&#x51C6;&#x7684; ASCII &#x7F16;&#x7801;&#x7528;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x6700;&#x9AD8;&#x6BD4;&#x7279;&#xFF08;bit&#xFF09;&#x4F4D;&#x4F5C;&#x4E3A;&#x5947;&#x5076;&#x6821;&#x9A8C;&#x4F4D;&#xFF0C; &#x800C;&#x6269;&#x5C55;&#x7684; ASCII &#x7F16;&#x7801;&#x5219;&#x5C06;&#x6B64;&#x4F4D;&#x4E5F;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x5B57;&#x7B26;&#x3002;ASCII &#x7F16;&#x7801;&#x652F;&#x6301;&#x7684;&#x53EF;&#x6253;&#x5370;&#x5B57;&#x7B26;&#x548C;&#x63A7;&#x5236;&#x5B57;&#x7B26;&#x7684;&#x96C6;&#x5408;&#x4E5F;&#x88AB;&#x53EB;&#x505A; ASCII &#x7F16;&#x7801;&#x96C6;&#x3002; unicode &#x7F16;&#x7801; unicode &#x7F16;&#x7801;&#x89C4;&#x8303;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x53E6;&#x4E00;&#x4E2A;&#x66F4;&#x52A0;&#x901A;&#x7528;&#x7684;&#x3001;&#x9488;&#x5BF9;&#x4E66;&#x9762;&#x5B57;&#x7B26;&#x548C;&#x6587;&#x672C;&#x7684;&#x5B57;&#x7B26;&#x7F16;&#x7801;&#x6807;&#x51C6;&#x3002;&#x5B83;&#x4E3A;&#x4E16;&#x754C;&#x4E0A;&#x73B0;&#x5B58;&#x7684;&#x6240;&#x6709;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C; &#x90FD;&#x8BBE;&#x5B9A;&#x4E86;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x7F16;&#x7801; &#x3002;&#x5B83;&#x5B9A;&#x4E49;&#x4E86;&#x4E0D;&#x540C;&#x81EA;&#x7136;&#x8BED;&#x8A00;&#x7684;&#x6587;&#x672C;&#x6570;&#x636E;&#x5728;&#x56FD;&#x9645;&#x95F4;&#x4EA4;&#x6362;&#x7684;&#x7EDF;&#x4E00;&#x65B9;&#x5F0F;&#xFF0C;&#x5E76;&#x4E3A;&#x5168;&#x7403;&#x5316;&#x8F6F;&#x4EF6;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x91CD;&#x8981;&#x7684;&#x57FA;&#x7840;&#x3002; Unicode &#x7F16;&#x7801;&#x89C4;&#x8303;&#x901A;&#x5E38;&#x4F7F;&#x7528;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x8868;&#x793A;&#x6CD5;&#x6765;&#x8868;&#x793A; Unicode &#x4EE3;&#x7801;&#x70B9;&#x7684;&#x6574;&#x6570;&#x503C;&#xFF0C;&#x5E76;&#x4F7F;&#x7528;&#x201C;U+&#x201D;&#x4F5C;&#x4E3A;&#x524D;&#x7F00;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x82F1;&#x6587;&#x5B57;&#x6BCD;&#x5B57;&#x7B26;&#x201C;a&#x201D;&#x7684; Unicode &#x4EE3;&#x7801;&#x70B9;&#x662F; U+0061 &#x3002;&#x5728; Unicode &#x7F16;&#x7801;&#x89C4;&#x8303;&#x4E2D;&#xFF0C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x80FD;&#x4E14;&#x53EA;&#x80FD;&#x7531;&#x4E0E;&#x5B83;&#x5BF9;&#x5E94;&#x7684;&#x90A3;&#x4E2A;&#x4EE3;&#x7801;&#x70B9;&#x8868;&#x793A;&#x3002; Unicode &#x7F16;&#x7801;&#x89C4;&#x8303;&#x63D0;&#x4F9B;&#x4E86;&#x4E09;&#x79CD;&#x4E0D;&#x540C;&#x7684;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#xFF0C;&#x5373;&#xFF1A; UTF-8 &#x3001; UTF-16 &#x548C; UTF-32 &#x3002;&#x5176;&#x4E2D;&#x7684; UTF &#x662F; UCS Transformation Format &#x7684;&#x7F29;&#x5199;&#x3002; &#x800C; UCS &#x53C8;&#x662F; Universal Character Set &#x7684;&#x7F29;&#x5199;&#xFF0C;&#x4F46;&#x4E5F;&#x53EF;&#x4EE5;&#x4EE3;&#x8868; Unicode Character Set&#x3002;&#x6240;&#x4EE5;&#xFF0C;UTF &#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x7FFB;&#x8BD1;&#x4E3A; Unicode &#x8F6C;&#x6362;&#x683C;&#x5F0F;&#x3002; &#x5B83;&#x4EE3;&#x8868;&#x7684;&#x662F;&#x5B57;&#x7B26;&#x4E0E;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x4E4B;&#x95F4;&#x7684;&#x8F6C;&#x6362;&#x65B9;&#x5F0F;&#x3002; &#x5728;&#x8FD9;&#x51E0;&#x79CD;&#x7F16;&#x7801;&#x683C;&#x5F0F;&#x7684;&#x540D;&#x79F0;&#x4E2D;&#xFF0C; &#x201C;-&#x201D;&#x53F3;&#x8FB9;&#x7684;&#x6574;&#x6570;&#x7684;&#x542B;&#x4E49;&#x662F;&#xFF0C;&#x4EE5;&#x591A;&#x5C11;&#x4E2A;&#x6BD4;&#x7279;&#x4F4D;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x7F16;&#x7801;&#x5355;&#x5143; &#x3002;&#x4EE5; UTF-8 &#x4E3A;&#x4F8B;&#xFF0C;&#x5B83;&#x4F1A;&#x4EE5; 8 &#x4E2A;&#x6BD4;&#x7279;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#xFF0C; &#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x7F16;&#x7801;&#x5355;&#x5143;&#x3002;&#x5B83;&#x4E0E;&#x6807;&#x51C6;&#x7684; ASCII &#x7F16;&#x7801;&#x662F;&#x5B8C;&#x5168;&#x517C;&#x5BB9;&#x7684;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5728; [0x00, 0x7F] &#x7684;&#x8303;&#x56F4;&#x5185;&#xFF0C;&#x8FD9;&#x4E24;&#x79CD;&#x7F16;&#x7801;&#x8868;&#x793A;&#x7684;&#x5B57;&#x7B26;&#x90FD;&#x662F;&#x76F8;&#x540C;&#x7684;&#x3002; &#x8FD9;&#x4E5F;&#x662F; UTF-8 &#x7F16;&#x7801;&#x683C;&#x5F0F;&#x7684;&#x4E00;&#x4E2A;&#x5DE8;&#x5927;&#x4F18;&#x52BF;&#x3002; UTF-8 &#x662F;&#x4E00;&#x79CD;&#x53EF;&#x53D8;&#x5BBD;&#x7684;&#x7F16;&#x7801;&#x65B9;&#x6848; &#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C; &#x5B83;&#x4F1A;&#x7528;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x6765;&#x8868;&#x793A;&#x67D0;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x6700;&#x591A;&#x4F7F;&#x7528;&#x56DB;&#x4E2A;&#x5B57;&#x8282; &#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x82F1;&#x6587;&#x5B57;&#x7B26;&#xFF0C; &#x5B83;&#x4EC5;&#x7528;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x5C31;&#x53EF;&#x4EE5;&#x8868;&#x793A;&#xFF0C;&#x800C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x4E2D;&#x6587;&#x5B57;&#x7B26;&#xFF0C;&#x5B83;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E09;&#x4E2A;&#x5B57;&#x8282;&#x624D;&#x80FD;&#x591F;&#x8868;&#x793A;&#x3002;&#x4E0D;&#x8BBA;&#x600E;&#x6837;&#xFF0C;&#x4E00;&#x4E2A;&#x53D7;&#x652F;&#x6301;&#x7684;&#x5B57;&#x7B26;&#x603B;&#x662F;&#x53EF;&#x4EE5;&#x7531; UTF-8 &#x7F16;&#x7801; &#x4E3A;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x3002;&#x4EE5;&#x4E0B;&#x4F1A;&#x7B80;&#x79F0;&#x540E;&#x8005;&#x4E3A; UTF-8 &#x7F16;&#x7801;&#x503C;&#x3002;"},"advance/mm.html":{"title":"内存分配","path":"\\golang-learn\\advance\\mm.html","body":"内存分配 基本策略 每次从操作系统申请一大块内存（如 1MB），以减少系统调用。 将申请到的大块内存按照特定大小切分成小块，够成链表。 为对象分配内存时，只需从大小合适的链表提取一小块即可。 回收对象内存时，将小块内存还给原链表，以便复用。 如果闲置内存过多，则尝试把部分内存还给操作系统，降低开销。 内存分配器 只管理内存，不关心对象的状态，并且它不会主动回收内存，需要 垃圾回收器 在完成清理操作后， 触发内存分配器的回收操作。 内存块 内存分配器管理的内存分为两种： span ：多个地址连续的 页（page） 组成的大块内存。 object ：将 span 按特定大小切分成多个小块，每个小块可存储一个对象。 分配器按页数区分大小不同的 span。例如，以页数为单位将 span 存放到管理数组中，需要时就以页数为索引进行查找。 span 的大小不是固定不变的。在获取闲置 span 时，如果没有找到大小合适的，那么会选择页数更多的 span，此时 就会引发 裁剪 ，将 span 多余的部分构成一个新的小的 span 放回管理数组。另外，分配器还会把相邻的空闲的 span 合并构建更大的内存块，减少碎片。 tcmalloc Go 的内存分配器采用的是 tcmalloc 架构。 由三种组件组成： cache ：运行期的每个线程都会绑定一个 cache，用于给没有锁的 object 的分配。 central ：为所有 cache 提供切分好的后备 sapn 资源。 heap ：管理闲置的 span，需要的时候向操作系统申请新的内存。 分配 回收 内存回收的源头是垃圾清理操作 。回收不是释放，因为内存分配器的核心是 内存复用 。不在使用的内存，放到合适的位置等待再次 分配时使用。只有闲置内存过多时，才考虑释放。"},"advance/mm.html#内存分配":{"title":"&#x5185;&#x5B58;&#x5206;&#x914D;","path":"\\golang-learn\\advance\\mm.html#内存分配","body":""},"advance/mm.html#基本策略":{"title":"&#x57FA;&#x672C;&#x7B56;&#x7565;","path":"\\golang-learn\\advance\\mm.html#基本策略","body":"&#x6BCF;&#x6B21;&#x4ECE;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7533;&#x8BF7;&#x4E00;&#x5927;&#x5757;&#x5185;&#x5B58;&#xFF08;&#x5982; 1MB&#xFF09;&#xFF0C;&#x4EE5;&#x51CF;&#x5C11;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x3002; &#x5C06;&#x7533;&#x8BF7;&#x5230;&#x7684;&#x5927;&#x5757;&#x5185;&#x5B58;&#x6309;&#x7167;&#x7279;&#x5B9A;&#x5927;&#x5C0F;&#x5207;&#x5206;&#x6210;&#x5C0F;&#x5757;&#xFF0C;&#x591F;&#x6210;&#x94FE;&#x8868;&#x3002; &#x4E3A;&#x5BF9;&#x8C61;&#x5206;&#x914D;&#x5185;&#x5B58;&#x65F6;&#xFF0C;&#x53EA;&#x9700;&#x4ECE;&#x5927;&#x5C0F;&#x5408;&#x9002;&#x7684;&#x94FE;&#x8868;&#x63D0;&#x53D6;&#x4E00;&#x5C0F;&#x5757;&#x5373;&#x53EF;&#x3002; &#x56DE;&#x6536;&#x5BF9;&#x8C61;&#x5185;&#x5B58;&#x65F6;&#xFF0C;&#x5C06;&#x5C0F;&#x5757;&#x5185;&#x5B58;&#x8FD8;&#x7ED9;&#x539F;&#x94FE;&#x8868;&#xFF0C;&#x4EE5;&#x4FBF;&#x590D;&#x7528;&#x3002; &#x5982;&#x679C;&#x95F2;&#x7F6E;&#x5185;&#x5B58;&#x8FC7;&#x591A;&#xFF0C;&#x5219;&#x5C1D;&#x8BD5;&#x628A;&#x90E8;&#x5206;&#x5185;&#x5B58;&#x8FD8;&#x7ED9;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF0C;&#x964D;&#x4F4E;&#x5F00;&#x9500;&#x3002; &#x5185;&#x5B58;&#x5206;&#x914D;&#x5668; &#x53EA;&#x7BA1;&#x7406;&#x5185;&#x5B58;&#xFF0C;&#x4E0D;&#x5173;&#x5FC3;&#x5BF9;&#x8C61;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x4E0D;&#x4F1A;&#x4E3B;&#x52A8;&#x56DE;&#x6536;&#x5185;&#x5B58;&#xFF0C;&#x9700;&#x8981; &#x5783;&#x573E;&#x56DE;&#x6536;&#x5668; &#x5728;&#x5B8C;&#x6210;&#x6E05;&#x7406;&#x64CD;&#x4F5C;&#x540E;&#xFF0C; &#x89E6;&#x53D1;&#x5185;&#x5B58;&#x5206;&#x914D;&#x5668;&#x7684;&#x56DE;&#x6536;&#x64CD;&#x4F5C;&#x3002;"},"advance/mm.html#内存块":{"title":"&#x5185;&#x5B58;&#x5757;","path":"\\golang-learn\\advance\\mm.html#内存块","body":"&#x5185;&#x5B58;&#x5206;&#x914D;&#x5668;&#x7BA1;&#x7406;&#x7684;&#x5185;&#x5B58;&#x5206;&#x4E3A;&#x4E24;&#x79CD;&#xFF1A; span &#xFF1A;&#x591A;&#x4E2A;&#x5730;&#x5740;&#x8FDE;&#x7EED;&#x7684; &#x9875;&#xFF08;page&#xFF09; &#x7EC4;&#x6210;&#x7684;&#x5927;&#x5757;&#x5185;&#x5B58;&#x3002; object &#xFF1A;&#x5C06; span &#x6309;&#x7279;&#x5B9A;&#x5927;&#x5C0F;&#x5207;&#x5206;&#x6210;&#x591A;&#x4E2A;&#x5C0F;&#x5757;&#xFF0C;&#x6BCF;&#x4E2A;&#x5C0F;&#x5757;&#x53EF;&#x5B58;&#x50A8;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x3002; &#x5206;&#x914D;&#x5668;&#x6309;&#x9875;&#x6570;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x4E0D;&#x540C;&#x7684; span&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x4EE5;&#x9875;&#x6570;&#x4E3A;&#x5355;&#x4F4D;&#x5C06; span &#x5B58;&#x653E;&#x5230;&#x7BA1;&#x7406;&#x6570;&#x7EC4;&#x4E2D;&#xFF0C;&#x9700;&#x8981;&#x65F6;&#x5C31;&#x4EE5;&#x9875;&#x6570;&#x4E3A;&#x7D22;&#x5F15;&#x8FDB;&#x884C;&#x67E5;&#x627E;&#x3002; span &#x7684;&#x5927;&#x5C0F;&#x4E0D;&#x662F;&#x56FA;&#x5B9A;&#x4E0D;&#x53D8;&#x7684;&#x3002;&#x5728;&#x83B7;&#x53D6;&#x95F2;&#x7F6E; span &#x65F6;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x5927;&#x5C0F;&#x5408;&#x9002;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x9009;&#x62E9;&#x9875;&#x6570;&#x66F4;&#x591A;&#x7684; span&#xFF0C;&#x6B64;&#x65F6; &#x5C31;&#x4F1A;&#x5F15;&#x53D1; &#x88C1;&#x526A; &#xFF0C;&#x5C06; span &#x591A;&#x4F59;&#x7684;&#x90E8;&#x5206;&#x6784;&#x6210;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5C0F;&#x7684; span &#x653E;&#x56DE;&#x7BA1;&#x7406;&#x6570;&#x7EC4;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x5206;&#x914D;&#x5668;&#x8FD8;&#x4F1A;&#x628A;&#x76F8;&#x90BB;&#x7684;&#x7A7A;&#x95F2;&#x7684; span &#x5408;&#x5E76;&#x6784;&#x5EFA;&#x66F4;&#x5927;&#x7684;&#x5185;&#x5B58;&#x5757;&#xFF0C;&#x51CF;&#x5C11;&#x788E;&#x7247;&#x3002;"},"advance/mm.html#tcmalloc":{"title":"tcmalloc","path":"\\golang-learn\\advance\\mm.html#tcmalloc","body":"Go &#x7684;&#x5185;&#x5B58;&#x5206;&#x914D;&#x5668;&#x91C7;&#x7528;&#x7684;&#x662F; tcmalloc &#x67B6;&#x6784;&#x3002; &#x7531;&#x4E09;&#x79CD;&#x7EC4;&#x4EF6;&#x7EC4;&#x6210;&#xFF1A; cache &#xFF1A;&#x8FD0;&#x884C;&#x671F;&#x7684;&#x6BCF;&#x4E2A;&#x7EBF;&#x7A0B;&#x90FD;&#x4F1A;&#x7ED1;&#x5B9A;&#x4E00;&#x4E2A; cache&#xFF0C;&#x7528;&#x4E8E;&#x7ED9;&#x6CA1;&#x6709;&#x9501;&#x7684; object &#x7684;&#x5206;&#x914D;&#x3002; central &#xFF1A;&#x4E3A;&#x6240;&#x6709; cache &#x63D0;&#x4F9B;&#x5207;&#x5206;&#x597D;&#x7684;&#x540E;&#x5907; sapn &#x8D44;&#x6E90;&#x3002; heap &#xFF1A;&#x7BA1;&#x7406;&#x95F2;&#x7F6E;&#x7684; span&#xFF0C;&#x9700;&#x8981;&#x7684;&#x65F6;&#x5019;&#x5411;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7533;&#x8BF7;&#x65B0;&#x7684;&#x5185;&#x5B58;&#x3002;"},"advance/mm.html#分配":{"title":"&#x5206;&#x914D;","path":"\\golang-learn\\advance\\mm.html#分配","body":""},"advance/mm.html#回收":{"title":"&#x56DE;&#x6536;","path":"\\golang-learn\\advance\\mm.html#回收","body":"&#x5185;&#x5B58;&#x56DE;&#x6536;&#x7684;&#x6E90;&#x5934;&#x662F;&#x5783;&#x573E;&#x6E05;&#x7406;&#x64CD;&#x4F5C; &#x3002;&#x56DE;&#x6536;&#x4E0D;&#x662F;&#x91CA;&#x653E;&#xFF0C;&#x56E0;&#x4E3A;&#x5185;&#x5B58;&#x5206;&#x914D;&#x5668;&#x7684;&#x6838;&#x5FC3;&#x662F; &#x5185;&#x5B58;&#x590D;&#x7528; &#x3002;&#x4E0D;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x653E;&#x5230;&#x5408;&#x9002;&#x7684;&#x4F4D;&#x7F6E;&#x7B49;&#x5F85;&#x518D;&#x6B21; &#x5206;&#x914D;&#x65F6;&#x4F7F;&#x7528;&#x3002;&#x53EA;&#x6709;&#x95F2;&#x7F6E;&#x5185;&#x5B58;&#x8FC7;&#x591A;&#x65F6;&#xFF0C;&#x624D;&#x8003;&#x8651;&#x91CA;&#x653E;&#x3002;"},"basic/array.html":{"title":"数组","path":"\\golang-learn\\basic\\array.html","body":"数组 数组是一个由固定长度的指定类型元素组成的序列。数组的长度在编译阶段确定。 声明数组： 1 var 变量名 [SIZE]类型 内置函数 len 获取数组长度。通过下标访问元素： 1 2 3 var a [ 3 ] int // array of 3 integers fmt.Println(a[ 0 ]) // print the first element fmt.Println(a[ len (a) -1 ]) // print the last element, a[2] 默认情况下，数组的每个元素都被初始化为元素类型对应的零值。 初始化数组： 1 2 3 4 5 6 7 8 9 10 11 var q [ 3 ] int = [ 3 ] int  1 , 2 , 3  var r [ 3 ] int = [ 3 ] int  1 , 2  fmt.Println(r[ 2 ]) // \"0\" var balance = [] float32  1000.0 , 2.0 , 3.4 , 7.0 , 50.0  mt.Println( len (balance)) // 5 var balance2 = [] float32 fmt.Println( len (balance2)) // type []float32 is not an expression q := [...] int  1 , 2 , 3  fmt.Printf( \"%T\\n\" , q) // \"[3]int\" 初始化数组中 {} 中的元素个数不能大于 [] 中的数字。 如果 [] 设置了 SIZE ，Go 语言会根据元素的个数来设置数组的大小。 上面代码中的 ... 省略号，表示数组的长度是根据初始化值的个数来计算 。 声明数组 SIZE 是必须的，如果没有，那就是切片了。 二维数组 1 2 3 4 5 6 var a = [ 3 ][ 4 ] int   0 , 1 , 2 , 3  , /* 第一行索引为 0 */  4 , 5 , 6 , 7  , /* 第二行索引为 1 */  8 , 9 , 10 , 11 , /* 第三行索引为 2 */  fmt.Printf( \"a[%d][%d] = %d\\n\" , 2 , 3 , a[ 2 ][ 3 ] ) == 和 != 比较运算符来比较两个数组，只有当两个数组的所有元素都是相等的时候数组才是相等的。 数组传入函数 当调用函数时，函数的形参会被赋值， 所以函数参数变量接收的是一个复制的副本，并不是原始调用的变量。 但是 这种机制， 如果碰到传递一个大数组时，效率较低。这个时候可以显示的传入一个数组指针 （其他语言其实是隐式的传递指针）。 1 2 3 func test (ptr *[32] byte )  *ptr = [ 32 ] byte  "},"basic/array.html#数组":{"title":"&#x6570;&#x7EC4;","path":"\\golang-learn\\basic\\array.html#数组","body":"&#x6570;&#x7EC4;&#x662F;&#x4E00;&#x4E2A;&#x7531;&#x56FA;&#x5B9A;&#x957F;&#x5EA6;&#x7684;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x5143;&#x7D20;&#x7EC4;&#x6210;&#x7684;&#x5E8F;&#x5217;&#x3002;&#x6570;&#x7EC4;&#x7684;&#x957F;&#x5EA6;&#x5728;&#x7F16;&#x8BD1;&#x9636;&#x6BB5;&#x786E;&#x5B9A;&#x3002; &#x58F0;&#x660E;&#x6570;&#x7EC4;&#xFF1A; 1 var &#x53D8;&#x91CF;&#x540D; [SIZE]&#x7C7B;&#x578B; &#x5185;&#x7F6E;&#x51FD;&#x6570; len &#x83B7;&#x53D6;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x3002;&#x901A;&#x8FC7;&#x4E0B;&#x6807;&#x8BBF;&#x95EE;&#x5143;&#x7D20;&#xFF1A; 1 2 3 var a [ 3 ] int // array of 3 integers fmt.Println(a[ 0 ]) // print the first element fmt.Println(a[ len (a) -1 ]) // print the last element, a[2] &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6570;&#x7EC4;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x90FD;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x5BF9;&#x5E94;&#x7684;&#x96F6;&#x503C;&#x3002; &#x521D;&#x59CB;&#x5316;&#x6570;&#x7EC4;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 var q [ 3 ] int = [ 3 ] int { 1 , 2 , 3 } var r [ 3 ] int = [ 3 ] int { 1 , 2 } fmt.Println(r[ 2 ]) // 0 var balance = [] float32 { 1000.0 , 2.0 , 3.4 , 7.0 , 50.0 } mt.Println( len (balance)) // 5 var balance2 = [] float32 fmt.Println( len (balance2)) // type []float32 is not an expression q := [...] int { 1 , 2 , 3 } fmt.Printf( %T\\n , q) // [3]int &#x521D;&#x59CB;&#x5316;&#x6570;&#x7EC4;&#x4E2D; {} &#x4E2D;&#x7684;&#x5143;&#x7D20;&#x4E2A;&#x6570;&#x4E0D;&#x80FD;&#x5927;&#x4E8E; [] &#x4E2D;&#x7684;&#x6570;&#x5B57;&#x3002; &#x5982;&#x679C; [] &#x8BBE;&#x7F6E;&#x4E86; SIZE &#xFF0C;Go &#x8BED;&#x8A00;&#x4F1A;&#x6839;&#x636E;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#x6765;&#x8BBE;&#x7F6E;&#x6570;&#x7EC4;&#x7684;&#x5927;&#x5C0F;&#x3002; &#x4E0A;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684; ... &#x7701;&#x7565;&#x53F7;&#xFF0C;&#x8868;&#x793A;&#x6570;&#x7EC4;&#x7684;&#x957F;&#x5EA6;&#x662F;&#x6839;&#x636E;&#x521D;&#x59CB;&#x5316;&#x503C;&#x7684;&#x4E2A;&#x6570;&#x6765;&#x8BA1;&#x7B97; &#x3002; &#x58F0;&#x660E;&#x6570;&#x7EC4; SIZE &#x662F;&#x5FC5;&#x987B;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x5207;&#x7247;&#x4E86;&#x3002;"},"basic/array.html#二维数组":{"title":"&#x4E8C;&#x7EF4;&#x6570;&#x7EC4;","path":"\\golang-learn\\basic\\array.html#二维数组","body":"1 2 3 4 5 6 var a = [ 3 ][ 4 ] int { { 0 , 1 , 2 , 3 } , /* &#x7B2C;&#x4E00;&#x884C;&#x7D22;&#x5F15;&#x4E3A; 0 */ { 4 , 5 , 6 , 7 } , /* &#x7B2C;&#x4E8C;&#x884C;&#x7D22;&#x5F15;&#x4E3A; 1 */ { 8 , 9 , 10 , 11 }, /* &#x7B2C;&#x4E09;&#x884C;&#x7D22;&#x5F15;&#x4E3A; 2 */ } fmt.Printf( a[%d][%d] = %d\\n , 2 , 3 , a[ 2 ][ 3 ] ) == &#x548C; != &#x6BD4;&#x8F83;&#x8FD0;&#x7B97;&#x7B26;&#x6765;&#x6BD4;&#x8F83;&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x53EA;&#x6709;&#x5F53;&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x90FD;&#x662F;&#x76F8;&#x7B49;&#x7684;&#x65F6;&#x5019;&#x6570;&#x7EC4;&#x624D;&#x662F;&#x76F8;&#x7B49;&#x7684;&#x3002;"},"basic/array.html#数组传入函数":{"title":"&#x6570;&#x7EC4;&#x4F20;&#x5165;&#x51FD;&#x6570;","path":"\\golang-learn\\basic\\array.html#数组传入函数","body":"&#x5F53;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x51FD;&#x6570;&#x7684;&#x5F62;&#x53C2;&#x4F1A;&#x88AB;&#x8D4B;&#x503C;&#xFF0C; &#x6240;&#x4EE5;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x53D8;&#x91CF;&#x63A5;&#x6536;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x590D;&#x5236;&#x7684;&#x526F;&#x672C;&#xFF0C;&#x5E76;&#x4E0D;&#x662F;&#x539F;&#x59CB;&#x8C03;&#x7528;&#x7684;&#x53D8;&#x91CF;&#x3002; &#x4F46;&#x662F; &#x8FD9;&#x79CD;&#x673A;&#x5236;&#xFF0C; &#x5982;&#x679C;&#x78B0;&#x5230;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x5927;&#x6570;&#x7EC4;&#x65F6;&#xFF0C;&#x6548;&#x7387;&#x8F83;&#x4F4E;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x663E;&#x793A;&#x7684;&#x4F20;&#x5165;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x6307;&#x9488; &#xFF08;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x5176;&#x5B9E;&#x662F;&#x9690;&#x5F0F;&#x7684;&#x4F20;&#x9012;&#x6307;&#x9488;&#xFF09;&#x3002; 1 2 3 func test (ptr *[32] byte ) { *ptr = [ 32 ] byte {} }"},"basic/flow.html":{"title":"控制语句","path":"\\golang-learn\\basic\\flow.html","body":"控制语句 if 1 2 3 if 布尔表达式   if…else 1 2 3 4 5 if 布尔表达式   else   switch 1 2 3 4 5 6 7 8 9 switch var1  case val1: ... // 不需要显示的break，case 执行完会自动中断 case val2: \t\t\t\t... \t\t case val3,val4,...:\t\t default : ...  val1 , val2 … 类型不被局限于常量或整数，但必须是相同的类型。 switch 语句，你要明白其中的 case 表达式的所有子表达式的结果值都是要与 switch 表达式的结果值判等的，因此它们的类型必须相 同或者能够都统一到 switch 表达式的结果类型。 如果无法做到，那么这条 switch 语句就不能通过编译。 switch 语句在 case 子句的选择上是具有唯一性的 。正因为如此， switch 语句不允许 case 表达式中的子表达式结果值存 在相等的情况，不论这些结果值相等的子表达式，是否存在于不同的 case 表达式中，都会是这样的结果。 普通 case 子句的编写顺序很重要，最上边的 case 子句中的子表达式总是会被最先求值，在判等的时候顺序也是这样 。因此， 如果某些子表达式的结果值有重复并且它们与 switch 表达式的结果值相等，那么位置靠上的 case 子句总会被选中。 select select 类似于用于通信的 switch 语句。每个 case 必须是一个通信操作，要么是发送要么是接收。 当条件满足时， select 会去通信并执行 case 之后的语句，这时候其它通信是不会执行的。 如果多个 case 同时满足条件， select 会随机地选择一个执行。如果没有 case 可运行，它将阻塞，直到有 case 可运行。 一个默认的子句应该总是可运行的。 1 2 3 4 5 6 7 8 select  case communication clause: ... case communication clause: ... default : /* 可选 */ \t\t\t...  for 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 for init; condition; post   // 相当于 while (x  5)  ...  for x  5  ...  // 相当于 while (true)  ...  for  \t...  for key, value := range oldMap  // 第二个循环变量可以忽略，但是第一个变量要忽略可以使用空标识符 _ 代替 newMap[key] = value  for range 支持遍历数组，切片，字符串，字典，通道，并返回索引和键值。 for range 会复制目标数据。可改用数组指针或者切片 。 range 关键字右边的位置上的代码被称为 range 表达式。 range 表达式只会在 for 语句开始执行时被求值一次，无论后边会有多少次迭代 ； range 表达式的求值结果会被复制，也就是说，被迭代的对象是 range 表达式结果值的副本而不是原值。 1 2 3 4 5 6 7 numbers1 := [] int  1 , 2 , 3 , 4 , 5 , 6  for i := range numbers1  if i == 3  numbers1[i] |= i   fmt.Println(numbers1) 打印的内容会是 [1 2 3 7 5 6] ，为什么，首先 i 是切片的下标，当 i 的值等于 3 的时候，与之对应的是切片中的第 4 个元素 值 4。对 4 和 3 进行按位或操作得到的结果是 7。 当 for 语句被执行的时候，在 range 关键字右边的 numbers1 会先被求值。 range 表达式的结果值可以是数组、数组的指针、 切片、字符串、字典或者允许接收操作的通道中的某一个，并且结果值只能有一个。这里的 numbers1 是一个切片,那么迭代变量就可以 有两个，右边的迭代变量代表当次迭代对应的某一个元素值，而左边的迭代变量则代表该元素值在切片中的索引值。 循环控制语句： break ，用于中断当前 for 循环或跳出 switch 语句 continue ，跳过当前循，继续进行下一轮循环。 goto ，将控制转移到被标记的语句。通常与条件语句配合使用。可用来实现条件转移， 构成循环，跳出循环体等功能。不推荐 使用，以免造成流程混乱。 goto 实例： 1 2 3 4 5 6 7 8 9 LOOP: for a  20  \t if a == 15  \t\t\t /* 跳过迭代 */ \t\t\ta = a + 1 \t\t\t goto LOOP \t \tfmt.Printf( \"a的值为 : %d\\n\" , a) \ta ++  使用带有 range 子句的 for 语句遍历字符串值的时候应该注意 带有 range 子句的 for 语句会先把被遍历的字符串值拆成一个 字节序列 （注意是字节序列），然后再试图找出这个字节序列中 包含的每一个 UTF-8 编码值，或者说每一个 Unicode 字符。 这样的 for 语句可以为两个迭代变量赋值。如果存在两个迭代变量，那么赋给第一个变量的值就将会是当前字节序列中的某个 UTF-8 编码 值的第一个字节所对应的那个索引值。而赋给第二个变量的值则是这个 UTF-8 编码值代表的那个 Unicode 字符，其类型会是 rune 。 1 2 3 4 str := \"Go 爱好者 \" for i, c := range str  fmt.Printf( \"%d: %q [% x]\\n\" , i, c, [] byte ( string (c)))  完整的打印内容如下： 1 2 3 4 5 0: 'G' [47] 1: 'o' [6f] 2: '爱' [e7 88 b1] 5: '好' [e5 a5 bd] 8: '者' [e8 80 85] 注意了，’爱’是由三个字节共同表达的，所以第四个 Unicode 字符’好’对应的索引值并不是 3，而是 2 加 3 后得到的 5 。"},"basic/flow.html#控制语句":{"title":"&#x63A7;&#x5236;&#x8BED;&#x53E5;","path":"\\golang-learn\\basic\\flow.html#控制语句","body":""},"basic/flow.html#if":{"title":"if","path":"\\golang-learn\\basic\\flow.html#if","body":"1 2 3 if &#x5E03;&#x5C14;&#x8868;&#x8FBE;&#x5F0F; { } if&#x2026;else 1 2 3 4 5 if &#x5E03;&#x5C14;&#x8868;&#x8FBE;&#x5F0F; { } else { }"},"basic/flow.html#switch":{"title":"switch","path":"\\golang-learn\\basic\\flow.html#switch","body":"1 2 3 4 5 6 7 8 9 switch var1 { case val1: ... // &#x4E0D;&#x9700;&#x8981;&#x663E;&#x793A;&#x7684;break&#xFF0C;case &#x6267;&#x884C;&#x5B8C;&#x4F1A;&#x81EA;&#x52A8;&#x4E2D;&#x65AD; case val2: \t\t\t\t... \t\t case val3,val4,...:\t\t default : ... } val1 , val2 &#x2026; &#x7C7B;&#x578B;&#x4E0D;&#x88AB;&#x5C40;&#x9650;&#x4E8E;&#x5E38;&#x91CF;&#x6216;&#x6574;&#x6570;&#xFF0C;&#x4F46;&#x5FC5;&#x987B;&#x662F;&#x76F8;&#x540C;&#x7684;&#x7C7B;&#x578B;&#x3002; switch &#x8BED;&#x53E5;&#xFF0C;&#x4F60;&#x8981;&#x660E;&#x767D;&#x5176;&#x4E2D;&#x7684; case &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x6240;&#x6709;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x90FD;&#x662F;&#x8981;&#x4E0E; switch &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x5224;&#x7B49;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x4EEC;&#x7684;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x76F8; &#x540C;&#x6216;&#x8005;&#x80FD;&#x591F;&#x90FD;&#x7EDF;&#x4E00;&#x5230; switch &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x7C7B;&#x578B;&#x3002; &#x5982;&#x679C;&#x65E0;&#x6CD5;&#x505A;&#x5230;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x6761; switch &#x8BED;&#x53E5;&#x5C31;&#x4E0D;&#x80FD;&#x901A;&#x8FC7;&#x7F16;&#x8BD1;&#x3002; switch &#x8BED;&#x53E5;&#x5728; case &#x5B50;&#x53E5;&#x7684;&#x9009;&#x62E9;&#x4E0A;&#x662F;&#x5177;&#x6709;&#x552F;&#x4E00;&#x6027;&#x7684; &#x3002;&#x6B63;&#x56E0;&#x4E3A;&#x5982;&#x6B64;&#xFF0C; switch &#x8BED;&#x53E5;&#x4E0D;&#x5141;&#x8BB8; case &#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x7684;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#x7ED3;&#x679C;&#x503C;&#x5B58; &#x5728;&#x76F8;&#x7B49;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x4E0D;&#x8BBA;&#x8FD9;&#x4E9B;&#x7ED3;&#x679C;&#x503C;&#x76F8;&#x7B49;&#x7684;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x662F;&#x5426;&#x5B58;&#x5728;&#x4E8E;&#x4E0D;&#x540C;&#x7684; case &#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#xFF0C;&#x90FD;&#x4F1A;&#x662F;&#x8FD9;&#x6837;&#x7684;&#x7ED3;&#x679C;&#x3002; &#x666E;&#x901A; case &#x5B50;&#x53E5;&#x7684;&#x7F16;&#x5199;&#x987A;&#x5E8F;&#x5F88;&#x91CD;&#x8981;&#xFF0C;&#x6700;&#x4E0A;&#x8FB9;&#x7684; case &#x5B50;&#x53E5;&#x4E2D;&#x7684;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#x603B;&#x662F;&#x4F1A;&#x88AB;&#x6700;&#x5148;&#x6C42;&#x503C;&#xFF0C;&#x5728;&#x5224;&#x7B49;&#x7684;&#x65F6;&#x5019;&#x987A;&#x5E8F;&#x4E5F;&#x662F;&#x8FD9;&#x6837; &#x3002;&#x56E0;&#x6B64;&#xFF0C; &#x5982;&#x679C;&#x67D0;&#x4E9B;&#x5B50;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x6709;&#x91CD;&#x590D;&#x5E76;&#x4E14;&#x5B83;&#x4EEC;&#x4E0E; switch &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x76F8;&#x7B49;&#xFF0C;&#x90A3;&#x4E48;&#x4F4D;&#x7F6E;&#x9760;&#x4E0A;&#x7684; case &#x5B50;&#x53E5;&#x603B;&#x4F1A;&#x88AB;&#x9009;&#x4E2D;&#x3002;"},"basic/flow.html#select":{"title":"select","path":"\\golang-learn\\basic\\flow.html#select","body":"select &#x7C7B;&#x4F3C;&#x4E8E;&#x7528;&#x4E8E;&#x901A;&#x4FE1;&#x7684; switch &#x8BED;&#x53E5;&#x3002;&#x6BCF;&#x4E2A; case &#x5FC5;&#x987B;&#x662F;&#x4E00;&#x4E2A;&#x901A;&#x4FE1;&#x64CD;&#x4F5C;&#xFF0C;&#x8981;&#x4E48;&#x662F;&#x53D1;&#x9001;&#x8981;&#x4E48;&#x662F;&#x63A5;&#x6536;&#x3002; &#x5F53;&#x6761;&#x4EF6;&#x6EE1;&#x8DB3;&#x65F6;&#xFF0C; select &#x4F1A;&#x53BB;&#x901A;&#x4FE1;&#x5E76;&#x6267;&#x884C; case &#x4E4B;&#x540E;&#x7684;&#x8BED;&#x53E5;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x5176;&#x5B83;&#x901A;&#x4FE1;&#x662F;&#x4E0D;&#x4F1A;&#x6267;&#x884C;&#x7684;&#x3002; &#x5982;&#x679C;&#x591A;&#x4E2A; case &#x540C;&#x65F6;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#xFF0C; select &#x4F1A;&#x968F;&#x673A;&#x5730;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x6267;&#x884C;&#x3002;&#x5982;&#x679C;&#x6CA1;&#x6709; case &#x53EF;&#x8FD0;&#x884C;&#xFF0C;&#x5B83;&#x5C06;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x6709; case &#x53EF;&#x8FD0;&#x884C;&#x3002; &#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x5B50;&#x53E5;&#x5E94;&#x8BE5;&#x603B;&#x662F;&#x53EF;&#x8FD0;&#x884C;&#x7684;&#x3002; 1 2 3 4 5 6 7 8 select { case communication clause: ... case communication clause: ... default : /* &#x53EF;&#x9009; */ \t\t\t... }"},"basic/flow.html#for":{"title":"for","path":"\\golang-learn\\basic\\flow.html#for","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 for init; condition; post { } // &#x76F8;&#x5F53;&#x4E8E; while (x  5) { ... } for x  5 { ... } // &#x76F8;&#x5F53;&#x4E8E; while (true) { ... } for { \t... } for key, value := range oldMap { // &#x7B2C;&#x4E8C;&#x4E2A;&#x5FAA;&#x73AF;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x5FFD;&#x7565;&#xFF0C;&#x4F46;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x8981;&#x5FFD;&#x7565;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7A7A;&#x6807;&#x8BC6;&#x7B26; _ &#x4EE3;&#x66FF; newMap[key] = value } for range &#x652F;&#x6301;&#x904D;&#x5386;&#x6570;&#x7EC4;&#xFF0C;&#x5207;&#x7247;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5B57;&#x5178;&#xFF0C;&#x901A;&#x9053;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x7D22;&#x5F15;&#x548C;&#x952E;&#x503C;&#x3002; for range &#x4F1A;&#x590D;&#x5236;&#x76EE;&#x6807;&#x6570;&#x636E;&#x3002;&#x53EF;&#x6539;&#x7528;&#x6570;&#x7EC4;&#x6307;&#x9488;&#x6216;&#x8005;&#x5207;&#x7247; &#x3002; range &#x5173;&#x952E;&#x5B57;&#x53F3;&#x8FB9;&#x7684;&#x4F4D;&#x7F6E;&#x4E0A;&#x7684;&#x4EE3;&#x7801;&#x88AB;&#x79F0;&#x4E3A; range &#x8868;&#x8FBE;&#x5F0F;&#x3002; range &#x8868;&#x8FBE;&#x5F0F;&#x53EA;&#x4F1A;&#x5728; for &#x8BED;&#x53E5;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x65F6;&#x88AB;&#x6C42;&#x503C;&#x4E00;&#x6B21;&#xFF0C;&#x65E0;&#x8BBA;&#x540E;&#x8FB9;&#x4F1A;&#x6709;&#x591A;&#x5C11;&#x6B21;&#x8FED;&#x4EE3; &#xFF1B; range &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x6C42;&#x503C;&#x7ED3;&#x679C;&#x4F1A;&#x88AB;&#x590D;&#x5236;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x88AB;&#x8FED;&#x4EE3;&#x7684;&#x5BF9;&#x8C61;&#x662F; range &#x8868;&#x8FBE;&#x5F0F;&#x7ED3;&#x679C;&#x503C;&#x7684;&#x526F;&#x672C;&#x800C;&#x4E0D;&#x662F;&#x539F;&#x503C;&#x3002; 1 2 3 4 5 6 7 numbers1 := [] int { 1 , 2 , 3 , 4 , 5 , 6 } for i := range numbers1 { if i == 3 { numbers1[i] |= i } } fmt.Println(numbers1) &#x6253;&#x5370;&#x7684;&#x5185;&#x5BB9;&#x4F1A;&#x662F; [1 2 3 7 5 6] &#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#xFF0C;&#x9996;&#x5148; i &#x662F;&#x5207;&#x7247;&#x7684;&#x4E0B;&#x6807;&#xFF0C;&#x5F53; i &#x7684;&#x503C;&#x7B49;&#x4E8E; 3 &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x7684;&#x662F;&#x5207;&#x7247;&#x4E2D;&#x7684;&#x7B2C; 4 &#x4E2A;&#x5143;&#x7D20; &#x503C; 4&#x3002;&#x5BF9; 4 &#x548C; 3 &#x8FDB;&#x884C;&#x6309;&#x4F4D;&#x6216;&#x64CD;&#x4F5C;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x662F; 7&#x3002; &#x5F53; for &#x8BED;&#x53E5;&#x88AB;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5728; range &#x5173;&#x952E;&#x5B57;&#x53F3;&#x8FB9;&#x7684; numbers1 &#x4F1A;&#x5148;&#x88AB;&#x6C42;&#x503C;&#x3002; range &#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x53EF;&#x4EE5;&#x662F;&#x6570;&#x7EC4;&#x3001;&#x6570;&#x7EC4;&#x7684;&#x6307;&#x9488;&#x3001; &#x5207;&#x7247;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x3001;&#x5B57;&#x5178;&#x6216;&#x8005;&#x5141;&#x8BB8;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x7684;&#x901A;&#x9053;&#x4E2D;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#xFF0C;&#x5E76;&#x4E14;&#x7ED3;&#x679C;&#x503C;&#x53EA;&#x80FD;&#x6709;&#x4E00;&#x4E2A;&#x3002;&#x8FD9;&#x91CC;&#x7684; numbers1 &#x662F;&#x4E00;&#x4E2A;&#x5207;&#x7247;,&#x90A3;&#x4E48;&#x8FED;&#x4EE3;&#x53D8;&#x91CF;&#x5C31;&#x53EF;&#x4EE5; &#x6709;&#x4E24;&#x4E2A;&#xFF0C;&#x53F3;&#x8FB9;&#x7684;&#x8FED;&#x4EE3;&#x53D8;&#x91CF;&#x4EE3;&#x8868;&#x5F53;&#x6B21;&#x8FED;&#x4EE3;&#x5BF9;&#x5E94;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x800C;&#x5DE6;&#x8FB9;&#x7684;&#x8FED;&#x4EE3;&#x53D8;&#x91CF;&#x5219;&#x4EE3;&#x8868;&#x8BE5;&#x5143;&#x7D20;&#x503C;&#x5728;&#x5207;&#x7247;&#x4E2D;&#x7684;&#x7D22;&#x5F15;&#x503C;&#x3002; &#x5FAA;&#x73AF;&#x63A7;&#x5236;&#x8BED;&#x53E5;&#xFF1A; break &#xFF0C;&#x7528;&#x4E8E;&#x4E2D;&#x65AD;&#x5F53;&#x524D; for &#x5FAA;&#x73AF;&#x6216;&#x8DF3;&#x51FA; switch &#x8BED;&#x53E5; continue &#xFF0C;&#x8DF3;&#x8FC7;&#x5F53;&#x524D;&#x5FAA;&#xFF0C;&#x7EE7;&#x7EED;&#x8FDB;&#x884C;&#x4E0B;&#x4E00;&#x8F6E;&#x5FAA;&#x73AF;&#x3002; goto &#xFF0C;&#x5C06;&#x63A7;&#x5236;&#x8F6C;&#x79FB;&#x5230;&#x88AB;&#x6807;&#x8BB0;&#x7684;&#x8BED;&#x53E5;&#x3002;&#x901A;&#x5E38;&#x4E0E;&#x6761;&#x4EF6;&#x8BED;&#x53E5;&#x914D;&#x5408;&#x4F7F;&#x7528;&#x3002;&#x53EF;&#x7528;&#x6765;&#x5B9E;&#x73B0;&#x6761;&#x4EF6;&#x8F6C;&#x79FB;&#xFF0C; &#x6784;&#x6210;&#x5FAA;&#x73AF;&#xFF0C;&#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#x4F53;&#x7B49;&#x529F;&#x80FD;&#x3002;&#x4E0D;&#x63A8;&#x8350; &#x4F7F;&#x7528;&#xFF0C;&#x4EE5;&#x514D;&#x9020;&#x6210;&#x6D41;&#x7A0B;&#x6DF7;&#x4E71;&#x3002; goto &#x5B9E;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 LOOP: for a  20 { \t if a == 15 { \t\t\t /* &#x8DF3;&#x8FC7;&#x8FED;&#x4EE3; */ \t\t\ta = a + 1 \t\t\t goto LOOP \t} \tfmt.Printf( a&#x7684;&#x503C;&#x4E3A; : %d\\n , a) \ta ++ } &#x4F7F;&#x7528;&#x5E26;&#x6709; range &#x5B50;&#x53E5;&#x7684; for &#x8BED;&#x53E5;&#x904D;&#x5386;&#x5B57;&#x7B26;&#x4E32;&#x503C;&#x7684;&#x65F6;&#x5019;&#x5E94;&#x8BE5;&#x6CE8;&#x610F; &#x5E26;&#x6709; range &#x5B50;&#x53E5;&#x7684; for &#x8BED;&#x53E5;&#x4F1A;&#x5148;&#x628A;&#x88AB;&#x904D;&#x5386;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x503C;&#x62C6;&#x6210;&#x4E00;&#x4E2A; &#x5B57;&#x8282;&#x5E8F;&#x5217; &#xFF08;&#x6CE8;&#x610F;&#x662F;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x8BD5;&#x56FE;&#x627E;&#x51FA;&#x8FD9;&#x4E2A;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x4E2D; &#x5305;&#x542B;&#x7684;&#x6BCF;&#x4E00;&#x4E2A; UTF-8 &#x7F16;&#x7801;&#x503C;&#xFF0C;&#x6216;&#x8005;&#x8BF4;&#x6BCF;&#x4E00;&#x4E2A; Unicode &#x5B57;&#x7B26;&#x3002; &#x8FD9;&#x6837;&#x7684; for &#x8BED;&#x53E5;&#x53EF;&#x4EE5;&#x4E3A;&#x4E24;&#x4E2A;&#x8FED;&#x4EE3;&#x53D8;&#x91CF;&#x8D4B;&#x503C;&#x3002;&#x5982;&#x679C;&#x5B58;&#x5728;&#x4E24;&#x4E2A;&#x8FED;&#x4EE3;&#x53D8;&#x91CF;&#xFF0C;&#x90A3;&#x4E48;&#x8D4B;&#x7ED9;&#x7B2C;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x5C31;&#x5C06;&#x4F1A;&#x662F;&#x5F53;&#x524D;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x4E2D;&#x7684;&#x67D0;&#x4E2A; UTF-8 &#x7F16;&#x7801; &#x503C;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x90A3;&#x4E2A;&#x7D22;&#x5F15;&#x503C;&#x3002;&#x800C;&#x8D4B;&#x7ED9;&#x7B2C;&#x4E8C;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x5219;&#x662F;&#x8FD9;&#x4E2A; UTF-8 &#x7F16;&#x7801;&#x503C;&#x4EE3;&#x8868;&#x7684;&#x90A3;&#x4E2A; Unicode &#x5B57;&#x7B26;&#xFF0C;&#x5176;&#x7C7B;&#x578B;&#x4F1A;&#x662F; rune &#x3002; 1 2 3 4 str := Go &#x7231;&#x597D;&#x8005;  for i, c := range str { fmt.Printf( %d: %q [% x]\\n , i, c, [] byte ( string (c))) } &#x5B8C;&#x6574;&#x7684;&#x6253;&#x5370;&#x5185;&#x5BB9;&#x5982;&#x4E0B;&#xFF1A; 1 2 3 4 5 0: &apos;G&apos; [47] 1: &apos;o&apos; [6f] 2: &apos;&#x7231;&apos; [e7 88 b1] 5: &apos;&#x597D;&apos; [e5 a5 bd] 8: &apos;&#x8005;&apos; [e8 80 85] &#x6CE8;&#x610F;&#x4E86;&#xFF0C;&#x2019;&#x7231;&#x2019;&#x662F;&#x7531;&#x4E09;&#x4E2A;&#x5B57;&#x8282;&#x5171;&#x540C;&#x8868;&#x8FBE;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x7B2C;&#x56DB;&#x4E2A; Unicode &#x5B57;&#x7B26;&#x2019;&#x597D;&#x2019;&#x5BF9;&#x5E94;&#x7684;&#x7D22;&#x5F15;&#x503C;&#x5E76;&#x4E0D;&#x662F; 3&#xFF0C;&#x800C;&#x662F; 2 &#x52A0; 3 &#x540E;&#x5F97;&#x5230;&#x7684; 5 &#x3002;"},"basic/interface.html":{"title":"接口","path":"\\golang-learn\\basic\\interface.html","body":"接口 Go 支持接口数据类型，接口类型是一种抽象的类型。接口类型具体描述了一系列方法的集合，任何其他类型只要实现了这些方法就是实 现了这个接口，无须显示声明。 接口只有当有两个或两个以上的具体类型必须以相同的方式进行处理时才需要 。 接口的零值就是它的类型和值的部分都是 nil 。 简单的说， interface 是一组 method 的组合，我们通过 interface 来定义对象的一组行为。 定义接口： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type 接口名 interface  方法名 1 [返回类型] 方法名 2 [返回类型] 方法名 3 [返回类型] ...  /* 定义结构体 */ type struct_name struct  /* variables */  /* 实现接口方法 */ func (struct_name_variable struct_name) 方法名1 () [返回类型]  /* 方法实现 */  ... func (struct_name_variable struct_name) 方法名2 () [返回类型]  /* 方法实现*/  实例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 type Phone interface  call()  type NokiaPhone struct   func (nokiaPhone NokiaPhone) call ()  fmt.Println( \"I am Nokia, I can call you!\" )  type IPhone struct   func (iPhone IPhone) call ()  fmt.Println( \"I am iPhone, I can call you!\" )  func main ()  var phone Phone phone = new (NokiaPhone) phone.call() phone = new (IPhone) phone.call()  接口类型也可以通过组合已有的接口来定义： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 type Reader interface  Read(p [] byte ) (n int , err error)  type Closer interface  Close() error  type ReadWriteCloser interface  Reader Writer Closer  // 混合 type ReadWriter interface  Read(p [] byte ) (n int , err error) Writer  空接口类型 interface {} 被称为空接口类型，它没有任何方法。所有的类型都实现了空 interface ， 空 interface 在我们需要存储任意类型的数值的时候相当有用，因为它可以存储任意类型的数值。 1 2 3 4 5 6 7 // 定义a为空接口 var a interface  var i int = 5 s := \"Hello world\" // a可以存储任意类型的数值 a = i a = s 一个函数把 interface{} 作为参数，那么他可以接受任意类型的值作为参数，如果一个函数返回 interface{} , 那么也就可以返回任意类型的值。 interface{} 可以存储任意类型，那么怎么判断存储了什么类型？ error 接口 Go 内置了错误接口。 1 2 3 type error interface  Error() string  创建一个 error 最简单的方法就是调用 errors.New 函数。 error 包： 1 2 3 4 5 6 7 package errors func New (text string ) error  return &amp;errorStringtext  type errorString struct  text string  func (e *errorString) Error () string  return e.text  fmt.Errorf 封装了 errors.New 函数，它会处理字符串格式化。 当我们想通过模板化的方式生成错误信息，并得到错误值时， 可以使用 fmt.Errorf 函数。该函数所做的其实就是先调用 fmt.Sprintf 函数，得到确切的错误信息；再调用 errors.New 函数， 得到包含该错误信息的 error 类型值，最后返回该值 。 实际上， error 类型值的 Error 方法就相当于其他类型值的 String 方法。 接口的实际用途 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package main import ( \"fmt\" ) //定义 interface type VowelsFinder interface  FindVowels() [] rune  type MyString string //实现接口 func (ms MyString) FindVowels () [] rune  var vowels [] rune for _, rune := range ms  if rune == 'a' || rune == 'e' || rune == 'i' || rune == 'o' || rune == 'u'  vowels = append (vowels, rune )   return vowels  func main ()  name := MyString( \"Sam Anderson\" ) // 类型转换 var v VowelsFinder // 定义一个接口类型的变量 v = name fmt.Printf( \"Vowels are %c\" , v.FindVowels())  上面的代码 fmt.Printf(Vowels are %c, v.FindVowels()) 是可以直接使用 fmt.Printf(Vowels are %c, name.FindVowels()) 的，那么我们定义的变量 V 没有没有了意义。看下面的代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 package main import ( \t \"fmt\" ) // 薪资计算器接口 type SalaryCalculator interface  \tCalculateSalary() int  // 普通挖掘机员工 type Contract struct  \tempId int \tbasicpay int  // 有蓝翔技校证的员工 type Permanent struct  \tempId int \tbasicpay int \tjj int // 奖金  func (p Permanent) CalculateSalary () int  \t return p.basicpay + p.jj  func (c Contract) CalculateSalary () int  \t return c.basicpay  // 总开支 func totalExpense (s []SalaryCalculator)  \texpense := 0 \t for _, v := range s  \t\texpense = expense + v.CalculateSalary() \t \tfmt.Printf( \"总开支 $%d\" , expense)  func main ()  \tpemp1 := Permanent 1 , 3000 , 10000  \tpemp2 := Permanent 2 , 3000 , 20000  \tcemp1 := Contract 3 , 3000  \temployees := []SalaryCalculatorpemp1, pemp2, cemp1 \ttotalExpense(employees)  这个时候体现出了接口的作用， Contract 和 Permanent 是不一样的结构体类型，但是可以定义一个 SalaryCalculator 接口类 型的数组，就可以在 totalExpense 中调用元素的 CalculateSalary 方法。"},"basic/interface.html#接口":{"title":"&#x63A5;&#x53E3;","path":"\\golang-learn\\basic\\interface.html#接口","body":"Go &#x652F;&#x6301;&#x63A5;&#x53E3;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x662F;&#x4E00;&#x79CD;&#x62BD;&#x8C61;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x5177;&#x4F53;&#x63CF;&#x8FF0;&#x4E86;&#x4E00;&#x7CFB;&#x5217;&#x65B9;&#x6CD5;&#x7684;&#x96C6;&#x5408;&#xFF0C;&#x4EFB;&#x4F55;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x53EA;&#x8981;&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x5B9E; &#x73B0;&#x4E86;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x65E0;&#x987B;&#x663E;&#x793A;&#x58F0;&#x660E;&#x3002; &#x63A5;&#x53E3;&#x53EA;&#x6709;&#x5F53;&#x6709;&#x4E24;&#x4E2A;&#x6216;&#x4E24;&#x4E2A;&#x4EE5;&#x4E0A;&#x7684;&#x5177;&#x4F53;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x4EE5;&#x76F8;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x5904;&#x7406;&#x65F6;&#x624D;&#x9700;&#x8981; &#x3002; &#x63A5;&#x53E3;&#x7684;&#x96F6;&#x503C;&#x5C31;&#x662F;&#x5B83;&#x7684;&#x7C7B;&#x578B;&#x548C;&#x503C;&#x7684;&#x90E8;&#x5206;&#x90FD;&#x662F; nil &#x3002; &#x7B80;&#x5355;&#x7684;&#x8BF4;&#xFF0C; interface &#x662F;&#x4E00;&#x7EC4; method &#x7684;&#x7EC4;&#x5408;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7; interface &#x6765;&#x5B9A;&#x4E49;&#x5BF9;&#x8C61;&#x7684;&#x4E00;&#x7EC4;&#x884C;&#x4E3A;&#x3002; &#x5B9A;&#x4E49;&#x63A5;&#x53E3;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type &#x63A5;&#x53E3;&#x540D; interface { &#x65B9;&#x6CD5;&#x540D; 1 [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] &#x65B9;&#x6CD5;&#x540D; 2 [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] &#x65B9;&#x6CD5;&#x540D; 3 [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] ... } /* &#x5B9A;&#x4E49;&#x7ED3;&#x6784;&#x4F53; */ type struct_name struct { /* variables */ } /* &#x5B9E;&#x73B0;&#x63A5;&#x53E3;&#x65B9;&#x6CD5; */ func (struct_name_variable struct_name) &#x65B9;&#x6CD5;&#x540D;1 () [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] { /* &#x65B9;&#x6CD5;&#x5B9E;&#x73B0; */ } ... func (struct_name_variable struct_name) &#x65B9;&#x6CD5;&#x540D;2 () [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] { /* &#x65B9;&#x6CD5;&#x5B9E;&#x73B0;*/ } &#x5B9E;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 type Phone interface { call() } type NokiaPhone struct { } func (nokiaPhone NokiaPhone) call () { fmt.Println( I am Nokia, I can call you! ) } type IPhone struct { } func (iPhone IPhone) call () { fmt.Println( I am iPhone, I can call you! ) } func main () { var phone Phone phone = new (NokiaPhone) phone.call() phone = new (IPhone) phone.call() } &#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7EC4;&#x5408;&#x5DF2;&#x6709;&#x7684;&#x63A5;&#x53E3;&#x6765;&#x5B9A;&#x4E49;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 type Reader interface { Read(p [] byte ) (n int , err error) } type Closer interface { Close() error } type ReadWriteCloser interface { Reader Writer Closer } // &#x6DF7;&#x5408; type ReadWriter interface { Read(p [] byte ) (n int , err error) Writer } &#x7A7A;&#x63A5;&#x53E3;&#x7C7B;&#x578B; interface {} &#x88AB;&#x79F0;&#x4E3A;&#x7A7A;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x65B9;&#x6CD5;&#x3002;&#x6240;&#x6709;&#x7684;&#x7C7B;&#x578B;&#x90FD;&#x5B9E;&#x73B0;&#x4E86;&#x7A7A; interface &#xFF0C; &#x7A7A; interface &#x5728;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x503C;&#x7684;&#x65F6;&#x5019;&#x76F8;&#x5F53;&#x6709;&#x7528;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x503C;&#x3002; 1 2 3 4 5 6 7 // &#x5B9A;&#x4E49;a&#x4E3A;&#x7A7A;&#x63A5;&#x53E3; var a interface {} var i int = 5 s := Hello world // a&#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x503C; a = i a = s &#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x628A; interface{} &#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x8FD4;&#x56DE; interface{} , &#x90A3;&#x4E48;&#x4E5F;&#x5C31;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; interface{} &#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#xFF0C;&#x90A3;&#x4E48;&#x600E;&#x4E48;&#x5224;&#x65AD;&#x5B58;&#x50A8;&#x4E86;&#x4EC0;&#x4E48;&#x7C7B;&#x578B;&#xFF1F; error &#x63A5;&#x53E3; Go &#x5185;&#x7F6E;&#x4E86;&#x9519;&#x8BEF;&#x63A5;&#x53E3;&#x3002; 1 2 3 type error interface { Error() string } &#x521B;&#x5EFA;&#x4E00;&#x4E2A; error &#x6700;&#x7B80;&#x5355;&#x7684;&#x65B9;&#x6CD5;&#x5C31;&#x662F;&#x8C03;&#x7528; errors.New &#x51FD;&#x6570;&#x3002; error &#x5305;&#xFF1A; 1 2 3 4 5 6 7 package errors func New (text string ) error { return &amp;errorString{text} } type errorString struct { text string } func (e *errorString) Error () string { return e.text } fmt.Errorf &#x5C01;&#x88C5;&#x4E86; errors.New &#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x4F1A;&#x5904;&#x7406;&#x5B57;&#x7B26;&#x4E32;&#x683C;&#x5F0F;&#x5316;&#x3002; &#x5F53;&#x6211;&#x4EEC;&#x60F3;&#x901A;&#x8FC7;&#x6A21;&#x677F;&#x5316;&#x7684;&#x65B9;&#x5F0F;&#x751F;&#x6210;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x5F97;&#x5230;&#x9519;&#x8BEF;&#x503C;&#x65F6;&#xFF0C; &#x53EF;&#x4EE5;&#x4F7F;&#x7528; fmt.Errorf &#x51FD;&#x6570;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x6240;&#x505A;&#x7684;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x5148;&#x8C03;&#x7528; fmt.Sprintf &#x51FD;&#x6570;&#xFF0C;&#x5F97;&#x5230;&#x786E;&#x5207;&#x7684;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#xFF1B;&#x518D;&#x8C03;&#x7528; errors.New &#x51FD;&#x6570;&#xFF0C; &#x5F97;&#x5230;&#x5305;&#x542B;&#x8BE5;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x7684; error &#x7C7B;&#x578B;&#x503C;&#xFF0C;&#x6700;&#x540E;&#x8FD4;&#x56DE;&#x8BE5;&#x503C; &#x3002; &#x5B9E;&#x9645;&#x4E0A;&#xFF0C; error &#x7C7B;&#x578B;&#x503C;&#x7684; Error &#x65B9;&#x6CD5;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#x503C;&#x7684; String &#x65B9;&#x6CD5;&#x3002; &#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x9645;&#x7528;&#x9014; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 package main import ( fmt ) //&#x5B9A;&#x4E49; interface type VowelsFinder interface { FindVowels() [] rune } type MyString string //&#x5B9E;&#x73B0;&#x63A5;&#x53E3; func (ms MyString) FindVowels () [] rune { var vowels [] rune for _, rune := range ms { if rune == &apos;a&apos; || rune == &apos;e&apos; || rune == &apos;i&apos; || rune == &apos;o&apos; || rune == &apos;u&apos; { vowels = append (vowels, rune ) } } return vowels } func main () { name := MyString( Sam Anderson ) // &#x7C7B;&#x578B;&#x8F6C;&#x6362; var v VowelsFinder // &#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF; v = name fmt.Printf( Vowels are %c , v.FindVowels()) } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801; fmt.Printf(Vowels are %c, v.FindVowels()) &#x662F;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528; fmt.Printf(Vowels are %c, name.FindVowels()) &#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x7684;&#x53D8;&#x91CF; V &#x6CA1;&#x6709;&#x6CA1;&#x6709;&#x4E86;&#x610F;&#x4E49;&#x3002;&#x770B;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 package main import ( \t fmt ) // &#x85AA;&#x8D44;&#x8BA1;&#x7B97;&#x5668;&#x63A5;&#x53E3; type SalaryCalculator interface { \tCalculateSalary() int } // &#x666E;&#x901A;&#x6316;&#x6398;&#x673A;&#x5458;&#x5DE5; type Contract struct { \tempId int \tbasicpay int } // &#x6709;&#x84DD;&#x7FD4;&#x6280;&#x6821;&#x8BC1;&#x7684;&#x5458;&#x5DE5; type Permanent struct { \tempId int \tbasicpay int \tjj int // &#x5956;&#x91D1; } func (p Permanent) CalculateSalary () int { \t return p.basicpay + p.jj } func (c Contract) CalculateSalary () int { \t return c.basicpay } // &#x603B;&#x5F00;&#x652F; func totalExpense (s []SalaryCalculator) { \texpense := 0 \t for _, v := range s { \t\texpense = expense + v.CalculateSalary() \t} \tfmt.Printf( &#x603B;&#x5F00;&#x652F; $%d , expense) } func main () { \tpemp1 := Permanent{ 1 , 3000 , 10000 } \tpemp2 := Permanent{ 2 , 3000 , 20000 } \tcemp1 := Contract{ 3 , 3000 } \temployees := []SalaryCalculator{pemp1, pemp2, cemp1} \ttotalExpense(employees) } &#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4F53;&#x73B0;&#x51FA;&#x4E86;&#x63A5;&#x53E3;&#x7684;&#x4F5C;&#x7528;&#xFF0C; Contract &#x548C; Permanent &#x662F;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A; SalaryCalculator &#x63A5;&#x53E3;&#x7C7B; &#x578B;&#x7684;&#x6570;&#x7EC4;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5728; totalExpense &#x4E2D;&#x8C03;&#x7528;&#x5143;&#x7D20;&#x7684; CalculateSalary &#x65B9;&#x6CD5;&#x3002;"},"advance/gc.html":{"title":"","path":"\\golang-learn\\advance\\gc.html","body":"垃圾回收 Go 语言中使用的垃圾回收使用的是 标记清扫算法 。标记清理最典型的做法是三⾊标记。进行垃圾回收时会 STW(stop the world）， 就是 runtime 把所有的线程全部冻结掉，意味着⽤户逻辑都是暂停的，所有的⽤户对象都不会被修改了 ，这时候去扫描肯定是安全的， 对象要么活着要么死着，所以会造成中间暂停时间可能会很⻓，⽤户逻辑对于⽤户的反应就中⽌了。 三色标记算法原理如下： 起初所有对象都是白色。 从根出发扫描所有可达对象，标记为灰色，放入待处理队列。 从队列取出灰色对象，将其引用对象标记为灰色放入队列，自身标记为黑色。 重复 3，直到灰色对象队列为空。此时白色对象即为垃圾，进行回收。 何时触发 GC 自动垃圾回收 在堆上分配大于 32K byte 对象的时候进行检测此时是否满足垃圾回收条件，如果满足则进行垃圾回收。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 func mallocgc (size uintptr , typ *_type, needzero bool ) unsafe . Pointer  ... shouldhelpgc := false // 分配的对象小于 32K byte if size = maxSmallSize  ...  else  shouldhelpgc = true ...  ... // gcShouldStart() 函数进行触发条件检测 if shouldhelpgc &amp;&amp; gcShouldStart( false )  // gcStart() 函数进行垃圾回收 gcStart(gcBackgroundMode, false )   主动垃圾回收 主动垃圾回收，通过调用 runtime.GC() ，这是阻塞式的。 1 2 3 4 5 6 // GC runs a garbage collection and blocks the caller until the // garbage collection is complete. It may also block the entire // program. func GC ()  gcStart(gcForceBlockMode, false )  GC 触发条件 触发条件主要关注下面代码中的中间部分： forceTrigger || memstats.heap_live = memstats.gc_trigger 。 forceTrigger 是 forceGC 的标志；后面半句的意思是当前堆上的活跃对象大于我们初始化时候设置的 GC 触发阈值。 在 malloc 以及 free 的时候 heap_live 会一直进行更新。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 // gcShouldStart returns true if the exit condition for the _GCoff // phase has been met. The exit condition should be tested when // allocating. // // If forceTrigger is true, it ignores the current heap size, but // checks all other conditions. In general this should be false. func gcShouldStart (forceTrigger bool ) bool  return gcphase == _GCoff &amp;&amp; (forceTrigger || memstats.heap_live = memstats.gc_trigger) &amp;&amp; memstats.enablegc &amp;&amp; panicking == 0 &amp;&amp; gcpercent = 0  //初始化的时候设置 GC 的触发阈值 func gcinit ()  _ = setGCPercent(readgogc()) memstats.gc_trigger = heapminimum ...  // 启动的时候通过 GOGC 传递百分比 x // 触发阈值等于 x * defaultHeapMinimum (defaultHeapMinimum 默认是 4M) func readgogc () int32  p := gogetenv( \"GOGC\" ) if p == \"off\"  return -1  if n, ok := atoi32(p); ok  return n  return 100 "},"advance/gc.html#垃圾回收":{"title":"&#x5783;&#x573E;&#x56DE;&#x6536;","path":"\\golang-learn\\advance\\gc.html#垃圾回收","body":"Go &#x8BED;&#x8A00;&#x4E2D;&#x4F7F;&#x7528;&#x7684;&#x5783;&#x573E;&#x56DE;&#x6536;&#x4F7F;&#x7528;&#x7684;&#x662F; &#x6807;&#x8BB0;&#x6E05;&#x626B;&#x7B97;&#x6CD5; &#x3002;&#x6807;&#x8BB0;&#x6E05;&#x7406;&#x6700;&#x5178;&#x578B;&#x7684;&#x505A;&#x6CD5;&#x662F;&#x4E09;&#x2F8A;&#x6807;&#x8BB0;&#x3002;&#x8FDB;&#x884C;&#x5783;&#x573E;&#x56DE;&#x6536;&#x65F6;&#x4F1A; STW(stop the world&#xFF09;&#xFF0C; &#x5C31;&#x662F; runtime &#x628A;&#x6240;&#x6709;&#x7684;&#x7EBF;&#x7A0B;&#x5168;&#x90E8;&#x51BB;&#x7ED3;&#x6389;&#xFF0C;&#x610F;&#x5473;&#x7740;&#x2F64;&#x6237;&#x903B;&#x8F91;&#x90FD;&#x662F;&#x6682;&#x505C;&#x7684;&#xFF0C;&#x6240;&#x6709;&#x7684;&#x2F64;&#x6237;&#x5BF9;&#x8C61;&#x90FD;&#x4E0D;&#x4F1A;&#x88AB;&#x4FEE;&#x6539;&#x4E86; &#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x53BB;&#x626B;&#x63CF;&#x80AF;&#x5B9A;&#x662F;&#x5B89;&#x5168;&#x7684;&#xFF0C; &#x5BF9;&#x8C61;&#x8981;&#x4E48;&#x6D3B;&#x7740;&#x8981;&#x4E48;&#x6B7B;&#x7740;&#xFF0C;&#x6240;&#x4EE5;&#x4F1A;&#x9020;&#x6210;&#x4E2D;&#x95F4;&#x6682;&#x505C;&#x65F6;&#x95F4;&#x53EF;&#x80FD;&#x4F1A;&#x5F88;&#x2ED3;&#xFF0C;&#x2F64;&#x6237;&#x903B;&#x8F91;&#x5BF9;&#x4E8E;&#x2F64;&#x6237;&#x7684;&#x53CD;&#x5E94;&#x5C31;&#x4E2D;&#x2F4C;&#x4E86;&#x3002; &#x4E09;&#x8272;&#x6807;&#x8BB0;&#x7B97;&#x6CD5;&#x539F;&#x7406;&#x5982;&#x4E0B;&#xFF1A; &#x8D77;&#x521D;&#x6240;&#x6709;&#x5BF9;&#x8C61;&#x90FD;&#x662F;&#x767D;&#x8272;&#x3002; &#x4ECE;&#x6839;&#x51FA;&#x53D1;&#x626B;&#x63CF;&#x6240;&#x6709;&#x53EF;&#x8FBE;&#x5BF9;&#x8C61;&#xFF0C;&#x6807;&#x8BB0;&#x4E3A;&#x7070;&#x8272;&#xFF0C;&#x653E;&#x5165;&#x5F85;&#x5904;&#x7406;&#x961F;&#x5217;&#x3002; &#x4ECE;&#x961F;&#x5217;&#x53D6;&#x51FA;&#x7070;&#x8272;&#x5BF9;&#x8C61;&#xFF0C;&#x5C06;&#x5176;&#x5F15;&#x7528;&#x5BF9;&#x8C61;&#x6807;&#x8BB0;&#x4E3A;&#x7070;&#x8272;&#x653E;&#x5165;&#x961F;&#x5217;&#xFF0C;&#x81EA;&#x8EAB;&#x6807;&#x8BB0;&#x4E3A;&#x9ED1;&#x8272;&#x3002; &#x91CD;&#x590D; 3&#xFF0C;&#x76F4;&#x5230;&#x7070;&#x8272;&#x5BF9;&#x8C61;&#x961F;&#x5217;&#x4E3A;&#x7A7A;&#x3002;&#x6B64;&#x65F6;&#x767D;&#x8272;&#x5BF9;&#x8C61;&#x5373;&#x4E3A;&#x5783;&#x573E;&#xFF0C;&#x8FDB;&#x884C;&#x56DE;&#x6536;&#x3002; &#x4F55;&#x65F6;&#x89E6;&#x53D1; GC &#x81EA;&#x52A8;&#x5783;&#x573E;&#x56DE;&#x6536; &#x5728;&#x5806;&#x4E0A;&#x5206;&#x914D;&#x5927;&#x4E8E; 32K byte &#x5BF9;&#x8C61;&#x7684;&#x65F6;&#x5019;&#x8FDB;&#x884C;&#x68C0;&#x6D4B;&#x6B64;&#x65F6;&#x662F;&#x5426;&#x6EE1;&#x8DB3;&#x5783;&#x573E;&#x56DE;&#x6536;&#x6761;&#x4EF6;&#xFF0C;&#x5982;&#x679C;&#x6EE1;&#x8DB3;&#x5219;&#x8FDB;&#x884C;&#x5783;&#x573E;&#x56DE;&#x6536;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 func mallocgc (size uintptr , typ *_type, needzero bool ) unsafe . Pointer { ... shouldhelpgc := false // &#x5206;&#x914D;&#x7684;&#x5BF9;&#x8C61;&#x5C0F;&#x4E8E; 32K byte if size = maxSmallSize { ... } else { shouldhelpgc = true ... } ... // gcShouldStart() &#x51FD;&#x6570;&#x8FDB;&#x884C;&#x89E6;&#x53D1;&#x6761;&#x4EF6;&#x68C0;&#x6D4B; if shouldhelpgc &amp;&amp; gcShouldStart( false ) { // gcStart() &#x51FD;&#x6570;&#x8FDB;&#x884C;&#x5783;&#x573E;&#x56DE;&#x6536; gcStart(gcBackgroundMode, false ) } } &#x4E3B;&#x52A8;&#x5783;&#x573E;&#x56DE;&#x6536; &#x4E3B;&#x52A8;&#x5783;&#x573E;&#x56DE;&#x6536;&#xFF0C;&#x901A;&#x8FC7;&#x8C03;&#x7528; runtime.GC() &#xFF0C;&#x8FD9;&#x662F;&#x963B;&#x585E;&#x5F0F;&#x7684;&#x3002; 1 2 3 4 5 6 // GC runs a garbage collection and blocks the caller until the // garbage collection is complete. It may also block the entire // program. func GC () { gcStart(gcForceBlockMode, false ) } GC &#x89E6;&#x53D1;&#x6761;&#x4EF6; &#x89E6;&#x53D1;&#x6761;&#x4EF6;&#x4E3B;&#x8981;&#x5173;&#x6CE8;&#x4E0B;&#x9762;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x4E2D;&#x95F4;&#x90E8;&#x5206;&#xFF1A; forceTrigger || memstats.heap_live = memstats.gc_trigger &#x3002; forceTrigger &#x662F; forceGC &#x7684;&#x6807;&#x5FD7;&#xFF1B;&#x540E;&#x9762;&#x534A;&#x53E5;&#x7684;&#x610F;&#x601D;&#x662F;&#x5F53;&#x524D;&#x5806;&#x4E0A;&#x7684;&#x6D3B;&#x8DC3;&#x5BF9;&#x8C61;&#x5927;&#x4E8E;&#x6211;&#x4EEC;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x5019;&#x8BBE;&#x7F6E;&#x7684; GC &#x89E6;&#x53D1;&#x9608;&#x503C;&#x3002; &#x5728; malloc &#x4EE5;&#x53CA; free &#x7684;&#x65F6;&#x5019; heap_live &#x4F1A;&#x4E00;&#x76F4;&#x8FDB;&#x884C;&#x66F4;&#x65B0;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 // gcShouldStart returns true if the exit condition for the _GCoff // phase has been met. The exit condition should be tested when // allocating. // // If forceTrigger is true, it ignores the current heap size, but // checks all other conditions. In general this should be false. func gcShouldStart (forceTrigger bool ) bool { return gcphase == _GCoff &amp;&amp; (forceTrigger || memstats.heap_live = memstats.gc_trigger) &amp;&amp; memstats.enablegc &amp;&amp; panicking == 0 &amp;&amp; gcpercent = 0 } //&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#x8BBE;&#x7F6E; GC &#x7684;&#x89E6;&#x53D1;&#x9608;&#x503C; func gcinit () { _ = setGCPercent(readgogc()) memstats.gc_trigger = heapminimum ... } // &#x542F;&#x52A8;&#x7684;&#x65F6;&#x5019;&#x901A;&#x8FC7; GOGC &#x4F20;&#x9012;&#x767E;&#x5206;&#x6BD4; x // &#x89E6;&#x53D1;&#x9608;&#x503C;&#x7B49;&#x4E8E; x * defaultHeapMinimum (defaultHeapMinimum &#x9ED8;&#x8BA4;&#x662F; 4M) func readgogc () int32 { p := gogetenv( GOGC ) if p == off { return -1 } if n, ok := atoi32(p); ok { return n } return 100 }"},"basic/error.html":{"title":"错误","path":"\\golang-learn\\basic\\error.html","body":"错误 error 类型 error 类型是内置的接口类型。 error 类型可能是 nil 或者 non-nil ， nil 表示成功。 错误处理 当函数调用返回错误时，最常用的处理方式是 传播错误 ，如。 1 2 3 4 5 6 7 8 9 10 11 12 13 resp, err := http.Get(url) if err != nil  // 将这个HTTP错误返回给调用者 return nil , err  doc, err := html.Parse(resp.Body) resp.Body.Close() if err != nil  \t // fmt.Errorf函数使用fmt.Sprintf格式化错误信息并返回 \t // 使用该函数前缀添加额外的上下文信息到原始错误信息。 return nil , fmt.Errorf( \"parsing %s as HTML: %v\" , url,err)  由于错误信息经常是以链式组合在一起的，所以错误信息中应避免大写和换行符。 编写错误信息时，我们要确保错误信息对问题细节的描述是详尽的。尤其是要注意错误信息表达的一致性，即相同的函数或同包内 的同一组函数返回的错误在构成和处理方式上是相似的。 根据不同的场景，我们可能要对错误做些特殊处理，比如错误重试机制，或者打印错误日志，或者直接忽略错误。 文件结尾错误 io 包在任何由文件结束引起的读取失败都返回同一个错误 io.EOF ： 1 2 3 4 5 6 7 8 9 10 11 in := bufio.NewReader(os.Stdin) for  r, _, err := in.ReadRune() if err == io.EOF  break // finished reading  if err != nil  return fmt.Errorf( \"read failed:%v\" , err)  // ...use r…  Panic 异常 Go 运行时错误会引起 painc 异常。 一般而言，当 panic 异常发生时，程序会中断运行，并立即执行在该 goroutine 中被延迟的函数（ defer 机制）。随后，程序崩溃 并输出日志信息。 由于 panic 会引起程序的崩溃，因此 panic 一般用于严重错误，如程序内部的逻辑不一致。但是对于大部分漏洞，我们应该使 用 Go 提供的错误机制，而不是 panic ，尽量避免程序的崩溃。 panic 函数 panic 函数接受任何值作为参数。当某些不应该发生的场景发生时，我们就应该调用 panic 。 panic 详情中都有什么 1 2 3 4 5 6 panic: runtime error: index out of range goroutine 1 [running]: main.main() /Users/haolin/GeekTime/Golang_Puzzlers/src/puzzlers/article19/q0/demo47.go:5 +0x3d exit status 2 第一行是 panic: runtime error: index out of range 。其中的 runtime error 的含义是，这是一个 runtime 代码包中 抛出的 panic 。 goroutine 1 [running] ，它表示有一个 ID 为1的 goroutine 在此 panic 被引发的时候正在运行。这里的 ID 其实并不重要。 main.main() 表明了这个 goroutine 包装的 go 函数就是命令源码文件中的那个 main 函数，也就是说这里的 goroutine 正 是 主 goroutine 。 再下面的一行，指出的就是这个 goroutine 中的哪一行代码在此 panic 被引发时正在执行。含了此行代码在其所属的源码文件中的行数， 以及这个源码文件的绝对路径。 +0x3d 代表的是：此行代码相对于其所属函数的入口程序计数偏移量。用处并不大。 exit status 2 表明我的这个程序是以退出状态码2结束运行的。 在大多数操作系统中，只要退出状态码不是 0，都意味着程序运行的非正 常结束 。在 Go 语言中， 因 panic 导致程序结束运行的退出状态码一般都会是 2 。 从 panic 被引发到程序终止运行的大致过程是什么 此行代码所属函数的执行随即终止。紧接着，控制权并不会在此有片刻停留，它又会立即转移至再上一级的调用代码处。控制权如此一级一 级地沿着调用栈的反方向传播至顶端， 也就是我们编写的最外层函数那里。 这里的最外层函数指的是go函数，对于主 goroutine 来说就是 main 函数。但是控制权也不会停留在那里，而是被 Go 语言运行时系统收回。 随后，程序崩溃并终止运行，承载程序这次运行的进程也会随之死亡并消失。与此同时，在这个控制权传播的过程中，panic 详情会被逐 渐地积累和完善，并会在程序终止之前被打印出来。 怎样让 panic 包含一个值，以及应该让它包含什么样的值 其实很简单，在调用 panic 函数时，把某个值作为参数传给该函数就可以了。 panic 函数的唯一一个参数是空接口 （也就是 interface{} ）类型的，所以从语法上讲，它可以接受任何类型的值。 但是，我们 最好传入 error 类型的错误值，或者其他的可以被有效序列化的值。这里的“有效序列化”指的是，可以更易读地去表示 形式转换 。 Recover 捕获异常 一般情况下，我们不能因为某个处理函数引发的 panic 异常，杀掉整个进程，可以使用 recover 函数恢复 panic 异常。 panic 时会调用 recover ，但是 recover 不能滥用，可能会引起资源泄漏或者其他问题。我们可以将 panic value 设置成特 殊类型，来标识某个 panic 是否应该被恢复。 1 2 3 4 5 6 7 8 9 10 11 12 13 func soleTitle (doc *html.Node) (title string , err error)  \t type bailout struct  \t defer func ()  \t\t switch p := recover (); p  case nil : // no panic case bailout: // \"expected\" panic err = fmt.Errorf( \"multiple title elements\" ) default : panic (p) // unexpected panic; carry on panicking \t\t \t() ...  上面的代码， deferred 函数调用 recover ，并检查 panic value 。当 panic value 是 bailout{} 类型时， deferred 函数生 成一个 error 返回给调用者。 当 panic value 是其他 non-nil 值时，表示发生了未知的 panic 异常。 正确调用 recover 函数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import ( \"fmt\" \"errors\" ) func main ()  fmt.Println( \"Enter function main.\" ) // 引发 panic。 panic (errors.New( \"something wrong\" )) p := recover () fmt.Printf( \"panic: %s\\n\" , p) fmt.Println( \"Exit function main.\" )  上面的代码， recover 函数调用并不会起到任何作用，甚至都没有机会执行。因为 panic 一旦发生，控制权就会讯速地沿着调用栈的反方向 传播。所以， 在 panic 函数调用之后的代码，根本就没有执行的机会 。 先调用 recover 函数，再调用 panic 函数会怎么样呢？ 如果在我们调用 recover 函数时未发生 panic，那么该函数就不会做任何事情，并且只会返回一个 nil 。 defer 语句调用 recover 函数才是正确的打开方式 。 无论函数结束执行的原因是什么，其中的 defer 函数调用都会在它即将结束执行的那一刻执行。即使导致它执行结束的原因是一 个 panic 也会是这样。 要注意，我们要 尽量把 defer 语句写在函数体的开始处，因为在引发 panic 的语句之后的所有语句，都不会有任何执行机会 。"},"basic/error.html#错误":{"title":"&#x9519;&#x8BEF;","path":"\\golang-learn\\basic\\error.html#错误","body":""},"basic/error.html#error-类型":{"title":"error &#x7C7B;&#x578B;","path":"\\golang-learn\\basic\\error.html#error-类型","body":"error &#x7C7B;&#x578B;&#x662F;&#x5185;&#x7F6E;&#x7684;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x3002; error &#x7C7B;&#x578B;&#x53EF;&#x80FD;&#x662F; nil &#x6216;&#x8005; non-nil &#xFF0C; nil &#x8868;&#x793A;&#x6210;&#x529F;&#x3002; &#x9519;&#x8BEF;&#x5904;&#x7406; &#x5F53;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x8FD4;&#x56DE;&#x9519;&#x8BEF;&#x65F6;&#xFF0C;&#x6700;&#x5E38;&#x7528;&#x7684;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x662F; &#x4F20;&#x64AD;&#x9519;&#x8BEF; &#xFF0C;&#x5982;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 resp, err := http.Get(url) if err != nil { // &#x5C06;&#x8FD9;&#x4E2A;HTTP&#x9519;&#x8BEF;&#x8FD4;&#x56DE;&#x7ED9;&#x8C03;&#x7528;&#x8005; return nil , err } doc, err := html.Parse(resp.Body) resp.Body.Close() if err != nil { \t // fmt.Errorf&#x51FD;&#x6570;&#x4F7F;&#x7528;fmt.Sprintf&#x683C;&#x5F0F;&#x5316;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x5E76;&#x8FD4;&#x56DE; \t // &#x4F7F;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#x524D;&#x7F00;&#x6DFB;&#x52A0;&#x989D;&#x5916;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4FE1;&#x606F;&#x5230;&#x539F;&#x59CB;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3002; return nil , fmt.Errorf( parsing %s as HTML: %v , url,err) } &#x7531;&#x4E8E;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x7ECF;&#x5E38;&#x662F;&#x4EE5;&#x94FE;&#x5F0F;&#x7EC4;&#x5408;&#x5728;&#x4E00;&#x8D77;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x4E2D;&#x5E94;&#x907F;&#x514D;&#x5927;&#x5199;&#x548C;&#x6362;&#x884C;&#x7B26;&#x3002; &#x7F16;&#x5199;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x8981;&#x786E;&#x4FDD;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x5BF9;&#x95EE;&#x9898;&#x7EC6;&#x8282;&#x7684;&#x63CF;&#x8FF0;&#x662F;&#x8BE6;&#x5C3D;&#x7684;&#x3002;&#x5C24;&#x5176;&#x662F;&#x8981;&#x6CE8;&#x610F;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x8868;&#x8FBE;&#x7684;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x5373;&#x76F8;&#x540C;&#x7684;&#x51FD;&#x6570;&#x6216;&#x540C;&#x5305;&#x5185; &#x7684;&#x540C;&#x4E00;&#x7EC4;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x9519;&#x8BEF;&#x5728;&#x6784;&#x6210;&#x548C;&#x5904;&#x7406;&#x65B9;&#x5F0F;&#x4E0A;&#x662F;&#x76F8;&#x4F3C;&#x7684;&#x3002; &#x6839;&#x636E;&#x4E0D;&#x540C;&#x7684;&#x573A;&#x666F;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x8981;&#x5BF9;&#x9519;&#x8BEF;&#x505A;&#x4E9B;&#x7279;&#x6B8A;&#x5904;&#x7406;&#xFF0C;&#x6BD4;&#x5982;&#x9519;&#x8BEF;&#x91CD;&#x8BD5;&#x673A;&#x5236;&#xFF0C;&#x6216;&#x8005;&#x6253;&#x5370;&#x9519;&#x8BEF;&#x65E5;&#x5FD7;&#xFF0C;&#x6216;&#x8005;&#x76F4;&#x63A5;&#x5FFD;&#x7565;&#x9519;&#x8BEF;&#x3002; &#x6587;&#x4EF6;&#x7ED3;&#x5C3E;&#x9519;&#x8BEF; io &#x5305;&#x5728;&#x4EFB;&#x4F55;&#x7531;&#x6587;&#x4EF6;&#x7ED3;&#x675F;&#x5F15;&#x8D77;&#x7684;&#x8BFB;&#x53D6;&#x5931;&#x8D25;&#x90FD;&#x8FD4;&#x56DE;&#x540C;&#x4E00;&#x4E2A;&#x9519;&#x8BEF; io.EOF &#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 in := bufio.NewReader(os.Stdin) for { r, _, err := in.ReadRune() if err == io.EOF { break // finished reading } if err != nil { return fmt.Errorf( read failed:%v , err) } // ...use r&#x2026; }"},"basic/error.html#Panic-异常":{"title":"Panic &#x5F02;&#x5E38;","path":"\\golang-learn\\basic\\error.html#Panic-异常","body":"Go &#x8FD0;&#x884C;&#x65F6;&#x9519;&#x8BEF;&#x4F1A;&#x5F15;&#x8D77; painc &#x5F02;&#x5E38;&#x3002; &#x4E00;&#x822C;&#x800C;&#x8A00;&#xFF0C;&#x5F53; panic &#x5F02;&#x5E38;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x7A0B;&#x5E8F;&#x4F1A;&#x4E2D;&#x65AD;&#x8FD0;&#x884C;&#xFF0C;&#x5E76;&#x7ACB;&#x5373;&#x6267;&#x884C;&#x5728;&#x8BE5; goroutine &#x4E2D;&#x88AB;&#x5EF6;&#x8FDF;&#x7684;&#x51FD;&#x6570;&#xFF08; defer &#x673A;&#x5236;&#xFF09;&#x3002;&#x968F;&#x540E;&#xFF0C;&#x7A0B;&#x5E8F;&#x5D29;&#x6E83; &#x5E76;&#x8F93;&#x51FA;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x3002; &#x7531;&#x4E8E; panic &#x4F1A;&#x5F15;&#x8D77;&#x7A0B;&#x5E8F;&#x7684;&#x5D29;&#x6E83;&#xFF0C;&#x56E0;&#x6B64; panic &#x4E00;&#x822C;&#x7528;&#x4E8E;&#x4E25;&#x91CD;&#x9519;&#x8BEF;&#xFF0C;&#x5982;&#x7A0B;&#x5E8F;&#x5185;&#x90E8;&#x7684;&#x903B;&#x8F91;&#x4E0D;&#x4E00;&#x81F4;&#x3002;&#x4F46;&#x662F;&#x5BF9;&#x4E8E;&#x5927;&#x90E8;&#x5206;&#x6F0F;&#x6D1E;&#xFF0C;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x4F7F; &#x7528; Go &#x63D0;&#x4F9B;&#x7684;&#x9519;&#x8BEF;&#x673A;&#x5236;&#xFF0C;&#x800C;&#x4E0D;&#x662F; panic &#xFF0C;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#x7A0B;&#x5E8F;&#x7684;&#x5D29;&#x6E83;&#x3002; panic &#x51FD;&#x6570; panic &#x51FD;&#x6570;&#x63A5;&#x53D7;&#x4EFB;&#x4F55;&#x503C;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x3002;&#x5F53;&#x67D0;&#x4E9B;&#x4E0D;&#x5E94;&#x8BE5;&#x53D1;&#x751F;&#x7684;&#x573A;&#x666F;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5E94;&#x8BE5;&#x8C03;&#x7528; panic &#x3002; panic &#x8BE6;&#x60C5;&#x4E2D;&#x90FD;&#x6709;&#x4EC0;&#x4E48; 1 2 3 4 5 6 panic: runtime error: index out of range goroutine 1 [running]: main.main() /Users/haolin/GeekTime/Golang_Puzzlers/src/puzzlers/article19/q0/demo47.go:5 +0x3d exit status 2 &#x7B2C;&#x4E00;&#x884C;&#x662F; panic: runtime error: index out of range &#x3002;&#x5176;&#x4E2D;&#x7684; runtime error &#x7684;&#x542B;&#x4E49;&#x662F;&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A; runtime &#x4EE3;&#x7801;&#x5305;&#x4E2D; &#x629B;&#x51FA;&#x7684; panic &#x3002; goroutine 1 [running] &#xFF0C;&#x5B83;&#x8868;&#x793A;&#x6709;&#x4E00;&#x4E2A; ID &#x4E3A;1&#x7684; goroutine &#x5728;&#x6B64; panic &#x88AB;&#x5F15;&#x53D1;&#x7684;&#x65F6;&#x5019;&#x6B63;&#x5728;&#x8FD0;&#x884C;&#x3002;&#x8FD9;&#x91CC;&#x7684; ID &#x5176;&#x5B9E;&#x5E76;&#x4E0D;&#x91CD;&#x8981;&#x3002; main.main() &#x8868;&#x660E;&#x4E86;&#x8FD9;&#x4E2A; goroutine &#x5305;&#x88C5;&#x7684; go &#x51FD;&#x6570;&#x5C31;&#x662F;&#x547D;&#x4EE4;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x90A3;&#x4E2A; main &#x51FD;&#x6570;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x8FD9;&#x91CC;&#x7684; goroutine &#x6B63; &#x662F; &#x4E3B; goroutine &#x3002; &#x518D;&#x4E0B;&#x9762;&#x7684;&#x4E00;&#x884C;&#xFF0C;&#x6307;&#x51FA;&#x7684;&#x5C31;&#x662F;&#x8FD9;&#x4E2A; goroutine &#x4E2D;&#x7684;&#x54EA;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x5728;&#x6B64; panic &#x88AB;&#x5F15;&#x53D1;&#x65F6;&#x6B63;&#x5728;&#x6267;&#x884C;&#x3002;&#x542B;&#x4E86;&#x6B64;&#x884C;&#x4EE3;&#x7801;&#x5728;&#x5176;&#x6240;&#x5C5E;&#x7684;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x884C;&#x6570;&#xFF0C; &#x4EE5;&#x53CA;&#x8FD9;&#x4E2A;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x7684;&#x7EDD;&#x5BF9;&#x8DEF;&#x5F84;&#x3002; +0x3d &#x4EE3;&#x8868;&#x7684;&#x662F;&#xFF1A;&#x6B64;&#x884C;&#x4EE3;&#x7801;&#x76F8;&#x5BF9;&#x4E8E;&#x5176;&#x6240;&#x5C5E;&#x51FD;&#x6570;&#x7684;&#x5165;&#x53E3;&#x7A0B;&#x5E8F;&#x8BA1;&#x6570;&#x504F;&#x79FB;&#x91CF;&#x3002;&#x7528;&#x5904;&#x5E76;&#x4E0D;&#x5927;&#x3002; exit status 2 &#x8868;&#x660E;&#x6211;&#x7684;&#x8FD9;&#x4E2A;&#x7A0B;&#x5E8F;&#x662F;&#x4EE5;&#x9000;&#x51FA;&#x72B6;&#x6001;&#x7801;2&#x7ED3;&#x675F;&#x8FD0;&#x884C;&#x7684;&#x3002; &#x5728;&#x5927;&#x591A;&#x6570;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x53EA;&#x8981;&#x9000;&#x51FA;&#x72B6;&#x6001;&#x7801;&#x4E0D;&#x662F; 0&#xFF0C;&#x90FD;&#x610F;&#x5473;&#x7740;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x7684;&#x975E;&#x6B63; &#x5E38;&#x7ED3;&#x675F; &#x3002;&#x5728; Go &#x8BED;&#x8A00;&#x4E2D;&#xFF0C; &#x56E0; panic &#x5BFC;&#x81F4;&#x7A0B;&#x5E8F;&#x7ED3;&#x675F;&#x8FD0;&#x884C;&#x7684;&#x9000;&#x51FA;&#x72B6;&#x6001;&#x7801;&#x4E00;&#x822C;&#x90FD;&#x4F1A;&#x662F; 2 &#x3002; &#x4ECE; panic &#x88AB;&#x5F15;&#x53D1;&#x5230;&#x7A0B;&#x5E8F;&#x7EC8;&#x6B62;&#x8FD0;&#x884C;&#x7684;&#x5927;&#x81F4;&#x8FC7;&#x7A0B;&#x662F;&#x4EC0;&#x4E48; &#x6B64;&#x884C;&#x4EE3;&#x7801;&#x6240;&#x5C5E;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x968F;&#x5373;&#x7EC8;&#x6B62;&#x3002;&#x7D27;&#x63A5;&#x7740;&#xFF0C;&#x63A7;&#x5236;&#x6743;&#x5E76;&#x4E0D;&#x4F1A;&#x5728;&#x6B64;&#x6709;&#x7247;&#x523B;&#x505C;&#x7559;&#xFF0C;&#x5B83;&#x53C8;&#x4F1A;&#x7ACB;&#x5373;&#x8F6C;&#x79FB;&#x81F3;&#x518D;&#x4E0A;&#x4E00;&#x7EA7;&#x7684;&#x8C03;&#x7528;&#x4EE3;&#x7801;&#x5904;&#x3002;&#x63A7;&#x5236;&#x6743;&#x5982;&#x6B64;&#x4E00;&#x7EA7;&#x4E00; &#x7EA7;&#x5730;&#x6CBF;&#x7740;&#x8C03;&#x7528;&#x6808;&#x7684;&#x53CD;&#x65B9;&#x5411;&#x4F20;&#x64AD;&#x81F3;&#x9876;&#x7AEF;&#xFF0C; &#x4E5F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x7F16;&#x5199;&#x7684;&#x6700;&#x5916;&#x5C42;&#x51FD;&#x6570;&#x90A3;&#x91CC;&#x3002; &#x8FD9;&#x91CC;&#x7684;&#x6700;&#x5916;&#x5C42;&#x51FD;&#x6570;&#x6307;&#x7684;&#x662F;go&#x51FD;&#x6570;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E3B; goroutine &#x6765;&#x8BF4;&#x5C31;&#x662F; main &#x51FD;&#x6570;&#x3002;&#x4F46;&#x662F;&#x63A7;&#x5236;&#x6743;&#x4E5F;&#x4E0D;&#x4F1A;&#x505C;&#x7559;&#x5728;&#x90A3;&#x91CC;&#xFF0C;&#x800C;&#x662F;&#x88AB; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x6536;&#x56DE;&#x3002; &#x968F;&#x540E;&#xFF0C;&#x7A0B;&#x5E8F;&#x5D29;&#x6E83;&#x5E76;&#x7EC8;&#x6B62;&#x8FD0;&#x884C;&#xFF0C;&#x627F;&#x8F7D;&#x7A0B;&#x5E8F;&#x8FD9;&#x6B21;&#x8FD0;&#x884C;&#x7684;&#x8FDB;&#x7A0B;&#x4E5F;&#x4F1A;&#x968F;&#x4E4B;&#x6B7B;&#x4EA1;&#x5E76;&#x6D88;&#x5931;&#x3002;&#x4E0E;&#x6B64;&#x540C;&#x65F6;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x63A7;&#x5236;&#x6743;&#x4F20;&#x64AD;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;panic &#x8BE6;&#x60C5;&#x4F1A;&#x88AB;&#x9010; &#x6E10;&#x5730;&#x79EF;&#x7D2F;&#x548C;&#x5B8C;&#x5584;&#xFF0C;&#x5E76;&#x4F1A;&#x5728;&#x7A0B;&#x5E8F;&#x7EC8;&#x6B62;&#x4E4B;&#x524D;&#x88AB;&#x6253;&#x5370;&#x51FA;&#x6765;&#x3002; &#x600E;&#x6837;&#x8BA9; panic &#x5305;&#x542B;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x4EE5;&#x53CA;&#x5E94;&#x8BE5;&#x8BA9;&#x5B83;&#x5305;&#x542B;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x503C; &#x5176;&#x5B9E;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5728;&#x8C03;&#x7528; panic &#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x628A;&#x67D0;&#x4E2A;&#x503C;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x4F20;&#x7ED9;&#x8BE5;&#x51FD;&#x6570;&#x5C31;&#x53EF;&#x4EE5;&#x4E86;&#x3002; panic &#x51FD;&#x6570;&#x7684;&#x552F;&#x4E00;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x7A7A;&#x63A5;&#x53E3; &#xFF08;&#x4E5F;&#x5C31;&#x662F; interface{} &#xFF09;&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4ECE;&#x8BED;&#x6CD5;&#x4E0A;&#x8BB2;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; &#x4F46;&#x662F;&#xFF0C;&#x6211;&#x4EEC; &#x6700;&#x597D;&#x4F20;&#x5165; error &#x7C7B;&#x578B;&#x7684;&#x9519;&#x8BEF;&#x503C;&#xFF0C;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x7684;&#x53EF;&#x4EE5;&#x88AB;&#x6709;&#x6548;&#x5E8F;&#x5217;&#x5316;&#x7684;&#x503C;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x201C;&#x6709;&#x6548;&#x5E8F;&#x5217;&#x5316;&#x201D;&#x6307;&#x7684;&#x662F;&#xFF0C;&#x53EF;&#x4EE5;&#x66F4;&#x6613;&#x8BFB;&#x5730;&#x53BB;&#x8868;&#x793A; &#x5F62;&#x5F0F;&#x8F6C;&#x6362; &#x3002;"},"basic/error.html#Recover-捕获异常":{"title":"Recover &#x6355;&#x83B7;&#x5F02;&#x5E38;","path":"\\golang-learn\\basic\\error.html#Recover-捕获异常","body":"&#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x56E0;&#x4E3A;&#x67D0;&#x4E2A;&#x5904;&#x7406;&#x51FD;&#x6570;&#x5F15;&#x53D1;&#x7684; panic &#x5F02;&#x5E38;&#xFF0C;&#x6740;&#x6389;&#x6574;&#x4E2A;&#x8FDB;&#x7A0B;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; recover &#x51FD;&#x6570;&#x6062;&#x590D; panic &#x5F02;&#x5E38;&#x3002; panic &#x65F6;&#x4F1A;&#x8C03;&#x7528; recover &#xFF0C;&#x4F46;&#x662F; recover &#x4E0D;&#x80FD;&#x6EE5;&#x7528;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x5F15;&#x8D77;&#x8D44;&#x6E90;&#x6CC4;&#x6F0F;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x95EE;&#x9898;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06; panic value &#x8BBE;&#x7F6E;&#x6210;&#x7279; &#x6B8A;&#x7C7B;&#x578B;&#xFF0C;&#x6765;&#x6807;&#x8BC6;&#x67D0;&#x4E2A; panic &#x662F;&#x5426;&#x5E94;&#x8BE5;&#x88AB;&#x6062;&#x590D;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 func soleTitle (doc *html.Node) (title string , err error) { \t type bailout struct {} \t defer func () { \t\t switch p := recover (); p { case nil : // no panic case bailout{}: // expected panic err = fmt.Errorf( multiple title elements ) default : panic (p) // unexpected panic; carry on panicking \t\t} \t}() ... } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C; deferred &#x51FD;&#x6570;&#x8C03;&#x7528; recover &#xFF0C;&#x5E76;&#x68C0;&#x67E5; panic value &#x3002;&#x5F53; panic value &#x662F; bailout{} &#x7C7B;&#x578B;&#x65F6;&#xFF0C; deferred &#x51FD;&#x6570;&#x751F; &#x6210;&#x4E00;&#x4E2A; error &#x8FD4;&#x56DE;&#x7ED9;&#x8C03;&#x7528;&#x8005;&#x3002; &#x5F53; panic value &#x662F;&#x5176;&#x4ED6; non-nil &#x503C;&#x65F6;&#xFF0C;&#x8868;&#x793A;&#x53D1;&#x751F;&#x4E86;&#x672A;&#x77E5;&#x7684; panic &#x5F02;&#x5E38;&#x3002; &#x6B63;&#x786E;&#x8C03;&#x7528; recover &#x51FD;&#x6570; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import ( fmt errors ) func main () { fmt.Println( Enter function main. ) // &#x5F15;&#x53D1; panic&#x3002; panic (errors.New( something wrong )) p := recover () fmt.Printf( panic: %s\\n , p) fmt.Println( Exit function main. ) } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C; recover &#x51FD;&#x6570;&#x8C03;&#x7528;&#x5E76;&#x4E0D;&#x4F1A;&#x8D77;&#x5230;&#x4EFB;&#x4F55;&#x4F5C;&#x7528;&#xFF0C;&#x751A;&#x81F3;&#x90FD;&#x6CA1;&#x6709;&#x673A;&#x4F1A;&#x6267;&#x884C;&#x3002;&#x56E0;&#x4E3A; panic &#x4E00;&#x65E6;&#x53D1;&#x751F;&#xFF0C;&#x63A7;&#x5236;&#x6743;&#x5C31;&#x4F1A;&#x8BAF;&#x901F;&#x5730;&#x6CBF;&#x7740;&#x8C03;&#x7528;&#x6808;&#x7684;&#x53CD;&#x65B9;&#x5411; &#x4F20;&#x64AD;&#x3002;&#x6240;&#x4EE5;&#xFF0C; &#x5728; panic &#x51FD;&#x6570;&#x8C03;&#x7528;&#x4E4B;&#x540E;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6839;&#x672C;&#x5C31;&#x6CA1;&#x6709;&#x6267;&#x884C;&#x7684;&#x673A;&#x4F1A; &#x3002; &#x5148;&#x8C03;&#x7528; recover &#x51FD;&#x6570;&#xFF0C;&#x518D;&#x8C03;&#x7528; panic &#x51FD;&#x6570;&#x4F1A;&#x600E;&#x4E48;&#x6837;&#x5462;&#xFF1F; &#x5982;&#x679C;&#x5728;&#x6211;&#x4EEC;&#x8C03;&#x7528; recover &#x51FD;&#x6570;&#x65F6;&#x672A;&#x53D1;&#x751F; panic&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x51FD;&#x6570;&#x5C31;&#x4E0D;&#x4F1A;&#x505A;&#x4EFB;&#x4F55;&#x4E8B;&#x60C5;&#xFF0C;&#x5E76;&#x4E14;&#x53EA;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; nil &#x3002; defer &#x8BED;&#x53E5;&#x8C03;&#x7528; recover &#x51FD;&#x6570;&#x624D;&#x662F;&#x6B63;&#x786E;&#x7684;&#x6253;&#x5F00;&#x65B9;&#x5F0F; &#x3002; &#x65E0;&#x8BBA;&#x51FD;&#x6570;&#x7ED3;&#x675F;&#x6267;&#x884C;&#x7684;&#x539F;&#x56E0;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x5176;&#x4E2D;&#x7684; defer &#x51FD;&#x6570;&#x8C03;&#x7528;&#x90FD;&#x4F1A;&#x5728;&#x5B83;&#x5373;&#x5C06;&#x7ED3;&#x675F;&#x6267;&#x884C;&#x7684;&#x90A3;&#x4E00;&#x523B;&#x6267;&#x884C;&#x3002;&#x5373;&#x4F7F;&#x5BFC;&#x81F4;&#x5B83;&#x6267;&#x884C;&#x7ED3;&#x675F;&#x7684;&#x539F;&#x56E0;&#x662F;&#x4E00; &#x4E2A; panic &#x4E5F;&#x4F1A;&#x662F;&#x8FD9;&#x6837;&#x3002; &#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x6211;&#x4EEC;&#x8981; &#x5C3D;&#x91CF;&#x628A; defer &#x8BED;&#x53E5;&#x5199;&#x5728;&#x51FD;&#x6570;&#x4F53;&#x7684;&#x5F00;&#x59CB;&#x5904;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x5F15;&#x53D1; panic &#x7684;&#x8BED;&#x53E5;&#x4E4B;&#x540E;&#x7684;&#x6240;&#x6709;&#x8BED;&#x53E5;&#xFF0C;&#x90FD;&#x4E0D;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x6267;&#x884C;&#x673A;&#x4F1A; &#x3002;"},"basic/oop.html":{"title":"面向对象","path":"\\golang-learn\\basic\\oop.html","body":"面向对象 GO 支持面向对象编程。 方法 方法声明： 1 2 3 func (变量名 类型) 方法名 () [返回类型]  /* 函数体*/  实例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* 定义结构体 */ type Circle struct  radius float64  func main ()  var c1 Circle c1.radius = 10.00 fmt.Println( \"Area of Circle(c1) = \" , c1.getArea())  // 该 method 属于 Circle 类型对象中的方法 // 这里的 c 叫作方法的接收器，类似 Javascript 的 this func (c Circle) getArea () float64  // c.radius 即为 Circle 类型对象中的属性 return 3.14 * c.radius * c.radius  Go 没有像其它语言那样用 this 或者 self 作为接收器。 Go 可以给任意类型定义方法 。 1 2 3 4 func (p *Point) ScaleBy (factor float64 )  \tp.X *= factor \tp.Y *= factor  调用指针类型方法 (*Point).ScaleBy ， () 必须有，否则会被理解为 *(Point.ScaleBy) 。 1 2 3 4 5 6 7 8 9 // 调用指针类型方法 r := &amp;Point 1 , 2  r.ScaleBy( 2 ) // 简短写法 p := Point 1 , 2  // 编译器会隐式地帮我们用&amp;p去调用ScaleBy这个方法。这种简写方法只适用于“变量” p.ScaleBy( 2 ) 只有类型( Point )和指向他们的指针( *Point )，才是可能会出现在接收器声明里的两种接收器。此外，为了避免歧义，在声明方法时， 如果一个类型名本身是一个指针的话，是不允许其出现在接收器中的: 1 2 type P * int func (P) f ()  /* ... */  // compile error: invalid receiver type 如何选择 receiver 的类型 不管你的 method 的 receiver 是指针类型还是非指针类型，都是可以通过指针/非指针类型进行调用的，编译器会帮你做类型转换 。 在声明一个 method 的 receiver 该是指针还是非指针类型时，你需要考虑： 要修改实例状态，用 *T ，无需修改使用 T 。 大对象建议使用 *T ，减少复制成本， T 调用时会产生一次拷贝。 对于引用类型，直接使用 T ，因为它们本身就是指针包装的。 包含 Mutex 等同步字段，使用 *T ，避免因为复制造成锁操作无效。 无法确定时，使用 *T 。 方法的接收者类型必须是某个自定义的数据类型，而且不能是接口类型或接口的指针类型 。 值方法，就是接收者类型是非指针的自定义数据类型的方法。 指针方法，就是接收者类型是指针类型的方法。 嵌入结构体扩展类型 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import \"image/color\" type Point struct  X, Y float64  type ColoredPoint struct  Point Color color.RGBA  red := color.RGBA 255 , 0 , 0 , 255  blue := color.RGBA 0 , 0 , 255 , 255  var p = ColoredPointPoint 1 , 1 , red var q = ColoredPointPoint 5 , 4 , blue fmt.Println(p.Distance(q.Point)) // \"5\" p.ScaleBy( 2 ) q.ScaleBy( 2 ) fmt.Println(p.Distance(q.Point)) // \"10\" 如果对基于类来实现面向对象的语言比较熟悉的话，可能会倾向于将 Point 看作一个基类，而 ColoredPoint 看作其子类或者继承类。 但这是错误的理解。请注意上面例子中对 Distance 方法的调用。 Distance 有一个参数是 Point 类型，但是这里的 q 虽然貌 似是继承了 Point 类，但 q 并不是，所以尽管 q 有着 Point 这个内嵌类型，我们也必须要显式传入 q.Point 。 Go 语言是用嵌入字段实现了继承吗 Go 语言中 没有继承的概念，它所做的是通过嵌入字段的方式实现了类型之间的组合 。 具体原因和理念请见 Why is there no type inheritance? 。 简单来说，面向对象编程中的继承，其实是通过牺牲一定的代码简洁性来换取可扩展性，而且这种可扩展性是通过侵入的方式来实现的。 类型之间的组合采用的是非声明的方式，我们不需要显式地声明某个类型实现了某个接口，或者一个类型继承了另一个类型。 同时，类型组合也是非侵入式的，它不会破坏类型的封装或加重类型之间的耦合。我们要做的只是把类型当做字段嵌入进来，然后坐 享其成地使用嵌入字段所拥有的一切。如果嵌入字段有哪里不合心意，我们还可以用“包装”或“屏蔽”的方式去调整和优化。 另外，类型间的组合也是灵活的，我们总是可以通过嵌入字段的方式把一个类型的属性和能力“嫁接”给另一个类型。 这时候，被嵌入类型也就自然而然地实现了嵌入字段所实现的接口。再者，组合要比继承更加简洁和清晰，Go 语言可以轻而易举地通过嵌入 多个字段来实现功能强大的类型，却不会有多重继承那样复杂的层次结构和可观的管理成本。 封装 一个对象的变量或者方法如果对调用方是不可见的话，一般就被定义为“封装”。通过首字母大小写来定义是否从包中导出。 封装一个对象，必须定义为一个 struct ： 1 2 3 type IntSet struct  words [] uint64  优点： 调用方不能直接修改对象的变量值 隐藏实现的细节，防止调用方依赖那些可能变化的具体实现，这样使设计包的程序员在不破坏对外的api情况下能得到更大的自由。 阻止了外部调用方对对象内部的值任意地进行修改。 String 方法 在 Go 语言中， 我们可以通过为一个类型编写名为 String 的方法，来自定义该类型的字符串表示形式。这个 String 方法不需 要任何参数声明，但需要有一个 string 类型的结果声明 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 type AnimalCategory struct  kingdom string // 界。 phylum string // 门。 class string // 纲。 order string // 目。 family string // 科。 genus string // 属。 species string // 种。  func (ac AnimalCategory) String () string  return fmt.Sprintf( \"%s%s%s%s%s%s%s\" ,ac.kingdom, ac.phylum, ac.class, ac.order,ac.family, ac.genus, ac.species)  category := AnimalCategoryspecies: \"cat\"  fmt.Printf( \"The animal category: %s\\n\" , category) 正因为如此，我在调用 fmt.Printf 函数时，使用占位符 %s 和 category 值本身就可以打印出后者的字符串表示形式， 而 无需显式地调用它的 String 方法 。 fmt.Printf 函数会自己去寻找它。此时的打印内容会是 The animal category: cat 。显而易见， category 的 String 方法成 功地引用了当前值的所有字段。"},"basic/oop.html#面向对象":{"title":"&#x9762;&#x5411;&#x5BF9;&#x8C61;","path":"\\golang-learn\\basic\\oop.html#面向对象","body":"GO &#x652F;&#x6301;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7F16;&#x7A0B;&#x3002;"},"basic/oop.html#方法":{"title":"&#x65B9;&#x6CD5;","path":"\\golang-learn\\basic\\oop.html#方法","body":"&#x65B9;&#x6CD5;&#x58F0;&#x660E;&#xFF1A; 1 2 3 func (&#x53D8;&#x91CF;&#x540D; &#x7C7B;&#x578B;) &#x65B9;&#x6CD5;&#x540D; () [&#x8FD4;&#x56DE;&#x7C7B;&#x578B;] { /* &#x51FD;&#x6570;&#x4F53;*/ } &#x5B9E;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 /* &#x5B9A;&#x4E49;&#x7ED3;&#x6784;&#x4F53; */ type Circle struct { radius float64 } func main () { var c1 Circle c1.radius = 10.00 fmt.Println( Area of Circle(c1) =  , c1.getArea()) } // &#x8BE5; method &#x5C5E;&#x4E8E; Circle &#x7C7B;&#x578B;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x65B9;&#x6CD5; // &#x8FD9;&#x91CC;&#x7684; c &#x53EB;&#x4F5C;&#x65B9;&#x6CD5;&#x7684;&#x63A5;&#x6536;&#x5668;&#xFF0C;&#x7C7B;&#x4F3C; Javascript &#x7684; this func (c Circle) getArea () float64 { // c.radius &#x5373;&#x4E3A; Circle &#x7C7B;&#x578B;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x5C5E;&#x6027; return 3.14 * c.radius * c.radius } Go &#x6CA1;&#x6709;&#x50CF;&#x5176;&#x5B83;&#x8BED;&#x8A00;&#x90A3;&#x6837;&#x7528; this &#x6216;&#x8005; self &#x4F5C;&#x4E3A;&#x63A5;&#x6536;&#x5668;&#x3002; Go &#x53EF;&#x4EE5;&#x7ED9;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x5B9A;&#x4E49;&#x65B9;&#x6CD5; &#x3002; 1 2 3 4 func (p *Point) ScaleBy (factor float64 ) { \tp.X *= factor \tp.Y *= factor } &#x8C03;&#x7528;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x65B9;&#x6CD5; (*Point).ScaleBy &#xFF0C; () &#x5FC5;&#x987B;&#x6709;&#xFF0C;&#x5426;&#x5219;&#x4F1A;&#x88AB;&#x7406;&#x89E3;&#x4E3A; *(Point.ScaleBy) &#x3002; 1 2 3 4 5 6 7 8 9 // &#x8C03;&#x7528;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x65B9;&#x6CD5; r := &amp;Point{ 1 , 2 } r.ScaleBy( 2 ) // &#x7B80;&#x77ED;&#x5199;&#x6CD5; p := Point{ 1 , 2 } // &#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x9690;&#x5F0F;&#x5730;&#x5E2E;&#x6211;&#x4EEC;&#x7528;&amp;p&#x53BB;&#x8C03;&#x7528;ScaleBy&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x3002;&#x8FD9;&#x79CD;&#x7B80;&#x5199;&#x65B9;&#x6CD5;&#x53EA;&#x9002;&#x7528;&#x4E8E;&#x201C;&#x53D8;&#x91CF;&#x201D; p.ScaleBy( 2 ) &#x53EA;&#x6709;&#x7C7B;&#x578B;( Point )&#x548C;&#x6307;&#x5411;&#x4ED6;&#x4EEC;&#x7684;&#x6307;&#x9488;( *Point )&#xFF0C;&#x624D;&#x662F;&#x53EF;&#x80FD;&#x4F1A;&#x51FA;&#x73B0;&#x5728;&#x63A5;&#x6536;&#x5668;&#x58F0;&#x660E;&#x91CC;&#x7684;&#x4E24;&#x79CD;&#x63A5;&#x6536;&#x5668;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x6B67;&#x4E49;&#xFF0C;&#x5728;&#x58F0;&#x660E;&#x65B9;&#x6CD5;&#x65F6;&#xFF0C; &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x540D;&#x672C;&#x8EAB;&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x7684;&#x8BDD;&#xFF0C;&#x662F;&#x4E0D;&#x5141;&#x8BB8;&#x5176;&#x51FA;&#x73B0;&#x5728;&#x63A5;&#x6536;&#x5668;&#x4E2D;&#x7684;: 1 2 type P * int func (P) f () { /* ... */ } // compile error: invalid receiver type &#x5982;&#x4F55;&#x9009;&#x62E9; receiver &#x7684;&#x7C7B;&#x578B; &#x4E0D;&#x7BA1;&#x4F60;&#x7684; method &#x7684; receiver &#x662F;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x8FD8;&#x662F;&#x975E;&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF0C;&#x90FD;&#x662F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6307;&#x9488;/&#x975E;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x8FDB;&#x884C;&#x8C03;&#x7528;&#x7684;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x5E2E;&#x4F60;&#x505A;&#x7C7B;&#x578B;&#x8F6C;&#x6362; &#x3002; &#x5728;&#x58F0;&#x660E;&#x4E00;&#x4E2A; method &#x7684; receiver &#x8BE5;&#x662F;&#x6307;&#x9488;&#x8FD8;&#x662F;&#x975E;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x65F6;&#xFF0C;&#x4F60;&#x9700;&#x8981;&#x8003;&#x8651;&#xFF1A; &#x8981;&#x4FEE;&#x6539;&#x5B9E;&#x4F8B;&#x72B6;&#x6001;&#xFF0C;&#x7528; *T &#xFF0C;&#x65E0;&#x9700;&#x4FEE;&#x6539;&#x4F7F;&#x7528; T &#x3002; &#x5927;&#x5BF9;&#x8C61;&#x5EFA;&#x8BAE;&#x4F7F;&#x7528; *T &#xFF0C;&#x51CF;&#x5C11;&#x590D;&#x5236;&#x6210;&#x672C;&#xFF0C; T &#x8C03;&#x7528;&#x65F6;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x6B21;&#x62F7;&#x8D1D;&#x3002; &#x5BF9;&#x4E8E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF0C;&#x76F4;&#x63A5;&#x4F7F;&#x7528; T &#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x672C;&#x8EAB;&#x5C31;&#x662F;&#x6307;&#x9488;&#x5305;&#x88C5;&#x7684;&#x3002; &#x5305;&#x542B; Mutex &#x7B49;&#x540C;&#x6B65;&#x5B57;&#x6BB5;&#xFF0C;&#x4F7F;&#x7528; *T &#xFF0C;&#x907F;&#x514D;&#x56E0;&#x4E3A;&#x590D;&#x5236;&#x9020;&#x6210;&#x9501;&#x64CD;&#x4F5C;&#x65E0;&#x6548;&#x3002; &#x65E0;&#x6CD5;&#x786E;&#x5B9A;&#x65F6;&#xFF0C;&#x4F7F;&#x7528; *T &#x3002; &#x65B9;&#x6CD5;&#x7684;&#x63A5;&#x6536;&#x8005;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x662F;&#x67D0;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x800C;&#x4E14;&#x4E0D;&#x80FD;&#x662F;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x6216;&#x63A5;&#x53E3;&#x7684;&#x6307;&#x9488;&#x7C7B;&#x578B; &#x3002; &#x503C;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x662F;&#x63A5;&#x6536;&#x8005;&#x7C7B;&#x578B;&#x662F;&#x975E;&#x6307;&#x9488;&#x7684;&#x81EA;&#x5B9A;&#x4E49;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x6307;&#x9488;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x662F;&#x63A5;&#x6536;&#x8005;&#x7C7B;&#x578B;&#x662F;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x3002;"},"basic/oop.html#嵌入结构体扩展类型":{"title":"&#x5D4C;&#x5165;&#x7ED3;&#x6784;&#x4F53;&#x6269;&#x5C55;&#x7C7B;&#x578B;","path":"\\golang-learn\\basic\\oop.html#嵌入结构体扩展类型","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import image/color type Point struct { X, Y float64 } type ColoredPoint struct { Point Color color.RGBA } red := color.RGBA{ 255 , 0 , 0 , 255 } blue := color.RGBA{ 0 , 0 , 255 , 255 } var p = ColoredPoint{Point{ 1 , 1 }, red} var q = ColoredPoint{Point{ 5 , 4 }, blue} fmt.Println(p.Distance(q.Point)) // 5 p.ScaleBy( 2 ) q.ScaleBy( 2 ) fmt.Println(p.Distance(q.Point)) // 10 &#x5982;&#x679C;&#x5BF9;&#x57FA;&#x4E8E;&#x7C7B;&#x6765;&#x5B9E;&#x73B0;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7684;&#x8BED;&#x8A00;&#x6BD4;&#x8F83;&#x719F;&#x6089;&#x7684;&#x8BDD;&#xFF0C;&#x53EF;&#x80FD;&#x4F1A;&#x503E;&#x5411;&#x4E8E;&#x5C06; Point &#x770B;&#x4F5C;&#x4E00;&#x4E2A;&#x57FA;&#x7C7B;&#xFF0C;&#x800C; ColoredPoint &#x770B;&#x4F5C;&#x5176;&#x5B50;&#x7C7B;&#x6216;&#x8005;&#x7EE7;&#x627F;&#x7C7B;&#x3002; &#x4F46;&#x8FD9;&#x662F;&#x9519;&#x8BEF;&#x7684;&#x7406;&#x89E3;&#x3002;&#x8BF7;&#x6CE8;&#x610F;&#x4E0A;&#x9762;&#x4F8B;&#x5B50;&#x4E2D;&#x5BF9; Distance &#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x3002; Distance &#x6709;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x662F; Point &#x7C7B;&#x578B;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x91CC;&#x7684; q &#x867D;&#x7136;&#x8C8C; &#x4F3C;&#x662F;&#x7EE7;&#x627F;&#x4E86; Point &#x7C7B;&#xFF0C;&#x4F46; q &#x5E76;&#x4E0D;&#x662F;&#xFF0C;&#x6240;&#x4EE5;&#x5C3D;&#x7BA1; q &#x6709;&#x7740; Point &#x8FD9;&#x4E2A;&#x5185;&#x5D4C;&#x7C7B;&#x578B;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x5FC5;&#x987B;&#x8981;&#x663E;&#x5F0F;&#x4F20;&#x5165; q.Point &#x3002; Go &#x8BED;&#x8A00;&#x662F;&#x7528;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x5B9E;&#x73B0;&#x4E86;&#x7EE7;&#x627F;&#x5417; Go &#x8BED;&#x8A00;&#x4E2D; &#x6CA1;&#x6709;&#x7EE7;&#x627F;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5B83;&#x6240;&#x505A;&#x7684;&#x662F;&#x901A;&#x8FC7;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x4E86;&#x7C7B;&#x578B;&#x4E4B;&#x95F4;&#x7684;&#x7EC4;&#x5408; &#x3002; &#x5177;&#x4F53;&#x539F;&#x56E0;&#x548C;&#x7406;&#x5FF5;&#x8BF7;&#x89C1; Why is there no type inheritance? &#x3002; &#x7B80;&#x5355;&#x6765;&#x8BF4;&#xFF0C;&#x9762;&#x5411;&#x5BF9;&#x8C61;&#x7F16;&#x7A0B;&#x4E2D;&#x7684;&#x7EE7;&#x627F;&#xFF0C;&#x5176;&#x5B9E;&#x662F;&#x901A;&#x8FC7;&#x727A;&#x7272;&#x4E00;&#x5B9A;&#x7684;&#x4EE3;&#x7801;&#x7B80;&#x6D01;&#x6027;&#x6765;&#x6362;&#x53D6;&#x53EF;&#x6269;&#x5C55;&#x6027;&#xFF0C;&#x800C;&#x4E14;&#x8FD9;&#x79CD;&#x53EF;&#x6269;&#x5C55;&#x6027;&#x662F;&#x901A;&#x8FC7;&#x4FB5;&#x5165;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B9E;&#x73B0;&#x7684;&#x3002; &#x7C7B;&#x578B;&#x4E4B;&#x95F4;&#x7684;&#x7EC4;&#x5408;&#x91C7;&#x7528;&#x7684;&#x662F;&#x975E;&#x58F0;&#x660E;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x9700;&#x8981;&#x663E;&#x5F0F;&#x5730;&#x58F0;&#x660E;&#x67D0;&#x4E2A;&#x7C7B;&#x578B;&#x5B9E;&#x73B0;&#x4E86;&#x67D0;&#x4E2A;&#x63A5;&#x53E3;&#xFF0C;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x7EE7;&#x627F;&#x4E86;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x3002; &#x540C;&#x65F6;&#xFF0C;&#x7C7B;&#x578B;&#x7EC4;&#x5408;&#x4E5F;&#x662F;&#x975E;&#x4FB5;&#x5165;&#x5F0F;&#x7684;&#xFF0C;&#x5B83;&#x4E0D;&#x4F1A;&#x7834;&#x574F;&#x7C7B;&#x578B;&#x7684;&#x5C01;&#x88C5;&#x6216;&#x52A0;&#x91CD;&#x7C7B;&#x578B;&#x4E4B;&#x95F4;&#x7684;&#x8026;&#x5408;&#x3002;&#x6211;&#x4EEC;&#x8981;&#x505A;&#x7684;&#x53EA;&#x662F;&#x628A;&#x7C7B;&#x578B;&#x5F53;&#x505A;&#x5B57;&#x6BB5;&#x5D4C;&#x5165;&#x8FDB;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x5750; &#x4EAB;&#x5176;&#x6210;&#x5730;&#x4F7F;&#x7528;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x6240;&#x62E5;&#x6709;&#x7684;&#x4E00;&#x5207;&#x3002;&#x5982;&#x679C;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x6709;&#x54EA;&#x91CC;&#x4E0D;&#x5408;&#x5FC3;&#x610F;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x7528;&#x201C;&#x5305;&#x88C5;&#x201D;&#x6216;&#x201C;&#x5C4F;&#x853D;&#x201D;&#x7684;&#x65B9;&#x5F0F;&#x53BB;&#x8C03;&#x6574;&#x548C;&#x4F18;&#x5316;&#x3002; &#x53E6;&#x5916;&#xFF0C;&#x7C7B;&#x578B;&#x95F4;&#x7684;&#x7EC4;&#x5408;&#x4E5F;&#x662F;&#x7075;&#x6D3B;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x603B;&#x662F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x65B9;&#x5F0F;&#x628A;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x80FD;&#x529B;&#x201C;&#x5AC1;&#x63A5;&#x201D;&#x7ED9;&#x53E6;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x3002; &#x8FD9;&#x65F6;&#x5019;&#xFF0C;&#x88AB;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x4E5F;&#x5C31;&#x81EA;&#x7136;&#x800C;&#x7136;&#x5730;&#x5B9E;&#x73B0;&#x4E86;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x6240;&#x5B9E;&#x73B0;&#x7684;&#x63A5;&#x53E3;&#x3002;&#x518D;&#x8005;&#xFF0C;&#x7EC4;&#x5408;&#x8981;&#x6BD4;&#x7EE7;&#x627F;&#x66F4;&#x52A0;&#x7B80;&#x6D01;&#x548C;&#x6E05;&#x6670;&#xFF0C;Go &#x8BED;&#x8A00;&#x53EF;&#x4EE5;&#x8F7B;&#x800C;&#x6613;&#x4E3E;&#x5730;&#x901A;&#x8FC7;&#x5D4C;&#x5165; &#x591A;&#x4E2A;&#x5B57;&#x6BB5;&#x6765;&#x5B9E;&#x73B0;&#x529F;&#x80FD;&#x5F3A;&#x5927;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x5374;&#x4E0D;&#x4F1A;&#x6709;&#x591A;&#x91CD;&#x7EE7;&#x627F;&#x90A3;&#x6837;&#x590D;&#x6742;&#x7684;&#x5C42;&#x6B21;&#x7ED3;&#x6784;&#x548C;&#x53EF;&#x89C2;&#x7684;&#x7BA1;&#x7406;&#x6210;&#x672C;&#x3002;"},"basic/oop.html#封装":{"title":"&#x5C01;&#x88C5;","path":"\\golang-learn\\basic\\oop.html#封装","body":"&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x53D8;&#x91CF;&#x6216;&#x8005;&#x65B9;&#x6CD5;&#x5982;&#x679C;&#x5BF9;&#x8C03;&#x7528;&#x65B9;&#x662F;&#x4E0D;&#x53EF;&#x89C1;&#x7684;&#x8BDD;&#xFF0C;&#x4E00;&#x822C;&#x5C31;&#x88AB;&#x5B9A;&#x4E49;&#x4E3A;&#x201C;&#x5C01;&#x88C5;&#x201D;&#x3002;&#x901A;&#x8FC7;&#x9996;&#x5B57;&#x6BCD;&#x5927;&#x5C0F;&#x5199;&#x6765;&#x5B9A;&#x4E49;&#x662F;&#x5426;&#x4ECE;&#x5305;&#x4E2D;&#x5BFC;&#x51FA;&#x3002; &#x5C01;&#x88C5;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#xFF0C;&#x5FC5;&#x987B;&#x5B9A;&#x4E49;&#x4E3A;&#x4E00;&#x4E2A; struct &#xFF1A; 1 2 3 type IntSet struct { words [] uint64 } &#x4F18;&#x70B9;&#xFF1A; &#x8C03;&#x7528;&#x65B9;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x4FEE;&#x6539;&#x5BF9;&#x8C61;&#x7684;&#x53D8;&#x91CF;&#x503C; &#x9690;&#x85CF;&#x5B9E;&#x73B0;&#x7684;&#x7EC6;&#x8282;&#xFF0C;&#x9632;&#x6B62;&#x8C03;&#x7528;&#x65B9;&#x4F9D;&#x8D56;&#x90A3;&#x4E9B;&#x53EF;&#x80FD;&#x53D8;&#x5316;&#x7684;&#x5177;&#x4F53;&#x5B9E;&#x73B0;&#xFF0C;&#x8FD9;&#x6837;&#x4F7F;&#x8BBE;&#x8BA1;&#x5305;&#x7684;&#x7A0B;&#x5E8F;&#x5458;&#x5728;&#x4E0D;&#x7834;&#x574F;&#x5BF9;&#x5916;&#x7684;api&#x60C5;&#x51B5;&#x4E0B;&#x80FD;&#x5F97;&#x5230;&#x66F4;&#x5927;&#x7684;&#x81EA;&#x7531;&#x3002; &#x963B;&#x6B62;&#x4E86;&#x5916;&#x90E8;&#x8C03;&#x7528;&#x65B9;&#x5BF9;&#x5BF9;&#x8C61;&#x5185;&#x90E8;&#x7684;&#x503C;&#x4EFB;&#x610F;&#x5730;&#x8FDB;&#x884C;&#x4FEE;&#x6539;&#x3002;"},"basic/oop.html#String-方法":{"title":"String &#x65B9;&#x6CD5;","path":"\\golang-learn\\basic\\oop.html#String-方法","body":"&#x5728; Go &#x8BED;&#x8A00;&#x4E2D;&#xFF0C; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E3A;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x7F16;&#x5199;&#x540D;&#x4E3A; String &#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x6765;&#x81EA;&#x5B9A;&#x4E49;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x793A;&#x5F62;&#x5F0F;&#x3002;&#x8FD9;&#x4E2A; String &#x65B9;&#x6CD5;&#x4E0D;&#x9700; &#x8981;&#x4EFB;&#x4F55;&#x53C2;&#x6570;&#x58F0;&#x660E;&#xFF0C;&#x4F46;&#x9700;&#x8981;&#x6709;&#x4E00;&#x4E2A; string &#x7C7B;&#x578B;&#x7684;&#x7ED3;&#x679C;&#x58F0;&#x660E; &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 type AnimalCategory struct { kingdom string // &#x754C;&#x3002; phylum string // &#x95E8;&#x3002; class string // &#x7EB2;&#x3002; order string // &#x76EE;&#x3002; family string // &#x79D1;&#x3002; genus string // &#x5C5E;&#x3002; species string // &#x79CD;&#x3002; } func (ac AnimalCategory) String () string { return fmt.Sprintf( %s%s%s%s%s%s%s ,ac.kingdom, ac.phylum, ac.class, ac.order,ac.family, ac.genus, ac.species) } category := AnimalCategory{species: cat } fmt.Printf( The animal category: %s\\n , category) &#x6B63;&#x56E0;&#x4E3A;&#x5982;&#x6B64;&#xFF0C;&#x6211;&#x5728;&#x8C03;&#x7528; fmt.Printf &#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x5360;&#x4F4D;&#x7B26; %s &#x548C; category &#x503C;&#x672C;&#x8EAB;&#x5C31;&#x53EF;&#x4EE5;&#x6253;&#x5370;&#x51FA;&#x540E;&#x8005;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x8868;&#x793A;&#x5F62;&#x5F0F;&#xFF0C; &#x800C; &#x65E0;&#x9700;&#x663E;&#x5F0F;&#x5730;&#x8C03;&#x7528;&#x5B83;&#x7684; String &#x65B9;&#x6CD5; &#x3002; fmt.Printf &#x51FD;&#x6570;&#x4F1A;&#x81EA;&#x5DF1;&#x53BB;&#x5BFB;&#x627E;&#x5B83;&#x3002;&#x6B64;&#x65F6;&#x7684;&#x6253;&#x5370;&#x5185;&#x5BB9;&#x4F1A;&#x662F; The animal category: cat &#x3002;&#x663E;&#x800C;&#x6613;&#x89C1;&#xFF0C; category &#x7684; String &#x65B9;&#x6CD5;&#x6210; &#x529F;&#x5730;&#x5F15;&#x7528;&#x4E86;&#x5F53;&#x524D;&#x503C;&#x7684;&#x6240;&#x6709;&#x5B57;&#x6BB5;&#x3002;"},"basic/pointer.html":{"title":"指针","path":"\\golang-learn\\basic\\pointer.html","body":"指针 指针和内存地址不能混为一谈 。内存地址是内存中每个字节单元的唯一编号，而指针是一个实体。指针也会分配内存空间，相当于一个 保存内存地址的整形变量。 1 2 3 4 5 x := 1 p := &amp;x // p, of type *int, points to x fmt.Println(*p) // \"1\" *p = 2 // equivalent to x = 2 fmt.Println(x) // \"2\" 上面的代码，初始化一个变量 x ， &amp; 是取地址操作， &amp;x 就是取变量 x 的内存地址，那么 p 就是一个指针， 类型是 *int ， p 这个指针保存了变量 x 的内存地址。接下来 *p 表示读取指针指向的变量的值，也就是变量 x 的值 1。 *p 也可以被赋值。 任何类型的指针的零值都是 nil 。当指针指向同一个变量或者 nil 时是相等的。 当一个指针被定义后没有分配到任何变量时，它的值为 nil 。 nil 指针也称为空指针。 指向指针的指针 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a int var ptr * int var pptr ** int a = 3000 /* 指针 ptr 地址 */ ptr = &amp;a /* 指向指针 ptr 地址 */ pptr = &amp;ptr /* 获取 pptr 的值 */ fmt.Printf( \"变量 a = %d\\n\" , a ) fmt.Printf( \"指针变量 *ptr = %d\\n\" , *ptr ) fmt.Printf( \"指向指针的指针变量 **pptr = %d\\n\" , **pptr) 为什么需要指针 相比 Java，Python，Javascript 等引用类型的语言，Golang 拥有类似C语言的指针这个相对古老的特性。但不同于 C 语言，Golang 的指 针是单独的类型，而且也不能对指针做整数运算。从这一点看，Golang 的指针基本就是一种引用。 在学习引用类型语言的时候，总是要先搞清楚，当给一个 函数/方法 传参的时候，传进去的是值还是引用。实际上，在大部分引用型语言里， 参数为基本类型时，传进去的大都是值，也就是另外复制了一份参数到当前的函数调用栈。参数为高级类型时，传进去的基本都是引用。 内存管理中的内存区域一般包括 heap 和 stack ， stack 主要用来存储当前调用栈用到的简单类型数据： string ， boolean ， int ， float 等。这些类型的内存占用小，容易回收，基本上它们的值和指针占用的空间差不多，因此可以直接复制， GC 也比较容易做针对性的 优化。复杂的高级类型占用的内存往往相对较大，存储在 heap 中， GC 回收频率相对较低，代价也较大，因此传 引用/指针 可以避免进行成本较 高的复制操作，并且节省内存，提高程序运行效率。 因此，在下列情况可以考虑使用指针： 需要改变参数的值 避免复制操作 节省内存 而在 Golang 中，具体到高级类型 struct ， slice ， map 也各有不同。实际上，只有 struct 的使用有点复杂， slice ， map ， chan 都可以直接使用，不用考虑是值还是指针 。 struct 对于函数（ function ），由函数的参数类型指定，传入的参数的类型不对会报错，例如： 1 2 3 func passValue (s struct )  func passPointer (s * struct )  对于方法（ method ），接收者（ receiver ）可以是指针，也可以是值，Golang 会在传递参数前自动适配以符合参数的类型。也就是：如果方法的参数 是值，那么按照传值的方式 ，方法内部对 struct 的改动无法作用在外部的变量上，例如： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 package main import \"fmt\" type MyPoint struct  X int Y int  func printFuncValue (p MyPoint)  p.X = 1 p.Y = 1 fmt.Printf( \" - %v\" , p)  func printFuncPointer (pp *MyPoint)  pp.X = 1 // 实际上应该写做 (*pp).X，Golang 给了语法糖，减少了麻烦，但是也导致了 * 的不一致 pp.Y = 1 fmt.Printf( \" - %v\" , pp)  func (p MyPoint) printMethodValue ()  p.X += 1 p.Y += 1 fmt.Printf( \" - %v\" , p)  // 建议使用指针作为方法（method：printMethodPointer）的接收者（receiver：*MyPoint），一是可以修改接收者的值，二是可以避免大对象的复制 func (pp *MyPoint) printMethodPointer ()  pp.X += 1 pp.Y += 1 fmt.Printf( \" - %v\" , pp)  func main ()  p := MyPoint 0 , 0  pp := &amp;MyPoint 0 , 0  fmt.Printf( \"\\n value to func(value): %v\" , p) printFuncValue(p) fmt.Printf( \" -- %v\" , p) // Output: value to func(value): 0 0 - 1 1 -- 0 0 //printFuncValue(pp) // cannot use pp (type *MyPoint) as type MyPoint in argument to printFuncValue //printFuncPointer(p) // cannot use p (type MyPoint) as type *MyPoint in argument to printFuncPointer fmt.Printf( \"\\n pointer to func(pointer): %v\" , pp) printFuncPointer(pp) fmt.Printf( \" -- %v\" , pp) // Output: pointer to func(pointer): &amp;0 0 - &amp;1 1 -- &amp;1 1 fmt.Printf( \"\\n value to method(value): %v\" , p) p.printMethodValue() fmt.Printf( \" -- %v\" , p) // Output: value to method(value): 0 0 - 1 1 -- 0 0 fmt.Printf( \"\\n value to method(pointer): %v\" , p) p.printMethodPointer() fmt.Printf( \" -- %v\" , p) // Output: value to method(pointer): 0 0 - &amp;1 1 -- 1 1 fmt.Printf( \"\\n pointer to method(value): %v\" , pp) pp.printMethodValue() fmt.Printf( \" -- %v\" , pp) // Output: pointer to method(value): &amp;1 1 - 2 2 -- &amp;1 1 fmt.Printf( \"\\n pointer to method(pointer): %v\" , pp) pp.printMethodPointer() fmt.Printf( \" -- %v\" , pp) // Output: pointer to method(pointer): &amp;1 1 - &amp;2 2 -- &amp;2 2  slice slice 实际上相当于对其依附的 array 的引用，它不存储数据，只是对 array 进行描述。因此，修改 slice 中的元素， 改变会体现在 array 上，当然也会体现在该 array 的所有 slice 上 。 map 使用 make(map[string]string) 返回的本身是个引用，可以直接用来操作 ： 1 map [ \"name\" ]= \"Jason\" 而 如果使用 map 的指针，反而会产生错误 ： 1 2 * map [ \"name\" ]= \"Jason\" // invalid indirect of m[\"title\"] (type string) (* map )[ \"name\" ]= \"Jason\" // invalid indirect of m (type map[string]string) 哪些值是不可寻址的 不可变的值不可寻址 。常量、基本类型的值字面量、字符串变量的值、函数以及方法的字面量都是如此。 其实这样规定也有安全性方面的考虑。 绝大多数被视为 临时结果的值都是不可寻址的 。算术操作的结果值属于临时结果，针对值字面量的表达式结果值也属于临时结果。 但有一个例外，对切片字面量的索引结果值虽然也属于临时结果，但却是可寻址的。函数的返回值也是临时结果。 ++ 和 -- 并不属 于操作符。 不安全的值不可寻址 ，若拿到某值的指针可能会破坏程序的一致性，那么就是不安全的。由于字典的内部机制，对字典的索 引结果值的取址操作都是不安全的。另外，获取由字面量或标识符代表的函数或方法的地址显然也是不安全的。"},"basic/pointer.html#指针":{"title":"&#x6307;&#x9488;","path":"\\golang-learn\\basic\\pointer.html#指针","body":"&#x6307;&#x9488;&#x548C;&#x5185;&#x5B58;&#x5730;&#x5740;&#x4E0D;&#x80FD;&#x6DF7;&#x4E3A;&#x4E00;&#x8C08; &#x3002;&#x5185;&#x5B58;&#x5730;&#x5740;&#x662F;&#x5185;&#x5B58;&#x4E2D;&#x6BCF;&#x4E2A;&#x5B57;&#x8282;&#x5355;&#x5143;&#x7684;&#x552F;&#x4E00;&#x7F16;&#x53F7;&#xFF0C;&#x800C;&#x6307;&#x9488;&#x662F;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#x3002;&#x6307;&#x9488;&#x4E5F;&#x4F1A;&#x5206;&#x914D;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x4E2A; &#x4FDD;&#x5B58;&#x5185;&#x5B58;&#x5730;&#x5740;&#x7684;&#x6574;&#x5F62;&#x53D8;&#x91CF;&#x3002; 1 2 3 4 5 x := 1 p := &amp;x // p, of type *int, points to x fmt.Println(*p) // 1 *p = 2 // equivalent to x = 2 fmt.Println(x) // 2 &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x53D8;&#x91CF; x &#xFF0C; &amp; &#x662F;&#x53D6;&#x5730;&#x5740;&#x64CD;&#x4F5C;&#xFF0C; &amp;x &#x5C31;&#x662F;&#x53D6;&#x53D8;&#x91CF; x &#x7684;&#x5185;&#x5B58;&#x5730;&#x5740;&#xFF0C;&#x90A3;&#x4E48; p &#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#xFF0C; &#x7C7B;&#x578B;&#x662F; *int &#xFF0C; p &#x8FD9;&#x4E2A;&#x6307;&#x9488;&#x4FDD;&#x5B58;&#x4E86;&#x53D8;&#x91CF; x &#x7684;&#x5185;&#x5B58;&#x5730;&#x5740;&#x3002;&#x63A5;&#x4E0B;&#x6765; *p &#x8868;&#x793A;&#x8BFB;&#x53D6;&#x6307;&#x9488;&#x6307;&#x5411;&#x7684;&#x53D8;&#x91CF;&#x7684;&#x503C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x53D8;&#x91CF; x &#x7684;&#x503C; 1&#x3002; *p &#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x8D4B;&#x503C;&#x3002; &#x4EFB;&#x4F55;&#x7C7B;&#x578B;&#x7684;&#x6307;&#x9488;&#x7684;&#x96F6;&#x503C;&#x90FD;&#x662F; nil &#x3002;&#x5F53;&#x6307;&#x9488;&#x6307;&#x5411;&#x540C;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x6216;&#x8005; nil &#x65F6;&#x662F;&#x76F8;&#x7B49;&#x7684;&#x3002; &#x5F53;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x88AB;&#x5B9A;&#x4E49;&#x540E;&#x6CA1;&#x6709;&#x5206;&#x914D;&#x5230;&#x4EFB;&#x4F55;&#x53D8;&#x91CF;&#x65F6;&#xFF0C;&#x5B83;&#x7684;&#x503C;&#x4E3A; nil &#x3002; nil &#x6307;&#x9488;&#x4E5F;&#x79F0;&#x4E3A;&#x7A7A;&#x6307;&#x9488;&#x3002;"},"basic/pointer.html#指向指针的指针":{"title":"&#x6307;&#x5411;&#x6307;&#x9488;&#x7684;&#x6307;&#x9488;","path":"\\golang-learn\\basic\\pointer.html#指向指针的指针","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 var a int var ptr * int var pptr ** int a = 3000 /* &#x6307;&#x9488; ptr &#x5730;&#x5740; */ ptr = &amp;a /* &#x6307;&#x5411;&#x6307;&#x9488; ptr &#x5730;&#x5740; */ pptr = &amp;ptr /* &#x83B7;&#x53D6; pptr &#x7684;&#x503C; */ fmt.Printf( &#x53D8;&#x91CF; a = %d\\n , a ) fmt.Printf( &#x6307;&#x9488;&#x53D8;&#x91CF; *ptr = %d\\n , *ptr ) fmt.Printf( &#x6307;&#x5411;&#x6307;&#x9488;&#x7684;&#x6307;&#x9488;&#x53D8;&#x91CF; **pptr = %d\\n , **pptr)"},"basic/pointer.html#为什么需要指针":{"title":"&#x4E3A;&#x4EC0;&#x4E48;&#x9700;&#x8981;&#x6307;&#x9488;","path":"\\golang-learn\\basic\\pointer.html#为什么需要指针","body":"&#x76F8;&#x6BD4; Java&#xFF0C;Python&#xFF0C;Javascript &#x7B49;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x8BED;&#x8A00;&#xFF0C;Golang &#x62E5;&#x6709;&#x7C7B;&#x4F3C;C&#x8BED;&#x8A00;&#x7684;&#x6307;&#x9488;&#x8FD9;&#x4E2A;&#x76F8;&#x5BF9;&#x53E4;&#x8001;&#x7684;&#x7279;&#x6027;&#x3002;&#x4F46;&#x4E0D;&#x540C;&#x4E8E; C &#x8BED;&#x8A00;&#xFF0C;Golang &#x7684;&#x6307; &#x9488;&#x662F;&#x5355;&#x72EC;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x800C;&#x4E14;&#x4E5F;&#x4E0D;&#x80FD;&#x5BF9;&#x6307;&#x9488;&#x505A;&#x6574;&#x6570;&#x8FD0;&#x7B97;&#x3002;&#x4ECE;&#x8FD9;&#x4E00;&#x70B9;&#x770B;&#xFF0C;Golang &#x7684;&#x6307;&#x9488;&#x57FA;&#x672C;&#x5C31;&#x662F;&#x4E00;&#x79CD;&#x5F15;&#x7528;&#x3002; &#x5728;&#x5B66;&#x4E60;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x8BED;&#x8A00;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x603B;&#x662F;&#x8981;&#x5148;&#x641E;&#x6E05;&#x695A;&#xFF0C;&#x5F53;&#x7ED9;&#x4E00;&#x4E2A; &#x51FD;&#x6570;/&#x65B9;&#x6CD5; &#x4F20;&#x53C2;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F20;&#x8FDB;&#x53BB;&#x7684;&#x662F;&#x503C;&#x8FD8;&#x662F;&#x5F15;&#x7528;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5728;&#x5927;&#x90E8;&#x5206;&#x5F15;&#x7528;&#x578B;&#x8BED;&#x8A00;&#x91CC;&#xFF0C; &#x53C2;&#x6570;&#x4E3A;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x65F6;&#xFF0C;&#x4F20;&#x8FDB;&#x53BB;&#x7684;&#x5927;&#x90FD;&#x662F;&#x503C;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x53E6;&#x5916;&#x590D;&#x5236;&#x4E86;&#x4E00;&#x4EFD;&#x53C2;&#x6570;&#x5230;&#x5F53;&#x524D;&#x7684;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x6808;&#x3002;&#x53C2;&#x6570;&#x4E3A;&#x9AD8;&#x7EA7;&#x7C7B;&#x578B;&#x65F6;&#xFF0C;&#x4F20;&#x8FDB;&#x53BB;&#x7684;&#x57FA;&#x672C;&#x90FD;&#x662F;&#x5F15;&#x7528;&#x3002; &#x5185;&#x5B58;&#x7BA1;&#x7406;&#x4E2D;&#x7684;&#x5185;&#x5B58;&#x533A;&#x57DF;&#x4E00;&#x822C;&#x5305;&#x62EC; heap &#x548C; stack &#xFF0C; stack &#x4E3B;&#x8981;&#x7528;&#x6765;&#x5B58;&#x50A8;&#x5F53;&#x524D;&#x8C03;&#x7528;&#x6808;&#x7528;&#x5230;&#x7684;&#x7B80;&#x5355;&#x7C7B;&#x578B;&#x6570;&#x636E;&#xFF1A; string &#xFF0C; boolean &#xFF0C; int &#xFF0C; float &#x7B49;&#x3002;&#x8FD9;&#x4E9B;&#x7C7B;&#x578B;&#x7684;&#x5185;&#x5B58;&#x5360;&#x7528;&#x5C0F;&#xFF0C;&#x5BB9;&#x6613;&#x56DE;&#x6536;&#xFF0C;&#x57FA;&#x672C;&#x4E0A;&#x5B83;&#x4EEC;&#x7684;&#x503C;&#x548C;&#x6307;&#x9488;&#x5360;&#x7528;&#x7684;&#x7A7A;&#x95F4;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x590D;&#x5236;&#xFF0C; GC &#x4E5F;&#x6BD4;&#x8F83;&#x5BB9;&#x6613;&#x505A;&#x9488;&#x5BF9;&#x6027;&#x7684; &#x4F18;&#x5316;&#x3002;&#x590D;&#x6742;&#x7684;&#x9AD8;&#x7EA7;&#x7C7B;&#x578B;&#x5360;&#x7528;&#x7684;&#x5185;&#x5B58;&#x5F80;&#x5F80;&#x76F8;&#x5BF9;&#x8F83;&#x5927;&#xFF0C;&#x5B58;&#x50A8;&#x5728; heap &#x4E2D;&#xFF0C; GC &#x56DE;&#x6536;&#x9891;&#x7387;&#x76F8;&#x5BF9;&#x8F83;&#x4F4E;&#xFF0C;&#x4EE3;&#x4EF7;&#x4E5F;&#x8F83;&#x5927;&#xFF0C;&#x56E0;&#x6B64;&#x4F20; &#x5F15;&#x7528;/&#x6307;&#x9488; &#x53EF;&#x4EE5;&#x907F;&#x514D;&#x8FDB;&#x884C;&#x6210;&#x672C;&#x8F83; &#x9AD8;&#x7684;&#x590D;&#x5236;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x4E14;&#x8282;&#x7701;&#x5185;&#x5B58;&#xFF0C;&#x63D0;&#x9AD8;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x6548;&#x7387;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5728;&#x4E0B;&#x5217;&#x60C5;&#x51B5;&#x53EF;&#x4EE5;&#x8003;&#x8651;&#x4F7F;&#x7528;&#x6307;&#x9488;&#xFF1A; &#x9700;&#x8981;&#x6539;&#x53D8;&#x53C2;&#x6570;&#x7684;&#x503C; &#x907F;&#x514D;&#x590D;&#x5236;&#x64CD;&#x4F5C; &#x8282;&#x7701;&#x5185;&#x5B58; &#x800C;&#x5728; Golang &#x4E2D;&#xFF0C;&#x5177;&#x4F53;&#x5230;&#x9AD8;&#x7EA7;&#x7C7B;&#x578B; struct &#xFF0C; slice &#xFF0C; map &#x4E5F;&#x5404;&#x6709;&#x4E0D;&#x540C;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x53EA;&#x6709; struct &#x7684;&#x4F7F;&#x7528;&#x6709;&#x70B9;&#x590D;&#x6742;&#xFF0C; slice &#xFF0C; map &#xFF0C; chan &#x90FD;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#xFF0C;&#x4E0D;&#x7528;&#x8003;&#x8651;&#x662F;&#x503C;&#x8FD8;&#x662F;&#x6307;&#x9488; &#x3002; struct &#x5BF9;&#x4E8E;&#x51FD;&#x6570;&#xFF08; function &#xFF09;&#xFF0C;&#x7531;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x6307;&#x5B9A;&#xFF0C;&#x4F20;&#x5165;&#x7684;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x4E0D;&#x5BF9;&#x4F1A;&#x62A5;&#x9519;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 func passValue (s struct ) {} func passPointer (s * struct ) {} &#x5BF9;&#x4E8E;&#x65B9;&#x6CD5;&#xFF08; method &#xFF09;&#xFF0C;&#x63A5;&#x6536;&#x8005;&#xFF08; receiver &#xFF09;&#x53EF;&#x4EE5;&#x662F;&#x6307;&#x9488;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F;&#x503C;&#xFF0C;Golang &#x4F1A;&#x5728;&#x4F20;&#x9012;&#x53C2;&#x6570;&#x524D;&#x81EA;&#x52A8;&#x9002;&#x914D;&#x4EE5;&#x7B26;&#x5408;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#xFF1A;&#x5982;&#x679C;&#x65B9;&#x6CD5;&#x7684;&#x53C2;&#x6570; &#x662F;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x6309;&#x7167;&#x4F20;&#x503C;&#x7684;&#x65B9;&#x5F0F; &#xFF0C;&#x65B9;&#x6CD5;&#x5185;&#x90E8;&#x5BF9; struct &#x7684;&#x6539;&#x52A8;&#x65E0;&#x6CD5;&#x4F5C;&#x7528;&#x5728;&#x5916;&#x90E8;&#x7684;&#x53D8;&#x91CF;&#x4E0A;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 package main import fmt type MyPoint struct { X int Y int } func printFuncValue (p MyPoint) { p.X = 1 p.Y = 1 fmt.Printf(  - %v , p) } func printFuncPointer (pp *MyPoint) { pp.X = 1 // &#x5B9E;&#x9645;&#x4E0A;&#x5E94;&#x8BE5;&#x5199;&#x505A; (*pp).X&#xFF0C;Golang &#x7ED9;&#x4E86;&#x8BED;&#x6CD5;&#x7CD6;&#xFF0C;&#x51CF;&#x5C11;&#x4E86;&#x9EBB;&#x70E6;&#xFF0C;&#x4F46;&#x662F;&#x4E5F;&#x5BFC;&#x81F4;&#x4E86; * &#x7684;&#x4E0D;&#x4E00;&#x81F4; pp.Y = 1 fmt.Printf(  - %v , pp) } func (p MyPoint) printMethodValue () { p.X += 1 p.Y += 1 fmt.Printf(  - %v , p) } // &#x5EFA;&#x8BAE;&#x4F7F;&#x7528;&#x6307;&#x9488;&#x4F5C;&#x4E3A;&#x65B9;&#x6CD5;&#xFF08;method&#xFF1A;printMethodPointer&#xFF09;&#x7684;&#x63A5;&#x6536;&#x8005;&#xFF08;receiver&#xFF1A;*MyPoint&#xFF09;&#xFF0C;&#x4E00;&#x662F;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x63A5;&#x6536;&#x8005;&#x7684;&#x503C;&#xFF0C;&#x4E8C;&#x662F;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x5927;&#x5BF9;&#x8C61;&#x7684;&#x590D;&#x5236; func (pp *MyPoint) printMethodPointer () { pp.X += 1 pp.Y += 1 fmt.Printf(  - %v , pp) } func main () { p := MyPoint{ 0 , 0 } pp := &amp;MyPoint{ 0 , 0 } fmt.Printf( \\n value to func(value): %v , p) printFuncValue(p) fmt.Printf(  -- %v , p) // Output: value to func(value): {0 0} - {1 1} -- {0 0} //printFuncValue(pp) // cannot use pp (type *MyPoint) as type MyPoint in argument to printFuncValue //printFuncPointer(p) // cannot use p (type MyPoint) as type *MyPoint in argument to printFuncPointer fmt.Printf( \\n pointer to func(pointer): %v , pp) printFuncPointer(pp) fmt.Printf(  -- %v , pp) // Output: pointer to func(pointer): &amp;{0 0} - &amp;{1 1} -- &amp;{1 1} fmt.Printf( \\n value to method(value): %v , p) p.printMethodValue() fmt.Printf(  -- %v , p) // Output: value to method(value): {0 0} - {1 1} -- {0 0} fmt.Printf( \\n value to method(pointer): %v , p) p.printMethodPointer() fmt.Printf(  -- %v , p) // Output: value to method(pointer): {0 0} - &amp;{1 1} -- {1 1} fmt.Printf( \\n pointer to method(value): %v , pp) pp.printMethodValue() fmt.Printf(  -- %v , pp) // Output: pointer to method(value): &amp;{1 1} - {2 2} -- &amp;{1 1} fmt.Printf( \\n pointer to method(pointer): %v , pp) pp.printMethodPointer() fmt.Printf(  -- %v , pp) // Output: pointer to method(pointer): &amp;{1 1} - &amp;{2 2} -- &amp;{2 2} } slice slice &#x5B9E;&#x9645;&#x4E0A;&#x76F8;&#x5F53;&#x4E8E;&#x5BF9;&#x5176;&#x4F9D;&#x9644;&#x7684; array &#x7684;&#x5F15;&#x7528;&#xFF0C;&#x5B83;&#x4E0D;&#x5B58;&#x50A8;&#x6570;&#x636E;&#xFF0C;&#x53EA;&#x662F;&#x5BF9; array &#x8FDB;&#x884C;&#x63CF;&#x8FF0;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4FEE;&#x6539; slice &#x4E2D;&#x7684;&#x5143;&#x7D20;&#xFF0C; &#x6539;&#x53D8;&#x4F1A;&#x4F53;&#x73B0;&#x5728; array &#x4E0A;&#xFF0C;&#x5F53;&#x7136;&#x4E5F;&#x4F1A;&#x4F53;&#x73B0;&#x5728;&#x8BE5; array &#x7684;&#x6240;&#x6709; slice &#x4E0A; &#x3002; map &#x4F7F;&#x7528; make(map[string]string) &#x8FD4;&#x56DE;&#x7684;&#x672C;&#x8EAB;&#x662F;&#x4E2A;&#x5F15;&#x7528;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x7528;&#x6765;&#x64CD;&#x4F5C; &#xFF1A; 1 map [ name ]= Jason &#x800C; &#x5982;&#x679C;&#x4F7F;&#x7528; map &#x7684;&#x6307;&#x9488;&#xFF0C;&#x53CD;&#x800C;&#x4F1A;&#x4EA7;&#x751F;&#x9519;&#x8BEF; &#xFF1A; 1 2 * map [ name ]= Jason // invalid indirect of m[title] (type string) (* map )[ name ]= Jason // invalid indirect of m (type map[string]string)"},"basic/pointer.html#哪些值是不可寻址的":{"title":"&#x54EA;&#x4E9B;&#x503C;&#x662F;&#x4E0D;&#x53EF;&#x5BFB;&#x5740;&#x7684;","path":"\\golang-learn\\basic\\pointer.html#哪些值是不可寻址的","body":"&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x503C;&#x4E0D;&#x53EF;&#x5BFB;&#x5740; &#x3002;&#x5E38;&#x91CF;&#x3001;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x5B57;&#x9762;&#x91CF;&#x3001;&#x5B57;&#x7B26;&#x4E32;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x3001;&#x51FD;&#x6570;&#x4EE5;&#x53CA;&#x65B9;&#x6CD5;&#x7684;&#x5B57;&#x9762;&#x91CF;&#x90FD;&#x662F;&#x5982;&#x6B64;&#x3002; &#x5176;&#x5B9E;&#x8FD9;&#x6837;&#x89C4;&#x5B9A;&#x4E5F;&#x6709;&#x5B89;&#x5168;&#x6027;&#x65B9;&#x9762;&#x7684;&#x8003;&#x8651;&#x3002; &#x7EDD;&#x5927;&#x591A;&#x6570;&#x88AB;&#x89C6;&#x4E3A; &#x4E34;&#x65F6;&#x7ED3;&#x679C;&#x7684;&#x503C;&#x90FD;&#x662F;&#x4E0D;&#x53EF;&#x5BFB;&#x5740;&#x7684; &#x3002;&#x7B97;&#x672F;&#x64CD;&#x4F5C;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x5C5E;&#x4E8E;&#x4E34;&#x65F6;&#x7ED3;&#x679C;&#xFF0C;&#x9488;&#x5BF9;&#x503C;&#x5B57;&#x9762;&#x91CF;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x7ED3;&#x679C;&#x503C;&#x4E5F;&#x5C5E;&#x4E8E;&#x4E34;&#x65F6;&#x7ED3;&#x679C;&#x3002; &#x4F46;&#x6709;&#x4E00;&#x4E2A;&#x4F8B;&#x5916;&#xFF0C;&#x5BF9;&#x5207;&#x7247;&#x5B57;&#x9762;&#x91CF;&#x7684;&#x7D22;&#x5F15;&#x7ED3;&#x679C;&#x503C;&#x867D;&#x7136;&#x4E5F;&#x5C5E;&#x4E8E;&#x4E34;&#x65F6;&#x7ED3;&#x679C;&#xFF0C;&#x4F46;&#x5374;&#x662F;&#x53EF;&#x5BFB;&#x5740;&#x7684;&#x3002;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x4E5F;&#x662F;&#x4E34;&#x65F6;&#x7ED3;&#x679C;&#x3002; ++ &#x548C; -- &#x5E76;&#x4E0D;&#x5C5E; &#x4E8E;&#x64CD;&#x4F5C;&#x7B26;&#x3002; &#x4E0D;&#x5B89;&#x5168;&#x7684;&#x503C;&#x4E0D;&#x53EF;&#x5BFB;&#x5740; &#xFF0C;&#x82E5;&#x62FF;&#x5230;&#x67D0;&#x503C;&#x7684;&#x6307;&#x9488;&#x53EF;&#x80FD;&#x4F1A;&#x7834;&#x574F;&#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x81F4;&#x6027;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x3002;&#x7531;&#x4E8E;&#x5B57;&#x5178;&#x7684;&#x5185;&#x90E8;&#x673A;&#x5236;&#xFF0C;&#x5BF9;&#x5B57;&#x5178;&#x7684;&#x7D22; &#x5F15;&#x7ED3;&#x679C;&#x503C;&#x7684;&#x53D6;&#x5740;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x83B7;&#x53D6;&#x7531;&#x5B57;&#x9762;&#x91CF;&#x6216;&#x6807;&#x8BC6;&#x7B26;&#x4EE3;&#x8868;&#x7684;&#x51FD;&#x6570;&#x6216;&#x65B9;&#x6CD5;&#x7684;&#x5730;&#x5740;&#x663E;&#x7136;&#x4E5F;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x3002;"},"basic/json.html":{"title":"序列化","path":"\\golang-learn\\basic\\json.html","body":"序列化 Go 对于其他序列化协议如 Json ， XML ， Protocol Buffers ，都有良好的支持， 由标准库中的 encoding/json 、 encoding/xml 、 encoding/asn1 等包提供支持， Protocol Buffers 的 由 github.com/golang/protobuf 包提供支持，并且这类包都有着相似的 API 接口。 GO 中结构体转为 JSON 使用 json.Marshal ，也就是编码操作： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 type Movie struct  \tTitle string \tYear int `json:\"released\"` \tColor bool `json:\"color,omitempty\"` \tActors [] string \tActors [] string  var movies = []Movie \t \t\tTitle: \"Casablanca\" , \t\tYear: 1942 , \t\tColor: false , \t\tActors: [] string  \"Humphrey Bogart\" , \"Ingrid Bergman\" , \t \t\tTitle: \"Cool Hand Luke\" , \t\tYear: 1967 , \t\tColor: true , \t\tActors: [] string  \"Paul Newman\" , \t \t\tTitle: \"Bullitt\" , \t\tYear: 1968 , \t\tColor: true , \t\tActors: [] string  \"Steve McQueen\" , \"Jacqueline Bisset\" \t data, err := json.Marshal(movies) if err != nil  log.Fatalf( \"JSON marshaling failed: %s\" , err)  fmt.Printf( \"%s\\n\" , data) json.MarshalIndent 格式化输出 JSON ，例如： 1 2 3 4 5 data, err := json.MarshalIndent(movies, \"\" , \" \" ) if err != nil  log.Fatalf( \"JSON marshaling failed: %s\" , err)  fmt.Printf( \"%s\\n\" , data) 输出： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 [  \"Title\" : \"Casablanca\" , \"released\" : 1942 , \"Actors\" : [ \"Humphrey Bogart\" , \"Ingrid Bergman\" ] ,  \"Title\" : \"Cool Hand Luke\" , \"released\" : 1967 , \"color\" : true , \"Actors\" : [ \"Paul Newman\" ] ,  \"Title\" : \"Bullitt\" , \"released\" : 1968 , \"color\" : true , \"Actors\" : [ \"Steve McQueen\" , \"Jacqueline Bisset\" ]  ] 有没有注意到， Year 字段名的成员在编码后变成了 released ， Color 变成了小写的 color 。这是因为结构体的成员 Tag 导致的， 如上面的： 1 2 Year int `json:\"released\"` Color bool `json:\"color,omitempty\"` 结构体的成员 Tag 可以是任意的字符串面值，但是通常是一系列用空格分隔的 key:value 键值对序列；因为值中含义双引号字符， 因此成员 Tag 一般用原生字符串面值的形式书写。 json 开头键名对应的值用于控制 encoding/json 包的编码和解码的行为， 并且 encoding/... 下面其它的包也遵循这个约定。成员 Tag 中 json 对应值的第一部分用于指定 JSON 对象的名字， 比如将 Go 语言中的 TotalCount 成员对应到 JSON 中的 total_count 对象。 Color 成员的 Tag 还带了一个额外的 omitempty 选项，表示当 Go 语言结构体成员为空或零值时不生成 JSON 对象（这里 false 为零值）。果然， Casablanca 是一个黑白电影， 并没有输出 Color 成员。 注意，只有导出的结构体成员才会被编码 解码操作，使用 json.Unmarshal ： 1 2 3 4 5 var titles [] struct  Title string  if err := json.Unmarshal(data, &amp;titles); err != nil  log.Fatalf( \"JSON unmarshaling failed: %s\" , err)  fmt.Println(titles) // \"[Casablanca Cool Hand Luke Bullitt]\" 通过定义合适的Go语言数据结构，我们可以选择性地解码JSON中感兴趣的成员。 基于流式的解码器 json.Decoder 。针对输出流的 json.Encoder 编码对象"},"basic/json.html#序列化":{"title":"&#x5E8F;&#x5217;&#x5316;","path":"\\golang-learn\\basic\\json.html#序列化","body":"Go &#x5BF9;&#x4E8E;&#x5176;&#x4ED6;&#x5E8F;&#x5217;&#x5316;&#x534F;&#x8BAE;&#x5982; Json &#xFF0C; XML &#xFF0C; Protocol Buffers &#xFF0C;&#x90FD;&#x6709;&#x826F;&#x597D;&#x7684;&#x652F;&#x6301;&#xFF0C; &#x7531;&#x6807;&#x51C6;&#x5E93;&#x4E2D;&#x7684; encoding/json &#x3001; encoding/xml &#x3001; encoding/asn1 &#x7B49;&#x5305;&#x63D0;&#x4F9B;&#x652F;&#x6301;&#xFF0C; Protocol Buffers &#x7684; &#x7531; github.com/golang/protobuf &#x5305;&#x63D0;&#x4F9B;&#x652F;&#x6301;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x7C7B;&#x5305;&#x90FD;&#x6709;&#x7740;&#x76F8;&#x4F3C;&#x7684; API &#x63A5;&#x53E3;&#x3002; GO &#x4E2D;&#x7ED3;&#x6784;&#x4F53;&#x8F6C;&#x4E3A; JSON &#x4F7F;&#x7528; json.Marshal &#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7F16;&#x7801;&#x64CD;&#x4F5C;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 type Movie struct { \tTitle string \tYear int `json:released` \tColor bool `json:color,omitempty` \tActors [] string \tActors [] string } var movies = []Movie{ \t{ \t\tTitle: Casablanca , \t\tYear: 1942 , \t\tColor: false , \t\tActors: [] string { Humphrey Bogart , Ingrid Bergman }}, \t{ \t\tTitle: Cool Hand Luke , \t\tYear: 1967 , \t\tColor: true , \t\tActors: [] string { Paul Newman }}, \t{ \t\tTitle: Bullitt , \t\tYear: 1968 , \t\tColor: true , \t\tActors: [] string { Steve McQueen , Jacqueline Bisset }}}\t data, err := json.Marshal(movies) if err != nil { log.Fatalf( JSON marshaling failed: %s , err) } fmt.Printf( %s\\n , data) json.MarshalIndent &#x683C;&#x5F0F;&#x5316;&#x8F93;&#x51FA; JSON &#xFF0C;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 data, err := json.MarshalIndent(movies,  ,   ) if err != nil { log.Fatalf( JSON marshaling failed: %s , err) } fmt.Printf( %s\\n , data) &#x8F93;&#x51FA;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 [ { Title : Casablanca , released : 1942 , Actors : [ Humphrey Bogart , Ingrid Bergman ] }, { Title : Cool Hand Luke , released : 1967 , color : true , Actors : [ Paul Newman ] }, { Title : Bullitt , released : 1968 , color : true , Actors : [ Steve McQueen , Jacqueline Bisset ] } ] &#x6709;&#x6CA1;&#x6709;&#x6CE8;&#x610F;&#x5230;&#xFF0C; Year &#x5B57;&#x6BB5;&#x540D;&#x7684;&#x6210;&#x5458;&#x5728;&#x7F16;&#x7801;&#x540E;&#x53D8;&#x6210;&#x4E86; released &#xFF0C; Color &#x53D8;&#x6210;&#x4E86;&#x5C0F;&#x5199;&#x7684; color &#x3002;&#x8FD9;&#x662F;&#x56E0;&#x4E3A;&#x7ED3;&#x6784;&#x4F53;&#x7684;&#x6210;&#x5458; Tag &#x5BFC;&#x81F4;&#x7684;&#xFF0C; &#x5982;&#x4E0A;&#x9762;&#x7684;&#xFF1A; 1 2 Year int `json:released` Color bool `json:color,omitempty` &#x7ED3;&#x6784;&#x4F53;&#x7684;&#x6210;&#x5458; Tag &#x53EF;&#x4EE5;&#x662F;&#x4EFB;&#x610F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x9762;&#x503C;&#xFF0C;&#x4F46;&#x662F;&#x901A;&#x5E38;&#x662F;&#x4E00;&#x7CFB;&#x5217;&#x7528;&#x7A7A;&#x683C;&#x5206;&#x9694;&#x7684; key:value &#x952E;&#x503C;&#x5BF9;&#x5E8F;&#x5217;&#xFF1B;&#x56E0;&#x4E3A;&#x503C;&#x4E2D;&#x542B;&#x4E49;&#x53CC;&#x5F15;&#x53F7;&#x5B57;&#x7B26;&#xFF0C; &#x56E0;&#x6B64;&#x6210;&#x5458; Tag &#x4E00;&#x822C;&#x7528;&#x539F;&#x751F;&#x5B57;&#x7B26;&#x4E32;&#x9762;&#x503C;&#x7684;&#x5F62;&#x5F0F;&#x4E66;&#x5199;&#x3002; json &#x5F00;&#x5934;&#x952E;&#x540D;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x7528;&#x4E8E;&#x63A7;&#x5236; encoding/json &#x5305;&#x7684;&#x7F16;&#x7801;&#x548C;&#x89E3;&#x7801;&#x7684;&#x884C;&#x4E3A;&#xFF0C; &#x5E76;&#x4E14; encoding/... &#x4E0B;&#x9762;&#x5176;&#x5B83;&#x7684;&#x5305;&#x4E5F;&#x9075;&#x5FAA;&#x8FD9;&#x4E2A;&#x7EA6;&#x5B9A;&#x3002;&#x6210;&#x5458; Tag &#x4E2D; json &#x5BF9;&#x5E94;&#x503C;&#x7684;&#x7B2C;&#x4E00;&#x90E8;&#x5206;&#x7528;&#x4E8E;&#x6307;&#x5B9A; JSON &#x5BF9;&#x8C61;&#x7684;&#x540D;&#x5B57;&#xFF0C; &#x6BD4;&#x5982;&#x5C06; Go &#x8BED;&#x8A00;&#x4E2D;&#x7684; TotalCount &#x6210;&#x5458;&#x5BF9;&#x5E94;&#x5230; JSON &#x4E2D;&#x7684; total_count &#x5BF9;&#x8C61;&#x3002; Color &#x6210;&#x5458;&#x7684; Tag &#x8FD8;&#x5E26;&#x4E86;&#x4E00;&#x4E2A;&#x989D;&#x5916;&#x7684; omitempty &#x9009;&#x9879;&#xFF0C;&#x8868;&#x793A;&#x5F53; Go &#x8BED;&#x8A00;&#x7ED3;&#x6784;&#x4F53;&#x6210;&#x5458;&#x4E3A;&#x7A7A;&#x6216;&#x96F6;&#x503C;&#x65F6;&#x4E0D;&#x751F;&#x6210; JSON &#x5BF9;&#x8C61;&#xFF08;&#x8FD9;&#x91CC; false &#x4E3A;&#x96F6;&#x503C;&#xFF09;&#x3002;&#x679C;&#x7136;&#xFF0C; Casablanca &#x662F;&#x4E00;&#x4E2A;&#x9ED1;&#x767D;&#x7535;&#x5F71;&#xFF0C; &#x5E76;&#x6CA1;&#x6709;&#x8F93;&#x51FA; Color &#x6210;&#x5458;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x53EA;&#x6709;&#x5BFC;&#x51FA;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x6210;&#x5458;&#x624D;&#x4F1A;&#x88AB;&#x7F16;&#x7801; &#x89E3;&#x7801;&#x64CD;&#x4F5C;&#xFF0C;&#x4F7F;&#x7528; json.Unmarshal &#xFF1A; 1 2 3 4 5 var titles [] struct { Title string } if err := json.Unmarshal(data, &amp;titles); err != nil { log.Fatalf( JSON unmarshaling failed: %s , err) } fmt.Println(titles) // [{Casablanca} {Cool Hand Luke} {Bullitt}] &#x901A;&#x8FC7;&#x5B9A;&#x4E49;&#x5408;&#x9002;&#x7684;Go&#x8BED;&#x8A00;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x6027;&#x5730;&#x89E3;&#x7801;JSON&#x4E2D;&#x611F;&#x5174;&#x8DA3;&#x7684;&#x6210;&#x5458;&#x3002; &#x57FA;&#x4E8E;&#x6D41;&#x5F0F;&#x7684;&#x89E3;&#x7801;&#x5668; json.Decoder &#x3002;&#x9488;&#x5BF9;&#x8F93;&#x51FA;&#x6D41;&#x7684; json.Encoder &#x7F16;&#x7801;&#x5BF9;&#x8C61;"},"basic/constant.html":{"title":"常量","path":"\\golang-learn\\basic\\constant.html","body":"常量 const 声明常量，运行时不可改变（只读），注意常量的 底层数据类型只能是基础类型（布尔型、数值型和字符串型） ： 1 const 常量名字 类型 = 表达式 “类型”可以省略。也就是如果没有类型，可以通过表达式推导出类型。 比如： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // 声明一个`string`类型 const b string = \"abc\" const a = \"abc\" // 声明一组不同类型 const c, f, s = true , 2.3 , \"four\" // bool, float64, string // 批量声明多个常量 const ( Unknown = 0 Female = 1 Male = 2 ) const strSize = len ( \"hello, world\" ) 常量表达式的值在 编译期计算 。因此常量表达式中，函数必须是内置函数。如 unsafe.Sizeof() ， len() , cap() 。 常量组中，如果不指定类型和初始值，那么就和上一行非空常量右值相同 ： 例如： 1 2 3 4 5 6 7 8 const ( \ta = 1 \tb \tc = 2 \td ) fmt.Println(a, b, c, d) // \"1 1 2 2\" iota Go 中没有枚举的定义，但是可以使用 iota ， iota 标识符可以认为是 一个可以被编译器修改的常量 。 在 const 声明中，被重置为 0 ，在第一个声明的常量所在的行， iota 将会被置为 0 ，然后在每一个有常量声明的 行加 1 。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 const ( \ta = iota // 0 \tb // 1 \tc // 2 \td = \"ha\" // \"ha\", iota += 1 \te // \"ha\" ,不指定类型和初始值，那么就和上一行非空常量右值相同, iota += 1 \tf = 100 // 100, iota +=1 \tg // 100,不指定类型和初始值，那么就和上一行非空常量右值相同, iota +=1 \th = iota // 7, 中断的 iota 计数必须显示恢复 \ti // 8 ) const ( \ti = 1  iota // 1, 1  0 \tj = 3  iota // 6, 3  1 \tk // 12, 3  2 \tl // 24, 3  3 )"},"basic/constant.html#常量":{"title":"&#x5E38;&#x91CF;","path":"\\golang-learn\\basic\\constant.html#常量","body":"const &#x58F0;&#x660E;&#x5E38;&#x91CF;&#xFF0C;&#x8FD0;&#x884C;&#x65F6;&#x4E0D;&#x53EF;&#x6539;&#x53D8;&#xFF08;&#x53EA;&#x8BFB;&#xFF09;&#xFF0C;&#x6CE8;&#x610F;&#x5E38;&#x91CF;&#x7684; &#x5E95;&#x5C42;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x53EA;&#x80FD;&#x662F;&#x57FA;&#x7840;&#x7C7B;&#x578B;&#xFF08;&#x5E03;&#x5C14;&#x578B;&#x3001;&#x6570;&#x503C;&#x578B;&#x548C;&#x5B57;&#x7B26;&#x4E32;&#x578B;&#xFF09; &#xFF1A; 1 const &#x5E38;&#x91CF;&#x540D;&#x5B57; &#x7C7B;&#x578B; = &#x8868;&#x8FBE;&#x5F0F; &#x201C;&#x7C7B;&#x578B;&#x201D;&#x53EF;&#x4EE5;&#x7701;&#x7565;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8868;&#x8FBE;&#x5F0F;&#x63A8;&#x5BFC;&#x51FA;&#x7C7B;&#x578B;&#x3002; &#x6BD4;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // &#x58F0;&#x660E;&#x4E00;&#x4E2A;`string`&#x7C7B;&#x578B; const b string = abc const a = abc // &#x58F0;&#x660E;&#x4E00;&#x7EC4;&#x4E0D;&#x540C;&#x7C7B;&#x578B; const c, f, s = true , 2.3 , four // bool, float64, string // &#x6279;&#x91CF;&#x58F0;&#x660E;&#x591A;&#x4E2A;&#x5E38;&#x91CF; const ( Unknown = 0 Female = 1 Male = 2 ) const strSize = len ( hello, world ) &#x5E38;&#x91CF;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x503C;&#x5728; &#x7F16;&#x8BD1;&#x671F;&#x8BA1;&#x7B97; &#x3002;&#x56E0;&#x6B64;&#x5E38;&#x91CF;&#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#xFF0C;&#x51FD;&#x6570;&#x5FC5;&#x987B;&#x662F;&#x5185;&#x7F6E;&#x51FD;&#x6570;&#x3002;&#x5982; unsafe.Sizeof() &#xFF0C; len() , cap() &#x3002; &#x5E38;&#x91CF;&#x7EC4;&#x4E2D;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x548C;&#x521D;&#x59CB;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x548C;&#x4E0A;&#x4E00;&#x884C;&#x975E;&#x7A7A;&#x5E38;&#x91CF;&#x53F3;&#x503C;&#x76F8;&#x540C; &#xFF1A; &#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 const ( \ta = 1 \tb \tc = 2 \td ) fmt.Println(a, b, c, d) // 1 1 2 2"},"basic/constant.html#iota":{"title":"iota","path":"\\golang-learn\\basic\\constant.html#iota","body":"Go &#x4E2D;&#x6CA1;&#x6709;&#x679A;&#x4E3E;&#x7684;&#x5B9A;&#x4E49;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; iota &#xFF0C; iota &#x6807;&#x8BC6;&#x7B26;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A;&#x662F; &#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x88AB;&#x7F16;&#x8BD1;&#x5668;&#x4FEE;&#x6539;&#x7684;&#x5E38;&#x91CF; &#x3002; &#x5728; const &#x58F0;&#x660E;&#x4E2D;&#xFF0C;&#x88AB;&#x91CD;&#x7F6E;&#x4E3A; 0 &#xFF0C;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#x58F0;&#x660E;&#x7684;&#x5E38;&#x91CF;&#x6240;&#x5728;&#x7684;&#x884C;&#xFF0C; iota &#x5C06;&#x4F1A;&#x88AB;&#x7F6E;&#x4E3A; 0 &#xFF0C;&#x7136;&#x540E;&#x5728;&#x6BCF;&#x4E00;&#x4E2A;&#x6709;&#x5E38;&#x91CF;&#x58F0;&#x660E;&#x7684; &#x884C;&#x52A0; 1 &#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 const ( \ta = iota // 0 \tb // 1 \tc // 2 \td = ha // ha, iota += 1 \te // ha ,&#x4E0D;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x548C;&#x521D;&#x59CB;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x548C;&#x4E0A;&#x4E00;&#x884C;&#x975E;&#x7A7A;&#x5E38;&#x91CF;&#x53F3;&#x503C;&#x76F8;&#x540C;, iota += 1 \tf = 100 // 100, iota +=1 \tg // 100,&#x4E0D;&#x6307;&#x5B9A;&#x7C7B;&#x578B;&#x548C;&#x521D;&#x59CB;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x548C;&#x4E0A;&#x4E00;&#x884C;&#x975E;&#x7A7A;&#x5E38;&#x91CF;&#x53F3;&#x503C;&#x76F8;&#x540C;, iota +=1 \th = iota // 7, &#x4E2D;&#x65AD;&#x7684; iota &#x8BA1;&#x6570;&#x5FC5;&#x987B;&#x663E;&#x793A;&#x6062;&#x590D; \ti // 8 ) const ( \ti = 1  iota // 1, 1  0 \tj = 3  iota // 6, 3  1 \tk // 12, 3  2 \tl // 24, 3  3 )"},"basic/package.html":{"title":"包","path":"\\golang-learn\\basic\\package.html","body":"包 Go 语言的包与其他语言的 modules 或者 libraries 类似。Go 语言有超过 100个 的标准包，可以使用 go list std | wc -l 查看包的数量。 更多 Go 语言开源包，可以在 这里 搜索。 Go 语言编译速度很快，主要依赖下面三点： 导入的包必须在文件的头部显式声明，这样的话编译器就没有必要读取和分析整个源文件来判断包的依赖关系。 禁止包的循环依赖，每个包可以被独立编译，而且很可能是被并发编译。 编译后包的目标文件不仅仅记录包本身的导出信息，同时还记录了包的依赖关系。 因此，在 编译一个包的时候，编译器只需读取每个导入包的目标文件，而不需要遍历所有依赖的的文件 。 import 在 package 声明下面，我们需要导入一系列需要使用的包。比如 import fmt 。注意如果导入了不需要的包，或者缺少了必要的包， 编译会失败。 1 2 3 4 5 6 7 8 // 导入一个包 import \"fmt\" // 导入多个 import ( \"fmt\" \"os\" ) main main 是一个特殊的包， main 包代表一个独立运行的程序，而不是一个 modules 或者 libraries 。 main 包里 必须有 main 函数，这个是程序的入口函数，并且 mian 函数没有参数。比如： 1 2 3 func main ()  \tfmt.Println( \"Hello, 世界\" )  hello world 1 2 3 4 5 6 7 package main import \"fmt\" func main ()  \tfmt.Println(x)  函数声明使用 func 关键字。Go 不需要在语句或者声明的末尾添加分号。除非一行代码上有多条语句。 点操作 1 2 3 import ( . \"fmt\" ) 这个点操作的含义就是这个包导入之后在你调用这个包的函数时，你可以省略前缀的包名，也就是前面你调用的 fmt.Println(hello world) 可以省略的写成 Println(hello world) 。 导入包重命名 如果导入两个相同名字的包，如 math/rand 包和 crypto/rand 包，可以为一个包重命名来解决名字冲突： 1 2 3 4 import ( \"crypto/rand\" mrand \"math/rand\" // alternative name mrand avoids conflict ) 注意，重命名的包名只在当前源文件有效。 有些情况下也可以使用包重命名： 包名很长。重命名一个简短的包名。 与变量名冲突。 选择用简短名称重命名导入包时候最好统一，以避免包名混乱。 匿名导入 比如 import _ image/png ， _ 是空白标识符，不能被访问。 匿名导入有什么用？我们知道如果导入一个包而不使用会导致编译错误 unused import 。当我们想要导入包， 仅仅只是想计算导入包的包级变量的初始化表达式和执行导入包的 init 初始化函数，就可以使用匿名导入。 声明所属的代码包与其所在目录的名称不同时 源码文件所在的目录相对于 src 目录的相对路径就是它的代码包导入路径，而实际使用其程序实体时给定的限定符要与它 声明所属的代码包名称对应。为了不让该代码包的使用者产生困惑，我们总是应该让声明的包名与其父目录的名称一致。 包声明 包声明语句（包名）必须在每个源文件的开头。被其它包导入时默认的标识符。每个包都对应一个独立的名字空间， 如： image 包和 unicode/utf16 包中都包含了 Decode 。要在外部引用该函数，必须显式使用 image.Decode 或 utf16.Decode 形式访问。 包内以大写字母开头定义的名字（包括变量，类型，函数等等），会被导出，可以在包的外部访问。 默认包名一般采用导入路径名的最后一段，比如 GOPTAH/src/packages/test 的 test 就是包名。三种情况例外： main 包， go build 命令编译完之后生成一个可执行程序。 以 _test 为后缀包名的测试外部扩展包都由 go test 命令独立编译。(以 _ 或 . 开头的源文件会被构建工具忽略) 如 gopkg.in/yaml.v2 。包的名字包含版本号后缀 .v2 ，这种情况下包名是 yaml 。 包命名 包命名尽量有描述性且无歧义，简短，避免冲突。 初始化包 包的初始化首先是解决包级变量的依赖顺序，然后按照包级变量声明出现的顺序依次初始化： 1 2 3 4 5 var a = b + c // a 第三个初始化, 为 3 var b = f() // b 第二个初始化, 为 2, 通过调用 f (依赖c) var c = 1 // c 第一个初始化, 为 1 func f () int  return c + 1  如果包中含有多个源文件，构建工具首先会将 .go 文件根据文件名排序，然后依次调用编译器编译。 每个包在解决依赖的前提下，以导入声明的顺序初始化，每个包只会被初始化一次。因此，如果一个 p 包导入了 q 包， 那么在 p 包初始化的时候可以认为 q 包必然已经初始化过了。初始化工作是自下而上进行的， main 包最后被初始化。以这种方式， 可以确保在 main 函数执行之前，所有依赖的包都已经完成初始化工作了。 使用 init 函数 使用 init 函数来简化初始化工作， init 函数和普通函数类似，但是不能被调用或引用。 程序开始执行时按照它们声明的顺序自动调用。 init 函数不能有任何的参数和返回值，虽然一个 package 里面可以写任意多个 init 函数，但这无论是对于可读性还是以后的可维护性来说， 我们都强烈建议用户在一个 package 中每个文件只写一个 init 函数。 程序的初始化和执行都起始于 main 包。如果 main 包还导入了其它的包，那么就会在编译时将它们依次导入。有时一个包会被多个包同时导入， 那么它只会被导入一次（例如很多包可能都会用到 fmt 包，但它只会被导入一次，因为没有必要导入多次）。当一个包被导入时，如果该包还导入了 其它的包，那么会先将其它包导入进来，然后再对这些包中的包级常量和变量进行初始化，接着执行 init 函数（如果有的话），依次类推。等所有 被导入的包都加载完毕了，就会开始对 main 包中的包级常量和变量进行初始化，然后执行 main 包中的 init 函数（如果存在的话），最后 执行 main 函数。"},"basic/package.html#包":{"title":"&#x5305;","path":"\\golang-learn\\basic\\package.html#包","body":"Go &#x8BED;&#x8A00;&#x7684;&#x5305;&#x4E0E;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x7684; modules &#x6216;&#x8005; libraries &#x7C7B;&#x4F3C;&#x3002;Go &#x8BED;&#x8A00;&#x6709;&#x8D85;&#x8FC7; 100&#x4E2A; &#x7684;&#x6807;&#x51C6;&#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; go list std | wc -l &#x67E5;&#x770B;&#x5305;&#x7684;&#x6570;&#x91CF;&#x3002; &#x66F4;&#x591A; Go &#x8BED;&#x8A00;&#x5F00;&#x6E90;&#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x5728; &#x8FD9;&#x91CC; &#x641C;&#x7D22;&#x3002; Go &#x8BED;&#x8A00;&#x7F16;&#x8BD1;&#x901F;&#x5EA6;&#x5F88;&#x5FEB;&#xFF0C;&#x4E3B;&#x8981;&#x4F9D;&#x8D56;&#x4E0B;&#x9762;&#x4E09;&#x70B9;&#xFF1A; &#x5BFC;&#x5165;&#x7684;&#x5305;&#x5FC5;&#x987B;&#x5728;&#x6587;&#x4EF6;&#x7684;&#x5934;&#x90E8;&#x663E;&#x5F0F;&#x58F0;&#x660E;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x8BDD;&#x7F16;&#x8BD1;&#x5668;&#x5C31;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x8BFB;&#x53D6;&#x548C;&#x5206;&#x6790;&#x6574;&#x4E2A;&#x6E90;&#x6587;&#x4EF6;&#x6765;&#x5224;&#x65AD;&#x5305;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002; &#x7981;&#x6B62;&#x5305;&#x7684;&#x5FAA;&#x73AF;&#x4F9D;&#x8D56;&#xFF0C;&#x6BCF;&#x4E2A;&#x5305;&#x53EF;&#x4EE5;&#x88AB;&#x72EC;&#x7ACB;&#x7F16;&#x8BD1;&#xFF0C;&#x800C;&#x4E14;&#x5F88;&#x53EF;&#x80FD;&#x662F;&#x88AB;&#x5E76;&#x53D1;&#x7F16;&#x8BD1;&#x3002; &#x7F16;&#x8BD1;&#x540E;&#x5305;&#x7684;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#x4E0D;&#x4EC5;&#x4EC5;&#x8BB0;&#x5F55;&#x5305;&#x672C;&#x8EAB;&#x7684;&#x5BFC;&#x51FA;&#x4FE1;&#x606F;&#xFF0C;&#x540C;&#x65F6;&#x8FD8;&#x8BB0;&#x5F55;&#x4E86;&#x5305;&#x7684;&#x4F9D;&#x8D56;&#x5173;&#x7CFB;&#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x5728; &#x7F16;&#x8BD1;&#x4E00;&#x4E2A;&#x5305;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x53EA;&#x9700;&#x8BFB;&#x53D6;&#x6BCF;&#x4E2A;&#x5BFC;&#x5165;&#x5305;&#x7684;&#x76EE;&#x6807;&#x6587;&#x4EF6;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x904D;&#x5386;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x7684;&#x7684;&#x6587;&#x4EF6; &#x3002;"},"basic/package.html#import":{"title":"import","path":"\\golang-learn\\basic\\package.html#import","body":"&#x5728; package &#x58F0;&#x660E;&#x4E0B;&#x9762;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5BFC;&#x5165;&#x4E00;&#x7CFB;&#x5217;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x5305;&#x3002;&#x6BD4;&#x5982; import fmt &#x3002;&#x6CE8;&#x610F;&#x5982;&#x679C;&#x5BFC;&#x5165;&#x4E86;&#x4E0D;&#x9700;&#x8981;&#x7684;&#x5305;&#xFF0C;&#x6216;&#x8005;&#x7F3A;&#x5C11;&#x4E86;&#x5FC5;&#x8981;&#x7684;&#x5305;&#xFF0C; &#x7F16;&#x8BD1;&#x4F1A;&#x5931;&#x8D25;&#x3002; 1 2 3 4 5 6 7 8 // &#x5BFC;&#x5165;&#x4E00;&#x4E2A;&#x5305; import fmt // &#x5BFC;&#x5165;&#x591A;&#x4E2A; import ( fmt os )"},"basic/package.html#main":{"title":"main","path":"\\golang-learn\\basic\\package.html#main","body":"main &#x662F;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x5305;&#xFF0C; main &#x5305;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x8FD0;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A; modules &#x6216;&#x8005; libraries &#x3002; main &#x5305;&#x91CC; &#x5FC5;&#x987B;&#x6709; main &#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x662F;&#x7A0B;&#x5E8F;&#x7684;&#x5165;&#x53E3;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E14; mian &#x51FD;&#x6570;&#x6CA1;&#x6709;&#x53C2;&#x6570;&#x3002;&#x6BD4;&#x5982;&#xFF1A; 1 2 3 func main () { \tfmt.Println( Hello, &#x4E16;&#x754C; ) } hello world 1 2 3 4 5 6 7 package main import fmt func main () { \tfmt.Println(x) } &#x51FD;&#x6570;&#x58F0;&#x660E;&#x4F7F;&#x7528; func &#x5173;&#x952E;&#x5B57;&#x3002;Go &#x4E0D;&#x9700;&#x8981;&#x5728;&#x8BED;&#x53E5;&#x6216;&#x8005;&#x58F0;&#x660E;&#x7684;&#x672B;&#x5C3E;&#x6DFB;&#x52A0;&#x5206;&#x53F7;&#x3002;&#x9664;&#x975E;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x4E0A;&#x6709;&#x591A;&#x6761;&#x8BED;&#x53E5;&#x3002;"},"basic/package.html#点操作":{"title":"&#x70B9;&#x64CD;&#x4F5C;","path":"\\golang-learn\\basic\\package.html#点操作","body":"1 2 3 import ( . fmt ) &#x8FD9;&#x4E2A;&#x70B9;&#x64CD;&#x4F5C;&#x7684;&#x542B;&#x4E49;&#x5C31;&#x662F;&#x8FD9;&#x4E2A;&#x5305;&#x5BFC;&#x5165;&#x4E4B;&#x540E;&#x5728;&#x4F60;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x5305;&#x7684;&#x51FD;&#x6570;&#x65F6;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x7701;&#x7565;&#x524D;&#x7F00;&#x7684;&#x5305;&#x540D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x524D;&#x9762;&#x4F60;&#x8C03;&#x7528;&#x7684; fmt.Println(hello world) &#x53EF;&#x4EE5;&#x7701;&#x7565;&#x7684;&#x5199;&#x6210; Println(hello world) &#x3002; &#x5BFC;&#x5165;&#x5305;&#x91CD;&#x547D;&#x540D; &#x5982;&#x679C;&#x5BFC;&#x5165;&#x4E24;&#x4E2A;&#x76F8;&#x540C;&#x540D;&#x5B57;&#x7684;&#x5305;&#xFF0C;&#x5982; math/rand &#x5305;&#x548C; crypto/rand &#x5305;&#xFF0C;&#x53EF;&#x4EE5;&#x4E3A;&#x4E00;&#x4E2A;&#x5305;&#x91CD;&#x547D;&#x540D;&#x6765;&#x89E3;&#x51B3;&#x540D;&#x5B57;&#x51B2;&#x7A81;&#xFF1A; 1 2 3 4 import ( crypto/rand mrand math/rand // alternative name mrand avoids conflict ) &#x6CE8;&#x610F;&#xFF0C;&#x91CD;&#x547D;&#x540D;&#x7684;&#x5305;&#x540D;&#x53EA;&#x5728;&#x5F53;&#x524D;&#x6E90;&#x6587;&#x4EF6;&#x6709;&#x6548;&#x3002; &#x6709;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5305;&#x91CD;&#x547D;&#x540D;&#xFF1A; &#x5305;&#x540D;&#x5F88;&#x957F;&#x3002;&#x91CD;&#x547D;&#x540D;&#x4E00;&#x4E2A;&#x7B80;&#x77ED;&#x7684;&#x5305;&#x540D;&#x3002; &#x4E0E;&#x53D8;&#x91CF;&#x540D;&#x51B2;&#x7A81;&#x3002; &#x9009;&#x62E9;&#x7528;&#x7B80;&#x77ED;&#x540D;&#x79F0;&#x91CD;&#x547D;&#x540D;&#x5BFC;&#x5165;&#x5305;&#x65F6;&#x5019;&#x6700;&#x597D;&#x7EDF;&#x4E00;&#xFF0C;&#x4EE5;&#x907F;&#x514D;&#x5305;&#x540D;&#x6DF7;&#x4E71;&#x3002; &#x533F;&#x540D;&#x5BFC;&#x5165; &#x6BD4;&#x5982; import _ image/png &#xFF0C; _ &#x662F;&#x7A7A;&#x767D;&#x6807;&#x8BC6;&#x7B26;&#xFF0C;&#x4E0D;&#x80FD;&#x88AB;&#x8BBF;&#x95EE;&#x3002; &#x533F;&#x540D;&#x5BFC;&#x5165;&#x6709;&#x4EC0;&#x4E48;&#x7528;&#xFF1F;&#x6211;&#x4EEC;&#x77E5;&#x9053;&#x5982;&#x679C;&#x5BFC;&#x5165;&#x4E00;&#x4E2A;&#x5305;&#x800C;&#x4E0D;&#x4F7F;&#x7528;&#x4F1A;&#x5BFC;&#x81F4;&#x7F16;&#x8BD1;&#x9519;&#x8BEF; unused import &#x3002;&#x5F53;&#x6211;&#x4EEC;&#x60F3;&#x8981;&#x5BFC;&#x5165;&#x5305;&#xFF0C; &#x4EC5;&#x4EC5;&#x53EA;&#x662F;&#x60F3;&#x8BA1;&#x7B97;&#x5BFC;&#x5165;&#x5305;&#x7684;&#x5305;&#x7EA7;&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x5316;&#x8868;&#x8FBE;&#x5F0F;&#x548C;&#x6267;&#x884C;&#x5BFC;&#x5165;&#x5305;&#x7684; init &#x521D;&#x59CB;&#x5316;&#x51FD;&#x6570;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x533F;&#x540D;&#x5BFC;&#x5165;&#x3002; &#x58F0;&#x660E;&#x6240;&#x5C5E;&#x7684;&#x4EE3;&#x7801;&#x5305;&#x4E0E;&#x5176;&#x6240;&#x5728;&#x76EE;&#x5F55;&#x7684;&#x540D;&#x79F0;&#x4E0D;&#x540C;&#x65F6; &#x6E90;&#x7801;&#x6587;&#x4EF6;&#x6240;&#x5728;&#x7684;&#x76EE;&#x5F55;&#x76F8;&#x5BF9;&#x4E8E; src &#x76EE;&#x5F55;&#x7684;&#x76F8;&#x5BF9;&#x8DEF;&#x5F84;&#x5C31;&#x662F;&#x5B83;&#x7684;&#x4EE3;&#x7801;&#x5305;&#x5BFC;&#x5165;&#x8DEF;&#x5F84;&#xFF0C;&#x800C;&#x5B9E;&#x9645;&#x4F7F;&#x7528;&#x5176;&#x7A0B;&#x5E8F;&#x5B9E;&#x4F53;&#x65F6;&#x7ED9;&#x5B9A;&#x7684;&#x9650;&#x5B9A;&#x7B26;&#x8981;&#x4E0E;&#x5B83; &#x58F0;&#x660E;&#x6240;&#x5C5E;&#x7684;&#x4EE3;&#x7801;&#x5305;&#x540D;&#x79F0;&#x5BF9;&#x5E94;&#x3002;&#x4E3A;&#x4E86;&#x4E0D;&#x8BA9;&#x8BE5;&#x4EE3;&#x7801;&#x5305;&#x7684;&#x4F7F;&#x7528;&#x8005;&#x4EA7;&#x751F;&#x56F0;&#x60D1;&#xFF0C;&#x6211;&#x4EEC;&#x603B;&#x662F;&#x5E94;&#x8BE5;&#x8BA9;&#x58F0;&#x660E;&#x7684;&#x5305;&#x540D;&#x4E0E;&#x5176;&#x7236;&#x76EE;&#x5F55;&#x7684;&#x540D;&#x79F0;&#x4E00;&#x81F4;&#x3002;"},"basic/package.html#包声明":{"title":"&#x5305;&#x58F0;&#x660E;","path":"\\golang-learn\\basic\\package.html#包声明","body":"&#x5305;&#x58F0;&#x660E;&#x8BED;&#x53E5;&#xFF08;&#x5305;&#x540D;&#xFF09;&#x5FC5;&#x987B;&#x5728;&#x6BCF;&#x4E2A;&#x6E90;&#x6587;&#x4EF6;&#x7684;&#x5F00;&#x5934;&#x3002;&#x88AB;&#x5176;&#x5B83;&#x5305;&#x5BFC;&#x5165;&#x65F6;&#x9ED8;&#x8BA4;&#x7684;&#x6807;&#x8BC6;&#x7B26;&#x3002;&#x6BCF;&#x4E2A;&#x5305;&#x90FD;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684;&#x540D;&#x5B57;&#x7A7A;&#x95F4;&#xFF0C; &#x5982;&#xFF1A; image &#x5305;&#x548C; unicode/utf16 &#x5305;&#x4E2D;&#x90FD;&#x5305;&#x542B;&#x4E86; Decode &#x3002;&#x8981;&#x5728;&#x5916;&#x90E8;&#x5F15;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x5FC5;&#x987B;&#x663E;&#x5F0F;&#x4F7F;&#x7528; image.Decode &#x6216; utf16.Decode &#x5F62;&#x5F0F;&#x8BBF;&#x95EE;&#x3002; &#x5305;&#x5185;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#x5B9A;&#x4E49;&#x7684;&#x540D;&#x5B57;&#xFF08;&#x5305;&#x62EC;&#x53D8;&#x91CF;&#xFF0C;&#x7C7B;&#x578B;&#xFF0C;&#x51FD;&#x6570;&#x7B49;&#x7B49;&#xFF09;&#xFF0C;&#x4F1A;&#x88AB;&#x5BFC;&#x51FA;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5305;&#x7684;&#x5916;&#x90E8;&#x8BBF;&#x95EE;&#x3002; &#x9ED8;&#x8BA4;&#x5305;&#x540D;&#x4E00;&#x822C;&#x91C7;&#x7528;&#x5BFC;&#x5165;&#x8DEF;&#x5F84;&#x540D;&#x7684;&#x6700;&#x540E;&#x4E00;&#x6BB5;&#xFF0C;&#x6BD4;&#x5982; GOPTAH/src/packages/test &#x7684; test &#x5C31;&#x662F;&#x5305;&#x540D;&#x3002;&#x4E09;&#x79CD;&#x60C5;&#x51B5;&#x4F8B;&#x5916;&#xFF1A; main &#x5305;&#xFF0C; go build &#x547D;&#x4EE4;&#x7F16;&#x8BD1;&#x5B8C;&#x4E4B;&#x540E;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x3002; &#x4EE5; _test &#x4E3A;&#x540E;&#x7F00;&#x5305;&#x540D;&#x7684;&#x6D4B;&#x8BD5;&#x5916;&#x90E8;&#x6269;&#x5C55;&#x5305;&#x90FD;&#x7531; go test &#x547D;&#x4EE4;&#x72EC;&#x7ACB;&#x7F16;&#x8BD1;&#x3002;(&#x4EE5; _ &#x6216; . &#x5F00;&#x5934;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x4F1A;&#x88AB;&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x5FFD;&#x7565;) &#x5982; gopkg.in/yaml.v2 &#x3002;&#x5305;&#x7684;&#x540D;&#x5B57;&#x5305;&#x542B;&#x7248;&#x672C;&#x53F7;&#x540E;&#x7F00; .v2 &#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x5305;&#x540D;&#x662F; yaml &#x3002;"},"basic/package.html#包命名":{"title":"&#x5305;&#x547D;&#x540D;","path":"\\golang-learn\\basic\\package.html#包命名","body":"&#x5305;&#x547D;&#x540D;&#x5C3D;&#x91CF;&#x6709;&#x63CF;&#x8FF0;&#x6027;&#x4E14;&#x65E0;&#x6B67;&#x4E49;&#xFF0C;&#x7B80;&#x77ED;&#xFF0C;&#x907F;&#x514D;&#x51B2;&#x7A81;&#x3002;"},"basic/package.html#初始化包":{"title":"&#x521D;&#x59CB;&#x5316;&#x5305;","path":"\\golang-learn\\basic\\package.html#初始化包","body":"&#x5305;&#x7684;&#x521D;&#x59CB;&#x5316;&#x9996;&#x5148;&#x662F;&#x89E3;&#x51B3;&#x5305;&#x7EA7;&#x53D8;&#x91CF;&#x7684;&#x4F9D;&#x8D56;&#x987A;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x6309;&#x7167;&#x5305;&#x7EA7;&#x53D8;&#x91CF;&#x58F0;&#x660E;&#x51FA;&#x73B0;&#x7684;&#x987A;&#x5E8F;&#x4F9D;&#x6B21;&#x521D;&#x59CB;&#x5316;&#xFF1A; 1 2 3 4 5 var a = b + c // a &#x7B2C;&#x4E09;&#x4E2A;&#x521D;&#x59CB;&#x5316;, &#x4E3A; 3 var b = f() // b &#x7B2C;&#x4E8C;&#x4E2A;&#x521D;&#x59CB;&#x5316;, &#x4E3A; 2, &#x901A;&#x8FC7;&#x8C03;&#x7528; f (&#x4F9D;&#x8D56;c) var c = 1 // c &#x7B2C;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x5316;, &#x4E3A; 1 func f () int { return c + 1 } &#x5982;&#x679C;&#x5305;&#x4E2D;&#x542B;&#x6709;&#x591A;&#x4E2A;&#x6E90;&#x6587;&#x4EF6;&#xFF0C;&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x9996;&#x5148;&#x4F1A;&#x5C06; .go &#x6587;&#x4EF6;&#x6839;&#x636E;&#x6587;&#x4EF6;&#x540D;&#x6392;&#x5E8F;&#xFF0C;&#x7136;&#x540E;&#x4F9D;&#x6B21;&#x8C03;&#x7528;&#x7F16;&#x8BD1;&#x5668;&#x7F16;&#x8BD1;&#x3002; &#x6BCF;&#x4E2A;&#x5305;&#x5728;&#x89E3;&#x51B3;&#x4F9D;&#x8D56;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;&#x4EE5;&#x5BFC;&#x5165;&#x58F0;&#x660E;&#x7684;&#x987A;&#x5E8F;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x6BCF;&#x4E2A;&#x5305;&#x53EA;&#x4F1A;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x6B21;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A; p &#x5305;&#x5BFC;&#x5165;&#x4E86; q &#x5305;&#xFF0C; &#x90A3;&#x4E48;&#x5728; p &#x5305;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x8BA4;&#x4E3A; q &#x5305;&#x5FC5;&#x7136;&#x5DF2;&#x7ECF;&#x521D;&#x59CB;&#x5316;&#x8FC7;&#x4E86;&#x3002;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C;&#x662F;&#x81EA;&#x4E0B;&#x800C;&#x4E0A;&#x8FDB;&#x884C;&#x7684;&#xFF0C; main &#x5305;&#x6700;&#x540E;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x3002;&#x4EE5;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#xFF0C; &#x53EF;&#x4EE5;&#x786E;&#x4FDD;&#x5728; main &#x51FD;&#x6570;&#x6267;&#x884C;&#x4E4B;&#x524D;&#xFF0C;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x7684;&#x5305;&#x90FD;&#x5DF2;&#x7ECF;&#x5B8C;&#x6210;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C;&#x4E86;&#x3002; &#x4F7F;&#x7528; init &#x51FD;&#x6570; &#x4F7F;&#x7528; init &#x51FD;&#x6570;&#x6765;&#x7B80;&#x5316;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C;&#xFF0C; init &#x51FD;&#x6570;&#x548C;&#x666E;&#x901A;&#x51FD;&#x6570;&#x7C7B;&#x4F3C;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x80FD;&#x88AB;&#x8C03;&#x7528;&#x6216;&#x5F15;&#x7528;&#x3002; &#x7A0B;&#x5E8F;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x65F6;&#x6309;&#x7167;&#x5B83;&#x4EEC;&#x58F0;&#x660E;&#x7684;&#x987A;&#x5E8F;&#x81EA;&#x52A8;&#x8C03;&#x7528;&#x3002; init &#x51FD;&#x6570;&#x4E0D;&#x80FD;&#x6709;&#x4EFB;&#x4F55;&#x7684;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x867D;&#x7136;&#x4E00;&#x4E2A; package &#x91CC;&#x9762;&#x53EF;&#x4EE5;&#x5199;&#x4EFB;&#x610F;&#x591A;&#x4E2A; init &#x51FD;&#x6570;&#xFF0C;&#x4F46;&#x8FD9;&#x65E0;&#x8BBA;&#x662F;&#x5BF9;&#x4E8E;&#x53EF;&#x8BFB;&#x6027;&#x8FD8;&#x662F;&#x4EE5;&#x540E;&#x7684;&#x53EF;&#x7EF4;&#x62A4;&#x6027;&#x6765;&#x8BF4;&#xFF0C; &#x6211;&#x4EEC;&#x90FD;&#x5F3A;&#x70C8;&#x5EFA;&#x8BAE;&#x7528;&#x6237;&#x5728;&#x4E00;&#x4E2A; package &#x4E2D;&#x6BCF;&#x4E2A;&#x6587;&#x4EF6;&#x53EA;&#x5199;&#x4E00;&#x4E2A; init &#x51FD;&#x6570;&#x3002; &#x7A0B;&#x5E8F;&#x7684;&#x521D;&#x59CB;&#x5316;&#x548C;&#x6267;&#x884C;&#x90FD;&#x8D77;&#x59CB;&#x4E8E; main &#x5305;&#x3002;&#x5982;&#x679C; main &#x5305;&#x8FD8;&#x5BFC;&#x5165;&#x4E86;&#x5176;&#x5B83;&#x7684;&#x5305;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x5C06;&#x5B83;&#x4EEC;&#x4F9D;&#x6B21;&#x5BFC;&#x5165;&#x3002;&#x6709;&#x65F6;&#x4E00;&#x4E2A;&#x5305;&#x4F1A;&#x88AB;&#x591A;&#x4E2A;&#x5305;&#x540C;&#x65F6;&#x5BFC;&#x5165;&#xFF0C; &#x90A3;&#x4E48;&#x5B83;&#x53EA;&#x4F1A;&#x88AB;&#x5BFC;&#x5165;&#x4E00;&#x6B21;&#xFF08;&#x4F8B;&#x5982;&#x5F88;&#x591A;&#x5305;&#x53EF;&#x80FD;&#x90FD;&#x4F1A;&#x7528;&#x5230; fmt &#x5305;&#xFF0C;&#x4F46;&#x5B83;&#x53EA;&#x4F1A;&#x88AB;&#x5BFC;&#x5165;&#x4E00;&#x6B21;&#xFF0C;&#x56E0;&#x4E3A;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x5BFC;&#x5165;&#x591A;&#x6B21;&#xFF09;&#x3002;&#x5F53;&#x4E00;&#x4E2A;&#x5305;&#x88AB;&#x5BFC;&#x5165;&#x65F6;&#xFF0C;&#x5982;&#x679C;&#x8BE5;&#x5305;&#x8FD8;&#x5BFC;&#x5165;&#x4E86; &#x5176;&#x5B83;&#x7684;&#x5305;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x5148;&#x5C06;&#x5176;&#x5B83;&#x5305;&#x5BFC;&#x5165;&#x8FDB;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x5BF9;&#x8FD9;&#x4E9B;&#x5305;&#x4E2D;&#x7684;&#x5305;&#x7EA7;&#x5E38;&#x91CF;&#x548C;&#x53D8;&#x91CF;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x63A5;&#x7740;&#x6267;&#x884C; init &#x51FD;&#x6570;&#xFF08;&#x5982;&#x679C;&#x6709;&#x7684;&#x8BDD;&#xFF09;&#xFF0C;&#x4F9D;&#x6B21;&#x7C7B;&#x63A8;&#x3002;&#x7B49;&#x6240;&#x6709; &#x88AB;&#x5BFC;&#x5165;&#x7684;&#x5305;&#x90FD;&#x52A0;&#x8F7D;&#x5B8C;&#x6BD5;&#x4E86;&#xFF0C;&#x5C31;&#x4F1A;&#x5F00;&#x59CB;&#x5BF9; main &#x5305;&#x4E2D;&#x7684;&#x5305;&#x7EA7;&#x5E38;&#x91CF;&#x548C;&#x53D8;&#x91CF;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C; main &#x5305;&#x4E2D;&#x7684; init &#x51FD;&#x6570;&#xFF08;&#x5982;&#x679C;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#xFF09;&#xFF0C;&#x6700;&#x540E; &#x6267;&#x884C; main &#x51FD;&#x6570;&#x3002;"},"basic/struct.html":{"title":"结构体","path":"\\golang-learn\\basic\\struct.html","body":"结构体 结构体是由一系列具有相同类型或不同类型的数据构成的数据集合。 结构体定义需要使用 type 和 struct 语句, struct 语句定义一个新的数据类型, type 语句定义了结构体的名称： 1 2 3 4 5 6 7 8 9 10 11 12 // 定义了结构体类型 type struct_variable_type struct  member definition; member definition; ... member definition;  // 声明 variable_name := structure_variable_typevalue1, value2...valuen // 或 variable_name := structure_variable_type key1: value1, key2: value2..., keyn: valuen 用点号 . 操作符访问结构体成员, 实例： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 type Books struct  \ttitle string \tauthor string \tsubject string \tbook_id int  func main ()  \t var Book1 Books /* 声明 Book1 为 Books 类型 */ \t /* book 1 描述 */ \tBook1.title = \"Go 语言\" \tBook1.author = \"www.runoob.com\" \tBook1.subject = \"Go 语言教程\" \tBook1.book_id = 6495407 \t\t /* 打印 Book1 信息 */ \tfmt.Printf( \"Book 1 title : %s\\n\" , Book1.title) \tfmt.Printf( \"Book 1 author : %s\\n\" , Book1.author) \tfmt.Printf( \"Book 1 subject : %s\\n\" , Book1.subject) \tfmt.Printf( \"Book 1 book_id : %d\\n\" , Book1.book_id)  . 点操作符也可以和指向结构体的指针一起工作: 1 2 var employeeOfTheMonth *Employee = &amp;dilbert employeeOfTheMonth.Position += \" (proactive team player)\" 一个结构体可能同时包含导出和未导出的成员, 如果结构体成员名字是以大写字母开头的，那么该成员就是导出的。 未导出的成员, 不允许在外部包修改。 通常一行对应一个结构体成员，成员的名字在前类型在后，不过如果相邻的成员类型如果相同的话可以被合并到一行: 1 2 3 4 5 type Employee struct  \tID int \tName, Address string \tSalary int  一个命名为 S 的结构体类型将不能再包含 S 类型的成员：因为一个聚合的值不能包含它自身。（该限制同样适应于数组。） 但是S类型的结构体可以包含 *S 指针类型的成员，这可以让我们创建递归的数据结构，比如链表和树结构等： 1 2 3 4 type tree struct  \tvalue int \tleft, right *tree  结构体字面值 结构体字面值可以指定每个成员的值: 1 2 3 type Point struct  X, Y int  p := Point 1 , 2  结构体比较 两个结构体将可以使用 == 或 != 运算符进行比较。 1 2 3 4 5 6 type Point struct  X, Y int  p := Point 1 , 2  q := Point 2 , 1  fmt.Println(p.X == q.X &amp;&amp; p.Y == q.Y) // \"false\" fmt.Println(p == q) // \"false\" 结构体嵌入 匿名成员 Go 语言提供的不同寻常的结构体嵌入机制让一个命名的结构体包含另一个结构体类型的匿名成员， 这样就可以通过简单的点运算符 x.f 来访问匿名成员链中嵌套的 x.d.e.f 成员。 1 2 3 4 5 6 7 8 9 10 11 12 13 type Point struct  X, Y int  type Circle struct  Center Point Radius int  type Wheel struct  Circle Circle Spokes int  上面的代码，会使访问每个成员变得繁琐： 1 2 3 4 5 var w Wheel w.Circle.Center.X = 8 w.Circle.Center.Y = 8 w.Circle.Radius = 5 w.Spokes = 20 Go 语言有一个特性可以 只声明一个成员对应的数据类型而定义成员的名字；这类成员就叫匿名成员 。Go 语言规范规定， 如果一个字段的声明中只有字段的类型名而没有字段的名称，那么它就是一个嵌入字段，也可以被称为匿名字段。 匿名成员的数据类型必须是命名的类型或指向一个命名的类型的指针。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type Point struct  X, Y int  type Circle struct  Point Radius int  type Wheel struct  Circle Spokes int  var w Wheel w.X = 8 // equivalent to w.Circle.Point.X = 8 w.Y = 8 // equivalent to w.Circle.Point.Y = 8 w.Radius = 5 // equivalent to w.Circle.Radius = 5 w.Spokes = 20 上面的代码中， Circle 和 Wheel 各自都有一个匿名成员。我们可以说 Point 类型被嵌入到了 Circle 结构体， 同时 Circle 类型被嵌入到了 Wheel 结构体。但是结构体字面值并没有简短表示匿名成员的语法，所以下面的代码， 会编译失败： 1 2 3 4 5 6 7 8 9 10 11 12 13 w = Wheel 8 , 8 , 5 , 20  // compile error: unknown fields w = WheelX: 8 , Y: 8 , Radius: 5 , Spokes: 20  // compile error: unknown fields // 正确的语法 w = WheelCirclePoint 8 , 8 , 5 , 20  w = Wheel Circle: Circle Point: PointX: 8 , Y: 8 , Radius: 5 , , Spokes: 20 , // NOTE: trailing comma necessary here (and at Radius)  不能同时包含两个类型相同的匿名成员，这会导致名字冲突 。 如果被嵌入类型和嵌入类型有同名的方法，那么调用哪一个的方法 只要名称相同，无论这两个方法的签名是否一致，被嵌入类型的方法都会“屏蔽”掉嵌入字段的同名方法 。 类似的，由于我们同样可以像访问被嵌入类型的字段那样，直接访问嵌入字段的字段，所以 如果这两个结构体类型里存在同名的字段， 那么嵌入字段中的那个字段一定会被“屏蔽” 。 正因为嵌入字段的字段和方法都可以“嫁接”到被嵌入类型上，所以即使在两个同名的成员一个是字段，另一个是方法的情况下，这种“屏蔽”现象依然会存在。 不过，即使被屏蔽了，我们仍然可以通过链式的选择表达式，选择到嵌入字段的字段或方法 。 嵌入字段本身也有嵌入字段的情况，这种情况下，“屏蔽”现象会以嵌入的层级为依据，嵌入层级越深的字段或方法越可能被“屏蔽”。"},"basic/struct.html#结构体":{"title":"&#x7ED3;&#x6784;&#x4F53;","path":"\\golang-learn\\basic\\struct.html#结构体","body":"&#x7ED3;&#x6784;&#x4F53;&#x662F;&#x7531;&#x4E00;&#x7CFB;&#x5217;&#x5177;&#x6709;&#x76F8;&#x540C;&#x7C7B;&#x578B;&#x6216;&#x4E0D;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x6570;&#x636E;&#x6784;&#x6210;&#x7684;&#x6570;&#x636E;&#x96C6;&#x5408;&#x3002; &#x7ED3;&#x6784;&#x4F53;&#x5B9A;&#x4E49;&#x9700;&#x8981;&#x4F7F;&#x7528; type &#x548C; struct &#x8BED;&#x53E5;, struct &#x8BED;&#x53E5;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;, type &#x8BED;&#x53E5;&#x5B9A;&#x4E49;&#x4E86;&#x7ED3;&#x6784;&#x4F53;&#x7684;&#x540D;&#x79F0;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 // &#x5B9A;&#x4E49;&#x4E86;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B; type struct_variable_type struct { member definition; member definition; ... member definition; } // &#x58F0;&#x660E; variable_name := structure_variable_type{value1, value2...valuen} // &#x6216; variable_name := structure_variable_type{ key1: value1, key2: value2..., keyn: valuen} &#x7528;&#x70B9;&#x53F7; . &#x64CD;&#x4F5C;&#x7B26;&#x8BBF;&#x95EE;&#x7ED3;&#x6784;&#x4F53;&#x6210;&#x5458;, &#x5B9E;&#x4F8B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 type Books struct { \ttitle string \tauthor string \tsubject string \tbook_id int } func main () { \t var Book1 Books /* &#x58F0;&#x660E; Book1 &#x4E3A; Books &#x7C7B;&#x578B; */ \t /* book 1 &#x63CF;&#x8FF0; */ \tBook1.title = Go &#x8BED;&#x8A00; \tBook1.author = www.runoob.com \tBook1.subject = Go &#x8BED;&#x8A00;&#x6559;&#x7A0B; \tBook1.book_id = 6495407 \t\t /* &#x6253;&#x5370; Book1 &#x4FE1;&#x606F; */ \tfmt.Printf( Book 1 title : %s\\n , Book1.title) \tfmt.Printf( Book 1 author : %s\\n , Book1.author) \tfmt.Printf( Book 1 subject : %s\\n , Book1.subject) \tfmt.Printf( Book 1 book_id : %d\\n , Book1.book_id) } . &#x70B9;&#x64CD;&#x4F5C;&#x7B26;&#x4E5F;&#x53EF;&#x4EE5;&#x548C;&#x6307;&#x5411;&#x7ED3;&#x6784;&#x4F53;&#x7684;&#x6307;&#x9488;&#x4E00;&#x8D77;&#x5DE5;&#x4F5C;: 1 2 var employeeOfTheMonth *Employee = &amp;dilbert employeeOfTheMonth.Position +=  (proactive team player) &#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x53EF;&#x80FD;&#x540C;&#x65F6;&#x5305;&#x542B;&#x5BFC;&#x51FA;&#x548C;&#x672A;&#x5BFC;&#x51FA;&#x7684;&#x6210;&#x5458;, &#x5982;&#x679C;&#x7ED3;&#x6784;&#x4F53;&#x6210;&#x5458;&#x540D;&#x5B57;&#x662F;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x6210;&#x5458;&#x5C31;&#x662F;&#x5BFC;&#x51FA;&#x7684;&#x3002; &#x672A;&#x5BFC;&#x51FA;&#x7684;&#x6210;&#x5458;, &#x4E0D;&#x5141;&#x8BB8;&#x5728;&#x5916;&#x90E8;&#x5305;&#x4FEE;&#x6539;&#x3002; &#x901A;&#x5E38;&#x4E00;&#x884C;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x6210;&#x5458;&#xFF0C;&#x6210;&#x5458;&#x7684;&#x540D;&#x5B57;&#x5728;&#x524D;&#x7C7B;&#x578B;&#x5728;&#x540E;&#xFF0C;&#x4E0D;&#x8FC7;&#x5982;&#x679C;&#x76F8;&#x90BB;&#x7684;&#x6210;&#x5458;&#x7C7B;&#x578B;&#x5982;&#x679C;&#x76F8;&#x540C;&#x7684;&#x8BDD;&#x53EF;&#x4EE5;&#x88AB;&#x5408;&#x5E76;&#x5230;&#x4E00;&#x884C;: 1 2 3 4 5 type Employee struct { \tID int \tName, Address string \tSalary int } &#x4E00;&#x4E2A;&#x547D;&#x540D;&#x4E3A; S &#x7684;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x5C06;&#x4E0D;&#x80FD;&#x518D;&#x5305;&#x542B; S &#x7C7B;&#x578B;&#x7684;&#x6210;&#x5458;&#xFF1A;&#x56E0;&#x4E3A;&#x4E00;&#x4E2A;&#x805A;&#x5408;&#x7684;&#x503C;&#x4E0D;&#x80FD;&#x5305;&#x542B;&#x5B83;&#x81EA;&#x8EAB;&#x3002;&#xFF08;&#x8BE5;&#x9650;&#x5236;&#x540C;&#x6837;&#x9002;&#x5E94;&#x4E8E;&#x6570;&#x7EC4;&#x3002;&#xFF09; &#x4F46;&#x662F;S&#x7C7B;&#x578B;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x53EF;&#x4EE5;&#x5305;&#x542B; *S &#x6307;&#x9488;&#x7C7B;&#x578B;&#x7684;&#x6210;&#x5458;&#xFF0C;&#x8FD9;&#x53EF;&#x4EE5;&#x8BA9;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x9012;&#x5F52;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#xFF0C;&#x6BD4;&#x5982;&#x94FE;&#x8868;&#x548C;&#x6811;&#x7ED3;&#x6784;&#x7B49;&#xFF1A; 1 2 3 4 type tree struct { \tvalue int \tleft, right *tree }"},"basic/struct.html#结构体字面值":{"title":"&#x7ED3;&#x6784;&#x4F53;&#x5B57;&#x9762;&#x503C;","path":"\\golang-learn\\basic\\struct.html#结构体字面值","body":"&#x7ED3;&#x6784;&#x4F53;&#x5B57;&#x9762;&#x503C;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x6BCF;&#x4E2A;&#x6210;&#x5458;&#x7684;&#x503C;: 1 2 3 type Point struct { X, Y int } p := Point{ 1 , 2 }"},"basic/struct.html#结构体比较":{"title":"&#x7ED3;&#x6784;&#x4F53;&#x6BD4;&#x8F83;","path":"\\golang-learn\\basic\\struct.html#结构体比较","body":"&#x4E24;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x5C06;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; == &#x6216; != &#x8FD0;&#x7B97;&#x7B26;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#x3002; 1 2 3 4 5 6 type Point struct { X, Y int } p := Point{ 1 , 2 } q := Point{ 2 , 1 } fmt.Println(p.X == q.X &amp;&amp; p.Y == q.Y) // false fmt.Println(p == q) // false"},"basic/struct.html#结构体嵌入-匿名成员":{"title":"&#x7ED3;&#x6784;&#x4F53;&#x5D4C;&#x5165; &#x533F;&#x540D;&#x6210;&#x5458;","path":"\\golang-learn\\basic\\struct.html#结构体嵌入-匿名成员","body":"Go &#x8BED;&#x8A00;&#x63D0;&#x4F9B;&#x7684;&#x4E0D;&#x540C;&#x5BFB;&#x5E38;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x5D4C;&#x5165;&#x673A;&#x5236;&#x8BA9;&#x4E00;&#x4E2A;&#x547D;&#x540D;&#x7684;&#x7ED3;&#x6784;&#x4F53;&#x5305;&#x542B;&#x53E6;&#x4E00;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x7684;&#x533F;&#x540D;&#x6210;&#x5458;&#xFF0C; &#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7B80;&#x5355;&#x7684;&#x70B9;&#x8FD0;&#x7B97;&#x7B26; x.f &#x6765;&#x8BBF;&#x95EE;&#x533F;&#x540D;&#x6210;&#x5458;&#x94FE;&#x4E2D;&#x5D4C;&#x5957;&#x7684; x.d.e.f &#x6210;&#x5458;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 type Point struct { X, Y int } type Circle struct { Center Point Radius int } type Wheel struct { Circle Circle Spokes int } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x4F1A;&#x4F7F;&#x8BBF;&#x95EE;&#x6BCF;&#x4E2A;&#x6210;&#x5458;&#x53D8;&#x5F97;&#x7E41;&#x7410;&#xFF1A; 1 2 3 4 5 var w Wheel w.Circle.Center.X = 8 w.Circle.Center.Y = 8 w.Circle.Radius = 5 w.Spokes = 20 Go &#x8BED;&#x8A00;&#x6709;&#x4E00;&#x4E2A;&#x7279;&#x6027;&#x53EF;&#x4EE5; &#x53EA;&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x6210;&#x5458;&#x5BF9;&#x5E94;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x800C;&#x5B9A;&#x4E49;&#x6210;&#x5458;&#x7684;&#x540D;&#x5B57;&#xFF1B;&#x8FD9;&#x7C7B;&#x6210;&#x5458;&#x5C31;&#x53EB;&#x533F;&#x540D;&#x6210;&#x5458; &#x3002;Go &#x8BED;&#x8A00;&#x89C4;&#x8303;&#x89C4;&#x5B9A;&#xFF0C; &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x5B57;&#x6BB5;&#x7684;&#x58F0;&#x660E;&#x4E2D;&#x53EA;&#x6709;&#x5B57;&#x6BB5;&#x7684;&#x7C7B;&#x578B;&#x540D;&#x800C;&#x6CA1;&#x6709;&#x5B57;&#x6BB5;&#x7684;&#x540D;&#x79F0;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x79F0;&#x4E3A;&#x533F;&#x540D;&#x5B57;&#x6BB5;&#x3002; &#x533F;&#x540D;&#x6210;&#x5458;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x662F;&#x547D;&#x540D;&#x7684;&#x7C7B;&#x578B;&#x6216;&#x6307;&#x5411;&#x4E00;&#x4E2A;&#x547D;&#x540D;&#x7684;&#x7C7B;&#x578B;&#x7684;&#x6307;&#x9488;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type Point struct { X, Y int } type Circle struct { Point Radius int } type Wheel struct { Circle Spokes int } var w Wheel w.X = 8 // equivalent to w.Circle.Point.X = 8 w.Y = 8 // equivalent to w.Circle.Point.Y = 8 w.Radius = 5 // equivalent to w.Circle.Radius = 5 w.Spokes = 20 &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C; Circle &#x548C; Wheel &#x5404;&#x81EA;&#x90FD;&#x6709;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x6210;&#x5458;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BF4; Point &#x7C7B;&#x578B;&#x88AB;&#x5D4C;&#x5165;&#x5230;&#x4E86; Circle &#x7ED3;&#x6784;&#x4F53;&#xFF0C; &#x540C;&#x65F6; Circle &#x7C7B;&#x578B;&#x88AB;&#x5D4C;&#x5165;&#x5230;&#x4E86; Wheel &#x7ED3;&#x6784;&#x4F53;&#x3002;&#x4F46;&#x662F;&#x7ED3;&#x6784;&#x4F53;&#x5B57;&#x9762;&#x503C;&#x5E76;&#x6CA1;&#x6709;&#x7B80;&#x77ED;&#x8868;&#x793A;&#x533F;&#x540D;&#x6210;&#x5458;&#x7684;&#x8BED;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;&#x4E0B;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C; &#x4F1A;&#x7F16;&#x8BD1;&#x5931;&#x8D25;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 w = Wheel{ 8 , 8 , 5 , 20 } // compile error: unknown fields w = Wheel{X: 8 , Y: 8 , Radius: 5 , Spokes: 20 } // compile error: unknown fields // &#x6B63;&#x786E;&#x7684;&#x8BED;&#x6CD5; w = Wheel{Circle{Point{ 8 , 8 }, 5 }, 20 } w = Wheel{ Circle: Circle{ Point: Point{X: 8 , Y: 8 }, Radius: 5 , }, Spokes: 20 , // NOTE: trailing comma necessary here (and at Radius) } &#x4E0D;&#x80FD;&#x540C;&#x65F6;&#x5305;&#x542B;&#x4E24;&#x4E2A;&#x7C7B;&#x578B;&#x76F8;&#x540C;&#x7684;&#x533F;&#x540D;&#x6210;&#x5458;&#xFF0C;&#x8FD9;&#x4F1A;&#x5BFC;&#x81F4;&#x540D;&#x5B57;&#x51B2;&#x7A81; &#x3002; &#x5982;&#x679C;&#x88AB;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x548C;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x6709;&#x540C;&#x540D;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x8C03;&#x7528;&#x54EA;&#x4E00;&#x4E2A;&#x7684;&#x65B9;&#x6CD5; &#x53EA;&#x8981;&#x540D;&#x79F0;&#x76F8;&#x540C;&#xFF0C;&#x65E0;&#x8BBA;&#x8FD9;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x7684;&#x7B7E;&#x540D;&#x662F;&#x5426;&#x4E00;&#x81F4;&#xFF0C;&#x88AB;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x7684;&#x65B9;&#x6CD5;&#x90FD;&#x4F1A;&#x201C;&#x5C4F;&#x853D;&#x201D;&#x6389;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x540C;&#x540D;&#x65B9;&#x6CD5; &#x3002; &#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x540C;&#x6837;&#x53EF;&#x4EE5;&#x50CF;&#x8BBF;&#x95EE;&#x88AB;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x90A3;&#x6837;&#xFF0C;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x6240;&#x4EE5; &#x5982;&#x679C;&#x8FD9;&#x4E24;&#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x91CC;&#x5B58;&#x5728;&#x540C;&#x540D;&#x7684;&#x5B57;&#x6BB5;&#xFF0C; &#x90A3;&#x4E48;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x4E2D;&#x7684;&#x90A3;&#x4E2A;&#x5B57;&#x6BB5;&#x4E00;&#x5B9A;&#x4F1A;&#x88AB;&#x201C;&#x5C4F;&#x853D;&#x201D; &#x3002; &#x6B63;&#x56E0;&#x4E3A;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x5B57;&#x6BB5;&#x548C;&#x65B9;&#x6CD5;&#x90FD;&#x53EF;&#x4EE5;&#x201C;&#x5AC1;&#x63A5;&#x201D;&#x5230;&#x88AB;&#x5D4C;&#x5165;&#x7C7B;&#x578B;&#x4E0A;&#xFF0C;&#x6240;&#x4EE5;&#x5373;&#x4F7F;&#x5728;&#x4E24;&#x4E2A;&#x540C;&#x540D;&#x7684;&#x6210;&#x5458;&#x4E00;&#x4E2A;&#x662F;&#x5B57;&#x6BB5;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A;&#x662F;&#x65B9;&#x6CD5;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x79CD;&#x201C;&#x5C4F;&#x853D;&#x201D;&#x73B0;&#x8C61;&#x4F9D;&#x7136;&#x4F1A;&#x5B58;&#x5728;&#x3002; &#x4E0D;&#x8FC7;&#xFF0C;&#x5373;&#x4F7F;&#x88AB;&#x5C4F;&#x853D;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x4ECD;&#x7136;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x94FE;&#x5F0F;&#x7684;&#x9009;&#x62E9;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x9009;&#x62E9;&#x5230;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x5B57;&#x6BB5;&#x6216;&#x65B9;&#x6CD5; &#x3002; &#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x672C;&#x8EAB;&#x4E5F;&#x6709;&#x5D4C;&#x5165;&#x5B57;&#x6BB5;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x201C;&#x5C4F;&#x853D;&#x201D;&#x73B0;&#x8C61;&#x4F1A;&#x4EE5;&#x5D4C;&#x5165;&#x7684;&#x5C42;&#x7EA7;&#x4E3A;&#x4F9D;&#x636E;&#xFF0C;&#x5D4C;&#x5165;&#x5C42;&#x7EA7;&#x8D8A;&#x6DF1;&#x7684;&#x5B57;&#x6BB5;&#x6216;&#x65B9;&#x6CD5;&#x8D8A;&#x53EF;&#x80FD;&#x88AB;&#x201C;&#x5C4F;&#x853D;&#x201D;&#x3002;"},"basic/var.html":{"title":"变量","path":"\\golang-learn\\basic\\var.html","body":"变量 var 声明变量，必须使用空格隔开： 1 var 变量名字 类型 = 表达式 类型 或者 表达式 可以省略其中的一个。也就是如果没有类型，可以通过表达式推断出类型， 没有表达式，将会根据类型初始化为对应的零值 。 “零值”，所指并非是空值，而是一种“变量未填充前”的默认值，通常为 0 ，对应关系： 数值类型： 0 布尔类型： false 字符串:  接口或引用类型（包括 slice 、指针、 map 、 chan 和函数）： nil 声明一组变量 1 var 变量名字, 变量名字, 变量名字 ... 类型 = 表达式, 表达式, 表达式, ... 比如： 1 2 3 4 5 6 7 8 9 10 11 // 声明一组 `int` 类型 var i, j, k int // int, int, int // 声明一组不同类型 var b, f, s = true , 2.3 , \"four\" // bool, float64, string var ( i int pi float32 prefix string ) 简短声明 := 只能在函数内使用，不能提供数据类型 ，Go 会自动推断类型： 1 变量名字 := 表达式 1 2 3 4 5 6 7 var x = 100 func main ()  \tfmt.Println(&amp;x, x) \tx := \"abc\" \tfmt.Println(&amp;x, x)  上面的代码中 x := abc 相当于重新定义并初始化了同名的局部变量 x ，因为 不在同一个作用域 ，所以打印出来的结果完全不同。 简短声明，并不总是重新定义比变量，要避免重新定义，首先要在同一个作用域中，至少有一个新的变量被定义： 1 2 3 4 5 6 func main ()  \tx := 100 \tfmt.Println(&amp;x, x) \tx, y := 200 , 300 // 一个新的变量 y，这里的简短声明 x 就是赋值操作 \tfmt.Println(&amp;x, x)  如果重复使用简短声明定义一个变量，会报错： 1 2 3 x := 100 fmt.Println(&amp;x) x := 200 // 错误， no new variables on left side of := 赋值 常见的赋值的方式： 1 2 3 4 5 6 7 8 9 x = 1 // 命名变量的赋值 *p = true // 通过指针间接赋值 person.name = \"bob\" // 结构体字段赋值 count[x] = count[x] * scale // 数组、slice 或 map 的元素赋值 count[x] *= scale // 等价于 count[x] = count[x] * scale，但是省去了对变量表达式的重复计算 x, y = y, x // 交换值 f, err = os.Open( \"foo.txt\" ) // 左边变量的数目必须和右边一致，函数一般会返回一个 error 类型 v, ok = m[key] // map 查找，返回布尔值类表示操作是否成功 v = m[key] // map 查找，也可以返回一个值，失败时返回零值 不管是隐式还是显式地赋值，在赋值语句左边的变量和右边最终的求到的值必须有相同的数据类型。这就是 可赋值性 。 进行 多变量赋值 时，首先计算出所有右值，然后再依次赋值： 1 2 x, y := 1 , 2 x, y = y+ 3 , x+ 2 // 先计算出 y+3, x+2, 然后赋值"},"basic/var.html#变量":{"title":"&#x53D8;&#x91CF;","path":"\\golang-learn\\basic\\var.html#变量","body":"var &#x58F0;&#x660E;&#x53D8;&#x91CF;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528;&#x7A7A;&#x683C;&#x9694;&#x5F00;&#xFF1A; 1 var &#x53D8;&#x91CF;&#x540D;&#x5B57; &#x7C7B;&#x578B; = &#x8868;&#x8FBE;&#x5F0F; &#x7C7B;&#x578B; &#x6216;&#x8005; &#x8868;&#x8FBE;&#x5F0F; &#x53EF;&#x4EE5;&#x7701;&#x7565;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8868;&#x8FBE;&#x5F0F;&#x63A8;&#x65AD;&#x51FA;&#x7C7B;&#x578B;&#xFF0C; &#x6CA1;&#x6709;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5C06;&#x4F1A;&#x6839;&#x636E;&#x7C7B;&#x578B;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x5BF9;&#x5E94;&#x7684;&#x96F6;&#x503C; &#x3002; &#x201C;&#x96F6;&#x503C;&#x201D;&#xFF0C;&#x6240;&#x6307;&#x5E76;&#x975E;&#x662F;&#x7A7A;&#x503C;&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x79CD;&#x201C;&#x53D8;&#x91CF;&#x672A;&#x586B;&#x5145;&#x524D;&#x201D;&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#xFF0C;&#x901A;&#x5E38;&#x4E3A; 0 &#xFF0C;&#x5BF9;&#x5E94;&#x5173;&#x7CFB;&#xFF1A; &#x6570;&#x503C;&#x7C7B;&#x578B;&#xFF1A; 0 &#x5E03;&#x5C14;&#x7C7B;&#x578B;&#xFF1A; false &#x5B57;&#x7B26;&#x4E32;:  &#x63A5;&#x53E3;&#x6216;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF08;&#x5305;&#x62EC; slice &#x3001;&#x6307;&#x9488;&#x3001; map &#x3001; chan &#x548C;&#x51FD;&#x6570;&#xFF09;&#xFF1A; nil"},"basic/var.html#声明一组变量":{"title":"&#x58F0;&#x660E;&#x4E00;&#x7EC4;&#x53D8;&#x91CF;","path":"\\golang-learn\\basic\\var.html#声明一组变量","body":"1 var &#x53D8;&#x91CF;&#x540D;&#x5B57;, &#x53D8;&#x91CF;&#x540D;&#x5B57;, &#x53D8;&#x91CF;&#x540D;&#x5B57; ... &#x7C7B;&#x578B; = &#x8868;&#x8FBE;&#x5F0F;, &#x8868;&#x8FBE;&#x5F0F;, &#x8868;&#x8FBE;&#x5F0F;, ... &#x6BD4;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 // &#x58F0;&#x660E;&#x4E00;&#x7EC4; `int` &#x7C7B;&#x578B; var i, j, k int // int, int, int // &#x58F0;&#x660E;&#x4E00;&#x7EC4;&#x4E0D;&#x540C;&#x7C7B;&#x578B; var b, f, s = true , 2.3 , four // bool, float64, string var ( i int pi float32 prefix string )"},"basic/var.html#简短声明":{"title":"&#x7B80;&#x77ED;&#x58F0;&#x660E;","path":"\\golang-learn\\basic\\var.html#简短声明","body":":= &#x53EA;&#x80FD;&#x5728;&#x51FD;&#x6570;&#x5185;&#x4F7F;&#x7528;&#xFF0C;&#x4E0D;&#x80FD;&#x63D0;&#x4F9B;&#x6570;&#x636E;&#x7C7B;&#x578B; &#xFF0C;Go &#x4F1A;&#x81EA;&#x52A8;&#x63A8;&#x65AD;&#x7C7B;&#x578B;&#xFF1A; 1 &#x53D8;&#x91CF;&#x540D;&#x5B57; := &#x8868;&#x8FBE;&#x5F0F; 1 2 3 4 5 6 7 var x = 100 func main () { \tfmt.Println(&amp;x, x) \tx := abc \tfmt.Println(&amp;x, x) } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D; x := abc &#x76F8;&#x5F53;&#x4E8E;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#x5E76;&#x521D;&#x59CB;&#x5316;&#x4E86;&#x540C;&#x540D;&#x7684;&#x5C40;&#x90E8;&#x53D8;&#x91CF; x &#xFF0C;&#x56E0;&#x4E3A; &#x4E0D;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x4F5C;&#x7528;&#x57DF; &#xFF0C;&#x6240;&#x4EE5;&#x6253;&#x5370;&#x51FA;&#x6765;&#x7684;&#x7ED3;&#x679C;&#x5B8C;&#x5168;&#x4E0D;&#x540C;&#x3002; &#x7B80;&#x77ED;&#x58F0;&#x660E;&#xFF0C;&#x5E76;&#x4E0D;&#x603B;&#x662F;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#x6BD4;&#x53D8;&#x91CF;&#xFF0C;&#x8981;&#x907F;&#x514D;&#x91CD;&#x65B0;&#x5B9A;&#x4E49;&#xFF0C;&#x9996;&#x5148;&#x8981;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x4F5C;&#x7528;&#x57DF;&#x4E2D;&#xFF0C;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x53D8;&#x91CF;&#x88AB;&#x5B9A;&#x4E49;&#xFF1A; 1 2 3 4 5 6 func main () { \tx := 100 \tfmt.Println(&amp;x, x) \tx, y := 200 , 300 // &#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x53D8;&#x91CF; y&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x7B80;&#x77ED;&#x58F0;&#x660E; x &#x5C31;&#x662F;&#x8D4B;&#x503C;&#x64CD;&#x4F5C; \tfmt.Println(&amp;x, x) } &#x5982;&#x679C;&#x91CD;&#x590D;&#x4F7F;&#x7528;&#x7B80;&#x77ED;&#x58F0;&#x660E;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x4F1A;&#x62A5;&#x9519;&#xFF1A; 1 2 3 x := 100 fmt.Println(&amp;x) x := 200 // &#x9519;&#x8BEF;&#xFF0C; no new variables on left side of :="},"basic/var.html#赋值":{"title":"&#x8D4B;&#x503C;","path":"\\golang-learn\\basic\\var.html#赋值","body":"&#x5E38;&#x89C1;&#x7684;&#x8D4B;&#x503C;&#x7684;&#x65B9;&#x5F0F;&#xFF1A; 1 2 3 4 5 6 7 8 9 x = 1 // &#x547D;&#x540D;&#x53D8;&#x91CF;&#x7684;&#x8D4B;&#x503C; *p = true // &#x901A;&#x8FC7;&#x6307;&#x9488;&#x95F4;&#x63A5;&#x8D4B;&#x503C; person.name = bob // &#x7ED3;&#x6784;&#x4F53;&#x5B57;&#x6BB5;&#x8D4B;&#x503C; count[x] = count[x] * scale // &#x6570;&#x7EC4;&#x3001;slice &#x6216; map &#x7684;&#x5143;&#x7D20;&#x8D4B;&#x503C; count[x] *= scale // &#x7B49;&#x4EF7;&#x4E8E; count[x] = count[x] * scale&#xFF0C;&#x4F46;&#x662F;&#x7701;&#x53BB;&#x4E86;&#x5BF9;&#x53D8;&#x91CF;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x91CD;&#x590D;&#x8BA1;&#x7B97; x, y = y, x // &#x4EA4;&#x6362;&#x503C; f, err = os.Open( foo.txt ) // &#x5DE6;&#x8FB9;&#x53D8;&#x91CF;&#x7684;&#x6570;&#x76EE;&#x5FC5;&#x987B;&#x548C;&#x53F3;&#x8FB9;&#x4E00;&#x81F4;&#xFF0C;&#x51FD;&#x6570;&#x4E00;&#x822C;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; error &#x7C7B;&#x578B; v, ok = m[key] // map &#x67E5;&#x627E;&#xFF0C;&#x8FD4;&#x56DE;&#x5E03;&#x5C14;&#x503C;&#x7C7B;&#x8868;&#x793A;&#x64CD;&#x4F5C;&#x662F;&#x5426;&#x6210;&#x529F; v = m[key] // map &#x67E5;&#x627E;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x5931;&#x8D25;&#x65F6;&#x8FD4;&#x56DE;&#x96F6;&#x503C; &#x4E0D;&#x7BA1;&#x662F;&#x9690;&#x5F0F;&#x8FD8;&#x662F;&#x663E;&#x5F0F;&#x5730;&#x8D4B;&#x503C;&#xFF0C;&#x5728;&#x8D4B;&#x503C;&#x8BED;&#x53E5;&#x5DE6;&#x8FB9;&#x7684;&#x53D8;&#x91CF;&#x548C;&#x53F3;&#x8FB9;&#x6700;&#x7EC8;&#x7684;&#x6C42;&#x5230;&#x7684;&#x503C;&#x5FC5;&#x987B;&#x6709;&#x76F8;&#x540C;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x3002;&#x8FD9;&#x5C31;&#x662F; &#x53EF;&#x8D4B;&#x503C;&#x6027; &#x3002; &#x8FDB;&#x884C; &#x591A;&#x53D8;&#x91CF;&#x8D4B;&#x503C; &#x65F6;&#xFF0C;&#x9996;&#x5148;&#x8BA1;&#x7B97;&#x51FA;&#x6240;&#x6709;&#x53F3;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x4F9D;&#x6B21;&#x8D4B;&#x503C;&#xFF1A; 1 2 x, y := 1 , 2 x, y = y+ 3 , x+ 2 // &#x5148;&#x8BA1;&#x7B97;&#x51FA; y+3, x+2, &#x7136;&#x540E;&#x8D4B;&#x503C;"},"basic/operator.html":{"title":"运算符","path":"\\golang-learn\\basic\\operator.html","body":"运算符 优先级 * ， / ， % ，  ，  ， &amp; ， &amp;^ + ， - ， | ， ^ == ， != ，  ， = ，  ， = &amp;&amp; || 上面的运算符得优先级，从上到下，从左到右。也就是 * 的优先级最高， || 的优先级最低。 算术运算符 + 、 - 、 * 和 / 可以适用于整数、浮点数和复数。 在 Go 中， % 取模运算符的符号和被取模数的符号总是一致的，因此 -5 % 3 和 -5 % -3 结果都是 -2 。 % 仅用于整数间的运算。除法运算符 / 的行为则依赖于操作数是否为全为整数，比如 5.0/4.0 的结果是 1.25 ，但是 5/4 的结果是 1 ，因为整数除法会向着 0 方向截断余数。 ++ 自增， -- 自减 关系运算符 == ， != ，  ， = ，  ， = 。 布尔型、数字类型和字符串等基本类型都是可比较的，也就是说两个相同类型的值可以用 == 和 != 进行比较。 逻辑运算符 &amp;&amp; ， || ， ! （逻辑 NOT 运算符）。 位运算符 &amp; ， | ， ^ ，  ，  ， &amp;^ （位清空 AND NOT） &amp;^ ：如果对应 y 中 bit 位为 1 的话, 表达式 z = x &amp;^ y 结果 z 的对应的 bit 位为 0 ，否则 z 对应的 bit 位等于 x 相应的 bit 位的值。如： 1 2 3 var x uint8 = 00100010 var y uint8 = 00000110 fmt.Printf( \"%08b\\n\" , x&amp;^y) // \"00100000\" 赋值运算符 除了 = 外，还有 += （相加后再赋值）， -= （相减后再赋值）， *= （相乘后再赋值）等等，其他的赋值运算符也都是 一个套路。 其他运算符 &amp; （取地址操作）， * （指针变量）。"},"basic/operator.html#运算符":{"title":"&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#运算符","body":""},"basic/operator.html#优先级":{"title":"&#x4F18;&#x5148;&#x7EA7;","path":"\\golang-learn\\basic\\operator.html#优先级","body":"* &#xFF0C; / &#xFF0C; % &#xFF0C;  &#xFF0C;  &#xFF0C; &amp; &#xFF0C; &amp;^ + &#xFF0C; - &#xFF0C; | &#xFF0C; ^ == &#xFF0C; != &#xFF0C;  &#xFF0C; = &#xFF0C;  &#xFF0C; = &amp;&amp; || &#x4E0A;&#x9762;&#x7684;&#x8FD0;&#x7B97;&#x7B26;&#x5F97;&#x4F18;&#x5148;&#x7EA7;&#xFF0C;&#x4ECE;&#x4E0A;&#x5230;&#x4E0B;&#xFF0C;&#x4ECE;&#x5DE6;&#x5230;&#x53F3;&#x3002;&#x4E5F;&#x5C31;&#x662F; * &#x7684;&#x4F18;&#x5148;&#x7EA7;&#x6700;&#x9AD8;&#xFF0C; || &#x7684;&#x4F18;&#x5148;&#x7EA7;&#x6700;&#x4F4E;&#x3002;"},"basic/operator.html#算术运算符":{"title":"&#x7B97;&#x672F;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#算术运算符","body":"+ &#x3001; - &#x3001; * &#x548C; / &#x53EF;&#x4EE5;&#x9002;&#x7528;&#x4E8E;&#x6574;&#x6570;&#x3001;&#x6D6E;&#x70B9;&#x6570;&#x548C;&#x590D;&#x6570;&#x3002; &#x5728; Go &#x4E2D;&#xFF0C; % &#x53D6;&#x6A21;&#x8FD0;&#x7B97;&#x7B26;&#x7684;&#x7B26;&#x53F7;&#x548C;&#x88AB;&#x53D6;&#x6A21;&#x6570;&#x7684;&#x7B26;&#x53F7;&#x603B;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF0C;&#x56E0;&#x6B64; -5 % 3 &#x548C; -5 % -3 &#x7ED3;&#x679C;&#x90FD;&#x662F; -2 &#x3002; % &#x4EC5;&#x7528;&#x4E8E;&#x6574;&#x6570;&#x95F4;&#x7684;&#x8FD0;&#x7B97;&#x3002;&#x9664;&#x6CD5;&#x8FD0;&#x7B97;&#x7B26; / &#x7684;&#x884C;&#x4E3A;&#x5219;&#x4F9D;&#x8D56;&#x4E8E;&#x64CD;&#x4F5C;&#x6570;&#x662F;&#x5426;&#x4E3A;&#x5168;&#x4E3A;&#x6574;&#x6570;&#xFF0C;&#x6BD4;&#x5982; 5.0/4.0 &#x7684;&#x7ED3;&#x679C;&#x662F; 1.25 &#xFF0C;&#x4F46;&#x662F; 5/4 &#x7684;&#x7ED3;&#x679C;&#x662F; 1 &#xFF0C;&#x56E0;&#x4E3A;&#x6574;&#x6570;&#x9664;&#x6CD5;&#x4F1A;&#x5411;&#x7740; 0 &#x65B9;&#x5411;&#x622A;&#x65AD;&#x4F59;&#x6570;&#x3002; ++ &#x81EA;&#x589E;&#xFF0C; -- &#x81EA;&#x51CF;"},"basic/operator.html#关系运算符":{"title":"&#x5173;&#x7CFB;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#关系运算符","body":"== &#xFF0C; != &#xFF0C;  &#xFF0C; = &#xFF0C;  &#xFF0C; = &#x3002; &#x5E03;&#x5C14;&#x578B;&#x3001;&#x6570;&#x5B57;&#x7C7B;&#x578B;&#x548C;&#x5B57;&#x7B26;&#x4E32;&#x7B49;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x90FD;&#x662F;&#x53EF;&#x6BD4;&#x8F83;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x4E24;&#x4E2A;&#x76F8;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x7528; == &#x548C; != &#x8FDB;&#x884C;&#x6BD4;&#x8F83;&#x3002;"},"basic/operator.html#逻辑运算符":{"title":"&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#逻辑运算符","body":"&amp;&amp; &#xFF0C; || &#xFF0C; ! &#xFF08;&#x903B;&#x8F91; NOT &#x8FD0;&#x7B97;&#x7B26;&#xFF09;&#x3002;"},"basic/operator.html#位运算符":{"title":"&#x4F4D;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#位运算符","body":"&amp; &#xFF0C; | &#xFF0C; ^ &#xFF0C;  &#xFF0C;  &#xFF0C; &amp;^ &#xFF08;&#x4F4D;&#x6E05;&#x7A7A; AND NOT&#xFF09; &amp;^ &#xFF1A;&#x5982;&#x679C;&#x5BF9;&#x5E94; y &#x4E2D; bit &#x4F4D;&#x4E3A; 1 &#x7684;&#x8BDD;, &#x8868;&#x8FBE;&#x5F0F; z = x &amp;^ y &#x7ED3;&#x679C; z &#x7684;&#x5BF9;&#x5E94;&#x7684; bit &#x4F4D;&#x4E3A; 0 &#xFF0C;&#x5426;&#x5219; z &#x5BF9;&#x5E94;&#x7684; bit &#x4F4D;&#x7B49;&#x4E8E; x &#x76F8;&#x5E94;&#x7684; bit &#x4F4D;&#x7684;&#x503C;&#x3002;&#x5982;&#xFF1A; 1 2 3 var x uint8 = 00100010 var y uint8 = 00000110 fmt.Printf( %08b\\n , x&amp;^y) // 00100000"},"basic/operator.html#赋值运算符":{"title":"&#x8D4B;&#x503C;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#赋值运算符","body":"&#x9664;&#x4E86; = &#x5916;&#xFF0C;&#x8FD8;&#x6709; += &#xFF08;&#x76F8;&#x52A0;&#x540E;&#x518D;&#x8D4B;&#x503C;&#xFF09;&#xFF0C; -= &#xFF08;&#x76F8;&#x51CF;&#x540E;&#x518D;&#x8D4B;&#x503C;&#xFF09;&#xFF0C; *= &#xFF08;&#x76F8;&#x4E58;&#x540E;&#x518D;&#x8D4B;&#x503C;&#xFF09;&#x7B49;&#x7B49;&#xFF0C;&#x5176;&#x4ED6;&#x7684;&#x8D4B;&#x503C;&#x8FD0;&#x7B97;&#x7B26;&#x4E5F;&#x90FD;&#x662F; &#x4E00;&#x4E2A;&#x5957;&#x8DEF;&#x3002;"},"basic/operator.html#其他运算符":{"title":"&#x5176;&#x4ED6;&#x8FD0;&#x7B97;&#x7B26;","path":"\\golang-learn\\basic\\operator.html#其他运算符","body":"&amp; &#xFF08;&#x53D6;&#x5730;&#x5740;&#x64CD;&#x4F5C;&#xFF09;&#xFF0C; * &#xFF08;&#x6307;&#x9488;&#x53D8;&#x91CF;&#xFF09;&#x3002;"},"basic/map.html":{"title":"map","path":"\\golang-learn\\basic\\map.html","body":"map map 是一个无序的 key/value 对的集合。 map 是引用类型 。这意味着它拥有对底层数据结构的引用， 就像指针一样。它底层的数据结构是 hash table 或 hash map 。 map 作为引用类型是非常好的，因为无论 map 有多大，都只会有一个副本。 定义 map ，使用 map 关键字： 1 2 3 4 5 6 7 8 9 10 11 12 /* 声明变量，默认 map 是 nil */ var 变量名 map [键类型]值类型 /* 使用 make 函数 */ 变量名 := make ( map [键类型]值类型) /* 字面值的语法创建 */ 变量名 := map [键类型]值类型 key1: value1, key2: value2, ...  一个 map 在未初始化之前默认为 nil 。 通过索引下标 key 来访问 map 中对应的 value 1 2 age, ok := ages[ \"bob\" ] if !ok  /* \"bob\" is not a key in this map; age == 0. */  ok 表示操作结果，是一个布尔值。 这叫做 ok-idiom 模式，就是在多返回值中返回一个 ok 布尔值，表示是否操作 成功 。 使用 map 过程中需要注意的几点： map 是无序的，每次打印出来的 map 都会不一样 ，它不能通过 index 获取，而必须通过 key 获取 map 的长度是不固定的，也就是和 slice 一样，也是一种引用类型 内置的 len 函数同样适用于 map ，返回 map 拥有的 key 的数量 map 的值可以很方便的修改，通过 numbers[one]=11 可以很容易的把 key 为 one 的字典值改为 11 map 和其他基本型别不同，它不是 thread-safe 的 ，在多个 go-routine 存取时，必须使用 mutex lock 机制 delete() delete 函数删除 map 元素。 1 delete (mapName, key) 遍历 可以使用 for range 遍历 map ： 1 2 3 for key, value := range mapName  \tfmt.Println(mapName[key])  Map 的迭代顺序是不确定的。可以先使用 sort 包排序 。 map 的键类型不能是哪些类型 map 的键和元素的最大不同在于，前者的类型是受限的，而后者却可以是任意类型的。 map 的键类型不可以是函数类型、字典类型和切片类型 。 为什么？ Go 语言规范规定，在 键类型的值之间必须可以施加操作符 == 和 != 。换句话说，键类型的值必须要支持判等操作。由于 函数类型、字典类型和切片类型的值并不支持判等操作，所以字典的键类型不能是这些类型。 另外，如果键的类型是接口类型的，那么键值的实际类型也不能是上述三种类型，否则在程序运行过程中会引发 panic（即运行时恐慌）。 1 2 3 4 5 var badMap2 = map [ interface ] int  \"1\" : 1 , [] int  2 : 2 , // 这里会引发 panic。 3 : 3 ,  优先考虑哪些类型作为字典的键类型 求哈希和判等操作的速度越快，对应的类型就越适合作为键类型。 对于所有的基本类型、指针类型，以及数组类型、结构体类型和接口类型，Go 语言都有一套算法与之对应。这套算法中就包含了哈希和判等。 以求哈希的操作为例，宽度越小的类型速度通常越快。对于布尔类型、整数类型、浮点数类型、复数类型和指针类型来说都是如此。对于字 符串类型，由于它的宽度是不定的，所以要看它的值的具体长度，长度越短求哈希越快。 类型的宽度是指它的单个值需要占用的字节数。比如， bool 、 int8 和 uint8 类型的一个值需要占用的字节数都是 1，因此这 些类型的宽度就都是 1。 在值为 nil 的字典上执行读写操作会成功吗 当我们仅声明而不初始化一个字典类型的变量的时候，它的值会是 nil 。如果你尝试使用一个 nil 的 map ，你会 得到一个 nil 指针异常，这将导致程序终止运行。所以不应该初始化一个空的 map 变量，比如 var m map[string]string 。 除了添加键 - 元素对，我们在一个值为 nil 的字典上做任何操作都不会引起错误 。当我们试图在一个值为 nil 的字典中 添加键 - 元素对的时候，Go 语言的运行时系统就会立即抛出一个 panic。 可以先使用 make 函数初始化，或者 dictionary = map[string]string{} 。这两种方法都可以创建一个空的 hash map 并指向 dictionary 。这确保永远不会获得 nil 指针异常 。"},"basic/map.html#map":{"title":"map","path":"\\golang-learn\\basic\\map.html#map","body":"map &#x662F;&#x4E00;&#x4E2A;&#x65E0;&#x5E8F;&#x7684; key/value &#x5BF9;&#x7684;&#x96C6;&#x5408;&#x3002; map &#x662F;&#x5F15;&#x7528;&#x7C7B;&#x578B; &#x3002;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x5B83;&#x62E5;&#x6709;&#x5BF9;&#x5E95;&#x5C42;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x7684;&#x5F15;&#x7528;&#xFF0C; &#x5C31;&#x50CF;&#x6307;&#x9488;&#x4E00;&#x6837;&#x3002;&#x5B83;&#x5E95;&#x5C42;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x662F; hash table &#x6216; hash map &#x3002; map &#x4F5C;&#x4E3A;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x662F;&#x975E;&#x5E38;&#x597D;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x65E0;&#x8BBA; map &#x6709;&#x591A;&#x5927;&#xFF0C;&#x90FD;&#x53EA;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x526F;&#x672C;&#x3002; &#x5B9A;&#x4E49; map &#xFF0C;&#x4F7F;&#x7528; map &#x5173;&#x952E;&#x5B57;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 /* &#x58F0;&#x660E;&#x53D8;&#x91CF;&#xFF0C;&#x9ED8;&#x8BA4; map &#x662F; nil */ var &#x53D8;&#x91CF;&#x540D; map [&#x952E;&#x7C7B;&#x578B;]&#x503C;&#x7C7B;&#x578B; /* &#x4F7F;&#x7528; make &#x51FD;&#x6570; */ &#x53D8;&#x91CF;&#x540D; := make ( map [&#x952E;&#x7C7B;&#x578B;]&#x503C;&#x7C7B;&#x578B;) /* &#x5B57;&#x9762;&#x503C;&#x7684;&#x8BED;&#x6CD5;&#x521B;&#x5EFA; */ &#x53D8;&#x91CF;&#x540D; := map [&#x952E;&#x7C7B;&#x578B;]&#x503C;&#x7C7B;&#x578B;{ key1: value1, key2: value2, ... } &#x4E00;&#x4E2A; map &#x5728;&#x672A;&#x521D;&#x59CB;&#x5316;&#x4E4B;&#x524D;&#x9ED8;&#x8BA4;&#x4E3A; nil &#x3002; &#x901A;&#x8FC7;&#x7D22;&#x5F15;&#x4E0B;&#x6807; key &#x6765;&#x8BBF;&#x95EE; map &#x4E2D;&#x5BF9;&#x5E94;&#x7684; value 1 2 age, ok := ages[ bob ] if !ok { /* bob is not a key in this map; age == 0. */ } ok &#x8868;&#x793A;&#x64CD;&#x4F5C;&#x7ED3;&#x679C;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x5E03;&#x5C14;&#x503C;&#x3002; &#x8FD9;&#x53EB;&#x505A; ok-idiom &#x6A21;&#x5F0F;&#xFF0C;&#x5C31;&#x662F;&#x5728;&#x591A;&#x8FD4;&#x56DE;&#x503C;&#x4E2D;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; ok &#x5E03;&#x5C14;&#x503C;&#xFF0C;&#x8868;&#x793A;&#x662F;&#x5426;&#x64CD;&#x4F5C; &#x6210;&#x529F; &#x3002; &#x4F7F;&#x7528; map &#x8FC7;&#x7A0B;&#x4E2D;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x51E0;&#x70B9;&#xFF1A; map &#x662F;&#x65E0;&#x5E8F;&#x7684;&#xFF0C;&#x6BCF;&#x6B21;&#x6253;&#x5370;&#x51FA;&#x6765;&#x7684; map &#x90FD;&#x4F1A;&#x4E0D;&#x4E00;&#x6837; &#xFF0C;&#x5B83;&#x4E0D;&#x80FD;&#x901A;&#x8FC7; index &#x83B7;&#x53D6;&#xFF0C;&#x800C;&#x5FC5;&#x987B;&#x901A;&#x8FC7; key &#x83B7;&#x53D6; map &#x7684;&#x957F;&#x5EA6;&#x662F;&#x4E0D;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x548C; slice &#x4E00;&#x6837;&#xFF0C;&#x4E5F;&#x662F;&#x4E00;&#x79CD;&#x5F15;&#x7528;&#x7C7B;&#x578B; &#x5185;&#x7F6E;&#x7684; len &#x51FD;&#x6570;&#x540C;&#x6837;&#x9002;&#x7528;&#x4E8E; map &#xFF0C;&#x8FD4;&#x56DE; map &#x62E5;&#x6709;&#x7684; key &#x7684;&#x6570;&#x91CF; map &#x7684;&#x503C;&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x901A;&#x8FC7; numbers[one]=11 &#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x7684;&#x628A; key &#x4E3A; one &#x7684;&#x5B57;&#x5178;&#x503C;&#x6539;&#x4E3A; 11 map &#x548C;&#x5176;&#x4ED6;&#x57FA;&#x672C;&#x578B;&#x522B;&#x4E0D;&#x540C;&#xFF0C;&#x5B83;&#x4E0D;&#x662F; thread-safe &#x7684; &#xFF0C;&#x5728;&#x591A;&#x4E2A; go-routine &#x5B58;&#x53D6;&#x65F6;&#xFF0C;&#x5FC5;&#x987B;&#x4F7F;&#x7528; mutex lock &#x673A;&#x5236; delete() delete &#x51FD;&#x6570;&#x5220;&#x9664; map &#x5143;&#x7D20;&#x3002; 1 delete (mapName, key) &#x904D;&#x5386; &#x53EF;&#x4EE5;&#x4F7F;&#x7528; for range &#x904D;&#x5386; map &#xFF1A; 1 2 3 for key, value := range mapName { \tfmt.Println(mapName[key]) } Map &#x7684;&#x8FED;&#x4EE3;&#x987A;&#x5E8F;&#x662F;&#x4E0D;&#x786E;&#x5B9A;&#x7684;&#x3002;&#x53EF;&#x4EE5;&#x5148;&#x4F7F;&#x7528; sort &#x5305;&#x6392;&#x5E8F; &#x3002; map &#x7684;&#x952E;&#x7C7B;&#x578B;&#x4E0D;&#x80FD;&#x662F;&#x54EA;&#x4E9B;&#x7C7B;&#x578B; map &#x7684;&#x952E;&#x548C;&#x5143;&#x7D20;&#x7684;&#x6700;&#x5927;&#x4E0D;&#x540C;&#x5728;&#x4E8E;&#xFF0C;&#x524D;&#x8005;&#x7684;&#x7C7B;&#x578B;&#x662F;&#x53D7;&#x9650;&#x7684;&#xFF0C;&#x800C;&#x540E;&#x8005;&#x5374;&#x53EF;&#x4EE5;&#x662F;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x3002; map &#x7684;&#x952E;&#x7C7B;&#x578B;&#x4E0D;&#x53EF;&#x4EE5;&#x662F;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#x3001;&#x5B57;&#x5178;&#x7C7B;&#x578B;&#x548C;&#x5207;&#x7247;&#x7C7B;&#x578B; &#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#xFF1F; Go &#x8BED;&#x8A00;&#x89C4;&#x8303;&#x89C4;&#x5B9A;&#xFF0C;&#x5728; &#x952E;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x4E4B;&#x95F4;&#x5FC5;&#x987B;&#x53EF;&#x4EE5;&#x65BD;&#x52A0;&#x64CD;&#x4F5C;&#x7B26; == &#x548C; != &#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x952E;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x5FC5;&#x987B;&#x8981;&#x652F;&#x6301;&#x5224;&#x7B49;&#x64CD;&#x4F5C;&#x3002;&#x7531;&#x4E8E; &#x51FD;&#x6570;&#x7C7B;&#x578B;&#x3001;&#x5B57;&#x5178;&#x7C7B;&#x578B;&#x548C;&#x5207;&#x7247;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x5E76;&#x4E0D;&#x652F;&#x6301;&#x5224;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x5B57;&#x5178;&#x7684;&#x952E;&#x7C7B;&#x578B;&#x4E0D;&#x80FD;&#x662F;&#x8FD9;&#x4E9B;&#x7C7B;&#x578B;&#x3002; &#x53E6;&#x5916;&#xFF0C;&#x5982;&#x679C;&#x952E;&#x7684;&#x7C7B;&#x578B;&#x662F;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x952E;&#x503C;&#x7684;&#x5B9E;&#x9645;&#x7C7B;&#x578B;&#x4E5F;&#x4E0D;&#x80FD;&#x662F;&#x4E0A;&#x8FF0;&#x4E09;&#x79CD;&#x7C7B;&#x578B;&#xFF0C;&#x5426;&#x5219;&#x5728;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x4F1A;&#x5F15;&#x53D1; panic&#xFF08;&#x5373;&#x8FD0;&#x884C;&#x65F6;&#x6050;&#x614C;&#xFF09;&#x3002; 1 2 3 4 5 var badMap2 = map [ interface {}] int { 1 : 1 , [] int { 2 }: 2 , // &#x8FD9;&#x91CC;&#x4F1A;&#x5F15;&#x53D1; panic&#x3002; 3 : 3 , } &#x4F18;&#x5148;&#x8003;&#x8651;&#x54EA;&#x4E9B;&#x7C7B;&#x578B;&#x4F5C;&#x4E3A;&#x5B57;&#x5178;&#x7684;&#x952E;&#x7C7B;&#x578B; &#x6C42;&#x54C8;&#x5E0C;&#x548C;&#x5224;&#x7B49;&#x64CD;&#x4F5C;&#x7684;&#x901F;&#x5EA6;&#x8D8A;&#x5FEB;&#xFF0C;&#x5BF9;&#x5E94;&#x7684;&#x7C7B;&#x578B;&#x5C31;&#x8D8A;&#x9002;&#x5408;&#x4F5C;&#x4E3A;&#x952E;&#x7C7B;&#x578B;&#x3002; &#x5BF9;&#x4E8E;&#x6240;&#x6709;&#x7684;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x3001;&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF0C;&#x4EE5;&#x53CA;&#x6570;&#x7EC4;&#x7C7B;&#x578B;&#x3001;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x548C;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#xFF0C;Go &#x8BED;&#x8A00;&#x90FD;&#x6709;&#x4E00;&#x5957;&#x7B97;&#x6CD5;&#x4E0E;&#x4E4B;&#x5BF9;&#x5E94;&#x3002;&#x8FD9;&#x5957;&#x7B97;&#x6CD5;&#x4E2D;&#x5C31;&#x5305;&#x542B;&#x4E86;&#x54C8;&#x5E0C;&#x548C;&#x5224;&#x7B49;&#x3002; &#x4EE5;&#x6C42;&#x54C8;&#x5E0C;&#x7684;&#x64CD;&#x4F5C;&#x4E3A;&#x4F8B;&#xFF0C;&#x5BBD;&#x5EA6;&#x8D8A;&#x5C0F;&#x7684;&#x7C7B;&#x578B;&#x901F;&#x5EA6;&#x901A;&#x5E38;&#x8D8A;&#x5FEB;&#x3002;&#x5BF9;&#x4E8E;&#x5E03;&#x5C14;&#x7C7B;&#x578B;&#x3001;&#x6574;&#x6570;&#x7C7B;&#x578B;&#x3001;&#x6D6E;&#x70B9;&#x6570;&#x7C7B;&#x578B;&#x3001;&#x590D;&#x6570;&#x7C7B;&#x578B;&#x548C;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x6765;&#x8BF4;&#x90FD;&#x662F;&#x5982;&#x6B64;&#x3002;&#x5BF9;&#x4E8E;&#x5B57; &#x7B26;&#x4E32;&#x7C7B;&#x578B;&#xFF0C;&#x7531;&#x4E8E;&#x5B83;&#x7684;&#x5BBD;&#x5EA6;&#x662F;&#x4E0D;&#x5B9A;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x8981;&#x770B;&#x5B83;&#x7684;&#x503C;&#x7684;&#x5177;&#x4F53;&#x957F;&#x5EA6;&#xFF0C;&#x957F;&#x5EA6;&#x8D8A;&#x77ED;&#x6C42;&#x54C8;&#x5E0C;&#x8D8A;&#x5FEB;&#x3002; &#x7C7B;&#x578B;&#x7684;&#x5BBD;&#x5EA6;&#x662F;&#x6307;&#x5B83;&#x7684;&#x5355;&#x4E2A;&#x503C;&#x9700;&#x8981;&#x5360;&#x7528;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002;&#x6BD4;&#x5982;&#xFF0C; bool &#x3001; int8 &#x548C; uint8 &#x7C7B;&#x578B;&#x7684;&#x4E00;&#x4E2A;&#x503C;&#x9700;&#x8981;&#x5360;&#x7528;&#x7684;&#x5B57;&#x8282;&#x6570;&#x90FD;&#x662F; 1&#xFF0C;&#x56E0;&#x6B64;&#x8FD9; &#x4E9B;&#x7C7B;&#x578B;&#x7684;&#x5BBD;&#x5EA6;&#x5C31;&#x90FD;&#x662F; 1&#x3002; &#x5728;&#x503C;&#x4E3A; nil &#x7684;&#x5B57;&#x5178;&#x4E0A;&#x6267;&#x884C;&#x8BFB;&#x5199;&#x64CD;&#x4F5C;&#x4F1A;&#x6210;&#x529F;&#x5417; &#x5F53;&#x6211;&#x4EEC;&#x4EC5;&#x58F0;&#x660E;&#x800C;&#x4E0D;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x5B57;&#x5178;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x7684;&#x503C;&#x4F1A;&#x662F; nil &#x3002;&#x5982;&#x679C;&#x4F60;&#x5C1D;&#x8BD5;&#x4F7F;&#x7528;&#x4E00;&#x4E2A; nil &#x7684; map &#xFF0C;&#x4F60;&#x4F1A; &#x5F97;&#x5230;&#x4E00;&#x4E2A; nil &#x6307;&#x9488;&#x5F02;&#x5E38;&#xFF0C;&#x8FD9;&#x5C06;&#x5BFC;&#x81F4;&#x7A0B;&#x5E8F;&#x7EC8;&#x6B62;&#x8FD0;&#x884C;&#x3002;&#x6240;&#x4EE5;&#x4E0D;&#x5E94;&#x8BE5;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x7A7A;&#x7684; map &#x53D8;&#x91CF;&#xFF0C;&#x6BD4;&#x5982; var m map[string]string &#x3002; &#x9664;&#x4E86;&#x6DFB;&#x52A0;&#x952E; - &#x5143;&#x7D20;&#x5BF9;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x4E00;&#x4E2A;&#x503C;&#x4E3A; nil &#x7684;&#x5B57;&#x5178;&#x4E0A;&#x505A;&#x4EFB;&#x4F55;&#x64CD;&#x4F5C;&#x90FD;&#x4E0D;&#x4F1A;&#x5F15;&#x8D77;&#x9519;&#x8BEF; &#x3002;&#x5F53;&#x6211;&#x4EEC;&#x8BD5;&#x56FE;&#x5728;&#x4E00;&#x4E2A;&#x503C;&#x4E3A; nil &#x7684;&#x5B57;&#x5178;&#x4E2D; &#x6DFB;&#x52A0;&#x952E; - &#x5143;&#x7D20;&#x5BF9;&#x7684;&#x65F6;&#x5019;&#xFF0C;Go &#x8BED;&#x8A00;&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x5C31;&#x4F1A;&#x7ACB;&#x5373;&#x629B;&#x51FA;&#x4E00;&#x4E2A; panic&#x3002; &#x53EF;&#x4EE5;&#x5148;&#x4F7F;&#x7528; make &#x51FD;&#x6570;&#x521D;&#x59CB;&#x5316;&#xFF0C;&#x6216;&#x8005; dictionary = map[string]string{} &#x3002;&#x8FD9;&#x4E24;&#x79CD;&#x65B9;&#x6CD5;&#x90FD;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7A7A;&#x7684; hash map &#x5E76;&#x6307;&#x5411; dictionary &#x3002;&#x8FD9;&#x786E;&#x4FDD;&#x6C38;&#x8FDC;&#x4E0D;&#x4F1A;&#x83B7;&#x5F97; nil &#x6307;&#x9488;&#x5F02;&#x5E38; &#x3002;"},"basic/slice.html":{"title":"slice","path":"\\golang-learn\\basic\\slice.html","body":"slice slice 的语法和数组很像，由于数组长度是固定的，所以使用 slice 相比数组会更灵活， slice 是动态的， 长度可以增加也可以减少。还有一点与数组不同，切片不需要说明长度。 切片（slice） 是对底层数组一个连续片段的引用，所以切片是一个引用类型 。 定义切片，和定义数组的区别就是不需要指定 SIZE ： 1 var 变量名 []类型 一个 slice 由三个部分构成：指针、长度和容量。长度不能超过容量。 一个切片在未初始化之前默认为 nil ，长度为 0 。 初始化切片： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // 直接初始化切片，[] 表示是切片类型，1,2,3初始化值依次是1,2,3.其 cap=len=3 s :=[] int  1 , 2 , 3  // 初始化切片s,是数组arr的引用 s := arr[:] // 将arr中从下标startIndex到endIndex-1 下的元素创建为一个新的切片 s := arr[startIndex:endIndex] // 缺省endIndex时将表示一直到arr的最后一个元素 s := arr[startIndex:] // 缺省startIndex时将表示从arr的第一个元素开始 s := arr[:endIndex] // 使用 make 函数来创建切片 // len 是数组的长度并且也是切片的初始长度 // capacity 为可选参数, 指定容量 s := make ([] int , len , capacity) len() 和 cap() len 获取切片长度。 cap 计算切片的最大容量 append() 和 copy() append 向切片追加新元素 copy 拷贝切片 截取切片 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* 创建切片 */ numbers := [] int  0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8  /* 打印子切片从索引1(包含) 到索引4(不包含)*/ fmt.Println( \"numbers[1:4] ==\" , numbers[ 1 : 4 ]) // numbers[1:4] == [1 2 3] /* 默认下限为 0*/ fmt.Println( \"numbers[:3] ==\" , numbers[: 3 ]) // numbers[:3] == [0 1 2] /* 默认上限为 len(s)*/ fmt.Println( \"numbers[4:] ==\" , numbers[ 4 :]) // numbers[4:] == [4 5 6 7 8] numbers1 := make ([] int , 0 , 5 ) /* 打印子切片从索引 0(包含) 到索引 2(不包含) */ number2 := numbers[: 2 ] fmt.Printf( \"len=%d cap=%d slice=%v\\n\" , len (number2), cap (number2),number2) // len=2 cap=9 slice=[0 1] /* 打印子切片从索引 2(包含) 到索引 5(不包含) */ number3 := numbers[ 2 : 5 ] fmt.Printf( \"len=%d cap=%d slice=%v\\n\" , len (number3), cap (number3),number3) // len=3 cap=7 slice=[2 3 4] 怎样估算切片容量的增长 一旦 一个切片无法容纳更多的元素，Go 语言就会想办法扩容。但它并不会改变原来的切片，而是会生成一个容量更大的切片， 然后将把原有的元素和新元素一并拷贝到新切片中 。一般的情况下，你 可以简单地认为新切片的容量（以下简称新容量）将会是 原切片容量（以下简称原容量）的 2 倍 。 但是，当原切片的长度（以下简称原长度）大于或等于 1024 时，Go 语言将会以原容量的 1.25 倍作为新容量的基准（以下新容量基准）。 新容量基准会被调整（不断地与 1.25 相乘），直到结果不小于原长度与要追加的元素数量之和（以下简称新长度）。最终，新容量 往往会、比新长度大一些，当然，相等也是可能的。 一个切片的底层数组永远不会被替换。为什么？虽然在扩容的时候 Go 语言一定会生成新的底层数组，但是它也同时生成了新的切片。它是把新 的切片作为了新底层数组的窗口，而没有对原切片及其底层数组做任何改动。 在无需扩容时， append 函数返回的是指向原底层数组的新切片，而在需要扩容时， append 函数返回的是指向新底层数组的新切片 。"},"basic/slice.html#slice":{"title":"slice","path":"\\golang-learn\\basic\\slice.html#slice","body":"slice &#x7684;&#x8BED;&#x6CD5;&#x548C;&#x6570;&#x7EC4;&#x5F88;&#x50CF;&#xFF0C;&#x7531;&#x4E8E;&#x6570;&#x7EC4;&#x957F;&#x5EA6;&#x662F;&#x56FA;&#x5B9A;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x4F7F;&#x7528; slice &#x76F8;&#x6BD4;&#x6570;&#x7EC4;&#x4F1A;&#x66F4;&#x7075;&#x6D3B;&#xFF0C; slice &#x662F;&#x52A8;&#x6001;&#x7684;&#xFF0C; &#x957F;&#x5EA6;&#x53EF;&#x4EE5;&#x589E;&#x52A0;&#x4E5F;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x3002;&#x8FD8;&#x6709;&#x4E00;&#x70B9;&#x4E0E;&#x6570;&#x7EC4;&#x4E0D;&#x540C;&#xFF0C;&#x5207;&#x7247;&#x4E0D;&#x9700;&#x8981;&#x8BF4;&#x660E;&#x957F;&#x5EA6;&#x3002; &#x5207;&#x7247;&#xFF08;slice&#xFF09; &#x662F;&#x5BF9;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x4E00;&#x4E2A;&#x8FDE;&#x7EED;&#x7247;&#x6BB5;&#x7684;&#x5F15;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x5207;&#x7247;&#x662F;&#x4E00;&#x4E2A;&#x5F15;&#x7528;&#x7C7B;&#x578B; &#x3002; &#x5B9A;&#x4E49;&#x5207;&#x7247;&#xFF0C;&#x548C;&#x5B9A;&#x4E49;&#x6570;&#x7EC4;&#x7684;&#x533A;&#x522B;&#x5C31;&#x662F;&#x4E0D;&#x9700;&#x8981;&#x6307;&#x5B9A; SIZE &#xFF1A; 1 var &#x53D8;&#x91CF;&#x540D; []&#x7C7B;&#x578B; &#x4E00;&#x4E2A; slice &#x7531;&#x4E09;&#x4E2A;&#x90E8;&#x5206;&#x6784;&#x6210;&#xFF1A;&#x6307;&#x9488;&#x3001;&#x957F;&#x5EA6;&#x548C;&#x5BB9;&#x91CF;&#x3002;&#x957F;&#x5EA6;&#x4E0D;&#x80FD;&#x8D85;&#x8FC7;&#x5BB9;&#x91CF;&#x3002; &#x4E00;&#x4E2A;&#x5207;&#x7247;&#x5728;&#x672A;&#x521D;&#x59CB;&#x5316;&#x4E4B;&#x524D;&#x9ED8;&#x8BA4;&#x4E3A; nil &#xFF0C;&#x957F;&#x5EA6;&#x4E3A; 0 &#x3002; &#x521D;&#x59CB;&#x5316;&#x5207;&#x7247;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // &#x76F4;&#x63A5;&#x521D;&#x59CB;&#x5316;&#x5207;&#x7247;&#xFF0C;[] &#x8868;&#x793A;&#x662F;&#x5207;&#x7247;&#x7C7B;&#x578B;&#xFF0C;{1,2,3}&#x521D;&#x59CB;&#x5316;&#x503C;&#x4F9D;&#x6B21;&#x662F;1,2,3.&#x5176; cap=len=3 s :=[] int { 1 , 2 , 3 } // &#x521D;&#x59CB;&#x5316;&#x5207;&#x7247;s,&#x662F;&#x6570;&#x7EC4;arr&#x7684;&#x5F15;&#x7528; s := arr[:] // &#x5C06;arr&#x4E2D;&#x4ECE;&#x4E0B;&#x6807;startIndex&#x5230;endIndex-1 &#x4E0B;&#x7684;&#x5143;&#x7D20;&#x521B;&#x5EFA;&#x4E3A;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5207;&#x7247; s := arr[startIndex:endIndex] // &#x7F3A;&#x7701;endIndex&#x65F6;&#x5C06;&#x8868;&#x793A;&#x4E00;&#x76F4;&#x5230;arr&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20; s := arr[startIndex:] // &#x7F3A;&#x7701;startIndex&#x65F6;&#x5C06;&#x8868;&#x793A;&#x4ECE;arr&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x5F00;&#x59CB; s := arr[:endIndex] // &#x4F7F;&#x7528; make &#x51FD;&#x6570;&#x6765;&#x521B;&#x5EFA;&#x5207;&#x7247; // len &#x662F;&#x6570;&#x7EC4;&#x7684;&#x957F;&#x5EA6;&#x5E76;&#x4E14;&#x4E5F;&#x662F;&#x5207;&#x7247;&#x7684;&#x521D;&#x59CB;&#x957F;&#x5EA6; // capacity &#x4E3A;&#x53EF;&#x9009;&#x53C2;&#x6570;, &#x6307;&#x5B9A;&#x5BB9;&#x91CF; s := make ([] int , len , capacity)"},"basic/slice.html#len-和-cap":{"title":"len() &#x548C; cap()","path":"\\golang-learn\\basic\\slice.html#len-和-cap","body":"len &#x83B7;&#x53D6;&#x5207;&#x7247;&#x957F;&#x5EA6;&#x3002; cap &#x8BA1;&#x7B97;&#x5207;&#x7247;&#x7684;&#x6700;&#x5927;&#x5BB9;&#x91CF;"},"basic/slice.html#append-和-copy":{"title":"append() &#x548C; copy()","path":"\\golang-learn\\basic\\slice.html#append-和-copy","body":"append &#x5411;&#x5207;&#x7247;&#x8FFD;&#x52A0;&#x65B0;&#x5143;&#x7D20; copy &#x62F7;&#x8D1D;&#x5207;&#x7247;"},"basic/slice.html#截取切片":{"title":"&#x622A;&#x53D6;&#x5207;&#x7247;","path":"\\golang-learn\\basic\\slice.html#截取切片","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 /* &#x521B;&#x5EFA;&#x5207;&#x7247; */ numbers := [] int { 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 } /* &#x6253;&#x5370;&#x5B50;&#x5207;&#x7247;&#x4ECE;&#x7D22;&#x5F15;1(&#x5305;&#x542B;) &#x5230;&#x7D22;&#x5F15;4(&#x4E0D;&#x5305;&#x542B;)*/ fmt.Println( numbers[1:4] == , numbers[ 1 : 4 ]) // numbers[1:4] == [1 2 3] /* &#x9ED8;&#x8BA4;&#x4E0B;&#x9650;&#x4E3A; 0*/ fmt.Println( numbers[:3] == , numbers[: 3 ]) // numbers[:3] == [0 1 2] /* &#x9ED8;&#x8BA4;&#x4E0A;&#x9650;&#x4E3A; len(s)*/ fmt.Println( numbers[4:] == , numbers[ 4 :]) // numbers[4:] == [4 5 6 7 8] numbers1 := make ([] int , 0 , 5 ) /* &#x6253;&#x5370;&#x5B50;&#x5207;&#x7247;&#x4ECE;&#x7D22;&#x5F15; 0(&#x5305;&#x542B;) &#x5230;&#x7D22;&#x5F15; 2(&#x4E0D;&#x5305;&#x542B;) */ number2 := numbers[: 2 ] fmt.Printf( len=%d cap=%d slice=%v\\n , len (number2), cap (number2),number2) // len=2 cap=9 slice=[0 1] /* &#x6253;&#x5370;&#x5B50;&#x5207;&#x7247;&#x4ECE;&#x7D22;&#x5F15; 2(&#x5305;&#x542B;) &#x5230;&#x7D22;&#x5F15; 5(&#x4E0D;&#x5305;&#x542B;) */ number3 := numbers[ 2 : 5 ] fmt.Printf( len=%d cap=%d slice=%v\\n , len (number3), cap (number3),number3) // len=3 cap=7 slice=[2 3 4]"},"basic/slice.html#怎样估算切片容量的增长":{"title":"&#x600E;&#x6837;&#x4F30;&#x7B97;&#x5207;&#x7247;&#x5BB9;&#x91CF;&#x7684;&#x589E;&#x957F;","path":"\\golang-learn\\basic\\slice.html#怎样估算切片容量的增长","body":"&#x4E00;&#x65E6; &#x4E00;&#x4E2A;&#x5207;&#x7247;&#x65E0;&#x6CD5;&#x5BB9;&#x7EB3;&#x66F4;&#x591A;&#x7684;&#x5143;&#x7D20;&#xFF0C;Go &#x8BED;&#x8A00;&#x5C31;&#x4F1A;&#x60F3;&#x529E;&#x6CD5;&#x6269;&#x5BB9;&#x3002;&#x4F46;&#x5B83;&#x5E76;&#x4E0D;&#x4F1A;&#x6539;&#x53D8;&#x539F;&#x6765;&#x7684;&#x5207;&#x7247;&#xFF0C;&#x800C;&#x662F;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5BB9;&#x91CF;&#x66F4;&#x5927;&#x7684;&#x5207;&#x7247;&#xFF0C; &#x7136;&#x540E;&#x5C06;&#x628A;&#x539F;&#x6709;&#x7684;&#x5143;&#x7D20;&#x548C;&#x65B0;&#x5143;&#x7D20;&#x4E00;&#x5E76;&#x62F7;&#x8D1D;&#x5230;&#x65B0;&#x5207;&#x7247;&#x4E2D; &#x3002;&#x4E00;&#x822C;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F60; &#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x5730;&#x8BA4;&#x4E3A;&#x65B0;&#x5207;&#x7247;&#x7684;&#x5BB9;&#x91CF;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x65B0;&#x5BB9;&#x91CF;&#xFF09;&#x5C06;&#x4F1A;&#x662F; &#x539F;&#x5207;&#x7247;&#x5BB9;&#x91CF;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x539F;&#x5BB9;&#x91CF;&#xFF09;&#x7684; 2 &#x500D; &#x3002; &#x4F46;&#x662F;&#xFF0C;&#x5F53;&#x539F;&#x5207;&#x7247;&#x7684;&#x957F;&#x5EA6;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x539F;&#x957F;&#x5EA6;&#xFF09;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E; 1024 &#x65F6;&#xFF0C;Go &#x8BED;&#x8A00;&#x5C06;&#x4F1A;&#x4EE5;&#x539F;&#x5BB9;&#x91CF;&#x7684; 1.25 &#x500D;&#x4F5C;&#x4E3A;&#x65B0;&#x5BB9;&#x91CF;&#x7684;&#x57FA;&#x51C6;&#xFF08;&#x4EE5;&#x4E0B;&#x65B0;&#x5BB9;&#x91CF;&#x57FA;&#x51C6;&#xFF09;&#x3002; &#x65B0;&#x5BB9;&#x91CF;&#x57FA;&#x51C6;&#x4F1A;&#x88AB;&#x8C03;&#x6574;&#xFF08;&#x4E0D;&#x65AD;&#x5730;&#x4E0E; 1.25 &#x76F8;&#x4E58;&#xFF09;&#xFF0C;&#x76F4;&#x5230;&#x7ED3;&#x679C;&#x4E0D;&#x5C0F;&#x4E8E;&#x539F;&#x957F;&#x5EA6;&#x4E0E;&#x8981;&#x8FFD;&#x52A0;&#x7684;&#x5143;&#x7D20;&#x6570;&#x91CF;&#x4E4B;&#x548C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x65B0;&#x957F;&#x5EA6;&#xFF09;&#x3002;&#x6700;&#x7EC8;&#xFF0C;&#x65B0;&#x5BB9;&#x91CF; &#x5F80;&#x5F80;&#x4F1A;&#x3001;&#x6BD4;&#x65B0;&#x957F;&#x5EA6;&#x5927;&#x4E00;&#x4E9B;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x76F8;&#x7B49;&#x4E5F;&#x662F;&#x53EF;&#x80FD;&#x7684;&#x3002; &#x4E00;&#x4E2A;&#x5207;&#x7247;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x6C38;&#x8FDC;&#x4E0D;&#x4F1A;&#x88AB;&#x66FF;&#x6362;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#xFF1F;&#x867D;&#x7136;&#x5728;&#x6269;&#x5BB9;&#x7684;&#x65F6;&#x5019; Go &#x8BED;&#x8A00;&#x4E00;&#x5B9A;&#x4F1A;&#x751F;&#x6210;&#x65B0;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4E5F;&#x540C;&#x65F6;&#x751F;&#x6210;&#x4E86;&#x65B0;&#x7684;&#x5207;&#x7247;&#x3002;&#x5B83;&#x662F;&#x628A;&#x65B0; &#x7684;&#x5207;&#x7247;&#x4F5C;&#x4E3A;&#x4E86;&#x65B0;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x7684;&#x7A97;&#x53E3;&#xFF0C;&#x800C;&#x6CA1;&#x6709;&#x5BF9;&#x539F;&#x5207;&#x7247;&#x53CA;&#x5176;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x505A;&#x4EFB;&#x4F55;&#x6539;&#x52A8;&#x3002; &#x5728;&#x65E0;&#x9700;&#x6269;&#x5BB9;&#x65F6;&#xFF0C; append &#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x6307;&#x5411;&#x539F;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x7684;&#x65B0;&#x5207;&#x7247;&#xFF0C;&#x800C;&#x5728;&#x9700;&#x8981;&#x6269;&#x5BB9;&#x65F6;&#xFF0C; append &#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x6307;&#x5411;&#x65B0;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x7684;&#x65B0;&#x5207;&#x7247; &#x3002;"},"basic/scope.html":{"title":"作用域","path":"\\golang-learn\\basic\\scope.html","body":"作用域 声明语句的作用域是指源代码中可以有效使用这个名字的范围。 局部变量 在函数体内或代码块内声明的变量称之为局部变量，它们的作用域只在代码块内，参数和返回值变量也是局部变量。 全局变量 作用域都是全局的（在本包范围内） 在函数体外声明的变量称之为全局变量， 全局变量可以在整个包甚至外部包 （被导出后 首字母大写）使用 。 全局变量可以在任何函数中使用。 Go 的标识符作用域是基于代码块的。代码块就是包裹在一对大括号内部的声明和语句，并且是可嵌套的。代码块内部声明的名字是无法 被外部块访问的。 声明语句作用域范围的大小。 内置的类型、函数和常量，比如 int 、 len 和 true 是全局作用域 在函数外部（也就是包级语法域）声明的名字可以在同一个包的任何源文件中访问 导入的包，如 import packages/test ，是对应源文件级的作用域，只能在当前的源文件中访问 在函数内部声明的名字，只能在函数内部访问 一个程序可能包含多个同名的声明，只要它们在不同的词法域就可以。内层的词法域会屏蔽外部的声明。"},"basic/scope.html#作用域":{"title":"&#x4F5C;&#x7528;&#x57DF;","path":"\\golang-learn\\basic\\scope.html#作用域","body":"&#x58F0;&#x660E;&#x8BED;&#x53E5;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x662F;&#x6307;&#x6E90;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x540D;&#x5B57;&#x7684;&#x8303;&#x56F4;&#x3002; &#x5C40;&#x90E8;&#x53D8;&#x91CF; &#x5728;&#x51FD;&#x6570;&#x4F53;&#x5185;&#x6216;&#x4EE3;&#x7801;&#x5757;&#x5185;&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#x79F0;&#x4E4B;&#x4E3A;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x53EA;&#x5728;&#x4EE3;&#x7801;&#x5757;&#x5185;&#xFF0C;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#x53D8;&#x91CF;&#x4E5F;&#x662F;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x3002; &#x5168;&#x5C40;&#x53D8;&#x91CF; &#x4F5C;&#x7528;&#x57DF;&#x90FD;&#x662F;&#x5168;&#x5C40;&#x7684;&#xFF08;&#x5728;&#x672C;&#x5305;&#x8303;&#x56F4;&#x5185;&#xFF09; &#x5728;&#x51FD;&#x6570;&#x4F53;&#x5916;&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF;&#x79F0;&#x4E4B;&#x4E3A;&#x5168;&#x5C40;&#x53D8;&#x91CF;&#xFF0C; &#x5168;&#x5C40;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x5728;&#x6574;&#x4E2A;&#x5305;&#x751A;&#x81F3;&#x5916;&#x90E8;&#x5305; &#xFF08;&#x88AB;&#x5BFC;&#x51FA;&#x540E; &#x9996;&#x5B57;&#x6BCD;&#x5927;&#x5199;&#xFF09;&#x4F7F;&#x7528; &#x3002; &#x5168;&#x5C40;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x4F55;&#x51FD;&#x6570;&#x4E2D;&#x4F7F;&#x7528;&#x3002; Go &#x7684;&#x6807;&#x8BC6;&#x7B26;&#x4F5C;&#x7528;&#x57DF;&#x662F;&#x57FA;&#x4E8E;&#x4EE3;&#x7801;&#x5757;&#x7684;&#x3002;&#x4EE3;&#x7801;&#x5757;&#x5C31;&#x662F;&#x5305;&#x88F9;&#x5728;&#x4E00;&#x5BF9;&#x5927;&#x62EC;&#x53F7;&#x5185;&#x90E8;&#x7684;&#x58F0;&#x660E;&#x548C;&#x8BED;&#x53E5;&#xFF0C;&#x5E76;&#x4E14;&#x662F;&#x53EF;&#x5D4C;&#x5957;&#x7684;&#x3002;&#x4EE3;&#x7801;&#x5757;&#x5185;&#x90E8;&#x58F0;&#x660E;&#x7684;&#x540D;&#x5B57;&#x662F;&#x65E0;&#x6CD5; &#x88AB;&#x5916;&#x90E8;&#x5757;&#x8BBF;&#x95EE;&#x7684;&#x3002; &#x58F0;&#x660E;&#x8BED;&#x53E5;&#x4F5C;&#x7528;&#x57DF;&#x8303;&#x56F4;&#x7684;&#x5927;&#x5C0F;&#x3002; &#x5185;&#x7F6E;&#x7684;&#x7C7B;&#x578B;&#x3001;&#x51FD;&#x6570;&#x548C;&#x5E38;&#x91CF;&#xFF0C;&#x6BD4;&#x5982; int &#x3001; len &#x548C; true &#x662F;&#x5168;&#x5C40;&#x4F5C;&#x7528;&#x57DF; &#x5728;&#x51FD;&#x6570;&#x5916;&#x90E8;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x5305;&#x7EA7;&#x8BED;&#x6CD5;&#x57DF;&#xFF09;&#x58F0;&#x660E;&#x7684;&#x540D;&#x5B57;&#x53EF;&#x4EE5;&#x5728;&#x540C;&#x4E00;&#x4E2A;&#x5305;&#x7684;&#x4EFB;&#x4F55;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x8BBF;&#x95EE; &#x5BFC;&#x5165;&#x7684;&#x5305;&#xFF0C;&#x5982; import packages/test &#xFF0C;&#x662F;&#x5BF9;&#x5E94;&#x6E90;&#x6587;&#x4EF6;&#x7EA7;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#xFF0C;&#x53EA;&#x80FD;&#x5728;&#x5F53;&#x524D;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x8BBF;&#x95EE; &#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x58F0;&#x660E;&#x7684;&#x540D;&#x5B57;&#xFF0C;&#x53EA;&#x80FD;&#x5728;&#x51FD;&#x6570;&#x5185;&#x90E8;&#x8BBF;&#x95EE; &#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x53EF;&#x80FD;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x540C;&#x540D;&#x7684;&#x58F0;&#x660E;&#xFF0C;&#x53EA;&#x8981;&#x5B83;&#x4EEC;&#x5728;&#x4E0D;&#x540C;&#x7684;&#x8BCD;&#x6CD5;&#x57DF;&#x5C31;&#x53EF;&#x4EE5;&#x3002;&#x5185;&#x5C42;&#x7684;&#x8BCD;&#x6CD5;&#x57DF;&#x4F1A;&#x5C4F;&#x853D;&#x5916;&#x90E8;&#x7684;&#x58F0;&#x660E;&#x3002;"},"basic/reflect.html":{"title":"反射","path":"\\golang-learn\\basic\\reflect.html","body":"反射 反射机制，能够在运行时更新变量和检查它们的值、调用它们的方法和它们支持的内在操作，而不需要在编译时就知道 这些变量的具体类型。弥补了静态语言在动态行为上的一些不足。 reflect.TypeOf reflect.TypeOf 获取类型信息。 reflect.TypeOf 接受任意的 interface{} 类型, 并以 reflect.Type 形式返回其动态类型： 1 2 3 4 5 6 7 8 9 10 t := reflect.TypeOf( 3 ) // a reflect.Type fmt.Println(t.String()) // \"int\" fmt.Println(t) // \"int\" type X int func main ()  \t var a X = 20 \tt := reflect.TypeOf(a) \tfmt.Println(t.Name(), t.Kind()) // X int  上面的代码， 注意区分 Type 和 Kind，前者表示真实类型（静态类型），后者表示底层类型 。所以在判断类型时， 要选择正确的方式。 1 2 3 4 5 6 7 8 9 type X int type Y int func main ()  \t var a, b X = 10 , 20 \t var c Y = 30 \tta, tb, tc := reflect.TypeOf(a), reflect.TypeOf(b), reflect.TypeOf(c) \tfmt.Println(ta == tb, ta == tc) // true false \tfmt.Println(ta.Kind() == tc.Kind()) // true  reflect.ValueOf reflect.ValueOf 专注于对象实例数据读写。 reflect.ValueOf 接受任意的 interface{} 类型, 并以 reflect.Value 形式返回其动态值： 1 2 3 4 5 6 7 8 9 10 11 12 13 v := reflect.ValueOf( 3 ) // a reflect.Value fmt.Println(v) // \"3\" fmt.Printf( \"%v\\n\" , v) // \"3\" fmt.Println(v.String()) // NOTE: \"int Value\" x := struct  Name string expected val := reflect.ValueOf(x) field := val.Field( 0 ) fmt.Println(val) // Chris fmt.Println(field) // Chris fmt.Println(field.String()) // Chris 在 Go 中不能对切片使用等号运算符。你可以写一个函数迭代每个元素来检查它们的值。但是一种 比较简单的办法是使用 reflect.DeepEqual ，它在判断两个变量是否相等时十分有用。 1 2 3 4 5 6 7 8 9 func TestSumAll (t *testing.T)  got := SumAll([] int  1 , 2 , [] int  0 , 9 ) want := [] int  3 , 9  if !reflect.DeepEqual(got, want)  t.Errorf( \"got %v want %v\" , got, want)   注意 ， reflect.DeepEqual 不是「类型安全」的，所以有时候会发生比较怪异的行为。比如： 1 2 3 4 5 6 7 8 9 func TestSumAll (t *testing.T)  got := SumAll([] int  1 , 2 , [] int  0 , 9 ) want := \"bob\" if !reflect.DeepEqual(got, want)  t.Errorf( \"got %v want %v\" , got, want)   尝试比较 slice 和 string 。这显然是不合理的，但是却通过了测试。所以使用 reflect.DeepEqual 比较简洁但是在使用时需多加小心。"},"basic/reflect.html#反射":{"title":"&#x53CD;&#x5C04;","path":"\\golang-learn\\basic\\reflect.html#反射","body":"&#x53CD;&#x5C04;&#x673A;&#x5236;&#xFF0C;&#x80FD;&#x591F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x66F4;&#x65B0;&#x53D8;&#x91CF;&#x548C;&#x68C0;&#x67E5;&#x5B83;&#x4EEC;&#x7684;&#x503C;&#x3001;&#x8C03;&#x7528;&#x5B83;&#x4EEC;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x5B83;&#x4EEC;&#x652F;&#x6301;&#x7684;&#x5185;&#x5728;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x4E0D;&#x9700;&#x8981;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x5C31;&#x77E5;&#x9053; &#x8FD9;&#x4E9B;&#x53D8;&#x91CF;&#x7684;&#x5177;&#x4F53;&#x7C7B;&#x578B;&#x3002;&#x5F25;&#x8865;&#x4E86;&#x9759;&#x6001;&#x8BED;&#x8A00;&#x5728;&#x52A8;&#x6001;&#x884C;&#x4E3A;&#x4E0A;&#x7684;&#x4E00;&#x4E9B;&#x4E0D;&#x8DB3;&#x3002;"},"basic/reflect.html#reflect-TypeOf":{"title":"reflect.TypeOf","path":"\\golang-learn\\basic\\reflect.html#reflect-TypeOf","body":"reflect.TypeOf &#x83B7;&#x53D6;&#x7C7B;&#x578B;&#x4FE1;&#x606F;&#x3002; reflect.TypeOf &#x63A5;&#x53D7;&#x4EFB;&#x610F;&#x7684; interface{} &#x7C7B;&#x578B;, &#x5E76;&#x4EE5; reflect.Type &#x5F62;&#x5F0F;&#x8FD4;&#x56DE;&#x5176;&#x52A8;&#x6001;&#x7C7B;&#x578B;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 t := reflect.TypeOf( 3 ) // a reflect.Type fmt.Println(t.String()) // int fmt.Println(t) // int type X int func main () { \t var a X = 20 \tt := reflect.TypeOf(a) \tfmt.Println(t.Name(), t.Kind()) // X int } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C; &#x6CE8;&#x610F;&#x533A;&#x5206; Type &#x548C; Kind&#xFF0C;&#x524D;&#x8005;&#x8868;&#x793A;&#x771F;&#x5B9E;&#x7C7B;&#x578B;&#xFF08;&#x9759;&#x6001;&#x7C7B;&#x578B;&#xFF09;&#xFF0C;&#x540E;&#x8005;&#x8868;&#x793A;&#x5E95;&#x5C42;&#x7C7B;&#x578B; &#x3002;&#x6240;&#x4EE5;&#x5728;&#x5224;&#x65AD;&#x7C7B;&#x578B;&#x65F6;&#xFF0C; &#x8981;&#x9009;&#x62E9;&#x6B63;&#x786E;&#x7684;&#x65B9;&#x5F0F;&#x3002; 1 2 3 4 5 6 7 8 9 type X int type Y int func main () { \t var a, b X = 10 , 20 \t var c Y = 30 \tta, tb, tc := reflect.TypeOf(a), reflect.TypeOf(b), reflect.TypeOf(c) \tfmt.Println(ta == tb, ta == tc) // true false \tfmt.Println(ta.Kind() == tc.Kind()) // true }"},"basic/reflect.html#reflect-ValueOf":{"title":"reflect.ValueOf","path":"\\golang-learn\\basic\\reflect.html#reflect-ValueOf","body":"reflect.ValueOf &#x4E13;&#x6CE8;&#x4E8E;&#x5BF9;&#x8C61;&#x5B9E;&#x4F8B;&#x6570;&#x636E;&#x8BFB;&#x5199;&#x3002; reflect.ValueOf &#x63A5;&#x53D7;&#x4EFB;&#x610F;&#x7684; interface{} &#x7C7B;&#x578B;, &#x5E76;&#x4EE5; reflect.Value &#x5F62;&#x5F0F;&#x8FD4;&#x56DE;&#x5176;&#x52A8;&#x6001;&#x503C;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 v := reflect.ValueOf( 3 ) // a reflect.Value fmt.Println(v) // 3 fmt.Printf( %v\\n , v) // 3 fmt.Println(v.String()) // NOTE: int Value x := struct { Name string }{expected} val := reflect.ValueOf(x) field := val.Field( 0 ) fmt.Println(val) // {Chris} fmt.Println(field) // Chris fmt.Println(field.String()) // Chris &#x5728; Go &#x4E2D;&#x4E0D;&#x80FD;&#x5BF9;&#x5207;&#x7247;&#x4F7F;&#x7528;&#x7B49;&#x53F7;&#x8FD0;&#x7B97;&#x7B26;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x5199;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x8FED;&#x4EE3;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#x6765;&#x68C0;&#x67E5;&#x5B83;&#x4EEC;&#x7684;&#x503C;&#x3002;&#x4F46;&#x662F;&#x4E00;&#x79CD; &#x6BD4;&#x8F83;&#x7B80;&#x5355;&#x7684;&#x529E;&#x6CD5;&#x662F;&#x4F7F;&#x7528; reflect.DeepEqual &#xFF0C;&#x5B83;&#x5728;&#x5224;&#x65AD;&#x4E24;&#x4E2A;&#x53D8;&#x91CF;&#x662F;&#x5426;&#x76F8;&#x7B49;&#x65F6;&#x5341;&#x5206;&#x6709;&#x7528;&#x3002; 1 2 3 4 5 6 7 8 9 func TestSumAll (t *testing.T) { got := SumAll([] int { 1 , 2 }, [] int { 0 , 9 }) want := [] int { 3 , 9 } if !reflect.DeepEqual(got, want) { t.Errorf( got %v want %v , got, want) } } &#x6CE8;&#x610F; &#xFF0C; reflect.DeepEqual &#x4E0D;&#x662F;&#x300C;&#x7C7B;&#x578B;&#x5B89;&#x5168;&#x300D;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6709;&#x65F6;&#x5019;&#x4F1A;&#x53D1;&#x751F;&#x6BD4;&#x8F83;&#x602A;&#x5F02;&#x7684;&#x884C;&#x4E3A;&#x3002;&#x6BD4;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 8 9 func TestSumAll (t *testing.T) { got := SumAll([] int { 1 , 2 }, [] int { 0 , 9 }) want := bob if !reflect.DeepEqual(got, want) { t.Errorf( got %v want %v , got, want) } } &#x5C1D;&#x8BD5;&#x6BD4;&#x8F83; slice &#x548C; string &#x3002;&#x8FD9;&#x663E;&#x7136;&#x662F;&#x4E0D;&#x5408;&#x7406;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5374;&#x901A;&#x8FC7;&#x4E86;&#x6D4B;&#x8BD5;&#x3002;&#x6240;&#x4EE5;&#x4F7F;&#x7528; reflect.DeepEqual &#x6BD4;&#x8F83;&#x7B80;&#x6D01;&#x4F46;&#x662F;&#x5728;&#x4F7F;&#x7528;&#x65F6;&#x9700;&#x591A;&#x52A0;&#x5C0F;&#x5FC3;&#x3002;"},"basic/env_config.html":{"title":"Go 环境配置","path":"\\golang-learn\\basic\\env_config.html","body":"Go 环境配置 安装 Windows 下安装，官网 下载安装包 ，直接安装。 默认情况下 .msi 文件会安装在 c:\\Go 目录下。安装完成后默认会将 c:\\Go\\bin 目录添加到 PATH 环境变量中。 并添加环境变量 GOROOT ，值为 Go 安装根目录 C:\\Go\\ 。重启命令窗口生效。 打开 CMD 输入 go 命令，验证是否安装成功。否则检查环境变量 Path 和 GOROOT 。 工作区 GOROOT 环境变量 GOROOT 用来指定 Go 的安装目录，Go 的标准库也在这个位置。目录结构与 GOPATH 类似。 GOPATH 我们安装好 Go 之后， 必须配置一个环境变量 GOPATH ，这个 GOPATH 路径是用来指定当前工作目录的。 不能和 Go 的安装目录（ GOROOT ）一样 。 工作区的目录结构： 1 2 3 4 GOPATH/ src/ # 源码目录 bin/ # 存放编译后的可执行程序 pkg/ # 存放编译后的包的目标文件 GOPATH 允许多个目录，当有多个目录时，请注意分隔符，多个目录的时候 Windows 是分号 ; ，Linux 系统是冒号 : ， 当有多个 GOPATH 时，默认会将 go get 的内容放在第一个目录下。 Go Module golang 1.11 已经支持 Go Module。这是官方提倡的新的包管理，乃至项目管理机制，可以不再需要 GOPATH 的存在。 Module 机制 Go Module 不同于以往基于 GOPATH 和 Vendor 的项目构建，其主要是通过 $GOPATH/pkg/mod 下的缓存包来对项目进行构建。 Go Module 可以通过 GO111MODULE 来控制是否启用， GO111MODULE 有三种类型: on 所有的构建，都使用 Module 机制 off 所有的构建，都不使用 Module 机制，而是使用 GOPATH 和 Vendor auto 在 GOPATH 下的项目，不使用 Module 机制，不在 GOPATH 下的项目使用 和 dep 的区别 dep 是解析所有的包引用，然后在 $GOPATH/pkg/dep 下进行缓存，再在项目下生成 vendor，然后基于 vendor 来构建项目， 无法脱离 GOPATH 。 mod 是解析所有的包引用，然后在 $GOPATH/pkg/mod 下进行缓存，直接基于缓存包来构建项目，所以可以脱离 GOPATH 准备环境 golang 1.11 的环境需要开启 GO11MODULE ，并且 确保项目目录不在 GOPATH 中 。 1 export GO111MODULE=on golang 1.12 只需要确保实验目录不在 GOPATH 中。 配置代理 export GOPROXY=https://goproxy.io 。（如果拉取包失败，会报 cannot find module for path xxx 的错误） 迁移到 Go Module 1 2 3 4 5 6 7 8 9 10 11 12 # clone 项目, 不要在 `GOPATH` 中, 比如之前的项目的结构是 `GOPATH/src/cdf-mannager` git clone https://github.com/xxx/cdf-mannager # 删除 vender cd cdf-mannager rm -rf vender # init go mod init cdf-mannager # 下载依赖 也可以不执行这一步， go run 或 go build 会自动下载 go mod download Go 会把 Gopkg.lock 或者 glide.lock 中的依赖项写入到 go.mod 文件中。 go.mod 文件的内容像下面这样： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 module cdf-manager require ( github.com/fsnotify/fsnotify v1.4.7 github.com/gin-contrib/sse v0.0.0-20170109093832-22d885f9ecc7 github.com/gin-gonic/gin v0.0.0-20180814085852-b869fe1415e4 github.com/golang/protobuf v0.0.0-20170601230230-5a0f697c9ed9 github.com/hashicorp/hcl v1.0.0 github.com/inconshreveable/mousetrap v0.0.0-20141017200713-76626ae9c91c github.com/json-iterator/go v0.0.0-20170829155851-36b14963da70 github.com/lexkong/log v0.0.0-20180607165131-972f9cd951fc github.com/magiconair/properties v1.8.0 github.com/mattn/go-isatty v0.0.0-20170307163044-57fdcb988a5c github.com/mitchellh/mapstructure v1.1.2 github.com/pelletier/go-toml v1.2.0 github.com/satori/go.uuid v0.0.0-20180103152354-f58768cc1a7a github.com/spf13/afero v1.1.2 github.com/spf13/cast v1.3.0 github.com/spf13/cobra v0.0.0-20180427134550-ef82de70bb3f github.com/spf13/jwalterweatherman v1.0.0 github.com/spf13/pflag v1.0.3 github.com/spf13/viper v0.0.0-20181207100336-6d33b5a963d9 github.com/ugorji/go v1.1.2-0.20180831062425-e253f1f20942 github.com/willf/pad v0.0.0-20160331131008-b3d780601022 golang.org/x/sys v0.0.0-20190116161447-11f53e031339 golang.org/x/text v0.3.0 gopkg.in/go-playground/validator.v8 v8.0.0-20160718134125-5f57d2222ad7 gopkg.in/yaml.v2 v2.2.2 ) 开发工具 常用 IDE： LiteIDE Sublime GoLand VS Code"},"basic/env_config.html#Go-环境配置":{"title":"Go &#x73AF;&#x5883;&#x914D;&#x7F6E;","path":"\\golang-learn\\basic\\env_config.html#Go-环境配置","body":""},"basic/env_config.html#安装":{"title":"&#x5B89;&#x88C5;","path":"\\golang-learn\\basic\\env_config.html#安装","body":"Windows &#x4E0B;&#x5B89;&#x88C5;&#xFF0C;&#x5B98;&#x7F51; &#x4E0B;&#x8F7D;&#x5B89;&#x88C5;&#x5305; &#xFF0C;&#x76F4;&#x63A5;&#x5B89;&#x88C5;&#x3002; &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B; .msi &#x6587;&#x4EF6;&#x4F1A;&#x5B89;&#x88C5;&#x5728; c:\\Go &#x76EE;&#x5F55;&#x4E0B;&#x3002;&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#x9ED8;&#x8BA4;&#x4F1A;&#x5C06; c:\\Go\\bin &#x76EE;&#x5F55;&#x6DFB;&#x52A0;&#x5230; PATH &#x73AF;&#x5883;&#x53D8;&#x91CF;&#x4E2D;&#x3002; &#x5E76;&#x6DFB;&#x52A0;&#x73AF;&#x5883;&#x53D8;&#x91CF; GOROOT &#xFF0C;&#x503C;&#x4E3A; Go &#x5B89;&#x88C5;&#x6839;&#x76EE;&#x5F55; C:\\Go\\ &#x3002;&#x91CD;&#x542F;&#x547D;&#x4EE4;&#x7A97;&#x53E3;&#x751F;&#x6548;&#x3002; &#x6253;&#x5F00; CMD &#x8F93;&#x5165; go &#x547D;&#x4EE4;&#xFF0C;&#x9A8C;&#x8BC1;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F;&#x3002;&#x5426;&#x5219;&#x68C0;&#x67E5;&#x73AF;&#x5883;&#x53D8;&#x91CF; Path &#x548C; GOROOT &#x3002;"},"basic/env_config.html#工作区":{"title":"&#x5DE5;&#x4F5C;&#x533A;","path":"\\golang-learn\\basic\\env_config.html#工作区","body":"GOROOT &#x73AF;&#x5883;&#x53D8;&#x91CF; GOROOT &#x7528;&#x6765;&#x6307;&#x5B9A; Go &#x7684;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF0C;Go &#x7684;&#x6807;&#x51C6;&#x5E93;&#x4E5F;&#x5728;&#x8FD9;&#x4E2A;&#x4F4D;&#x7F6E;&#x3002;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#x4E0E; GOPATH &#x7C7B;&#x4F3C;&#x3002; GOPATH &#x6211;&#x4EEC;&#x5B89;&#x88C5;&#x597D; Go &#x4E4B;&#x540E;&#xFF0C; &#x5FC5;&#x987B;&#x914D;&#x7F6E;&#x4E00;&#x4E2A;&#x73AF;&#x5883;&#x53D8;&#x91CF; GOPATH &#xFF0C;&#x8FD9;&#x4E2A; GOPATH &#x8DEF;&#x5F84;&#x662F;&#x7528;&#x6765;&#x6307;&#x5B9A;&#x5F53;&#x524D;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#x7684;&#x3002; &#x4E0D;&#x80FD;&#x548C; Go &#x7684;&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#xFF08; GOROOT &#xFF09;&#x4E00;&#x6837; &#x3002; &#x5DE5;&#x4F5C;&#x533A;&#x7684;&#x76EE;&#x5F55;&#x7ED3;&#x6784;&#xFF1A; 1 2 3 4 GOPATH/ src/ # &#x6E90;&#x7801;&#x76EE;&#x5F55; bin/ # &#x5B58;&#x653E;&#x7F16;&#x8BD1;&#x540E;&#x7684;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F; pkg/ # &#x5B58;&#x653E;&#x7F16;&#x8BD1;&#x540E;&#x7684;&#x5305;&#x7684;&#x76EE;&#x6807;&#x6587;&#x4EF6; GOPATH &#x5141;&#x8BB8;&#x591A;&#x4E2A;&#x76EE;&#x5F55;&#xFF0C;&#x5F53;&#x6709;&#x591A;&#x4E2A;&#x76EE;&#x5F55;&#x65F6;&#xFF0C;&#x8BF7;&#x6CE8;&#x610F;&#x5206;&#x9694;&#x7B26;&#xFF0C;&#x591A;&#x4E2A;&#x76EE;&#x5F55;&#x7684;&#x65F6;&#x5019; Windows &#x662F;&#x5206;&#x53F7; ; &#xFF0C;Linux &#x7CFB;&#x7EDF;&#x662F;&#x5192;&#x53F7; : &#xFF0C; &#x5F53;&#x6709;&#x591A;&#x4E2A; GOPATH &#x65F6;&#xFF0C;&#x9ED8;&#x8BA4;&#x4F1A;&#x5C06; go get &#x7684;&#x5185;&#x5BB9;&#x653E;&#x5728;&#x7B2C;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x4E0B;&#x3002;"},"basic/env_config.html#Go-Module":{"title":"Go Module","path":"\\golang-learn\\basic\\env_config.html#Go-Module","body":"golang 1.11 &#x5DF2;&#x7ECF;&#x652F;&#x6301; Go Module&#x3002;&#x8FD9;&#x662F;&#x5B98;&#x65B9;&#x63D0;&#x5021;&#x7684;&#x65B0;&#x7684;&#x5305;&#x7BA1;&#x7406;&#xFF0C;&#x4E43;&#x81F3;&#x9879;&#x76EE;&#x7BA1;&#x7406;&#x673A;&#x5236;&#xFF0C;&#x53EF;&#x4EE5;&#x4E0D;&#x518D;&#x9700;&#x8981; GOPATH &#x7684;&#x5B58;&#x5728;&#x3002; Module &#x673A;&#x5236; Go Module &#x4E0D;&#x540C;&#x4E8E;&#x4EE5;&#x5F80;&#x57FA;&#x4E8E; GOPATH &#x548C; Vendor &#x7684;&#x9879;&#x76EE;&#x6784;&#x5EFA;&#xFF0C;&#x5176;&#x4E3B;&#x8981;&#x662F;&#x901A;&#x8FC7; $GOPATH/pkg/mod &#x4E0B;&#x7684;&#x7F13;&#x5B58;&#x5305;&#x6765;&#x5BF9;&#x9879;&#x76EE;&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#x3002; Go Module &#x53EF;&#x4EE5;&#x901A;&#x8FC7; GO111MODULE &#x6765;&#x63A7;&#x5236;&#x662F;&#x5426;&#x542F;&#x7528;&#xFF0C; GO111MODULE &#x6709;&#x4E09;&#x79CD;&#x7C7B;&#x578B;: on &#x6240;&#x6709;&#x7684;&#x6784;&#x5EFA;&#xFF0C;&#x90FD;&#x4F7F;&#x7528; Module &#x673A;&#x5236; off &#x6240;&#x6709;&#x7684;&#x6784;&#x5EFA;&#xFF0C;&#x90FD;&#x4E0D;&#x4F7F;&#x7528; Module &#x673A;&#x5236;&#xFF0C;&#x800C;&#x662F;&#x4F7F;&#x7528; GOPATH &#x548C; Vendor auto &#x5728; GOPATH &#x4E0B;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x4E0D;&#x4F7F;&#x7528; Module &#x673A;&#x5236;&#xFF0C;&#x4E0D;&#x5728; GOPATH &#x4E0B;&#x7684;&#x9879;&#x76EE;&#x4F7F;&#x7528; &#x548C; dep &#x7684;&#x533A;&#x522B; dep &#x662F;&#x89E3;&#x6790;&#x6240;&#x6709;&#x7684;&#x5305;&#x5F15;&#x7528;&#xFF0C;&#x7136;&#x540E;&#x5728; $GOPATH/pkg/dep &#x4E0B;&#x8FDB;&#x884C;&#x7F13;&#x5B58;&#xFF0C;&#x518D;&#x5728;&#x9879;&#x76EE;&#x4E0B;&#x751F;&#x6210; vendor&#xFF0C;&#x7136;&#x540E;&#x57FA;&#x4E8E; vendor &#x6765;&#x6784;&#x5EFA;&#x9879;&#x76EE;&#xFF0C; &#x65E0;&#x6CD5;&#x8131;&#x79BB; GOPATH &#x3002; mod &#x662F;&#x89E3;&#x6790;&#x6240;&#x6709;&#x7684;&#x5305;&#x5F15;&#x7528;&#xFF0C;&#x7136;&#x540E;&#x5728; $GOPATH/pkg/mod &#x4E0B;&#x8FDB;&#x884C;&#x7F13;&#x5B58;&#xFF0C;&#x76F4;&#x63A5;&#x57FA;&#x4E8E;&#x7F13;&#x5B58;&#x5305;&#x6765;&#x6784;&#x5EFA;&#x9879;&#x76EE;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x8131;&#x79BB; GOPATH &#x51C6;&#x5907;&#x73AF;&#x5883; golang 1.11 &#x7684;&#x73AF;&#x5883;&#x9700;&#x8981;&#x5F00;&#x542F; GO11MODULE &#xFF0C;&#x5E76;&#x4E14; &#x786E;&#x4FDD;&#x9879;&#x76EE;&#x76EE;&#x5F55;&#x4E0D;&#x5728; GOPATH &#x4E2D; &#x3002; 1 export GO111MODULE=on golang 1.12 &#x53EA;&#x9700;&#x8981;&#x786E;&#x4FDD;&#x5B9E;&#x9A8C;&#x76EE;&#x5F55;&#x4E0D;&#x5728; GOPATH &#x4E2D;&#x3002; &#x914D;&#x7F6E;&#x4EE3;&#x7406; export GOPROXY=https://goproxy.io &#x3002;&#xFF08;&#x5982;&#x679C;&#x62C9;&#x53D6;&#x5305;&#x5931;&#x8D25;&#xFF0C;&#x4F1A;&#x62A5; cannot find module for path xxx &#x7684;&#x9519;&#x8BEF;&#xFF09; &#x8FC1;&#x79FB;&#x5230; Go Module 1 2 3 4 5 6 7 8 9 10 11 12 # clone &#x9879;&#x76EE;, &#x4E0D;&#x8981;&#x5728; `GOPATH` &#x4E2D;, &#x6BD4;&#x5982;&#x4E4B;&#x524D;&#x7684;&#x9879;&#x76EE;&#x7684;&#x7ED3;&#x6784;&#x662F; `GOPATH/src/cdf-mannager` git clone https://github.com/xxx/cdf-mannager # &#x5220;&#x9664; vender cd cdf-mannager rm -rf vender # init go mod init cdf-mannager # &#x4E0B;&#x8F7D;&#x4F9D;&#x8D56; &#x4E5F;&#x53EF;&#x4EE5;&#x4E0D;&#x6267;&#x884C;&#x8FD9;&#x4E00;&#x6B65;&#xFF0C; go run &#x6216; go build &#x4F1A;&#x81EA;&#x52A8;&#x4E0B;&#x8F7D; go mod download Go &#x4F1A;&#x628A; Gopkg.lock &#x6216;&#x8005; glide.lock &#x4E2D;&#x7684;&#x4F9D;&#x8D56;&#x9879;&#x5199;&#x5165;&#x5230; go.mod &#x6587;&#x4EF6;&#x4E2D;&#x3002; go.mod &#x6587;&#x4EF6;&#x7684;&#x5185;&#x5BB9;&#x50CF;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 module cdf-manager require ( github.com/fsnotify/fsnotify v1.4.7 github.com/gin-contrib/sse v0.0.0-20170109093832-22d885f9ecc7 github.com/gin-gonic/gin v0.0.0-20180814085852-b869fe1415e4 github.com/golang/protobuf v0.0.0-20170601230230-5a0f697c9ed9 github.com/hashicorp/hcl v1.0.0 github.com/inconshreveable/mousetrap v0.0.0-20141017200713-76626ae9c91c github.com/json-iterator/go v0.0.0-20170829155851-36b14963da70 github.com/lexkong/log v0.0.0-20180607165131-972f9cd951fc github.com/magiconair/properties v1.8.0 github.com/mattn/go-isatty v0.0.0-20170307163044-57fdcb988a5c github.com/mitchellh/mapstructure v1.1.2 github.com/pelletier/go-toml v1.2.0 github.com/satori/go.uuid v0.0.0-20180103152354-f58768cc1a7a github.com/spf13/afero v1.1.2 github.com/spf13/cast v1.3.0 github.com/spf13/cobra v0.0.0-20180427134550-ef82de70bb3f github.com/spf13/jwalterweatherman v1.0.0 github.com/spf13/pflag v1.0.3 github.com/spf13/viper v0.0.0-20181207100336-6d33b5a963d9 github.com/ugorji/go v1.1.2-0.20180831062425-e253f1f20942 github.com/willf/pad v0.0.0-20160331131008-b3d780601022 golang.org/x/sys v0.0.0-20190116161447-11f53e031339 golang.org/x/text v0.3.0 gopkg.in/go-playground/validator.v8 v8.0.0-20160718134125-5f57d2222ad7 gopkg.in/yaml.v2 v2.2.2 )"},"basic/env_config.html#开发工具":{"title":"&#x5F00;&#x53D1;&#x5DE5;&#x5177;","path":"\\golang-learn\\basic\\env_config.html#开发工具","body":"&#x5E38;&#x7528; IDE&#xFF1A; LiteIDE Sublime GoLand VS Code"},"packages/container.html":{"title":"","path":"\\golang-learn\\packages\\container.html","body":"container 包 Go 语言的链表实现在标准库的 container/list 代码包中。 这个代码包中有两个公开的程序实体—— List 和 Element ， List 实现了一个双向链表（以下简称链表）， 而 Element 则代表了链表中元素的结构。 List的四种方法: MoveBefore 方法和 MoveAfter 方法，它们分别用于把给定的元素移动到另一个元素的前面和后面。 MoveToFront 方法和 MoveToBack 方法，分别用于把给定的元素移动到链表的最前端和最后端。 1 2 3 4 5 6 7 8 9 // moves element \"e\" to its new position before \"mark\". func (l *List) MoveBefore (e, mark *Element) // moves element \" e \" to its new position after \" mark \". func (l *List) MoveAfter (e, mark *Element) // moves element \" e \" to the front of list \" l \". func (l *List) MoveToFront (e *Element) // moves element \" e \" to the back of list \" l \". func (l *List) MoveToBack (e *Element) “给定的元素”都是 *Element 类型。 如果我们自己生成这样的值，然后把它作为“给定的元素”传给链表的方法，那么会发生什么？链表会接受它吗？ 不会接受，这些方法将不会对链表做出任何改动。因为我们自己生成的 Element 值并不在链表中，所以也就谈不上“在链表中移动元素”。 InsertBefore 和 InsertAfter 方法分别用于在指定的元素之前和之后插入新元素 PushFront 和 PushBack 方法则分别用于在链表的最前端和最后端插入新元素。"},"packages/container.html#container-包":{"title":"container &#x5305;","path":"\\golang-learn\\packages\\container.html#container-包","body":"Go &#x8BED;&#x8A00;&#x7684;&#x94FE;&#x8868;&#x5B9E;&#x73B0;&#x5728;&#x6807;&#x51C6;&#x5E93;&#x7684; container/list &#x4EE3;&#x7801;&#x5305;&#x4E2D;&#x3002; &#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x5305;&#x4E2D;&#x6709;&#x4E24;&#x4E2A;&#x516C;&#x5F00;&#x7684;&#x7A0B;&#x5E8F;&#x5B9E;&#x4F53;&#x2014;&#x2014; List &#x548C; Element &#xFF0C; List &#x5B9E;&#x73B0;&#x4E86;&#x4E00;&#x4E2A;&#x53CC;&#x5411;&#x94FE;&#x8868;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x94FE;&#x8868;&#xFF09;&#xFF0C; &#x800C; Element &#x5219;&#x4EE3;&#x8868;&#x4E86;&#x94FE;&#x8868;&#x4E2D;&#x5143;&#x7D20;&#x7684;&#x7ED3;&#x6784;&#x3002; List&#x7684;&#x56DB;&#x79CD;&#x65B9;&#x6CD5;: MoveBefore &#x65B9;&#x6CD5;&#x548C; MoveAfter &#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x4EEC;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x628A;&#x7ED9;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x79FB;&#x52A8;&#x5230;&#x53E6;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x524D;&#x9762;&#x548C;&#x540E;&#x9762;&#x3002; MoveToFront &#x65B9;&#x6CD5;&#x548C; MoveToBack &#x65B9;&#x6CD5;&#xFF0C;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x628A;&#x7ED9;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x79FB;&#x52A8;&#x5230;&#x94FE;&#x8868;&#x7684;&#x6700;&#x524D;&#x7AEF;&#x548C;&#x6700;&#x540E;&#x7AEF;&#x3002; 1 2 3 4 5 6 7 8 9 // moves element e to its new position before mark. func (l *List) MoveBefore (e, mark *Element) // moves element  e  to its new position after  mark . func (l *List) MoveAfter (e, mark *Element) // moves element  e  to the front of list  l . func (l *List) MoveToFront (e *Element) // moves element  e  to the back of list  l . func (l *List) MoveToBack (e *Element) &#x201C;&#x7ED9;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x201D;&#x90FD;&#x662F; *Element &#x7C7B;&#x578B;&#x3002; &#x5982;&#x679C;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x751F;&#x6210;&#x8FD9;&#x6837;&#x7684;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x5B83;&#x4F5C;&#x4E3A;&#x201C;&#x7ED9;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x201D;&#x4F20;&#x7ED9;&#x94FE;&#x8868;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x4F1A;&#x53D1;&#x751F;&#x4EC0;&#x4E48;&#xFF1F;&#x94FE;&#x8868;&#x4F1A;&#x63A5;&#x53D7;&#x5B83;&#x5417;&#xFF1F; &#x4E0D;&#x4F1A;&#x63A5;&#x53D7;&#xFF0C;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x5C06;&#x4E0D;&#x4F1A;&#x5BF9;&#x94FE;&#x8868;&#x505A;&#x51FA;&#x4EFB;&#x4F55;&#x6539;&#x52A8;&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x751F;&#x6210;&#x7684; Element &#x503C;&#x5E76;&#x4E0D;&#x5728;&#x94FE;&#x8868;&#x4E2D;&#xFF0C;&#x6240;&#x4EE5;&#x4E5F;&#x5C31;&#x8C08;&#x4E0D;&#x4E0A;&#x201C;&#x5728;&#x94FE;&#x8868;&#x4E2D;&#x79FB;&#x52A8;&#x5143;&#x7D20;&#x201D;&#x3002; InsertBefore &#x548C; InsertAfter &#x65B9;&#x6CD5;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5728;&#x6307;&#x5B9A;&#x7684;&#x5143;&#x7D20;&#x4E4B;&#x524D;&#x548C;&#x4E4B;&#x540E;&#x63D2;&#x5165;&#x65B0;&#x5143;&#x7D20; PushFront &#x548C; PushBack &#x65B9;&#x6CD5;&#x5219;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5728;&#x94FE;&#x8868;&#x7684;&#x6700;&#x524D;&#x7AEF;&#x548C;&#x6700;&#x540E;&#x7AEF;&#x63D2;&#x5165;&#x65B0;&#x5143;&#x7D20;&#x3002;"},"basic/function.html":{"title":"函数","path":"\\golang-learn\\basic\\function.html","body":"函数 声明函数 func 关键字声明函数： 1 2 3 func 函数名 (形式参数列表) (返回值列表)  函数体  如果函数返回一个无名变量或者没有返回值，返回值列表的括号可以省略。如果一个函数声明没有返回值列表，那么这个 函数不会返回任何值。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // 两个 int 类型参数 返回一个 int 类型的值 func max (num1, num2 int ) int  /* 定义局部变量 */ var result int if (num1  num2)  result = num1  else  result = num2  return result  // 返回多个类型的值 func swap (x int , y string ) ( string , int )  return y, x  // 有名返回值 func Size (rect image.Rectangle) (width, height int , err error) 在函数体中，函数的形参作为局部变量，被初始化为调用者提供的值（函数调用必须按照声明顺序为所有参数提供实参）。函数的形参和有 名返回值（也就是对返回值命名）作为函数最外层的局部变量，被存储在相同的词法块中。 参数 Go 语言使用的是 值传递 ，当我们传一个参数值到被调用函数里面时，实际上是传了这个值的一份 copy，（不管是指针，引用类型还是其他类型， 区别无非是拷贝目标对象还是拷贝指针）当在被调用函数中修改参数值的时候，调用函数中相应实参不会发生任何变化，因为数值变化只作用在 copy 上。 但是如果是引用传递，在调用函数时将实际参数的地址传递到函数中，那么在函数中对参数所进行的修改，将影响到实际参数。 注意，如果实参是 slice 、 map 、 function 、 channel 等类型（ 引用类型 ），实参可能会由于函数的间接引用被修改。 没有函数体的函数声明，这表示该函数不是以 Go 实现的。这样的声明定义了函数标识符。 表面上看，指针参数性能会更好，但是要注意被复制的指针会延长目标对象的生命周期，还可能导致它被分配到堆上，其性能消耗要加上堆内存分配和 垃圾回收的成本 。 在栈上复制小对象，要比堆上分配内存要快的多。 可变参数 变参本质上就是一个切片，只能接受一到多个同类型参数，而且必须在参数列表的最后一个 。比如 fmt.Printf ， Printf 接收一个的必备参数，之 后接收任意个数的后续参数。 在参数列表的最后一个参数类型之前加上省略符号 ... ，表示该函数会接收任意数量的该类型参数。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 func sum (vals ... int ) int  \ttotal := 0 \t for _, val := range vals  \t\t\ttotal += val \t \t return total  // 调用 fmt.Println(sum()) // \"0\" fmt.Println(sum( 3 )) // \"3\" fmt.Println(sum( 1 , 2 , 3 , 4 )) // \"10\" // 还可以使用类似 ES6 的解构赋值的语法 values := [] int  1 , 2 , 3 , 4  fmt.Println(sum(values...)) // \"10\" 函数作为值 Go 函数被看作第一类值：函数像其他值一样，拥有类型，可以被赋值给其他变量，传递给函数，从函数返回。 1 2 3 4 5 6 7 8 9 func main ()  \t /* 声明函数变量 */ \tgetSquareRoot := func (x float64 ) float64  \t\t return math.Sqrt(x) \t \t /* 使用函数 */ \tfmt.Println(getSquareRoot( 9 )) // 3  函数作为参数 声明一个名叫 operate 的函数类型，它有两个参数和一个结果，都是 int 类型的。 1 type operate func (x, y int ) int 编写 calculate 函数的签名部分。这个函数除了需要两个 int 类型的参数之外，还应该有一个 operate 类型的参数。 1 2 3 4 5 6 func calculate (x int , y int , op operate) ( int , error)  if op == nil  return 0 , errors.New( \"invalid operation\" )  return op(x, y), nil  闭包 Go 语言支持匿名函数，可作为闭包。 1 2 3 4 5 6 7 8 9 // 返回一个函数 func getSequence () func () int  // func() 是没有参数也没有返回值的函数类型 \t i:= 0 \t // 闭包 return func () int  i+= 1 return i   错误 Go 中，对于大部分函数而言，永远无法确保能否成功运行（有一部分函数总是能成功的运行。比如 strings.Contains 和 strconv.FormatBool ）。通常 Go 函数的最后一个返回值用来传递错误信息。如果导致失败的原因只有一个，返回值可以是一个布尔值， 通常被命名为 ok 。否则应该返回一个 error 类型。 关键字 defer 在普通函数或方法前加关键字 defer ，会使函数或方法延迟执行，直到包含该 defer 语句的函数执行完毕时（ 无论函数是否出错 ）， defer 后的函数才会被执行。 defer 语句一般被用于处理成对的操作，如打开、关闭、连接、断开连接、加锁、释放锁。因为 defer 可以保证让你更任何情况下， 资源都会被释放。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package ioutil func ReadFile (filename string ) ([] byte , error)  \tf, err := os.Open(filename) \t if err != nil  \t\t\t return nil , err \t \t defer f.Close() \t return ReadAll(f)  // 互斥锁 var mu sync.Mutex var m = make ( map [ string ] int ) func lookup (key string ) int  \tmu.Lock() \t defer mu.Unlock() \t return m[key]  // 记录何时进入和退出函数 func bigSlowOperation ()  \t defer trace( \"bigSlowOperation\" )() // 运行 trace 函数，记录了进入函数的时间，并返回一个函数值，这个函数值会延迟执行 \textra parentheses \t // ...lots of work… \ttime.Sleep( 10 * time.Second) // simulate slow \toperation by sleeping  func trace (msg string ) func ()  \tstart := time.Now() \tlog.Printf( \"enter %s\" , msg) \t return func ()  \t\tlog.Printf( \"exit %s (%s)\" , msg,time.Since(start)) \t  // 观察函数的返回值 func double (x int ) (result int )  // 有名返回值 // 由于 defer 在 return 之后执行，所以这里的 result 就是函数最终的返回值 \t defer func ()  fmt.Printf( \"double(%d) = %d\\n\" , x,result) () \t return x + x  _ = double( 4 ) // 输出 \"double(4) = 8\" 上面的例子中我们知道 defer 函数可以观察函数返回值， defer 函数还可以修改函数的返回值： 1 2 3 4 5 func triple (x int ) (result int )  \t defer func ()  result += x () \t return double(x)  fmt.Println(triple( 4 )) // \"12\" 如果一个函数中有多条 defer 语句，那么那几个 defer 函数调用的执行顺序是怎样的 在同一个函数中， defer 函数调用的执行顺序与它们分别所属的 defer 语句的出现顺序（更严谨地说，是执行顺序）完全相反 。 在 defer 语句每次执行的时候，Go 语言会把它携带的 defer 函数及其参数值另行存储到一个队列中。 这个队列与该 defer 语句所属的函数是对应的，并且，它是先进后出（FILO）的，相当于一个栈。 在需要执行某个函数中的 defer 函数调用的时候，Go 语言会先拿到对应的队列，然后从该队列中一个一个地取出 defer 函数及 其参数值，并逐个执行调用。 传入函数的那些参数值后来怎么样了 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package main import \"fmt\" func main ()  \tarray1 := [ 3 ] string  \"a\" , \"b\" , \"c\"  \tfmt.Printf( \"The array: %v\\n\" , array1) \tarray2 := modifyArray(array1) \tfmt.Printf( \"The modified array: %v\\n\" , array2) \tfmt.Printf( \"The original array: %v\\n\" , array1)  func modifyArray (a [3] string ) [3] string  \ta[ 1 ] = \"x\" \t return a  在 main 函数中声明了一个数组 array1 ，然后把它传给了函数 modify ， modify 对参数值稍作修改后将其作为结果值返回。 main 函数中的代码拿到这个结果之后打印了它（即 array2 ），以及原来的数组 array1 。关键问题是，原数组会因 modify 函数对参数 值的修改而改变吗？ 答案是：原数组不会改变。为什么呢？原因是， 所有传给函数的参数值都会被复制，函数在其内部使用的并不是参数值的原值， 而是它的副本 。 由于数组是值类型，所以每一次复制都会拷贝它，以及它的所有元素值。 注意， 对于引用类型，比如：切片、字典、通道，像上面那样复制它们的值，只会拷贝它们本身而已，并不会拷贝它们引用的底层数据。 也就是说，这时只是浅表复制，而不是深层复制 。 以切片值为例，如此复制的时候，只是拷贝了它指向底层数组中某一个元素的指针，以及它的长度值和容量值，而它的底层数组并不会被拷贝。"},"basic/function.html#函数":{"title":"&#x51FD;&#x6570;","path":"\\golang-learn\\basic\\function.html#函数","body":""},"basic/function.html#声明函数":{"title":"&#x58F0;&#x660E;&#x51FD;&#x6570;","path":"\\golang-learn\\basic\\function.html#声明函数","body":"func &#x5173;&#x952E;&#x5B57;&#x58F0;&#x660E;&#x51FD;&#x6570;&#xFF1A; 1 2 3 func &#x51FD;&#x6570;&#x540D; (&#x5F62;&#x5F0F;&#x53C2;&#x6570;&#x5217;&#x8868;) (&#x8FD4;&#x56DE;&#x503C;&#x5217;&#x8868;) { &#x51FD;&#x6570;&#x4F53; } &#x5982;&#x679C;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65E0;&#x540D;&#x53D8;&#x91CF;&#x6216;&#x8005;&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x503C;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x5217;&#x8868;&#x7684;&#x62EC;&#x53F7;&#x53EF;&#x4EE5;&#x7701;&#x7565;&#x3002;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x58F0;&#x660E;&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x503C;&#x5217;&#x8868;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A; &#x51FD;&#x6570;&#x4E0D;&#x4F1A;&#x8FD4;&#x56DE;&#x4EFB;&#x4F55;&#x503C;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 // &#x4E24;&#x4E2A; int &#x7C7B;&#x578B;&#x53C2;&#x6570; &#x8FD4;&#x56DE;&#x4E00;&#x4E2A; int &#x7C7B;&#x578B;&#x7684;&#x503C; func max (num1, num2 int ) int { /* &#x5B9A;&#x4E49;&#x5C40;&#x90E8;&#x53D8;&#x91CF; */ var result int if (num1  num2) { result = num1 } else { result = num2 } return result } // &#x8FD4;&#x56DE;&#x591A;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x503C; func swap (x int , y string ) ( string , int ) { return y, x } // &#x6709;&#x540D;&#x8FD4;&#x56DE;&#x503C; func Size (rect image.Rectangle) (width, height int , err error) &#x5728;&#x51FD;&#x6570;&#x4F53;&#x4E2D;&#xFF0C;&#x51FD;&#x6570;&#x7684;&#x5F62;&#x53C2;&#x4F5C;&#x4E3A;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF0C;&#x88AB;&#x521D;&#x59CB;&#x5316;&#x4E3A;&#x8C03;&#x7528;&#x8005;&#x63D0;&#x4F9B;&#x7684;&#x503C;&#xFF08;&#x51FD;&#x6570;&#x8C03;&#x7528;&#x5FC5;&#x987B;&#x6309;&#x7167;&#x58F0;&#x660E;&#x987A;&#x5E8F;&#x4E3A;&#x6240;&#x6709;&#x53C2;&#x6570;&#x63D0;&#x4F9B;&#x5B9E;&#x53C2;&#xFF09;&#x3002;&#x51FD;&#x6570;&#x7684;&#x5F62;&#x53C2;&#x548C;&#x6709; &#x540D;&#x8FD4;&#x56DE;&#x503C;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x5BF9;&#x8FD4;&#x56DE;&#x503C;&#x547D;&#x540D;&#xFF09;&#x4F5C;&#x4E3A;&#x51FD;&#x6570;&#x6700;&#x5916;&#x5C42;&#x7684;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF0C;&#x88AB;&#x5B58;&#x50A8;&#x5728;&#x76F8;&#x540C;&#x7684;&#x8BCD;&#x6CD5;&#x5757;&#x4E2D;&#x3002;"},"basic/function.html#参数":{"title":"&#x53C2;&#x6570;","path":"\\golang-learn\\basic\\function.html#参数","body":"Go &#x8BED;&#x8A00;&#x4F7F;&#x7528;&#x7684;&#x662F; &#x503C;&#x4F20;&#x9012; &#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x4F20;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x503C;&#x5230;&#x88AB;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x91CC;&#x9762;&#x65F6;&#xFF0C;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x4F20;&#x4E86;&#x8FD9;&#x4E2A;&#x503C;&#x7684;&#x4E00;&#x4EFD; copy&#xFF0C;&#xFF08;&#x4E0D;&#x7BA1;&#x662F;&#x6307;&#x9488;&#xFF0C;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x8FD8;&#x662F;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#xFF0C; &#x533A;&#x522B;&#x65E0;&#x975E;&#x662F;&#x62F7;&#x8D1D;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x8FD8;&#x662F;&#x62F7;&#x8D1D;&#x6307;&#x9488;&#xFF09;&#x5F53;&#x5728;&#x88AB;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x4E2D;&#x4FEE;&#x6539;&#x53C2;&#x6570;&#x503C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x4E2D;&#x76F8;&#x5E94;&#x5B9E;&#x53C2;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x4EFB;&#x4F55;&#x53D8;&#x5316;&#xFF0C;&#x56E0;&#x4E3A;&#x6570;&#x503C;&#x53D8;&#x5316;&#x53EA;&#x4F5C;&#x7528;&#x5728; copy &#x4E0A;&#x3002; &#x4F46;&#x662F;&#x5982;&#x679C;&#x662F;&#x5F15;&#x7528;&#x4F20;&#x9012;&#xFF0C;&#x5728;&#x8C03;&#x7528;&#x51FD;&#x6570;&#x65F6;&#x5C06;&#x5B9E;&#x9645;&#x53C2;&#x6570;&#x7684;&#x5730;&#x5740;&#x4F20;&#x9012;&#x5230;&#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x90A3;&#x4E48;&#x5728;&#x51FD;&#x6570;&#x4E2D;&#x5BF9;&#x53C2;&#x6570;&#x6240;&#x8FDB;&#x884C;&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x5C06;&#x5F71;&#x54CD;&#x5230;&#x5B9E;&#x9645;&#x53C2;&#x6570;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x5982;&#x679C;&#x5B9E;&#x53C2;&#x662F; slice &#x3001; map &#x3001; function &#x3001; channel &#x7B49;&#x7C7B;&#x578B;&#xFF08; &#x5F15;&#x7528;&#x7C7B;&#x578B; &#xFF09;&#xFF0C;&#x5B9E;&#x53C2;&#x53EF;&#x80FD;&#x4F1A;&#x7531;&#x4E8E;&#x51FD;&#x6570;&#x7684;&#x95F4;&#x63A5;&#x5F15;&#x7528;&#x88AB;&#x4FEE;&#x6539;&#x3002; &#x6CA1;&#x6709;&#x51FD;&#x6570;&#x4F53;&#x7684;&#x51FD;&#x6570;&#x58F0;&#x660E;&#xFF0C;&#x8FD9;&#x8868;&#x793A;&#x8BE5;&#x51FD;&#x6570;&#x4E0D;&#x662F;&#x4EE5; Go &#x5B9E;&#x73B0;&#x7684;&#x3002;&#x8FD9;&#x6837;&#x7684;&#x58F0;&#x660E;&#x5B9A;&#x4E49;&#x4E86;&#x51FD;&#x6570;&#x6807;&#x8BC6;&#x7B26;&#x3002; &#x8868;&#x9762;&#x4E0A;&#x770B;&#xFF0C;&#x6307;&#x9488;&#x53C2;&#x6570;&#x6027;&#x80FD;&#x4F1A;&#x66F4;&#x597D;&#xFF0C;&#x4F46;&#x662F;&#x8981;&#x6CE8;&#x610F;&#x88AB;&#x590D;&#x5236;&#x7684;&#x6307;&#x9488;&#x4F1A;&#x5EF6;&#x957F;&#x76EE;&#x6807;&#x5BF9;&#x8C61;&#x7684;&#x751F;&#x547D;&#x5468;&#x671F;&#xFF0C;&#x8FD8;&#x53EF;&#x80FD;&#x5BFC;&#x81F4;&#x5B83;&#x88AB;&#x5206;&#x914D;&#x5230;&#x5806;&#x4E0A;&#xFF0C;&#x5176;&#x6027;&#x80FD;&#x6D88;&#x8017;&#x8981;&#x52A0;&#x4E0A;&#x5806;&#x5185;&#x5B58;&#x5206;&#x914D;&#x548C; &#x5783;&#x573E;&#x56DE;&#x6536;&#x7684;&#x6210;&#x672C; &#x3002; &#x5728;&#x6808;&#x4E0A;&#x590D;&#x5236;&#x5C0F;&#x5BF9;&#x8C61;&#xFF0C;&#x8981;&#x6BD4;&#x5806;&#x4E0A;&#x5206;&#x914D;&#x5185;&#x5B58;&#x8981;&#x5FEB;&#x7684;&#x591A;&#x3002;"},"basic/function.html#可变参数":{"title":"&#x53EF;&#x53D8;&#x53C2;&#x6570;","path":"\\golang-learn\\basic\\function.html#可变参数","body":"&#x53D8;&#x53C2;&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5207;&#x7247;&#xFF0C;&#x53EA;&#x80FD;&#x63A5;&#x53D7;&#x4E00;&#x5230;&#x591A;&#x4E2A;&#x540C;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#xFF0C;&#x800C;&#x4E14;&#x5FC5;&#x987B;&#x5728;&#x53C2;&#x6570;&#x5217;&#x8868;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A; &#x3002;&#x6BD4;&#x5982; fmt.Printf &#xFF0C; Printf &#x63A5;&#x6536;&#x4E00;&#x4E2A;&#x7684;&#x5FC5;&#x5907;&#x53C2;&#x6570;&#xFF0C;&#x4E4B; &#x540E;&#x63A5;&#x6536;&#x4EFB;&#x610F;&#x4E2A;&#x6570;&#x7684;&#x540E;&#x7EED;&#x53C2;&#x6570;&#x3002; &#x5728;&#x53C2;&#x6570;&#x5217;&#x8868;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#x4E4B;&#x524D;&#x52A0;&#x4E0A;&#x7701;&#x7565;&#x7B26;&#x53F7; ... &#xFF0C;&#x8868;&#x793A;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x63A5;&#x6536;&#x4EFB;&#x610F;&#x6570;&#x91CF;&#x7684;&#x8BE5;&#x7C7B;&#x578B;&#x53C2;&#x6570;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 func sum (vals ... int ) int { \ttotal := 0 \t for _, val := range vals { \t\t\ttotal += val \t} \t return total } // &#x8C03;&#x7528; fmt.Println(sum()) // 0 fmt.Println(sum( 3 )) // 3 fmt.Println(sum( 1 , 2 , 3 , 4 )) // 10 // &#x8FD8;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x7C7B;&#x4F3C; ES6 &#x7684;&#x89E3;&#x6784;&#x8D4B;&#x503C;&#x7684;&#x8BED;&#x6CD5; values := [] int { 1 , 2 , 3 , 4 } fmt.Println(sum(values...)) // 10"},"basic/function.html#函数作为值":{"title":"&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x503C;","path":"\\golang-learn\\basic\\function.html#函数作为值","body":"Go &#x51FD;&#x6570;&#x88AB;&#x770B;&#x4F5C;&#x7B2C;&#x4E00;&#x7C7B;&#x503C;&#xFF1A;&#x51FD;&#x6570;&#x50CF;&#x5176;&#x4ED6;&#x503C;&#x4E00;&#x6837;&#xFF0C;&#x62E5;&#x6709;&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x8D4B;&#x503C;&#x7ED9;&#x5176;&#x4ED6;&#x53D8;&#x91CF;&#xFF0C;&#x4F20;&#x9012;&#x7ED9;&#x51FD;&#x6570;&#xFF0C;&#x4ECE;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x3002; 1 2 3 4 5 6 7 8 9 func main () { \t /* &#x58F0;&#x660E;&#x51FD;&#x6570;&#x53D8;&#x91CF; */ \tgetSquareRoot := func (x float64 ) float64 { \t\t return math.Sqrt(x) \t} \t /* &#x4F7F;&#x7528;&#x51FD;&#x6570; */ \tfmt.Println(getSquareRoot( 9 )) // 3 }"},"basic/function.html#函数作为参数":{"title":"&#x51FD;&#x6570;&#x4F5C;&#x4E3A;&#x53C2;&#x6570;","path":"\\golang-learn\\basic\\function.html#函数作为参数","body":"&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x540D;&#x53EB; operate &#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x6709;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#x548C;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#xFF0C;&#x90FD;&#x662F; int &#x7C7B;&#x578B;&#x7684;&#x3002; 1 type operate func (x, y int ) int &#x7F16;&#x5199; calculate &#x51FD;&#x6570;&#x7684;&#x7B7E;&#x540D;&#x90E8;&#x5206;&#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x9664;&#x4E86;&#x9700;&#x8981;&#x4E24;&#x4E2A; int &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x5E94;&#x8BE5;&#x6709;&#x4E00;&#x4E2A; operate &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#x3002; 1 2 3 4 5 6 func calculate (x int , y int , op operate) ( int , error) { if op == nil { return 0 , errors.New( invalid operation ) } return op(x, y), nil }"},"basic/function.html#闭包":{"title":"&#x95ED;&#x5305;","path":"\\golang-learn\\basic\\function.html#闭包","body":"Go &#x8BED;&#x8A00;&#x652F;&#x6301;&#x533F;&#x540D;&#x51FD;&#x6570;&#xFF0C;&#x53EF;&#x4F5C;&#x4E3A;&#x95ED;&#x5305;&#x3002; 1 2 3 4 5 6 7 8 9 // &#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x51FD;&#x6570; func getSequence () func () int { // func() &#x662F;&#x6CA1;&#x6709;&#x53C2;&#x6570;&#x4E5F;&#x6CA1;&#x6709;&#x8FD4;&#x56DE;&#x503C;&#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B; \t i:= 0 \t // &#x95ED;&#x5305; return func () int { i+= 1 return i } }"},"basic/function.html#错误":{"title":"&#x9519;&#x8BEF;","path":"\\golang-learn\\basic\\function.html#错误","body":"Go &#x4E2D;&#xFF0C;&#x5BF9;&#x4E8E;&#x5927;&#x90E8;&#x5206;&#x51FD;&#x6570;&#x800C;&#x8A00;&#xFF0C;&#x6C38;&#x8FDC;&#x65E0;&#x6CD5;&#x786E;&#x4FDD;&#x80FD;&#x5426;&#x6210;&#x529F;&#x8FD0;&#x884C;&#xFF08;&#x6709;&#x4E00;&#x90E8;&#x5206;&#x51FD;&#x6570;&#x603B;&#x662F;&#x80FD;&#x6210;&#x529F;&#x7684;&#x8FD0;&#x884C;&#x3002;&#x6BD4;&#x5982; strings.Contains &#x548C; strconv.FormatBool &#xFF09;&#x3002;&#x901A;&#x5E38; Go &#x51FD;&#x6570;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x503C;&#x7528;&#x6765;&#x4F20;&#x9012;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3002;&#x5982;&#x679C;&#x5BFC;&#x81F4;&#x5931;&#x8D25;&#x7684;&#x539F;&#x56E0;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x4E2A;&#x5E03;&#x5C14;&#x503C;&#xFF0C; &#x901A;&#x5E38;&#x88AB;&#x547D;&#x540D;&#x4E3A; ok &#x3002;&#x5426;&#x5219;&#x5E94;&#x8BE5;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; error &#x7C7B;&#x578B;&#x3002;"},"basic/function.html#关键字-defer":{"title":"&#x5173;&#x952E;&#x5B57; defer","path":"\\golang-learn\\basic\\function.html#关键字-defer","body":"&#x5728;&#x666E;&#x901A;&#x51FD;&#x6570;&#x6216;&#x65B9;&#x6CD5;&#x524D;&#x52A0;&#x5173;&#x952E;&#x5B57; defer &#xFF0C;&#x4F1A;&#x4F7F;&#x51FD;&#x6570;&#x6216;&#x65B9;&#x6CD5;&#x5EF6;&#x8FDF;&#x6267;&#x884C;&#xFF0C;&#x76F4;&#x5230;&#x5305;&#x542B;&#x8BE5; defer &#x8BED;&#x53E5;&#x7684;&#x51FD;&#x6570;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#x65F6;&#xFF08; &#x65E0;&#x8BBA;&#x51FD;&#x6570;&#x662F;&#x5426;&#x51FA;&#x9519; &#xFF09;&#xFF0C; defer &#x540E;&#x7684;&#x51FD;&#x6570;&#x624D;&#x4F1A;&#x88AB;&#x6267;&#x884C;&#x3002; defer &#x8BED;&#x53E5;&#x4E00;&#x822C;&#x88AB;&#x7528;&#x4E8E;&#x5904;&#x7406;&#x6210;&#x5BF9;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x5982;&#x6253;&#x5F00;&#x3001;&#x5173;&#x95ED;&#x3001;&#x8FDE;&#x63A5;&#x3001;&#x65AD;&#x5F00;&#x8FDE;&#x63A5;&#x3001;&#x52A0;&#x9501;&#x3001;&#x91CA;&#x653E;&#x9501;&#x3002;&#x56E0;&#x4E3A; defer &#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#x8BA9;&#x4F60;&#x66F4;&#x4EFB;&#x4F55;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C; &#x8D44;&#x6E90;&#x90FD;&#x4F1A;&#x88AB;&#x91CA;&#x653E;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 package ioutil func ReadFile (filename string ) ([] byte , error) { \tf, err := os.Open(filename) \t if err != nil { \t\t\t return nil , err \t} \t defer f.Close() \t return ReadAll(f) } // &#x4E92;&#x65A5;&#x9501; var mu sync.Mutex var m = make ( map [ string ] int ) func lookup (key string ) int { \tmu.Lock() \t defer mu.Unlock() \t return m[key] } // &#x8BB0;&#x5F55;&#x4F55;&#x65F6;&#x8FDB;&#x5165;&#x548C;&#x9000;&#x51FA;&#x51FD;&#x6570; func bigSlowOperation () { \t defer trace( bigSlowOperation )() // &#x8FD0;&#x884C; trace &#x51FD;&#x6570;&#xFF0C;&#x8BB0;&#x5F55;&#x4E86;&#x8FDB;&#x5165;&#x51FD;&#x6570;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x503C;&#xFF0C;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x503C;&#x4F1A;&#x5EF6;&#x8FDF;&#x6267;&#x884C; \textra parentheses \t // ...lots of work&#x2026; \ttime.Sleep( 10 * time.Second) // simulate slow \toperation by sleeping } func trace (msg string ) func () { \tstart := time.Now() \tlog.Printf( enter %s , msg) \t return func () { \t\tlog.Printf( exit %s (%s) , msg,time.Since(start)) \t} } // &#x89C2;&#x5BDF;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C; func double (x int ) (result int ) { // &#x6709;&#x540D;&#x8FD4;&#x56DE;&#x503C; // &#x7531;&#x4E8E; defer &#x5728; return &#x4E4B;&#x540E;&#x6267;&#x884C;&#xFF0C;&#x6240;&#x4EE5;&#x8FD9;&#x91CC;&#x7684; result &#x5C31;&#x662F;&#x51FD;&#x6570;&#x6700;&#x7EC8;&#x7684;&#x8FD4;&#x56DE;&#x503C; \t defer func () { fmt.Printf( double(%d) = %d\\n , x,result) }() \t return x + x } _ = double( 4 ) // &#x8F93;&#x51FA; double(4) = 8 &#x4E0A;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4E2D;&#x6211;&#x4EEC;&#x77E5;&#x9053; defer &#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x89C2;&#x5BDF;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x503C;&#xFF0C; defer &#x51FD;&#x6570;&#x8FD8;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#xFF1A; 1 2 3 4 5 func triple (x int ) (result int ) { \t defer func () { result += x }() \t return double(x) } fmt.Println(triple( 4 )) // 12 &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#x6709;&#x591A;&#x6761; defer &#x8BED;&#x53E5;&#xFF0C;&#x90A3;&#x4E48;&#x90A3;&#x51E0;&#x4E2A; defer &#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x6267;&#x884C;&#x987A;&#x5E8F;&#x662F;&#x600E;&#x6837;&#x7684; &#x5728;&#x540C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#xFF0C; defer &#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x6267;&#x884C;&#x987A;&#x5E8F;&#x4E0E;&#x5B83;&#x4EEC;&#x5206;&#x522B;&#x6240;&#x5C5E;&#x7684; defer &#x8BED;&#x53E5;&#x7684;&#x51FA;&#x73B0;&#x987A;&#x5E8F;&#xFF08;&#x66F4;&#x4E25;&#x8C28;&#x5730;&#x8BF4;&#xFF0C;&#x662F;&#x6267;&#x884C;&#x987A;&#x5E8F;&#xFF09;&#x5B8C;&#x5168;&#x76F8;&#x53CD; &#x3002; &#x5728; defer &#x8BED;&#x53E5;&#x6BCF;&#x6B21;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;Go &#x8BED;&#x8A00;&#x4F1A;&#x628A;&#x5B83;&#x643A;&#x5E26;&#x7684; defer &#x51FD;&#x6570;&#x53CA;&#x5176;&#x53C2;&#x6570;&#x503C;&#x53E6;&#x884C;&#x5B58;&#x50A8;&#x5230;&#x4E00;&#x4E2A;&#x961F;&#x5217;&#x4E2D;&#x3002; &#x8FD9;&#x4E2A;&#x961F;&#x5217;&#x4E0E;&#x8BE5; defer &#x8BED;&#x53E5;&#x6240;&#x5C5E;&#x7684;&#x51FD;&#x6570;&#x662F;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#xFF0C;&#x5B83;&#x662F;&#x5148;&#x8FDB;&#x540E;&#x51FA;&#xFF08;FILO&#xFF09;&#x7684;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x4E2A;&#x6808;&#x3002; &#x5728;&#x9700;&#x8981;&#x6267;&#x884C;&#x67D0;&#x4E2A;&#x51FD;&#x6570;&#x4E2D;&#x7684; defer &#x51FD;&#x6570;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#xFF0C;Go &#x8BED;&#x8A00;&#x4F1A;&#x5148;&#x62FF;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x961F;&#x5217;&#xFF0C;&#x7136;&#x540E;&#x4ECE;&#x8BE5;&#x961F;&#x5217;&#x4E2D;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x5730;&#x53D6;&#x51FA; defer &#x51FD;&#x6570;&#x53CA; &#x5176;&#x53C2;&#x6570;&#x503C;&#xFF0C;&#x5E76;&#x9010;&#x4E2A;&#x6267;&#x884C;&#x8C03;&#x7528;&#x3002;"},"basic/function.html#传入函数的那些参数值后来怎么样了":{"title":"&#x4F20;&#x5165;&#x51FD;&#x6570;&#x7684;&#x90A3;&#x4E9B;&#x53C2;&#x6570;&#x503C;&#x540E;&#x6765;&#x600E;&#x4E48;&#x6837;&#x4E86;","path":"\\golang-learn\\basic\\function.html#传入函数的那些参数值后来怎么样了","body":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 package main import fmt func main () { \tarray1 := [ 3 ] string { a , b , c } \tfmt.Printf( The array: %v\\n , array1) \tarray2 := modifyArray(array1) \tfmt.Printf( The modified array: %v\\n , array2) \tfmt.Printf( The original array: %v\\n , array1) } func modifyArray (a [3] string ) [3] string { \ta[ 1 ] = x \t return a } &#x5728; main &#x51FD;&#x6570;&#x4E2D;&#x58F0;&#x660E;&#x4E86;&#x4E00;&#x4E2A;&#x6570;&#x7EC4; array1 &#xFF0C;&#x7136;&#x540E;&#x628A;&#x5B83;&#x4F20;&#x7ED9;&#x4E86;&#x51FD;&#x6570; modify &#xFF0C; modify &#x5BF9;&#x53C2;&#x6570;&#x503C;&#x7A0D;&#x4F5C;&#x4FEE;&#x6539;&#x540E;&#x5C06;&#x5176;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C;&#x503C;&#x8FD4;&#x56DE;&#x3002; main &#x51FD;&#x6570;&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x62FF;&#x5230;&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;&#x4E4B;&#x540E;&#x6253;&#x5370;&#x4E86;&#x5B83;&#xFF08;&#x5373; array2 &#xFF09;&#xFF0C;&#x4EE5;&#x53CA;&#x539F;&#x6765;&#x7684;&#x6570;&#x7EC4; array1 &#x3002;&#x5173;&#x952E;&#x95EE;&#x9898;&#x662F;&#xFF0C;&#x539F;&#x6570;&#x7EC4;&#x4F1A;&#x56E0; modify &#x51FD;&#x6570;&#x5BF9;&#x53C2;&#x6570; &#x503C;&#x7684;&#x4FEE;&#x6539;&#x800C;&#x6539;&#x53D8;&#x5417;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A;&#x539F;&#x6570;&#x7EC4;&#x4E0D;&#x4F1A;&#x6539;&#x53D8;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x5462;&#xFF1F;&#x539F;&#x56E0;&#x662F;&#xFF0C; &#x6240;&#x6709;&#x4F20;&#x7ED9;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x503C;&#x90FD;&#x4F1A;&#x88AB;&#x590D;&#x5236;&#xFF0C;&#x51FD;&#x6570;&#x5728;&#x5176;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#x7684;&#x5E76;&#x4E0D;&#x662F;&#x53C2;&#x6570;&#x503C;&#x7684;&#x539F;&#x503C;&#xFF0C; &#x800C;&#x662F;&#x5B83;&#x7684;&#x526F;&#x672C; &#x3002; &#x7531;&#x4E8E;&#x6570;&#x7EC4;&#x662F;&#x503C;&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x6BCF;&#x4E00;&#x6B21;&#x590D;&#x5236;&#x90FD;&#x4F1A;&#x62F7;&#x8D1D;&#x5B83;&#xFF0C;&#x4EE5;&#x53CA;&#x5B83;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#x503C;&#x3002; &#x6CE8;&#x610F;&#xFF0C; &#x5BF9;&#x4E8E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;&#x5207;&#x7247;&#x3001;&#x5B57;&#x5178;&#x3001;&#x901A;&#x9053;&#xFF0C;&#x50CF;&#x4E0A;&#x9762;&#x90A3;&#x6837;&#x590D;&#x5236;&#x5B83;&#x4EEC;&#x7684;&#x503C;&#xFF0C;&#x53EA;&#x4F1A;&#x62F7;&#x8D1D;&#x5B83;&#x4EEC;&#x672C;&#x8EAB;&#x800C;&#x5DF2;&#xFF0C;&#x5E76;&#x4E0D;&#x4F1A;&#x62F7;&#x8D1D;&#x5B83;&#x4EEC;&#x5F15;&#x7528;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x636E;&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x8FD9;&#x65F6;&#x53EA;&#x662F;&#x6D45;&#x8868;&#x590D;&#x5236;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6DF1;&#x5C42;&#x590D;&#x5236; &#x3002; &#x4EE5;&#x5207;&#x7247;&#x503C;&#x4E3A;&#x4F8B;&#xFF0C;&#x5982;&#x6B64;&#x590D;&#x5236;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x662F;&#x62F7;&#x8D1D;&#x4E86;&#x5B83;&#x6307;&#x5411;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x4E2D;&#x67D0;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x4EE5;&#x53CA;&#x5B83;&#x7684;&#x957F;&#x5EA6;&#x503C;&#x548C;&#x5BB9;&#x91CF;&#x503C;&#xFF0C;&#x800C;&#x5B83;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x5E76;&#x4E0D;&#x4F1A;&#x88AB;&#x62F7;&#x8D1D;&#x3002;"},"concurrent/channel.html":{"title":"channel","path":"\\golang-learn\\concurrent\\channel.html","body":"channel 1 2 Don’t communicate by sharing memory; share memory by communicating. （不要通过共享内存来通信，而应该通过通信来共享内存。） 这是作为 Go 语言最重要的编程理念。 通道类型的值是 并发安全 的，这也是 Go 语言自带的、唯一一个可以满足并发安全性的类型 。 channels 是 goroutine 之间的通信机制。 goroutine 通过 channel 向另一个 goroutine 发送消息 channel 和 goroutine 结合，可以实现用通信代替共享内存的 CSP 模型。 创建 channel ： 1 2 3 ch := make ( chan int ) ch = make ( chan int , 3 ) // buffered channel with capacity 3 上面的代码中， int 代表这个 channel 要发送的数据的类型。第二个参数代表创建一带缓存的 channel ，容量为 3 。 channel 的零值是 nil 。 发送和接收两个操作使用 - 运算符，一个左尖括号紧接着一个减号形象地代表了元素值的传输方向： 1 2 3 4 5 6 7 // 发送一个值 ch - x // 我的理解就是这里将数据push到channel // 接受一个值 x = -ch // 取出channel的值并复制给变量x -ch // 接受的值会被丢弃 close 使用 close 函数关闭 channel ， channel 关闭后不能再发送数据，但是可以接受已经发送成功的数据， 如果 channel 中没有数据，那么返回一个零值。 注意， close 函数不是一个清理操作，而是一个控制操作 ，在确定这个 channel 不会继续发送数据时调用。 因为关闭操作只用于断言不再向 channel 发送新的数据，所以只有在 “发送者” 所在的 goroutine 才会调用 close 函数 ， 因此对一个只接收的 channel 调用 close 将是一个编译错误。 使用 range 循环可直接在 channels 上面迭代。它依次从 channel 接收数据，当 channel 被关闭并且没有值可接收时 跳出循环。 1 2 3 4 5 6 7 naturals := make ( chan int ) for x := 0 ; x  100 ; x++  naturals - x  for x := range naturals  fmt.Println(x)  注意上面的代码会报 fatal error: all goroutines are asleep - deadlock! 。这个是死锁的错误，因为 range 不等到信 道关闭是不会结束读取的。也就是如果 channel 没有数据了，那么 range 就会阻塞当前 goroutine , 直到信道关闭，所以导 致了死锁 。 为了避免这种情况，对于有缓存的信道，显式地关闭信道: 1 2 3 4 5 6 7 8 9 10 11 ch := make ( chan int , 3 ) ch - 1 ch - 2 ch - 3 // 显式地关闭信道 close (ch) for v := range ch  fmt.Println(v)  无缓存 channel 无缓存 channel 也叫做同步 channel ，这是因为 如果一个 goroutine 基于一个无缓存 channel 发送数据，那么就会 阻塞，直到另一个 goroutine 在相同的 channel 上执行接收操作 。同样的， 如果一个 goroutine 基于一个无缓存 channel 先执行了接受操作，也会阻塞，直到另一个 goroutine 在相同的 channel 上执行发送操作 。在 channel 成功传输之后，两个 goroutine 之后的语句才会继续执行。 带缓存 channel 1 ch = make ( chan int , 3 ) 带缓存的 channel 内部持有一个元素队列。 make 函数创建 channel 时通过第二个参数指定队列的最大容量。 发送操作会向 channel 的缓存队列 push 元素，接收操作则是 pop 元素，如果队列被塞满了，那么发送操作将阻 塞直到另一个 goroutine 执行接收操作而释放了新的队列空间。 相反，如果 channel 是空的，接收操作将阻塞直到有另一个 goroutine 执行发送操作而向队列插入元素。 在大多数情况下，缓冲通道会作为收发双方的中间件。正如前文所述，元素值会先从发送方复制到缓冲通道，之后再由缓冲通道复制给接收方。 但是，当发送操作在执行的时候发现空的通道中，正好有等待的接收操作，那么它会直接把元素值复制给接收方。 单向 channel 当一个 channel 作为一个函数参数时，它一般总是被专门用于 只发送或者只接收 。 类型 chan- int 表示一个只发送 int 的 channel 。相反，类型 -chan int 表示一个只接收 int 的 channel 。 1 var uselessChan = make ( chan - int , 1 ) cap 和 len cap 函数可以获取 channel 内部缓存的容量。 len 函数可以获取 channel 内部缓存有效元素的个数。 1 2 3 4 5 6 7 8 9 ch = make ( chan int , 3 ) fmt.Println( cap (ch)) // 3 ch - \"A\" ch - \"B\" fmt.Println( len (ch)) // 2 fmt.Println(-ch) // A fmt.Println( len (ch)) // 1 通道的发送和接收操作的特性 对于同一个通道，发送操作之间是互斥的，接收操作之间也是互斥的。Go 语言的运行时系统（以下简称运行时系统）只会执行对同一个通 道的任意个发送操作中的某一个。直到这个元素值被完全复制进该通道之后，其他针对该通道的发送操作才可能被执行。 发送操作和接收操作中对元素值的处理都是不可分割的。发送操作要么还没复制元素值，要么已经复制完毕，绝不会出现只复制了一部分 的情况。接收操作在准备好元素值的副本之后，一定会删除掉通道中的原值，绝不会出现通道中仍有残留的情况。 发送操作在完全完成之前会被阻塞。接收操作也是如此。 元素值从外界进入通道时会被复制。更具体地说，进入通道的并不是在接收操作符右边的那个元素值，而是它的副本 。 对于通道中的同一个元素值来说，发送操作和接收操作之间也是互斥的。例如，虽然会出现，正在被复制进通道但还未复制完成的元素值， 但是这时它绝不会被想接收它的一方看到和取走 。 发送操作和接收操作在什么时候可能被长时间的阻塞 针对 缓冲通道 的情况。如果通道已满，那么对它的所有发送操作都会被阻塞，直到通道中有元素值被接收走。相对的，如果通道已空， 那么对它的所有接收操作都会被阻塞，直到通道中有新的元素值出现。这时，通道会通知最早等待的那个接收操作所在的 goroutine， 并使它再次执行接收操作。 对于 非缓冲通道 ，情况要简单一些。无论是发送操作还是接收操作，一开始执行就会被阻塞，直到配对的操作也开始执行，才会继续传递。 对于值为 nil 的通道，不论它的具体类型是什么，对它的发送操作和接收操作都会永久地处于阻塞状态 。它们所属的 goroutine 中的任何代码，都不再会被执行。注意，由于通道类型是引用类型，所以它的零值就是 nil 。 当我们只声明该类型的变量但没 有用 make 函数对它进行初始化时，该变量的值就会是 nil 。我们一定不要忘记初始化通道 ！ select 多路复用 select 语句是专为通道而设计的， 所以每个 case 表达式中都只能包含操作通道的表达式 ，比如接收表达式。 1 2 3 4 5 6 7 8 select  case communication clause : ... case communication clause : ... default : /* 可选 */ \t\t\t...  如果有多个 channel 需要接受消息，如果第一个 channel 没有消息发过来，那么程序会被阻塞，第二个 channel 的消息就也 无法接收了。这时候就需要使用 select 多路复用。 1 2 3 4 5 6 7 8 9 10 select  case -ch1: ... case x := -ch2: \t\t\t... \t case ch3 - y: \t ...\t\t default : \t\t\t...  每一个 case 代表一个通信操作，发送或者接收。 如果没有 case 可运行，它将阻塞，直到有 case 可运行 。 如果多个 case 同时满足条件， select 会 随机 地选择一个执行。 为了避免因为发送或者接收导致的阻塞，尤其是当 channel 没有准备好写或者读时。 default 可以设置当其它的操作 都不能够马上被处理时程序需要执行哪些逻辑 。 超时 我们可以利用 select 来设置超时，避免 goroutine 阻塞的情况： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 func main ()  \tc := make ( chan int ) \to := make ( chan bool ) \t go func ()  \t\t for  \t\t\t select  \t\t\t\t case v := - c: \t\t\t\t\tfmt. println (v) \t\t\t\t case - time.After( 5 * time.Second): \t\t\t\t\tfmt. println ( \"timeout\" ) \t\t\t\t\to - true \t\t\t\t\t break \t\t\t \t\t \t() \t- o  使用 select 语句的时候，需要注意的事情 如果加入了默认分支，那么无论涉及通道操作的表达式是否有阻塞， select 语句都不会被阻塞。如果那几个表达式都阻塞了，或者 说都没有满足求值的条件，那么默认分支就会被选中并执行。 如果没有加入默认分支，那么一旦所有的 case 表达式都没有满足求值条件，那么 select 语句就会被阻塞。 直到至少有一个 case 表达式满足条件为止。 还记得吗？我们可能会因为通道关闭了，而直接从通道接收到一个其元素类型的零值。所以，在很多时候，我们需要通过接收表达式 的第二个结果值来判断通道是否已经关闭。一旦发现某个通道关闭了，我们就应该及时地屏蔽掉对应的分支或者采取其他措施。这对 于程序逻辑和程序性能都是有好处的。 select 语句只能对其中的每一个 case 表达式各求值一次。所以，如果我们想连续或定时地操作其中的通道的话，就往往需要 通过在 for 语句中嵌入 select 语句的方式实现。但这时要注意， 简单地在 select 语句的分支中使用 break 语句，只能结 束当前的 select 语句的执行，而并不会对外层的 for 语句产生作用。这种错误的用法可能会让这个 for 语句无休止地运行下去 。 break 退出嵌套循环： 1 2 3 4 5 6 7 8 9 10 I: \t for i := 0 ; i  2 ; i++  \t\t for j := 0 ; j  5 ; j++  \t\t\t if j == 2  \t\t\t\t break I \t\t\t \t\t\tfmt.Println( \"hello\" ) \t\t \t\tfmt.Println( \"hi\" ) \t 1 2 3 4 5 6 7 8 9 10 11 12 13 intChan := make ( chan int , 1 ) // 一秒后关闭通道。 time.AfterFunc(time.Second, func ()  close (intChan) ) select  case _, ok := -intChan: if !ok  fmt.Println( \"The candidate case is closed.\" ) break  fmt.Println( \"The candidate case is selected.\" )  上面的代码 select 语句只有一个候选分支，我在其中利用接收表达式的第二个结果值对 intChan 通道是否已关闭做了判断，并在 得到肯定结果后，通过 break 语句立即结束当前 select 语句的执行。"},"concurrent/channel.html#channel":{"title":"channel","path":"\\golang-learn\\concurrent\\channel.html#channel","body":"1 2 Don&#x2019;t communicate by sharing memory; share memory by communicating. &#xFF08;&#x4E0D;&#x8981;&#x901A;&#x8FC7;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x6765;&#x901A;&#x4FE1;&#xFF0C;&#x800C;&#x5E94;&#x8BE5;&#x901A;&#x8FC7;&#x901A;&#x4FE1;&#x6765;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x3002;&#xFF09; &#x8FD9;&#x662F;&#x4F5C;&#x4E3A; Go &#x8BED;&#x8A00;&#x6700;&#x91CD;&#x8981;&#x7684;&#x7F16;&#x7A0B;&#x7406;&#x5FF5;&#x3002; &#x901A;&#x9053;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x662F; &#x5E76;&#x53D1;&#x5B89;&#x5168; &#x7684;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F; Go &#x8BED;&#x8A00;&#x81EA;&#x5E26;&#x7684;&#x3001;&#x552F;&#x4E00;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x6EE1;&#x8DB3;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x6027;&#x7684;&#x7C7B;&#x578B; &#x3002; channels &#x662F; goroutine &#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x673A;&#x5236;&#x3002; goroutine &#x901A;&#x8FC7; channel &#x5411;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x53D1;&#x9001;&#x6D88;&#x606F; channel &#x548C; goroutine &#x7ED3;&#x5408;&#xFF0C;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x7528;&#x901A;&#x4FE1;&#x4EE3;&#x66FF;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x7684; CSP &#x6A21;&#x578B;&#x3002; &#x521B;&#x5EFA; channel &#xFF1A; 1 2 3 ch := make ( chan int ) ch = make ( chan int , 3 ) // buffered channel with capacity 3 &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#xFF0C; int &#x4EE3;&#x8868;&#x8FD9;&#x4E2A; channel &#x8981;&#x53D1;&#x9001;&#x7684;&#x6570;&#x636E;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x4EE3;&#x8868;&#x521B;&#x5EFA;&#x4E00;&#x5E26;&#x7F13;&#x5B58;&#x7684; channel &#xFF0C;&#x5BB9;&#x91CF;&#x4E3A; 3 &#x3002; channel &#x7684;&#x96F6;&#x503C;&#x662F; nil &#x3002; &#x53D1;&#x9001;&#x548C;&#x63A5;&#x6536;&#x4E24;&#x4E2A;&#x64CD;&#x4F5C;&#x4F7F;&#x7528; - &#x8FD0;&#x7B97;&#x7B26;&#xFF0C;&#x4E00;&#x4E2A;&#x5DE6;&#x5C16;&#x62EC;&#x53F7;&#x7D27;&#x63A5;&#x7740;&#x4E00;&#x4E2A;&#x51CF;&#x53F7;&#x5F62;&#x8C61;&#x5730;&#x4EE3;&#x8868;&#x4E86;&#x5143;&#x7D20;&#x503C;&#x7684;&#x4F20;&#x8F93;&#x65B9;&#x5411;&#xFF1A; 1 2 3 4 5 6 7 // &#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x503C; ch - x // &#x6211;&#x7684;&#x7406;&#x89E3;&#x5C31;&#x662F;&#x8FD9;&#x91CC;&#x5C06;&#x6570;&#x636E;push&#x5230;channel // &#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x503C; x = -ch // &#x53D6;&#x51FA;channel&#x7684;&#x503C;&#x5E76;&#x590D;&#x5236;&#x7ED9;&#x53D8;&#x91CF;x -ch // &#x63A5;&#x53D7;&#x7684;&#x503C;&#x4F1A;&#x88AB;&#x4E22;&#x5F03; close &#x4F7F;&#x7528; close &#x51FD;&#x6570;&#x5173;&#x95ED; channel &#xFF0C; channel &#x5173;&#x95ED;&#x540E;&#x4E0D;&#x80FD;&#x518D;&#x53D1;&#x9001;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x662F;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x5DF2;&#x7ECF;&#x53D1;&#x9001;&#x6210;&#x529F;&#x7684;&#x6570;&#x636E;&#xFF0C; &#x5982;&#x679C; channel &#x4E2D;&#x6CA1;&#x6709;&#x6570;&#x636E;&#xFF0C;&#x90A3;&#x4E48;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x96F6;&#x503C;&#x3002; &#x6CE8;&#x610F;&#xFF0C; close &#x51FD;&#x6570;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x6E05;&#x7406;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x662F;&#x4E00;&#x4E2A;&#x63A7;&#x5236;&#x64CD;&#x4F5C; &#xFF0C;&#x5728;&#x786E;&#x5B9A;&#x8FD9;&#x4E2A; channel &#x4E0D;&#x4F1A;&#x7EE7;&#x7EED;&#x53D1;&#x9001;&#x6570;&#x636E;&#x65F6;&#x8C03;&#x7528;&#x3002; &#x56E0;&#x4E3A;&#x5173;&#x95ED;&#x64CD;&#x4F5C;&#x53EA;&#x7528;&#x4E8E;&#x65AD;&#x8A00;&#x4E0D;&#x518D;&#x5411; channel &#x53D1;&#x9001;&#x65B0;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x6240;&#x4EE5;&#x53EA;&#x6709;&#x5728; &#x201C;&#x53D1;&#x9001;&#x8005;&#x201D; &#x6240;&#x5728;&#x7684; goroutine &#x624D;&#x4F1A;&#x8C03;&#x7528; close &#x51FD;&#x6570; &#xFF0C; &#x56E0;&#x6B64;&#x5BF9;&#x4E00;&#x4E2A;&#x53EA;&#x63A5;&#x6536;&#x7684; channel &#x8C03;&#x7528; close &#x5C06;&#x662F;&#x4E00;&#x4E2A;&#x7F16;&#x8BD1;&#x9519;&#x8BEF;&#x3002; &#x4F7F;&#x7528; range &#x5FAA;&#x73AF;&#x53EF;&#x76F4;&#x63A5;&#x5728; channels &#x4E0A;&#x9762;&#x8FED;&#x4EE3;&#x3002;&#x5B83;&#x4F9D;&#x6B21;&#x4ECE; channel &#x63A5;&#x6536;&#x6570;&#x636E;&#xFF0C;&#x5F53; channel &#x88AB;&#x5173;&#x95ED;&#x5E76;&#x4E14;&#x6CA1;&#x6709;&#x503C;&#x53EF;&#x63A5;&#x6536;&#x65F6; &#x8DF3;&#x51FA;&#x5FAA;&#x73AF;&#x3002; 1 2 3 4 5 6 7 naturals := make ( chan int ) for x := 0 ; x  100 ; x++ { naturals - x } for x := range naturals { fmt.Println(x) } &#x6CE8;&#x610F;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4F1A;&#x62A5; fatal error: all goroutines are asleep - deadlock! &#x3002;&#x8FD9;&#x4E2A;&#x662F;&#x6B7B;&#x9501;&#x7684;&#x9519;&#x8BEF;&#xFF0C;&#x56E0;&#x4E3A; range &#x4E0D;&#x7B49;&#x5230;&#x4FE1; &#x9053;&#x5173;&#x95ED;&#x662F;&#x4E0D;&#x4F1A;&#x7ED3;&#x675F;&#x8BFB;&#x53D6;&#x7684;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x5982;&#x679C; channel &#x6CA1;&#x6709;&#x6570;&#x636E;&#x4E86;&#xFF0C;&#x90A3;&#x4E48; range &#x5C31;&#x4F1A;&#x963B;&#x585E;&#x5F53;&#x524D; goroutine , &#x76F4;&#x5230;&#x4FE1;&#x9053;&#x5173;&#x95ED;&#xFF0C;&#x6240;&#x4EE5;&#x5BFC; &#x81F4;&#x4E86;&#x6B7B;&#x9501; &#x3002; &#x4E3A;&#x4E86;&#x907F;&#x514D;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#xFF0C;&#x5BF9;&#x4E8E;&#x6709;&#x7F13;&#x5B58;&#x7684;&#x4FE1;&#x9053;&#xFF0C;&#x663E;&#x5F0F;&#x5730;&#x5173;&#x95ED;&#x4FE1;&#x9053;: 1 2 3 4 5 6 7 8 9 10 11 ch := make ( chan int , 3 ) ch - 1 ch - 2 ch - 3 // &#x663E;&#x5F0F;&#x5730;&#x5173;&#x95ED;&#x4FE1;&#x9053; close (ch) for v := range ch { fmt.Println(v) } &#x65E0;&#x7F13;&#x5B58; channel &#x65E0;&#x7F13;&#x5B58; channel &#x4E5F;&#x53EB;&#x505A;&#x540C;&#x6B65; channel &#xFF0C;&#x8FD9;&#x662F;&#x56E0;&#x4E3A; &#x5982;&#x679C;&#x4E00;&#x4E2A; goroutine &#x57FA;&#x4E8E;&#x4E00;&#x4E2A;&#x65E0;&#x7F13;&#x5B58; channel &#x53D1;&#x9001;&#x6570;&#x636E;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A; &#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x5728;&#x76F8;&#x540C;&#x7684; channel &#x4E0A;&#x6267;&#x884C;&#x63A5;&#x6536;&#x64CD;&#x4F5C; &#x3002;&#x540C;&#x6837;&#x7684;&#xFF0C; &#x5982;&#x679C;&#x4E00;&#x4E2A; goroutine &#x57FA;&#x4E8E;&#x4E00;&#x4E2A;&#x65E0;&#x7F13;&#x5B58; channel &#x5148;&#x6267;&#x884C;&#x4E86;&#x63A5;&#x53D7;&#x64CD;&#x4F5C;&#xFF0C;&#x4E5F;&#x4F1A;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x5728;&#x76F8;&#x540C;&#x7684; channel &#x4E0A;&#x6267;&#x884C;&#x53D1;&#x9001;&#x64CD;&#x4F5C; &#x3002;&#x5728; channel &#x6210;&#x529F;&#x4F20;&#x8F93;&#x4E4B;&#x540E;&#xFF0C;&#x4E24;&#x4E2A; goroutine &#x4E4B;&#x540E;&#x7684;&#x8BED;&#x53E5;&#x624D;&#x4F1A;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x3002; &#x5E26;&#x7F13;&#x5B58; channel 1 ch = make ( chan int , 3 ) &#x5E26;&#x7F13;&#x5B58;&#x7684; channel &#x5185;&#x90E8;&#x6301;&#x6709;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x961F;&#x5217;&#x3002; make &#x51FD;&#x6570;&#x521B;&#x5EFA; channel &#x65F6;&#x901A;&#x8FC7;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x961F;&#x5217;&#x7684;&#x6700;&#x5927;&#x5BB9;&#x91CF;&#x3002; &#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x4F1A;&#x5411; channel &#x7684;&#x7F13;&#x5B58;&#x961F;&#x5217; push &#x5143;&#x7D20;&#xFF0C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x5219;&#x662F; pop &#x5143;&#x7D20;&#xFF0C;&#x5982;&#x679C;&#x961F;&#x5217;&#x88AB;&#x585E;&#x6EE1;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x5C06;&#x963B; &#x585E;&#x76F4;&#x5230;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x6267;&#x884C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x800C;&#x91CA;&#x653E;&#x4E86;&#x65B0;&#x7684;&#x961F;&#x5217;&#x7A7A;&#x95F4;&#x3002; &#x76F8;&#x53CD;&#xFF0C;&#x5982;&#x679C; channel &#x662F;&#x7A7A;&#x7684;&#xFF0C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x5C06;&#x963B;&#x585E;&#x76F4;&#x5230;&#x6709;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x6267;&#x884C;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x800C;&#x5411;&#x961F;&#x5217;&#x63D2;&#x5165;&#x5143;&#x7D20;&#x3002; &#x5728;&#x5927;&#x591A;&#x6570;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x7F13;&#x51B2;&#x901A;&#x9053;&#x4F1A;&#x4F5C;&#x4E3A;&#x6536;&#x53D1;&#x53CC;&#x65B9;&#x7684;&#x4E2D;&#x95F4;&#x4EF6;&#x3002;&#x6B63;&#x5982;&#x524D;&#x6587;&#x6240;&#x8FF0;&#xFF0C;&#x5143;&#x7D20;&#x503C;&#x4F1A;&#x5148;&#x4ECE;&#x53D1;&#x9001;&#x65B9;&#x590D;&#x5236;&#x5230;&#x7F13;&#x51B2;&#x901A;&#x9053;&#xFF0C;&#x4E4B;&#x540E;&#x518D;&#x7531;&#x7F13;&#x51B2;&#x901A;&#x9053;&#x590D;&#x5236;&#x7ED9;&#x63A5;&#x6536;&#x65B9;&#x3002; &#x4F46;&#x662F;&#xFF0C;&#x5F53;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x5728;&#x6267;&#x884C;&#x7684;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#x7A7A;&#x7684;&#x901A;&#x9053;&#x4E2D;&#xFF0C;&#x6B63;&#x597D;&#x6709;&#x7B49;&#x5F85;&#x7684;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x4F1A;&#x76F4;&#x63A5;&#x628A;&#x5143;&#x7D20;&#x503C;&#x590D;&#x5236;&#x7ED9;&#x63A5;&#x6536;&#x65B9;&#x3002; &#x5355;&#x5411; channel &#x5F53;&#x4E00;&#x4E2A; channel &#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x65F6;&#xFF0C;&#x5B83;&#x4E00;&#x822C;&#x603B;&#x662F;&#x88AB;&#x4E13;&#x95E8;&#x7528;&#x4E8E; &#x53EA;&#x53D1;&#x9001;&#x6216;&#x8005;&#x53EA;&#x63A5;&#x6536; &#x3002; &#x7C7B;&#x578B; chan- int &#x8868;&#x793A;&#x4E00;&#x4E2A;&#x53EA;&#x53D1;&#x9001; int &#x7684; channel &#x3002;&#x76F8;&#x53CD;&#xFF0C;&#x7C7B;&#x578B; -chan int &#x8868;&#x793A;&#x4E00;&#x4E2A;&#x53EA;&#x63A5;&#x6536; int &#x7684; channel &#x3002; 1 var uselessChan = make ( chan - int , 1 ) cap &#x548C; len cap &#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x83B7;&#x53D6; channel &#x5185;&#x90E8;&#x7F13;&#x5B58;&#x7684;&#x5BB9;&#x91CF;&#x3002; len &#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x83B7;&#x53D6; channel &#x5185;&#x90E8;&#x7F13;&#x5B58;&#x6709;&#x6548;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#x3002; 1 2 3 4 5 6 7 8 9 ch = make ( chan int , 3 ) fmt.Println( cap (ch)) // 3 ch - A ch - B fmt.Println( len (ch)) // 2 fmt.Println(-ch) // A fmt.Println( len (ch)) // 1 &#x901A;&#x9053;&#x7684;&#x53D1;&#x9001;&#x548C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x7684;&#x7279;&#x6027; &#x5BF9;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x4E4B;&#x95F4;&#x662F;&#x4E92;&#x65A5;&#x7684;&#xFF0C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x4E4B;&#x95F4;&#x4E5F;&#x662F;&#x4E92;&#x65A5;&#x7684;&#x3002;Go &#x8BED;&#x8A00;&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#xFF09;&#x53EA;&#x4F1A;&#x6267;&#x884C;&#x5BF9;&#x540C;&#x4E00;&#x4E2A;&#x901A; &#x9053;&#x7684;&#x4EFB;&#x610F;&#x4E2A;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x4E2D;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#x3002;&#x76F4;&#x5230;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x503C;&#x88AB;&#x5B8C;&#x5168;&#x590D;&#x5236;&#x8FDB;&#x8BE5;&#x901A;&#x9053;&#x4E4B;&#x540E;&#xFF0C;&#x5176;&#x4ED6;&#x9488;&#x5BF9;&#x8BE5;&#x901A;&#x9053;&#x7684;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x624D;&#x53EF;&#x80FD;&#x88AB;&#x6267;&#x884C;&#x3002; &#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x548C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x4E2D;&#x5BF9;&#x5143;&#x7D20;&#x503C;&#x7684;&#x5904;&#x7406;&#x90FD;&#x662F;&#x4E0D;&#x53EF;&#x5206;&#x5272;&#x7684;&#x3002;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x8981;&#x4E48;&#x8FD8;&#x6CA1;&#x590D;&#x5236;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x8981;&#x4E48;&#x5DF2;&#x7ECF;&#x590D;&#x5236;&#x5B8C;&#x6BD5;&#xFF0C;&#x7EDD;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x53EA;&#x590D;&#x5236;&#x4E86;&#x4E00;&#x90E8;&#x5206; &#x7684;&#x60C5;&#x51B5;&#x3002;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x5728;&#x51C6;&#x5907;&#x597D;&#x5143;&#x7D20;&#x503C;&#x7684;&#x526F;&#x672C;&#x4E4B;&#x540E;&#xFF0C;&#x4E00;&#x5B9A;&#x4F1A;&#x5220;&#x9664;&#x6389;&#x901A;&#x9053;&#x4E2D;&#x7684;&#x539F;&#x503C;&#xFF0C;&#x7EDD;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x901A;&#x9053;&#x4E2D;&#x4ECD;&#x6709;&#x6B8B;&#x7559;&#x7684;&#x60C5;&#x51B5;&#x3002; &#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x5728;&#x5B8C;&#x5168;&#x5B8C;&#x6210;&#x4E4B;&#x524D;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#x3002;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x4E5F;&#x662F;&#x5982;&#x6B64;&#x3002; &#x5143;&#x7D20;&#x503C;&#x4ECE;&#x5916;&#x754C;&#x8FDB;&#x5165;&#x901A;&#x9053;&#x65F6;&#x4F1A;&#x88AB;&#x590D;&#x5236;&#x3002;&#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#xFF0C;&#x8FDB;&#x5165;&#x901A;&#x9053;&#x7684;&#x5E76;&#x4E0D;&#x662F;&#x5728;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x7B26;&#x53F3;&#x8FB9;&#x7684;&#x90A3;&#x4E2A;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x800C;&#x662F;&#x5B83;&#x7684;&#x526F;&#x672C; &#x3002; &#x5BF9;&#x4E8E;&#x901A;&#x9053;&#x4E2D;&#x7684;&#x540C;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x503C;&#x6765;&#x8BF4;&#xFF0C;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x548C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x4E4B;&#x95F4;&#x4E5F;&#x662F;&#x4E92;&#x65A5;&#x7684;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x867D;&#x7136;&#x4F1A;&#x51FA;&#x73B0;&#xFF0C;&#x6B63;&#x5728;&#x88AB;&#x590D;&#x5236;&#x8FDB;&#x901A;&#x9053;&#x4F46;&#x8FD8;&#x672A;&#x590D;&#x5236;&#x5B8C;&#x6210;&#x7684;&#x5143;&#x7D20;&#x503C;&#xFF0C; &#x4F46;&#x662F;&#x8FD9;&#x65F6;&#x5B83;&#x7EDD;&#x4E0D;&#x4F1A;&#x88AB;&#x60F3;&#x63A5;&#x6536;&#x5B83;&#x7684;&#x4E00;&#x65B9;&#x770B;&#x5230;&#x548C;&#x53D6;&#x8D70; &#x3002; &#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x548C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x53EF;&#x80FD;&#x88AB;&#x957F;&#x65F6;&#x95F4;&#x7684;&#x963B;&#x585E; &#x9488;&#x5BF9; &#x7F13;&#x51B2;&#x901A;&#x9053; &#x7684;&#x60C5;&#x51B5;&#x3002;&#x5982;&#x679C;&#x901A;&#x9053;&#x5DF2;&#x6EE1;&#xFF0C;&#x90A3;&#x4E48;&#x5BF9;&#x5B83;&#x7684;&#x6240;&#x6709;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x90FD;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x901A;&#x9053;&#x4E2D;&#x6709;&#x5143;&#x7D20;&#x503C;&#x88AB;&#x63A5;&#x6536;&#x8D70;&#x3002;&#x76F8;&#x5BF9;&#x7684;&#xFF0C;&#x5982;&#x679C;&#x901A;&#x9053;&#x5DF2;&#x7A7A;&#xFF0C; &#x90A3;&#x4E48;&#x5BF9;&#x5B83;&#x7684;&#x6240;&#x6709;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x90FD;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x901A;&#x9053;&#x4E2D;&#x6709;&#x65B0;&#x7684;&#x5143;&#x7D20;&#x503C;&#x51FA;&#x73B0;&#x3002;&#x8FD9;&#x65F6;&#xFF0C;&#x901A;&#x9053;&#x4F1A;&#x901A;&#x77E5;&#x6700;&#x65E9;&#x7B49;&#x5F85;&#x7684;&#x90A3;&#x4E2A;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x6240;&#x5728;&#x7684; goroutine&#xFF0C; &#x5E76;&#x4F7F;&#x5B83;&#x518D;&#x6B21;&#x6267;&#x884C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x3002; &#x5BF9;&#x4E8E; &#x975E;&#x7F13;&#x51B2;&#x901A;&#x9053; &#xFF0C;&#x60C5;&#x51B5;&#x8981;&#x7B80;&#x5355;&#x4E00;&#x4E9B;&#x3002;&#x65E0;&#x8BBA;&#x662F;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x8FD8;&#x662F;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#xFF0C;&#x4E00;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x5C31;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x914D;&#x5BF9;&#x7684;&#x64CD;&#x4F5C;&#x4E5F;&#x5F00;&#x59CB;&#x6267;&#x884C;&#xFF0C;&#x624D;&#x4F1A;&#x7EE7;&#x7EED;&#x4F20;&#x9012;&#x3002; &#x5BF9;&#x4E8E;&#x503C;&#x4E3A; nil &#x7684;&#x901A;&#x9053;&#xFF0C;&#x4E0D;&#x8BBA;&#x5B83;&#x7684;&#x5177;&#x4F53;&#x7C7B;&#x578B;&#x662F;&#x4EC0;&#x4E48;&#xFF0C;&#x5BF9;&#x5B83;&#x7684;&#x53D1;&#x9001;&#x64CD;&#x4F5C;&#x548C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x90FD;&#x4F1A;&#x6C38;&#x4E45;&#x5730;&#x5904;&#x4E8E;&#x963B;&#x585E;&#x72B6;&#x6001; &#x3002;&#x5B83;&#x4EEC;&#x6240;&#x5C5E;&#x7684; goroutine &#x4E2D;&#x7684;&#x4EFB;&#x4F55;&#x4EE3;&#x7801;&#xFF0C;&#x90FD;&#x4E0D;&#x518D;&#x4F1A;&#x88AB;&#x6267;&#x884C;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x7531;&#x4E8E;&#x901A;&#x9053;&#x7C7B;&#x578B;&#x662F;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x7684;&#x96F6;&#x503C;&#x5C31;&#x662F; nil &#x3002; &#x5F53;&#x6211;&#x4EEC;&#x53EA;&#x58F0;&#x660E;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x4F46;&#x6CA1; &#x6709;&#x7528; make &#x51FD;&#x6570;&#x5BF9;&#x5B83;&#x8FDB;&#x884C;&#x521D;&#x59CB;&#x5316;&#x65F6;&#xFF0C;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x5C31;&#x4F1A;&#x662F; nil &#x3002;&#x6211;&#x4EEC;&#x4E00;&#x5B9A;&#x4E0D;&#x8981;&#x5FD8;&#x8BB0;&#x521D;&#x59CB;&#x5316;&#x901A;&#x9053; &#xFF01; select &#x591A;&#x8DEF;&#x590D;&#x7528; select &#x8BED;&#x53E5;&#x662F;&#x4E13;&#x4E3A;&#x901A;&#x9053;&#x800C;&#x8BBE;&#x8BA1;&#x7684;&#xFF0C; &#x6240;&#x4EE5;&#x6BCF;&#x4E2A; case &#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x90FD;&#x53EA;&#x80FD;&#x5305;&#x542B;&#x64CD;&#x4F5C;&#x901A;&#x9053;&#x7684;&#x8868;&#x8FBE;&#x5F0F; &#xFF0C;&#x6BD4;&#x5982;&#x63A5;&#x6536;&#x8868;&#x8FBE;&#x5F0F;&#x3002; 1 2 3 4 5 6 7 8 select { case communication clause : ... case communication clause : ... default : /* &#x53EF;&#x9009; */ \t\t\t... } &#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A; channel &#x9700;&#x8981;&#x63A5;&#x53D7;&#x6D88;&#x606F;&#xFF0C;&#x5982;&#x679C;&#x7B2C;&#x4E00;&#x4E2A; channel &#x6CA1;&#x6709;&#x6D88;&#x606F;&#x53D1;&#x8FC7;&#x6765;&#xFF0C;&#x90A3;&#x4E48;&#x7A0B;&#x5E8F;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C;&#x7B2C;&#x4E8C;&#x4E2A; channel &#x7684;&#x6D88;&#x606F;&#x5C31;&#x4E5F; &#x65E0;&#x6CD5;&#x63A5;&#x6536;&#x4E86;&#x3002;&#x8FD9;&#x65F6;&#x5019;&#x5C31;&#x9700;&#x8981;&#x4F7F;&#x7528; select &#x591A;&#x8DEF;&#x590D;&#x7528;&#x3002; 1 2 3 4 5 6 7 8 9 10 select { case -ch1: ... case x := -ch2: \t\t\t... \t case ch3 - y: \t ...\t\t default : \t\t\t... } &#x6BCF;&#x4E00;&#x4E2A; case &#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x901A;&#x4FE1;&#x64CD;&#x4F5C;&#xFF0C;&#x53D1;&#x9001;&#x6216;&#x8005;&#x63A5;&#x6536;&#x3002; &#x5982;&#x679C;&#x6CA1;&#x6709; case &#x53EF;&#x8FD0;&#x884C;&#xFF0C;&#x5B83;&#x5C06;&#x963B;&#x585E;&#xFF0C;&#x76F4;&#x5230;&#x6709; case &#x53EF;&#x8FD0;&#x884C; &#x3002; &#x5982;&#x679C;&#x591A;&#x4E2A; case &#x540C;&#x65F6;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#xFF0C; select &#x4F1A; &#x968F;&#x673A; &#x5730;&#x9009;&#x62E9;&#x4E00;&#x4E2A;&#x6267;&#x884C;&#x3002; &#x4E3A;&#x4E86;&#x907F;&#x514D;&#x56E0;&#x4E3A;&#x53D1;&#x9001;&#x6216;&#x8005;&#x63A5;&#x6536;&#x5BFC;&#x81F4;&#x7684;&#x963B;&#x585E;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5F53; channel &#x6CA1;&#x6709;&#x51C6;&#x5907;&#x597D;&#x5199;&#x6216;&#x8005;&#x8BFB;&#x65F6;&#x3002; default &#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x5F53;&#x5176;&#x5B83;&#x7684;&#x64CD;&#x4F5C; &#x90FD;&#x4E0D;&#x80FD;&#x591F;&#x9A6C;&#x4E0A;&#x88AB;&#x5904;&#x7406;&#x65F6;&#x7A0B;&#x5E8F;&#x9700;&#x8981;&#x6267;&#x884C;&#x54EA;&#x4E9B;&#x903B;&#x8F91; &#x3002; &#x8D85;&#x65F6; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528; select &#x6765;&#x8BBE;&#x7F6E;&#x8D85;&#x65F6;&#xFF0C;&#x907F;&#x514D; goroutine &#x963B;&#x585E;&#x7684;&#x60C5;&#x51B5;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 func main () { \tc := make ( chan int ) \to := make ( chan bool ) \t go func () { \t\t for { \t\t\t select { \t\t\t\t case v := - c: \t\t\t\t\tfmt. println (v) \t\t\t\t case - time.After( 5 * time.Second): \t\t\t\t\tfmt. println ( timeout ) \t\t\t\t\to - true \t\t\t\t\t break \t\t\t} \t\t} \t}() \t- o } &#x4F7F;&#x7528; select &#x8BED;&#x53E5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x4E8B;&#x60C5; &#x5982;&#x679C;&#x52A0;&#x5165;&#x4E86;&#x9ED8;&#x8BA4;&#x5206;&#x652F;&#xFF0C;&#x90A3;&#x4E48;&#x65E0;&#x8BBA;&#x6D89;&#x53CA;&#x901A;&#x9053;&#x64CD;&#x4F5C;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#x662F;&#x5426;&#x6709;&#x963B;&#x585E;&#xFF0C; select &#x8BED;&#x53E5;&#x90FD;&#x4E0D;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#x3002;&#x5982;&#x679C;&#x90A3;&#x51E0;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x90FD;&#x963B;&#x585E;&#x4E86;&#xFF0C;&#x6216;&#x8005; &#x8BF4;&#x90FD;&#x6CA1;&#x6709;&#x6EE1;&#x8DB3;&#x6C42;&#x503C;&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x9ED8;&#x8BA4;&#x5206;&#x652F;&#x5C31;&#x4F1A;&#x88AB;&#x9009;&#x4E2D;&#x5E76;&#x6267;&#x884C;&#x3002; &#x5982;&#x679C;&#x6CA1;&#x6709;&#x52A0;&#x5165;&#x9ED8;&#x8BA4;&#x5206;&#x652F;&#xFF0C;&#x90A3;&#x4E48;&#x4E00;&#x65E6;&#x6240;&#x6709;&#x7684; case &#x8868;&#x8FBE;&#x5F0F;&#x90FD;&#x6CA1;&#x6709;&#x6EE1;&#x8DB3;&#x6C42;&#x503C;&#x6761;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48; select &#x8BED;&#x53E5;&#x5C31;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#x3002; &#x76F4;&#x5230;&#x81F3;&#x5C11;&#x6709;&#x4E00;&#x4E2A; case &#x8868;&#x8FBE;&#x5F0F;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x4E3A;&#x6B62;&#x3002; &#x8FD8;&#x8BB0;&#x5F97;&#x5417;&#xFF1F;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x4F1A;&#x56E0;&#x4E3A;&#x901A;&#x9053;&#x5173;&#x95ED;&#x4E86;&#xFF0C;&#x800C;&#x76F4;&#x63A5;&#x4ECE;&#x901A;&#x9053;&#x63A5;&#x6536;&#x5230;&#x4E00;&#x4E2A;&#x5176;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x7684;&#x96F6;&#x503C;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5728;&#x5F88;&#x591A;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x901A;&#x8FC7;&#x63A5;&#x6536;&#x8868;&#x8FBE;&#x5F0F; &#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x6765;&#x5224;&#x65AD;&#x901A;&#x9053;&#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5173;&#x95ED;&#x3002;&#x4E00;&#x65E6;&#x53D1;&#x73B0;&#x67D0;&#x4E2A;&#x901A;&#x9053;&#x5173;&#x95ED;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5E94;&#x8BE5;&#x53CA;&#x65F6;&#x5730;&#x5C4F;&#x853D;&#x6389;&#x5BF9;&#x5E94;&#x7684;&#x5206;&#x652F;&#x6216;&#x8005;&#x91C7;&#x53D6;&#x5176;&#x4ED6;&#x63AA;&#x65BD;&#x3002;&#x8FD9;&#x5BF9; &#x4E8E;&#x7A0B;&#x5E8F;&#x903B;&#x8F91;&#x548C;&#x7A0B;&#x5E8F;&#x6027;&#x80FD;&#x90FD;&#x662F;&#x6709;&#x597D;&#x5904;&#x7684;&#x3002; select &#x8BED;&#x53E5;&#x53EA;&#x80FD;&#x5BF9;&#x5176;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A; case &#x8868;&#x8FBE;&#x5F0F;&#x5404;&#x6C42;&#x503C;&#x4E00;&#x6B21;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x8FDE;&#x7EED;&#x6216;&#x5B9A;&#x65F6;&#x5730;&#x64CD;&#x4F5C;&#x5176;&#x4E2D;&#x7684;&#x901A;&#x9053;&#x7684;&#x8BDD;&#xFF0C;&#x5C31;&#x5F80;&#x5F80;&#x9700;&#x8981; &#x901A;&#x8FC7;&#x5728; for &#x8BED;&#x53E5;&#x4E2D;&#x5D4C;&#x5165; select &#x8BED;&#x53E5;&#x7684;&#x65B9;&#x5F0F;&#x5B9E;&#x73B0;&#x3002;&#x4F46;&#x8FD9;&#x65F6;&#x8981;&#x6CE8;&#x610F;&#xFF0C; &#x7B80;&#x5355;&#x5730;&#x5728; select &#x8BED;&#x53E5;&#x7684;&#x5206;&#x652F;&#x4E2D;&#x4F7F;&#x7528; break &#x8BED;&#x53E5;&#xFF0C;&#x53EA;&#x80FD;&#x7ED3; &#x675F;&#x5F53;&#x524D;&#x7684; select &#x8BED;&#x53E5;&#x7684;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x5E76;&#x4E0D;&#x4F1A;&#x5BF9;&#x5916;&#x5C42;&#x7684; for &#x8BED;&#x53E5;&#x4EA7;&#x751F;&#x4F5C;&#x7528;&#x3002;&#x8FD9;&#x79CD;&#x9519;&#x8BEF;&#x7684;&#x7528;&#x6CD5;&#x53EF;&#x80FD;&#x4F1A;&#x8BA9;&#x8FD9;&#x4E2A; for &#x8BED;&#x53E5;&#x65E0;&#x4F11;&#x6B62;&#x5730;&#x8FD0;&#x884C;&#x4E0B;&#x53BB; &#x3002; break &#x9000;&#x51FA;&#x5D4C;&#x5957;&#x5FAA;&#x73AF;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 I: \t for i := 0 ; i  2 ; i++ { \t\t for j := 0 ; j  5 ; j++ { \t\t\t if j == 2 { \t\t\t\t break I \t\t\t} \t\t\tfmt.Println( hello ) \t\t} \t\tfmt.Println( hi ) \t} 1 2 3 4 5 6 7 8 9 10 11 12 13 intChan := make ( chan int , 1 ) // &#x4E00;&#x79D2;&#x540E;&#x5173;&#x95ED;&#x901A;&#x9053;&#x3002; time.AfterFunc(time.Second, func () { close (intChan) }) select { case _, ok := -intChan: if !ok { fmt.Println( The candidate case is closed. ) break } fmt.Println( The candidate case is selected. ) } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801; select &#x8BED;&#x53E5;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x5019;&#x9009;&#x5206;&#x652F;&#xFF0C;&#x6211;&#x5728;&#x5176;&#x4E2D;&#x5229;&#x7528;&#x63A5;&#x6536;&#x8868;&#x8FBE;&#x5F0F;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x5BF9; intChan &#x901A;&#x9053;&#x662F;&#x5426;&#x5DF2;&#x5173;&#x95ED;&#x505A;&#x4E86;&#x5224;&#x65AD;&#xFF0C;&#x5E76;&#x5728; &#x5F97;&#x5230;&#x80AF;&#x5B9A;&#x7ED3;&#x679C;&#x540E;&#xFF0C;&#x901A;&#x8FC7; break &#x8BED;&#x53E5;&#x7ACB;&#x5373;&#x7ED3;&#x675F;&#x5F53;&#x524D; select &#x8BED;&#x53E5;&#x7684;&#x6267;&#x884C;&#x3002;"},"commands/build.html":{"title":"","path":"\\golang-learn\\commands\\build.html","body":"命令 工具 Go 命令： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 $ go Go is a tool for managing Go source code. Usage: go command [arguments] The commands are: build compile packages and dependencies clean remove object files and cached files doc show documentation for package or symbol env print Go environment information bug start a bug report fix update packages to use new APIs fmt gofmt (reformat) package sources generate generate Go files by processing source get download and install packages and dependencies install compile and install packages and dependencies list list packages run compile and run Go program test test packages tool run specified go tool version print Go version vet report likely mistakes in packages Use \"go help [command]\" for more information about a command . Additional help topics: c calling between Go and C buildmode build modes cache build and test caching filetype file types gopath GOPATH environment variable environment environment variables importpath import path syntax packages package lists testflag testing flags testfunc testing functions Use \"go help [topic]\" for more information about that topic. 下载包 使用 go get 命令下载一个包。如 go get github.com/golang/lint/golint 下载了 golint 包， src 目录下会有 github.com/golang/lint/golint 包目录。 bin 目录下可以看到 golint 可执行程序。 go get 本质上可以理解为首先第一步是通过源码工具 clone 代码到 src 下面，然后执行 go install 。 OPTIONS -u 保证每个包是最新版本。 构建包 主要用于编译代码，使用 go build 命令编译，命令行参数指定的每个包。 有两种情况： main 包， go build 将调用链接器在当前目录创建一个可执行程序，以导入路径的最后一段作为可执行程序的名字。 如果包是一个库，则忽略输出结果；这可以用于检测包是可以正确编译的。 被编译的包会被保存到 $GOPATH/pkg 目录下，目录路径和 src 目录路径对应，可执行程序被保存到 $GOPATH/bin 目录。 OPTIONS -o 指定输出的文件名，可以带上路径，例如 go build -o a/b/c -i 安装相应的包，编译并且 go install -a 更新全部已经是最新的包的，但是对标准包不适用 -n 把需要执行的编译命令打印出来，但是不执行，这样就可以很容易的知道底层是如何运行的 -p n 指定可以并行可运行的编译数目，默认是CPU数目 -race 开启编译的时候自动检测数据竞争的情况，目前只支持64位的机器 -v 打印出来我们正在编译的包名 -work 打印出来编译时候的临时文件夹名称，并且如果已经存在的话就不要删除 -x 打印出来执行的命令，其实就是和-n的结果类似，只是这个会执行 -ccflags &#39;arg list&#39; 传递参数给5c, 6c, 8c 调用 -compiler name 指定相应的编译器，gccgo还是gc -gccgoflags &#39;arg list&#39; 传递参数给gccgo编译连接调用 -gcflags &#39;arg list&#39; 传递参数给5g, 6g, 8g 调用 -installsuffix suffix 为了和默认的安装包区别开来，采用这个前缀来重新安装那些依赖的包，-race的时候默认已经是-installsuffix race,大家可以通过-n命令来验证 -ldflags &#39;flag list&#39; 传递参数给5l, 6l, 8l 调用 -tags &#39;tag list&#39; 设置在编译的时候可以适配的那些tag，详细的tag限制参考里面的 Build Constraints 运行 go run 命令实际上是结合了构建和运行的两个步骤。 install go install 命令和 go build 命令相似，不同的是 go install 会保存每个包的编译成果，并把 main 包生产的可执行程序放到 bin 目录， 这样就可以在任意目录执行编译好的命令。 clean go clean 用来移除当前源码包和关联源码包里面编译生成的文件。文件包括： 1 2 3 4 5 6 7 8 9 10 11 _obj/ 旧的object目录，由Makefiles遗留 _test/ 旧的test目录，由Makefiles遗留 _testmain.go 旧的gotest文件，由Makefiles遗留 test.out 旧的test记录，由Makefiles遗留 build.out 旧的test记录，由Makefiles遗留 *.[568ao] object文件，由Makefiles遗留 DIR(.exe) 由go build产生 DIR.test(.exe) 由go test -c产生 MAINFILE(.exe) 由go build MAINFILE.go产生 *.so 由 SWIG 产生 一般都是利用这个命令清除编译文件。 OPTIONS -i 清除关联的安装的包和可运行文件，也就是通过 go install 安装的文件 -n 把需要执行的清除命令打印出来，但是不执行，这样就可以很容易的知道底层是如何运行的 -r 循环的清除在 import 中引入的包 -x 打印出来执行的详细命令，其实就是 -n 打印的执行版本 go fmt go fmt 命令 它可以帮你格式化你写好的代码文件，使你写代码的时候不需要关心格式，你只需要在写完之后执行 go fmt 文件名.go ， 你的代码就被修改成了标准格式。 OPTIONS -l 显示那些需要格式化的文件 -w 把改写后的内容直接写入到文件中，而不是作为结果打印到标准输出。 -r 添加形如“a[b:len(a)] - a[b:]”的重写规则，方便我们做批量替换 -s 简化文件中的代码 -d 显示格式化前后的diff而不是写入文件，默认是 false -e 打印所有的语法错误到标准输出。如果不使用此标记，则只会打印不同行的前10个错误。 -cpuprofile 支持调试模式，写入相应的cpufile到指定的文件 包文档 注释 在代码中添加注释，用于生成文档。Go 中的文档注释一般是完整的句子， 第一行通常是摘要说明，以被注释者的名字开头。 注释中函数的参数或其它的标识符并不需要额外的引号或其它标记注明。例如 fmt.Fprintf 的文档注释： 1 2 3 // Fprintf formats according to a format specifier and writes to w. // It returns the number of bytes written and any write error encountered. func Fprintf (w io.Writer, format string , a ... interface ) ( int , error) 如果注释后仅跟着包声明语句，那注释对应整个包的文档。包文档注释只能有一个。可以在任意的源文件中。 但是如果包的注释较长，一般会放到一个叫做 doc.go 的源文件中。 go doc 命令 go doc 打印文档。 1 2 3 4 5 6 7 8 # 指定包 go doc time # 指定包成员 go doc time.Since # 一个方法 go doc time.Duration.Seconds godoc服务 godoc 服务提供可以相互交叉引用的 HTML 页面，godoc的 在线服务 。包含了成千上万的开源包的检索工具。 也可以在启动本地的 godoc 服务： 1 2 # 在工作区目录下运行 godoc -http :8080 然后访问 http://localhost:8000/pkg 。 内部包 Go 的构建工具对包含 internal 名字的路径段的包导入路径做了特殊处理。这种包叫 internal 包。如 net/http/internal/chunked 。 一个 internal 包只能被和 internal 目录有同一个父目录的包所导入。如： net/http/internal/chunked 只能被 net/http 包或者 net/http 下的包导入。 什么时候使用 internal 包？ 当我们并不想将内部的子包结构暴露出去。同时，我们可能还希望在内部子包之间共享一些通用的处理包时。 查询包 使用 go list 命令查询可用包的信息。如 go list github.com/go-sql-driver/mysql 1 2 3 4 5 6 7 8 9 10 11 # 列出工作区中的所有包 go list ... # 列出指定目录下的所有包 go list gopl.io/ch3/... # 某个主题相关的所有包 go list ...xml... # 获取包完整的元信息 -json 参数表示用JSON格式打印每个包的元信息 go list -json hash 查看 Go 相关环境变量 使用 go env 命令查看 Go 所有相关的环境变量。 版本 go version 查看go当前的版本"},"commands/build.html#命令":{"title":"&#x547D;&#x4EE4;","path":"\\golang-learn\\commands\\build.html#命令","body":""},"commands/build.html#工具":{"title":"&#x5DE5;&#x5177;","path":"\\golang-learn\\commands\\build.html#工具","body":"Go &#x547D;&#x4EE4;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 $ go Go is a tool for managing Go source code. Usage: go command [arguments] The commands are: build compile packages and dependencies clean remove object files and cached files doc show documentation for package or symbol env print Go environment information bug start a bug report fix update packages to use new APIs fmt gofmt (reformat) package sources generate generate Go files by processing source get download and install packages and dependencies install compile and install packages and dependencies list list packages run compile and run Go program test test packages tool run specified go tool version print Go version vet report likely mistakes in packages Use go help [command] for more information about a command . Additional help topics: c calling between Go and C buildmode build modes cache build and test caching filetype file types gopath GOPATH environment variable environment environment variables importpath import path syntax packages package lists testflag testing flags testfunc testing functions Use go help [topic] for more information about that topic. &#x4E0B;&#x8F7D;&#x5305; &#x4F7F;&#x7528; go get &#x547D;&#x4EE4;&#x4E0B;&#x8F7D;&#x4E00;&#x4E2A;&#x5305;&#x3002;&#x5982; go get github.com/golang/lint/golint &#x4E0B;&#x8F7D;&#x4E86; golint &#x5305;&#xFF0C; src &#x76EE;&#x5F55;&#x4E0B;&#x4F1A;&#x6709; github.com/golang/lint/golint &#x5305;&#x76EE;&#x5F55;&#x3002; bin &#x76EE;&#x5F55;&#x4E0B;&#x53EF;&#x4EE5;&#x770B;&#x5230; golint &#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x3002; go get &#x672C;&#x8D28;&#x4E0A;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x9996;&#x5148;&#x7B2C;&#x4E00;&#x6B65;&#x662F;&#x901A;&#x8FC7;&#x6E90;&#x7801;&#x5DE5;&#x5177; clone &#x4EE3;&#x7801;&#x5230; src &#x4E0B;&#x9762;&#xFF0C;&#x7136;&#x540E;&#x6267;&#x884C; go install &#x3002; OPTIONS -u &#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A;&#x5305;&#x662F;&#x6700;&#x65B0;&#x7248;&#x672C;&#x3002; &#x6784;&#x5EFA;&#x5305; &#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x7F16;&#x8BD1;&#x4EE3;&#x7801;&#xFF0C;&#x4F7F;&#x7528; go build &#x547D;&#x4EE4;&#x7F16;&#x8BD1;&#xFF0C;&#x547D;&#x4EE4;&#x884C;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x7684;&#x6BCF;&#x4E2A;&#x5305;&#x3002; &#x6709;&#x4E24;&#x79CD;&#x60C5;&#x51B5;&#xFF1A; main &#x5305;&#xFF0C; go build &#x5C06;&#x8C03;&#x7528;&#x94FE;&#x63A5;&#x5668;&#x5728;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#xFF0C;&#x4EE5;&#x5BFC;&#x5165;&#x8DEF;&#x5F84;&#x7684;&#x6700;&#x540E;&#x4E00;&#x6BB5;&#x4F5C;&#x4E3A;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x7684;&#x540D;&#x5B57;&#x3002; &#x5982;&#x679C;&#x5305;&#x662F;&#x4E00;&#x4E2A;&#x5E93;&#xFF0C;&#x5219;&#x5FFD;&#x7565;&#x8F93;&#x51FA;&#x7ED3;&#x679C;&#xFF1B;&#x8FD9;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x68C0;&#x6D4B;&#x5305;&#x662F;&#x53EF;&#x4EE5;&#x6B63;&#x786E;&#x7F16;&#x8BD1;&#x7684;&#x3002; &#x88AB;&#x7F16;&#x8BD1;&#x7684;&#x5305;&#x4F1A;&#x88AB;&#x4FDD;&#x5B58;&#x5230; $GOPATH/pkg &#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x76EE;&#x5F55;&#x8DEF;&#x5F84;&#x548C; src &#x76EE;&#x5F55;&#x8DEF;&#x5F84;&#x5BF9;&#x5E94;&#xFF0C;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x88AB;&#x4FDD;&#x5B58;&#x5230; $GOPATH/bin &#x76EE;&#x5F55;&#x3002; OPTIONS -o &#x6307;&#x5B9A;&#x8F93;&#x51FA;&#x7684;&#x6587;&#x4EF6;&#x540D;&#xFF0C;&#x53EF;&#x4EE5;&#x5E26;&#x4E0A;&#x8DEF;&#x5F84;&#xFF0C;&#x4F8B;&#x5982; go build -o a/b/c -i &#x5B89;&#x88C5;&#x76F8;&#x5E94;&#x7684;&#x5305;&#xFF0C;&#x7F16;&#x8BD1;&#x5E76;&#x4E14; go install -a &#x66F4;&#x65B0;&#x5168;&#x90E8;&#x5DF2;&#x7ECF;&#x662F;&#x6700;&#x65B0;&#x7684;&#x5305;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5BF9;&#x6807;&#x51C6;&#x5305;&#x4E0D;&#x9002;&#x7528; -n &#x628A;&#x9700;&#x8981;&#x6267;&#x884C;&#x7684;&#x7F16;&#x8BD1;&#x547D;&#x4EE4;&#x6253;&#x5370;&#x51FA;&#x6765;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x7684;&#x77E5;&#x9053;&#x5E95;&#x5C42;&#x662F;&#x5982;&#x4F55;&#x8FD0;&#x884C;&#x7684; -p n &#x6307;&#x5B9A;&#x53EF;&#x4EE5;&#x5E76;&#x884C;&#x53EF;&#x8FD0;&#x884C;&#x7684;&#x7F16;&#x8BD1;&#x6570;&#x76EE;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F;CPU&#x6570;&#x76EE; -race &#x5F00;&#x542F;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x81EA;&#x52A8;&#x68C0;&#x6D4B;&#x6570;&#x636E;&#x7ADE;&#x4E89;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x76EE;&#x524D;&#x53EA;&#x652F;&#x6301;64&#x4F4D;&#x7684;&#x673A;&#x5668; -v &#x6253;&#x5370;&#x51FA;&#x6765;&#x6211;&#x4EEC;&#x6B63;&#x5728;&#x7F16;&#x8BD1;&#x7684;&#x5305;&#x540D; -work &#x6253;&#x5370;&#x51FA;&#x6765;&#x7F16;&#x8BD1;&#x65F6;&#x5019;&#x7684;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x5939;&#x540D;&#x79F0;&#xFF0C;&#x5E76;&#x4E14;&#x5982;&#x679C;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x8BDD;&#x5C31;&#x4E0D;&#x8981;&#x5220;&#x9664; -x &#x6253;&#x5370;&#x51FA;&#x6765;&#x6267;&#x884C;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x548C;-n&#x7684;&#x7ED3;&#x679C;&#x7C7B;&#x4F3C;&#xFF0C;&#x53EA;&#x662F;&#x8FD9;&#x4E2A;&#x4F1A;&#x6267;&#x884C; -ccflags &apos;arg list&apos; &#x4F20;&#x9012;&#x53C2;&#x6570;&#x7ED9;5c, 6c, 8c &#x8C03;&#x7528; -compiler name &#x6307;&#x5B9A;&#x76F8;&#x5E94;&#x7684;&#x7F16;&#x8BD1;&#x5668;&#xFF0C;gccgo&#x8FD8;&#x662F;gc -gccgoflags &apos;arg list&apos; &#x4F20;&#x9012;&#x53C2;&#x6570;&#x7ED9;gccgo&#x7F16;&#x8BD1;&#x8FDE;&#x63A5;&#x8C03;&#x7528; -gcflags &apos;arg list&apos; &#x4F20;&#x9012;&#x53C2;&#x6570;&#x7ED9;5g, 6g, 8g &#x8C03;&#x7528; -installsuffix suffix &#x4E3A;&#x4E86;&#x548C;&#x9ED8;&#x8BA4;&#x7684;&#x5B89;&#x88C5;&#x5305;&#x533A;&#x522B;&#x5F00;&#x6765;&#xFF0C;&#x91C7;&#x7528;&#x8FD9;&#x4E2A;&#x524D;&#x7F00;&#x6765;&#x91CD;&#x65B0;&#x5B89;&#x88C5;&#x90A3;&#x4E9B;&#x4F9D;&#x8D56;&#x7684;&#x5305;&#xFF0C;-race&#x7684;&#x65F6;&#x5019;&#x9ED8;&#x8BA4;&#x5DF2;&#x7ECF;&#x662F;-installsuffix race,&#x5927;&#x5BB6;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;-n&#x547D;&#x4EE4;&#x6765;&#x9A8C;&#x8BC1; -ldflags &apos;flag list&apos; &#x4F20;&#x9012;&#x53C2;&#x6570;&#x7ED9;5l, 6l, 8l &#x8C03;&#x7528; -tags &apos;tag list&apos; &#x8BBE;&#x7F6E;&#x5728;&#x7F16;&#x8BD1;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x9002;&#x914D;&#x7684;&#x90A3;&#x4E9B;tag&#xFF0C;&#x8BE6;&#x7EC6;&#x7684;tag&#x9650;&#x5236;&#x53C2;&#x8003;&#x91CC;&#x9762;&#x7684; Build Constraints &#x8FD0;&#x884C; go run &#x547D;&#x4EE4;&#x5B9E;&#x9645;&#x4E0A;&#x662F;&#x7ED3;&#x5408;&#x4E86;&#x6784;&#x5EFA;&#x548C;&#x8FD0;&#x884C;&#x7684;&#x4E24;&#x4E2A;&#x6B65;&#x9AA4;&#x3002; install go install &#x547D;&#x4EE4;&#x548C; go build &#x547D;&#x4EE4;&#x76F8;&#x4F3C;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x662F; go install &#x4F1A;&#x4FDD;&#x5B58;&#x6BCF;&#x4E2A;&#x5305;&#x7684;&#x7F16;&#x8BD1;&#x6210;&#x679C;&#xFF0C;&#x5E76;&#x628A; main &#x5305;&#x751F;&#x4EA7;&#x7684;&#x53EF;&#x6267;&#x884C;&#x7A0B;&#x5E8F;&#x653E;&#x5230; bin &#x76EE;&#x5F55;&#xFF0C; &#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x610F;&#x76EE;&#x5F55;&#x6267;&#x884C;&#x7F16;&#x8BD1;&#x597D;&#x7684;&#x547D;&#x4EE4;&#x3002; clean go clean &#x7528;&#x6765;&#x79FB;&#x9664;&#x5F53;&#x524D;&#x6E90;&#x7801;&#x5305;&#x548C;&#x5173;&#x8054;&#x6E90;&#x7801;&#x5305;&#x91CC;&#x9762;&#x7F16;&#x8BD1;&#x751F;&#x6210;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x6587;&#x4EF6;&#x5305;&#x62EC;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 _obj/ &#x65E7;&#x7684;object&#x76EE;&#x5F55;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; _test/ &#x65E7;&#x7684;test&#x76EE;&#x5F55;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; _testmain.go &#x65E7;&#x7684;gotest&#x6587;&#x4EF6;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; test.out &#x65E7;&#x7684;test&#x8BB0;&#x5F55;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; build.out &#x65E7;&#x7684;test&#x8BB0;&#x5F55;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; *.[568ao] object&#x6587;&#x4EF6;&#xFF0C;&#x7531;Makefiles&#x9057;&#x7559; DIR(.exe) &#x7531;go build&#x4EA7;&#x751F; DIR.test(.exe) &#x7531;go test -c&#x4EA7;&#x751F; MAINFILE(.exe) &#x7531;go build MAINFILE.go&#x4EA7;&#x751F; *.so &#x7531; SWIG &#x4EA7;&#x751F; &#x4E00;&#x822C;&#x90FD;&#x662F;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x547D;&#x4EE4;&#x6E05;&#x9664;&#x7F16;&#x8BD1;&#x6587;&#x4EF6;&#x3002; OPTIONS -i &#x6E05;&#x9664;&#x5173;&#x8054;&#x7684;&#x5B89;&#x88C5;&#x7684;&#x5305;&#x548C;&#x53EF;&#x8FD0;&#x884C;&#x6587;&#x4EF6;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x901A;&#x8FC7; go install &#x5B89;&#x88C5;&#x7684;&#x6587;&#x4EF6; -n &#x628A;&#x9700;&#x8981;&#x6267;&#x884C;&#x7684;&#x6E05;&#x9664;&#x547D;&#x4EE4;&#x6253;&#x5370;&#x51FA;&#x6765;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x7684;&#x77E5;&#x9053;&#x5E95;&#x5C42;&#x662F;&#x5982;&#x4F55;&#x8FD0;&#x884C;&#x7684; -r &#x5FAA;&#x73AF;&#x7684;&#x6E05;&#x9664;&#x5728; import &#x4E2D;&#x5F15;&#x5165;&#x7684;&#x5305; -x &#x6253;&#x5370;&#x51FA;&#x6765;&#x6267;&#x884C;&#x7684;&#x8BE6;&#x7EC6;&#x547D;&#x4EE4;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F; -n &#x6253;&#x5370;&#x7684;&#x6267;&#x884C;&#x7248;&#x672C; go fmt go fmt &#x547D;&#x4EE4; &#x5B83;&#x53EF;&#x4EE5;&#x5E2E;&#x4F60;&#x683C;&#x5F0F;&#x5316;&#x4F60;&#x5199;&#x597D;&#x7684;&#x4EE3;&#x7801;&#x6587;&#x4EF6;&#xFF0C;&#x4F7F;&#x4F60;&#x5199;&#x4EE3;&#x7801;&#x7684;&#x65F6;&#x5019;&#x4E0D;&#x9700;&#x8981;&#x5173;&#x5FC3;&#x683C;&#x5F0F;&#xFF0C;&#x4F60;&#x53EA;&#x9700;&#x8981;&#x5728;&#x5199;&#x5B8C;&#x4E4B;&#x540E;&#x6267;&#x884C; go fmt &#x6587;&#x4EF6;&#x540D;.go &#xFF0C; &#x4F60;&#x7684;&#x4EE3;&#x7801;&#x5C31;&#x88AB;&#x4FEE;&#x6539;&#x6210;&#x4E86;&#x6807;&#x51C6;&#x683C;&#x5F0F;&#x3002; OPTIONS -l &#x663E;&#x793A;&#x90A3;&#x4E9B;&#x9700;&#x8981;&#x683C;&#x5F0F;&#x5316;&#x7684;&#x6587;&#x4EF6; -w &#x628A;&#x6539;&#x5199;&#x540E;&#x7684;&#x5185;&#x5BB9;&#x76F4;&#x63A5;&#x5199;&#x5165;&#x5230;&#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C;&#x6253;&#x5370;&#x5230;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#x3002; -r &#x6DFB;&#x52A0;&#x5F62;&#x5982;&#x201C;a[b:len(a)] - a[b:]&#x201D;&#x7684;&#x91CD;&#x5199;&#x89C4;&#x5219;&#xFF0C;&#x65B9;&#x4FBF;&#x6211;&#x4EEC;&#x505A;&#x6279;&#x91CF;&#x66FF;&#x6362; -s &#x7B80;&#x5316;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x4EE3;&#x7801; -d &#x663E;&#x793A;&#x683C;&#x5F0F;&#x5316;&#x524D;&#x540E;&#x7684;diff&#x800C;&#x4E0D;&#x662F;&#x5199;&#x5165;&#x6587;&#x4EF6;&#xFF0C;&#x9ED8;&#x8BA4;&#x662F; false -e &#x6253;&#x5370;&#x6240;&#x6709;&#x7684;&#x8BED;&#x6CD5;&#x9519;&#x8BEF;&#x5230;&#x6807;&#x51C6;&#x8F93;&#x51FA;&#x3002;&#x5982;&#x679C;&#x4E0D;&#x4F7F;&#x7528;&#x6B64;&#x6807;&#x8BB0;&#xFF0C;&#x5219;&#x53EA;&#x4F1A;&#x6253;&#x5370;&#x4E0D;&#x540C;&#x884C;&#x7684;&#x524D;10&#x4E2A;&#x9519;&#x8BEF;&#x3002; -cpuprofile &#x652F;&#x6301;&#x8C03;&#x8BD5;&#x6A21;&#x5F0F;&#xFF0C;&#x5199;&#x5165;&#x76F8;&#x5E94;&#x7684;cpufile&#x5230;&#x6307;&#x5B9A;&#x7684;&#x6587;&#x4EF6; &#x5305;&#x6587;&#x6863; &#x6CE8;&#x91CA; &#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x6DFB;&#x52A0;&#x6CE8;&#x91CA;&#xFF0C;&#x7528;&#x4E8E;&#x751F;&#x6210;&#x6587;&#x6863;&#x3002;Go &#x4E2D;&#x7684;&#x6587;&#x6863;&#x6CE8;&#x91CA;&#x4E00;&#x822C;&#x662F;&#x5B8C;&#x6574;&#x7684;&#x53E5;&#x5B50;&#xFF0C; &#x7B2C;&#x4E00;&#x884C;&#x901A;&#x5E38;&#x662F;&#x6458;&#x8981;&#x8BF4;&#x660E;&#xFF0C;&#x4EE5;&#x88AB;&#x6CE8;&#x91CA;&#x8005;&#x7684;&#x540D;&#x5B57;&#x5F00;&#x5934;&#x3002; &#x6CE8;&#x91CA;&#x4E2D;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x6216;&#x5176;&#x5B83;&#x7684;&#x6807;&#x8BC6;&#x7B26;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x989D;&#x5916;&#x7684;&#x5F15;&#x53F7;&#x6216;&#x5176;&#x5B83;&#x6807;&#x8BB0;&#x6CE8;&#x660E;&#x3002;&#x4F8B;&#x5982; fmt.Fprintf &#x7684;&#x6587;&#x6863;&#x6CE8;&#x91CA;&#xFF1A; 1 2 3 // Fprintf formats according to a format specifier and writes to w. // It returns the number of bytes written and any write error encountered. func Fprintf (w io.Writer, format string , a ... interface {}) ( int , error) &#x5982;&#x679C;&#x6CE8;&#x91CA;&#x540E;&#x4EC5;&#x8DDF;&#x7740;&#x5305;&#x58F0;&#x660E;&#x8BED;&#x53E5;&#xFF0C;&#x90A3;&#x6CE8;&#x91CA;&#x5BF9;&#x5E94;&#x6574;&#x4E2A;&#x5305;&#x7684;&#x6587;&#x6863;&#x3002;&#x5305;&#x6587;&#x6863;&#x6CE8;&#x91CA;&#x53EA;&#x80FD;&#x6709;&#x4E00;&#x4E2A;&#x3002;&#x53EF;&#x4EE5;&#x5728;&#x4EFB;&#x610F;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x3002; &#x4F46;&#x662F;&#x5982;&#x679C;&#x5305;&#x7684;&#x6CE8;&#x91CA;&#x8F83;&#x957F;&#xFF0C;&#x4E00;&#x822C;&#x4F1A;&#x653E;&#x5230;&#x4E00;&#x4E2A;&#x53EB;&#x505A; doc.go &#x7684;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x3002; go doc &#x547D;&#x4EE4; go doc &#x6253;&#x5370;&#x6587;&#x6863;&#x3002; 1 2 3 4 5 6 7 8 # &#x6307;&#x5B9A;&#x5305; go doc time # &#x6307;&#x5B9A;&#x5305;&#x6210;&#x5458; go doc time.Since # &#x4E00;&#x4E2A;&#x65B9;&#x6CD5; go doc time.Duration.Seconds godoc&#x670D;&#x52A1; godoc &#x670D;&#x52A1;&#x63D0;&#x4F9B;&#x53EF;&#x4EE5;&#x76F8;&#x4E92;&#x4EA4;&#x53C9;&#x5F15;&#x7528;&#x7684; HTML &#x9875;&#x9762;&#xFF0C;godoc&#x7684; &#x5728;&#x7EBF;&#x670D;&#x52A1; &#x3002;&#x5305;&#x542B;&#x4E86;&#x6210;&#x5343;&#x4E0A;&#x4E07;&#x7684;&#x5F00;&#x6E90;&#x5305;&#x7684;&#x68C0;&#x7D22;&#x5DE5;&#x5177;&#x3002; &#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x542F;&#x52A8;&#x672C;&#x5730;&#x7684; godoc &#x670D;&#x52A1;&#xFF1A; 1 2 # &#x5728;&#x5DE5;&#x4F5C;&#x533A;&#x76EE;&#x5F55;&#x4E0B;&#x8FD0;&#x884C; godoc -http :8080 &#x7136;&#x540E;&#x8BBF;&#x95EE; http://localhost:8000/pkg &#x3002; &#x5185;&#x90E8;&#x5305; Go &#x7684;&#x6784;&#x5EFA;&#x5DE5;&#x5177;&#x5BF9;&#x5305;&#x542B; internal &#x540D;&#x5B57;&#x7684;&#x8DEF;&#x5F84;&#x6BB5;&#x7684;&#x5305;&#x5BFC;&#x5165;&#x8DEF;&#x5F84;&#x505A;&#x4E86;&#x7279;&#x6B8A;&#x5904;&#x7406;&#x3002;&#x8FD9;&#x79CD;&#x5305;&#x53EB; internal &#x5305;&#x3002;&#x5982; net/http/internal/chunked &#x3002; &#x4E00;&#x4E2A; internal &#x5305;&#x53EA;&#x80FD;&#x88AB;&#x548C; internal &#x76EE;&#x5F55;&#x6709;&#x540C;&#x4E00;&#x4E2A;&#x7236;&#x76EE;&#x5F55;&#x7684;&#x5305;&#x6240;&#x5BFC;&#x5165;&#x3002;&#x5982;&#xFF1A; net/http/internal/chunked &#x53EA;&#x80FD;&#x88AB; net/http &#x5305;&#x6216;&#x8005; net/http &#x4E0B;&#x7684;&#x5305;&#x5BFC;&#x5165;&#x3002; &#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x4F7F;&#x7528; internal &#x5305;&#xFF1F; &#x5F53;&#x6211;&#x4EEC;&#x5E76;&#x4E0D;&#x60F3;&#x5C06;&#x5185;&#x90E8;&#x7684;&#x5B50;&#x5305;&#x7ED3;&#x6784;&#x66B4;&#x9732;&#x51FA;&#x53BB;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x80FD;&#x8FD8;&#x5E0C;&#x671B;&#x5728;&#x5185;&#x90E8;&#x5B50;&#x5305;&#x4E4B;&#x95F4;&#x5171;&#x4EAB;&#x4E00;&#x4E9B;&#x901A;&#x7528;&#x7684;&#x5904;&#x7406;&#x5305;&#x65F6;&#x3002; &#x67E5;&#x8BE2;&#x5305; &#x4F7F;&#x7528; go list &#x547D;&#x4EE4;&#x67E5;&#x8BE2;&#x53EF;&#x7528;&#x5305;&#x7684;&#x4FE1;&#x606F;&#x3002;&#x5982; go list github.com/go-sql-driver/mysql 1 2 3 4 5 6 7 8 9 10 11 # &#x5217;&#x51FA;&#x5DE5;&#x4F5C;&#x533A;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x5305; go list ... # &#x5217;&#x51FA;&#x6307;&#x5B9A;&#x76EE;&#x5F55;&#x4E0B;&#x7684;&#x6240;&#x6709;&#x5305; go list gopl.io/ch3/... # &#x67D0;&#x4E2A;&#x4E3B;&#x9898;&#x76F8;&#x5173;&#x7684;&#x6240;&#x6709;&#x5305; go list ...xml... # &#x83B7;&#x53D6;&#x5305;&#x5B8C;&#x6574;&#x7684;&#x5143;&#x4FE1;&#x606F; -json &#x53C2;&#x6570;&#x8868;&#x793A;&#x7528;JSON&#x683C;&#x5F0F;&#x6253;&#x5370;&#x6BCF;&#x4E2A;&#x5305;&#x7684;&#x5143;&#x4FE1;&#x606F; go list -json hash &#x67E5;&#x770B; Go &#x76F8;&#x5173;&#x73AF;&#x5883;&#x53D8;&#x91CF; &#x4F7F;&#x7528; go env &#x547D;&#x4EE4;&#x67E5;&#x770B; Go &#x6240;&#x6709;&#x76F8;&#x5173;&#x7684;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x3002; &#x7248;&#x672C; go version &#x67E5;&#x770B;go&#x5F53;&#x524D;&#x7684;&#x7248;&#x672C;"},"basic/test.html":{"title":"测试","path":"\\golang-learn\\basic\\test.html","body":"测试 go test 命令测试代码，包目录内，所有以 _test.go 为后缀名的源文件在执行 go build 时不会被构建成包的一部分， 它们是 go test 测试的一部分。 在 *_test.go 文件中，有三种类型的函数： 测试函数，测试程序的一些逻辑行为是否正确。 go test 命令会调用这些测试函数并报告测试结果是 PASS 或 FAIL 。 基准测试函数，衡量一些函数的性能。 go test 命令会多次运行基准函数以计算一个平均的执行时间。 示例函数，提供一个由编译器保证正确性的示例文档。 go test 会生成一个临时 main 包调用测试函数。 参数 -v ，打印每个测试函数的名字和运行时间。 -run ，指定一个正则表达式，只有匹配到的测试函数名才会被 go test 运行，如 go test -v -run=French|Canal 。 -cover ，测试覆盖率。 -bench ，运行基准测试。例如 go test -bench=. （如果在 Windows Powershell 环境下使用 go test -bench=. ） -c ，生成用于运行测试的可执行文件，但不执行它。这个可执行文件会被命名为 pkg.test ，其中的 pkg 即为被测试代码包的 导入路径的最后一个元素的名称。 -i ，安装/重新安装运行测试所需的依赖包，但不编译和运行测试代码。 -o ，指定用于运行测试的可执行文件的名称。追加该标记不会影响测试代码的运行，除非同时追加了标记 -c 或 -i 。 测试函数 测试函数必须导入 testing 包，并以 Test 为函数名前缀，后缀名必须以大写字母开头，并且参数列表中只应有一个 *testing.T 类型的参数声明 ： 1 2 3 func TestName (t *testing.T)  ...  t 参数用于报告测试失败和附加的日志信息。 t.Error 和 t.Errorf 打印错误日志。 t.Fatal 或 t.Fatalf 停止当前测试函数 go test 命令如果没有参数指定包那么将默认采用当前目录对应的包。 表格驱动测试在我们要创建一系列相同测试方式的测试用例时很有用。例如: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 func TestIsPalindrome (t *testing.T)  var tests = [] struct  input string want bool   \"\" , true ,  \"a\" , true ,  \"aa\" , true ,  \"ab\" , false ,  \"kayak\" , true ,  \"detartrated\" , true ,  \"A man, a plan, a canal: Panama\" , true ,  \"Evil I did dwell; lewd did I live.\" , true ,  \"Able was I ere I saw Elba\" , true ,  \"été\" , true ,  \"Et se resservir, ivresse reste.\" , true ,  \"palindrome\" , false , // non-palindrome  \"desserts\" , false , // semi-palindrome  for _, test := range tests  if got := IsPalindrome(test.input); got != test.want  t.Errorf( \"IsPalindrome(%q) = %v\" , test.input, got)    覆盖率 go test 命令中集成了测试覆盖率工具。 运行 go tool cover ： 1 2 3 4 5 6 7 $ go tool cover Usage of 'go tool cover' : Given a coverage profile produced by 'go test' : go test -coverprofile=c.out Open a web browser displaying annotated source code: go tool cover -html=c.out 添加 -coverprofile 参数，统计覆盖率数据，并将统计日志数据写入指定文件，如 go test -run=Coverage -coverprofile=c.out 。 -covermode=count 参数将在每个代码块插入一个计数器而不是布尔标志量。在统计结果中记录了每个块的执行次数， 这可以用于衡量哪些是被频繁执行的热点代码。 基准测试 测试函数必须导入 testing 包，并以 Benchmark 为函数名前缀，后缀名必须以大写字母开头，并且唯一参数的类型必须 是 *testing.B 类型的 ： 1 2 3 func BenchmarkName (b *testing.B)  ...  *testing.B 参数除了提供和 *testing.T 类似的方法，还有额外一些和性能测量相关的方法。 运行基准测试 运行基准测试需要使用 -bench 参数，指定要运行的基准测试函数。该参数是一个正则表达式，用于匹配要执行的基准测试函数的名字， 默认值是空的。 . 会匹配所有基准测试函数。 剖析 基准测试对于衡量特定操作的性能是有帮助的，Go 语言支持多种类型的剖析性能分析： CPU 剖析数据标识了最耗 CPU 时间的函数。 堆剖析则标识了最耗内存的语句。 阻塞剖析则记录阻塞 goroutine 最久的操作，例如系统调用、管道发送和接收，还有获取锁等。 1 2 3 $ go test -cpuprofile=cpu.out $ go test -blockprofile=block.out $ go test -memprofile=mem.out go tool pprof go tool pprof 命令可以用来分析上面的命令生成的数据。 示例函数 并以 Benchmark 为函数名前缀，示例函数没有函数参数和返回值： 1 2 3 func ExampleName ()  ...  三个用处: 作为文档，如 ExampleIsPalindrome 示例函数将是 IsPalindrome 函数文档的一部分。 go test 会运行示例函数测试。 提供 Go Playground，可以在浏览器中在线编辑和运行每个示例函数。 go test 命令执行的主要测试流程 go test 命令在开始运行时，会先做一些准备工作，比如，确定内部需要用到的命令，检查我们指定的代码包或源码文件的有效性， 以及判断我们给予的标记是否合法，等等。 在准备工作顺利完成之后，go test 命令就会针对每个被测代码包，依次地进行构建、执行包中符合要求的测试函数，清理临时文件， 打印测试结果。这就是通常情况下的主要测试流程。 对于每个被测代码包， go test 命令会 串行地执行测试流程中的每个步骤 。 但是，为了加快测试速度，它通常会并发地对多个被测代码包进行功能测试，只不过，在最后打印测试结果的时候，它会依照我们给定的 顺序逐个进行，这会让我们感觉到它是在完全串行地执行测试流程。 由于 并发的测试会让性能测试的结果存在偏差，所以性能测试一般都是串行进行的 。 功能测试的测试结果 1 2 $ go test puzzlers/article20/q2 ok puzzlers/article20/q2 (cached) (cached) 表明，由于测试代码与被测代码都没有任何变动，所以 go test 命令直接把之前缓存测试成功的结果打印出来了。 go 命令通常会缓存程序构建的结果，以便在将来的构建中重用。我们可以通过运行 go env GOCACHE 命令来查看缓存目录的路径。 运行 go clean -testcache 将会删除所有的测试结果缓存。不过，这样做肯定不会删除任何构建结果缓存。 设置环境变量 GODEBUG 的值也可以稍稍地改变 go 命令的缓存行为。比如，设置值为 gocacheverify=1 将会导致 go 命令绕 过任何的缓存数据，而真正地执行操作并重新生成所有结果，然后再去检查新的结果与现有的缓存数据是否一致。 性能测试的测试结果 1 2 3 4 5 6 7 $ go test -bench=. -run=^$ puzzlers/article20/q3 goos: darwin goarch: amd64 pkg: puzzlers/article20/q3 BenchmarkGetPrimes-8 500000 2314 ns/op PASS ok puzzlers/article20/q3 1.192s 第一个标记及其值为 -bench=. ，只有有了这个标记，命令才会进行性能测试 。该标记的值 . 表明需要执行任意名称的性能测试函数。 第二个标记及其值是 -run=^$ ，这个标记用于表明需要执行哪些功能测试函数，这同样也是以函数名称为依据的。该标记的值 ^$ 意味着： 只执行名称为空的功能测试函数，换句话说，不执行任何功能测试函数。 这两个标记的值都是正则表达式。实际上，它们只能以正则表达式为值。此外，如果运行 go test 命令的时候不加 -run 标记， 那么就会使它执行被测代码包中的所有功能测试函数。 测试结果，重点在倒数第三行的内容。 BenchmarkGetPrimes-8 被称为单个性能测试的名称，它表示命令执行了性能测试 函数 BenchmarkGetPrimes ，并且当时所用的最大 P 数量为 8。 最大 P 数量相当于可以同时运行 goroutine 的逻辑 CPU 的最大个数。这里的逻辑 CPU，也可以被称为 CPU 核心，但它并不等同 于计算机中真正的 CPU 核心，只是 Go 语言运行时系统内部的一个概念，代表着它同时运行 goroutine 的能力。 可以通过调用 runtime.GOMAXPROCS 函数改变最大 P 数量，也可以在运行 go test 命令时，加入标记 -cpu 来设置一个最大 P 数量 的列表，以供命令在多次测试时使用。 测试名称右边的是执行次数。 它指的是被测函数的执行次数，而不是性能测试函数的执行次数 。 -parallel 标记 该标记的作用是：设置同一个被测代码包中的功能测试函数的最大并发执行数。 该标记的默认值是测试运行时的最大 P 数量（这可以通过调用表达 式 runtime.GOMAXPROCS(0) 获得）。 对于功能测试，为了加快测试速度，命令通常会并发地测试多个被测代码包。但是，在默认情况下， 对于同一个被测代码包中的多个功 能测试函数，命令会串行地执行它们 。除非我们在一些功能测试函数中显式地调用 t.Parallel 方 法。 这个时候，这些包含了 t.Parallel 方法调用的功能测试函数就会被 go test 命令并发地执行，而并发执行的最大数量正是 由 -parallel 标记值决定的。要注意，同一个功能测试函数的多次执行之间一定是串行的。 性能测试函数中的计时器 testing.B 类型有这么几个指针方法： StartTimer 、 StopTimer 和 ResetTimer 。这些方法都是用于操作当前的性能测试函数 专属的计时器的。 这些字段用于记录：当前测试函数在当次执行过程中耗费的时间、分配的堆内存的字节数以及分配次数。 性能分析 Go 语言为程序开发者们提供了丰富的性能分析 API，和非常好用的标准工具。这些 API 主要存在于： runtime/pprof ； net/http/pprof ； runtime/trace ； 至于标准工具，主要有 go tool pprof 和 go tool trace 这两个。它们可以解析概要文件中的信息，并以人类易读的方式把这些 信息展示出来。 在 Go 语言中，用于分析程序性能的概要文件有三种，分别是： CPU 概要文件（CPU Profile）、内存概要文件（Mem Profile）和阻塞概 要文件（Block Profile） 。 CPU 概要文件，其中的每一段独立的概要信息都记录着，在进行某一次采样的那个时刻，CPU 上正在执行的 Go 代码。 内存概要文件，其中的每一段概要信息都记载着，在某个采样时刻，正在执行的 Go 代码以及堆内存的使用情况，这里包含已分配和已释放的 字节数量和对象数量。 阻塞概要文件，其中的每一段概要信息，都代表着 Go 程序中的一个 goroutine 阻塞事件。 程序对 CPU 概要信息进行采样 这需要用到 runtime/pprof 包中的 API。想让程序开始对 CPU 概要信息进行采样的时候，需要调用这个代码包中 的 StartCPUProfile 函数，而在停止采样的时候则需要调用该包中的 StopCPUProfile 函数。 设定内存概要信息的采样频率 针对内存概要信息的采样会按照一定比例收集 Go 程序在运行期间的堆内存使用情况。设定内存概要信息采样频率的方法很简单， 只要为 runtime.MemProfileRate 变量赋值即可。 这个变量的含义是，平均每分配多少个字节，就对堆内存的使用情况进行一次采样。如果把该变量的值设为0，那么，Go 语言运行时系统就 会完全停止对内存概要信息的采样。该变量的缺省值是 512 KB，也就是 512 千字节。 如果你要设定这个采样频率，那么越早设定越好，并且只应该设定一次，否则就可能会对 Go 语言运行时系统的采样工作，造成不良影响 。 比如，只在 main 函数的开始处设定一次。 当我们想获取内存概要信息的时候，还需要调用 runtime/pprof 包中的 WriteHeapProfile 函数。该函数会把收集好的内存概要信息， 写到我们指定的写入器中。 注意，我们通过 WriteHeapProfile 函数得到的内存概要信息并不是实时的，它是一个快照，是在最近一次的内存垃圾收集工作完成时产 生的 。如果你想要实时的信息，那么可以调用 runtime.ReadMemStats 函数。不过要特别注意，该函数会引起 Go 语言调度器的短暂停顿。 获取到阻塞概要信息 调用 runtime 包中的 SetBlockProfileRate 函数，即可对阻塞概要信息的采样频率进行设定。该函数有一个名叫 rate 的参数， 它是 int 类型的。 这个参数的含义是，只要发现一个阻塞事件的持续时间达到了多少个纳秒，就可以对其进行采样。如果这个参数的值小于或等于0，那么就意 味着 Go 语言运行时系统将会完全停止对阻塞概要信息的采样。 当我们需要获取阻塞概要信息的时候，需要先调用 runtime/pprof 包中的 Lookup 函数并传入参数值 “block”，从而得到一 个 *runtime/pprof.Profile 类型的值（以下简称Profile值）。在这之后，我们还需要调用这个 Profile 值的 WriteTo 方法， 以驱使它把概要信息写进我们指定的写入器中。 WriteTo 方法有两个参数，一个参数就是我们刚刚提到的写入器，它是 io.Writer 类型的。而另一个参数则是代表了概要信息 详细程度的 int 类型参数 debug 。 debug 参数主要的可选值有两个，即：0 和 1。当 debug 的值为 0 时，通过 WriteTo 方法写进写入器的概要信息仅会包含 go tool pprof 工具所需的内存地址，这些内存地址会以十六进制的形式展现出来。 当该值为 1 时，相应的包名、函数名、源码文件路径、代码行号等信息就都会作为注释被加入进去。另外， debug 为 0 时的概要信息， 会经由 protocol buffers 转换为字节流。而在 debug 为 1 的时候， WriteTo 方法输出的这些概要信息就是我们可以读懂 的普通文本了。 除此之外， debug 的值也可以是 2。这时，被输出的概要信息也会是普通的文本，并且通常会包含更多的细节。至于这些细节都包含了哪些 内容，那就要看们调用 runtime/pprof.Lookup 函数的时候传入的是什么样的参数值了。"},"basic/test.html#测试":{"title":"&#x6D4B;&#x8BD5;","path":"\\golang-learn\\basic\\test.html#测试","body":"go test &#x547D;&#x4EE4;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#xFF0C;&#x5305;&#x76EE;&#x5F55;&#x5185;&#xFF0C;&#x6240;&#x6709;&#x4EE5; _test.go &#x4E3A;&#x540E;&#x7F00;&#x540D;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x5728;&#x6267;&#x884C; go build &#x65F6;&#x4E0D;&#x4F1A;&#x88AB;&#x6784;&#x5EFA;&#x6210;&#x5305;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C; &#x5B83;&#x4EEC;&#x662F; go test &#x6D4B;&#x8BD5;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002; &#x5728; *_test.go &#x6587;&#x4EF6;&#x4E2D;&#xFF0C;&#x6709;&#x4E09;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x51FD;&#x6570;&#xFF1A; &#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x6D4B;&#x8BD5;&#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x4E9B;&#x903B;&#x8F91;&#x884C;&#x4E3A;&#x662F;&#x5426;&#x6B63;&#x786E;&#x3002; go test &#x547D;&#x4EE4;&#x4F1A;&#x8C03;&#x7528;&#x8FD9;&#x4E9B;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x5E76;&#x62A5;&#x544A;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x662F; PASS &#x6216; FAIL &#x3002; &#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x8861;&#x91CF;&#x4E00;&#x4E9B;&#x51FD;&#x6570;&#x7684;&#x6027;&#x80FD;&#x3002; go test &#x547D;&#x4EE4;&#x4F1A;&#x591A;&#x6B21;&#x8FD0;&#x884C;&#x57FA;&#x51C6;&#x51FD;&#x6570;&#x4EE5;&#x8BA1;&#x7B97;&#x4E00;&#x4E2A;&#x5E73;&#x5747;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x3002; &#x793A;&#x4F8B;&#x51FD;&#x6570;&#xFF0C;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x7531;&#x7F16;&#x8BD1;&#x5668;&#x4FDD;&#x8BC1;&#x6B63;&#x786E;&#x6027;&#x7684;&#x793A;&#x4F8B;&#x6587;&#x6863;&#x3002; go test &#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x4E34;&#x65F6; main &#x5305;&#x8C03;&#x7528;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002; &#x53C2;&#x6570; -v &#xFF0C;&#x6253;&#x5370;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x540D;&#x5B57;&#x548C;&#x8FD0;&#x884C;&#x65F6;&#x95F4;&#x3002; -run &#xFF0C;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x53EA;&#x6709;&#x5339;&#x914D;&#x5230;&#x7684;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x540D;&#x624D;&#x4F1A;&#x88AB; go test &#x8FD0;&#x884C;&#xFF0C;&#x5982; go test -v -run=French|Canal &#x3002; -cover &#xFF0C;&#x6D4B;&#x8BD5;&#x8986;&#x76D6;&#x7387;&#x3002; -bench &#xFF0C;&#x8FD0;&#x884C;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x3002;&#x4F8B;&#x5982; go test -bench=. &#xFF08;&#x5982;&#x679C;&#x5728; Windows Powershell &#x73AF;&#x5883;&#x4E0B;&#x4F7F;&#x7528; go test -bench=. &#xFF09; -c &#xFF0C;&#x751F;&#x6210;&#x7528;&#x4E8E;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x4E0D;&#x6267;&#x884C;&#x5B83;&#x3002;&#x8FD9;&#x4E2A;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x4F1A;&#x88AB;&#x547D;&#x540D;&#x4E3A; pkg.test &#xFF0C;&#x5176;&#x4E2D;&#x7684; pkg &#x5373;&#x4E3A;&#x88AB;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x5305;&#x7684; &#x5BFC;&#x5165;&#x8DEF;&#x5F84;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7684;&#x540D;&#x79F0;&#x3002; -i &#xFF0C;&#x5B89;&#x88C5;/&#x91CD;&#x65B0;&#x5B89;&#x88C5;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x6240;&#x9700;&#x7684;&#x4F9D;&#x8D56;&#x5305;&#xFF0C;&#x4F46;&#x4E0D;&#x7F16;&#x8BD1;&#x548C;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x3002; -o &#xFF0C;&#x6307;&#x5B9A;&#x7528;&#x4E8E;&#x8FD0;&#x884C;&#x6D4B;&#x8BD5;&#x7684;&#x53EF;&#x6267;&#x884C;&#x6587;&#x4EF6;&#x7684;&#x540D;&#x79F0;&#x3002;&#x8FFD;&#x52A0;&#x8BE5;&#x6807;&#x8BB0;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x7684;&#x8FD0;&#x884C;&#xFF0C;&#x9664;&#x975E;&#x540C;&#x65F6;&#x8FFD;&#x52A0;&#x4E86;&#x6807;&#x8BB0; -c &#x6216; -i &#x3002;"},"basic/test.html#测试函数":{"title":"&#x6D4B;&#x8BD5;&#x51FD;&#x6570;","path":"\\golang-learn\\basic\\test.html#测试函数","body":"&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x5FC5;&#x987B;&#x5BFC;&#x5165; testing &#x5305;&#xFF0C;&#x5E76;&#x4EE5; Test &#x4E3A;&#x51FD;&#x6570;&#x540D;&#x524D;&#x7F00;&#xFF0C;&#x540E;&#x7F00;&#x540D;&#x5FC5;&#x987B;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#xFF0C;&#x5E76;&#x4E14;&#x53C2;&#x6570;&#x5217;&#x8868;&#x4E2D;&#x53EA;&#x5E94;&#x6709;&#x4E00;&#x4E2A; *testing.T &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#x58F0;&#x660E; &#xFF1A; 1 2 3 func TestName (t *testing.T) { ... } t &#x53C2;&#x6570;&#x7528;&#x4E8E;&#x62A5;&#x544A;&#x6D4B;&#x8BD5;&#x5931;&#x8D25;&#x548C;&#x9644;&#x52A0;&#x7684;&#x65E5;&#x5FD7;&#x4FE1;&#x606F;&#x3002; t.Error &#x548C; t.Errorf &#x6253;&#x5370;&#x9519;&#x8BEF;&#x65E5;&#x5FD7;&#x3002; t.Fatal &#x6216; t.Fatalf &#x505C;&#x6B62;&#x5F53;&#x524D;&#x6D4B;&#x8BD5;&#x51FD;&#x6570; go test &#x547D;&#x4EE4;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x53C2;&#x6570;&#x6307;&#x5B9A;&#x5305;&#x90A3;&#x4E48;&#x5C06;&#x9ED8;&#x8BA4;&#x91C7;&#x7528;&#x5F53;&#x524D;&#x76EE;&#x5F55;&#x5BF9;&#x5E94;&#x7684;&#x5305;&#x3002; &#x8868;&#x683C;&#x9A71;&#x52A8;&#x6D4B;&#x8BD5;&#x5728;&#x6211;&#x4EEC;&#x8981;&#x521B;&#x5EFA;&#x4E00;&#x7CFB;&#x5217;&#x76F8;&#x540C;&#x6D4B;&#x8BD5;&#x65B9;&#x5F0F;&#x7684;&#x6D4B;&#x8BD5;&#x7528;&#x4F8B;&#x65F6;&#x5F88;&#x6709;&#x7528;&#x3002;&#x4F8B;&#x5982;: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 func TestIsPalindrome (t *testing.T) { var tests = [] struct { input string want bool }{ {  , true }, { a , true }, { aa , true }, { ab , false }, { kayak , true }, { detartrated , true }, { A man, a plan, a canal: Panama , true }, { Evil I did dwell; lewd did I live. , true }, { Able was I ere I saw Elba , true }, { &#xE9;t&#xE9; , true }, { Et se resservir, ivresse reste. , true }, { palindrome , false }, // non-palindrome { desserts , false }, // semi-palindrome } for _, test := range tests { if got := IsPalindrome(test.input); got != test.want { t.Errorf( IsPalindrome(%q) = %v , test.input, got) } } }"},"basic/test.html#覆盖率":{"title":"&#x8986;&#x76D6;&#x7387;","path":"\\golang-learn\\basic\\test.html#覆盖率","body":"go test &#x547D;&#x4EE4;&#x4E2D;&#x96C6;&#x6210;&#x4E86;&#x6D4B;&#x8BD5;&#x8986;&#x76D6;&#x7387;&#x5DE5;&#x5177;&#x3002; &#x8FD0;&#x884C; go tool cover &#xFF1A; 1 2 3 4 5 6 7 $ go tool cover Usage of &apos;go tool cover&apos; : Given a coverage profile produced by &apos;go test&apos; : go test -coverprofile=c.out Open a web browser displaying annotated source code: go tool cover -html=c.out &#x6DFB;&#x52A0; -coverprofile &#x53C2;&#x6570;&#xFF0C;&#x7EDF;&#x8BA1;&#x8986;&#x76D6;&#x7387;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x5C06;&#x7EDF;&#x8BA1;&#x65E5;&#x5FD7;&#x6570;&#x636E;&#x5199;&#x5165;&#x6307;&#x5B9A;&#x6587;&#x4EF6;&#xFF0C;&#x5982; go test -run=Coverage -coverprofile=c.out &#x3002; -covermode=count &#x53C2;&#x6570;&#x5C06;&#x5728;&#x6BCF;&#x4E2A;&#x4EE3;&#x7801;&#x5757;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#x800C;&#x4E0D;&#x662F;&#x5E03;&#x5C14;&#x6807;&#x5FD7;&#x91CF;&#x3002;&#x5728;&#x7EDF;&#x8BA1;&#x7ED3;&#x679C;&#x4E2D;&#x8BB0;&#x5F55;&#x4E86;&#x6BCF;&#x4E2A;&#x5757;&#x7684;&#x6267;&#x884C;&#x6B21;&#x6570;&#xFF0C; &#x8FD9;&#x53EF;&#x4EE5;&#x7528;&#x4E8E;&#x8861;&#x91CF;&#x54EA;&#x4E9B;&#x662F;&#x88AB;&#x9891;&#x7E41;&#x6267;&#x884C;&#x7684;&#x70ED;&#x70B9;&#x4EE3;&#x7801;&#x3002;"},"basic/test.html#基准测试":{"title":"&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;","path":"\\golang-learn\\basic\\test.html#基准测试","body":"&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x5FC5;&#x987B;&#x5BFC;&#x5165; testing &#x5305;&#xFF0C;&#x5E76;&#x4EE5; Benchmark &#x4E3A;&#x51FD;&#x6570;&#x540D;&#x524D;&#x7F00;&#xFF0C;&#x540E;&#x7F00;&#x540D;&#x5FC5;&#x987B;&#x4EE5;&#x5927;&#x5199;&#x5B57;&#x6BCD;&#x5F00;&#x5934;&#xFF0C;&#x5E76;&#x4E14;&#x552F;&#x4E00;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x5FC5;&#x987B; &#x662F; *testing.B &#x7C7B;&#x578B;&#x7684; &#xFF1A; 1 2 3 func BenchmarkName (b *testing.B) { ... } *testing.B &#x53C2;&#x6570;&#x9664;&#x4E86;&#x63D0;&#x4F9B;&#x548C; *testing.T &#x7C7B;&#x4F3C;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD8;&#x6709;&#x989D;&#x5916;&#x4E00;&#x4E9B;&#x548C;&#x6027;&#x80FD;&#x6D4B;&#x91CF;&#x76F8;&#x5173;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x8FD0;&#x884C;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5; &#x8FD0;&#x884C;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x9700;&#x8981;&#x4F7F;&#x7528; -bench &#x53C2;&#x6570;&#xFF0C;&#x6307;&#x5B9A;&#x8981;&#x8FD0;&#x884C;&#x7684;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002;&#x8BE5;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x7528;&#x4E8E;&#x5339;&#x914D;&#x8981;&#x6267;&#x884C;&#x7684;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x540D;&#x5B57;&#xFF0C; &#x9ED8;&#x8BA4;&#x503C;&#x662F;&#x7A7A;&#x7684;&#x3002; . &#x4F1A;&#x5339;&#x914D;&#x6240;&#x6709;&#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002; &#x5256;&#x6790; &#x57FA;&#x51C6;&#x6D4B;&#x8BD5;&#x5BF9;&#x4E8E;&#x8861;&#x91CF;&#x7279;&#x5B9A;&#x64CD;&#x4F5C;&#x7684;&#x6027;&#x80FD;&#x662F;&#x6709;&#x5E2E;&#x52A9;&#x7684;&#xFF0C;Go &#x8BED;&#x8A00;&#x652F;&#x6301;&#x591A;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x5256;&#x6790;&#x6027;&#x80FD;&#x5206;&#x6790;&#xFF1A; CPU &#x5256;&#x6790;&#x6570;&#x636E;&#x6807;&#x8BC6;&#x4E86;&#x6700;&#x8017; CPU &#x65F6;&#x95F4;&#x7684;&#x51FD;&#x6570;&#x3002; &#x5806;&#x5256;&#x6790;&#x5219;&#x6807;&#x8BC6;&#x4E86;&#x6700;&#x8017;&#x5185;&#x5B58;&#x7684;&#x8BED;&#x53E5;&#x3002; &#x963B;&#x585E;&#x5256;&#x6790;&#x5219;&#x8BB0;&#x5F55;&#x963B;&#x585E; goroutine &#x6700;&#x4E45;&#x7684;&#x64CD;&#x4F5C;&#xFF0C;&#x4F8B;&#x5982;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x3001;&#x7BA1;&#x9053;&#x53D1;&#x9001;&#x548C;&#x63A5;&#x6536;&#xFF0C;&#x8FD8;&#x6709;&#x83B7;&#x53D6;&#x9501;&#x7B49;&#x3002; 1 2 3 $ go test -cpuprofile=cpu.out $ go test -blockprofile=block.out $ go test -memprofile=mem.out go tool pprof go tool pprof &#x547D;&#x4EE4;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5206;&#x6790;&#x4E0A;&#x9762;&#x7684;&#x547D;&#x4EE4;&#x751F;&#x6210;&#x7684;&#x6570;&#x636E;&#x3002;"},"basic/test.html#示例函数":{"title":"&#x793A;&#x4F8B;&#x51FD;&#x6570;","path":"\\golang-learn\\basic\\test.html#示例函数","body":"&#x5E76;&#x4EE5; Benchmark &#x4E3A;&#x51FD;&#x6570;&#x540D;&#x524D;&#x7F00;&#xFF0C;&#x793A;&#x4F8B;&#x51FD;&#x6570;&#x6CA1;&#x6709;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#xFF1A; 1 2 3 func ExampleName () { ... } &#x4E09;&#x4E2A;&#x7528;&#x5904;: &#x4F5C;&#x4E3A;&#x6587;&#x6863;&#xFF0C;&#x5982; ExampleIsPalindrome &#x793A;&#x4F8B;&#x51FD;&#x6570;&#x5C06;&#x662F; IsPalindrome &#x51FD;&#x6570;&#x6587;&#x6863;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x3002; go test &#x4F1A;&#x8FD0;&#x884C;&#x793A;&#x4F8B;&#x51FD;&#x6570;&#x6D4B;&#x8BD5;&#x3002; &#x63D0;&#x4F9B; Go Playground&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x5728;&#x7EBF;&#x7F16;&#x8F91;&#x548C;&#x8FD0;&#x884C;&#x6BCF;&#x4E2A;&#x793A;&#x4F8B;&#x51FD;&#x6570;&#x3002;"},"basic/test.html#go-test-命令执行的主要测试流程":{"title":"go test &#x547D;&#x4EE4;&#x6267;&#x884C;&#x7684;&#x4E3B;&#x8981;&#x6D4B;&#x8BD5;&#x6D41;&#x7A0B;","path":"\\golang-learn\\basic\\test.html#go-test-命令执行的主要测试流程","body":"go test &#x547D;&#x4EE4;&#x5728;&#x5F00;&#x59CB;&#x8FD0;&#x884C;&#x65F6;&#xFF0C;&#x4F1A;&#x5148;&#x505A;&#x4E00;&#x4E9B;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#xFF0C;&#x6BD4;&#x5982;&#xFF0C;&#x786E;&#x5B9A;&#x5185;&#x90E8;&#x9700;&#x8981;&#x7528;&#x5230;&#x7684;&#x547D;&#x4EE4;&#xFF0C;&#x68C0;&#x67E5;&#x6211;&#x4EEC;&#x6307;&#x5B9A;&#x7684;&#x4EE3;&#x7801;&#x5305;&#x6216;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x7684;&#x6709;&#x6548;&#x6027;&#xFF0C; &#x4EE5;&#x53CA;&#x5224;&#x65AD;&#x6211;&#x4EEC;&#x7ED9;&#x4E88;&#x7684;&#x6807;&#x8BB0;&#x662F;&#x5426;&#x5408;&#x6CD5;&#xFF0C;&#x7B49;&#x7B49;&#x3002; &#x5728;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#x987A;&#x5229;&#x5B8C;&#x6210;&#x4E4B;&#x540E;&#xFF0C;go test &#x547D;&#x4EE4;&#x5C31;&#x4F1A;&#x9488;&#x5BF9;&#x6BCF;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#xFF0C;&#x4F9D;&#x6B21;&#x5730;&#x8FDB;&#x884C;&#x6784;&#x5EFA;&#x3001;&#x6267;&#x884C;&#x5305;&#x4E2D;&#x7B26;&#x5408;&#x8981;&#x6C42;&#x7684;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x6E05;&#x7406;&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#xFF0C; &#x6253;&#x5370;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x3002;&#x8FD9;&#x5C31;&#x662F;&#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x4E3B;&#x8981;&#x6D4B;&#x8BD5;&#x6D41;&#x7A0B;&#x3002; &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#xFF0C; go test &#x547D;&#x4EE4;&#x4F1A; &#x4E32;&#x884C;&#x5730;&#x6267;&#x884C;&#x6D4B;&#x8BD5;&#x6D41;&#x7A0B;&#x4E2D;&#x7684;&#x6BCF;&#x4E2A;&#x6B65;&#x9AA4; &#x3002; &#x4F46;&#x662F;&#xFF0C;&#x4E3A;&#x4E86;&#x52A0;&#x5FEB;&#x6D4B;&#x8BD5;&#x901F;&#x5EA6;&#xFF0C;&#x5B83;&#x901A;&#x5E38;&#x4F1A;&#x5E76;&#x53D1;&#x5730;&#x5BF9;&#x591A;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#x8FDB;&#x884C;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#xFF0C;&#x5728;&#x6700;&#x540E;&#x6253;&#x5370;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x4F1A;&#x4F9D;&#x7167;&#x6211;&#x4EEC;&#x7ED9;&#x5B9A;&#x7684; &#x987A;&#x5E8F;&#x9010;&#x4E2A;&#x8FDB;&#x884C;&#xFF0C;&#x8FD9;&#x4F1A;&#x8BA9;&#x6211;&#x4EEC;&#x611F;&#x89C9;&#x5230;&#x5B83;&#x662F;&#x5728;&#x5B8C;&#x5168;&#x4E32;&#x884C;&#x5730;&#x6267;&#x884C;&#x6D4B;&#x8BD5;&#x6D41;&#x7A0B;&#x3002; &#x7531;&#x4E8E; &#x5E76;&#x53D1;&#x7684;&#x6D4B;&#x8BD5;&#x4F1A;&#x8BA9;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x7684;&#x7ED3;&#x679C;&#x5B58;&#x5728;&#x504F;&#x5DEE;&#xFF0C;&#x6240;&#x4EE5;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x4E00;&#x822C;&#x90FD;&#x662F;&#x4E32;&#x884C;&#x8FDB;&#x884C;&#x7684; &#x3002;"},"basic/test.html#功能测试的测试结果":{"title":"&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x7684;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;","path":"\\golang-learn\\basic\\test.html#功能测试的测试结果","body":"1 2 $ go test puzzlers/article20/q2 ok puzzlers/article20/q2 (cached) (cached) &#x8868;&#x660E;&#xFF0C;&#x7531;&#x4E8E;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;&#x4E0E;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x90FD;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x53D8;&#x52A8;&#xFF0C;&#x6240;&#x4EE5; go test &#x547D;&#x4EE4;&#x76F4;&#x63A5;&#x628A;&#x4E4B;&#x524D;&#x7F13;&#x5B58;&#x6D4B;&#x8BD5;&#x6210;&#x529F;&#x7684;&#x7ED3;&#x679C;&#x6253;&#x5370;&#x51FA;&#x6765;&#x4E86;&#x3002; go &#x547D;&#x4EE4;&#x901A;&#x5E38;&#x4F1A;&#x7F13;&#x5B58;&#x7A0B;&#x5E8F;&#x6784;&#x5EFA;&#x7684;&#x7ED3;&#x679C;&#xFF0C;&#x4EE5;&#x4FBF;&#x5728;&#x5C06;&#x6765;&#x7684;&#x6784;&#x5EFA;&#x4E2D;&#x91CD;&#x7528;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8FD0;&#x884C; go env GOCACHE &#x547D;&#x4EE4;&#x6765;&#x67E5;&#x770B;&#x7F13;&#x5B58;&#x76EE;&#x5F55;&#x7684;&#x8DEF;&#x5F84;&#x3002; &#x8FD0;&#x884C; go clean -testcache &#x5C06;&#x4F1A;&#x5220;&#x9664;&#x6240;&#x6709;&#x7684;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#x7F13;&#x5B58;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x80AF;&#x5B9A;&#x4E0D;&#x4F1A;&#x5220;&#x9664;&#x4EFB;&#x4F55;&#x6784;&#x5EFA;&#x7ED3;&#x679C;&#x7F13;&#x5B58;&#x3002; &#x8BBE;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF; GODEBUG &#x7684;&#x503C;&#x4E5F;&#x53EF;&#x4EE5;&#x7A0D;&#x7A0D;&#x5730;&#x6539;&#x53D8; go &#x547D;&#x4EE4;&#x7684;&#x7F13;&#x5B58;&#x884C;&#x4E3A;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x8BBE;&#x7F6E;&#x503C;&#x4E3A; gocacheverify=1 &#x5C06;&#x4F1A;&#x5BFC;&#x81F4; go &#x547D;&#x4EE4;&#x7ED5; &#x8FC7;&#x4EFB;&#x4F55;&#x7684;&#x7F13;&#x5B58;&#x6570;&#x636E;&#xFF0C;&#x800C;&#x771F;&#x6B63;&#x5730;&#x6267;&#x884C;&#x64CD;&#x4F5C;&#x5E76;&#x91CD;&#x65B0;&#x751F;&#x6210;&#x6240;&#x6709;&#x7ED3;&#x679C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x53BB;&#x68C0;&#x67E5;&#x65B0;&#x7684;&#x7ED3;&#x679C;&#x4E0E;&#x73B0;&#x6709;&#x7684;&#x7F13;&#x5B58;&#x6570;&#x636E;&#x662F;&#x5426;&#x4E00;&#x81F4;&#x3002;"},"basic/test.html#性能测试的测试结果":{"title":"&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x7684;&#x6D4B;&#x8BD5;&#x7ED3;&#x679C;","path":"\\golang-learn\\basic\\test.html#性能测试的测试结果","body":"1 2 3 4 5 6 7 $ go test -bench=. -run=^$ puzzlers/article20/q3 goos: darwin goarch: amd64 pkg: puzzlers/article20/q3 BenchmarkGetPrimes-8 500000 2314 ns/op PASS ok puzzlers/article20/q3 1.192s &#x7B2C;&#x4E00;&#x4E2A;&#x6807;&#x8BB0;&#x53CA;&#x5176;&#x503C;&#x4E3A; -bench=. &#xFF0C;&#x53EA;&#x6709;&#x6709;&#x4E86;&#x8FD9;&#x4E2A;&#x6807;&#x8BB0;&#xFF0C;&#x547D;&#x4EE4;&#x624D;&#x4F1A;&#x8FDB;&#x884C;&#x6027;&#x80FD;&#x6D4B;&#x8BD5; &#x3002;&#x8BE5;&#x6807;&#x8BB0;&#x7684;&#x503C; . &#x8868;&#x660E;&#x9700;&#x8981;&#x6267;&#x884C;&#x4EFB;&#x610F;&#x540D;&#x79F0;&#x7684;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002; &#x7B2C;&#x4E8C;&#x4E2A;&#x6807;&#x8BB0;&#x53CA;&#x5176;&#x503C;&#x662F; -run=^$ &#xFF0C;&#x8FD9;&#x4E2A;&#x6807;&#x8BB0;&#x7528;&#x4E8E;&#x8868;&#x660E;&#x9700;&#x8981;&#x6267;&#x884C;&#x54EA;&#x4E9B;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x8FD9;&#x540C;&#x6837;&#x4E5F;&#x662F;&#x4EE5;&#x51FD;&#x6570;&#x540D;&#x79F0;&#x4E3A;&#x4F9D;&#x636E;&#x7684;&#x3002;&#x8BE5;&#x6807;&#x8BB0;&#x7684;&#x503C; ^$ &#x610F;&#x5473;&#x7740;&#xFF1A; &#x53EA;&#x6267;&#x884C;&#x540D;&#x79F0;&#x4E3A;&#x7A7A;&#x7684;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x4E0D;&#x6267;&#x884C;&#x4EFB;&#x4F55;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002; &#x8FD9;&#x4E24;&#x4E2A;&#x6807;&#x8BB0;&#x7684;&#x503C;&#x90FD;&#x662F;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5B83;&#x4EEC;&#x53EA;&#x80FD;&#x4EE5;&#x6B63;&#x5219;&#x8868;&#x8FBE;&#x5F0F;&#x4E3A;&#x503C;&#x3002;&#x6B64;&#x5916;&#xFF0C;&#x5982;&#x679C;&#x8FD0;&#x884C; go test &#x547D;&#x4EE4;&#x7684;&#x65F6;&#x5019;&#x4E0D;&#x52A0; -run &#x6807;&#x8BB0;&#xFF0C; &#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x4F7F;&#x5B83;&#x6267;&#x884C;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x3002; &#x6D4B;&#x8BD5;&#x7ED3;&#x679C;&#xFF0C;&#x91CD;&#x70B9;&#x5728;&#x5012;&#x6570;&#x7B2C;&#x4E09;&#x884C;&#x7684;&#x5185;&#x5BB9;&#x3002; BenchmarkGetPrimes-8 &#x88AB;&#x79F0;&#x4E3A;&#x5355;&#x4E2A;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x7684;&#x540D;&#x79F0;&#xFF0C;&#x5B83;&#x8868;&#x793A;&#x547D;&#x4EE4;&#x6267;&#x884C;&#x4E86;&#x6027;&#x80FD;&#x6D4B;&#x8BD5; &#x51FD;&#x6570; BenchmarkGetPrimes &#xFF0C;&#x5E76;&#x4E14;&#x5F53;&#x65F6;&#x6240;&#x7528;&#x7684;&#x6700;&#x5927; P &#x6570;&#x91CF;&#x4E3A; 8&#x3002; &#x6700;&#x5927; P &#x6570;&#x91CF;&#x76F8;&#x5F53;&#x4E8E;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8FD0;&#x884C; goroutine &#x7684;&#x903B;&#x8F91; CPU &#x7684;&#x6700;&#x5927;&#x4E2A;&#x6570;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x903B;&#x8F91; CPU&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x79F0;&#x4E3A; CPU &#x6838;&#x5FC3;&#xFF0C;&#x4F46;&#x5B83;&#x5E76;&#x4E0D;&#x7B49;&#x540C; &#x4E8E;&#x8BA1;&#x7B97;&#x673A;&#x4E2D;&#x771F;&#x6B63;&#x7684; CPU &#x6838;&#x5FC3;&#xFF0C;&#x53EA;&#x662F; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x5185;&#x90E8;&#x7684;&#x4E00;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x4EE3;&#x8868;&#x7740;&#x5B83;&#x540C;&#x65F6;&#x8FD0;&#x884C; goroutine &#x7684;&#x80FD;&#x529B;&#x3002; &#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528; runtime.GOMAXPROCS &#x51FD;&#x6570;&#x6539;&#x53D8;&#x6700;&#x5927; P &#x6570;&#x91CF;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5728;&#x8FD0;&#x884C; go test &#x547D;&#x4EE4;&#x65F6;&#xFF0C;&#x52A0;&#x5165;&#x6807;&#x8BB0; -cpu &#x6765;&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x6700;&#x5927; P &#x6570;&#x91CF; &#x7684;&#x5217;&#x8868;&#xFF0C;&#x4EE5;&#x4F9B;&#x547D;&#x4EE4;&#x5728;&#x591A;&#x6B21;&#x6D4B;&#x8BD5;&#x65F6;&#x4F7F;&#x7528;&#x3002; &#x6D4B;&#x8BD5;&#x540D;&#x79F0;&#x53F3;&#x8FB9;&#x7684;&#x662F;&#x6267;&#x884C;&#x6B21;&#x6570;&#x3002; &#x5B83;&#x6307;&#x7684;&#x662F;&#x88AB;&#x6D4B;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x6B21;&#x6570;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x6B21;&#x6570; &#x3002;"},"basic/test.html#parallel-标记":{"title":"-parallel &#x6807;&#x8BB0;","path":"\\golang-learn\\basic\\test.html#parallel-标记","body":"&#x8BE5;&#x6807;&#x8BB0;&#x7684;&#x4F5C;&#x7528;&#x662F;&#xFF1A;&#x8BBE;&#x7F6E;&#x540C;&#x4E00;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#x4E2D;&#x7684;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x6700;&#x5927;&#x5E76;&#x53D1;&#x6267;&#x884C;&#x6570;&#x3002; &#x8BE5;&#x6807;&#x8BB0;&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x662F;&#x6D4B;&#x8BD5;&#x8FD0;&#x884C;&#x65F6;&#x7684;&#x6700;&#x5927; P &#x6570;&#x91CF;&#xFF08;&#x8FD9;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x8868;&#x8FBE; &#x5F0F; runtime.GOMAXPROCS(0) &#x83B7;&#x5F97;&#xFF09;&#x3002; &#x5BF9;&#x4E8E;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#xFF0C;&#x4E3A;&#x4E86;&#x52A0;&#x5FEB;&#x6D4B;&#x8BD5;&#x901F;&#x5EA6;&#xFF0C;&#x547D;&#x4EE4;&#x901A;&#x5E38;&#x4F1A;&#x5E76;&#x53D1;&#x5730;&#x6D4B;&#x8BD5;&#x591A;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#x3002;&#x4F46;&#x662F;&#xFF0C;&#x5728;&#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C; &#x5BF9;&#x4E8E;&#x540C;&#x4E00;&#x4E2A;&#x88AB;&#x6D4B;&#x4EE3;&#x7801;&#x5305;&#x4E2D;&#x7684;&#x591A;&#x4E2A;&#x529F; &#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#xFF0C;&#x547D;&#x4EE4;&#x4F1A;&#x4E32;&#x884C;&#x5730;&#x6267;&#x884C;&#x5B83;&#x4EEC; &#x3002;&#x9664;&#x975E;&#x6211;&#x4EEC;&#x5728;&#x4E00;&#x4E9B;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x4E2D;&#x663E;&#x5F0F;&#x5730;&#x8C03;&#x7528; t.Parallel &#x65B9; &#x6CD5;&#x3002; &#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x8FD9;&#x4E9B;&#x5305;&#x542B;&#x4E86; t.Parallel &#x65B9;&#x6CD5;&#x8C03;&#x7528;&#x7684;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x5C31;&#x4F1A;&#x88AB; go test &#x547D;&#x4EE4;&#x5E76;&#x53D1;&#x5730;&#x6267;&#x884C;&#xFF0C;&#x800C;&#x5E76;&#x53D1;&#x6267;&#x884C;&#x7684;&#x6700;&#x5927;&#x6570;&#x91CF;&#x6B63;&#x662F; &#x7531; -parallel &#x6807;&#x8BB0;&#x503C;&#x51B3;&#x5B9A;&#x7684;&#x3002;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x540C;&#x4E00;&#x4E2A;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x7684;&#x591A;&#x6B21;&#x6267;&#x884C;&#x4E4B;&#x95F4;&#x4E00;&#x5B9A;&#x662F;&#x4E32;&#x884C;&#x7684;&#x3002;"},"basic/test.html#性能测试函数中的计时器":{"title":"&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x8BA1;&#x65F6;&#x5668;","path":"\\golang-learn\\basic\\test.html#性能测试函数中的计时器","body":"testing.B &#x7C7B;&#x578B;&#x6709;&#x8FD9;&#x4E48;&#x51E0;&#x4E2A;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#xFF1A; StartTimer &#x3001; StopTimer &#x548C; ResetTimer &#x3002;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x7528;&#x4E8E;&#x64CD;&#x4F5C;&#x5F53;&#x524D;&#x7684;&#x6027;&#x80FD;&#x6D4B;&#x8BD5;&#x51FD;&#x6570; &#x4E13;&#x5C5E;&#x7684;&#x8BA1;&#x65F6;&#x5668;&#x7684;&#x3002; &#x8FD9;&#x4E9B;&#x5B57;&#x6BB5;&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#xFF1A;&#x5F53;&#x524D;&#x6D4B;&#x8BD5;&#x51FD;&#x6570;&#x5728;&#x5F53;&#x6B21;&#x6267;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x8017;&#x8D39;&#x7684;&#x65F6;&#x95F4;&#x3001;&#x5206;&#x914D;&#x7684;&#x5806;&#x5185;&#x5B58;&#x7684;&#x5B57;&#x8282;&#x6570;&#x4EE5;&#x53CA;&#x5206;&#x914D;&#x6B21;&#x6570;&#x3002;"},"basic/test.html#性能分析":{"title":"&#x6027;&#x80FD;&#x5206;&#x6790;","path":"\\golang-learn\\basic\\test.html#性能分析","body":"Go &#x8BED;&#x8A00;&#x4E3A;&#x7A0B;&#x5E8F;&#x5F00;&#x53D1;&#x8005;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x4E30;&#x5BCC;&#x7684;&#x6027;&#x80FD;&#x5206;&#x6790; API&#xFF0C;&#x548C;&#x975E;&#x5E38;&#x597D;&#x7528;&#x7684;&#x6807;&#x51C6;&#x5DE5;&#x5177;&#x3002;&#x8FD9;&#x4E9B; API &#x4E3B;&#x8981;&#x5B58;&#x5728;&#x4E8E;&#xFF1A; runtime/pprof &#xFF1B; net/http/pprof &#xFF1B; runtime/trace &#xFF1B; &#x81F3;&#x4E8E;&#x6807;&#x51C6;&#x5DE5;&#x5177;&#xFF0C;&#x4E3B;&#x8981;&#x6709; go tool pprof &#x548C; go tool trace &#x8FD9;&#x4E24;&#x4E2A;&#x3002;&#x5B83;&#x4EEC;&#x53EF;&#x4EE5;&#x89E3;&#x6790;&#x6982;&#x8981;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x5E76;&#x4EE5;&#x4EBA;&#x7C7B;&#x6613;&#x8BFB;&#x7684;&#x65B9;&#x5F0F;&#x628A;&#x8FD9;&#x4E9B; &#x4FE1;&#x606F;&#x5C55;&#x793A;&#x51FA;&#x6765;&#x3002; &#x5728; Go &#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x7528;&#x4E8E;&#x5206;&#x6790;&#x7A0B;&#x5E8F;&#x6027;&#x80FD;&#x7684;&#x6982;&#x8981;&#x6587;&#x4EF6;&#x6709;&#x4E09;&#x79CD;&#xFF0C;&#x5206;&#x522B;&#x662F;&#xFF1A; CPU &#x6982;&#x8981;&#x6587;&#x4EF6;&#xFF08;CPU Profile&#xFF09;&#x3001;&#x5185;&#x5B58;&#x6982;&#x8981;&#x6587;&#x4EF6;&#xFF08;Mem Profile&#xFF09;&#x548C;&#x963B;&#x585E;&#x6982; &#x8981;&#x6587;&#x4EF6;&#xFF08;Block Profile&#xFF09; &#x3002; CPU &#x6982;&#x8981;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x6BB5;&#x72EC;&#x7ACB;&#x7684;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x90FD;&#x8BB0;&#x5F55;&#x7740;&#xFF0C;&#x5728;&#x8FDB;&#x884C;&#x67D0;&#x4E00;&#x6B21;&#x91C7;&#x6837;&#x7684;&#x90A3;&#x4E2A;&#x65F6;&#x523B;&#xFF0C;CPU &#x4E0A;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684; Go &#x4EE3;&#x7801;&#x3002; &#x5185;&#x5B58;&#x6982;&#x8981;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x6BB5;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x90FD;&#x8BB0;&#x8F7D;&#x7740;&#xFF0C;&#x5728;&#x67D0;&#x4E2A;&#x91C7;&#x6837;&#x65F6;&#x523B;&#xFF0C;&#x6B63;&#x5728;&#x6267;&#x884C;&#x7684; Go &#x4EE3;&#x7801;&#x4EE5;&#x53CA;&#x5806;&#x5185;&#x5B58;&#x7684;&#x4F7F;&#x7528;&#x60C5;&#x51B5;&#xFF0C;&#x8FD9;&#x91CC;&#x5305;&#x542B;&#x5DF2;&#x5206;&#x914D;&#x548C;&#x5DF2;&#x91CA;&#x653E;&#x7684; &#x5B57;&#x8282;&#x6570;&#x91CF;&#x548C;&#x5BF9;&#x8C61;&#x6570;&#x91CF;&#x3002; &#x963B;&#x585E;&#x6982;&#x8981;&#x6587;&#x4EF6;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x6BB5;&#x6982;&#x8981;&#x4FE1;&#x606F;&#xFF0C;&#x90FD;&#x4EE3;&#x8868;&#x7740; Go &#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x4E00;&#x4E2A; goroutine &#x963B;&#x585E;&#x4E8B;&#x4EF6;&#x3002; &#x7A0B;&#x5E8F;&#x5BF9; CPU &#x6982;&#x8981;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x91C7;&#x6837; &#x8FD9;&#x9700;&#x8981;&#x7528;&#x5230; runtime/pprof &#x5305;&#x4E2D;&#x7684; API&#x3002;&#x60F3;&#x8BA9;&#x7A0B;&#x5E8F;&#x5F00;&#x59CB;&#x5BF9; CPU &#x6982;&#x8981;&#x4FE1;&#x606F;&#x8FDB;&#x884C;&#x91C7;&#x6837;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x5305;&#x4E2D; &#x7684; StartCPUProfile &#x51FD;&#x6570;&#xFF0C;&#x800C;&#x5728;&#x505C;&#x6B62;&#x91C7;&#x6837;&#x7684;&#x65F6;&#x5019;&#x5219;&#x9700;&#x8981;&#x8C03;&#x7528;&#x8BE5;&#x5305;&#x4E2D;&#x7684; StopCPUProfile &#x51FD;&#x6570;&#x3002; &#x8BBE;&#x5B9A;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x91C7;&#x6837;&#x9891;&#x7387; &#x9488;&#x5BF9;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x91C7;&#x6837;&#x4F1A;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x6BD4;&#x4F8B;&#x6536;&#x96C6; Go &#x7A0B;&#x5E8F;&#x5728;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#x7684;&#x5806;&#x5185;&#x5B58;&#x4F7F;&#x7528;&#x60C5;&#x51B5;&#x3002;&#x8BBE;&#x5B9A;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x91C7;&#x6837;&#x9891;&#x7387;&#x7684;&#x65B9;&#x6CD5;&#x5F88;&#x7B80;&#x5355;&#xFF0C; &#x53EA;&#x8981;&#x4E3A; runtime.MemProfileRate &#x53D8;&#x91CF;&#x8D4B;&#x503C;&#x5373;&#x53EF;&#x3002; &#x8FD9;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x542B;&#x4E49;&#x662F;&#xFF0C;&#x5E73;&#x5747;&#x6BCF;&#x5206;&#x914D;&#x591A;&#x5C11;&#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x5C31;&#x5BF9;&#x5806;&#x5185;&#x5B58;&#x7684;&#x4F7F;&#x7528;&#x60C5;&#x51B5;&#x8FDB;&#x884C;&#x4E00;&#x6B21;&#x91C7;&#x6837;&#x3002;&#x5982;&#x679C;&#x628A;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x503C;&#x8BBE;&#x4E3A;0&#xFF0C;&#x90A3;&#x4E48;&#xFF0C;Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x5C31; &#x4F1A;&#x5B8C;&#x5168;&#x505C;&#x6B62;&#x5BF9;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x91C7;&#x6837;&#x3002;&#x8BE5;&#x53D8;&#x91CF;&#x7684;&#x7F3A;&#x7701;&#x503C;&#x662F; 512 KB&#xFF0C;&#x4E5F;&#x5C31;&#x662F; 512 &#x5343;&#x5B57;&#x8282;&#x3002; &#x5982;&#x679C;&#x4F60;&#x8981;&#x8BBE;&#x5B9A;&#x8FD9;&#x4E2A;&#x91C7;&#x6837;&#x9891;&#x7387;&#xFF0C;&#x90A3;&#x4E48;&#x8D8A;&#x65E9;&#x8BBE;&#x5B9A;&#x8D8A;&#x597D;&#xFF0C;&#x5E76;&#x4E14;&#x53EA;&#x5E94;&#x8BE5;&#x8BBE;&#x5B9A;&#x4E00;&#x6B21;&#xFF0C;&#x5426;&#x5219;&#x5C31;&#x53EF;&#x80FD;&#x4F1A;&#x5BF9; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x7684;&#x91C7;&#x6837;&#x5DE5;&#x4F5C;&#xFF0C;&#x9020;&#x6210;&#x4E0D;&#x826F;&#x5F71;&#x54CD; &#x3002; &#x6BD4;&#x5982;&#xFF0C;&#x53EA;&#x5728; main &#x51FD;&#x6570;&#x7684;&#x5F00;&#x59CB;&#x5904;&#x8BBE;&#x5B9A;&#x4E00;&#x6B21;&#x3002; &#x5F53;&#x6211;&#x4EEC;&#x60F3;&#x83B7;&#x53D6;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x9700;&#x8981;&#x8C03;&#x7528; runtime/pprof &#x5305;&#x4E2D;&#x7684; WriteHeapProfile &#x51FD;&#x6570;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x628A;&#x6536;&#x96C6;&#x597D;&#x7684;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#xFF0C; &#x5199;&#x5230;&#x6211;&#x4EEC;&#x6307;&#x5B9A;&#x7684;&#x5199;&#x5165;&#x5668;&#x4E2D;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x6211;&#x4EEC;&#x901A;&#x8FC7; WriteHeapProfile &#x51FD;&#x6570;&#x5F97;&#x5230;&#x7684;&#x5185;&#x5B58;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x5E76;&#x4E0D;&#x662F;&#x5B9E;&#x65F6;&#x7684;&#xFF0C;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x5FEB;&#x7167;&#xFF0C;&#x662F;&#x5728;&#x6700;&#x8FD1;&#x4E00;&#x6B21;&#x7684;&#x5185;&#x5B58;&#x5783;&#x573E;&#x6536;&#x96C6;&#x5DE5;&#x4F5C;&#x5B8C;&#x6210;&#x65F6;&#x4EA7; &#x751F;&#x7684; &#x3002;&#x5982;&#x679C;&#x4F60;&#x60F3;&#x8981;&#x5B9E;&#x65F6;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x8C03;&#x7528; runtime.ReadMemStats &#x51FD;&#x6570;&#x3002;&#x4E0D;&#x8FC7;&#x8981;&#x7279;&#x522B;&#x6CE8;&#x610F;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x5F15;&#x8D77; Go &#x8BED;&#x8A00;&#x8C03;&#x5EA6;&#x5668;&#x7684;&#x77ED;&#x6682;&#x505C;&#x987F;&#x3002; &#x83B7;&#x53D6;&#x5230;&#x963B;&#x585E;&#x6982;&#x8981;&#x4FE1;&#x606F; &#x8C03;&#x7528; runtime &#x5305;&#x4E2D;&#x7684; SetBlockProfileRate &#x51FD;&#x6570;&#xFF0C;&#x5373;&#x53EF;&#x5BF9;&#x963B;&#x585E;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x91C7;&#x6837;&#x9891;&#x7387;&#x8FDB;&#x884C;&#x8BBE;&#x5B9A;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x53EB; rate &#x7684;&#x53C2;&#x6570;&#xFF0C; &#x5B83;&#x662F; int &#x7C7B;&#x578B;&#x7684;&#x3002; &#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x542B;&#x4E49;&#x662F;&#xFF0C;&#x53EA;&#x8981;&#x53D1;&#x73B0;&#x4E00;&#x4E2A;&#x963B;&#x585E;&#x4E8B;&#x4EF6;&#x7684;&#x6301;&#x7EED;&#x65F6;&#x95F4;&#x8FBE;&#x5230;&#x4E86;&#x591A;&#x5C11;&#x4E2A;&#x7EB3;&#x79D2;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5BF9;&#x5176;&#x8FDB;&#x884C;&#x91C7;&#x6837;&#x3002;&#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x503C;&#x5C0F;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;0&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x610F; &#x5473;&#x7740; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x5C06;&#x4F1A;&#x5B8C;&#x5168;&#x505C;&#x6B62;&#x5BF9;&#x963B;&#x585E;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x91C7;&#x6837;&#x3002; &#x5F53;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x83B7;&#x53D6;&#x963B;&#x585E;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x5148;&#x8C03;&#x7528; runtime/pprof &#x5305;&#x4E2D;&#x7684; Lookup &#x51FD;&#x6570;&#x5E76;&#x4F20;&#x5165;&#x53C2;&#x6570;&#x503C; &#x201C;block&#x201D;&#xFF0C;&#x4ECE;&#x800C;&#x5F97;&#x5230;&#x4E00; &#x4E2A; *runtime/pprof.Profile &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;Profile&#x503C;&#xFF09;&#x3002;&#x5728;&#x8FD9;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x9700;&#x8981;&#x8C03;&#x7528;&#x8FD9;&#x4E2A; Profile &#x503C;&#x7684; WriteTo &#x65B9;&#x6CD5;&#xFF0C; &#x4EE5;&#x9A71;&#x4F7F;&#x5B83;&#x628A;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x5199;&#x8FDB;&#x6211;&#x4EEC;&#x6307;&#x5B9A;&#x7684;&#x5199;&#x5165;&#x5668;&#x4E2D;&#x3002; WriteTo &#x65B9;&#x6CD5;&#x6709;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x521A;&#x521A;&#x63D0;&#x5230;&#x7684;&#x5199;&#x5165;&#x5668;&#xFF0C;&#x5B83;&#x662F; io.Writer &#x7C7B;&#x578B;&#x7684;&#x3002;&#x800C;&#x53E6;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5219;&#x662F;&#x4EE3;&#x8868;&#x4E86;&#x6982;&#x8981;&#x4FE1;&#x606F; &#x8BE6;&#x7EC6;&#x7A0B;&#x5EA6;&#x7684; int &#x7C7B;&#x578B;&#x53C2;&#x6570; debug &#x3002; debug &#x53C2;&#x6570;&#x4E3B;&#x8981;&#x7684;&#x53EF;&#x9009;&#x503C;&#x6709;&#x4E24;&#x4E2A;&#xFF0C;&#x5373;&#xFF1A;0 &#x548C; 1&#x3002;&#x5F53; debug &#x7684;&#x503C;&#x4E3A; 0 &#x65F6;&#xFF0C;&#x901A;&#x8FC7; WriteTo &#x65B9;&#x6CD5;&#x5199;&#x8FDB;&#x5199;&#x5165;&#x5668;&#x7684;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x4EC5;&#x4F1A;&#x5305;&#x542B; go tool pprof &#x5DE5;&#x5177;&#x6240;&#x9700;&#x7684;&#x5185;&#x5B58;&#x5730;&#x5740;&#xFF0C;&#x8FD9;&#x4E9B;&#x5185;&#x5B58;&#x5730;&#x5740;&#x4F1A;&#x4EE5;&#x5341;&#x516D;&#x8FDB;&#x5236;&#x7684;&#x5F62;&#x5F0F;&#x5C55;&#x73B0;&#x51FA;&#x6765;&#x3002; &#x5F53;&#x8BE5;&#x503C;&#x4E3A; 1 &#x65F6;&#xFF0C;&#x76F8;&#x5E94;&#x7684;&#x5305;&#x540D;&#x3001;&#x51FD;&#x6570;&#x540D;&#x3001;&#x6E90;&#x7801;&#x6587;&#x4EF6;&#x8DEF;&#x5F84;&#x3001;&#x4EE3;&#x7801;&#x884C;&#x53F7;&#x7B49;&#x4FE1;&#x606F;&#x5C31;&#x90FD;&#x4F1A;&#x4F5C;&#x4E3A;&#x6CE8;&#x91CA;&#x88AB;&#x52A0;&#x5165;&#x8FDB;&#x53BB;&#x3002;&#x53E6;&#x5916;&#xFF0C; debug &#x4E3A; 0 &#x65F6;&#x7684;&#x6982;&#x8981;&#x4FE1;&#x606F;&#xFF0C; &#x4F1A;&#x7ECF;&#x7531; protocol buffers &#x8F6C;&#x6362;&#x4E3A;&#x5B57;&#x8282;&#x6D41;&#x3002;&#x800C;&#x5728; debug &#x4E3A; 1 &#x7684;&#x65F6;&#x5019;&#xFF0C; WriteTo &#x65B9;&#x6CD5;&#x8F93;&#x51FA;&#x7684;&#x8FD9;&#x4E9B;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BFB;&#x61C2; &#x7684;&#x666E;&#x901A;&#x6587;&#x672C;&#x4E86;&#x3002; &#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C; debug &#x7684;&#x503C;&#x4E5F;&#x53EF;&#x4EE5;&#x662F; 2&#x3002;&#x8FD9;&#x65F6;&#xFF0C;&#x88AB;&#x8F93;&#x51FA;&#x7684;&#x6982;&#x8981;&#x4FE1;&#x606F;&#x4E5F;&#x4F1A;&#x662F;&#x666E;&#x901A;&#x7684;&#x6587;&#x672C;&#xFF0C;&#x5E76;&#x4E14;&#x901A;&#x5E38;&#x4F1A;&#x5305;&#x542B;&#x66F4;&#x591A;&#x7684;&#x7EC6;&#x8282;&#x3002;&#x81F3;&#x4E8E;&#x8FD9;&#x4E9B;&#x7EC6;&#x8282;&#x90FD;&#x5305;&#x542B;&#x4E86;&#x54EA;&#x4E9B; &#x5185;&#x5BB9;&#xFF0C;&#x90A3;&#x5C31;&#x8981;&#x770B;&#x4EEC;&#x8C03;&#x7528; runtime/pprof.Lookup &#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#x4F20;&#x5165;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#x6837;&#x7684;&#x53C2;&#x6570;&#x503C;&#x4E86;&#x3002;"},"packages/io.html":{"title":"","path":"\\golang-learn\\packages\\io.html","body":"io包中的接口和工具 strings.Reader 类型主要用于读取字符串，它的指针类型实现的接口比较多，包括： io.Reader； io.ReaderAt； io.ByteReader； io.RuneReader； io.Seeker； io.ByteScanner； io.RuneScanner； io.WriterTo； io.ByteScanner 是 io.ByteReader 的扩展接口，而 io.RuneScanner 又是 io.RuneReader 的扩展接口。 bytes.Buffer 该指针类型实现的读取相关的接口有下面几个： io.Reader； io.ByteReader； io.RuneReader； io.ByteScanner； io.RuneScanner； io.WriterTo； 实现的写入相关的接口： io.Writer； io.ByteWriter； io.stringWriter； io.ReaderFrom； 这些类型实现了这么多的接口，目的是什么？ 为了提高不同程序实体之间的互操作性。以io包中的一些函数为例。 io包中，有这样几个用于拷贝数据的函数，它们是： io.Copy 、 io.CopyBuffer 和 io.CopyN 。这几个函数在功能上都略有差别，但是它们都首先会接受两个参数，即： 用于代表 数据目的地、 io.Writer 类型的参数 dst ，以及用于代表 数据来源的、 io.Reader 类型的参数 src 。大致上都是把数据从 src 拷贝到 dst 。 不论第一个参数值是什么类型的，只要这个类型实现了 io.Writer 接口即可 。同样的第二个参数值只要该类型实现了 io.Reader 接口就行。 很多数据类型实现了 io.Reader 接口，是因为它们提供了从某处读取数据的功能。类似的，许多能够把数据写入某处的数据类型，也都会去实现 io.Writer 接口。 io.Reader的扩展接口和实现类型 io.Reader 的扩展接口： io.ReadWriter ：此接口既是 io.Reader 的扩展接口，也是 io.Writer 的扩展接口。 io.ReadCloser ：此接口除了包含基本的字节序列读取方法之外，还拥有一个基本的关闭方法 Close 。后者一般用于关闭数据读写的通路。这个接口其实是 io.Reader 接口和 io.Closer 接口的组合。 io.ReadWriteCloser ： io.Reader 、 io.Writer 和 io.Closer 这三个接口的组合。 io.ReadSeeker ：此接口的特点是拥有一个用于寻找读写位置的基本方法 Seek 。更具体地说，该方法可以根据给定的偏移量基于数据的起始位置、末尾位置，或者当前读写 位置去寻找新的读写位置。这个新的读写位置用于表明下一次读或写时的起始索引。 Seek 是 io.Seeker 接口唯一拥有的方法。 io.ReadWriteSeeker ： io.Reader 、 io.Writer 和 io.Seeker 的组合。 io.Reader 接口的实现类型： *io.LimitedReader ：此类型的基本类型会包装 io.Reader 类型的值，并提供一个额外的受限读取的功能。。 *io.SectionReader ：此类型的基本类型可以包装 io.ReaderAt 类型的值，并且会限制它的 Read 方法，只能够读取原始数据中的某一个部分（或者说某一段）。 *io.teeReader ：此类型是一个包级私有的数据类型，也是io.TeeReader函数结果值的实际类型。这个函数接受两个参数r和w，类型分别是 io.Reader 和 io.Writer 。 io.multiReader ：此类型也是一个包级私有的数据类型。类似的，io包中有一个名为 MultiReader 的函数，它可以接受若干个 io.Reader 类型的参数值，并返回一个实 际类型为 io.multiReader 的结果值。 io.pipe ：此类型为一个包级私有的数据类型，它比上述类型都要复杂得多。它不但实现了 io.Reader 接口，而且还实现了 io.Writer 接口。 实际上， io.PipeReader 类型和 io.PipeWriter 类型拥有的所有指针方法都是以它为基础的。这些方法都只是代理了 io.pipe 类型值所拥有的某一个方法而已。 又因为 io.Pipe 函数会返回这两个类型的指针值并分别把它们作为其生成的同步内存管道的两端，所以可以说， *io.pipe 类型就是io包提供的同步内存管道的核心实现。 io.PipeReader ：此类型可以被视为 io.pipe 类型的代理类型。 bufio包中的数据类型 bufio包中的数据类型主要有： Reader ； Scanner ； Writer 和 ReadWriter 。 bufio.Reader 类型值中的缓冲区的作用 缓冲区其实就是一个 数据存储中介，它介于底层读取器与读取方法及其调用方之间 。所谓的底层读取器，就是在初始化此类值的时候传入的 io.Reader 类型的参数值。 Reader值的读取方法一般都会先从其所属值的缓冲区中读取数据。同时，在必要的时候，它们还会预先从底层读取器那里读出一部分数据，并暂存于缓冲区之中以备后用。 缓冲区的好处是，可以在大多数的时候降低读取方法的执行时间。 bufio.Reader 类型并不是开箱即用的，因为它包含了一些需要显式初始化的字段。一些字段： buf ： []byte 类型的字段，即字节切片，代表缓冲区。虽然它是切片类型的，但是其长度却会在初始化的时候指定，并在之后保持不变。 rd ： io.Reader 类型的字段，代表底层读取器。缓冲区中的数据就是从这里拷贝来的。 r ： int 类型的字段，代表对缓冲区进行下一次读取时的开始索引。我们可以称它为已读计数。 w ： int 类型的字段，代表对缓冲区进行下一次写入时的开始索引。我们可以称之为已写计数。 err ： error 类型的字段。它的值用于表示在从底层读取器获得数据时发生的错误。这里的值在被读取或忽略之后，该字段会被置为 nil 。 lastByte ： int 类型的字段，用于记录缓冲区中最后一个被读取的字节。读回退时会用到它的值。 lastRuneSize ： int 类型的字段，用于记录缓冲区中最后一个被读取的 Unicode 字符所占用的字节数。读回退的时候会用到它的值。这个字段只会在其所 属值的 ReadRune 方法中才会被赋予有意义的值。在其他情况下，它都会被置为 -1 。 两个用于初始化 Reader 值的函数，分别叫 NewReader 和 NewReaderSize ，它们都会返回一个 *bufio.Reader 类型的值。 NewReader 函数初始化的 Reade r值会拥有一个默认尺寸的缓冲区。这个默认尺寸是 4096 个字节，即：4 KB。 NewReaderSize 函数则将缓冲区尺寸的决定权抛给了使用方。 bufio.Writer类型值中缓冲的数据什么时候会被写到它的底层写入器 bufio.Writer 类型的字段: err ： error 类型的字段。它的值用于表示在向底层写入器写数据时发生的错误。 buf ： []byte 类型的字段，代表缓冲区。在初始化之后，它的长度会保持不变。 n ： int 类型的字段，代表对缓冲区进行下一次写入时的开始索引。我们可以称之为已写计数。 wr ： io.Writer 类型的字段，代表底层写入器。 bufio.Writer 类型有一个名为 Flush 的方法，它的主要功能是把相应缓冲区中暂存的所有数据，都写到底层写入器中。数据一旦被写进底层写入器，该方法就会把它们 从缓冲区中删除掉。 bufio.Writer 类型值（以下简称Writer值）拥有的所有数据写入方法都会在必要的时候调用它的 Flush 方法。 比如， Write 方法有时候会在把数据写进缓冲区之后，调用 Flush 方法，以便为后续的新数据腾出空间。 WriteString 方法的行为与之类似。 WriteByte 方法和 WriteRune 方法，都会在发现缓冲区中的可写空间不足以容纳新的字节，或 Unicode 字符的时候，调用 Flush 方法。 在 通常情况下，只要缓冲区中的可写空间无法容纳需要写入的新数据， Flush 方法就一定会被调用 。 bufio.Reader类型读取方法 bufio.Reader 类型拥有很多用于读取数据的指针方法，这里面有 4 个方法可以作为不同读取流程的代表，它们是： Peek 、 Read 、 ReadSlice 和 ReadBytes 。 Peek 方法的特点是即使读取了缓冲区中的数据，也不会更改已读计数的值。而 Read 方法会在参数值的长度过大，且缓冲区中已无未读字节时，跨过缓冲区并直接向底层读取器索要数据。 Peek 方法有一个鲜明的特点，那就是：即使它读取了缓冲区中的数据，也不会更改已读计数的值。 ReadSlice 方法会在缓冲区的未读部分中寻找给定的分隔符，并在必要时对缓冲区进行填充。如果在填满缓冲区之后仍然未能找到分隔符，那么该方法就会把整个缓冲区作为第一个结果值返回， 同时返回缓冲区已满的错误。 ReadBytes 方法会通过调用 ReadSlice 方法，一次又一次地填充缓冲区，并在其中寻找分隔符。除非发生了未预料到的错误或者找到了分隔符，否则这一过程将会一直进行下去。 Reader值的 ReadLine 方法会依赖于它的 ReadSlice 方法，而其 ReadString 方法则完全依赖于 ReadBytes 方法。 Peek 方法、 ReadSlice 方法和 ReadLine 方法都有可能会造成内容泄露。这主要是因为它们在正常的情况下都会返回直接基于缓冲区的字节切片 。"},"packages/io.html#io包中的接口和工具":{"title":"io&#x5305;&#x4E2D;&#x7684;&#x63A5;&#x53E3;&#x548C;&#x5DE5;&#x5177;","path":"\\golang-learn\\packages\\io.html#io包中的接口和工具","body":"strings.Reader &#x7C7B;&#x578B;&#x4E3B;&#x8981;&#x7528;&#x4E8E;&#x8BFB;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5B83;&#x7684;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x5B9E;&#x73B0;&#x7684;&#x63A5;&#x53E3;&#x6BD4;&#x8F83;&#x591A;&#xFF0C;&#x5305;&#x62EC;&#xFF1A; io.Reader&#xFF1B; io.ReaderAt&#xFF1B; io.ByteReader&#xFF1B; io.RuneReader&#xFF1B; io.Seeker&#xFF1B; io.ByteScanner&#xFF1B; io.RuneScanner&#xFF1B; io.WriterTo&#xFF1B; io.ByteScanner &#x662F; io.ByteReader &#x7684;&#x6269;&#x5C55;&#x63A5;&#x53E3;&#xFF0C;&#x800C; io.RuneScanner &#x53C8;&#x662F; io.RuneReader &#x7684;&#x6269;&#x5C55;&#x63A5;&#x53E3;&#x3002; bytes.Buffer &#x8BE5;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x5B9E;&#x73B0;&#x7684;&#x8BFB;&#x53D6;&#x76F8;&#x5173;&#x7684;&#x63A5;&#x53E3;&#x6709;&#x4E0B;&#x9762;&#x51E0;&#x4E2A;&#xFF1A; io.Reader&#xFF1B; io.ByteReader&#xFF1B; io.RuneReader&#xFF1B; io.ByteScanner&#xFF1B; io.RuneScanner&#xFF1B; io.WriterTo&#xFF1B; &#x5B9E;&#x73B0;&#x7684;&#x5199;&#x5165;&#x76F8;&#x5173;&#x7684;&#x63A5;&#x53E3;&#xFF1A; io.Writer&#xFF1B; io.ByteWriter&#xFF1B; io.stringWriter&#xFF1B; io.ReaderFrom&#xFF1B; &#x8FD9;&#x4E9B;&#x7C7B;&#x578B;&#x5B9E;&#x73B0;&#x4E86;&#x8FD9;&#x4E48;&#x591A;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x76EE;&#x7684;&#x662F;&#x4EC0;&#x4E48;&#xFF1F; &#x4E3A;&#x4E86;&#x63D0;&#x9AD8;&#x4E0D;&#x540C;&#x7A0B;&#x5E8F;&#x5B9E;&#x4F53;&#x4E4B;&#x95F4;&#x7684;&#x4E92;&#x64CD;&#x4F5C;&#x6027;&#x3002;&#x4EE5;io&#x5305;&#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x51FD;&#x6570;&#x4E3A;&#x4F8B;&#x3002; io&#x5305;&#x4E2D;&#xFF0C;&#x6709;&#x8FD9;&#x6837;&#x51E0;&#x4E2A;&#x7528;&#x4E8E;&#x62F7;&#x8D1D;&#x6570;&#x636E;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x4EEC;&#x662F;&#xFF1A; io.Copy &#x3001; io.CopyBuffer &#x548C; io.CopyN &#x3002;&#x8FD9;&#x51E0;&#x4E2A;&#x51FD;&#x6570;&#x5728;&#x529F;&#x80FD;&#x4E0A;&#x90FD;&#x7565;&#x6709;&#x5DEE;&#x522B;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x4EEC;&#x90FD;&#x9996;&#x5148;&#x4F1A;&#x63A5;&#x53D7;&#x4E24;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5373;&#xFF1A; &#x7528;&#x4E8E;&#x4EE3;&#x8868; &#x6570;&#x636E;&#x76EE;&#x7684;&#x5730;&#x3001; io.Writer &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570; dst &#xFF0C;&#x4EE5;&#x53CA;&#x7528;&#x4E8E;&#x4EE3;&#x8868; &#x6570;&#x636E;&#x6765;&#x6E90;&#x7684;&#x3001; io.Reader &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570; src &#x3002;&#x5927;&#x81F4;&#x4E0A;&#x90FD;&#x662F;&#x628A;&#x6570;&#x636E;&#x4ECE; src &#x62F7;&#x8D1D;&#x5230; dst &#x3002; &#x4E0D;&#x8BBA;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x503C;&#x662F;&#x4EC0;&#x4E48;&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x53EA;&#x8981;&#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x5B9E;&#x73B0;&#x4E86; io.Writer &#x63A5;&#x53E3;&#x5373;&#x53EF; &#x3002;&#x540C;&#x6837;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;&#x503C;&#x53EA;&#x8981;&#x8BE5;&#x7C7B;&#x578B;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x63A5;&#x53E3;&#x5C31;&#x884C;&#x3002; &#x5F88;&#x591A;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x63A5;&#x53E3;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x63D0;&#x4F9B;&#x4E86;&#x4ECE;&#x67D0;&#x5904;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x7684;&#x529F;&#x80FD;&#x3002;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;&#x8BB8;&#x591A;&#x80FD;&#x591F;&#x628A;&#x6570;&#x636E;&#x5199;&#x5165;&#x67D0;&#x5904;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x4E5F;&#x90FD;&#x4F1A;&#x53BB;&#x5B9E;&#x73B0; io.Writer &#x63A5;&#x53E3;&#x3002; io.Reader&#x7684;&#x6269;&#x5C55;&#x63A5;&#x53E3;&#x548C;&#x5B9E;&#x73B0;&#x7C7B;&#x578B; io.Reader &#x7684;&#x6269;&#x5C55;&#x63A5;&#x53E3;&#xFF1A; io.ReadWriter &#xFF1A;&#x6B64;&#x63A5;&#x53E3;&#x65E2;&#x662F; io.Reader &#x7684;&#x6269;&#x5C55;&#x63A5;&#x53E3;&#xFF0C;&#x4E5F;&#x662F; io.Writer &#x7684;&#x6269;&#x5C55;&#x63A5;&#x53E3;&#x3002; io.ReadCloser &#xFF1A;&#x6B64;&#x63A5;&#x53E3;&#x9664;&#x4E86;&#x5305;&#x542B;&#x57FA;&#x672C;&#x7684;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x8BFB;&#x53D6;&#x65B9;&#x6CD5;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x7684;&#x5173;&#x95ED;&#x65B9;&#x6CD5; Close &#x3002;&#x540E;&#x8005;&#x4E00;&#x822C;&#x7528;&#x4E8E;&#x5173;&#x95ED;&#x6570;&#x636E;&#x8BFB;&#x5199;&#x7684;&#x901A;&#x8DEF;&#x3002;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x5176;&#x5B9E;&#x662F; io.Reader &#x63A5;&#x53E3;&#x548C; io.Closer &#x63A5;&#x53E3;&#x7684;&#x7EC4;&#x5408;&#x3002; io.ReadWriteCloser &#xFF1A; io.Reader &#x3001; io.Writer &#x548C; io.Closer &#x8FD9;&#x4E09;&#x4E2A;&#x63A5;&#x53E3;&#x7684;&#x7EC4;&#x5408;&#x3002; io.ReadSeeker &#xFF1A;&#x6B64;&#x63A5;&#x53E3;&#x7684;&#x7279;&#x70B9;&#x662F;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x5BFB;&#x627E;&#x8BFB;&#x5199;&#x4F4D;&#x7F6E;&#x7684;&#x57FA;&#x672C;&#x65B9;&#x6CD5; Seek &#x3002;&#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x7ED9;&#x5B9A;&#x7684;&#x504F;&#x79FB;&#x91CF;&#x57FA;&#x4E8E;&#x6570;&#x636E;&#x7684;&#x8D77;&#x59CB;&#x4F4D;&#x7F6E;&#x3001;&#x672B;&#x5C3E;&#x4F4D;&#x7F6E;&#xFF0C;&#x6216;&#x8005;&#x5F53;&#x524D;&#x8BFB;&#x5199; &#x4F4D;&#x7F6E;&#x53BB;&#x5BFB;&#x627E;&#x65B0;&#x7684;&#x8BFB;&#x5199;&#x4F4D;&#x7F6E;&#x3002;&#x8FD9;&#x4E2A;&#x65B0;&#x7684;&#x8BFB;&#x5199;&#x4F4D;&#x7F6E;&#x7528;&#x4E8E;&#x8868;&#x660E;&#x4E0B;&#x4E00;&#x6B21;&#x8BFB;&#x6216;&#x5199;&#x65F6;&#x7684;&#x8D77;&#x59CB;&#x7D22;&#x5F15;&#x3002; Seek &#x662F; io.Seeker &#x63A5;&#x53E3;&#x552F;&#x4E00;&#x62E5;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#x3002; io.ReadWriteSeeker &#xFF1A; io.Reader &#x3001; io.Writer &#x548C; io.Seeker &#x7684;&#x7EC4;&#x5408;&#x3002; io.Reader &#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#x578B;&#xFF1A; *io.LimitedReader &#xFF1A;&#x6B64;&#x7C7B;&#x578B;&#x7684;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x4F1A;&#x5305;&#x88C5; io.Reader &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x5E76;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x989D;&#x5916;&#x7684;&#x53D7;&#x9650;&#x8BFB;&#x53D6;&#x7684;&#x529F;&#x80FD;&#x3002;&#x3002; *io.SectionReader &#xFF1A;&#x6B64;&#x7C7B;&#x578B;&#x7684;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x5305;&#x88C5; io.ReaderAt &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x5E76;&#x4E14;&#x4F1A;&#x9650;&#x5236;&#x5B83;&#x7684; Read &#x65B9;&#x6CD5;&#xFF0C;&#x53EA;&#x80FD;&#x591F;&#x8BFB;&#x53D6;&#x539F;&#x59CB;&#x6570;&#x636E;&#x4E2D;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#x90E8;&#x5206;&#xFF08;&#x6216;&#x8005;&#x8BF4;&#x67D0;&#x4E00;&#x6BB5;&#xFF09;&#x3002; *io.teeReader &#xFF1A;&#x6B64;&#x7C7B;&#x578B;&#x662F;&#x4E00;&#x4E2A;&#x5305;&#x7EA7;&#x79C1;&#x6709;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x4E5F;&#x662F;io.TeeReader&#x51FD;&#x6570;&#x7ED3;&#x679C;&#x503C;&#x7684;&#x5B9E;&#x9645;&#x7C7B;&#x578B;&#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x63A5;&#x53D7;&#x4E24;&#x4E2A;&#x53C2;&#x6570;r&#x548C;w&#xFF0C;&#x7C7B;&#x578B;&#x5206;&#x522B;&#x662F; io.Reader &#x548C; io.Writer &#x3002; io.multiReader &#xFF1A;&#x6B64;&#x7C7B;&#x578B;&#x4E5F;&#x662F;&#x4E00;&#x4E2A;&#x5305;&#x7EA7;&#x79C1;&#x6709;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x3002;&#x7C7B;&#x4F3C;&#x7684;&#xFF0C;io&#x5305;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; MultiReader &#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x82E5;&#x5E72;&#x4E2A; io.Reader &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#x503C;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5B9E; &#x9645;&#x7C7B;&#x578B;&#x4E3A; io.multiReader &#x7684;&#x7ED3;&#x679C;&#x503C;&#x3002; io.pipe &#xFF1A;&#x6B64;&#x7C7B;&#x578B;&#x4E3A;&#x4E00;&#x4E2A;&#x5305;&#x7EA7;&#x79C1;&#x6709;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x6BD4;&#x4E0A;&#x8FF0;&#x7C7B;&#x578B;&#x90FD;&#x8981;&#x590D;&#x6742;&#x5F97;&#x591A;&#x3002;&#x5B83;&#x4E0D;&#x4F46;&#x5B9E;&#x73B0;&#x4E86; io.Reader &#x63A5;&#x53E3;&#xFF0C;&#x800C;&#x4E14;&#x8FD8;&#x5B9E;&#x73B0;&#x4E86; io.Writer &#x63A5;&#x53E3;&#x3002; &#x5B9E;&#x9645;&#x4E0A;&#xFF0C; io.PipeReader &#x7C7B;&#x578B;&#x548C; io.PipeWriter &#x7C7B;&#x578B;&#x62E5;&#x6709;&#x7684;&#x6240;&#x6709;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x4EE5;&#x5B83;&#x4E3A;&#x57FA;&#x7840;&#x7684;&#x3002;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5;&#x90FD;&#x53EA;&#x662F;&#x4EE3;&#x7406;&#x4E86; io.pipe &#x7C7B;&#x578B;&#x503C;&#x6240;&#x62E5;&#x6709;&#x7684;&#x67D0;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x800C;&#x5DF2;&#x3002; &#x53C8;&#x56E0;&#x4E3A; io.Pipe &#x51FD;&#x6570;&#x4F1A;&#x8FD4;&#x56DE;&#x8FD9;&#x4E24;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x6307;&#x9488;&#x503C;&#x5E76;&#x5206;&#x522B;&#x628A;&#x5B83;&#x4EEC;&#x4F5C;&#x4E3A;&#x5176;&#x751F;&#x6210;&#x7684;&#x540C;&#x6B65;&#x5185;&#x5B58;&#x7BA1;&#x9053;&#x7684;&#x4E24;&#x7AEF;&#xFF0C;&#x6240;&#x4EE5;&#x53EF;&#x4EE5;&#x8BF4;&#xFF0C; *io.pipe &#x7C7B;&#x578B;&#x5C31;&#x662F;io&#x5305;&#x63D0;&#x4F9B;&#x7684;&#x540C;&#x6B65;&#x5185;&#x5B58;&#x7BA1;&#x9053;&#x7684;&#x6838;&#x5FC3;&#x5B9E;&#x73B0;&#x3002; io.PipeReader &#xFF1A;&#x6B64;&#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x88AB;&#x89C6;&#x4E3A; io.pipe &#x7C7B;&#x578B;&#x7684;&#x4EE3;&#x7406;&#x7C7B;&#x578B;&#x3002;"},"packages/io.html#bufio包中的数据类型":{"title":"bufio&#x5305;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;","path":"\\golang-learn\\packages\\io.html#bufio包中的数据类型","body":"bufio&#x5305;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x4E3B;&#x8981;&#x6709;&#xFF1A; Reader &#xFF1B; Scanner &#xFF1B; Writer &#x548C; ReadWriter &#x3002; bufio.Reader &#x7C7B;&#x578B;&#x503C;&#x4E2D;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x4F5C;&#x7528; &#x7F13;&#x51B2;&#x533A;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E00;&#x4E2A; &#x6570;&#x636E;&#x5B58;&#x50A8;&#x4E2D;&#x4ECB;&#xFF0C;&#x5B83;&#x4ECB;&#x4E8E;&#x5E95;&#x5C42;&#x8BFB;&#x53D6;&#x5668;&#x4E0E;&#x8BFB;&#x53D6;&#x65B9;&#x6CD5;&#x53CA;&#x5176;&#x8C03;&#x7528;&#x65B9;&#x4E4B;&#x95F4; &#x3002;&#x6240;&#x8C13;&#x7684;&#x5E95;&#x5C42;&#x8BFB;&#x53D6;&#x5668;&#xFF0C;&#x5C31;&#x662F;&#x5728;&#x521D;&#x59CB;&#x5316;&#x6B64;&#x7C7B;&#x503C;&#x7684;&#x65F6;&#x5019;&#x4F20;&#x5165;&#x7684; io.Reader &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#x503C;&#x3002; Reader&#x503C;&#x7684;&#x8BFB;&#x53D6;&#x65B9;&#x6CD5;&#x4E00;&#x822C;&#x90FD;&#x4F1A;&#x5148;&#x4ECE;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x5728;&#x5FC5;&#x8981;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x4EEC;&#x8FD8;&#x4F1A;&#x9884;&#x5148;&#x4ECE;&#x5E95;&#x5C42;&#x8BFB;&#x53D6;&#x5668;&#x90A3;&#x91CC;&#x8BFB;&#x51FA;&#x4E00;&#x90E8;&#x5206;&#x6570;&#x636E;&#xFF0C;&#x5E76;&#x6682;&#x5B58;&#x4E8E;&#x7F13;&#x51B2;&#x533A;&#x4E4B;&#x4E2D;&#x4EE5;&#x5907;&#x540E;&#x7528;&#x3002; &#x7F13;&#x51B2;&#x533A;&#x7684;&#x597D;&#x5904;&#x662F;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x5927;&#x591A;&#x6570;&#x7684;&#x65F6;&#x5019;&#x964D;&#x4F4E;&#x8BFB;&#x53D6;&#x65B9;&#x6CD5;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x3002; bufio.Reader &#x7C7B;&#x578B;&#x5E76;&#x4E0D;&#x662F;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x7684;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x4E9B;&#x9700;&#x8981;&#x663E;&#x5F0F;&#x521D;&#x59CB;&#x5316;&#x7684;&#x5B57;&#x6BB5;&#x3002;&#x4E00;&#x4E9B;&#x5B57;&#x6BB5;&#xFF1A; buf &#xFF1A; []byte &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x5373;&#x5B57;&#x8282;&#x5207;&#x7247;&#xFF0C;&#x4EE3;&#x8868;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x867D;&#x7136;&#x5B83;&#x662F;&#x5207;&#x7247;&#x7C7B;&#x578B;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5176;&#x957F;&#x5EA6;&#x5374;&#x4F1A;&#x5728;&#x521D;&#x59CB;&#x5316;&#x7684;&#x65F6;&#x5019;&#x6307;&#x5B9A;&#xFF0C;&#x5E76;&#x5728;&#x4E4B;&#x540E;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#x3002; rd &#xFF1A; io.Reader &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x5E95;&#x5C42;&#x8BFB;&#x53D6;&#x5668;&#x3002;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x7684;&#x6570;&#x636E;&#x5C31;&#x662F;&#x4ECE;&#x8FD9;&#x91CC;&#x62F7;&#x8D1D;&#x6765;&#x7684;&#x3002; r &#xFF1A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x5BF9;&#x7F13;&#x51B2;&#x533A;&#x8FDB;&#x884C;&#x4E0B;&#x4E00;&#x6B21;&#x8BFB;&#x53D6;&#x65F6;&#x7684;&#x5F00;&#x59CB;&#x7D22;&#x5F15;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x79F0;&#x5B83;&#x4E3A;&#x5DF2;&#x8BFB;&#x8BA1;&#x6570;&#x3002; w &#xFF1A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x5BF9;&#x7F13;&#x51B2;&#x533A;&#x8FDB;&#x884C;&#x4E0B;&#x4E00;&#x6B21;&#x5199;&#x5165;&#x65F6;&#x7684;&#x5F00;&#x59CB;&#x7D22;&#x5F15;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x79F0;&#x4E4B;&#x4E3A;&#x5DF2;&#x5199;&#x8BA1;&#x6570;&#x3002; err &#xFF1A; error &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x3002;&#x5B83;&#x7684;&#x503C;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x5728;&#x4ECE;&#x5E95;&#x5C42;&#x8BFB;&#x53D6;&#x5668;&#x83B7;&#x5F97;&#x6570;&#x636E;&#x65F6;&#x53D1;&#x751F;&#x7684;&#x9519;&#x8BEF;&#x3002;&#x8FD9;&#x91CC;&#x7684;&#x503C;&#x5728;&#x88AB;&#x8BFB;&#x53D6;&#x6216;&#x5FFD;&#x7565;&#x4E4B;&#x540E;&#xFF0C;&#x8BE5;&#x5B57;&#x6BB5;&#x4F1A;&#x88AB;&#x7F6E;&#x4E3A; nil &#x3002; lastByte &#xFF1A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x88AB;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x3002;&#x8BFB;&#x56DE;&#x9000;&#x65F6;&#x4F1A;&#x7528;&#x5230;&#x5B83;&#x7684;&#x503C;&#x3002; lastRuneSize &#xFF1A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x7528;&#x4E8E;&#x8BB0;&#x5F55;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x88AB;&#x8BFB;&#x53D6;&#x7684; Unicode &#x5B57;&#x7B26;&#x6240;&#x5360;&#x7528;&#x7684;&#x5B57;&#x8282;&#x6570;&#x3002;&#x8BFB;&#x56DE;&#x9000;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x7528;&#x5230;&#x5B83;&#x7684;&#x503C;&#x3002;&#x8FD9;&#x4E2A;&#x5B57;&#x6BB5;&#x53EA;&#x4F1A;&#x5728;&#x5176;&#x6240; &#x5C5E;&#x503C;&#x7684; ReadRune &#x65B9;&#x6CD5;&#x4E2D;&#x624D;&#x4F1A;&#x88AB;&#x8D4B;&#x4E88;&#x6709;&#x610F;&#x4E49;&#x7684;&#x503C;&#x3002;&#x5728;&#x5176;&#x4ED6;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5B83;&#x90FD;&#x4F1A;&#x88AB;&#x7F6E;&#x4E3A; -1 &#x3002; &#x4E24;&#x4E2A;&#x7528;&#x4E8E;&#x521D;&#x59CB;&#x5316; Reader &#x503C;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x53EB; NewReader &#x548C; NewReaderSize &#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; *bufio.Reader &#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; NewReader &#x51FD;&#x6570;&#x521D;&#x59CB;&#x5316;&#x7684; Reade r&#x503C;&#x4F1A;&#x62E5;&#x6709;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x5C3A;&#x5BF8;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x8FD9;&#x4E2A;&#x9ED8;&#x8BA4;&#x5C3A;&#x5BF8;&#x662F; 4096 &#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x5373;&#xFF1A;4 KB&#x3002; NewReaderSize &#x51FD;&#x6570;&#x5219;&#x5C06;&#x7F13;&#x51B2;&#x533A;&#x5C3A;&#x5BF8;&#x7684;&#x51B3;&#x5B9A;&#x6743;&#x629B;&#x7ED9;&#x4E86;&#x4F7F;&#x7528;&#x65B9;&#x3002; bufio.Writer&#x7C7B;&#x578B;&#x503C;&#x4E2D;&#x7F13;&#x51B2;&#x7684;&#x6570;&#x636E;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x4F1A;&#x88AB;&#x5199;&#x5230;&#x5B83;&#x7684;&#x5E95;&#x5C42;&#x5199;&#x5165;&#x5668; bufio.Writer &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;: err &#xFF1A; error &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x3002;&#x5B83;&#x7684;&#x503C;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x5728;&#x5411;&#x5E95;&#x5C42;&#x5199;&#x5165;&#x5668;&#x5199;&#x6570;&#x636E;&#x65F6;&#x53D1;&#x751F;&#x7684;&#x9519;&#x8BEF;&#x3002; buf &#xFF1A; []byte &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x7F13;&#x51B2;&#x533A;&#x3002;&#x5728;&#x521D;&#x59CB;&#x5316;&#x4E4B;&#x540E;&#xFF0C;&#x5B83;&#x7684;&#x957F;&#x5EA6;&#x4F1A;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#x3002; n &#xFF1A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x5BF9;&#x7F13;&#x51B2;&#x533A;&#x8FDB;&#x884C;&#x4E0B;&#x4E00;&#x6B21;&#x5199;&#x5165;&#x65F6;&#x7684;&#x5F00;&#x59CB;&#x7D22;&#x5F15;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x79F0;&#x4E4B;&#x4E3A;&#x5DF2;&#x5199;&#x8BA1;&#x6570;&#x3002; wr &#xFF1A; io.Writer &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x4EE3;&#x8868;&#x5E95;&#x5C42;&#x5199;&#x5165;&#x5668;&#x3002; bufio.Writer &#x7C7B;&#x578B;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; Flush &#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x7684;&#x4E3B;&#x8981;&#x529F;&#x80FD;&#x662F;&#x628A;&#x76F8;&#x5E94;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x6682;&#x5B58;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#xFF0C;&#x90FD;&#x5199;&#x5230;&#x5E95;&#x5C42;&#x5199;&#x5165;&#x5668;&#x4E2D;&#x3002;&#x6570;&#x636E;&#x4E00;&#x65E6;&#x88AB;&#x5199;&#x8FDB;&#x5E95;&#x5C42;&#x5199;&#x5165;&#x5668;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x5C31;&#x4F1A;&#x628A;&#x5B83;&#x4EEC; &#x4ECE;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x5220;&#x9664;&#x6389;&#x3002; bufio.Writer &#x7C7B;&#x578B;&#x503C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;Writer&#x503C;&#xFF09;&#x62E5;&#x6709;&#x7684;&#x6240;&#x6709;&#x6570;&#x636E;&#x5199;&#x5165;&#x65B9;&#x6CD5;&#x90FD;&#x4F1A;&#x5728;&#x5FC5;&#x8981;&#x7684;&#x65F6;&#x5019;&#x8C03;&#x7528;&#x5B83;&#x7684; Flush &#x65B9;&#x6CD5;&#x3002; &#x6BD4;&#x5982;&#xFF0C; Write &#x65B9;&#x6CD5;&#x6709;&#x65F6;&#x5019;&#x4F1A;&#x5728;&#x628A;&#x6570;&#x636E;&#x5199;&#x8FDB;&#x7F13;&#x51B2;&#x533A;&#x4E4B;&#x540E;&#xFF0C;&#x8C03;&#x7528; Flush &#x65B9;&#x6CD5;&#xFF0C;&#x4EE5;&#x4FBF;&#x4E3A;&#x540E;&#x7EED;&#x7684;&#x65B0;&#x6570;&#x636E;&#x817E;&#x51FA;&#x7A7A;&#x95F4;&#x3002; WriteString &#x65B9;&#x6CD5;&#x7684;&#x884C;&#x4E3A;&#x4E0E;&#x4E4B;&#x7C7B;&#x4F3C;&#x3002; WriteByte &#x65B9;&#x6CD5;&#x548C; WriteRune &#x65B9;&#x6CD5;&#xFF0C;&#x90FD;&#x4F1A;&#x5728;&#x53D1;&#x73B0;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x7684;&#x53EF;&#x5199;&#x7A7A;&#x95F4;&#x4E0D;&#x8DB3;&#x4EE5;&#x5BB9;&#x7EB3;&#x65B0;&#x7684;&#x5B57;&#x8282;&#xFF0C;&#x6216; Unicode &#x5B57;&#x7B26;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8C03;&#x7528; Flush &#x65B9;&#x6CD5;&#x3002; &#x5728; &#x901A;&#x5E38;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x53EA;&#x8981;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x7684;&#x53EF;&#x5199;&#x7A7A;&#x95F4;&#x65E0;&#x6CD5;&#x5BB9;&#x7EB3;&#x9700;&#x8981;&#x5199;&#x5165;&#x7684;&#x65B0;&#x6570;&#x636E;&#xFF0C; Flush &#x65B9;&#x6CD5;&#x5C31;&#x4E00;&#x5B9A;&#x4F1A;&#x88AB;&#x8C03;&#x7528; &#x3002; bufio.Reader&#x7C7B;&#x578B;&#x8BFB;&#x53D6;&#x65B9;&#x6CD5; bufio.Reader &#x7C7B;&#x578B;&#x62E5;&#x6709;&#x5F88;&#x591A;&#x7528;&#x4E8E;&#x8BFB;&#x53D6;&#x6570;&#x636E;&#x7684;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x91CC;&#x9762;&#x6709; 4 &#x4E2A;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;&#x4E0D;&#x540C;&#x8BFB;&#x53D6;&#x6D41;&#x7A0B;&#x7684;&#x4EE3;&#x8868;&#xFF0C;&#x5B83;&#x4EEC;&#x662F;&#xFF1A; Peek &#x3001; Read &#x3001; ReadSlice &#x548C; ReadBytes &#x3002; Peek &#x65B9;&#x6CD5;&#x7684;&#x7279;&#x70B9;&#x662F;&#x5373;&#x4F7F;&#x8BFB;&#x53D6;&#x4E86;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x4E0D;&#x4F1A;&#x66F4;&#x6539;&#x5DF2;&#x8BFB;&#x8BA1;&#x6570;&#x7684;&#x503C;&#x3002;&#x800C; Read &#x65B9;&#x6CD5;&#x4F1A;&#x5728;&#x53C2;&#x6570;&#x503C;&#x7684;&#x957F;&#x5EA6;&#x8FC7;&#x5927;&#xFF0C;&#x4E14;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x5DF2;&#x65E0;&#x672A;&#x8BFB;&#x5B57;&#x8282;&#x65F6;&#xFF0C;&#x8DE8;&#x8FC7;&#x7F13;&#x51B2;&#x533A;&#x5E76;&#x76F4;&#x63A5;&#x5411;&#x5E95;&#x5C42;&#x8BFB;&#x53D6;&#x5668;&#x7D22;&#x8981;&#x6570;&#x636E;&#x3002; Peek &#x65B9;&#x6CD5;&#x6709;&#x4E00;&#x4E2A;&#x9C9C;&#x660E;&#x7684;&#x7279;&#x70B9;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#xFF1A;&#x5373;&#x4F7F;&#x5B83;&#x8BFB;&#x53D6;&#x4E86;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x4E0D;&#x4F1A;&#x66F4;&#x6539;&#x5DF2;&#x8BFB;&#x8BA1;&#x6570;&#x7684;&#x503C;&#x3002; ReadSlice &#x65B9;&#x6CD5;&#x4F1A;&#x5728;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x672A;&#x8BFB;&#x90E8;&#x5206;&#x4E2D;&#x5BFB;&#x627E;&#x7ED9;&#x5B9A;&#x7684;&#x5206;&#x9694;&#x7B26;&#xFF0C;&#x5E76;&#x5728;&#x5FC5;&#x8981;&#x65F6;&#x5BF9;&#x7F13;&#x51B2;&#x533A;&#x8FDB;&#x884C;&#x586B;&#x5145;&#x3002;&#x5982;&#x679C;&#x5728;&#x586B;&#x6EE1;&#x7F13;&#x51B2;&#x533A;&#x4E4B;&#x540E;&#x4ECD;&#x7136;&#x672A;&#x80FD;&#x627E;&#x5230;&#x5206;&#x9694;&#x7B26;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x65B9;&#x6CD5;&#x5C31;&#x4F1A;&#x628A;&#x6574;&#x4E2A;&#x7F13;&#x51B2;&#x533A;&#x4F5C;&#x4E3A;&#x7B2C;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x8FD4;&#x56DE;&#xFF0C; &#x540C;&#x65F6;&#x8FD4;&#x56DE;&#x7F13;&#x51B2;&#x533A;&#x5DF2;&#x6EE1;&#x7684;&#x9519;&#x8BEF;&#x3002; ReadBytes &#x65B9;&#x6CD5;&#x4F1A;&#x901A;&#x8FC7;&#x8C03;&#x7528; ReadSlice &#x65B9;&#x6CD5;&#xFF0C;&#x4E00;&#x6B21;&#x53C8;&#x4E00;&#x6B21;&#x5730;&#x586B;&#x5145;&#x7F13;&#x51B2;&#x533A;&#xFF0C;&#x5E76;&#x5728;&#x5176;&#x4E2D;&#x5BFB;&#x627E;&#x5206;&#x9694;&#x7B26;&#x3002;&#x9664;&#x975E;&#x53D1;&#x751F;&#x4E86;&#x672A;&#x9884;&#x6599;&#x5230;&#x7684;&#x9519;&#x8BEF;&#x6216;&#x8005;&#x627E;&#x5230;&#x4E86;&#x5206;&#x9694;&#x7B26;&#xFF0C;&#x5426;&#x5219;&#x8FD9;&#x4E00;&#x8FC7;&#x7A0B;&#x5C06;&#x4F1A;&#x4E00;&#x76F4;&#x8FDB;&#x884C;&#x4E0B;&#x53BB;&#x3002; Reader&#x503C;&#x7684; ReadLine &#x65B9;&#x6CD5;&#x4F1A;&#x4F9D;&#x8D56;&#x4E8E;&#x5B83;&#x7684; ReadSlice &#x65B9;&#x6CD5;&#xFF0C;&#x800C;&#x5176; ReadString &#x65B9;&#x6CD5;&#x5219;&#x5B8C;&#x5168;&#x4F9D;&#x8D56;&#x4E8E; ReadBytes &#x65B9;&#x6CD5;&#x3002; Peek &#x65B9;&#x6CD5;&#x3001; ReadSlice &#x65B9;&#x6CD5;&#x548C; ReadLine &#x65B9;&#x6CD5;&#x90FD;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x9020;&#x6210;&#x5185;&#x5BB9;&#x6CC4;&#x9732;&#x3002;&#x8FD9;&#x4E3B;&#x8981;&#x662F;&#x56E0;&#x4E3A;&#x5B83;&#x4EEC;&#x5728;&#x6B63;&#x5E38;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x90FD;&#x4F1A;&#x8FD4;&#x56DE;&#x76F4;&#x63A5;&#x57FA;&#x4E8E;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x5B57;&#x8282;&#x5207;&#x7247; &#x3002;"},"theme/theme-usage.html":{"title":"使用文档主题","path":"\\golang-learn\\theme\\theme-usage.html","body":"使用文档主题 本文档使用 Hexo Doc Theme 搭建。 Quick Start 获取源码 1 $ git clone git@github.com:zalando-incubator/hexo-theme-doc-seed.git hexo-theme-doc-seed 的以下文件拷贝到项目 root 目录下，例如 kubernetes-learn ： source 目录 _data 目录 images 目录 package.json _config.yaml .zappr.yaml 安装依赖 1 $ yarn 修改 package.json ，否则 hexo server 或者 hexo s 可能会找不到命令。 1 2 3 4 5 6 \"hexo\" :  \"version\" : \"3.9.0\" , \"scripts\" :  \"start\" : \"hexo s -p 8082\" , 修改 _config.yml 1 2 3 4 5 6 7 8 9 10 11 12 theme: ../node_modules/hexo-theme-doc # 如果你的网站存放在子目录中，例如 http://yoursite.com/blog # 则 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/ url: http://www.shipengqi.top/kubernetes-learn root: /kubernetes-learn/ # deploy deploy: - type: git repo: git@github.com:shipengqi/kubernetes-learn.git branch: gh-pages 启动开发服务，访问 http://localhost:8082 。 1 $ yarn start Index source 目录下创建 index.md 文件。这个 index.md 文件就是文档首页。 添加文档 source 目录下创建 markdown 文件，例如： 1 2 3 4 5 6 7 --- title: Lorem Ipsum --- # Lorem Ipsum Lorem ipsum 也可以创建文档子目录，例如 source/usage 。 Sidebar source 目录下的 _data 目录下的 navigation.yaml 设置 sidebar 和其他的一些配置。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 logo: text: My Documentation type: link path: index.html main: - text: PROJECTS type: label - text: My Awesome Projects type: link path: projects/my-awesome-project.html children: - text: My Awesome Projects Page 1 type: link path: projects/my-awesome-project-page-1.html logo : navigation Logo main : left sidebar 对于每个导航项，必须定义一个 type ，并根据类型定义 text 和 path 等其他属性。 每个导航项，也可以定义一个 children ，这个属性可以嵌套导航项。 type type 有两种类型： label : 导航项的标签 link : 导航项下级文档 link link 类型的导航项的 path 的值是文件的路径，但注意扩展名为 .html 。 Favicon 1 2 theme_config: favicon: images/favicon.ico"},"theme/theme-usage.html#使用文档主题":{"title":"&#x4F7F;&#x7528;&#x6587;&#x6863;&#x4E3B;&#x9898;","path":"\\golang-learn\\theme\\theme-usage.html#使用文档主题","body":"&#x672C;&#x6587;&#x6863;&#x4F7F;&#x7528; Hexo Doc Theme &#x642D;&#x5EFA;&#x3002;"},"theme/theme-usage.html#Quick-Start":{"title":"Quick Start","path":"\\golang-learn\\theme\\theme-usage.html#Quick-Start","body":"&#x83B7;&#x53D6;&#x6E90;&#x7801; 1 $ git clone git@github.com:zalando-incubator/hexo-theme-doc-seed.git hexo-theme-doc-seed &#x7684;&#x4EE5;&#x4E0B;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;&#x9879;&#x76EE; root &#x76EE;&#x5F55;&#x4E0B;&#xFF0C;&#x4F8B;&#x5982; kubernetes-learn &#xFF1A; source &#x76EE;&#x5F55; _data &#x76EE;&#x5F55; images &#x76EE;&#x5F55; package.json _config.yaml .zappr.yaml &#x5B89;&#x88C5;&#x4F9D;&#x8D56; 1 $ yarn &#x4FEE;&#x6539; package.json &#xFF0C;&#x5426;&#x5219; hexo server &#x6216;&#x8005; hexo s &#x53EF;&#x80FD;&#x4F1A;&#x627E;&#x4E0D;&#x5230;&#x547D;&#x4EE4;&#x3002; 1 2 3 4 5 6 hexo : { version : 3.9.0 }, scripts : { start : hexo s -p 8082 }, &#x4FEE;&#x6539; _config.yml 1 2 3 4 5 6 7 8 9 10 11 12 theme: ../node_modules/hexo-theme-doc # &#x5982;&#x679C;&#x4F60;&#x7684;&#x7F51;&#x7AD9;&#x5B58;&#x653E;&#x5728;&#x5B50;&#x76EE;&#x5F55;&#x4E2D;&#xFF0C;&#x4F8B;&#x5982; http://yoursite.com/blog # &#x5219; url &#x8BBE;&#x4E3A; http://yoursite.com/blog &#x5E76;&#x628A; root &#x8BBE;&#x4E3A; /blog/ url: http://www.shipengqi.top/kubernetes-learn root: /kubernetes-learn/ # deploy deploy: - type: git repo: git@github.com:shipengqi/kubernetes-learn.git branch: gh-pages &#x542F;&#x52A8;&#x5F00;&#x53D1;&#x670D;&#x52A1;&#xFF0C;&#x8BBF;&#x95EE; http://localhost:8082 &#x3002; 1 $ yarn start"},"theme/theme-usage.html#Index":{"title":"Index","path":"\\golang-learn\\theme\\theme-usage.html#Index","body":"source &#x76EE;&#x5F55;&#x4E0B;&#x521B;&#x5EFA; index.md &#x6587;&#x4EF6;&#x3002;&#x8FD9;&#x4E2A; index.md &#x6587;&#x4EF6;&#x5C31;&#x662F;&#x6587;&#x6863;&#x9996;&#x9875;&#x3002;"},"theme/theme-usage.html#添加文档":{"title":"&#x6DFB;&#x52A0;&#x6587;&#x6863;","path":"\\golang-learn\\theme\\theme-usage.html#添加文档","body":"source &#x76EE;&#x5F55;&#x4E0B;&#x521B;&#x5EFA; markdown &#x6587;&#x4EF6;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A; 1 2 3 4 5 6 7 --- title: Lorem Ipsum --- # Lorem Ipsum Lorem ipsum &#x4E5F;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x6587;&#x6863;&#x5B50;&#x76EE;&#x5F55;&#xFF0C;&#x4F8B;&#x5982; source/usage &#x3002;"},"theme/theme-usage.html#Sidebar":{"title":"Sidebar","path":"\\golang-learn\\theme\\theme-usage.html#Sidebar","body":"source &#x76EE;&#x5F55;&#x4E0B;&#x7684; _data &#x76EE;&#x5F55;&#x4E0B;&#x7684; navigation.yaml &#x8BBE;&#x7F6E; sidebar &#x548C;&#x5176;&#x4ED6;&#x7684;&#x4E00;&#x4E9B;&#x914D;&#x7F6E;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 logo: text: My Documentation type: link path: index.html main: - text: PROJECTS type: label - text: My Awesome Projects type: link path: projects/my-awesome-project.html children: - text: My Awesome Projects Page 1 type: link path: projects/my-awesome-project-page-1.html logo : navigation Logo main : left sidebar &#x5BF9;&#x4E8E;&#x6BCF;&#x4E2A;&#x5BFC;&#x822A;&#x9879;&#xFF0C;&#x5FC5;&#x987B;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A; type &#xFF0C;&#x5E76;&#x6839;&#x636E;&#x7C7B;&#x578B;&#x5B9A;&#x4E49; text &#x548C; path &#x7B49;&#x5176;&#x4ED6;&#x5C5E;&#x6027;&#x3002; &#x6BCF;&#x4E2A;&#x5BFC;&#x822A;&#x9879;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A; children &#xFF0C;&#x8FD9;&#x4E2A;&#x5C5E;&#x6027;&#x53EF;&#x4EE5;&#x5D4C;&#x5957;&#x5BFC;&#x822A;&#x9879;&#x3002; type type &#x6709;&#x4E24;&#x79CD;&#x7C7B;&#x578B;&#xFF1A; label : &#x5BFC;&#x822A;&#x9879;&#x7684;&#x6807;&#x7B7E; link : &#x5BFC;&#x822A;&#x9879;&#x4E0B;&#x7EA7;&#x6587;&#x6863; link link &#x7C7B;&#x578B;&#x7684;&#x5BFC;&#x822A;&#x9879;&#x7684; path &#x7684;&#x503C;&#x662F;&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#xFF0C;&#x4F46;&#x6CE8;&#x610F;&#x6269;&#x5C55;&#x540D;&#x4E3A; .html &#x3002;"},"theme/theme-usage.html#Favicon":{"title":"Favicon","path":"\\golang-learn\\theme\\theme-usage.html#Favicon","body":"1 2 theme_config: favicon: images/favicon.ico"},"basic/basic_data.html":{"title":"基础据类型","path":"\\golang-learn\\basic\\basic_data.html","body":"基础据类型 数值类型 整型 uint ，无符号 32 或 64 位整型 uint8 ，无符号 8 位整型 (0 到 255) uint16 ，无符号 16 位整型 (0 到 65535) uint32 ，无符号 32 位整型 (0 到 4294967295) uint64 ，无符号 64 位整型 (0 到 18446744073709551615) int ，有符号 32 或 64 位整型 int8 ，有符号 8 位整型 (-128 到 127) int16 ，有符号 16 位整型 (-32768 到 32767) int32 ，有符号 32 位整型 (-2147483648 到 2147483647) int64 ，有符号 64 位整型 (-9223372036854775808 到 9223372036854775807) int 和 uint 对应的是 CPU 平台机器的字大小。 浮点数 float32 ，IEEE-754 32 位浮点型数， math.MaxFloat32 表示 float32 能表示的最大数值，大约是 3.4e38 。 float64 ，IEEE-754 64 位浮点型数， math.MaxFloat64 表示 float64 能表示的最大数值，大约是 1.8e308 。 复数 complex64 ，对应 float32 浮点数精度。 complex128 ，对应 float64 浮点数精度。 内置 complex 函数创建复数。 math/cmplx 包提供了复数处理的许多函数。 其他数值类型 byte ， uint8 的别名 ，通常用于表示一个 Unicode 码点。 rune ， int32 的别名 ，一般用于强调数值是一个原始的数据而不是一个小的整数。 uintptr ，无符号整型，用于存放一个指针，没有指定具体的 bit 大小。 布尔类型 布尔类型的值只有两种： true 和 false 。 字符串 字符串就是一串固定长度的字符连接起来的字符序列，不可改变。Go 的字符串是由单个字节连接起来的。Go 的字符串的字节使 用 UTF-8 编码标识 Unicode 文本。 一个原生的字符串面值形式是 `…`，使用反引号代替双引号。在原生的字符串面值中，没有转义操作；全部的内容都是字面的意思， 包含退格和换行 。 字符串操作 内置函数 len 可以获取字符串的长度。 可以通过 string[index] 获取某个索引位置的字节值，字符串是不可修改的，不能使用 string[index] = string2 这种方式改变字符串 ，要修改字符串，必须将其转为可变类型（ []rune 或 []byte ），完成后再转回来。 string[i, l] 获取 string 从第 i 个字节位置开始的 l 个字节，返回一个新的字符串。如： 1 2 3 4 5 6 s := \"hello, world\" fmt.Println(s[ 0 : 5 ]) // \"hello\" fmt.Println(s[: 5 ]) // \"hello\" fmt.Println(s[ 7 :]) // \"world\" fmt.Println(s[:]) // \"hello, world\" + 拼接字符串，如 fmt.Println(goodbye + s[5:]) 输出 goodbye, world 。这种方式每次运算都会产生一个新的字 符串，需要重新分配内存，会给内存分配和 GC 带来额外的负担，所以性能比较差。 fmt.Sprintf() 拼接字符串，内部使用 []byte 实现，不像直接运算符这种会产生很多临时的字符串，但是内部的逻辑比较复杂，有很 多额外的判断，还用到了 interface ，所以性能一般。 strings.Join() 拼接字符串， Join 会先根据字符串数组的内容，计算出一个拼接之后的长度，然后申请对应大小的内存，一个一个字符 串填入，在已有一个数组的情况下，这种效率会很高，但是本来没有，去构造这个数据的代价也不小。 bytes.Buffer 拼接字符串，比较理想，可以当成可变字符使用，对内存的增长也有优化，如果能预估字符串的长度，还可 以用 buffer.Grow() 接口来设置 capacity 。 1 2 3 4 5 6 var buffer bytes.Buffer buffer.WriteString( \"hello\" ) buffer.WriteString( \", \" ) buffer.WriteString( \"world\" ) fmt.Print(buffer.String()) strings.Builder 内部通过 slice 来保存和管理内容。 slice 内部则是通过一个指针指向实际保存内容的数组。 strings.Builder 是非线程安全，性能上和 bytes.Buffer 相差无几。 1 2 3 4 5 var b1 strings.Builder b1.WriteString( \"ABC\" ) b1.WriteString( \"DEF\" ) fmt.Print(b1.String()) 使用 == 和  进行字符串比较。 strings 包与字符串操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /*字符串基本操作--strings*/ str := \"wangdy\" //是否包含 fmt.Println(strings.Contains(str, \"wang\" ), strings.Contains(str, \"123\" )) //true false //获取字符串长度 fmt.Println( len (str)) //6 //获取字符在字符串的位置 从0开始,如果不存在，返回-1 fmt.Println(strings.Index(str, \"g\" )) //3 fmt.Println(strings.Index(str, \"x\" )) //-1 //判断字符串是否以 xx 开头 fmt.Println(strings.HasPrefix(str, \"wa\" )) //true //判断字符串是否以 xx 结尾 fmt.Println(strings.HasSuffix(str, \"dy\" )) //true //判断2个字符串大小，相等0，左边大于右边-1，其他1 str2 := \"hahaha\" fmt.Println(strings.Compare(str, str2)) //1 //分割字符串 strSplit := strings.Split( \"1-2-3-4-a\" , \"-\" ) fmt.Println(strSplit) //[1 2 3 4 a] //组装字符串 fmt.Println(strings.Join(strSplit, \"#\" )) //1#2#3#4#a //去除字符串2端空格 fmt.Printf( \"%s,%s\\n\" , strings.Trim( \" 我的2边有空格 1 \" , \" \" ), \"/////\" ) //我的2边有空格 1,///// //大小写转换 fmt.Println(strings.ToUpper( \"abDCaE\" )) //ABDCAE fmt.Println(strings.ToLower( \"abDCaE\" )) //abdcae //字符串替换:意思是：在sourceStr中，把oldStr的前n个替换成newStr，返回一个新字符串，如果n0则全部替换 sourceStr := \"123123123\" oldStr := \"12\" newStr := \"ab\" n := 2 fmt.Println(strings.Replace(sourceStr, oldStr, newStr, n)) 在 Go 语言中， string 类型的值是不可变的。如果我们想获得一个不一样的字符串，那么就只能基于原字符串进行裁剪、拼接等操作， 从而生成一个新的字符串 。裁剪操作可以使用切片表达式，而拼接操作可以用操作符 + 实现。 在底层，一个 string 值的内容会被存储到一块连续的内存空间中。同时，这块内存容纳的字节数量也会被记录下来，并用于表示 该 string 值的长度。 你可以把这块内存的内容看成一个字节数组，而相应的 string 值则包含了指向字节数组头部的指针值。如此一来， 我们在 一个 string 值上应用切片表达式，就相当于在对其底层的字节数组做切片 。 另一方面，我们在 进行字符串拼接的时候，Go 语言会把所有被拼接的字符串依次拷贝到一个崭新且足够大的连续内存空间中， 并把持有相应指针值的 string 值作为结果返回 。 显然，当 程序中存在过多的字符串拼接操作的时候，会对内存的分配产生非常大的压力 。 与 string 值相比， strings.Builder 类型的值有哪些优势 已存在的内容不可变，但可以拼接更多的内容； 减少了内存分配和内容拷贝的次数； 可将内容重置，可重用值。 Builder 值中有一个用于承载内容的容器（以下简称内容容器）。它是一个以 byte 为元素类型的切片（以下简称字节切片）。 由于这样的字节切片的底层数组就是一个字节数组，所以我们可以说它与 string 值存储内容的方式是一样的 。实际上，它们都是通过 一个 unsafe.Pointer 类型的字段来持有那个指向了底层字节数组的指针值的。 因为这样的内部构造， Builder 值同样拥有高效利用内存的前提条件。 已存在于 Builder 值中的内容是不可变的。因此，我们可以利用 Builder 值提供的方法拼接更多的内容，而丝毫不用担心这些方法 会影响到已存在的内容。 Builder 值拥有的一系列指针方法，包括： Write 、 WriteByte 、 WriteRune 和 WriteString 。我们可以把它们统称 为 拼接方法 。 调用上述方法把新的内容拼接到已存在的内容的尾部（也就是右边）。这时，如有必要， Builder 值会自动地对自身的内容容器进行扩容。 这里的自动扩容策略与切片的扩容策略一致。 除了 Builder 值的自动扩容，我们还可以选择手动扩容，这通过调用 Builder 值的 Grow 方法就可以做到。 Grow 方法也可以被称 为 扩容方法 ，它接受一个 int 类型的参数 n ，该参数用于代表将要扩充的字节数量。 Grow 方法会把其所属值中内容容器的容量增加 n 个字节。更具体地讲，它会生成一个字节切片作为新的内容容器，该切片的容量会是原 容器容量的二倍再加上 n 。之后，它会把原容器中的所有字节全部拷贝到新容器中。 使用 strings.Builder 类型的约束 只要调用了 Builder 值的拼接方法或扩容方法，就不能再以任何的方式对其所属值进行复制了 。否则，只要在任何副本上调用上述方 法就都会引发 panic。这里所说的复制方式，包括但不限于在函数间传递值、通过通道传递值、把值赋予变量等等。 正是由于已使用的 Builder 值不能再被复制，所以肯定不会出现多个 Builder 值中的内容容器（也就是那个字节切片）共用一个底层字 节数组的情况。这样也就避免了多个同源的 Builder 值在拼接内容时可能产生的冲突问题。 不过，虽然已使用的 Builder 值不能再被复制，但是它的指针值却可以。无论什么时候，我们都可以通过任何方式复制这样的指针值 。 注意，这样的指针值指向的都会是同一个 Builder 值。 strings.Reader 类型 strings.Reader 类型是为了高效读取字符串而存在的。可以让我们很方便地读取一个字符串中的内容。在读取的过程中， Reader 值会 保存已读取的字节的计数（以下简称已读计数）。 已读计数也代表着下一次读取的起始索引位置。 Reader 值正是依靠这样一个计数，以及针对字符串值的切片表达式，从而实现快速读取 。 bytes 包与字节串操作 strings 包和 bytes 包可以说是一对孪生兄弟，它们在 API 方面非常的相似。单从它们提供的函数的数量和功能上讲，差别微乎其微。 只不过， strings 包主要面向的是 Unicode 字符和经过 UTF-8 编码的字符串，而 bytes 包面对的则主要是字节和字节切片。 bytes.Buffer bytes.Buffer 类型的用途主要是作为字节序列的缓冲区。 bytes.Buffer 是开箱即用的。 bytes.Buffer 不但可以拼接、截断其中 的字节序列，以各种形式导出其中的内容，还可以顺序地读取其中的子序列。 在内部， bytes.Buffer 类型同样是使用字节切片作为内容容器的。并且，与 strings.Reader 类型类似， bytes.Buffer 有一个 int 类型的字段，用于代表已读字节的计数，可以简称为 已读计数 。 注意，与 strings.Reader 类型的 Len 方法一样， bytes.Buffer 的 Len 方法返回的也是内容容器中未被读取部分的长度， 而不是其中已存内容的总长度（以下简称内容长度）。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // 示例1。 var buffer1 bytes.Buffer contents := \"Simple byte buffer for marshaling data.\" fmt.Printf( \"Write contents %q ...\\n\" , contents) buffer1.WriteString(contents) fmt.Printf( \"The length of buffer: %d\\n\" , buffer1.Len()) // = 39 fmt.Printf( \"The capacity of buffer: %d\\n\" , buffer1.Cap()) // = 64 fmt.Println() // 示例2。 p1 := make ([] byte , 7 ) n, _ := buffer1.Read(p1) fmt.Printf( \"%d bytes were read. (call Read)\\n\" , n) fmt.Printf( \"The length of buffer: %d\\n\" , buffer1.Len()) // = 32 fmt.Printf( \"The capacity of buffer: %d\\n\" , buffer1.Cap()) // = 64 上面的代码，示例一输出 39 和 64，但是示例二，从 buffer1 中读取一部分内容，并用它们填满长度为7的字节切片 p1 之后， buffer1 的 Len 方法返回的结果值变为了 32。因为我们并没有再向该缓冲区中写入任何内容，所以它的容量会保持不变，仍是 64。 对于处在零值状态的 Buffer 值来说，如果第一次扩容时的另需字节数不大于 64，那么该值就会基于一个预先定义好的、长度为 64 的字节数组来创建内容容器。 由于 strings.Reader 还有一个 Size 方法可以给出内容长度的值，所以我们用内容长度减去未读部分的长度，就可以很方便地得 到它的已读计数。 然而， bytes.Buffer 类型却没有这样一个方法，它只有 Cap 方法。可是 Cap 方法提供的是内容容器的容量，也不是内容长度。 bytes.Buffer 的扩容策略 Buffer 值既可以被手动扩容，也可以进行自动扩容。并且，这两种扩容方式的策略是基本一致的。所以，除非我们完全确定后续内容所需 的字节数，否则让 Buffer 值自动去扩容就好了。 在扩容的时候， Buffer 值中相应的代码（以下简称扩容代码）会先判断内容容器的剩余容量，是否可以满足调用方的要求，或者是否足 够容纳新的内容。 如果可以，那么扩容代码会在当前的内容容器之上，进行长度扩充。更具体地说，如果内容容器的容量与其长度的差，大于或等于另需的字 节数，那么扩容代码就会通过切片操作对原有的内容容器的长度进行扩充，就像下面这样： 1 b.buf = b.buf[:length+need] 反之，如果内容容器的剩余容量不够了，那么扩容代码可能就会用新的内容容器去替代原有的内容容器，从而实现扩容。不过，这里还一步优化。 如果当前内容容器的容量的一半仍然大于或等于其现有长度再加上另需的字节数的和，即： 1 cap (b.buf)/ 2 = len (b.buf)+need 那么，扩容代码就会复用现有的内容容器，并把容器中的未读内容拷贝到它的头部位置。这也意味着其中的已读内容，将会全部被未读内容和 之后的新内容覆盖掉。 这样的复用预计可以至少节省掉一次后续的扩容所带来的内存分配，以及若干字节的拷贝。 若这一步优化未能达成，也就是说，当前内容容器的容量小于新长度的二倍，那么扩容代码就只能再创建一个新的内容容器，并把原有容器 中的未读内容拷贝进去，最后再用新的容器替换掉原有的容器。这个新容器的容量将会等于原有容量的二倍再加上另需字节数的和。 1 新容器的容量 =2* 原有容量 + 所需字节数 bytes.Buffer 中的哪些方法可能会造成内容的泄露 什么叫内容泄露？这里所说的内容泄露是指，使用 Buffer 值的一方通过某种非标准的（或者说不正式的）方式得到了本不该得到的内容。 在 bytes.Buffer 中， Bytes 方法和 Next 方法都可能会造成内容的泄露 。原因在于，它们都把基于内容容器的切片直接返 回给了方法的调用方。 我们都知道， 通过切片，我们可以直接访问和操纵它的底层数组。不论这个切片是基于某个数组得来的，还是通过对另一个切片做切片操作 获得的 ，都是如此。 1 2 3 4 5 6 7 8 contents := \"ab\" buffer1 := bytes.NewBufferString(contents) fmt.Printf( \"The capacity of new buffer with contents %q: %d\\n\" , contents, buffer1.Cap()) // 内容容器的容量为：8。 fmt.Println() unreadBytes := buffer1.Bytes() fmt.Printf( \"The unread bytes of the buffer: %v\\n\" , unreadBytes) 前面通过调用 buffer1 的 Bytes 方法得到的结果值 unreadBytes ，包含了在那时其中的所有未读内容。 但是，由于这个结果值与 buffer1 的内容容器在此时还共用着同一个底层数组，所以，我只需通过简单的再切片操作，就可以利用这个 结果值拿到 buffer1 在此时的所有未读内容。如此一来， buffer1 的新内容就被泄露出来了。 一个 string 类型的值在底层怎样被表达 在底层，一个 string 类型的值是由一系列相对应的 Unicode 代码点的 UTF-8 编码值来表达的。 一个 string 类型的值既可以被拆分为一个包含多个字符的序列，也可以被拆分为一个包含多个字节的序列。 前者可以由一个以 rune （ int32 的别名）为元素类型的切片来表示，而后者则可以由一个以 byte 为元素类型的切片代表。 rune 是 Go 语言特有的一个基本数据类型，它的一个值就代表一个字符，即：一个 Unicode 字符。比如，’G’、’o’、’爱’、’好’、 ‘者’代表的就都是一个 Unicode 字符。一个 rune 类型的值会由四个字节宽度的空间来存储。它的存储空间总是能够存下一 个 UTF-8 编码值。 一个 rune 类型的值在底层其实就是一个 UTF-8 编码值 。前者是（便于我们人类理解的）外部展现，后者是（便于计算机系统理解的） 内在表达。 1 2 3 4 5 str := \"Go 爱好者 \" fmt.Printf( \"The string: %q\\n\" , str) fmt.Printf( \" = runes(char): %q\\n\" , [] rune (str)) fmt.Printf( \" = runes(hex): %x\\n\" , [] rune (str)) fmt.Printf( \" = bytes(hex): [% x]\\n\" , [] byte (str)) 字符串值 “Go 爱好者” 如果被转换为 []rune 类型的值的话，其中的每一个字符（不论是英文字符还是中文字符）就都会独立成为一 个 rune 类型的元素值。因 此，这段代码打印出的第二行内容就会如下所示： 1 = runes(char): [ 'G' 'o' '爱' '好' '者' ] 又由于，每个 rune 类型的值在底层都是由一个 UTF-8 编码值来表达的，所以我们可以换一种方式来展现这个字符序列： 1 = runes(hex): [47 6f 7231 597d 8005] 我们还可以进一步地拆分，把每个字符的 UTF-8 编码值都拆成相应的字节序列。上述代码中的第五行就是这么做的。它会得到如下的输出： 1 = bytes(hex): [47 6f e7 88 b1 e5 a5 bd e8 80 85]"},"basic/basic_data.html#基础据类型":{"title":"&#x57FA;&#x7840;&#x636E;&#x7C7B;&#x578B;","path":"\\golang-learn\\basic\\basic_data.html#基础据类型","body":""},"basic/basic_data.html#数值类型":{"title":"&#x6570;&#x503C;&#x7C7B;&#x578B;","path":"\\golang-learn\\basic\\basic_data.html#数值类型","body":"&#x6574;&#x578B; uint &#xFF0C;&#x65E0;&#x7B26;&#x53F7; 32 &#x6216; 64 &#x4F4D;&#x6574;&#x578B; uint8 &#xFF0C;&#x65E0;&#x7B26;&#x53F7; 8 &#x4F4D;&#x6574;&#x578B; (0 &#x5230; 255) uint16 &#xFF0C;&#x65E0;&#x7B26;&#x53F7; 16 &#x4F4D;&#x6574;&#x578B; (0 &#x5230; 65535) uint32 &#xFF0C;&#x65E0;&#x7B26;&#x53F7; 32 &#x4F4D;&#x6574;&#x578B; (0 &#x5230; 4294967295) uint64 &#xFF0C;&#x65E0;&#x7B26;&#x53F7; 64 &#x4F4D;&#x6574;&#x578B; (0 &#x5230; 18446744073709551615) int &#xFF0C;&#x6709;&#x7B26;&#x53F7; 32 &#x6216; 64 &#x4F4D;&#x6574;&#x578B; int8 &#xFF0C;&#x6709;&#x7B26;&#x53F7; 8 &#x4F4D;&#x6574;&#x578B; (-128 &#x5230; 127) int16 &#xFF0C;&#x6709;&#x7B26;&#x53F7; 16 &#x4F4D;&#x6574;&#x578B; (-32768 &#x5230; 32767) int32 &#xFF0C;&#x6709;&#x7B26;&#x53F7; 32 &#x4F4D;&#x6574;&#x578B; (-2147483648 &#x5230; 2147483647) int64 &#xFF0C;&#x6709;&#x7B26;&#x53F7; 64 &#x4F4D;&#x6574;&#x578B; (-9223372036854775808 &#x5230; 9223372036854775807) int &#x548C; uint &#x5BF9;&#x5E94;&#x7684;&#x662F; CPU &#x5E73;&#x53F0;&#x673A;&#x5668;&#x7684;&#x5B57;&#x5927;&#x5C0F;&#x3002; &#x6D6E;&#x70B9;&#x6570; float32 &#xFF0C;IEEE-754 32 &#x4F4D;&#x6D6E;&#x70B9;&#x578B;&#x6570;&#xFF0C; math.MaxFloat32 &#x8868;&#x793A; float32 &#x80FD;&#x8868;&#x793A;&#x7684;&#x6700;&#x5927;&#x6570;&#x503C;&#xFF0C;&#x5927;&#x7EA6;&#x662F; 3.4e38 &#x3002; float64 &#xFF0C;IEEE-754 64 &#x4F4D;&#x6D6E;&#x70B9;&#x578B;&#x6570;&#xFF0C; math.MaxFloat64 &#x8868;&#x793A; float64 &#x80FD;&#x8868;&#x793A;&#x7684;&#x6700;&#x5927;&#x6570;&#x503C;&#xFF0C;&#x5927;&#x7EA6;&#x662F; 1.8e308 &#x3002; &#x590D;&#x6570; complex64 &#xFF0C;&#x5BF9;&#x5E94; float32 &#x6D6E;&#x70B9;&#x6570;&#x7CBE;&#x5EA6;&#x3002; complex128 &#xFF0C;&#x5BF9;&#x5E94; float64 &#x6D6E;&#x70B9;&#x6570;&#x7CBE;&#x5EA6;&#x3002; &#x5185;&#x7F6E; complex &#x51FD;&#x6570;&#x521B;&#x5EFA;&#x590D;&#x6570;&#x3002; math/cmplx &#x5305;&#x63D0;&#x4F9B;&#x4E86;&#x590D;&#x6570;&#x5904;&#x7406;&#x7684;&#x8BB8;&#x591A;&#x51FD;&#x6570;&#x3002; &#x5176;&#x4ED6;&#x6570;&#x503C;&#x7C7B;&#x578B; byte &#xFF0C; uint8 &#x7684;&#x522B;&#x540D; &#xFF0C;&#x901A;&#x5E38;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x4E00;&#x4E2A; Unicode &#x7801;&#x70B9;&#x3002; rune &#xFF0C; int32 &#x7684;&#x522B;&#x540D; &#xFF0C;&#x4E00;&#x822C;&#x7528;&#x4E8E;&#x5F3A;&#x8C03;&#x6570;&#x503C;&#x662F;&#x4E00;&#x4E2A;&#x539F;&#x59CB;&#x7684;&#x6570;&#x636E;&#x800C;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x5C0F;&#x7684;&#x6574;&#x6570;&#x3002; uintptr &#xFF0C;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x578B;&#xFF0C;&#x7528;&#x4E8E;&#x5B58;&#x653E;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#xFF0C;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#x5177;&#x4F53;&#x7684; bit &#x5927;&#x5C0F;&#x3002;"},"basic/basic_data.html#布尔类型":{"title":"&#x5E03;&#x5C14;&#x7C7B;&#x578B;","path":"\\golang-learn\\basic\\basic_data.html#布尔类型","body":"&#x5E03;&#x5C14;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x53EA;&#x6709;&#x4E24;&#x79CD;&#xFF1A; true &#x548C; false &#x3002;"},"basic/basic_data.html#字符串":{"title":"&#x5B57;&#x7B26;&#x4E32;","path":"\\golang-learn\\basic\\basic_data.html#字符串","body":"&#x5B57;&#x7B26;&#x4E32;&#x5C31;&#x662F;&#x4E00;&#x4E32;&#x56FA;&#x5B9A;&#x957F;&#x5EA6;&#x7684;&#x5B57;&#x7B26;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x7684;&#x5B57;&#x7B26;&#x5E8F;&#x5217;&#xFF0C;&#x4E0D;&#x53EF;&#x6539;&#x53D8;&#x3002;Go &#x7684;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x7531;&#x5355;&#x4E2A;&#x5B57;&#x8282;&#x8FDE;&#x63A5;&#x8D77;&#x6765;&#x7684;&#x3002;Go &#x7684;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x5B57;&#x8282;&#x4F7F; &#x7528; UTF-8 &#x7F16;&#x7801;&#x6807;&#x8BC6; Unicode &#x6587;&#x672C;&#x3002; &#x4E00;&#x4E2A;&#x539F;&#x751F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x9762;&#x503C;&#x5F62;&#x5F0F;&#x662F; `&#x2026;`&#xFF0C;&#x4F7F;&#x7528;&#x53CD;&#x5F15;&#x53F7;&#x4EE3;&#x66FF;&#x53CC;&#x5F15;&#x53F7;&#x3002;&#x5728;&#x539F;&#x751F;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x9762;&#x503C;&#x4E2D;&#xFF0C;&#x6CA1;&#x6709;&#x8F6C;&#x4E49;&#x64CD;&#x4F5C;&#xFF1B;&#x5168;&#x90E8;&#x7684;&#x5185;&#x5BB9;&#x90FD;&#x662F;&#x5B57;&#x9762;&#x7684;&#x610F;&#x601D;&#xFF0C; &#x5305;&#x542B;&#x9000;&#x683C;&#x548C;&#x6362;&#x884C; &#x3002; &#x5B57;&#x7B26;&#x4E32;&#x64CD;&#x4F5C; &#x5185;&#x7F6E;&#x51FD;&#x6570; len &#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#x3002; &#x53EF;&#x4EE5;&#x901A;&#x8FC7; string[index] &#x83B7;&#x53D6;&#x67D0;&#x4E2A;&#x7D22;&#x5F15;&#x4F4D;&#x7F6E;&#x7684;&#x5B57;&#x8282;&#x503C;&#xFF0C;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x4E0D;&#x53EF;&#x4FEE;&#x6539;&#x7684;&#xFF0C;&#x4E0D;&#x80FD;&#x4F7F;&#x7528; string[index] = string2 &#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6539;&#x53D8;&#x5B57;&#x7B26;&#x4E32; &#xFF0C;&#x8981;&#x4FEE;&#x6539;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5FC5;&#x987B;&#x5C06;&#x5176;&#x8F6C;&#x4E3A;&#x53EF;&#x53D8;&#x7C7B;&#x578B;&#xFF08; []rune &#x6216; []byte &#xFF09;&#xFF0C;&#x5B8C;&#x6210;&#x540E;&#x518D;&#x8F6C;&#x56DE;&#x6765;&#x3002; string[i, l] &#x83B7;&#x53D6; string &#x4ECE;&#x7B2C; i &#x4E2A;&#x5B57;&#x8282;&#x4F4D;&#x7F6E;&#x5F00;&#x59CB;&#x7684; l &#x4E2A;&#x5B57;&#x8282;&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x5982;&#xFF1A; 1 2 3 4 5 6 s := hello, world fmt.Println(s[ 0 : 5 ]) // hello fmt.Println(s[: 5 ]) // hello fmt.Println(s[ 7 :]) // world fmt.Println(s[:]) // hello, world + &#x62FC;&#x63A5;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982; fmt.Println(goodbye + s[5:]) &#x8F93;&#x51FA; goodbye, world &#x3002;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x6BCF;&#x6B21;&#x8FD0;&#x7B97;&#x90FD;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5B57; &#x7B26;&#x4E32;&#xFF0C;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x5206;&#x914D;&#x5185;&#x5B58;&#xFF0C;&#x4F1A;&#x7ED9;&#x5185;&#x5B58;&#x5206;&#x914D;&#x548C; GC &#x5E26;&#x6765;&#x989D;&#x5916;&#x7684;&#x8D1F;&#x62C5;&#xFF0C;&#x6240;&#x4EE5;&#x6027;&#x80FD;&#x6BD4;&#x8F83;&#x5DEE;&#x3002; fmt.Sprintf() &#x62FC;&#x63A5;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5185;&#x90E8;&#x4F7F;&#x7528; []byte &#x5B9E;&#x73B0;&#xFF0C;&#x4E0D;&#x50CF;&#x76F4;&#x63A5;&#x8FD0;&#x7B97;&#x7B26;&#x8FD9;&#x79CD;&#x4F1A;&#x4EA7;&#x751F;&#x5F88;&#x591A;&#x4E34;&#x65F6;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x4F46;&#x662F;&#x5185;&#x90E8;&#x7684;&#x903B;&#x8F91;&#x6BD4;&#x8F83;&#x590D;&#x6742;&#xFF0C;&#x6709;&#x5F88; &#x591A;&#x989D;&#x5916;&#x7684;&#x5224;&#x65AD;&#xFF0C;&#x8FD8;&#x7528;&#x5230;&#x4E86; interface &#xFF0C;&#x6240;&#x4EE5;&#x6027;&#x80FD;&#x4E00;&#x822C;&#x3002; strings.Join() &#x62FC;&#x63A5;&#x5B57;&#x7B26;&#x4E32;&#xFF0C; Join &#x4F1A;&#x5148;&#x6839;&#x636E;&#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x8BA1;&#x7B97;&#x51FA;&#x4E00;&#x4E2A;&#x62FC;&#x63A5;&#x4E4B;&#x540E;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x7136;&#x540E;&#x7533;&#x8BF7;&#x5BF9;&#x5E94;&#x5927;&#x5C0F;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x4E00;&#x4E2A;&#x4E00;&#x4E2A;&#x5B57;&#x7B26; &#x4E32;&#x586B;&#x5165;&#xFF0C;&#x5728;&#x5DF2;&#x6709;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x8FD9;&#x79CD;&#x6548;&#x7387;&#x4F1A;&#x5F88;&#x9AD8;&#xFF0C;&#x4F46;&#x662F;&#x672C;&#x6765;&#x6CA1;&#x6709;&#xFF0C;&#x53BB;&#x6784;&#x9020;&#x8FD9;&#x4E2A;&#x6570;&#x636E;&#x7684;&#x4EE3;&#x4EF7;&#x4E5F;&#x4E0D;&#x5C0F;&#x3002; bytes.Buffer &#x62FC;&#x63A5;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x6BD4;&#x8F83;&#x7406;&#x60F3;&#xFF0C;&#x53EF;&#x4EE5;&#x5F53;&#x6210;&#x53EF;&#x53D8;&#x5B57;&#x7B26;&#x4F7F;&#x7528;&#xFF0C;&#x5BF9;&#x5185;&#x5B58;&#x7684;&#x589E;&#x957F;&#x4E5F;&#x6709;&#x4F18;&#x5316;&#xFF0C;&#x5982;&#x679C;&#x80FD;&#x9884;&#x4F30;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x8FD8;&#x53EF; &#x4EE5;&#x7528; buffer.Grow() &#x63A5;&#x53E3;&#x6765;&#x8BBE;&#x7F6E; capacity &#x3002; 1 2 3 4 5 6 var buffer bytes.Buffer buffer.WriteString( hello ) buffer.WriteString( ,  ) buffer.WriteString( world ) fmt.Print(buffer.String()) strings.Builder &#x5185;&#x90E8;&#x901A;&#x8FC7; slice &#x6765;&#x4FDD;&#x5B58;&#x548C;&#x7BA1;&#x7406;&#x5185;&#x5BB9;&#x3002; slice &#x5185;&#x90E8;&#x5219;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x6307;&#x5411;&#x5B9E;&#x9645;&#x4FDD;&#x5B58;&#x5185;&#x5BB9;&#x7684;&#x6570;&#x7EC4;&#x3002; strings.Builder &#x662F;&#x975E;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#xFF0C;&#x6027;&#x80FD;&#x4E0A;&#x548C; bytes.Buffer &#x76F8;&#x5DEE;&#x65E0;&#x51E0;&#x3002; 1 2 3 4 5 var b1 strings.Builder b1.WriteString( ABC ) b1.WriteString( DEF ) fmt.Print(b1.String()) &#x4F7F;&#x7528; == &#x548C;  &#x8FDB;&#x884C;&#x5B57;&#x7B26;&#x4E32;&#x6BD4;&#x8F83;&#x3002; strings &#x5305;&#x4E0E;&#x5B57;&#x7B26;&#x4E32;&#x64CD;&#x4F5C; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 /*&#x5B57;&#x7B26;&#x4E32;&#x57FA;&#x672C;&#x64CD;&#x4F5C;--strings*/ str := wangdy //&#x662F;&#x5426;&#x5305;&#x542B; fmt.Println(strings.Contains(str, wang ), strings.Contains(str, 123 )) //true false //&#x83B7;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x957F;&#x5EA6; fmt.Println( len (str)) //6 //&#x83B7;&#x53D6;&#x5B57;&#x7B26;&#x5728;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x4F4D;&#x7F6E; &#x4ECE;0&#x5F00;&#x59CB;,&#x5982;&#x679C;&#x4E0D;&#x5B58;&#x5728;&#xFF0C;&#x8FD4;&#x56DE;-1 fmt.Println(strings.Index(str, g )) //3 fmt.Println(strings.Index(str, x )) //-1 //&#x5224;&#x65AD;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x5426;&#x4EE5; xx &#x5F00;&#x5934; fmt.Println(strings.HasPrefix(str, wa )) //true //&#x5224;&#x65AD;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x5426;&#x4EE5; xx &#x7ED3;&#x5C3E; fmt.Println(strings.HasSuffix(str, dy )) //true //&#x5224;&#x65AD;2&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5927;&#x5C0F;&#xFF0C;&#x76F8;&#x7B49;0&#xFF0C;&#x5DE6;&#x8FB9;&#x5927;&#x4E8E;&#x53F3;&#x8FB9;-1&#xFF0C;&#x5176;&#x4ED6;1 str2 := hahaha fmt.Println(strings.Compare(str, str2)) //1 //&#x5206;&#x5272;&#x5B57;&#x7B26;&#x4E32; strSplit := strings.Split( 1-2-3-4-a , - ) fmt.Println(strSplit) //[1 2 3 4 a] //&#x7EC4;&#x88C5;&#x5B57;&#x7B26;&#x4E32; fmt.Println(strings.Join(strSplit, # )) //1#2#3#4#a //&#x53BB;&#x9664;&#x5B57;&#x7B26;&#x4E32;2&#x7AEF;&#x7A7A;&#x683C; fmt.Printf( %s,%s\\n , strings.Trim(  &#x6211;&#x7684;2&#x8FB9;&#x6709;&#x7A7A;&#x683C; 1  ,   ), ///// ) //&#x6211;&#x7684;2&#x8FB9;&#x6709;&#x7A7A;&#x683C; 1,///// //&#x5927;&#x5C0F;&#x5199;&#x8F6C;&#x6362; fmt.Println(strings.ToUpper( abDCaE )) //ABDCAE fmt.Println(strings.ToLower( abDCaE )) //abdcae //&#x5B57;&#x7B26;&#x4E32;&#x66FF;&#x6362;:&#x610F;&#x601D;&#x662F;&#xFF1A;&#x5728;sourceStr&#x4E2D;&#xFF0C;&#x628A;oldStr&#x7684;&#x524D;n&#x4E2A;&#x66FF;&#x6362;&#x6210;newStr&#xFF0C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x65B0;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x5982;&#x679C;n0&#x5219;&#x5168;&#x90E8;&#x66FF;&#x6362; sourceStr := 123123123 oldStr := 12 newStr := ab n := 2 fmt.Println(strings.Replace(sourceStr, oldStr, newStr, n)) &#x5728; Go &#x8BED;&#x8A00;&#x4E2D;&#xFF0C; string &#x7C7B;&#x578B;&#x7684;&#x503C;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x3002;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x60F3;&#x83B7;&#x5F97;&#x4E00;&#x4E2A;&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x53EA;&#x80FD;&#x57FA;&#x4E8E;&#x539F;&#x5B57;&#x7B26;&#x4E32;&#x8FDB;&#x884C;&#x88C1;&#x526A;&#x3001;&#x62FC;&#x63A5;&#x7B49;&#x64CD;&#x4F5C;&#xFF0C; &#x4ECE;&#x800C;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5B57;&#x7B26;&#x4E32; &#x3002;&#x88C1;&#x526A;&#x64CD;&#x4F5C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5207;&#x7247;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x800C;&#x62FC;&#x63A5;&#x64CD;&#x4F5C;&#x53EF;&#x4EE5;&#x7528;&#x64CD;&#x4F5C;&#x7B26; + &#x5B9E;&#x73B0;&#x3002; &#x5728;&#x5E95;&#x5C42;&#xFF0C;&#x4E00;&#x4E2A; string &#x503C;&#x7684;&#x5185;&#x5BB9;&#x4F1A;&#x88AB;&#x5B58;&#x50A8;&#x5230;&#x4E00;&#x5757;&#x8FDE;&#x7EED;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x4E2D;&#x3002;&#x540C;&#x65F6;&#xFF0C;&#x8FD9;&#x5757;&#x5185;&#x5B58;&#x5BB9;&#x7EB3;&#x7684;&#x5B57;&#x8282;&#x6570;&#x91CF;&#x4E5F;&#x4F1A;&#x88AB;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#xFF0C;&#x5E76;&#x7528;&#x4E8E;&#x8868;&#x793A; &#x8BE5; string &#x503C;&#x7684;&#x957F;&#x5EA6;&#x3002; &#x4F60;&#x53EF;&#x4EE5;&#x628A;&#x8FD9;&#x5757;&#x5185;&#x5B58;&#x7684;&#x5185;&#x5BB9;&#x770B;&#x6210;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#xFF0C;&#x800C;&#x76F8;&#x5E94;&#x7684; string &#x503C;&#x5219;&#x5305;&#x542B;&#x4E86;&#x6307;&#x5411;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x5934;&#x90E8;&#x7684;&#x6307;&#x9488;&#x503C;&#x3002;&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C; &#x6211;&#x4EEC;&#x5728; &#x4E00;&#x4E2A; string &#x503C;&#x4E0A;&#x5E94;&#x7528;&#x5207;&#x7247;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x5728;&#x5BF9;&#x5176;&#x5E95;&#x5C42;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x505A;&#x5207;&#x7247; &#x3002; &#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x6211;&#x4EEC;&#x5728; &#x8FDB;&#x884C;&#x5B57;&#x7B26;&#x4E32;&#x62FC;&#x63A5;&#x7684;&#x65F6;&#x5019;&#xFF0C;Go &#x8BED;&#x8A00;&#x4F1A;&#x628A;&#x6240;&#x6709;&#x88AB;&#x62FC;&#x63A5;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x4F9D;&#x6B21;&#x62F7;&#x8D1D;&#x5230;&#x4E00;&#x4E2A;&#x5D2D;&#x65B0;&#x4E14;&#x8DB3;&#x591F;&#x5927;&#x7684;&#x8FDE;&#x7EED;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x4E2D;&#xFF0C; &#x5E76;&#x628A;&#x6301;&#x6709;&#x76F8;&#x5E94;&#x6307;&#x9488;&#x503C;&#x7684; string &#x503C;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C;&#x8FD4;&#x56DE; &#x3002; &#x663E;&#x7136;&#xFF0C;&#x5F53; &#x7A0B;&#x5E8F;&#x4E2D;&#x5B58;&#x5728;&#x8FC7;&#x591A;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x62FC;&#x63A5;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x5BF9;&#x5185;&#x5B58;&#x7684;&#x5206;&#x914D;&#x4EA7;&#x751F;&#x975E;&#x5E38;&#x5927;&#x7684;&#x538B;&#x529B; &#x3002; &#x4E0E; string &#x503C;&#x76F8;&#x6BD4;&#xFF0C; strings.Builder &#x7C7B;&#x578B;&#x7684;&#x503C;&#x6709;&#x54EA;&#x4E9B;&#x4F18;&#x52BF; &#x5DF2;&#x5B58;&#x5728;&#x7684;&#x5185;&#x5BB9;&#x4E0D;&#x53EF;&#x53D8;&#xFF0C;&#x4F46;&#x53EF;&#x4EE5;&#x62FC;&#x63A5;&#x66F4;&#x591A;&#x7684;&#x5185;&#x5BB9;&#xFF1B; &#x51CF;&#x5C11;&#x4E86;&#x5185;&#x5B58;&#x5206;&#x914D;&#x548C;&#x5185;&#x5BB9;&#x62F7;&#x8D1D;&#x7684;&#x6B21;&#x6570;&#xFF1B; &#x53EF;&#x5C06;&#x5185;&#x5BB9;&#x91CD;&#x7F6E;&#xFF0C;&#x53EF;&#x91CD;&#x7528;&#x503C;&#x3002; Builder &#x503C;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x627F;&#x8F7D;&#x5185;&#x5BB9;&#x7684;&#x5BB9;&#x5668;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF09;&#x3002;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x4EE5; byte &#x4E3A;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x7684;&#x5207;&#x7247;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x5B57;&#x8282;&#x5207;&#x7247;&#xFF09;&#x3002; &#x7531;&#x4E8E;&#x8FD9;&#x6837;&#x7684;&#x5B57;&#x8282;&#x5207;&#x7247;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8BF4;&#x5B83;&#x4E0E; string &#x503C;&#x5B58;&#x50A8;&#x5185;&#x5BB9;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x4E00;&#x6837;&#x7684; &#x3002;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x662F;&#x901A;&#x8FC7; &#x4E00;&#x4E2A; unsafe.Pointer &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x6765;&#x6301;&#x6709;&#x90A3;&#x4E2A;&#x6307;&#x5411;&#x4E86;&#x5E95;&#x5C42;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x7684;&#x6307;&#x9488;&#x503C;&#x7684;&#x3002; &#x56E0;&#x4E3A;&#x8FD9;&#x6837;&#x7684;&#x5185;&#x90E8;&#x6784;&#x9020;&#xFF0C; Builder &#x503C;&#x540C;&#x6837;&#x62E5;&#x6709;&#x9AD8;&#x6548;&#x5229;&#x7528;&#x5185;&#x5B58;&#x7684;&#x524D;&#x63D0;&#x6761;&#x4EF6;&#x3002; &#x5DF2;&#x5B58;&#x5728;&#x4E8E; Builder &#x503C;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528; Builder &#x503C;&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x6CD5;&#x62FC;&#x63A5;&#x66F4;&#x591A;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x800C;&#x4E1D;&#x6BEB;&#x4E0D;&#x7528;&#x62C5;&#x5FC3;&#x8FD9;&#x4E9B;&#x65B9;&#x6CD5; &#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x5185;&#x5BB9;&#x3002; Builder &#x503C;&#x62E5;&#x6709;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#xFF0C;&#x5305;&#x62EC;&#xFF1A; Write &#x3001; WriteByte &#x3001; WriteRune &#x548C; WriteString &#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x628A;&#x5B83;&#x4EEC;&#x7EDF;&#x79F0; &#x4E3A; &#x62FC;&#x63A5;&#x65B9;&#x6CD5; &#x3002; &#x8C03;&#x7528;&#x4E0A;&#x8FF0;&#x65B9;&#x6CD5;&#x628A;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x62FC;&#x63A5;&#x5230;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x5185;&#x5BB9;&#x7684;&#x5C3E;&#x90E8;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x53F3;&#x8FB9;&#xFF09;&#x3002;&#x8FD9;&#x65F6;&#xFF0C;&#x5982;&#x6709;&#x5FC5;&#x8981;&#xFF0C; Builder &#x503C;&#x4F1A;&#x81EA;&#x52A8;&#x5730;&#x5BF9;&#x81EA;&#x8EAB;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x8FDB;&#x884C;&#x6269;&#x5BB9;&#x3002; &#x8FD9;&#x91CC;&#x7684;&#x81EA;&#x52A8;&#x6269;&#x5BB9;&#x7B56;&#x7565;&#x4E0E;&#x5207;&#x7247;&#x7684;&#x6269;&#x5BB9;&#x7B56;&#x7565;&#x4E00;&#x81F4;&#x3002; &#x9664;&#x4E86; Builder &#x503C;&#x7684;&#x81EA;&#x52A8;&#x6269;&#x5BB9;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x9009;&#x62E9;&#x624B;&#x52A8;&#x6269;&#x5BB9;&#xFF0C;&#x8FD9;&#x901A;&#x8FC7;&#x8C03;&#x7528; Builder &#x503C;&#x7684; Grow &#x65B9;&#x6CD5;&#x5C31;&#x53EF;&#x4EE5;&#x505A;&#x5230;&#x3002; Grow &#x65B9;&#x6CD5;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x79F0; &#x4E3A; &#x6269;&#x5BB9;&#x65B9;&#x6CD5; &#xFF0C;&#x5B83;&#x63A5;&#x53D7;&#x4E00;&#x4E2A; int &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570; n &#xFF0C;&#x8BE5;&#x53C2;&#x6570;&#x7528;&#x4E8E;&#x4EE3;&#x8868;&#x5C06;&#x8981;&#x6269;&#x5145;&#x7684;&#x5B57;&#x8282;&#x6570;&#x91CF;&#x3002; Grow &#x65B9;&#x6CD5;&#x4F1A;&#x628A;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x4E2D;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x589E;&#x52A0; n &#x4E2A;&#x5B57;&#x8282;&#x3002;&#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BB2;&#xFF0C;&#x5B83;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x5B57;&#x8282;&#x5207;&#x7247;&#x4F5C;&#x4E3A;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF0C;&#x8BE5;&#x5207;&#x7247;&#x7684;&#x5BB9;&#x91CF;&#x4F1A;&#x662F;&#x539F; &#x5BB9;&#x5668;&#x5BB9;&#x91CF;&#x7684;&#x4E8C;&#x500D;&#x518D;&#x52A0;&#x4E0A; n &#x3002;&#x4E4B;&#x540E;&#xFF0C;&#x5B83;&#x4F1A;&#x628A;&#x539F;&#x5BB9;&#x5668;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x5B57;&#x8282;&#x5168;&#x90E8;&#x62F7;&#x8D1D;&#x5230;&#x65B0;&#x5BB9;&#x5668;&#x4E2D;&#x3002; &#x4F7F;&#x7528; strings.Builder &#x7C7B;&#x578B;&#x7684;&#x7EA6;&#x675F; &#x53EA;&#x8981;&#x8C03;&#x7528;&#x4E86; Builder &#x503C;&#x7684;&#x62FC;&#x63A5;&#x65B9;&#x6CD5;&#x6216;&#x6269;&#x5BB9;&#x65B9;&#x6CD5;&#xFF0C;&#x5C31;&#x4E0D;&#x80FD;&#x518D;&#x4EE5;&#x4EFB;&#x4F55;&#x7684;&#x65B9;&#x5F0F;&#x5BF9;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x8FDB;&#x884C;&#x590D;&#x5236;&#x4E86; &#x3002;&#x5426;&#x5219;&#xFF0C;&#x53EA;&#x8981;&#x5728;&#x4EFB;&#x4F55;&#x526F;&#x672C;&#x4E0A;&#x8C03;&#x7528;&#x4E0A;&#x8FF0;&#x65B9; &#x6CD5;&#x5C31;&#x90FD;&#x4F1A;&#x5F15;&#x53D1; panic&#x3002;&#x8FD9;&#x91CC;&#x6240;&#x8BF4;&#x7684;&#x590D;&#x5236;&#x65B9;&#x5F0F;&#xFF0C;&#x5305;&#x62EC;&#x4F46;&#x4E0D;&#x9650;&#x4E8E;&#x5728;&#x51FD;&#x6570;&#x95F4;&#x4F20;&#x9012;&#x503C;&#x3001;&#x901A;&#x8FC7;&#x901A;&#x9053;&#x4F20;&#x9012;&#x503C;&#x3001;&#x628A;&#x503C;&#x8D4B;&#x4E88;&#x53D8;&#x91CF;&#x7B49;&#x7B49;&#x3002; &#x6B63;&#x662F;&#x7531;&#x4E8E;&#x5DF2;&#x4F7F;&#x7528;&#x7684; Builder &#x503C;&#x4E0D;&#x80FD;&#x518D;&#x88AB;&#x590D;&#x5236;&#xFF0C;&#x6240;&#x4EE5;&#x80AF;&#x5B9A;&#x4E0D;&#x4F1A;&#x51FA;&#x73B0;&#x591A;&#x4E2A; Builder &#x503C;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x90A3;&#x4E2A;&#x5B57;&#x8282;&#x5207;&#x7247;&#xFF09;&#x5171;&#x7528;&#x4E00;&#x4E2A;&#x5E95;&#x5C42;&#x5B57; &#x8282;&#x6570;&#x7EC4;&#x7684;&#x60C5;&#x51B5;&#x3002;&#x8FD9;&#x6837;&#x4E5F;&#x5C31;&#x907F;&#x514D;&#x4E86;&#x591A;&#x4E2A;&#x540C;&#x6E90;&#x7684; Builder &#x503C;&#x5728;&#x62FC;&#x63A5;&#x5185;&#x5BB9;&#x65F6;&#x53EF;&#x80FD;&#x4EA7;&#x751F;&#x7684;&#x51B2;&#x7A81;&#x95EE;&#x9898;&#x3002; &#x4E0D;&#x8FC7;&#xFF0C;&#x867D;&#x7136;&#x5DF2;&#x4F7F;&#x7528;&#x7684; Builder &#x503C;&#x4E0D;&#x80FD;&#x518D;&#x88AB;&#x590D;&#x5236;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x7684;&#x6307;&#x9488;&#x503C;&#x5374;&#x53EF;&#x4EE5;&#x3002;&#x65E0;&#x8BBA;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x90FD;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4EFB;&#x4F55;&#x65B9;&#x5F0F;&#x590D;&#x5236;&#x8FD9;&#x6837;&#x7684;&#x6307;&#x9488;&#x503C; &#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x6837;&#x7684;&#x6307;&#x9488;&#x503C;&#x6307;&#x5411;&#x7684;&#x90FD;&#x4F1A;&#x662F;&#x540C;&#x4E00;&#x4E2A; Builder &#x503C;&#x3002; strings.Reader &#x7C7B;&#x578B; strings.Reader &#x7C7B;&#x578B;&#x662F;&#x4E3A;&#x4E86;&#x9AD8;&#x6548;&#x8BFB;&#x53D6;&#x5B57;&#x7B26;&#x4E32;&#x800C;&#x5B58;&#x5728;&#x7684;&#x3002;&#x53EF;&#x4EE5;&#x8BA9;&#x6211;&#x4EEC;&#x5F88;&#x65B9;&#x4FBF;&#x5730;&#x8BFB;&#x53D6;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#x3002;&#x5728;&#x8BFB;&#x53D6;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C; Reader &#x503C;&#x4F1A; &#x4FDD;&#x5B58;&#x5DF2;&#x8BFB;&#x53D6;&#x7684;&#x5B57;&#x8282;&#x7684;&#x8BA1;&#x6570;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x5DF2;&#x8BFB;&#x8BA1;&#x6570;&#xFF09;&#x3002; &#x5DF2;&#x8BFB;&#x8BA1;&#x6570;&#x4E5F;&#x4EE3;&#x8868;&#x7740;&#x4E0B;&#x4E00;&#x6B21;&#x8BFB;&#x53D6;&#x7684;&#x8D77;&#x59CB;&#x7D22;&#x5F15;&#x4F4D;&#x7F6E;&#x3002; Reader &#x503C;&#x6B63;&#x662F;&#x4F9D;&#x9760;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#xFF0C;&#x4EE5;&#x53CA;&#x9488;&#x5BF9;&#x5B57;&#x7B26;&#x4E32;&#x503C;&#x7684;&#x5207;&#x7247;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x5FEB;&#x901F;&#x8BFB;&#x53D6; &#x3002; bytes &#x5305;&#x4E0E;&#x5B57;&#x8282;&#x4E32;&#x64CD;&#x4F5C; strings &#x5305;&#x548C; bytes &#x5305;&#x53EF;&#x4EE5;&#x8BF4;&#x662F;&#x4E00;&#x5BF9;&#x5B6A;&#x751F;&#x5144;&#x5F1F;&#xFF0C;&#x5B83;&#x4EEC;&#x5728; API &#x65B9;&#x9762;&#x975E;&#x5E38;&#x7684;&#x76F8;&#x4F3C;&#x3002;&#x5355;&#x4ECE;&#x5B83;&#x4EEC;&#x63D0;&#x4F9B;&#x7684;&#x51FD;&#x6570;&#x7684;&#x6570;&#x91CF;&#x548C;&#x529F;&#x80FD;&#x4E0A;&#x8BB2;&#xFF0C;&#x5DEE;&#x522B;&#x5FAE;&#x4E4E;&#x5176;&#x5FAE;&#x3002; &#x53EA;&#x4E0D;&#x8FC7;&#xFF0C; strings &#x5305;&#x4E3B;&#x8981;&#x9762;&#x5411;&#x7684;&#x662F; Unicode &#x5B57;&#x7B26;&#x548C;&#x7ECF;&#x8FC7; UTF-8 &#x7F16;&#x7801;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#xFF0C;&#x800C; bytes &#x5305;&#x9762;&#x5BF9;&#x7684;&#x5219;&#x4E3B;&#x8981;&#x662F;&#x5B57;&#x8282;&#x548C;&#x5B57;&#x8282;&#x5207;&#x7247;&#x3002; bytes.Buffer bytes.Buffer &#x7C7B;&#x578B;&#x7684;&#x7528;&#x9014;&#x4E3B;&#x8981;&#x662F;&#x4F5C;&#x4E3A;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x7684;&#x7F13;&#x51B2;&#x533A;&#x3002; bytes.Buffer &#x662F;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x7684;&#x3002; bytes.Buffer &#x4E0D;&#x4F46;&#x53EF;&#x4EE5;&#x62FC;&#x63A5;&#x3001;&#x622A;&#x65AD;&#x5176;&#x4E2D; &#x7684;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#xFF0C;&#x4EE5;&#x5404;&#x79CD;&#x5F62;&#x5F0F;&#x5BFC;&#x51FA;&#x5176;&#x4E2D;&#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x8FD8;&#x53EF;&#x4EE5;&#x987A;&#x5E8F;&#x5730;&#x8BFB;&#x53D6;&#x5176;&#x4E2D;&#x7684;&#x5B50;&#x5E8F;&#x5217;&#x3002; &#x5728;&#x5185;&#x90E8;&#xFF0C; bytes.Buffer &#x7C7B;&#x578B;&#x540C;&#x6837;&#x662F;&#x4F7F;&#x7528;&#x5B57;&#x8282;&#x5207;&#x7247;&#x4F5C;&#x4E3A;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x3002;&#x5E76;&#x4E14;&#xFF0C;&#x4E0E; strings.Reader &#x7C7B;&#x578B;&#x7C7B;&#x4F3C;&#xFF0C; bytes.Buffer &#x6709;&#x4E00;&#x4E2A; int &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x7528;&#x4E8E;&#x4EE3;&#x8868;&#x5DF2;&#x8BFB;&#x5B57;&#x8282;&#x7684;&#x8BA1;&#x6570;&#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x79F0;&#x4E3A; &#x5DF2;&#x8BFB;&#x8BA1;&#x6570; &#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x4E0E; strings.Reader &#x7C7B;&#x578B;&#x7684; Len &#x65B9;&#x6CD5;&#x4E00;&#x6837;&#xFF0C; bytes.Buffer &#x7684; Len &#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x7684;&#x4E5F;&#x662F;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x4E2D;&#x672A;&#x88AB;&#x8BFB;&#x53D6;&#x90E8;&#x5206;&#x7684;&#x957F;&#x5EA6;&#xFF0C; &#x800C;&#x4E0D;&#x662F;&#x5176;&#x4E2D;&#x5DF2;&#x5B58;&#x5185;&#x5BB9;&#x7684;&#x603B;&#x957F;&#x5EA6;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x5185;&#x5BB9;&#x957F;&#x5EA6;&#xFF09;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // &#x793A;&#x4F8B;1&#x3002; var buffer1 bytes.Buffer contents := Simple byte buffer for marshaling data. fmt.Printf( Write contents %q ...\\n , contents) buffer1.WriteString(contents) fmt.Printf( The length of buffer: %d\\n , buffer1.Len()) // = 39 fmt.Printf( The capacity of buffer: %d\\n , buffer1.Cap()) // = 64 fmt.Println() // &#x793A;&#x4F8B;2&#x3002; p1 := make ([] byte , 7 ) n, _ := buffer1.Read(p1) fmt.Printf( %d bytes were read. (call Read)\\n , n) fmt.Printf( The length of buffer: %d\\n , buffer1.Len()) // = 32 fmt.Printf( The capacity of buffer: %d\\n , buffer1.Cap()) // = 64 &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x793A;&#x4F8B;&#x4E00;&#x8F93;&#x51FA; 39 &#x548C; 64&#xFF0C;&#x4F46;&#x662F;&#x793A;&#x4F8B;&#x4E8C;&#xFF0C;&#x4ECE; buffer1 &#x4E2D;&#x8BFB;&#x53D6;&#x4E00;&#x90E8;&#x5206;&#x5185;&#x5BB9;&#xFF0C;&#x5E76;&#x7528;&#x5B83;&#x4EEC;&#x586B;&#x6EE1;&#x957F;&#x5EA6;&#x4E3A;7&#x7684;&#x5B57;&#x8282;&#x5207;&#x7247; p1 &#x4E4B;&#x540E;&#xFF0C; buffer1 &#x7684; Len &#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x7684;&#x7ED3;&#x679C;&#x503C;&#x53D8;&#x4E3A;&#x4E86; 32&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x5E76;&#x6CA1;&#x6709;&#x518D;&#x5411;&#x8BE5;&#x7F13;&#x51B2;&#x533A;&#x4E2D;&#x5199;&#x5165;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x7684;&#x5BB9;&#x91CF;&#x4F1A;&#x4FDD;&#x6301;&#x4E0D;&#x53D8;&#xFF0C;&#x4ECD;&#x662F; 64&#x3002; &#x5BF9;&#x4E8E;&#x5904;&#x5728;&#x96F6;&#x503C;&#x72B6;&#x6001;&#x7684; Buffer &#x503C;&#x6765;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x7B2C;&#x4E00;&#x6B21;&#x6269;&#x5BB9;&#x65F6;&#x7684;&#x53E6;&#x9700;&#x5B57;&#x8282;&#x6570;&#x4E0D;&#x5927;&#x4E8E; 64&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x503C;&#x5C31;&#x4F1A;&#x57FA;&#x4E8E;&#x4E00;&#x4E2A;&#x9884;&#x5148;&#x5B9A;&#x4E49;&#x597D;&#x7684;&#x3001;&#x957F;&#x5EA6;&#x4E3A; 64 &#x7684;&#x5B57;&#x8282;&#x6570;&#x7EC4;&#x6765;&#x521B;&#x5EFA;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x3002; &#x7531;&#x4E8E; strings.Reader &#x8FD8;&#x6709;&#x4E00;&#x4E2A; Size &#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x7ED9;&#x51FA;&#x5185;&#x5BB9;&#x957F;&#x5EA6;&#x7684;&#x503C;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x7528;&#x5185;&#x5BB9;&#x957F;&#x5EA6;&#x51CF;&#x53BB;&#x672A;&#x8BFB;&#x90E8;&#x5206;&#x7684;&#x957F;&#x5EA6;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x5730;&#x5F97; &#x5230;&#x5B83;&#x7684;&#x5DF2;&#x8BFB;&#x8BA1;&#x6570;&#x3002; &#x7136;&#x800C;&#xFF0C; bytes.Buffer &#x7C7B;&#x578B;&#x5374;&#x6CA1;&#x6709;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x53EA;&#x6709; Cap &#x65B9;&#x6CD5;&#x3002;&#x53EF;&#x662F; Cap &#x65B9;&#x6CD5;&#x63D0;&#x4F9B;&#x7684;&#x662F;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;&#x5185;&#x5BB9;&#x957F;&#x5EA6;&#x3002; bytes.Buffer &#x7684;&#x6269;&#x5BB9;&#x7B56;&#x7565; Buffer &#x503C;&#x65E2;&#x53EF;&#x4EE5;&#x88AB;&#x624B;&#x52A8;&#x6269;&#x5BB9;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x81EA;&#x52A8;&#x6269;&#x5BB9;&#x3002;&#x5E76;&#x4E14;&#xFF0C;&#x8FD9;&#x4E24;&#x79CD;&#x6269;&#x5BB9;&#x65B9;&#x5F0F;&#x7684;&#x7B56;&#x7565;&#x662F;&#x57FA;&#x672C;&#x4E00;&#x81F4;&#x7684;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x9664;&#x975E;&#x6211;&#x4EEC;&#x5B8C;&#x5168;&#x786E;&#x5B9A;&#x540E;&#x7EED;&#x5185;&#x5BB9;&#x6240;&#x9700; &#x7684;&#x5B57;&#x8282;&#x6570;&#xFF0C;&#x5426;&#x5219;&#x8BA9; Buffer &#x503C;&#x81EA;&#x52A8;&#x53BB;&#x6269;&#x5BB9;&#x5C31;&#x597D;&#x4E86;&#x3002; &#x5728;&#x6269;&#x5BB9;&#x7684;&#x65F6;&#x5019;&#xFF0C; Buffer &#x503C;&#x4E2D;&#x76F8;&#x5E94;&#x7684;&#x4EE3;&#x7801;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#xFF09;&#x4F1A;&#x5148;&#x5224;&#x65AD;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5269;&#x4F59;&#x5BB9;&#x91CF;&#xFF0C;&#x662F;&#x5426;&#x53EF;&#x4EE5;&#x6EE1;&#x8DB3;&#x8C03;&#x7528;&#x65B9;&#x7684;&#x8981;&#x6C42;&#xFF0C;&#x6216;&#x8005;&#x662F;&#x5426;&#x8DB3; &#x591F;&#x5BB9;&#x7EB3;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x5982;&#x679C;&#x53EF;&#x4EE5;&#xFF0C;&#x90A3;&#x4E48;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x4F1A;&#x5728;&#x5F53;&#x524D;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x4E4B;&#x4E0A;&#xFF0C;&#x8FDB;&#x884C;&#x957F;&#x5EA6;&#x6269;&#x5145;&#x3002;&#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x4E0E;&#x5176;&#x957F;&#x5EA6;&#x7684;&#x5DEE;&#xFF0C;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x53E6;&#x9700;&#x7684;&#x5B57; &#x8282;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x5C31;&#x4F1A;&#x901A;&#x8FC7;&#x5207;&#x7247;&#x64CD;&#x4F5C;&#x5BF9;&#x539F;&#x6709;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x957F;&#x5EA6;&#x8FDB;&#x884C;&#x6269;&#x5145;&#xFF0C;&#x5C31;&#x50CF;&#x4E0B;&#x9762;&#x8FD9;&#x6837;&#xFF1A; 1 b.buf = b.buf[:length+need] &#x53CD;&#x4E4B;&#xFF0C;&#x5982;&#x679C;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5269;&#x4F59;&#x5BB9;&#x91CF;&#x4E0D;&#x591F;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x53EF;&#x80FD;&#x5C31;&#x4F1A;&#x7528;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x53BB;&#x66FF;&#x4EE3;&#x539F;&#x6709;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF0C;&#x4ECE;&#x800C;&#x5B9E;&#x73B0;&#x6269;&#x5BB9;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FD9;&#x91CC;&#x8FD8;&#x4E00;&#x6B65;&#x4F18;&#x5316;&#x3002; &#x5982;&#x679C;&#x5F53;&#x524D;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x7684;&#x4E00;&#x534A;&#x4ECD;&#x7136;&#x5927;&#x4E8E;&#x6216;&#x7B49;&#x4E8E;&#x5176;&#x73B0;&#x6709;&#x957F;&#x5EA6;&#x518D;&#x52A0;&#x4E0A;&#x53E6;&#x9700;&#x7684;&#x5B57;&#x8282;&#x6570;&#x7684;&#x548C;&#xFF0C;&#x5373;&#xFF1A; 1 cap (b.buf)/ 2 = len (b.buf)+need &#x90A3;&#x4E48;&#xFF0C;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x5C31;&#x4F1A;&#x590D;&#x7528;&#x73B0;&#x6709;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF0C;&#x5E76;&#x628A;&#x5BB9;&#x5668;&#x4E2D;&#x7684;&#x672A;&#x8BFB;&#x5185;&#x5BB9;&#x62F7;&#x8D1D;&#x5230;&#x5B83;&#x7684;&#x5934;&#x90E8;&#x4F4D;&#x7F6E;&#x3002;&#x8FD9;&#x4E5F;&#x610F;&#x5473;&#x7740;&#x5176;&#x4E2D;&#x7684;&#x5DF2;&#x8BFB;&#x5185;&#x5BB9;&#xFF0C;&#x5C06;&#x4F1A;&#x5168;&#x90E8;&#x88AB;&#x672A;&#x8BFB;&#x5185;&#x5BB9;&#x548C; &#x4E4B;&#x540E;&#x7684;&#x65B0;&#x5185;&#x5BB9;&#x8986;&#x76D6;&#x6389;&#x3002; &#x8FD9;&#x6837;&#x7684;&#x590D;&#x7528;&#x9884;&#x8BA1;&#x53EF;&#x4EE5;&#x81F3;&#x5C11;&#x8282;&#x7701;&#x6389;&#x4E00;&#x6B21;&#x540E;&#x7EED;&#x7684;&#x6269;&#x5BB9;&#x6240;&#x5E26;&#x6765;&#x7684;&#x5185;&#x5B58;&#x5206;&#x914D;&#xFF0C;&#x4EE5;&#x53CA;&#x82E5;&#x5E72;&#x5B57;&#x8282;&#x7684;&#x62F7;&#x8D1D;&#x3002; &#x82E5;&#x8FD9;&#x4E00;&#x6B65;&#x4F18;&#x5316;&#x672A;&#x80FD;&#x8FBE;&#x6210;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5F53;&#x524D;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x5C0F;&#x4E8E;&#x65B0;&#x957F;&#x5EA6;&#x7684;&#x4E8C;&#x500D;&#xFF0C;&#x90A3;&#x4E48;&#x6269;&#x5BB9;&#x4EE3;&#x7801;&#x5C31;&#x53EA;&#x80FD;&#x518D;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#xFF0C;&#x5E76;&#x628A;&#x539F;&#x6709;&#x5BB9;&#x5668; &#x4E2D;&#x7684;&#x672A;&#x8BFB;&#x5185;&#x5BB9;&#x62F7;&#x8D1D;&#x8FDB;&#x53BB;&#xFF0C;&#x6700;&#x540E;&#x518D;&#x7528;&#x65B0;&#x7684;&#x5BB9;&#x5668;&#x66FF;&#x6362;&#x6389;&#x539F;&#x6709;&#x7684;&#x5BB9;&#x5668;&#x3002;&#x8FD9;&#x4E2A;&#x65B0;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x5C06;&#x4F1A;&#x7B49;&#x4E8E;&#x539F;&#x6709;&#x5BB9;&#x91CF;&#x7684;&#x4E8C;&#x500D;&#x518D;&#x52A0;&#x4E0A;&#x53E6;&#x9700;&#x5B57;&#x8282;&#x6570;&#x7684;&#x548C;&#x3002; 1 &#x65B0;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF; =2* &#x539F;&#x6709;&#x5BB9;&#x91CF; + &#x6240;&#x9700;&#x5B57;&#x8282;&#x6570; bytes.Buffer &#x4E2D;&#x7684;&#x54EA;&#x4E9B;&#x65B9;&#x6CD5;&#x53EF;&#x80FD;&#x4F1A;&#x9020;&#x6210;&#x5185;&#x5BB9;&#x7684;&#x6CC4;&#x9732; &#x4EC0;&#x4E48;&#x53EB;&#x5185;&#x5BB9;&#x6CC4;&#x9732;&#xFF1F;&#x8FD9;&#x91CC;&#x6240;&#x8BF4;&#x7684;&#x5185;&#x5BB9;&#x6CC4;&#x9732;&#x662F;&#x6307;&#xFF0C;&#x4F7F;&#x7528; Buffer &#x503C;&#x7684;&#x4E00;&#x65B9;&#x901A;&#x8FC7;&#x67D0;&#x79CD;&#x975E;&#x6807;&#x51C6;&#x7684;&#xFF08;&#x6216;&#x8005;&#x8BF4;&#x4E0D;&#x6B63;&#x5F0F;&#x7684;&#xFF09;&#x65B9;&#x5F0F;&#x5F97;&#x5230;&#x4E86;&#x672C;&#x4E0D;&#x8BE5;&#x5F97;&#x5230;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x5728; bytes.Buffer &#x4E2D;&#xFF0C; Bytes &#x65B9;&#x6CD5;&#x548C; Next &#x65B9;&#x6CD5;&#x90FD;&#x53EF;&#x80FD;&#x4F1A;&#x9020;&#x6210;&#x5185;&#x5BB9;&#x7684;&#x6CC4;&#x9732; &#x3002;&#x539F;&#x56E0;&#x5728;&#x4E8E;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x628A;&#x57FA;&#x4E8E;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5207;&#x7247;&#x76F4;&#x63A5;&#x8FD4; &#x56DE;&#x7ED9;&#x4E86;&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x65B9;&#x3002; &#x6211;&#x4EEC;&#x90FD;&#x77E5;&#x9053;&#xFF0C; &#x901A;&#x8FC7;&#x5207;&#x7247;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x548C;&#x64CD;&#x7EB5;&#x5B83;&#x7684;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#x3002;&#x4E0D;&#x8BBA;&#x8FD9;&#x4E2A;&#x5207;&#x7247;&#x662F;&#x57FA;&#x4E8E;&#x67D0;&#x4E2A;&#x6570;&#x7EC4;&#x5F97;&#x6765;&#x7684;&#xFF0C;&#x8FD8;&#x662F;&#x901A;&#x8FC7;&#x5BF9;&#x53E6;&#x4E00;&#x4E2A;&#x5207;&#x7247;&#x505A;&#x5207;&#x7247;&#x64CD;&#x4F5C; &#x83B7;&#x5F97;&#x7684; &#xFF0C;&#x90FD;&#x662F;&#x5982;&#x6B64;&#x3002; 1 2 3 4 5 6 7 8 contents := ab buffer1 := bytes.NewBufferString(contents) fmt.Printf( The capacity of new buffer with contents %q: %d\\n , contents, buffer1.Cap()) // &#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x7684;&#x5BB9;&#x91CF;&#x4E3A;&#xFF1A;8&#x3002; fmt.Println() unreadBytes := buffer1.Bytes() fmt.Printf( The unread bytes of the buffer: %v\\n , unreadBytes) &#x524D;&#x9762;&#x901A;&#x8FC7;&#x8C03;&#x7528; buffer1 &#x7684; Bytes &#x65B9;&#x6CD5;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;&#x503C; unreadBytes &#xFF0C;&#x5305;&#x542B;&#x4E86;&#x5728;&#x90A3;&#x65F6;&#x5176;&#x4E2D;&#x7684;&#x6240;&#x6709;&#x672A;&#x8BFB;&#x5185;&#x5BB9;&#x3002; &#x4F46;&#x662F;&#xFF0C;&#x7531;&#x4E8E;&#x8FD9;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x4E0E; buffer1 &#x7684;&#x5185;&#x5BB9;&#x5BB9;&#x5668;&#x5728;&#x6B64;&#x65F6;&#x8FD8;&#x5171;&#x7528;&#x7740;&#x540C;&#x4E00;&#x4E2A;&#x5E95;&#x5C42;&#x6570;&#x7EC4;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x53EA;&#x9700;&#x901A;&#x8FC7;&#x7B80;&#x5355;&#x7684;&#x518D;&#x5207;&#x7247;&#x64CD;&#x4F5C;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5229;&#x7528;&#x8FD9;&#x4E2A; &#x7ED3;&#x679C;&#x503C;&#x62FF;&#x5230; buffer1 &#x5728;&#x6B64;&#x65F6;&#x7684;&#x6240;&#x6709;&#x672A;&#x8BFB;&#x5185;&#x5BB9;&#x3002;&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C; buffer1 &#x7684;&#x65B0;&#x5185;&#x5BB9;&#x5C31;&#x88AB;&#x6CC4;&#x9732;&#x51FA;&#x6765;&#x4E86;&#x3002; &#x4E00;&#x4E2A; string &#x7C7B;&#x578B;&#x7684;&#x503C;&#x5728;&#x5E95;&#x5C42;&#x600E;&#x6837;&#x88AB;&#x8868;&#x8FBE; &#x5728;&#x5E95;&#x5C42;&#xFF0C;&#x4E00;&#x4E2A; string &#x7C7B;&#x578B;&#x7684;&#x503C;&#x662F;&#x7531;&#x4E00;&#x7CFB;&#x5217;&#x76F8;&#x5BF9;&#x5E94;&#x7684; Unicode &#x4EE3;&#x7801;&#x70B9;&#x7684; UTF-8 &#x7F16;&#x7801;&#x503C;&#x6765;&#x8868;&#x8FBE;&#x7684;&#x3002; &#x4E00;&#x4E2A; string &#x7C7B;&#x578B;&#x7684;&#x503C;&#x65E2;&#x53EF;&#x4EE5;&#x88AB;&#x62C6;&#x5206;&#x4E3A;&#x4E00;&#x4E2A;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x5B57;&#x7B26;&#x7684;&#x5E8F;&#x5217;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x88AB;&#x62C6;&#x5206;&#x4E3A;&#x4E00;&#x4E2A;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x5B57;&#x8282;&#x7684;&#x5E8F;&#x5217;&#x3002; &#x524D;&#x8005;&#x53EF;&#x4EE5;&#x7531;&#x4E00;&#x4E2A;&#x4EE5; rune &#xFF08; int32 &#x7684;&#x522B;&#x540D;&#xFF09;&#x4E3A;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x7684;&#x5207;&#x7247;&#x6765;&#x8868;&#x793A;&#xFF0C;&#x800C;&#x540E;&#x8005;&#x5219;&#x53EF;&#x4EE5;&#x7531;&#x4E00;&#x4E2A;&#x4EE5; byte &#x4E3A;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x7684;&#x5207;&#x7247;&#x4EE3;&#x8868;&#x3002; rune &#x662F; Go &#x8BED;&#x8A00;&#x7279;&#x6709;&#x7684;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x7684;&#x4E00;&#x4E2A;&#x503C;&#x5C31;&#x4EE3;&#x8868;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#xFF0C;&#x5373;&#xFF1A;&#x4E00;&#x4E2A; Unicode &#x5B57;&#x7B26;&#x3002;&#x6BD4;&#x5982;&#xFF0C;&#x2019;G&#x2019;&#x3001;&#x2019;o&#x2019;&#x3001;&#x2019;&#x7231;&#x2019;&#x3001;&#x2019;&#x597D;&#x2019;&#x3001; &#x2018;&#x8005;&#x2019;&#x4EE3;&#x8868;&#x7684;&#x5C31;&#x90FD;&#x662F;&#x4E00;&#x4E2A; Unicode &#x5B57;&#x7B26;&#x3002;&#x4E00;&#x4E2A; rune &#x7C7B;&#x578B;&#x7684;&#x503C;&#x4F1A;&#x7531;&#x56DB;&#x4E2A;&#x5B57;&#x8282;&#x5BBD;&#x5EA6;&#x7684;&#x7A7A;&#x95F4;&#x6765;&#x5B58;&#x50A8;&#x3002;&#x5B83;&#x7684;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#x603B;&#x662F;&#x80FD;&#x591F;&#x5B58;&#x4E0B;&#x4E00; &#x4E2A; UTF-8 &#x7F16;&#x7801;&#x503C;&#x3002; &#x4E00;&#x4E2A; rune &#x7C7B;&#x578B;&#x7684;&#x503C;&#x5728;&#x5E95;&#x5C42;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x4E00;&#x4E2A; UTF-8 &#x7F16;&#x7801;&#x503C; &#x3002;&#x524D;&#x8005;&#x662F;&#xFF08;&#x4FBF;&#x4E8E;&#x6211;&#x4EEC;&#x4EBA;&#x7C7B;&#x7406;&#x89E3;&#x7684;&#xFF09;&#x5916;&#x90E8;&#x5C55;&#x73B0;&#xFF0C;&#x540E;&#x8005;&#x662F;&#xFF08;&#x4FBF;&#x4E8E;&#x8BA1;&#x7B97;&#x673A;&#x7CFB;&#x7EDF;&#x7406;&#x89E3;&#x7684;&#xFF09; &#x5185;&#x5728;&#x8868;&#x8FBE;&#x3002; 1 2 3 4 5 str := Go &#x7231;&#x597D;&#x8005;  fmt.Printf( The string: %q\\n , str) fmt.Printf(  = runes(char): %q\\n , [] rune (str)) fmt.Printf(  = runes(hex): %x\\n , [] rune (str)) fmt.Printf(  = bytes(hex): [% x]\\n , [] byte (str)) &#x5B57;&#x7B26;&#x4E32;&#x503C; &#x201C;Go &#x7231;&#x597D;&#x8005;&#x201D; &#x5982;&#x679C;&#x88AB;&#x8F6C;&#x6362;&#x4E3A; []rune &#x7C7B;&#x578B;&#x7684;&#x503C;&#x7684;&#x8BDD;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#xFF08;&#x4E0D;&#x8BBA;&#x662F;&#x82F1;&#x6587;&#x5B57;&#x7B26;&#x8FD8;&#x662F;&#x4E2D;&#x6587;&#x5B57;&#x7B26;&#xFF09;&#x5C31;&#x90FD;&#x4F1A;&#x72EC;&#x7ACB;&#x6210;&#x4E3A;&#x4E00; &#x4E2A; rune &#x7C7B;&#x578B;&#x7684;&#x5143;&#x7D20;&#x503C;&#x3002;&#x56E0; &#x6B64;&#xFF0C;&#x8FD9;&#x6BB5;&#x4EE3;&#x7801;&#x6253;&#x5370;&#x51FA;&#x7684;&#x7B2C;&#x4E8C;&#x884C;&#x5185;&#x5BB9;&#x5C31;&#x4F1A;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; 1 = runes(char): [ &apos;G&apos; &apos;o&apos; &apos;&#x7231;&apos; &apos;&#x597D;&apos; &apos;&#x8005;&apos; ] &#x53C8;&#x7531;&#x4E8E;&#xFF0C;&#x6BCF;&#x4E2A; rune &#x7C7B;&#x578B;&#x7684;&#x503C;&#x5728;&#x5E95;&#x5C42;&#x90FD;&#x662F;&#x7531;&#x4E00;&#x4E2A; UTF-8 &#x7F16;&#x7801;&#x503C;&#x6765;&#x8868;&#x8FBE;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6362;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x6765;&#x5C55;&#x73B0;&#x8FD9;&#x4E2A;&#x5B57;&#x7B26;&#x5E8F;&#x5217;&#xFF1A; 1 = runes(hex): [47 6f 7231 597d 8005] &#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x8FDB;&#x4E00;&#x6B65;&#x5730;&#x62C6;&#x5206;&#xFF0C;&#x628A;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x7684; UTF-8 &#x7F16;&#x7801;&#x503C;&#x90FD;&#x62C6;&#x6210;&#x76F8;&#x5E94;&#x7684;&#x5B57;&#x8282;&#x5E8F;&#x5217;&#x3002;&#x4E0A;&#x8FF0;&#x4EE3;&#x7801;&#x4E2D;&#x7684;&#x7B2C;&#x4E94;&#x884C;&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x505A;&#x7684;&#x3002;&#x5B83;&#x4F1A;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x7684;&#x8F93;&#x51FA;&#xFF1A; 1 = bytes(hex): [47 6f e7 88 b1 e5 a5 bd e8 80 85]"},"packages/os.html":{"title":"","path":"\\golang-learn\\packages\\os.html","body":"os包中的API 是os代码包中的 API。这个代码包可以让我们拥有操控计算机操作系统的能力。不论是 Linux、macOS、Windows，还是 FreeBSD、OpenBSD、Plan9，os代码包都可以为之提供统一的使用接口。 os包中的 API 主要可以帮助我们使用操作系统中的文件系统、权限系统、环境变量、系统进程以及系统信号 。 os.File类型 os.File 类型拥有的都是指针方法，所以除了空接口之外，它本身没有实现任何接口。而它的指针类型则实现了很多io代码包中的接口。 对于io包中最核心的 3 个简单接口 io.Reader 、 io.Writer 和 io.Closer ， *os.File 类型都实现了它们。 其他实现的接口： io.ReaderAt 、 io.Seeker 和 io.WriterAt 。 os.File类型怎样操作文件 os包中，有这样几个函数，即： Create 、 NewFile 、 Open 和 OpenFile 。 os.Create 函数用于根据给定的路径创建一个新的文件。它会返回一个 File 值和一个错误值。我们可以在该函数返回的 File 值之上，对相应的文件进行读操作和写操作。 如果在我们给予 os.Create 函数的路径之上 已经存在了一个文件，那么该函数会先清空现有文件中的全部内容 ，然后再把它作为第一个结果值返回。 os.NewFile 函数。该函数在被调用的时候需要接受一个代表文件描述符的、 uintptr 类型的值，以及一个用于表示文件名的字符串值。如果我们给定的文件描述符 并不是有效的，那么这个函数将会返回 nil ，否则，它将会返回一个代表了相应文件的 File 值。 注意，不要被这个函数的名称误导了，它的功能并不是创建一个新的文件，而是依据一个已经 存在的文件的描述符，来新建一个包装了该文件的File值 。 os.Open 函数会打开一个文件并返回包装了该文件的 File 值。然而，该函数只能以只读模式打开文件。换句话说，我们只能从该函数返回的 File 值中读取内容，而不能向它写入任何内容。 os.OpenFile 这个函数其实是 os.Create 函数和 os.Open 函数的底层支持，它最为灵活。这个函数有 3 个参数，分别名为 name 、 flag 和 perm 。其中的 name 指代的就是文件的路径。 而 flag 参数指的则是需要施加在文件描述符之上的模式，可选项。这个只读模式由常量 os.O_RDONLY 代表，它是 int 类型的。 perm 代表的也是模式，它的类型是 os.FileMode ，此类型是一个 基于 uint32 类型的再定义类型。 flag 指代的模式叫做操作模式，而把参数 perm 指代的模式叫做权限模式。前者限定了操作文件的方式，而后者则可以控制文件的访问权限。 可以像这样拿到一个包装了标准错误输出的 File 值： 1 2 3 4 5 6 file3 := os.NewFile( uintptr (syscall.Stderr), \"/dev/stderr\" ) if file3 != nil  defer file3.Close() file3.WriteString( \"The Go language program writes the contents into stderr.\\n\" )  所谓的文件描述符，是由通常很小的非负整数代表的。它一般会由 I/O 相关的系统调用返回，并作为某个文件的一个标识存在。 从操作系统的层面看，针对任何文件的 I/O 操作都需要用到这个文件描述符。只不过，Go 语言中的一些数据类型，为我们隐匿掉了这个描述符，如此一来我们就无需时刻关注和辨别它了 （就像os.File类型这样）。 实际上，我们在调用前文所述的 os.Create 函数、 os.Open 函数以及将会提到的 os.OpenFile 函数的时候，它们都会执行同一个系统调用，并且在成功之后得到这样一个文件描述符。 这个文件描述符将会被储存在它们返回的File值中。 os.File 类型有一个指针方法，名叫 Fd 。它在被调用之后将会返回一个 uintptr 类型的值。这个值就代表了当前的File值所持有的那个文件描述符。 不过，在os包中，除了 NewFile 函数需要用到它，它也没有什么别的用武之地了。所以，如果你操作的只是常规的文件或者目录，那么就无需特别地在意它了。 可应用于File值的操作模式 File 值的操作模式主要有只读模式、只写模式和读写模式。 这些模式分别由常量 os.O_RDONLY 、 os.O_WRONLY 和 os.O_RDWR 代表 。 额外的操作模式，可选项如下所示： os.O_APPEND ：当向文件中写入内容时，把新内容追加到现有内容的后边。 os.O_CREATE ：当给定路径上的文件不存在时，创建一个新文件。 os.O_EXCL ：需要与 os.O_CREATE 一同使用，表示在给定的路径上不能有已存在的文件。 os.O_SYNC ：在打开的文件之上实施同步 I/O。它会保证读写的内容总会与硬盘上的数据保持同步。 os.O_TRUNC ：如果文件已存在，并且是常规的文件，那么就先清空其中已经存在的任何内容。 操作模式的使用，os.Create函数和os.Open函数都是现成的例子： 1 2 3 func Create (name string ) (*File, error)  return OpenFile(name, O_RDWR|O_CREATE|O_TRUNC, 0666 )  os.Create 函数在调用 os.OpenFile 函数的时候，给予的操作模式是 os.O_RDWR 、 os.O_CREATE 和 os.O_TRUNC 的组合。 怎样设定常规文件的访问权限 os.FileMode 是基于 uint32 类型的再定义类型，所以它的每个值都包含了 32 个比特位。在这 32 个比特位当中，每个比特位都有其特定的含义。 比如，如果在其最高比特位上的二进制数是1，那么该值表示的文件模式就等同于 os.ModeDir ，也就是说，相应的文件代表的是一个目录。 又比如，如果其中的第 26 个比特位上的是1，那么相应的值表示的文件模式就等同于 os.ModeNamedPipe ，也就是说，那个文件代表的是一个命名管道。 在一个 os.FileMode 类型的值（以下简称FileMode值）中，只有最低的 9 个比特位才用于表示文件的权限 。 当我们拿到一个此类型的值时，可以把它 和 os.ModePerm 常量的值做按位与 操作。 这个常量的值是 0777 ，是一个八进制的无符号整数，其最低的 9 个比特位上都是1，而更高的 23 个比特位上都是0。 所以，经过这样的按位与操作之后，我们即可得到这个FileMode值中所有用于表示文件权限的比特位，也就是该值所表示的权限模式。"},"packages/os.html#os包中的API":{"title":"os&#x5305;&#x4E2D;&#x7684;API","path":"\\golang-learn\\packages\\os.html#os包中的API","body":"&#x662F;os&#x4EE3;&#x7801;&#x5305;&#x4E2D;&#x7684; API&#x3002;&#x8FD9;&#x4E2A;&#x4EE3;&#x7801;&#x5305;&#x53EF;&#x4EE5;&#x8BA9;&#x6211;&#x4EEC;&#x62E5;&#x6709;&#x64CD;&#x63A7;&#x8BA1;&#x7B97;&#x673A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x80FD;&#x529B;&#x3002;&#x4E0D;&#x8BBA;&#x662F; Linux&#x3001;macOS&#x3001;Windows&#xFF0C;&#x8FD8;&#x662F; FreeBSD&#x3001;OpenBSD&#x3001;Plan9&#xFF0C;os&#x4EE3;&#x7801;&#x5305;&#x90FD;&#x53EF;&#x4EE5;&#x4E3A;&#x4E4B;&#x63D0;&#x4F9B;&#x7EDF;&#x4E00;&#x7684;&#x4F7F;&#x7528;&#x63A5;&#x53E3;&#x3002; os&#x5305;&#x4E2D;&#x7684; API &#x4E3B;&#x8981;&#x53EF;&#x4EE5;&#x5E2E;&#x52A9;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x3001;&#x6743;&#x9650;&#x7CFB;&#x7EDF;&#x3001;&#x73AF;&#x5883;&#x53D8;&#x91CF;&#x3001;&#x7CFB;&#x7EDF;&#x8FDB;&#x7A0B;&#x4EE5;&#x53CA;&#x7CFB;&#x7EDF;&#x4FE1;&#x53F7; &#x3002; os.File&#x7C7B;&#x578B; os.File &#x7C7B;&#x578B;&#x62E5;&#x6709;&#x7684;&#x90FD;&#x662F;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;&#x9664;&#x4E86;&#x7A7A;&#x63A5;&#x53E3;&#x4E4B;&#x5916;&#xFF0C;&#x5B83;&#x672C;&#x8EAB;&#x6CA1;&#x6709;&#x5B9E;&#x73B0;&#x4EFB;&#x4F55;&#x63A5;&#x53E3;&#x3002;&#x800C;&#x5B83;&#x7684;&#x6307;&#x9488;&#x7C7B;&#x578B;&#x5219;&#x5B9E;&#x73B0;&#x4E86;&#x5F88;&#x591A;io&#x4EE3;&#x7801;&#x5305;&#x4E2D;&#x7684;&#x63A5;&#x53E3;&#x3002; &#x5BF9;&#x4E8E;io&#x5305;&#x4E2D;&#x6700;&#x6838;&#x5FC3;&#x7684; 3 &#x4E2A;&#x7B80;&#x5355;&#x63A5;&#x53E3; io.Reader &#x3001; io.Writer &#x548C; io.Closer &#xFF0C; *os.File &#x7C7B;&#x578B;&#x90FD;&#x5B9E;&#x73B0;&#x4E86;&#x5B83;&#x4EEC;&#x3002; &#x5176;&#x4ED6;&#x5B9E;&#x73B0;&#x7684;&#x63A5;&#x53E3;&#xFF1A; io.ReaderAt &#x3001; io.Seeker &#x548C; io.WriterAt &#x3002; os.File&#x7C7B;&#x578B;&#x600E;&#x6837;&#x64CD;&#x4F5C;&#x6587;&#x4EF6; os&#x5305;&#x4E2D;&#xFF0C;&#x6709;&#x8FD9;&#x6837;&#x51E0;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5373;&#xFF1A; Create &#x3001; NewFile &#x3001; Open &#x548C; OpenFile &#x3002; os.Create &#x51FD;&#x6570;&#x7528;&#x4E8E;&#x6839;&#x636E;&#x7ED9;&#x5B9A;&#x7684;&#x8DEF;&#x5F84;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6587;&#x4EF6;&#x3002;&#x5B83;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; File &#x503C;&#x548C;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x503C;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x8BE5;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684; File &#x503C;&#x4E4B;&#x4E0A;&#xFF0C;&#x5BF9;&#x76F8;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x8BFB;&#x64CD;&#x4F5C;&#x548C;&#x5199;&#x64CD;&#x4F5C;&#x3002; &#x5982;&#x679C;&#x5728;&#x6211;&#x4EEC;&#x7ED9;&#x4E88; os.Create &#x51FD;&#x6570;&#x7684;&#x8DEF;&#x5F84;&#x4E4B;&#x4E0A; &#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x4E86;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x51FD;&#x6570;&#x4F1A;&#x5148;&#x6E05;&#x7A7A;&#x73B0;&#x6709;&#x6587;&#x4EF6;&#x4E2D;&#x7684;&#x5168;&#x90E8;&#x5185;&#x5BB9; &#xFF0C;&#x7136;&#x540E;&#x518D;&#x628A;&#x5B83;&#x4F5C;&#x4E3A;&#x7B2C;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x8FD4;&#x56DE;&#x3002; os.NewFile &#x51FD;&#x6570;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x5728;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x4EE3;&#x8868;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x7684;&#x3001; uintptr &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x4EE5;&#x53CA;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x6587;&#x4EF6;&#x540D;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x503C;&#x3002;&#x5982;&#x679C;&#x6211;&#x4EEC;&#x7ED9;&#x5B9A;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26; &#x5E76;&#x4E0D;&#x662F;&#x6709;&#x6548;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5C06;&#x4F1A;&#x8FD4;&#x56DE; nil &#xFF0C;&#x5426;&#x5219;&#xFF0C;&#x5B83;&#x5C06;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x4EE3;&#x8868;&#x4E86;&#x76F8;&#x5E94;&#x6587;&#x4EF6;&#x7684; File &#x503C;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x4E0D;&#x8981;&#x88AB;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x540D;&#x79F0;&#x8BEF;&#x5BFC;&#x4E86;&#xFF0C;&#x5B83;&#x7684;&#x529F;&#x80FD;&#x5E76;&#x4E0D;&#x662F;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x800C;&#x662F;&#x4F9D;&#x636E;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF; &#x5B58;&#x5728;&#x7684;&#x6587;&#x4EF6;&#x7684;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x6765;&#x65B0;&#x5EFA;&#x4E00;&#x4E2A;&#x5305;&#x88C5;&#x4E86;&#x8BE5;&#x6587;&#x4EF6;&#x7684;File&#x503C; &#x3002; os.Open &#x51FD;&#x6570;&#x4F1A;&#x6253;&#x5F00;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5E76;&#x8FD4;&#x56DE;&#x5305;&#x88C5;&#x4E86;&#x8BE5;&#x6587;&#x4EF6;&#x7684; File &#x503C;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x53EA;&#x80FD;&#x4EE5;&#x53EA;&#x8BFB;&#x6A21;&#x5F0F;&#x6253;&#x5F00;&#x6587;&#x4EF6;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x80FD;&#x4ECE;&#x8BE5;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684; File &#x503C;&#x4E2D;&#x8BFB;&#x53D6;&#x5185;&#x5BB9;&#xFF0C;&#x800C;&#x4E0D;&#x80FD;&#x5411;&#x5B83;&#x5199;&#x5165;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x3002; os.OpenFile &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5176;&#x5B9E;&#x662F; os.Create &#x51FD;&#x6570;&#x548C; os.Open &#x51FD;&#x6570;&#x7684;&#x5E95;&#x5C42;&#x652F;&#x6301;&#xFF0C;&#x5B83;&#x6700;&#x4E3A;&#x7075;&#x6D3B;&#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x6709; 3 &#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5206;&#x522B;&#x540D;&#x4E3A; name &#x3001; flag &#x548C; perm &#x3002;&#x5176;&#x4E2D;&#x7684; name &#x6307;&#x4EE3;&#x7684;&#x5C31;&#x662F;&#x6587;&#x4EF6;&#x7684;&#x8DEF;&#x5F84;&#x3002; &#x800C; flag &#x53C2;&#x6570;&#x6307;&#x7684;&#x5219;&#x662F;&#x9700;&#x8981;&#x65BD;&#x52A0;&#x5728;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x4E4B;&#x4E0A;&#x7684;&#x6A21;&#x5F0F;&#xFF0C;&#x53EF;&#x9009;&#x9879;&#x3002;&#x8FD9;&#x4E2A;&#x53EA;&#x8BFB;&#x6A21;&#x5F0F;&#x7531;&#x5E38;&#x91CF; os.O_RDONLY &#x4EE3;&#x8868;&#xFF0C;&#x5B83;&#x662F; int &#x7C7B;&#x578B;&#x7684;&#x3002; perm &#x4EE3;&#x8868;&#x7684;&#x4E5F;&#x662F;&#x6A21;&#x5F0F;&#xFF0C;&#x5B83;&#x7684;&#x7C7B;&#x578B;&#x662F; os.FileMode &#xFF0C;&#x6B64;&#x7C7B;&#x578B;&#x662F;&#x4E00;&#x4E2A; &#x57FA;&#x4E8E; uint32 &#x7C7B;&#x578B;&#x7684;&#x518D;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;&#x3002; flag &#x6307;&#x4EE3;&#x7684;&#x6A21;&#x5F0F;&#x53EB;&#x505A;&#x64CD;&#x4F5C;&#x6A21;&#x5F0F;&#xFF0C;&#x800C;&#x628A;&#x53C2;&#x6570; perm &#x6307;&#x4EE3;&#x7684;&#x6A21;&#x5F0F;&#x53EB;&#x505A;&#x6743;&#x9650;&#x6A21;&#x5F0F;&#x3002;&#x524D;&#x8005;&#x9650;&#x5B9A;&#x4E86;&#x64CD;&#x4F5C;&#x6587;&#x4EF6;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x800C;&#x540E;&#x8005;&#x5219;&#x53EF;&#x4EE5;&#x63A7;&#x5236;&#x6587;&#x4EF6;&#x7684;&#x8BBF;&#x95EE;&#x6743;&#x9650;&#x3002; &#x53EF;&#x4EE5;&#x50CF;&#x8FD9;&#x6837;&#x62FF;&#x5230;&#x4E00;&#x4E2A;&#x5305;&#x88C5;&#x4E86;&#x6807;&#x51C6;&#x9519;&#x8BEF;&#x8F93;&#x51FA;&#x7684; File &#x503C;&#xFF1A; 1 2 3 4 5 6 file3 := os.NewFile( uintptr (syscall.Stderr), /dev/stderr ) if file3 != nil { defer file3.Close() file3.WriteString( The Go language program writes the contents into stderr.\\n ) } &#x6240;&#x8C13;&#x7684;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x662F;&#x7531;&#x901A;&#x5E38;&#x5F88;&#x5C0F;&#x7684;&#x975E;&#x8D1F;&#x6574;&#x6570;&#x4EE3;&#x8868;&#x7684;&#x3002;&#x5B83;&#x4E00;&#x822C;&#x4F1A;&#x7531; I/O &#x76F8;&#x5173;&#x7684;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#x8FD4;&#x56DE;&#xFF0C;&#x5E76;&#x4F5C;&#x4E3A;&#x67D0;&#x4E2A;&#x6587;&#x4EF6;&#x7684;&#x4E00;&#x4E2A;&#x6807;&#x8BC6;&#x5B58;&#x5728;&#x3002; &#x4ECE;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x5C42;&#x9762;&#x770B;&#xFF0C;&#x9488;&#x5BF9;&#x4EFB;&#x4F55;&#x6587;&#x4EF6;&#x7684; I/O &#x64CD;&#x4F5C;&#x90FD;&#x9700;&#x8981;&#x7528;&#x5230;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x3002;&#x53EA;&#x4E0D;&#x8FC7;&#xFF0C;Go &#x8BED;&#x8A00;&#x4E2D;&#x7684;&#x4E00;&#x4E9B;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x4E3A;&#x6211;&#x4EEC;&#x9690;&#x533F;&#x6389;&#x4E86;&#x8FD9;&#x4E2A;&#x63CF;&#x8FF0;&#x7B26;&#xFF0C;&#x5982;&#x6B64;&#x4E00;&#x6765;&#x6211;&#x4EEC;&#x5C31;&#x65E0;&#x9700;&#x65F6;&#x523B;&#x5173;&#x6CE8;&#x548C;&#x8FA8;&#x522B;&#x5B83;&#x4E86; &#xFF08;&#x5C31;&#x50CF;os.File&#x7C7B;&#x578B;&#x8FD9;&#x6837;&#xFF09;&#x3002; &#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x8C03;&#x7528;&#x524D;&#x6587;&#x6240;&#x8FF0;&#x7684; os.Create &#x51FD;&#x6570;&#x3001; os.Open &#x51FD;&#x6570;&#x4EE5;&#x53CA;&#x5C06;&#x4F1A;&#x63D0;&#x5230;&#x7684; os.OpenFile &#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x4F1A;&#x6267;&#x884C;&#x540C;&#x4E00;&#x4E2A;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF0C;&#x5E76;&#x4E14;&#x5728;&#x6210;&#x529F;&#x4E4B;&#x540E;&#x5F97;&#x5230;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x3002; &#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x5C06;&#x4F1A;&#x88AB;&#x50A8;&#x5B58;&#x5728;&#x5B83;&#x4EEC;&#x8FD4;&#x56DE;&#x7684;File&#x503C;&#x4E2D;&#x3002; os.File &#x7C7B;&#x578B;&#x6709;&#x4E00;&#x4E2A;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#xFF0C;&#x540D;&#x53EB; Fd &#x3002;&#x5B83;&#x5728;&#x88AB;&#x8C03;&#x7528;&#x4E4B;&#x540E;&#x5C06;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; uintptr &#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002;&#x8FD9;&#x4E2A;&#x503C;&#x5C31;&#x4EE3;&#x8868;&#x4E86;&#x5F53;&#x524D;&#x7684;File&#x503C;&#x6240;&#x6301;&#x6709;&#x7684;&#x90A3;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x7B26;&#x3002; &#x4E0D;&#x8FC7;&#xFF0C;&#x5728;os&#x5305;&#x4E2D;&#xFF0C;&#x9664;&#x4E86; NewFile &#x51FD;&#x6570;&#x9700;&#x8981;&#x7528;&#x5230;&#x5B83;&#xFF0C;&#x5B83;&#x4E5F;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x522B;&#x7684;&#x7528;&#x6B66;&#x4E4B;&#x5730;&#x4E86;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x64CD;&#x4F5C;&#x7684;&#x53EA;&#x662F;&#x5E38;&#x89C4;&#x7684;&#x6587;&#x4EF6;&#x6216;&#x8005;&#x76EE;&#x5F55;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x65E0;&#x9700;&#x7279;&#x522B;&#x5730;&#x5728;&#x610F;&#x5B83;&#x4E86;&#x3002; &#x53EF;&#x5E94;&#x7528;&#x4E8E;File&#x503C;&#x7684;&#x64CD;&#x4F5C;&#x6A21;&#x5F0F; File &#x503C;&#x7684;&#x64CD;&#x4F5C;&#x6A21;&#x5F0F;&#x4E3B;&#x8981;&#x6709;&#x53EA;&#x8BFB;&#x6A21;&#x5F0F;&#x3001;&#x53EA;&#x5199;&#x6A21;&#x5F0F;&#x548C;&#x8BFB;&#x5199;&#x6A21;&#x5F0F;&#x3002; &#x8FD9;&#x4E9B;&#x6A21;&#x5F0F;&#x5206;&#x522B;&#x7531;&#x5E38;&#x91CF; os.O_RDONLY &#x3001; os.O_WRONLY &#x548C; os.O_RDWR &#x4EE3;&#x8868; &#x3002; &#x989D;&#x5916;&#x7684;&#x64CD;&#x4F5C;&#x6A21;&#x5F0F;&#xFF0C;&#x53EF;&#x9009;&#x9879;&#x5982;&#x4E0B;&#x6240;&#x793A;&#xFF1A; os.O_APPEND &#xFF1A;&#x5F53;&#x5411;&#x6587;&#x4EF6;&#x4E2D;&#x5199;&#x5165;&#x5185;&#x5BB9;&#x65F6;&#xFF0C;&#x628A;&#x65B0;&#x5185;&#x5BB9;&#x8FFD;&#x52A0;&#x5230;&#x73B0;&#x6709;&#x5185;&#x5BB9;&#x7684;&#x540E;&#x8FB9;&#x3002; os.O_CREATE &#xFF1A;&#x5F53;&#x7ED9;&#x5B9A;&#x8DEF;&#x5F84;&#x4E0A;&#x7684;&#x6587;&#x4EF6;&#x4E0D;&#x5B58;&#x5728;&#x65F6;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x6587;&#x4EF6;&#x3002; os.O_EXCL &#xFF1A;&#x9700;&#x8981;&#x4E0E; os.O_CREATE &#x4E00;&#x540C;&#x4F7F;&#x7528;&#xFF0C;&#x8868;&#x793A;&#x5728;&#x7ED9;&#x5B9A;&#x7684;&#x8DEF;&#x5F84;&#x4E0A;&#x4E0D;&#x80FD;&#x6709;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x6587;&#x4EF6;&#x3002; os.O_SYNC &#xFF1A;&#x5728;&#x6253;&#x5F00;&#x7684;&#x6587;&#x4EF6;&#x4E4B;&#x4E0A;&#x5B9E;&#x65BD;&#x540C;&#x6B65; I/O&#x3002;&#x5B83;&#x4F1A;&#x4FDD;&#x8BC1;&#x8BFB;&#x5199;&#x7684;&#x5185;&#x5BB9;&#x603B;&#x4F1A;&#x4E0E;&#x786C;&#x76D8;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x4FDD;&#x6301;&#x540C;&#x6B65;&#x3002; os.O_TRUNC &#xFF1A;&#x5982;&#x679C;&#x6587;&#x4EF6;&#x5DF2;&#x5B58;&#x5728;&#xFF0C;&#x5E76;&#x4E14;&#x662F;&#x5E38;&#x89C4;&#x7684;&#x6587;&#x4EF6;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x5148;&#x6E05;&#x7A7A;&#x5176;&#x4E2D;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x3002; &#x64CD;&#x4F5C;&#x6A21;&#x5F0F;&#x7684;&#x4F7F;&#x7528;&#xFF0C;os.Create&#x51FD;&#x6570;&#x548C;os.Open&#x51FD;&#x6570;&#x90FD;&#x662F;&#x73B0;&#x6210;&#x7684;&#x4F8B;&#x5B50;&#xFF1A; 1 2 3 func Create (name string ) (*File, error) { return OpenFile(name, O_RDWR|O_CREATE|O_TRUNC, 0666 ) } os.Create &#x51FD;&#x6570;&#x5728;&#x8C03;&#x7528; os.OpenFile &#x51FD;&#x6570;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x7ED9;&#x4E88;&#x7684;&#x64CD;&#x4F5C;&#x6A21;&#x5F0F;&#x662F; os.O_RDWR &#x3001; os.O_CREATE &#x548C; os.O_TRUNC &#x7684;&#x7EC4;&#x5408;&#x3002; &#x600E;&#x6837;&#x8BBE;&#x5B9A;&#x5E38;&#x89C4;&#x6587;&#x4EF6;&#x7684;&#x8BBF;&#x95EE;&#x6743;&#x9650; os.FileMode &#x662F;&#x57FA;&#x4E8E; uint32 &#x7C7B;&#x578B;&#x7684;&#x518D;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x7684;&#x6BCF;&#x4E2A;&#x503C;&#x90FD;&#x5305;&#x542B;&#x4E86; 32 &#x4E2A;&#x6BD4;&#x7279;&#x4F4D;&#x3002;&#x5728;&#x8FD9; 32 &#x4E2A;&#x6BD4;&#x7279;&#x4F4D;&#x5F53;&#x4E2D;&#xFF0C;&#x6BCF;&#x4E2A;&#x6BD4;&#x7279;&#x4F4D;&#x90FD;&#x6709;&#x5176;&#x7279;&#x5B9A;&#x7684;&#x542B;&#x4E49;&#x3002; &#x6BD4;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x5176;&#x6700;&#x9AD8;&#x6BD4;&#x7279;&#x4F4D;&#x4E0A;&#x7684;&#x4E8C;&#x8FDB;&#x5236;&#x6570;&#x662F;1&#xFF0C;&#x90A3;&#x4E48;&#x8BE5;&#x503C;&#x8868;&#x793A;&#x7684;&#x6587;&#x4EF6;&#x6A21;&#x5F0F;&#x5C31;&#x7B49;&#x540C;&#x4E8E; os.ModeDir &#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x76F8;&#x5E94;&#x7684;&#x6587;&#x4EF6;&#x4EE3;&#x8868;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x76EE;&#x5F55;&#x3002; &#x53C8;&#x6BD4;&#x5982;&#xFF0C;&#x5982;&#x679C;&#x5176;&#x4E2D;&#x7684;&#x7B2C; 26 &#x4E2A;&#x6BD4;&#x7279;&#x4F4D;&#x4E0A;&#x7684;&#x662F;1&#xFF0C;&#x90A3;&#x4E48;&#x76F8;&#x5E94;&#x7684;&#x503C;&#x8868;&#x793A;&#x7684;&#x6587;&#x4EF6;&#x6A21;&#x5F0F;&#x5C31;&#x7B49;&#x540C;&#x4E8E; os.ModeNamedPipe &#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x90A3;&#x4E2A;&#x6587;&#x4EF6;&#x4EE3;&#x8868;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x547D;&#x540D;&#x7BA1;&#x9053;&#x3002; &#x5728;&#x4E00;&#x4E2A; os.FileMode &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;FileMode&#x503C;&#xFF09;&#x4E2D;&#xFF0C;&#x53EA;&#x6709;&#x6700;&#x4F4E;&#x7684; 9 &#x4E2A;&#x6BD4;&#x7279;&#x4F4D;&#x624D;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x6587;&#x4EF6;&#x7684;&#x6743;&#x9650; &#x3002; &#x5F53;&#x6211;&#x4EEC;&#x62FF;&#x5230;&#x4E00;&#x4E2A;&#x6B64;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x628A;&#x5B83; &#x548C; os.ModePerm &#x5E38;&#x91CF;&#x7684;&#x503C;&#x505A;&#x6309;&#x4F4D;&#x4E0E; &#x64CD;&#x4F5C;&#x3002; &#x8FD9;&#x4E2A;&#x5E38;&#x91CF;&#x7684;&#x503C;&#x662F; 0777 &#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x516B;&#x8FDB;&#x5236;&#x7684;&#x65E0;&#x7B26;&#x53F7;&#x6574;&#x6570;&#xFF0C;&#x5176;&#x6700;&#x4F4E;&#x7684; 9 &#x4E2A;&#x6BD4;&#x7279;&#x4F4D;&#x4E0A;&#x90FD;&#x662F;1&#xFF0C;&#x800C;&#x66F4;&#x9AD8;&#x7684; 23 &#x4E2A;&#x6BD4;&#x7279;&#x4F4D;&#x4E0A;&#x90FD;&#x662F;0&#x3002; &#x6240;&#x4EE5;&#xFF0C;&#x7ECF;&#x8FC7;&#x8FD9;&#x6837;&#x7684;&#x6309;&#x4F4D;&#x4E0E;&#x64CD;&#x4F5C;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x5373;&#x53EF;&#x5F97;&#x5230;&#x8FD9;&#x4E2A;FileMode&#x503C;&#x4E2D;&#x6240;&#x6709;&#x7528;&#x4E8E;&#x8868;&#x793A;&#x6587;&#x4EF6;&#x6743;&#x9650;&#x7684;&#x6BD4;&#x7279;&#x4F4D;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BE5;&#x503C;&#x6240;&#x8868;&#x793A;&#x7684;&#x6743;&#x9650;&#x6A21;&#x5F0F;&#x3002;"},"concurrent/goroutine.html":{"title":"goroutine","path":"\\golang-learn\\concurrent\\goroutine.html","body":"goroutine 并发和并行 并发 一个 cpu 上能同时执行多项任务，在很短时间内，cpu 来回切换任务执行(在某段很短时间内执行程序 a，然后又迅速得切换到程序 b 去执行)， 有时间上的重叠（宏观上是同时的，微观仍是顺序执行）,这样看起来多个任务像是同时执行，这就是 并发 。 并行 当系统有多个 CPU 时,每个 CPU 同一时刻都运行任务，互不抢占自己所在的 CPU 资源，同时进行，称为 并行 。并行是并发设计的 理想模式。 进程 cpu 在切换程序的时候，如果不保存上一个程序的状态（也就是我们常说的 context –上下文），直接切换下一个程序，就会丢失上一个 程序的一系列状态，于是引入了进程这个概念，用以划分好程序运行时所需要的资源。因此进程就是一个程序运行时候的所需要的基本资源单 位（也可以说是程序运行的一个实体）。 线程 cpu 切换多个进程的时候，会花费不少的时间，因为切换进程需要切换到内核态，而每次调度需要内核态都需要读取用户态的数据，进程 一旦多起来，cpu 调度会消耗一大堆资源，因此引入了线程的概念，线程本身几乎不占有资源，他们共享进程里的资源，内核调度起来不 会那么像进程切换那么耗费资源。 协程 多线程和多进程是并行的基本条件，但是单线程可以利用 协程 做到并发。协程拥有自己的寄存器上下文和栈。协程在线程上通过主动 切换来实现并发，减少了阻塞时间，还避免了线程切换的开销。但协程运行的并发本质上还是串行的。线程和进程的操作是由程序触发系统 接口，最后的执行者是系统；协程的操作执行者则是用户自身程序。 goroutine Go 语言在语言层面上支持了并发，简单将 goroutine 归为协程并不合适。Go runtime 会创建多个线程来执行并发任务，而且任务 可以跨线程调度。所以 goroutine 更像是多线程和协程的结合体。 goroutine 可以简单理解为协程，开销较低 (大概是 4~5KB )，当然会根据相应的数据伸缩。也正因为如此，可同时运行成千 上万个并发任务。 goroutine 比 thread 更易用、更高效、更轻便。我们程序运行的 main 函数在一个单独的 goroutine 中运行， 叫做 主 goroutine 。在代码中可以使用 go 关键字创建 goroutine 。 1 go f() main 函数返回时，所有 goroutine 都会被打断，程序退出 。除了从 main 函数退出或者直接终止程序之外，没有其它 的编程方法能够让一个 goroutine 来打断另一个的执行，但是之后可以看到一种方式来实现这个目的，通过 goroutine 之间 的通信来让一个 goroutine 请求其它的 goroutine ，使被请求 goroutine 自行结束执行。 什么是主 goroutine，它与我们启用的其他 goroutine 有什么不同 1 2 3 4 5 6 7 8 9 10 11 package main import \"fmt\" func main ()  \t for i := 0 ; i  10 ; i++  \t\t go func ()  \t\t\tfmt.Println(i) \t\t() \t  上面的代码会打印出什么内容？ 回答是：不会有任何内容被打印出来。 Go 语言不但有着独特的并发编程模型，以及用户级线程 goroutine ，还拥有强大的用于调度 goroutine 、对接系统级线程的 调度器 。 调度器的主要有 3 个重要部分，分别是 M、G、P。 G（goroutine 的缩写）， 协程的实体，包括了调用栈，重要的调度信息，例如 channel 等。 P（processor 的缩写），是衔接 M 和 G 的调度上下文，一个 P 可以承载若干个 G，且能够使这些 G 适时地与 M 进行 对接，并得到真正运行的中介。P 的数量可以通过 runtime.GOMAXPROCS() 来设置，P 的数量决定了系统内最大可并行的 G 的数量， 即有多少个 goroutine 可以同时运行。 M（machine 的缩写），代表的是系统级线程，由操作系统管理。 与一个进程总会有一个主线程类似，每一个独立的 Go 程序在运行时也总会有一个主 goroutine 。这个主 goroutine 会在 Go 程 序的运行准备工作完成后被自动地启用，并不需要我们做任何手动的操作。 每条 go 语句一般都会携带一个函数调用，这个被调用的函数常常被称为 go 函数。而主 goroutine 的 go 函数就是 那个作为程序入口的 main 函数 。 go 函数真正被执行的时间总会与其所属的 go 语句被执行的时间不同 。 当程序执行到一条 go 语句的时候， go 关键字并不是执行并发操作，而是创建一个并发任务单元 。Go 语言的运行时系统，会先试图从某个 存放空闲的 G 的队列中获取一个 G（也就是 goroutine ），它只有在找不到空闲 G 的情况下才会去创建一个新的 G。已存在 的 goroutine 总是会被优先复用。 在拿到了一个空闲的 G 之后，Go 语言运行时系统会用这个 G 去包装当前的那个 go 函数（或者说该函数中的那些代码），然后再把这 个 G 追加到某个存放可运行的 G 的队列中。这类队列中的 G 总是会按照先入先出的顺序，很快地由运行时系统内部的调度器安排运行。 虽然这会很快，但是由于上面所说的那些准备工作还是不可避免的，所以耗时还是存在的。 因此， go 函数的执行时间总是会明显滞后于它所属的 go 语句的执行时间 。当然了，这里所说的“明显滞后”是对于计算机 的 CPU 时钟和 Go 程序来说的。我们在大多数时候都不会有明显的感觉。 请记住， 只要 go 语句本身执行完毕，Go 程序完全不会等待 go 函数的执行，它会立刻去执行后边的语句 。这就是所谓 的 异步并发 地执行。 上面的代码中那 10 个包装了 go 函数的 goroutine 往往还没有获得运行的机会。但是如果有机会运行，打印的结果是什么， 全是 10 ？ 当 for 语句的最后一个迭代运行的时候，其中的那条 go 语句即是最后一条语句。所以，在执行完这条 go 语句之后， 主 goroutine 中的代码也就执行完了，Go 程序会立即结束运行。那么，如果这样的话，还会有任何内容被打印出来吗？ Go 语言并不会去保证这些 goroutine 会以怎样的顺序运行。由于主 goroutine 会与我们手动启用的其他 goroutine 一起接受 调度，又因为调度器很可能会在 goroutine 中的代码只执行了一部分的时候暂停，以期所有的 goroutine 有更公平的运行机会。 所以哪个 goroutine 先执行完、哪个 goroutine 后执行完往往是不可预知的，除非我们使用了某种 Go 语言提供的方式进行了人为 干预。 怎样才能让主 goroutine 等待其他 goroutine 刚才说过，一旦主 goroutine 中的代码执行完毕，当前的 Go 程序就会结束运行，无论其他的 goroutine 是否已经在运行了。 那么，怎样才能做到等其他的 goroutine 运行完毕之后，再让主 goroutine 结束运行呢？ 使用 time 包 ，可以简单粗暴的 time.Sleep(time.Millisecond * 500) 让主 goroutine “小睡”一会儿。 在这里传入了“500 毫秒” 问题是我们让主 goroutine “睡眠”多长时间才是合适的呢？如果“睡眠”太短，则很可能不足以让其他的 goroutine 运行完毕， 而若“睡眠”太长则纯属浪费时间，这个时间就太难把握了。 使用通道 。 使用 sync 包的 sync.WaitGroup 类型 怎样让启用的多个 goroutine 按照既定的顺序运行 首先，我们需要稍微改造一下 for 语句中的那个 go 函数: 1 2 3 4 5 for i := 0 ; i  10 ; i++  go func (i int )  fmt.Println(i) (i)  只有这样，Go 语言才能保证每个 goroutine 都可以拿到一个唯一的整数。这里有点像 js。 在 go 语句被执行时，我们 传给 go 函数的参数 i 会先被求值 ，如此就得到了当次迭代的序号。之后，无论 go 函数 会在什么时候执行，这个参数值都不会变。也就是说， go 函数中调用的 fmt.Println 函数打印的一定会是那个当次迭代的序号。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var count uint32 = 0 trigger := func (i uint32 , fn func () )  // func() 代表的是既无参数声明也无结果声明的函数类型 for  if n := atomic.LoadUint32(&amp;count); n == i  fn() atomic.AddUint32(&amp;count, 1 ) break  time.Sleep(time.Nanosecond)   for i := uint32 ( 0 ); i  10 ; i++  go func (i uint32 )  fn := func ()  fmt.Println(i)  trigger(i, fn) (i)  trigger( 10 , func () ) 上面的代码中调用了一个名叫 trigger 的函数，并把 go 函数的参数 i 和刚刚声明的变量 fn 作为参数传给了它。 func() 代表的是既无参数声明也无结果声明的函数类型 。 trigger 函数会不断地获取一个名叫 count 的变量的值，并判断该值是否与参数 i 的值相同。如果相同，那么就立 即调用 fn 代表的函数，然后把 count 变量的值加 1 ，最后显式地退出当前的循环。否则，我们就先让当前的 goroutine “睡眠”一个纳秒再进入下一个迭代。 操作变量 count 的时候使用的都是原子操作。这是由于 trigger 函数会被多个 goroutine 并发地调用，所以它用到的 非本地变量 count ，就被多个用户级线程共用了。因此，对它的操作就产生了竞态条件（race condition），破坏了程序的并 发安全性。在 sync/atomic 包中声明了很多用于原子操作的函数。由于我选用的原子操作函数对被操作的数值的类型有约束，所 以对 count 以及相关的变量和参数的类型进行了统一的变更（由 int 变为了 uint32 ）。 纵观 count 变量、 trigger 函数以及改造后的 for 语句和 go 函数，我要做的是，让 count 变量成为一个信号， 它的值总是下一个可以调用打印函数的 go 函数的序号。 这个序号其实就是启用 goroutine 时，那个当次迭代的序号。 依然想让主 goroutine 最后一个运行完毕，所以还需要加一行代码。不过既然有了 trigger 函数，就没有再使用通道。 1 trigger( 10 , func () ) Gosched runtime.Gosched() 暂停，释放线程去执行其他任务。 Goexit runtime.Goexit() 立即终止当前任务，runtime 会确保所有 defer 函数被执行。该函数不会影响其他并发任务。 goroutine 泄漏 goroutine 被永远卡住，就会导致 goroutine 泄漏，例如当使用了无缓存的 channel ， goroutine 因为 channel 的 数据没有被接收而被卡住。泄漏的 goroutine 不会被自动回收。 Goroutine 调度器 调度器 Go 的 runtime 负责对 goroutine 进行“调度”。调度本质上就是决定何时哪个 goroutine 将获得资源开始执行、哪个 goroutine 应该停止执行让出资源、哪个 goroutine 应该被唤醒恢复执行等。 操作系统对进程、线程的调度是指操作系统调度器将系统中的多个线程按照一定算法调度到物理 CPU 上去运行。C、C++ 等的并发实现就是基 于操作系统调度的，即程序负责创建线程，操作系统负责调度。但是这种支持并发的方式有不少缺陷： 对于很多网络服务程序，由于不能大量创建 thread，就要在少量 thread 里做网络多路复用，即： 使用 epoll/kqueue/IoCompletionPort 这套机制，即便有 libevent/libev 这样的第三方库帮忙，写起这样的程序也是很不易的 一个 thread 的代价已经比进程小了很多了，但我们依然不能大量创建 thread，因为除了每个 thread 占用的资源不小之外，操 作系统调度切换 thread 的代价也不小； 并发单元间通信困难，易错：多个 thread 之间的通信虽然有多种机制可选，但用起来是相当复杂； Go采用了 用户层轻量级 thread 或者说是 类 coroutine 的概念来解决这些问题，Go 将之称为 goroutine 。 goroutine 占用的资源非常小(goroutine stack 的 size 默认为 2k)，goroutine 调度的切换也不用操作系统内核层完成，代价很低 。 所有的 Go 代码都在 goroutine 中执行，go runtime 也一样。将这些 goroutines 按照一定算法放到“CPU”上执行的程序就叫做 goroutine 调度器 或 goroutine scheduler 。 一个 Go 程序对于操作系统来说只是一个用户层程序，对于操作系统而言，它的眼中只有 thread，它并不知道什么是 Goroutine。 goroutine 的调度全要靠 Go 自己完成，实现 Go 程序内 goroutine 之间“公平”的竞争 CPU 资源，这个任务就落到了 Go runtime 头上 ， 在一个 Go 程序中，除了用户代码，剩下的就是 go runtime 了。 Goroutine 的调度问题就变成了 go runtime 如何将程序内的众多 goroutine 按照一定算法调度到 CPU 资源上运行 了。 但是在 操作系统层面，Thread 竞争的 CPU 资源是真实的物理 CPU ，但在 Go 程序层面，各个 Goroutine 要竞争的 CPU 资源是什么呢？ Go 程序是用户层程序，它本身整体是运行在一个或多个操作系统线程上的，因此 goroutine 们要竞争的所谓 CPU 资源就是操作系统线程 。 Go scheduler 的任务： 将 goroutines 按照一定算法放到不同的操作系统线程中去执行 。这种在语言层面自带调度器的，我们称 之为 原生支持并发 。 G-P-M 模型 调度器的主要有 3 个重要部分，分别是 M、G、P。 G（goroutine 的缩写）， 协程的实体，包括了调用栈，重要的调度信息，例如 channel 等。 P（processor 的缩写），是衔接 M 和 G 的调度上下文，一个 P 可以承载若干个 G，且能够使这些 G 适时地与 M 进行 对接，并得到真正运行的中介。P 的数量可以通过 runtime.GOMAXPROCS() 来设置，P 的数量决定了系统内最大可并行的 G 的数量， 即有多少个 goroutine 可以同时运行。（前提：系统的物理 cpu 核数 = P 的数量 ），它维护了一个 goroutine 队列，里面存储 了所有需要它来执行的 goroutine。 M（machine 的缩写），代表的是系统级线程，由操作系统管理。goroutine 就是跑在 M 之上的。在绑定有效的 P 后，进入 schedule 循环； 而 schedule 循环的机制大致是从各种队列、P 的本地队列中获取 G，切换到 G 的执行栈上并执行 G 的函数，调用 goexit 做清理工作 并回到 M，如此反复。M 并不保留 G 状态，这是 G 可以跨 M 调度的基础。 抢占式调度 Go 并没有时间片的概念。如果某个 G 没有进行 system call 调用、没有进行 I/O 操作、没有阻塞在一个 channel 操作上，那么 M 是 如何让 G 停下来并调度下一个 runnable G 的呢？ 答案是：G 是被抢占调度的。 Go 在设计之初并没考虑将 goroutine 设计成抢占式的。用户负责让各个 goroutine 交互合作完成任务。一个 goroutine 只有在涉及到加锁， 读写通道或者主动让出 CPU 等操作时才会触发切换。 垃圾回收器是需要 stop the world 的。如果垃圾回收器想要运行了，那么它必须先通知其它的 goroutine 合作停下来，这会造成较长时 间的等待时间。考虑一种很极端的情况，所有的 goroutine 都停下来了，只有其中一个没有停，那么垃圾回收就会一直等待着没有停的那一个。 抢占式调度可以解决这种问题，在抢占式情况下，如果一个 goroutine 运行时间过长，它就会被剥夺运行权。Go 还只是引入了一些很初级 的抢占，只有长时间阻塞于系统调用，或者运行了较长时间才会被抢占。runtime 会在后台有一个检测线程，它会检测这些情况， 并通知 goroutine 执行调度。 Go 程序的初始化过程中，runtime 开了一条后台线程，运行一个 sysmon 函数(一般称为监控线程)。这个函数会周期性地做 epoll 操作， 同时它还会检测每个 P 是否运行了较长时间。该 M 无需绑定 P 即可运行，该 M 在整个 Go 程序的运行过程中至关重要。 sysmon 每 20us~10ms 运行一次， sysmon 主要完成如下工作： 释放闲置超过 5 分钟的 span 物理内存； 如果超过 2 分钟没有垃圾回收，强制执行； 将长时间未处理的 netpoll 结果添加到任务队列； 向长时间运行的 G 任务发出抢占调度； 收回因 syscall 长时间阻塞的P； channel 阻塞或 network I/O 情况下的调度 如果 G 被阻塞在某个 channel 操作或 network I/O 操作上时，G 会被放置到某个 wait 队列中，而 M 会尝试运行下一个 runnable 的 G；如果此时没有 runnable 的 G 供 M 运行，那么 M 将解绑 P，并进入 sleep 状态。当 I/O available 或 channel 操作完成， 在 wait 队列中的 G 会被唤醒，标记为 runnable，放入到某 P 的队列中，绑定一个 M 继续执行。 system call 阻塞情况下的调度 如果 G 被阻塞在某个 system call 操作上，那么不光 G 会阻塞，执行该 G 的 M 也会解绑 P(实质是被 sysmon 抢走了)， 与 G 一起进入 sleep 状态。如果此时有 idle 的 M，则 P 与其绑定继续执行其他 G；如果没有 idle M，但仍然有其他 G 要去执行， 那么就会创建一个新 M。 当阻塞在 syscall 上的G完成 syscall 调用后，G 会去尝试获取一个可用的 P，如果没有可用的 P，那么 G 会被标记为 runnable， 之前的那个 sleep 的 M 将再次进入 sleep。"},"concurrent/goroutine.html#goroutine":{"title":"goroutine","path":"\\golang-learn\\concurrent\\goroutine.html#goroutine","body":""},"concurrent/goroutine.html#并发和并行":{"title":"&#x5E76;&#x53D1;&#x548C;&#x5E76;&#x884C;","path":"\\golang-learn\\concurrent\\goroutine.html#并发和并行","body":"&#x5E76;&#x53D1; &#x4E00;&#x4E2A; cpu &#x4E0A;&#x80FD;&#x540C;&#x65F6;&#x6267;&#x884C;&#x591A;&#x9879;&#x4EFB;&#x52A1;&#xFF0C;&#x5728;&#x5F88;&#x77ED;&#x65F6;&#x95F4;&#x5185;&#xFF0C;cpu &#x6765;&#x56DE;&#x5207;&#x6362;&#x4EFB;&#x52A1;&#x6267;&#x884C;(&#x5728;&#x67D0;&#x6BB5;&#x5F88;&#x77ED;&#x65F6;&#x95F4;&#x5185;&#x6267;&#x884C;&#x7A0B;&#x5E8F; a&#xFF0C;&#x7136;&#x540E;&#x53C8;&#x8FC5;&#x901F;&#x5F97;&#x5207;&#x6362;&#x5230;&#x7A0B;&#x5E8F; b &#x53BB;&#x6267;&#x884C;)&#xFF0C; &#x6709;&#x65F6;&#x95F4;&#x4E0A;&#x7684;&#x91CD;&#x53E0;&#xFF08;&#x5B8F;&#x89C2;&#x4E0A;&#x662F;&#x540C;&#x65F6;&#x7684;&#xFF0C;&#x5FAE;&#x89C2;&#x4ECD;&#x662F;&#x987A;&#x5E8F;&#x6267;&#x884C;&#xFF09;,&#x8FD9;&#x6837;&#x770B;&#x8D77;&#x6765;&#x591A;&#x4E2A;&#x4EFB;&#x52A1;&#x50CF;&#x662F;&#x540C;&#x65F6;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x5C31;&#x662F; &#x5E76;&#x53D1; &#x3002; &#x5E76;&#x884C; &#x5F53;&#x7CFB;&#x7EDF;&#x6709;&#x591A;&#x4E2A; CPU &#x65F6;,&#x6BCF;&#x4E2A; CPU &#x540C;&#x4E00;&#x65F6;&#x523B;&#x90FD;&#x8FD0;&#x884C;&#x4EFB;&#x52A1;&#xFF0C;&#x4E92;&#x4E0D;&#x62A2;&#x5360;&#x81EA;&#x5DF1;&#x6240;&#x5728;&#x7684; CPU &#x8D44;&#x6E90;&#xFF0C;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#xFF0C;&#x79F0;&#x4E3A; &#x5E76;&#x884C; &#x3002;&#x5E76;&#x884C;&#x662F;&#x5E76;&#x53D1;&#x8BBE;&#x8BA1;&#x7684; &#x7406;&#x60F3;&#x6A21;&#x5F0F;&#x3002; &#x8FDB;&#x7A0B; cpu &#x5728;&#x5207;&#x6362;&#x7A0B;&#x5E8F;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5982;&#x679C;&#x4E0D;&#x4FDD;&#x5B58;&#x4E0A;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x7684;&#x72B6;&#x6001;&#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x6211;&#x4EEC;&#x5E38;&#x8BF4;&#x7684; context &#x2013;&#x4E0A;&#x4E0B;&#x6587;&#xFF09;&#xFF0C;&#x76F4;&#x63A5;&#x5207;&#x6362;&#x4E0B;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#xFF0C;&#x5C31;&#x4F1A;&#x4E22;&#x5931;&#x4E0A;&#x4E00;&#x4E2A; &#x7A0B;&#x5E8F;&#x7684;&#x4E00;&#x7CFB;&#x5217;&#x72B6;&#x6001;&#xFF0C;&#x4E8E;&#x662F;&#x5F15;&#x5165;&#x4E86;&#x8FDB;&#x7A0B;&#x8FD9;&#x4E2A;&#x6982;&#x5FF5;&#xFF0C;&#x7528;&#x4EE5;&#x5212;&#x5206;&#x597D;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x6240;&#x9700;&#x8981;&#x7684;&#x8D44;&#x6E90;&#x3002;&#x56E0;&#x6B64;&#x8FDB;&#x7A0B;&#x5C31;&#x662F;&#x4E00;&#x4E2A;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x65F6;&#x5019;&#x7684;&#x6240;&#x9700;&#x8981;&#x7684;&#x57FA;&#x672C;&#x8D44;&#x6E90;&#x5355; &#x4F4D;&#xFF08;&#x4E5F;&#x53EF;&#x4EE5;&#x8BF4;&#x662F;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x7684;&#x4E00;&#x4E2A;&#x5B9E;&#x4F53;&#xFF09;&#x3002; &#x7EBF;&#x7A0B; cpu &#x5207;&#x6362;&#x591A;&#x4E2A;&#x8FDB;&#x7A0B;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x4F1A;&#x82B1;&#x8D39;&#x4E0D;&#x5C11;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x56E0;&#x4E3A;&#x5207;&#x6362;&#x8FDB;&#x7A0B;&#x9700;&#x8981;&#x5207;&#x6362;&#x5230;&#x5185;&#x6838;&#x6001;&#xFF0C;&#x800C;&#x6BCF;&#x6B21;&#x8C03;&#x5EA6;&#x9700;&#x8981;&#x5185;&#x6838;&#x6001;&#x90FD;&#x9700;&#x8981;&#x8BFB;&#x53D6;&#x7528;&#x6237;&#x6001;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x8FDB;&#x7A0B; &#x4E00;&#x65E6;&#x591A;&#x8D77;&#x6765;&#xFF0C;cpu &#x8C03;&#x5EA6;&#x4F1A;&#x6D88;&#x8017;&#x4E00;&#x5927;&#x5806;&#x8D44;&#x6E90;&#xFF0C;&#x56E0;&#x6B64;&#x5F15;&#x5165;&#x4E86;&#x7EBF;&#x7A0B;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x7EBF;&#x7A0B;&#x672C;&#x8EAB;&#x51E0;&#x4E4E;&#x4E0D;&#x5360;&#x6709;&#x8D44;&#x6E90;&#xFF0C;&#x4ED6;&#x4EEC;&#x5171;&#x4EAB;&#x8FDB;&#x7A0B;&#x91CC;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x5185;&#x6838;&#x8C03;&#x5EA6;&#x8D77;&#x6765;&#x4E0D; &#x4F1A;&#x90A3;&#x4E48;&#x50CF;&#x8FDB;&#x7A0B;&#x5207;&#x6362;&#x90A3;&#x4E48;&#x8017;&#x8D39;&#x8D44;&#x6E90;&#x3002; &#x534F;&#x7A0B; &#x591A;&#x7EBF;&#x7A0B;&#x548C;&#x591A;&#x8FDB;&#x7A0B;&#x662F;&#x5E76;&#x884C;&#x7684;&#x57FA;&#x672C;&#x6761;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;&#x5355;&#x7EBF;&#x7A0B;&#x53EF;&#x4EE5;&#x5229;&#x7528; &#x534F;&#x7A0B; &#x505A;&#x5230;&#x5E76;&#x53D1;&#x3002;&#x534F;&#x7A0B;&#x62E5;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x5BC4;&#x5B58;&#x5668;&#x4E0A;&#x4E0B;&#x6587;&#x548C;&#x6808;&#x3002;&#x534F;&#x7A0B;&#x5728;&#x7EBF;&#x7A0B;&#x4E0A;&#x901A;&#x8FC7;&#x4E3B;&#x52A8; &#x5207;&#x6362;&#x6765;&#x5B9E;&#x73B0;&#x5E76;&#x53D1;&#xFF0C;&#x51CF;&#x5C11;&#x4E86;&#x963B;&#x585E;&#x65F6;&#x95F4;&#xFF0C;&#x8FD8;&#x907F;&#x514D;&#x4E86;&#x7EBF;&#x7A0B;&#x5207;&#x6362;&#x7684;&#x5F00;&#x9500;&#x3002;&#x4F46;&#x534F;&#x7A0B;&#x8FD0;&#x884C;&#x7684;&#x5E76;&#x53D1;&#x672C;&#x8D28;&#x4E0A;&#x8FD8;&#x662F;&#x4E32;&#x884C;&#x7684;&#x3002;&#x7EBF;&#x7A0B;&#x548C;&#x8FDB;&#x7A0B;&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x7531;&#x7A0B;&#x5E8F;&#x89E6;&#x53D1;&#x7CFB;&#x7EDF; &#x63A5;&#x53E3;&#xFF0C;&#x6700;&#x540E;&#x7684;&#x6267;&#x884C;&#x8005;&#x662F;&#x7CFB;&#x7EDF;&#xFF1B;&#x534F;&#x7A0B;&#x7684;&#x64CD;&#x4F5C;&#x6267;&#x884C;&#x8005;&#x5219;&#x662F;&#x7528;&#x6237;&#x81EA;&#x8EAB;&#x7A0B;&#x5E8F;&#x3002;"},"concurrent/goroutine.html#goroutine-1":{"title":"goroutine","path":"\\golang-learn\\concurrent\\goroutine.html#goroutine-1","body":"Go &#x8BED;&#x8A00;&#x5728;&#x8BED;&#x8A00;&#x5C42;&#x9762;&#x4E0A;&#x652F;&#x6301;&#x4E86;&#x5E76;&#x53D1;&#xFF0C;&#x7B80;&#x5355;&#x5C06; goroutine &#x5F52;&#x4E3A;&#x534F;&#x7A0B;&#x5E76;&#x4E0D;&#x5408;&#x9002;&#x3002;Go runtime &#x4F1A;&#x521B;&#x5EFA;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x6765;&#x6267;&#x884C;&#x5E76;&#x53D1;&#x4EFB;&#x52A1;&#xFF0C;&#x800C;&#x4E14;&#x4EFB;&#x52A1; &#x53EF;&#x4EE5;&#x8DE8;&#x7EBF;&#x7A0B;&#x8C03;&#x5EA6;&#x3002;&#x6240;&#x4EE5; goroutine &#x66F4;&#x50CF;&#x662F;&#x591A;&#x7EBF;&#x7A0B;&#x548C;&#x534F;&#x7A0B;&#x7684;&#x7ED3;&#x5408;&#x4F53;&#x3002; goroutine &#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7406;&#x89E3;&#x4E3A;&#x534F;&#x7A0B;&#xFF0C;&#x5F00;&#x9500;&#x8F83;&#x4F4E; (&#x5927;&#x6982;&#x662F; 4~5KB )&#xFF0C;&#x5F53;&#x7136;&#x4F1A;&#x6839;&#x636E;&#x76F8;&#x5E94;&#x7684;&#x6570;&#x636E;&#x4F38;&#x7F29;&#x3002;&#x4E5F;&#x6B63;&#x56E0;&#x4E3A;&#x5982;&#x6B64;&#xFF0C;&#x53EF;&#x540C;&#x65F6;&#x8FD0;&#x884C;&#x6210;&#x5343; &#x4E0A;&#x4E07;&#x4E2A;&#x5E76;&#x53D1;&#x4EFB;&#x52A1;&#x3002; goroutine &#x6BD4; thread &#x66F4;&#x6613;&#x7528;&#x3001;&#x66F4;&#x9AD8;&#x6548;&#x3001;&#x66F4;&#x8F7B;&#x4FBF;&#x3002;&#x6211;&#x4EEC;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x7684; main &#x51FD;&#x6570;&#x5728;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684; goroutine &#x4E2D;&#x8FD0;&#x884C;&#xFF0C; &#x53EB;&#x505A; &#x4E3B; goroutine &#x3002;&#x5728;&#x4EE3;&#x7801;&#x4E2D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; go &#x5173;&#x952E;&#x5B57;&#x521B;&#x5EFA; goroutine &#x3002; 1 go f() main &#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x65F6;&#xFF0C;&#x6240;&#x6709; goroutine &#x90FD;&#x4F1A;&#x88AB;&#x6253;&#x65AD;&#xFF0C;&#x7A0B;&#x5E8F;&#x9000;&#x51FA; &#x3002;&#x9664;&#x4E86;&#x4ECE; main &#x51FD;&#x6570;&#x9000;&#x51FA;&#x6216;&#x8005;&#x76F4;&#x63A5;&#x7EC8;&#x6B62;&#x7A0B;&#x5E8F;&#x4E4B;&#x5916;&#xFF0C;&#x6CA1;&#x6709;&#x5176;&#x5B83; &#x7684;&#x7F16;&#x7A0B;&#x65B9;&#x6CD5;&#x80FD;&#x591F;&#x8BA9;&#x4E00;&#x4E2A; goroutine &#x6765;&#x6253;&#x65AD;&#x53E6;&#x4E00;&#x4E2A;&#x7684;&#x6267;&#x884C;&#xFF0C;&#x4F46;&#x662F;&#x4E4B;&#x540E;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x4E00;&#x79CD;&#x65B9;&#x5F0F;&#x6765;&#x5B9E;&#x73B0;&#x8FD9;&#x4E2A;&#x76EE;&#x7684;&#xFF0C;&#x901A;&#x8FC7; goroutine &#x4E4B;&#x95F4; &#x7684;&#x901A;&#x4FE1;&#x6765;&#x8BA9;&#x4E00;&#x4E2A; goroutine &#x8BF7;&#x6C42;&#x5176;&#x5B83;&#x7684; goroutine &#xFF0C;&#x4F7F;&#x88AB;&#x8BF7;&#x6C42; goroutine &#x81EA;&#x884C;&#x7ED3;&#x675F;&#x6267;&#x884C;&#x3002; &#x4EC0;&#x4E48;&#x662F;&#x4E3B; goroutine&#xFF0C;&#x5B83;&#x4E0E;&#x6211;&#x4EEC;&#x542F;&#x7528;&#x7684;&#x5176;&#x4ED6; goroutine &#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C; 1 2 3 4 5 6 7 8 9 10 11 package main import fmt func main () { \t for i := 0 ; i  10 ; i++ { \t\t go func () { \t\t\tfmt.Println(i) \t\t}() \t} } &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4F1A;&#x6253;&#x5370;&#x51FA;&#x4EC0;&#x4E48;&#x5185;&#x5BB9;&#xFF1F; &#x56DE;&#x7B54;&#x662F;&#xFF1A;&#x4E0D;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x88AB;&#x6253;&#x5370;&#x51FA;&#x6765;&#x3002; Go &#x8BED;&#x8A00;&#x4E0D;&#x4F46;&#x6709;&#x7740;&#x72EC;&#x7279;&#x7684;&#x5E76;&#x53D1;&#x7F16;&#x7A0B;&#x6A21;&#x578B;&#xFF0C;&#x4EE5;&#x53CA;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B; goroutine &#xFF0C;&#x8FD8;&#x62E5;&#x6709;&#x5F3A;&#x5927;&#x7684;&#x7528;&#x4E8E;&#x8C03;&#x5EA6; goroutine &#x3001;&#x5BF9;&#x63A5;&#x7CFB;&#x7EDF;&#x7EA7;&#x7EBF;&#x7A0B;&#x7684; &#x8C03;&#x5EA6;&#x5668; &#x3002; &#x8C03;&#x5EA6;&#x5668;&#x7684;&#x4E3B;&#x8981;&#x6709; 3 &#x4E2A;&#x91CD;&#x8981;&#x90E8;&#x5206;&#xFF0C;&#x5206;&#x522B;&#x662F; M&#x3001;G&#x3001;P&#x3002; G&#xFF08;goroutine &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C; &#x534F;&#x7A0B;&#x7684;&#x5B9E;&#x4F53;&#xFF0C;&#x5305;&#x62EC;&#x4E86;&#x8C03;&#x7528;&#x6808;&#xFF0C;&#x91CD;&#x8981;&#x7684;&#x8C03;&#x5EA6;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982; channel &#x7B49;&#x3002; P&#xFF08;processor &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C;&#x662F;&#x8854;&#x63A5; M &#x548C; G &#x7684;&#x8C03;&#x5EA6;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x4E00;&#x4E2A; P &#x53EF;&#x4EE5;&#x627F;&#x8F7D;&#x82E5;&#x5E72;&#x4E2A; G&#xFF0C;&#x4E14;&#x80FD;&#x591F;&#x4F7F;&#x8FD9;&#x4E9B; G &#x9002;&#x65F6;&#x5730;&#x4E0E; M &#x8FDB;&#x884C; &#x5BF9;&#x63A5;&#xFF0C;&#x5E76;&#x5F97;&#x5230;&#x771F;&#x6B63;&#x8FD0;&#x884C;&#x7684;&#x4E2D;&#x4ECB;&#x3002;P &#x7684;&#x6570;&#x91CF;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; runtime.GOMAXPROCS() &#x6765;&#x8BBE;&#x7F6E;&#xFF0C;P &#x7684;&#x6570;&#x91CF;&#x51B3;&#x5B9A;&#x4E86;&#x7CFB;&#x7EDF;&#x5185;&#x6700;&#x5927;&#x53EF;&#x5E76;&#x884C;&#x7684; G &#x7684;&#x6570;&#x91CF;&#xFF0C; &#x5373;&#x6709;&#x591A;&#x5C11;&#x4E2A; goroutine &#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8FD0;&#x884C;&#x3002; M&#xFF08;machine &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C;&#x4EE3;&#x8868;&#x7684;&#x662F;&#x7CFB;&#x7EDF;&#x7EA7;&#x7EBF;&#x7A0B;&#xFF0C;&#x7531;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x3002; &#x4E0E;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x603B;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x4E3B;&#x7EBF;&#x7A0B;&#x7C7B;&#x4F3C;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x72EC;&#x7ACB;&#x7684; Go &#x7A0B;&#x5E8F;&#x5728;&#x8FD0;&#x884C;&#x65F6;&#x4E5F;&#x603B;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x4E3B; goroutine &#x3002;&#x8FD9;&#x4E2A;&#x4E3B; goroutine &#x4F1A;&#x5728; Go &#x7A0B; &#x5E8F;&#x7684;&#x8FD0;&#x884C;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#x5B8C;&#x6210;&#x540E;&#x88AB;&#x81EA;&#x52A8;&#x5730;&#x542F;&#x7528;&#xFF0C;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x505A;&#x4EFB;&#x4F55;&#x624B;&#x52A8;&#x7684;&#x64CD;&#x4F5C;&#x3002; &#x6BCF;&#x6761; go &#x8BED;&#x53E5;&#x4E00;&#x822C;&#x90FD;&#x4F1A;&#x643A;&#x5E26;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x8C03;&#x7528;&#xFF0C;&#x8FD9;&#x4E2A;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x51FD;&#x6570;&#x5E38;&#x5E38;&#x88AB;&#x79F0;&#x4E3A; go &#x51FD;&#x6570;&#x3002;&#x800C;&#x4E3B; goroutine &#x7684; go &#x51FD;&#x6570;&#x5C31;&#x662F; &#x90A3;&#x4E2A;&#x4F5C;&#x4E3A;&#x7A0B;&#x5E8F;&#x5165;&#x53E3;&#x7684; main &#x51FD;&#x6570; &#x3002; go &#x51FD;&#x6570;&#x771F;&#x6B63;&#x88AB;&#x6267;&#x884C;&#x7684;&#x65F6;&#x95F4;&#x603B;&#x4F1A;&#x4E0E;&#x5176;&#x6240;&#x5C5E;&#x7684; go &#x8BED;&#x53E5;&#x88AB;&#x6267;&#x884C;&#x7684;&#x65F6;&#x95F4;&#x4E0D;&#x540C; &#x3002; &#x5F53;&#x7A0B;&#x5E8F;&#x6267;&#x884C;&#x5230;&#x4E00;&#x6761; go &#x8BED;&#x53E5;&#x7684;&#x65F6;&#x5019;&#xFF0C; go &#x5173;&#x952E;&#x5B57;&#x5E76;&#x4E0D;&#x662F;&#x6267;&#x884C;&#x5E76;&#x53D1;&#x64CD;&#x4F5C;&#xFF0C;&#x800C;&#x662F;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5E76;&#x53D1;&#x4EFB;&#x52A1;&#x5355;&#x5143; &#x3002;Go &#x8BED;&#x8A00;&#x7684;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#xFF0C;&#x4F1A;&#x5148;&#x8BD5;&#x56FE;&#x4ECE;&#x67D0;&#x4E2A; &#x5B58;&#x653E;&#x7A7A;&#x95F2;&#x7684; G &#x7684;&#x961F;&#x5217;&#x4E2D;&#x83B7;&#x53D6;&#x4E00;&#x4E2A; G&#xFF08;&#x4E5F;&#x5C31;&#x662F; goroutine &#xFF09;&#xFF0C;&#x5B83;&#x53EA;&#x6709;&#x5728;&#x627E;&#x4E0D;&#x5230;&#x7A7A;&#x95F2; G &#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x4F1A;&#x53BB;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684; G&#x3002;&#x5DF2;&#x5B58;&#x5728; &#x7684; goroutine &#x603B;&#x662F;&#x4F1A;&#x88AB;&#x4F18;&#x5148;&#x590D;&#x7528;&#x3002; &#x5728;&#x62FF;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x7A7A;&#x95F2;&#x7684; G &#x4E4B;&#x540E;&#xFF0C;Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x4F1A;&#x7528;&#x8FD9;&#x4E2A; G &#x53BB;&#x5305;&#x88C5;&#x5F53;&#x524D;&#x7684;&#x90A3;&#x4E2A; go &#x51FD;&#x6570;&#xFF08;&#x6216;&#x8005;&#x8BF4;&#x8BE5;&#x51FD;&#x6570;&#x4E2D;&#x7684;&#x90A3;&#x4E9B;&#x4EE3;&#x7801;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x628A;&#x8FD9; &#x4E2A; G &#x8FFD;&#x52A0;&#x5230;&#x67D0;&#x4E2A;&#x5B58;&#x653E;&#x53EF;&#x8FD0;&#x884C;&#x7684; G &#x7684;&#x961F;&#x5217;&#x4E2D;&#x3002;&#x8FD9;&#x7C7B;&#x961F;&#x5217;&#x4E2D;&#x7684; G &#x603B;&#x662F;&#x4F1A;&#x6309;&#x7167;&#x5148;&#x5165;&#x5148;&#x51FA;&#x7684;&#x987A;&#x5E8F;&#xFF0C;&#x5F88;&#x5FEB;&#x5730;&#x7531;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x5185;&#x90E8;&#x7684;&#x8C03;&#x5EA6;&#x5668;&#x5B89;&#x6392;&#x8FD0;&#x884C;&#x3002; &#x867D;&#x7136;&#x8FD9;&#x4F1A;&#x5F88;&#x5FEB;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x4E0A;&#x9762;&#x6240;&#x8BF4;&#x7684;&#x90A3;&#x4E9B;&#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#x8FD8;&#x662F;&#x4E0D;&#x53EF;&#x907F;&#x514D;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x8017;&#x65F6;&#x8FD8;&#x662F;&#x5B58;&#x5728;&#x7684;&#x3002; &#x56E0;&#x6B64;&#xFF0C; go &#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4;&#x603B;&#x662F;&#x4F1A;&#x660E;&#x663E;&#x6EDE;&#x540E;&#x4E8E;&#x5B83;&#x6240;&#x5C5E;&#x7684; go &#x8BED;&#x53E5;&#x7684;&#x6267;&#x884C;&#x65F6;&#x95F4; &#x3002;&#x5F53;&#x7136;&#x4E86;&#xFF0C;&#x8FD9;&#x91CC;&#x6240;&#x8BF4;&#x7684;&#x201C;&#x660E;&#x663E;&#x6EDE;&#x540E;&#x201D;&#x662F;&#x5BF9;&#x4E8E;&#x8BA1;&#x7B97;&#x673A; &#x7684; CPU &#x65F6;&#x949F;&#x548C; Go &#x7A0B;&#x5E8F;&#x6765;&#x8BF4;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x5927;&#x591A;&#x6570;&#x65F6;&#x5019;&#x90FD;&#x4E0D;&#x4F1A;&#x6709;&#x660E;&#x663E;&#x7684;&#x611F;&#x89C9;&#x3002; &#x8BF7;&#x8BB0;&#x4F4F;&#xFF0C; &#x53EA;&#x8981; go &#x8BED;&#x53E5;&#x672C;&#x8EAB;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C;Go &#x7A0B;&#x5E8F;&#x5B8C;&#x5168;&#x4E0D;&#x4F1A;&#x7B49;&#x5F85; go &#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#xFF0C;&#x5B83;&#x4F1A;&#x7ACB;&#x523B;&#x53BB;&#x6267;&#x884C;&#x540E;&#x8FB9;&#x7684;&#x8BED;&#x53E5; &#x3002;&#x8FD9;&#x5C31;&#x662F;&#x6240;&#x8C13; &#x7684; &#x5F02;&#x6B65;&#x5E76;&#x53D1; &#x5730;&#x6267;&#x884C;&#x3002; &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x90A3; 10 &#x4E2A;&#x5305;&#x88C5;&#x4E86; go &#x51FD;&#x6570;&#x7684; goroutine &#x5F80;&#x5F80;&#x8FD8;&#x6CA1;&#x6709;&#x83B7;&#x5F97;&#x8FD0;&#x884C;&#x7684;&#x673A;&#x4F1A;&#x3002;&#x4F46;&#x662F;&#x5982;&#x679C;&#x6709;&#x673A;&#x4F1A;&#x8FD0;&#x884C;&#xFF0C;&#x6253;&#x5370;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x4EC0;&#x4E48;&#xFF0C; &#x5168;&#x662F; 10 &#xFF1F; &#x5F53; for &#x8BED;&#x53E5;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8FED;&#x4EE3;&#x8FD0;&#x884C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5176;&#x4E2D;&#x7684;&#x90A3;&#x6761; go &#x8BED;&#x53E5;&#x5373;&#x662F;&#x6700;&#x540E;&#x4E00;&#x6761;&#x8BED;&#x53E5;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5728;&#x6267;&#x884C;&#x5B8C;&#x8FD9;&#x6761; go &#x8BED;&#x53E5;&#x4E4B;&#x540E;&#xFF0C; &#x4E3B; goroutine &#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x4E5F;&#x5C31;&#x6267;&#x884C;&#x5B8C;&#x4E86;&#xFF0C;Go &#x7A0B;&#x5E8F;&#x4F1A;&#x7ACB;&#x5373;&#x7ED3;&#x675F;&#x8FD0;&#x884C;&#x3002;&#x90A3;&#x4E48;&#xFF0C;&#x5982;&#x679C;&#x8FD9;&#x6837;&#x7684;&#x8BDD;&#xFF0C;&#x8FD8;&#x4F1A;&#x6709;&#x4EFB;&#x4F55;&#x5185;&#x5BB9;&#x88AB;&#x6253;&#x5370;&#x51FA;&#x6765;&#x5417;&#xFF1F; Go &#x8BED;&#x8A00;&#x5E76;&#x4E0D;&#x4F1A;&#x53BB;&#x4FDD;&#x8BC1;&#x8FD9;&#x4E9B; goroutine &#x4F1A;&#x4EE5;&#x600E;&#x6837;&#x7684;&#x987A;&#x5E8F;&#x8FD0;&#x884C;&#x3002;&#x7531;&#x4E8E;&#x4E3B; goroutine &#x4F1A;&#x4E0E;&#x6211;&#x4EEC;&#x624B;&#x52A8;&#x542F;&#x7528;&#x7684;&#x5176;&#x4ED6; goroutine &#x4E00;&#x8D77;&#x63A5;&#x53D7; &#x8C03;&#x5EA6;&#xFF0C;&#x53C8;&#x56E0;&#x4E3A;&#x8C03;&#x5EA6;&#x5668;&#x5F88;&#x53EF;&#x80FD;&#x4F1A;&#x5728; goroutine &#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x53EA;&#x6267;&#x884C;&#x4E86;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x65F6;&#x5019;&#x6682;&#x505C;&#xFF0C;&#x4EE5;&#x671F;&#x6240;&#x6709;&#x7684; goroutine &#x6709;&#x66F4;&#x516C;&#x5E73;&#x7684;&#x8FD0;&#x884C;&#x673A;&#x4F1A;&#x3002; &#x6240;&#x4EE5;&#x54EA;&#x4E2A; goroutine &#x5148;&#x6267;&#x884C;&#x5B8C;&#x3001;&#x54EA;&#x4E2A; goroutine &#x540E;&#x6267;&#x884C;&#x5B8C;&#x5F80;&#x5F80;&#x662F;&#x4E0D;&#x53EF;&#x9884;&#x77E5;&#x7684;&#xFF0C;&#x9664;&#x975E;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x4E86;&#x67D0;&#x79CD; Go &#x8BED;&#x8A00;&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x4E86;&#x4EBA;&#x4E3A; &#x5E72;&#x9884;&#x3002; &#x600E;&#x6837;&#x624D;&#x80FD;&#x8BA9;&#x4E3B; goroutine &#x7B49;&#x5F85;&#x5176;&#x4ED6; goroutine &#x521A;&#x624D;&#x8BF4;&#x8FC7;&#xFF0C;&#x4E00;&#x65E6;&#x4E3B; goroutine &#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C;&#x5F53;&#x524D;&#x7684; Go &#x7A0B;&#x5E8F;&#x5C31;&#x4F1A;&#x7ED3;&#x675F;&#x8FD0;&#x884C;&#xFF0C;&#x65E0;&#x8BBA;&#x5176;&#x4ED6;&#x7684; goroutine &#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x5728;&#x8FD0;&#x884C;&#x4E86;&#x3002; &#x90A3;&#x4E48;&#xFF0C;&#x600E;&#x6837;&#x624D;&#x80FD;&#x505A;&#x5230;&#x7B49;&#x5176;&#x4ED6;&#x7684; goroutine &#x8FD0;&#x884C;&#x5B8C;&#x6BD5;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x8BA9;&#x4E3B; goroutine &#x7ED3;&#x675F;&#x8FD0;&#x884C;&#x5462;&#xFF1F; &#x4F7F;&#x7528; time &#x5305; &#xFF0C;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7C97;&#x66B4;&#x7684; time.Sleep(time.Millisecond * 500) &#x8BA9;&#x4E3B; goroutine &#x201C;&#x5C0F;&#x7761;&#x201D;&#x4E00;&#x4F1A;&#x513F;&#x3002; &#x5728;&#x8FD9;&#x91CC;&#x4F20;&#x5165;&#x4E86;&#x201C;500 &#x6BEB;&#x79D2;&#x201D; &#x95EE;&#x9898;&#x662F;&#x6211;&#x4EEC;&#x8BA9;&#x4E3B; goroutine &#x201C;&#x7761;&#x7720;&#x201D;&#x591A;&#x957F;&#x65F6;&#x95F4;&#x624D;&#x662F;&#x5408;&#x9002;&#x7684;&#x5462;&#xFF1F;&#x5982;&#x679C;&#x201C;&#x7761;&#x7720;&#x201D;&#x592A;&#x77ED;&#xFF0C;&#x5219;&#x5F88;&#x53EF;&#x80FD;&#x4E0D;&#x8DB3;&#x4EE5;&#x8BA9;&#x5176;&#x4ED6;&#x7684; goroutine &#x8FD0;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C; &#x800C;&#x82E5;&#x201C;&#x7761;&#x7720;&#x201D;&#x592A;&#x957F;&#x5219;&#x7EAF;&#x5C5E;&#x6D6A;&#x8D39;&#x65F6;&#x95F4;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x95F4;&#x5C31;&#x592A;&#x96BE;&#x628A;&#x63E1;&#x4E86;&#x3002; &#x4F7F;&#x7528;&#x901A;&#x9053; &#x3002; &#x4F7F;&#x7528; sync &#x5305;&#x7684; sync.WaitGroup &#x7C7B;&#x578B; &#x600E;&#x6837;&#x8BA9;&#x542F;&#x7528;&#x7684;&#x591A;&#x4E2A; goroutine &#x6309;&#x7167;&#x65E2;&#x5B9A;&#x7684;&#x987A;&#x5E8F;&#x8FD0;&#x884C; &#x9996;&#x5148;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7A0D;&#x5FAE;&#x6539;&#x9020;&#x4E00;&#x4E0B; for &#x8BED;&#x53E5;&#x4E2D;&#x7684;&#x90A3;&#x4E2A; go &#x51FD;&#x6570;: 1 2 3 4 5 for i := 0 ; i  10 ; i++ { go func (i int ) { fmt.Println(i) }(i) } &#x53EA;&#x6709;&#x8FD9;&#x6837;&#xFF0C;Go &#x8BED;&#x8A00;&#x624D;&#x80FD;&#x4FDD;&#x8BC1;&#x6BCF;&#x4E2A; goroutine &#x90FD;&#x53EF;&#x4EE5;&#x62FF;&#x5230;&#x4E00;&#x4E2A;&#x552F;&#x4E00;&#x7684;&#x6574;&#x6570;&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x70B9;&#x50CF; js&#x3002; &#x5728; go &#x8BED;&#x53E5;&#x88AB;&#x6267;&#x884C;&#x65F6;&#xFF0C;&#x6211;&#x4EEC; &#x4F20;&#x7ED9; go &#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570; i &#x4F1A;&#x5148;&#x88AB;&#x6C42;&#x503C; &#xFF0C;&#x5982;&#x6B64;&#x5C31;&#x5F97;&#x5230;&#x4E86;&#x5F53;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x5E8F;&#x53F7;&#x3002;&#x4E4B;&#x540E;&#xFF0C;&#x65E0;&#x8BBA; go &#x51FD;&#x6570; &#x4F1A;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x6267;&#x884C;&#xFF0C;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x503C;&#x90FD;&#x4E0D;&#x4F1A;&#x53D8;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C; go &#x51FD;&#x6570;&#x4E2D;&#x8C03;&#x7528;&#x7684; fmt.Println &#x51FD;&#x6570;&#x6253;&#x5370;&#x7684;&#x4E00;&#x5B9A;&#x4F1A;&#x662F;&#x90A3;&#x4E2A;&#x5F53;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x5E8F;&#x53F7;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 var count uint32 = 0 trigger := func (i uint32 , fn func () ) { // func() &#x4EE3;&#x8868;&#x7684;&#x662F;&#x65E2;&#x65E0;&#x53C2;&#x6570;&#x58F0;&#x660E;&#x4E5F;&#x65E0;&#x7ED3;&#x679C;&#x58F0;&#x660E;&#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B; for { if n := atomic.LoadUint32(&amp;count); n == i { fn() atomic.AddUint32(&amp;count, 1 ) break } time.Sleep(time.Nanosecond) } } for i := uint32 ( 0 ); i  10 ; i++ { go func (i uint32 ) { fn := func () { fmt.Println(i) } trigger(i, fn) }(i) } trigger( 10 , func () {}) &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x8C03;&#x7528;&#x4E86;&#x4E00;&#x4E2A;&#x540D;&#x53EB; trigger &#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x628A; go &#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570; i &#x548C;&#x521A;&#x521A;&#x58F0;&#x660E;&#x7684;&#x53D8;&#x91CF; fn &#x4F5C;&#x4E3A;&#x53C2;&#x6570;&#x4F20;&#x7ED9;&#x4E86;&#x5B83;&#x3002; func() &#x4EE3;&#x8868;&#x7684;&#x662F;&#x65E2;&#x65E0;&#x53C2;&#x6570;&#x58F0;&#x660E;&#x4E5F;&#x65E0;&#x7ED3;&#x679C;&#x58F0;&#x660E;&#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B; &#x3002; trigger &#x51FD;&#x6570;&#x4F1A;&#x4E0D;&#x65AD;&#x5730;&#x83B7;&#x53D6;&#x4E00;&#x4E2A;&#x540D;&#x53EB; count &#x7684;&#x53D8;&#x91CF;&#x7684;&#x503C;&#xFF0C;&#x5E76;&#x5224;&#x65AD;&#x8BE5;&#x503C;&#x662F;&#x5426;&#x4E0E;&#x53C2;&#x6570; i &#x7684;&#x503C;&#x76F8;&#x540C;&#x3002;&#x5982;&#x679C;&#x76F8;&#x540C;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x7ACB; &#x5373;&#x8C03;&#x7528; fn &#x4EE3;&#x8868;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x7136;&#x540E;&#x628A; count &#x53D8;&#x91CF;&#x7684;&#x503C;&#x52A0; 1 &#xFF0C;&#x6700;&#x540E;&#x663E;&#x5F0F;&#x5730;&#x9000;&#x51FA;&#x5F53;&#x524D;&#x7684;&#x5FAA;&#x73AF;&#x3002;&#x5426;&#x5219;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5148;&#x8BA9;&#x5F53;&#x524D;&#x7684; goroutine &#x201C;&#x7761;&#x7720;&#x201D;&#x4E00;&#x4E2A;&#x7EB3;&#x79D2;&#x518D;&#x8FDB;&#x5165;&#x4E0B;&#x4E00;&#x4E2A;&#x8FED;&#x4EE3;&#x3002; &#x64CD;&#x4F5C;&#x53D8;&#x91CF; count &#x7684;&#x65F6;&#x5019;&#x4F7F;&#x7528;&#x7684;&#x90FD;&#x662F;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x3002;&#x8FD9;&#x662F;&#x7531;&#x4E8E; trigger &#x51FD;&#x6570;&#x4F1A;&#x88AB;&#x591A;&#x4E2A; goroutine &#x5E76;&#x53D1;&#x5730;&#x8C03;&#x7528;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x7528;&#x5230;&#x7684; &#x975E;&#x672C;&#x5730;&#x53D8;&#x91CF; count &#xFF0C;&#x5C31;&#x88AB;&#x591A;&#x4E2A;&#x7528;&#x6237;&#x7EA7;&#x7EBF;&#x7A0B;&#x5171;&#x7528;&#x4E86;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x5BF9;&#x5B83;&#x7684;&#x64CD;&#x4F5C;&#x5C31;&#x4EA7;&#x751F;&#x4E86;&#x7ADE;&#x6001;&#x6761;&#x4EF6;&#xFF08;race condition&#xFF09;&#xFF0C;&#x7834;&#x574F;&#x4E86;&#x7A0B;&#x5E8F;&#x7684;&#x5E76; &#x53D1;&#x5B89;&#x5168;&#x6027;&#x3002;&#x5728; sync/atomic &#x5305;&#x4E2D;&#x58F0;&#x660E;&#x4E86;&#x5F88;&#x591A;&#x7528;&#x4E8E;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x7684;&#x51FD;&#x6570;&#x3002;&#x7531;&#x4E8E;&#x6211;&#x9009;&#x7528;&#x7684;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x5BF9;&#x88AB;&#x64CD;&#x4F5C;&#x7684;&#x6570;&#x503C;&#x7684;&#x7C7B;&#x578B;&#x6709;&#x7EA6;&#x675F;&#xFF0C;&#x6240; &#x4EE5;&#x5BF9; count &#x4EE5;&#x53CA;&#x76F8;&#x5173;&#x7684;&#x53D8;&#x91CF;&#x548C;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x8FDB;&#x884C;&#x4E86;&#x7EDF;&#x4E00;&#x7684;&#x53D8;&#x66F4;&#xFF08;&#x7531; int &#x53D8;&#x4E3A;&#x4E86; uint32 &#xFF09;&#x3002; &#x7EB5;&#x89C2; count &#x53D8;&#x91CF;&#x3001; trigger &#x51FD;&#x6570;&#x4EE5;&#x53CA;&#x6539;&#x9020;&#x540E;&#x7684; for &#x8BED;&#x53E5;&#x548C; go &#x51FD;&#x6570;&#xFF0C;&#x6211;&#x8981;&#x505A;&#x7684;&#x662F;&#xFF0C;&#x8BA9; count &#x53D8;&#x91CF;&#x6210;&#x4E3A;&#x4E00;&#x4E2A;&#x4FE1;&#x53F7;&#xFF0C; &#x5B83;&#x7684;&#x503C;&#x603B;&#x662F;&#x4E0B;&#x4E00;&#x4E2A;&#x53EF;&#x4EE5;&#x8C03;&#x7528;&#x6253;&#x5370;&#x51FD;&#x6570;&#x7684; go &#x51FD;&#x6570;&#x7684;&#x5E8F;&#x53F7;&#x3002; &#x8FD9;&#x4E2A;&#x5E8F;&#x53F7;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x542F;&#x7528; goroutine &#x65F6;&#xFF0C;&#x90A3;&#x4E2A;&#x5F53;&#x6B21;&#x8FED;&#x4EE3;&#x7684;&#x5E8F;&#x53F7;&#x3002; &#x4F9D;&#x7136;&#x60F3;&#x8BA9;&#x4E3B; goroutine &#x6700;&#x540E;&#x4E00;&#x4E2A;&#x8FD0;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x9700;&#x8981;&#x52A0;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x3002;&#x4E0D;&#x8FC7;&#x65E2;&#x7136;&#x6709;&#x4E86; trigger &#x51FD;&#x6570;&#xFF0C;&#x5C31;&#x6CA1;&#x6709;&#x518D;&#x4F7F;&#x7528;&#x901A;&#x9053;&#x3002; 1 trigger( 10 , func () {}) Gosched runtime.Gosched() &#x6682;&#x505C;&#xFF0C;&#x91CA;&#x653E;&#x7EBF;&#x7A0B;&#x53BB;&#x6267;&#x884C;&#x5176;&#x4ED6;&#x4EFB;&#x52A1;&#x3002; Goexit runtime.Goexit() &#x7ACB;&#x5373;&#x7EC8;&#x6B62;&#x5F53;&#x524D;&#x4EFB;&#x52A1;&#xFF0C;runtime &#x4F1A;&#x786E;&#x4FDD;&#x6240;&#x6709; defer &#x51FD;&#x6570;&#x88AB;&#x6267;&#x884C;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x5176;&#x4ED6;&#x5E76;&#x53D1;&#x4EFB;&#x52A1;&#x3002; goroutine &#x6CC4;&#x6F0F; goroutine &#x88AB;&#x6C38;&#x8FDC;&#x5361;&#x4F4F;&#xFF0C;&#x5C31;&#x4F1A;&#x5BFC;&#x81F4; goroutine &#x6CC4;&#x6F0F;&#xFF0C;&#x4F8B;&#x5982;&#x5F53;&#x4F7F;&#x7528;&#x4E86;&#x65E0;&#x7F13;&#x5B58;&#x7684; channel &#xFF0C; goroutine &#x56E0;&#x4E3A; channel &#x7684; &#x6570;&#x636E;&#x6CA1;&#x6709;&#x88AB;&#x63A5;&#x6536;&#x800C;&#x88AB;&#x5361;&#x4F4F;&#x3002;&#x6CC4;&#x6F0F;&#x7684; goroutine &#x4E0D;&#x4F1A;&#x88AB;&#x81EA;&#x52A8;&#x56DE;&#x6536;&#x3002;"},"concurrent/goroutine.html#Goroutine-调度器":{"title":"Goroutine &#x8C03;&#x5EA6;&#x5668;","path":"\\golang-learn\\concurrent\\goroutine.html#Goroutine-调度器","body":"&#x8C03;&#x5EA6;&#x5668; Go &#x7684; runtime &#x8D1F;&#x8D23;&#x5BF9; goroutine &#x8FDB;&#x884C;&#x201C;&#x8C03;&#x5EA6;&#x201D;&#x3002;&#x8C03;&#x5EA6;&#x672C;&#x8D28;&#x4E0A;&#x5C31;&#x662F;&#x51B3;&#x5B9A;&#x4F55;&#x65F6;&#x54EA;&#x4E2A; goroutine &#x5C06;&#x83B7;&#x5F97;&#x8D44;&#x6E90;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x3001;&#x54EA;&#x4E2A; goroutine &#x5E94;&#x8BE5;&#x505C;&#x6B62;&#x6267;&#x884C;&#x8BA9;&#x51FA;&#x8D44;&#x6E90;&#x3001;&#x54EA;&#x4E2A; goroutine &#x5E94;&#x8BE5;&#x88AB;&#x5524;&#x9192;&#x6062;&#x590D;&#x6267;&#x884C;&#x7B49;&#x3002; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5BF9;&#x8FDB;&#x7A0B;&#x3001;&#x7EBF;&#x7A0B;&#x7684;&#x8C03;&#x5EA6;&#x662F;&#x6307;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8C03;&#x5EA6;&#x5668;&#x5C06;&#x7CFB;&#x7EDF;&#x4E2D;&#x7684;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7B97;&#x6CD5;&#x8C03;&#x5EA6;&#x5230;&#x7269;&#x7406; CPU &#x4E0A;&#x53BB;&#x8FD0;&#x884C;&#x3002;C&#x3001;C++ &#x7B49;&#x7684;&#x5E76;&#x53D1;&#x5B9E;&#x73B0;&#x5C31;&#x662F;&#x57FA; &#x4E8E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8C03;&#x5EA6;&#x7684;&#xFF0C;&#x5373;&#x7A0B;&#x5E8F;&#x8D1F;&#x8D23;&#x521B;&#x5EFA;&#x7EBF;&#x7A0B;&#xFF0C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x8D1F;&#x8D23;&#x8C03;&#x5EA6;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x79CD;&#x652F;&#x6301;&#x5E76;&#x53D1;&#x7684;&#x65B9;&#x5F0F;&#x6709;&#x4E0D;&#x5C11;&#x7F3A;&#x9677;&#xFF1A; &#x5BF9;&#x4E8E;&#x5F88;&#x591A;&#x7F51;&#x7EDC;&#x670D;&#x52A1;&#x7A0B;&#x5E8F;&#xFF0C;&#x7531;&#x4E8E;&#x4E0D;&#x80FD;&#x5927;&#x91CF;&#x521B;&#x5EFA; thread&#xFF0C;&#x5C31;&#x8981;&#x5728;&#x5C11;&#x91CF; thread &#x91CC;&#x505A;&#x7F51;&#x7EDC;&#x591A;&#x8DEF;&#x590D;&#x7528;&#xFF0C;&#x5373;&#xFF1A; &#x4F7F;&#x7528; epoll/kqueue/IoCompletionPort &#x8FD9;&#x5957;&#x673A;&#x5236;&#xFF0C;&#x5373;&#x4FBF;&#x6709; libevent/libev &#x8FD9;&#x6837;&#x7684;&#x7B2C;&#x4E09;&#x65B9;&#x5E93;&#x5E2E;&#x5FD9;&#xFF0C;&#x5199;&#x8D77;&#x8FD9;&#x6837;&#x7684;&#x7A0B;&#x5E8F;&#x4E5F;&#x662F;&#x5F88;&#x4E0D;&#x6613;&#x7684; &#x4E00;&#x4E2A; thread &#x7684;&#x4EE3;&#x4EF7;&#x5DF2;&#x7ECF;&#x6BD4;&#x8FDB;&#x7A0B;&#x5C0F;&#x4E86;&#x5F88;&#x591A;&#x4E86;&#xFF0C;&#x4F46;&#x6211;&#x4EEC;&#x4F9D;&#x7136;&#x4E0D;&#x80FD;&#x5927;&#x91CF;&#x521B;&#x5EFA; thread&#xFF0C;&#x56E0;&#x4E3A;&#x9664;&#x4E86;&#x6BCF;&#x4E2A; thread &#x5360;&#x7528;&#x7684;&#x8D44;&#x6E90;&#x4E0D;&#x5C0F;&#x4E4B;&#x5916;&#xFF0C;&#x64CD; &#x4F5C;&#x7CFB;&#x7EDF;&#x8C03;&#x5EA6;&#x5207;&#x6362; thread &#x7684;&#x4EE3;&#x4EF7;&#x4E5F;&#x4E0D;&#x5C0F;&#xFF1B; &#x5E76;&#x53D1;&#x5355;&#x5143;&#x95F4;&#x901A;&#x4FE1;&#x56F0;&#x96BE;&#xFF0C;&#x6613;&#x9519;&#xFF1A;&#x591A;&#x4E2A; thread &#x4E4B;&#x95F4;&#x7684;&#x901A;&#x4FE1;&#x867D;&#x7136;&#x6709;&#x591A;&#x79CD;&#x673A;&#x5236;&#x53EF;&#x9009;&#xFF0C;&#x4F46;&#x7528;&#x8D77;&#x6765;&#x662F;&#x76F8;&#x5F53;&#x590D;&#x6742;&#xFF1B; Go&#x91C7;&#x7528;&#x4E86; &#x7528;&#x6237;&#x5C42;&#x8F7B;&#x91CF;&#x7EA7; thread &#x6216;&#x8005;&#x8BF4;&#x662F; &#x7C7B; coroutine &#x7684;&#x6982;&#x5FF5;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E9B;&#x95EE;&#x9898;&#xFF0C;Go &#x5C06;&#x4E4B;&#x79F0;&#x4E3A; goroutine &#x3002; goroutine &#x5360;&#x7528;&#x7684;&#x8D44;&#x6E90;&#x975E;&#x5E38;&#x5C0F;(goroutine stack &#x7684; size &#x9ED8;&#x8BA4;&#x4E3A; 2k)&#xFF0C;goroutine &#x8C03;&#x5EA6;&#x7684;&#x5207;&#x6362;&#x4E5F;&#x4E0D;&#x7528;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5185;&#x6838;&#x5C42;&#x5B8C;&#x6210;&#xFF0C;&#x4EE3;&#x4EF7;&#x5F88;&#x4F4E; &#x3002; &#x6240;&#x6709;&#x7684; Go &#x4EE3;&#x7801;&#x90FD;&#x5728; goroutine &#x4E2D;&#x6267;&#x884C;&#xFF0C;go runtime &#x4E5F;&#x4E00;&#x6837;&#x3002;&#x5C06;&#x8FD9;&#x4E9B; goroutines &#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7B97;&#x6CD5;&#x653E;&#x5230;&#x201C;CPU&#x201D;&#x4E0A;&#x6267;&#x884C;&#x7684;&#x7A0B;&#x5E8F;&#x5C31;&#x53EB;&#x505A; goroutine &#x8C03;&#x5EA6;&#x5668; &#x6216; goroutine scheduler &#x3002; &#x4E00;&#x4E2A; Go &#x7A0B;&#x5E8F;&#x5BF9;&#x4E8E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x6765;&#x8BF4;&#x53EA;&#x662F;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x5C42;&#x7A0B;&#x5E8F;&#xFF0C;&#x5BF9;&#x4E8E;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x800C;&#x8A00;&#xFF0C;&#x5B83;&#x7684;&#x773C;&#x4E2D;&#x53EA;&#x6709; thread&#xFF0C;&#x5B83;&#x5E76;&#x4E0D;&#x77E5;&#x9053;&#x4EC0;&#x4E48;&#x662F; Goroutine&#x3002; goroutine &#x7684;&#x8C03;&#x5EA6;&#x5168;&#x8981;&#x9760; Go &#x81EA;&#x5DF1;&#x5B8C;&#x6210;&#xFF0C;&#x5B9E;&#x73B0; Go &#x7A0B;&#x5E8F;&#x5185; goroutine &#x4E4B;&#x95F4;&#x201C;&#x516C;&#x5E73;&#x201D;&#x7684;&#x7ADE;&#x4E89; CPU &#x8D44;&#x6E90;&#xFF0C;&#x8FD9;&#x4E2A;&#x4EFB;&#x52A1;&#x5C31;&#x843D;&#x5230;&#x4E86; Go runtime &#x5934;&#x4E0A; &#xFF0C; &#x5728;&#x4E00;&#x4E2A; Go &#x7A0B;&#x5E8F;&#x4E2D;&#xFF0C;&#x9664;&#x4E86;&#x7528;&#x6237;&#x4EE3;&#x7801;&#xFF0C;&#x5269;&#x4E0B;&#x7684;&#x5C31;&#x662F; go runtime &#x4E86;&#x3002; Goroutine &#x7684;&#x8C03;&#x5EA6;&#x95EE;&#x9898;&#x5C31;&#x53D8;&#x6210;&#x4E86; go runtime &#x5982;&#x4F55;&#x5C06;&#x7A0B;&#x5E8F;&#x5185;&#x7684;&#x4F17;&#x591A; goroutine &#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7B97;&#x6CD5;&#x8C03;&#x5EA6;&#x5230; CPU &#x8D44;&#x6E90;&#x4E0A;&#x8FD0;&#x884C; &#x4E86;&#x3002; &#x4F46;&#x662F;&#x5728; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x5C42;&#x9762;&#xFF0C;Thread &#x7ADE;&#x4E89;&#x7684; CPU &#x8D44;&#x6E90;&#x662F;&#x771F;&#x5B9E;&#x7684;&#x7269;&#x7406; CPU &#xFF0C;&#x4F46;&#x5728; Go &#x7A0B;&#x5E8F;&#x5C42;&#x9762;&#xFF0C;&#x5404;&#x4E2A; Goroutine &#x8981;&#x7ADE;&#x4E89;&#x7684; CPU &#x8D44;&#x6E90;&#x662F;&#x4EC0;&#x4E48;&#x5462;&#xFF1F; Go &#x7A0B;&#x5E8F;&#x662F;&#x7528;&#x6237;&#x5C42;&#x7A0B;&#x5E8F;&#xFF0C;&#x5B83;&#x672C;&#x8EAB;&#x6574;&#x4F53;&#x662F;&#x8FD0;&#x884C;&#x5728;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7EBF;&#x7A0B;&#x4E0A;&#x7684;&#xFF0C;&#x56E0;&#x6B64; goroutine &#x4EEC;&#x8981;&#x7ADE;&#x4E89;&#x7684;&#x6240;&#x8C13; CPU &#x8D44;&#x6E90;&#x5C31;&#x662F;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7EBF;&#x7A0B; &#x3002; Go scheduler &#x7684;&#x4EFB;&#x52A1;&#xFF1A; &#x5C06; goroutines &#x6309;&#x7167;&#x4E00;&#x5B9A;&#x7B97;&#x6CD5;&#x653E;&#x5230;&#x4E0D;&#x540C;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7EBF;&#x7A0B;&#x4E2D;&#x53BB;&#x6267;&#x884C; &#x3002;&#x8FD9;&#x79CD;&#x5728;&#x8BED;&#x8A00;&#x5C42;&#x9762;&#x81EA;&#x5E26;&#x8C03;&#x5EA6;&#x5668;&#x7684;&#xFF0C;&#x6211;&#x4EEC;&#x79F0; &#x4E4B;&#x4E3A; &#x539F;&#x751F;&#x652F;&#x6301;&#x5E76;&#x53D1; &#x3002; G-P-M &#x6A21;&#x578B; &#x8C03;&#x5EA6;&#x5668;&#x7684;&#x4E3B;&#x8981;&#x6709; 3 &#x4E2A;&#x91CD;&#x8981;&#x90E8;&#x5206;&#xFF0C;&#x5206;&#x522B;&#x662F; M&#x3001;G&#x3001;P&#x3002; G&#xFF08;goroutine &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C; &#x534F;&#x7A0B;&#x7684;&#x5B9E;&#x4F53;&#xFF0C;&#x5305;&#x62EC;&#x4E86;&#x8C03;&#x7528;&#x6808;&#xFF0C;&#x91CD;&#x8981;&#x7684;&#x8C03;&#x5EA6;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982; channel &#x7B49;&#x3002; P&#xFF08;processor &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C;&#x662F;&#x8854;&#x63A5; M &#x548C; G &#x7684;&#x8C03;&#x5EA6;&#x4E0A;&#x4E0B;&#x6587;&#xFF0C;&#x4E00;&#x4E2A; P &#x53EF;&#x4EE5;&#x627F;&#x8F7D;&#x82E5;&#x5E72;&#x4E2A; G&#xFF0C;&#x4E14;&#x80FD;&#x591F;&#x4F7F;&#x8FD9;&#x4E9B; G &#x9002;&#x65F6;&#x5730;&#x4E0E; M &#x8FDB;&#x884C; &#x5BF9;&#x63A5;&#xFF0C;&#x5E76;&#x5F97;&#x5230;&#x771F;&#x6B63;&#x8FD0;&#x884C;&#x7684;&#x4E2D;&#x4ECB;&#x3002;P &#x7684;&#x6570;&#x91CF;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; runtime.GOMAXPROCS() &#x6765;&#x8BBE;&#x7F6E;&#xFF0C;P &#x7684;&#x6570;&#x91CF;&#x51B3;&#x5B9A;&#x4E86;&#x7CFB;&#x7EDF;&#x5185;&#x6700;&#x5927;&#x53EF;&#x5E76;&#x884C;&#x7684; G &#x7684;&#x6570;&#x91CF;&#xFF0C; &#x5373;&#x6709;&#x591A;&#x5C11;&#x4E2A; goroutine &#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8FD0;&#x884C;&#x3002;&#xFF08;&#x524D;&#x63D0;&#xFF1A;&#x7CFB;&#x7EDF;&#x7684;&#x7269;&#x7406; cpu &#x6838;&#x6570; = P &#x7684;&#x6570;&#x91CF; &#xFF09;&#xFF0C;&#x5B83;&#x7EF4;&#x62A4;&#x4E86;&#x4E00;&#x4E2A; goroutine &#x961F;&#x5217;&#xFF0C;&#x91CC;&#x9762;&#x5B58;&#x50A8; &#x4E86;&#x6240;&#x6709;&#x9700;&#x8981;&#x5B83;&#x6765;&#x6267;&#x884C;&#x7684; goroutine&#x3002; M&#xFF08;machine &#x7684;&#x7F29;&#x5199;&#xFF09;&#xFF0C;&#x4EE3;&#x8868;&#x7684;&#x662F;&#x7CFB;&#x7EDF;&#x7EA7;&#x7EBF;&#x7A0B;&#xFF0C;&#x7531;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7BA1;&#x7406;&#x3002;goroutine &#x5C31;&#x662F;&#x8DD1;&#x5728; M &#x4E4B;&#x4E0A;&#x7684;&#x3002;&#x5728;&#x7ED1;&#x5B9A;&#x6709;&#x6548;&#x7684; P &#x540E;&#xFF0C;&#x8FDB;&#x5165; schedule &#x5FAA;&#x73AF;&#xFF1B; &#x800C; schedule &#x5FAA;&#x73AF;&#x7684;&#x673A;&#x5236;&#x5927;&#x81F4;&#x662F;&#x4ECE;&#x5404;&#x79CD;&#x961F;&#x5217;&#x3001;P &#x7684;&#x672C;&#x5730;&#x961F;&#x5217;&#x4E2D;&#x83B7;&#x53D6; G&#xFF0C;&#x5207;&#x6362;&#x5230; G &#x7684;&#x6267;&#x884C;&#x6808;&#x4E0A;&#x5E76;&#x6267;&#x884C; G &#x7684;&#x51FD;&#x6570;&#xFF0C;&#x8C03;&#x7528; goexit &#x505A;&#x6E05;&#x7406;&#x5DE5;&#x4F5C; &#x5E76;&#x56DE;&#x5230; M&#xFF0C;&#x5982;&#x6B64;&#x53CD;&#x590D;&#x3002;M &#x5E76;&#x4E0D;&#x4FDD;&#x7559; G &#x72B6;&#x6001;&#xFF0C;&#x8FD9;&#x662F; G &#x53EF;&#x4EE5;&#x8DE8; M &#x8C03;&#x5EA6;&#x7684;&#x57FA;&#x7840;&#x3002; &#x62A2;&#x5360;&#x5F0F;&#x8C03;&#x5EA6; Go &#x5E76;&#x6CA1;&#x6709;&#x65F6;&#x95F4;&#x7247;&#x7684;&#x6982;&#x5FF5;&#x3002;&#x5982;&#x679C;&#x67D0;&#x4E2A; G &#x6CA1;&#x6709;&#x8FDB;&#x884C; system call &#x8C03;&#x7528;&#x3001;&#x6CA1;&#x6709;&#x8FDB;&#x884C; I/O &#x64CD;&#x4F5C;&#x3001;&#x6CA1;&#x6709;&#x963B;&#x585E;&#x5728;&#x4E00;&#x4E2A; channel &#x64CD;&#x4F5C;&#x4E0A;&#xFF0C;&#x90A3;&#x4E48; M &#x662F; &#x5982;&#x4F55;&#x8BA9; G &#x505C;&#x4E0B;&#x6765;&#x5E76;&#x8C03;&#x5EA6;&#x4E0B;&#x4E00;&#x4E2A; runnable G &#x7684;&#x5462;&#xFF1F; &#x7B54;&#x6848;&#x662F;&#xFF1A;G &#x662F;&#x88AB;&#x62A2;&#x5360;&#x8C03;&#x5EA6;&#x7684;&#x3002; Go &#x5728;&#x8BBE;&#x8BA1;&#x4E4B;&#x521D;&#x5E76;&#x6CA1;&#x8003;&#x8651;&#x5C06; goroutine &#x8BBE;&#x8BA1;&#x6210;&#x62A2;&#x5360;&#x5F0F;&#x7684;&#x3002;&#x7528;&#x6237;&#x8D1F;&#x8D23;&#x8BA9;&#x5404;&#x4E2A; goroutine &#x4EA4;&#x4E92;&#x5408;&#x4F5C;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#x3002;&#x4E00;&#x4E2A; goroutine &#x53EA;&#x6709;&#x5728;&#x6D89;&#x53CA;&#x5230;&#x52A0;&#x9501;&#xFF0C; &#x8BFB;&#x5199;&#x901A;&#x9053;&#x6216;&#x8005;&#x4E3B;&#x52A8;&#x8BA9;&#x51FA; CPU &#x7B49;&#x64CD;&#x4F5C;&#x65F6;&#x624D;&#x4F1A;&#x89E6;&#x53D1;&#x5207;&#x6362;&#x3002; &#x5783;&#x573E;&#x56DE;&#x6536;&#x5668;&#x662F;&#x9700;&#x8981; stop the world &#x7684;&#x3002;&#x5982;&#x679C;&#x5783;&#x573E;&#x56DE;&#x6536;&#x5668;&#x60F3;&#x8981;&#x8FD0;&#x884C;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x5B83;&#x5FC5;&#x987B;&#x5148;&#x901A;&#x77E5;&#x5176;&#x5B83;&#x7684; goroutine &#x5408;&#x4F5C;&#x505C;&#x4E0B;&#x6765;&#xFF0C;&#x8FD9;&#x4F1A;&#x9020;&#x6210;&#x8F83;&#x957F;&#x65F6; &#x95F4;&#x7684;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#x3002;&#x8003;&#x8651;&#x4E00;&#x79CD;&#x5F88;&#x6781;&#x7AEF;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x6240;&#x6709;&#x7684; goroutine &#x90FD;&#x505C;&#x4E0B;&#x6765;&#x4E86;&#xFF0C;&#x53EA;&#x6709;&#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x6CA1;&#x6709;&#x505C;&#xFF0C;&#x90A3;&#x4E48;&#x5783;&#x573E;&#x56DE;&#x6536;&#x5C31;&#x4F1A;&#x4E00;&#x76F4;&#x7B49;&#x5F85;&#x7740;&#x6CA1;&#x6709;&#x505C;&#x7684;&#x90A3;&#x4E00;&#x4E2A;&#x3002; &#x62A2;&#x5360;&#x5F0F;&#x8C03;&#x5EA6;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x8FD9;&#x79CD;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x62A2;&#x5360;&#x5F0F;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A; goroutine &#x8FD0;&#x884C;&#x65F6;&#x95F4;&#x8FC7;&#x957F;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x88AB;&#x5265;&#x593A;&#x8FD0;&#x884C;&#x6743;&#x3002;Go &#x8FD8;&#x53EA;&#x662F;&#x5F15;&#x5165;&#x4E86;&#x4E00;&#x4E9B;&#x5F88;&#x521D;&#x7EA7; &#x7684;&#x62A2;&#x5360;&#xFF0C;&#x53EA;&#x6709;&#x957F;&#x65F6;&#x95F4;&#x963B;&#x585E;&#x4E8E;&#x7CFB;&#x7EDF;&#x8C03;&#x7528;&#xFF0C;&#x6216;&#x8005;&#x8FD0;&#x884C;&#x4E86;&#x8F83;&#x957F;&#x65F6;&#x95F4;&#x624D;&#x4F1A;&#x88AB;&#x62A2;&#x5360;&#x3002;runtime &#x4F1A;&#x5728;&#x540E;&#x53F0;&#x6709;&#x4E00;&#x4E2A;&#x68C0;&#x6D4B;&#x7EBF;&#x7A0B;&#xFF0C;&#x5B83;&#x4F1A;&#x68C0;&#x6D4B;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#xFF0C; &#x5E76;&#x901A;&#x77E5; goroutine &#x6267;&#x884C;&#x8C03;&#x5EA6;&#x3002; Go &#x7A0B;&#x5E8F;&#x7684;&#x521D;&#x59CB;&#x5316;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;runtime &#x5F00;&#x4E86;&#x4E00;&#x6761;&#x540E;&#x53F0;&#x7EBF;&#x7A0B;&#xFF0C;&#x8FD0;&#x884C;&#x4E00;&#x4E2A; sysmon &#x51FD;&#x6570;(&#x4E00;&#x822C;&#x79F0;&#x4E3A;&#x76D1;&#x63A7;&#x7EBF;&#x7A0B;)&#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x4F1A;&#x5468;&#x671F;&#x6027;&#x5730;&#x505A; epoll &#x64CD;&#x4F5C;&#xFF0C; &#x540C;&#x65F6;&#x5B83;&#x8FD8;&#x4F1A;&#x68C0;&#x6D4B;&#x6BCF;&#x4E2A; P &#x662F;&#x5426;&#x8FD0;&#x884C;&#x4E86;&#x8F83;&#x957F;&#x65F6;&#x95F4;&#x3002;&#x8BE5; M &#x65E0;&#x9700;&#x7ED1;&#x5B9A; P &#x5373;&#x53EF;&#x8FD0;&#x884C;&#xFF0C;&#x8BE5; M &#x5728;&#x6574;&#x4E2A; Go &#x7A0B;&#x5E8F;&#x7684;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#x81F3;&#x5173;&#x91CD;&#x8981;&#x3002; sysmon &#x6BCF; 20us~10ms &#x8FD0;&#x884C;&#x4E00;&#x6B21;&#xFF0C; sysmon &#x4E3B;&#x8981;&#x5B8C;&#x6210;&#x5982;&#x4E0B;&#x5DE5;&#x4F5C;&#xFF1A; &#x91CA;&#x653E;&#x95F2;&#x7F6E;&#x8D85;&#x8FC7; 5 &#x5206;&#x949F;&#x7684; span &#x7269;&#x7406;&#x5185;&#x5B58;&#xFF1B; &#x5982;&#x679C;&#x8D85;&#x8FC7; 2 &#x5206;&#x949F;&#x6CA1;&#x6709;&#x5783;&#x573E;&#x56DE;&#x6536;&#xFF0C;&#x5F3A;&#x5236;&#x6267;&#x884C;&#xFF1B; &#x5C06;&#x957F;&#x65F6;&#x95F4;&#x672A;&#x5904;&#x7406;&#x7684; netpoll &#x7ED3;&#x679C;&#x6DFB;&#x52A0;&#x5230;&#x4EFB;&#x52A1;&#x961F;&#x5217;&#xFF1B; &#x5411;&#x957F;&#x65F6;&#x95F4;&#x8FD0;&#x884C;&#x7684; G &#x4EFB;&#x52A1;&#x53D1;&#x51FA;&#x62A2;&#x5360;&#x8C03;&#x5EA6;&#xFF1B; &#x6536;&#x56DE;&#x56E0; syscall &#x957F;&#x65F6;&#x95F4;&#x963B;&#x585E;&#x7684;P&#xFF1B; channel &#x963B;&#x585E;&#x6216; network I/O &#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x8C03;&#x5EA6; &#x5982;&#x679C; G &#x88AB;&#x963B;&#x585E;&#x5728;&#x67D0;&#x4E2A; channel &#x64CD;&#x4F5C;&#x6216; network I/O &#x64CD;&#x4F5C;&#x4E0A;&#x65F6;&#xFF0C;G &#x4F1A;&#x88AB;&#x653E;&#x7F6E;&#x5230;&#x67D0;&#x4E2A; wait &#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x800C; M &#x4F1A;&#x5C1D;&#x8BD5;&#x8FD0;&#x884C;&#x4E0B;&#x4E00;&#x4E2A; runnable &#x7684; G&#xFF1B;&#x5982;&#x679C;&#x6B64;&#x65F6;&#x6CA1;&#x6709; runnable &#x7684; G &#x4F9B; M &#x8FD0;&#x884C;&#xFF0C;&#x90A3;&#x4E48; M &#x5C06;&#x89E3;&#x7ED1; P&#xFF0C;&#x5E76;&#x8FDB;&#x5165; sleep &#x72B6;&#x6001;&#x3002;&#x5F53; I/O available &#x6216; channel &#x64CD;&#x4F5C;&#x5B8C;&#x6210;&#xFF0C; &#x5728; wait &#x961F;&#x5217;&#x4E2D;&#x7684; G &#x4F1A;&#x88AB;&#x5524;&#x9192;&#xFF0C;&#x6807;&#x8BB0;&#x4E3A; runnable&#xFF0C;&#x653E;&#x5165;&#x5230;&#x67D0; P &#x7684;&#x961F;&#x5217;&#x4E2D;&#xFF0C;&#x7ED1;&#x5B9A;&#x4E00;&#x4E2A; M &#x7EE7;&#x7EED;&#x6267;&#x884C;&#x3002; system call &#x963B;&#x585E;&#x60C5;&#x51B5;&#x4E0B;&#x7684;&#x8C03;&#x5EA6; &#x5982;&#x679C; G &#x88AB;&#x963B;&#x585E;&#x5728;&#x67D0;&#x4E2A; system call &#x64CD;&#x4F5C;&#x4E0A;&#xFF0C;&#x90A3;&#x4E48;&#x4E0D;&#x5149; G &#x4F1A;&#x963B;&#x585E;&#xFF0C;&#x6267;&#x884C;&#x8BE5; G &#x7684; M &#x4E5F;&#x4F1A;&#x89E3;&#x7ED1; P(&#x5B9E;&#x8D28;&#x662F;&#x88AB; sysmon &#x62A2;&#x8D70;&#x4E86;)&#xFF0C; &#x4E0E; G &#x4E00;&#x8D77;&#x8FDB;&#x5165; sleep &#x72B6;&#x6001;&#x3002;&#x5982;&#x679C;&#x6B64;&#x65F6;&#x6709; idle &#x7684; M&#xFF0C;&#x5219; P &#x4E0E;&#x5176;&#x7ED1;&#x5B9A;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x5176;&#x4ED6; G&#xFF1B;&#x5982;&#x679C;&#x6CA1;&#x6709; idle M&#xFF0C;&#x4F46;&#x4ECD;&#x7136;&#x6709;&#x5176;&#x4ED6; G &#x8981;&#x53BB;&#x6267;&#x884C;&#xFF0C; &#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0; M&#x3002; &#x5F53;&#x963B;&#x585E;&#x5728; syscall &#x4E0A;&#x7684;G&#x5B8C;&#x6210; syscall &#x8C03;&#x7528;&#x540E;&#xFF0C;G &#x4F1A;&#x53BB;&#x5C1D;&#x8BD5;&#x83B7;&#x53D6;&#x4E00;&#x4E2A;&#x53EF;&#x7528;&#x7684; P&#xFF0C;&#x5982;&#x679C;&#x6CA1;&#x6709;&#x53EF;&#x7528;&#x7684; P&#xFF0C;&#x90A3;&#x4E48; G &#x4F1A;&#x88AB;&#x6807;&#x8BB0;&#x4E3A; runnable&#xFF0C; &#x4E4B;&#x524D;&#x7684;&#x90A3;&#x4E2A; sleep &#x7684; M &#x5C06;&#x518D;&#x6B21;&#x8FDB;&#x5165; sleep&#x3002;"},"concurrent/sync_lock.html":{"title":"同步和锁","path":"\\golang-learn\\concurrent\\sync_lock.html","body":"同步和锁 共享变量 无论任何时候，只要有两个以上 goroutine 并发访问同一变量，且至少其中的一个是写操作的时候就会发生数据竞争。 避免数据竞争的三种方式： 不去写变量。读取不可能出现数据竞争。 避免从多个 goroutine 访问变量，尽量把变量限定在了一个单独的 goroutine 中。( 不要使用共享数据来通信，使用通信 来共享数据 ) 互斥锁 同步锁 Go 语言包中的 sync 包提供了两种锁类型： sync.Mutex 和 sync.RWMutex ，前者是互斥锁，后者是读写锁。 互斥锁 使用 channel 实现互斥所 我们可以使用容量只有 1 的 channel 来保证最多只有一个 goroutine 在同一时刻访问一个共享变量： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var ( sema = make ( chan struct , 1 ) // a binary semaphore guarding balance balance int ) func Deposit (amount int )  sema - struct  // acquire lock balance = balance + amount -sema // release lock  func Balance () int  sema - struct  // acquire lock b := balance -sema // release lock return b  sync.Mutex 使用 sync.Mutex 互斥锁： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import \"sync\" var ( mu sync.Mutex // guards balance balance int ) func Deposit (amount int )  mu.Lock() balance = balance + amount mu.Unlock()  func Balance () int  mu.Lock() b := balance mu.Unlock() return b  mutex 会保护共享变量，当已经有 goroutine 获得这个锁，再有 goroutine 访问这个加锁的变量就会被阻塞， 直到持有这个锁的 goroutine unlock 这个锁。 我们可以 使用 defer 来 unlock 锁，保证在函数返回之后或者发生错误返回时一定会执行 unlock 。 读写锁 sync.RWMutex 如果有多个 goroutine 读取变量，那么是并发安全的，这个时候使用 sync.Mutex 加锁就没有必要。可以使 用 sync.RWMutex 读写锁（多读单写锁）。 读写锁是把对共享资源的“读操作”和“写操作”区别对待了。它可以对这两种操作施加不同程度的保护 。 一个读写锁中实际上包含了两个锁，即：读锁和写锁。 sync.RWMutex 类型中的 Lock 方法和 Unlock 方法分别用于对写锁进行 锁定和解锁，而它的 RLock 方法和 RUnlock 方法则分别用于对读锁进行锁定和解锁。 对于某个受到读写锁保护的共享资源，多个写操作不能同时进行，写操作和读操作也不能同时进行，但多个读操作却可以同时进行 。 1 2 3 4 5 6 7 var mu sync.RWMutex var balance int func Balance () int  mu.RLock() // readers lock defer mu.RUnlock() return balance  RLock 只能在共享变量没有任何写入操作时可用 。 为什么只读操作也需要加锁 ？ 1 2 3 4 5 6 7 8 9 var x, y int go func ()  x = 1 // A1 fmt.Print( \"y:\" , y, \" \" ) // A2 () go func ()  y = 1 // B1 fmt.Print( \"x:\" , x, \" \" ) // B2 () 上面的代码打印的结果可能是： 1 2 3 4 5 6 7 8 y:0 x:1 x:0 y:1 x:1 y:1 y:1 x:1 # 还可能是 x:0 y:0 y:0 x:0 为什么会有 x:0 y:0 这种结果，在一个 goroutine 中，语句的执行顺序可以保证，在声明的例子，可以保证 执行 x = 1 后打印 y: ，但是不能保证打印 y: 时，另一个 goroutine 中 y = 1 是否已经执行。 所以可能的话，将变量限定在 goroutine 内部；如果是多个 goroutine 都需要访问的变量，使用互斥条件来访问。 注意事项 不要重复锁定互斥锁； 对一个已经被锁定的互斥锁进行锁定，是会立即阻塞当前的 goroutine 的 。这个 goroutine 所执行的流程， 会一直停滞在调用该互斥锁的 Lock 方法的那行代码上。直到该互斥锁的 Unlock 方法被调用，并且这里的锁定操作成功完成，后续的代码 （也就是临界区中的代码）才会开始执行。这也正是互斥锁能够保护临界区的原因所在。 不要忘记解锁互斥锁，必要时使用 defer 语句；避免重复锁定。 不要对尚未锁定或者已解锁的互斥锁解锁； 解锁“读写锁中未被锁定的写锁”，会立即引发 panic ，对于其中的读锁也是如此，并且同 样是不可恢复的。 不要在多个函数之间直接传递互斥锁。一旦，你把一个互斥锁同时用在了多个地方，就必然会有更多的 goroutine 争用这把锁。 这不但会让你的程序变慢，还会大大增加死锁（ deadloc k）的可能性。 所谓的 死锁 ，指的就是当前程序中的主 goroutine ，以及我们启用的那些 goroutine 都已经被阻塞。这些 goroutine 可以被统 称为用户级的 goroutine 。这就相当于整个程序都已经停滞不前了。 Go 语言运行时系统是不允许这种情况出现的，只要它发现所有的用户级 goroutine 都处于等待状态，就会自行抛出一个带有如下 信息的 panic： fatal error: all goroutines are asleep - deadlock! 注意，这种由 Go 语言运行时系统自行抛出的 panic 都属于致命错误，都是无法被恢复的，调用 recover 函数对它们起不到任何作用。 也就是说，一旦产生死锁，程序必然崩溃 。 最简单、有效的方式就是让每一个互斥锁都只保护一个临界区或一组相关临界区 。 条件变量 sync.Cond 条件变量是基于互斥锁的，它必须有互斥锁的支撑才能发挥作用。条件变量并不是被用来保护临界区和共享资源的，它是用于协调想要访问共享 资源的那些线程的。 当共享资源的状态发生变化时，它可以被用来通知被互斥锁阻塞的线程 。 条件变量在这里的最大优势就是在效率方面的提升。当共享资源的状态不满足条件的时候，想操作它的线程再也不用循环往复地做检查了， 只要等待通知就好了。 条件变量怎样与互斥锁配合使用 条件变量的初始化离不开互斥锁，并且它的方法有的也是基于互斥锁的。 条件变量提供的方法有三个：等待通知（wait）、单发通知（signal）和广播通知（broadcast）。我们在利用条件变量等待通知的时候， 需要在它基于的那个互斥锁保护下进行。而在进行单发通知或广播通知的时候，却是恰恰相反的，也就是说，需要在对应的互斥锁解锁之后 再做这两种操作。 1 2 3 4 var mailbox uint8 var lock sync.RWMutex sendCond := sync.NewCond(&amp;lock) recvCond := sync.NewCond(lock.RLocker()) lock 是一个类型为 sync.RWMutex 的变量，是一个读写锁。基于这把锁，我还创建了两个代表条件变量的变量，名字分别 叫 sendCond 和 recvCond 。 sync.Cond 类型并不是开箱即用的。只能利用 sync.NewCond 函数创建它的指针值 。 lock 变量的 Lock 方法和 Unlock 方法分别用于对其中写锁的锁定和解锁，它们与 sendCond 变量的含义是对应的。 被视为对共享资源的写操作。 初始化 recvCond 这 个条件变量，我们需要的是 lock 变量中的读锁， sync.RWMutex 类型的 RLocker 方法可以实现这一需求。 lock.RLocker() ，在其内部会分别调用 lock 变量的 RLock 方法和 RUnlock 方法。 下面是一个例子： mailbox 是一个信箱，如果在放置的时候发现信箱里还有未被取走的情报，那就不再放置，而先返回。另一方面，如果你在获取的时候发现信 箱里没有情报，那也只能先回去了。 1 2 3 4 5 6 7 lock.Lock() for mailbox == 1  sendCond.Wait()  mailbox = 1 lock.Unlock() recvCond.Signal() 先调用 lock 变量的 Lock 方法。注意，这个 Lock 方法在这里意味的是：持有信箱上的锁，并且有打开信箱的权利， 而不是锁上这个锁。 检查 mailbox 变量的值是否等于 1，也就是说，要看看信箱里是不是还存有情报。如果还有情报，那么我就回家去等通知。 如果信箱里没有情报，那么我就把新情报放进去，关上信箱、锁上锁，然后离开。用代码表达出来就是 mailbox = 1 和 lock.Unlock() 。 然后发通知，“信箱里已经有新情报了”，我们调用 recvCond 的 Signal 方法就可以实现这一步骤。 另一方面，你现在是另一个 goroutine ，想要适时地从信箱中获取情报，然后通知我。 1 2 3 4 5 6 7 lock.RLock() for mailbox == 0  recvCond.Wait()  mailbox = 0 lock.RUnlock() sendCond.Signal() 事情在流程上其实基本一致，只不过每一步操作的对象是不同的。 为什么先要锁定条件变量基于的互斥锁，才能调用它的 Wait 方法？ Wait 方法主要做了四件事。 把调用它的 goroutine （也就是当前的 goroutine ）加入到当前条件变量的通知队列中。 解锁当前的条件变量基于的那个互斥锁。 让当前的 goroutine 处于等待状态，等到通知到来时再决定是否唤醒它。此时，这个 goroutine 就会阻塞在调用这 个 Wait 方法的那行代码上。 如果通知到来并且决定唤醒这个 goroutine ，那么就在唤醒它之后重新锁定当前条件变量基于的互斥锁。自此之后，当前 的 goroutine 就会继续执行后面的代码了。 因为条件变量的 Wait 方法在阻塞当前的 goroutine 之前会解锁它基于的互斥锁，所以在调用该 Wait 方法之前我们必须先 锁定那个互斥锁，否则在调用这个 Wait 方法时，就会引发一个不可恢复的 panic。 为什么条件变量的 Wait 方法要这么做呢？你可以想象一下，如果 Wait 方法在互斥锁已经锁定的情况下，阻塞了当前的 goroutine ， 那么又由谁来解锁呢？别的 goroutine 吗？ 先不说这违背了互斥锁的重要使用原则，即：成对的锁定和解锁，就算别的 goroutine 可以来解锁，那万一解锁重复了怎么办？ 由此引发的 panic 可是无法恢复的。 如果当前的 goroutine 无法解锁，别的 goroutine 也都不来解锁，那么又由谁来进入临界区，并改变共享资源的状态呢？只要共享资源 的状态不变，即使当前的 goroutine 因收到通知而被唤醒，也依然会再次执行这个 Wait 方法，并再次被阻塞。 所以说，如果条件变量的 Wait 方法不先解锁互斥锁的话，那么就只会造成两种后果：不是当前的程序因 panic 而崩溃，就是相关的 goroutine 全面阻塞。 为什么要用 for 语句来包裹调用其 Wait 方法的表达式，用 if 语句不行吗？ if 语句只会对共享资源的状态检查一次，而 for 语句却可以做多次检查，直到这个状态改变为止。 那为什么要做多次检查呢？ 为了保险起见。如果一个 goroutine 因收到通知而被唤醒，但却发现共享资源的状态，依然不符合它的要求，那么就应该再次调用 条件变量的 Wait 方法，并继续等待下次通知的到来。 这种情况是很有可能发生的。 条件变量的 Signal 方法和 Broadcast 方法有哪些异同 条件变量的 Signal 方法和 Broadcast 方法都是被用来发送通知的，不同的是，前者的通知只会唤醒一个因此而等待的 goroutine ， 而后者的通知却会唤醒所有为此等待的 goroutine 。 条件变量的 Wait 方法总会把当前的 goroutine 添加到通知队列的队尾，而它的 Signal 方法总会从通知队列的队首开始查找可被 唤醒的 goroutine 。所以，因 Signal 方法的通知而被唤醒的 goroutine 一般都是最早等待的那一个。 原子操作 Go 语言的原子操作当然是基于 CPU 和操作系统的，所以它也只针对少数数据类型的值提供了原子操作函数。这些函数都存在于标准库代 码包 sync/atomic 中。 sync/atomic 包中的函数可以做的原子操作有：加法（add）、比较并交换（compare and swap，简称 CAS）、加载（load）、 存储（store）和交换（swap）。 这些函数针对的数据类型并不多。对这些类型中的每一个， sync/atomic 包都会有一套函数给予支持。这些数据类型有： int32 、 int64 、 uint32 、 uint64 、 uintptr ，以及 unsafe 包中的 Pointer 。不过，针对 unsafe.Pointer 类型，该包并未提供进行原子加法操作的函数。 sync/atomic 包还提供了一个名为 Value 的类型，它可以被用来存储任意类型的值。 atomic.AddInt32 函数的第一个参数，为什么不是 int32 而是 *int32 呢？ 因为 原子操作函数需要的是被操作值的指针，而不是这个值本身 ；被传入函数的参数值都会被复制，像这种基本类型的值一旦被传入函数， 就已经与函数外的那个值毫无关系了。 所以，传入值本身没有任何意义。 unsafe.Pointer 类型虽然是指针类型，但是那些原子操作函数要操作的是这个指针值，而不是它指向 的那个值，所以需要的仍然是指向这个指针值的指针。 只要原子操作函数拿到了被操作值的指针，就可以定位到存储该值的内存地址。只有这样，它们才能够通过底层的指令，准确地操作这个内 存地址上的数据。 比较并交换操作与交换操作相比有什么不同 比较并交换操作即 CAS 操作 ，是有条件的交换操作， 只有在条件满足的情况下才会进行值的交换 。 所谓的交换指的是，把新值赋给变量，并返回变量的旧值 。 CAS 操作用途要更广泛一些。例如，我们将它与 for 语句联用就可以实现一种简易的自旋锁（spinlock）。 1 2 3 4 5 6 7 for  if atomic.CompareAndSwapInt32(&amp;num2, 10 , 0 )  fmt.Println( \"The second number has gone to zero.\" ) break  time.Sleep(time.Millisecond * 500 )  在 for 语句中的 CAS 操作可以不停地检查某个需要满足的条件，一旦条件满足就退出 for 循环。这就相当于，只要条件未被满足， 当前的流程就会被一直“阻塞”在这里。 这在效果上与互斥锁有些类似。不过，它们的适用场景是不同的。我们在使用互斥锁的时候，总是假设共享资源的状态会被其他 的 goroutine 频繁地改变。 而 for 语句加 CAS 操作的假设往往是：共享资源状态的改变并不频繁，或者，它的状态总会变成期望的那样。这是一种更加乐观， 或者说更加宽松的做法。 假设我已经保证了对一个变量的写操作都是原子操作，比如：加或减、存储、交换等等，那我对它进行读操作的时候，还有必要使用原 子操作吗 ？ 很有必要。其中的道理你可以对照一下读写锁。为什么在读写锁保护下的写操作和读操作之间是互斥的？这是为了防止读操作读到没有 被修改完的值，对吗？ 如果写操作还没有进行完，读操作就来读了，那么就只能读到仅修改了一部分的值。这显然破坏了值的完整性，读出来的值也是完全错误的。 所以，一旦你决定了要对一个共享资源进行保护，那就要做到完全的保护。不完全的保护基本上与不保护没有什么区别。 sync/atomic.Value 此类型的值相当于一个容器，可以被用来“原子地”存储和加载任意的值。开箱即用。 它只有两个指针方法—— Store 和 Load 。不过，虽然简单，但还是有一些值得注意的地方的。 一旦 atomic.Value 类型的值（以下简称原子值）被真正使用，它就不应该再被复制了。只要用它来存储值了，就相当于开始真正使用了。 atomic.Value 类型属于结构体类型，而结构体类型属于值类型。所以，复制该类型的值会产生一个完全分离的新值。这个新值相当于被 复制的那个值的一个快照。之后，不论后者存储的值怎样改变，都不会影响到前者。 不能用原子值存储 nil 。 我们向原子值存储的第一个值，决定了它今后能且只能存储哪一个类型的值。 尽量不要向原子值中存储引用类型的值。因为这很容易造成安全漏洞。 1 2 3 4 var box6 atomic.Value v6 := [] int  1 , 2 , 3  box6.Store(v6) v6[ 1 ] = 4 // 注意，此处的操作不是并发安全的！ 切片类型属于引用类型。所以，我在外面改动这个切片值，就等于修改了 box6 中存储的那个值。这相当于绕过了原子值而进行了非并发 安全的操作。怎样修补： 1 2 3 4 5 6 7 store := func (v [] int )  replica := make ([] int , len (v)) copy (replica, v) box6.Store(replica)  store(v6) v6[ 2 ] = 5 // 此处的操作是安全的。 先为切片值 v6 创建了一个完全的副本。这个副本涉及的数据已经与原值毫不相干了。然后，我再把这个副本存入 box6 。如此一来， 无论我再对 v6 的值做怎样的修改，都不会破坏 box6 提供的安全保护。 sync.WaitGroup 在一些场合下里，我们使用通道的方式看起来都似乎有些蹩脚。比如：声明一个通道，使它的容量与我们手动启用的 goroutine 的数量相同。 之后利用这个通道，让主 goroutine 等待其他 goroutine 的运行结束。更具体地说就是：让其他的 goroutine 在运行结束之前， 都向这个通道发送一个元素值，并且，让主 goroutine 在最后从这个通道中接收元素值，接收的次数需要与其他的 goroutine 的数量相同。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 func coordinateWithChan ()  sign := make ( chan struct , 2 ) num := int32 ( 0 ) fmt.Printf( \"The number: %d [with chan struct]\\n\" , num) max := int32 ( 10 ) go addNum(&amp;num, 1 , max, func ()  sign - struct  ) go addNum(&amp;num, 2 , max, func ()  sign - struct  ) -sign -sign  coordinateWithChan 函数中最后的那两行代码了吗？重复的两个接收表达式 -sign ，很丑陋。 我们可以选用另外一个同步工具，即： sync 包的 WaitGroup 类型。它比通道更加适合实现这种一对多的 goroutine 协作流程。 sync.WaitGroup 类型（以下简称 WaitGroup 类型）是开箱即用的，也是并发安全的。 WaitGroup 类型拥有三个指针方法： Add 、 Done 和 Wait 。 你可以想象该类型中有一个计数器，它的默认值是 0 。我们可 以通过调用该类型值的 Add 方法来增加，或者减少这个计数器的值 。 一般情况下，我会用这个方法来记录需要等待的 goroutine 的数量。相对应的，这个类型的 Done 方法，用于对其所属值中计数器 的值进行减一操作 。我们可以在需要等待的 goroutine 中，通过 defer 语句调用它。 而 此类型的 Wait 方法的功能是，阻塞当前的 goroutine ，直到其所属值中的计数器归零 。 改造版本： 1 2 3 4 5 6 7 8 9 10 func coordinateWithWaitGroup ()  \t var wg sync.WaitGroup \twg.Add( 2 ) \tnum := int32 ( 0 ) \tfmt.Printf( \"The number: %d [with sync.WaitGroup]\\n\" , num) \tmax := int32 ( 10 ) \t go addNum(&amp;num, 3 , max, wg.Done) \t go addNum(&amp;num, 4 , max, wg.Done) \twg.Wait()  尽量不要在 go 函数内部调用 Add ，以免 Add 还未执行， Wait 已经退出 ： 1 2 3 4 5 6 7 8 var wg sync.WaitGroup go func ()  \twg.Add( 1 ) \tfmt.Println( \"test\" ) () wg.Wait() fmt.Println( \"exit.\" ) sync.WaitGroup 类型值中计数器的值可以小于 0 吗 不可以。 小于 0，会引发一个 panic 。 WaitGroup 值是可以被复用的，但需要保证其计数周期的完整性 。这里的计数周期指的是这样一个过程：该值中的计数器值由 0 变为 了某个正整数，而后又经过一系列的变化，最终由某个正整数又变回了 0。 如果在一个此类值的 Wait 方法被执行期间，跨越了两个计数周期，那么就会引发一个 panic。 使用注意 不要把增加其计数器值的操作和调用其 Wait 方法的代码，放在不同的 goroutine 中执行。换句话说，要 杜绝对同一个 WaitGroup 值的两种操作的并发执行 。 sync.Once 与 sync.WaitGroup 类型一样， sync.Once 类型（以下简称 Once 类型）也属于结构体类型，同样也是开箱即用和并发安全的。 由于这个类型中包含了一个 sync.Mutex 类型的字段，所以，复制该类型的值也会导致功能的失效。 1 2 3 4 5 6 7 var loadIconsOnce sync.Once var icons map [ string ]image.Image // Concurrency-safe. func Icon (name string ) image . Image  loadIconsOnce.Do(loadIcons) return icons[name]  Once 类型的 Do 方法只接受一个参数，这个参数的类型必须是 func() ，即：无参数声明和结果声明的函数。该方法的功能并 不是对每一种参数函数都只执行一次，而是只 执行“首次被调用时传入的”那个函数，并且之后不会再执行任何参数函数 。 所以， 如果你有多个只需要执行一次的函数，那么就应该为它们中的每一个都分配一个 sync.Once 类型的值 （以下简称 Once 值）。 Once 类型中还有一个名叫 done 的 uint32 类型的字段。 它的作用是记录其所属值的 Do 方法被调用的次数。不过，该字段的值 只可能是 0 或者 1。一旦 Do 方法的首次调用完成，它的值就会从 0 变为 1 。 既然 done 字段的值不是 0 就是 1，那为什么还要使用需要四个字节的 uint32 类型呢 ？ 原因很简单，因为对它的操作必须是“原子”的。 Do 方法在一开始就会通过调用 atomic.LoadUint32 函数来获取该字段的值，并且一旦 发现该值为 1 就会直接返回。这也初步保证了“ Do 方法，只会执行首次被调用时传入的函数”。 Do 方法在功能方面的两个特点 由于 Do 方法只会在参数函数执行结束之后把 done 字段的值变为 1，因此，如果参数函数的执行需要很长时间或者根本就不会结束 （比如执行一些守护任务），那么就有可能会导致相关 goroutine 的同时阻塞 Do 方法在参数函数执行结束后，对 done 字段的赋值用的是原子操作，并且，这一操作是被挂在 defer 语句中的。因此，不论参数 函数的执行会以怎样的方式结束， done 字段的值都会变为 1。 context.Context 类型 使用 WaitGroup 值的时候，我们最好用 先统一 Add ，再并发 Done ，最后 Wait 的标准模式来构建协作流程。如果在调用 该值的 Wait 方法的同时，为了增大其计数器的值，而并发地调用该值的 Add 方法，那么就很可能会引发 panic。 但是 如果，我们不能在一开始就确定执行子任务的 goroutine 的数量，那么使用 WaitGroup 值来协调它们和分发子任 务的 goroutine ，就是有一定风险的 。一个解决方案是： 分批地启用执行子任务的 goroutine 。 只要我们在严格遵循上述规则的前提下，分批地启用执行子任务的 goroutine ，就肯定不会有问题。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 func coordinateWithWaitGroup ()  total := 12 stride := 3 var num int32 fmt.Printf( \"The number: %d [with sync.WaitGroup]\\n\" , num) var wg sync.WaitGroup for i := 1 ; i = total; i = i + stride  wg.Add(stride) for j := 0 ; j  stride; j++  go addNum(&amp;num, i+j, wg.Done)  wg.Wait()  fmt.Println( \"End.\" )  使用 context 包中的程序实体，实现一对多的 goroutine 协作流程 用 context 包中的函数和 Context 类型作为实现工具，实现 coordinateWithContext 的函数。这个函数应该具有上 面 coordinateWithWaitGroup 函数相同的功能。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 func coordinateWithContext ()  \ttotal := 12 \t var num int32 \tfmt.Printf( \"The number: %d [with context.Context]\\n\" , num) \tcxt, cancelFunc := context.WithCancel(context.Background()) \t for i := 1 ; i = total; i++  \t\t go addNum(&amp;num, i, func ()  \t\t\t if atomic.LoadInt32(&amp;num) == int32 (total)  \t\t\t\tcancelFunc() \t\t\t \t\t) \t \t-cxt.Done() \tfmt.Println( \"End.\" )  先后调用了 context.Background 函数和 context.WithCancel 函数，并得到了一个可撤销的 context.Context 类型的值 （由变量 cxt 代表），以及一个 context.CancelFunc 类型的撤销函数（由变量 cancelFunc 代表）。 注意我给予 addNum 函数的最后一个参数值。它是一个匿名函数，其中只包含了一条 if 语句。这条 if 语句会 原子地 加载 num 变量的值，并判断它是否等于 total 变量的值。 如果两个值相等，那么就调用 cancelFunc 函数。其含义是，如果所有的 addNum 函数都执行完毕，那么就立即通知分发子任务 的 goroutine 。 这里分发子任务的 goroutine ，即为执行 coordinateWithContext 函数的 goroutine 。它在执行完 for 语句后，会 立即调用 cxt 变量的 Done 函数，并试图针对该函数返回的通道，进行接收操作。 一旦 cancelFunc 函数被调用，针对该通道的接收操作就会马上结束，所以，这样做就可以实现“等待所有的 addNum 函数都执 行完毕”的功能。 context.Context 类型 Context 类型的值（以下简称 Context 值）是可以繁衍的，这意味着我们可以通过一个 Context 值产生出任意个子值。这些子值 可以携带其父值的属性和数据，也可以响应通过其父值传达的信号。 正因为如此，所有的 Context 值共同构成了一颗代表了上下文全貌的树形结构。这棵树的 树根（或者称上下文根节点）是一个已经 在 context 包中预定义好的 Context 值 ，它是 全局唯一 的。通过调用 context.Background 函数，我们就可以获取到 它（在 coordinateWithContext 函数中就是这么做的）。 注意一下，这个 上下文根节点仅仅是一个最基本的支点，它不提供任何额外的功能 。也就是说，它既不可以被撤销（ cancel ）， 也不能携带任何数据。 context 包中还包含了 四个用于繁衍 Context 值的函数，即： WithCancel 、 WithDeadline 、 WithTimeout 和 WithValue 。 这些函数的第一个参数的类型都是 context.Context ，而名称都为 parent 。顾名思义， 这个位置上的参数对应的都是它们将会产生 的 Context 值的父值 。 WithCancel 函数用于产生一个可撤销的 parent 的子值 。 在 coordinateWithContext 函数中，通过调用该函数，获得了一个衍生自上下文根节点的 Context 值，和一个用于触发撤销信号的函数。 WithDeadline 函数和 WithTimeout 函数则都可以被用来产生一个会 定时撤销 的 parent 的子值。至于 WithValue 函数， 我们可以通过调用它，产生一个会携带额外数据的 parent 的子值。 “可撤销的”在 context 包中代表着什么？“撤销”一个 Context 值又意味着什么？ 这需要从 Context 类型的声明讲起。这个接口中有两个方法与“撤销”息息相关。 Done 方法会返回一个元素类型为 struct{} 的接 收通道。不过，这个接收通道的用途并不是传递元素值，而是 让调用方去感知“撤销”当前Context值的那个信号 。 一旦当前的 Context 值被撤销，这里的接收通道就会被立即关闭。我们都知道，对于一个未包含任何元素值的通道来说，它的关闭会 使任何针对它的接收操作立即结束。 正因为如此，在 coordinateWithContext 函数中，基于调用表达式 cxt.Done() 的接收操作，才能够起到感知撤销信号的作用。 撤销信号是如何在上下文树中传播的 context 包的 WithCancel 函数在被调用后会产生两个结果值。第一个结果值就是那个可撤销的 Context 值，而第二个结果值则是 用于触发撤销信号的函数。 在撤销函数被调用之后，对应的 Context 值会先关闭它内部的接收通道，也就是它的 Done 方法会返回的那个通道。 然后，它会向它的所有子值（或者说子节点）传达撤销信号。这些子值会如法炮制，把撤销信号继续传播下去。最后，这个 Context 值会 断开它与其父值之间的关联。 通过调用 context.WithValue 函数得到的 Context 值是不可撤销的 。 怎样通过 Context 值携带数据 WithValue 函数在产生新的 Context 值（以下简称含数据的 Context 值）的时候需要三个参数，即：父值、键和值 。 “字典对于键的约束”类似，这里 键的类型必须是可判等 的。 原因很简单，当我们从中获取数据的时候，它需要根据给定的键来查找对应的值。不过，这种 Context 值并不是用字典来存储键和值的， 后两者只是被简单地存储在前者的相应字段中而已。 临时对象池 sync.Pool Go 语言标准库中最重要的那几个同步工具，这包括: 互斥锁 读写锁 条件变量 原子操作 sync/atomic.Value sync.Once sync.WaitGroup context.Context Go 语言标准库中的还有另一个同步工具： sync.Pool 。 sync.Pool 类型可以被称为临时对象池，它的值可以被用来存储临时的对象。与 Go 语言的很多同步工具一样， sync.Pool 类型也属 于结构体类型，它的值在被真正使用之后，就不应该再被复制了。 临时对象 的意思是：不需要持久使用的某一类值。这类值对于程序来说可有可无，但如果有的话会明显更好。它们的创建和销毁可以在 任何时候发生，并且完全不会影响到程序的功能。 我们可以把临时对象池当作针对某种数据的缓存来用 。 sync.Pool 类型只有两个方法—— Put 和 Get 。前者用于在当前的池中存放临时对象，它接受一个 interface{} 类型的参数； 而后者则被用于从当前的池中获取临时对象，它会返回一个 interface{} 类型的值。 更具体地说， 这个类型的 Get 方法可能会从当前的池中删除掉任何一个值，然后把这个值作为结果返回。如果此时当前的池中没有任何值， 那么这个方法就会使用当前池的 New 字段创建一个新值，并直接将其返回 。 sync.Pool 类型的 New 字段代表着创建临时对象的函数。它的类型是没有参数但有唯一结果的函数类型，即： func() interface{} 。 初始化这个池的时候最好给定它 。 这个函数是 Get 方法最后的临时对象获取手段。 Get 方法如果到了最后，仍然无法获取到一个值，那么就会调用该函数。该函数的结 值并不会被存入当前的临时对象池中，而是直接返回给 Get 方法的调用方。 临时对象池中存储的每一个值都应该是独立的、平等的和可重用的 。 sync.Pool 的定位不是做类似连接池的东西，它的用途仅仅是增加 对象重用的几率，减少 gc 的负担。因为 gc 带来了编程的方便但同时也增加了运行时开销，使用不当甚至会严重影响程序的性能。因此性能 要求高的场景不能任意产生太多的垃圾。如何解决呢？那就是要重用对象了。 一个比较好的例子是 fmt 包， fmt 包总是需要使用一些 []byte 之类的对象，golang 建立了一个临时对象池，存放着这些对象， 如果需要使用一个 []byte ，就去 Pool 里面拿，如果拿不到就分配一份。这比起不停生成新的 []byte ，用完了再等待 gc 回收 来要高效得多。 sync.Pool 缓存对象的期限是很诡异的，先看一下 src/pkg/sync/pool.go 里面的一段实现代码： 1 2 3 func init ()  runtime_registerPoolCleanup(poolCleanup)  可以看到 pool 包在 init 的时候注册了一个 poolCleanup 函数，它会清除所有的 pool 里面的所有缓存的对象，该函数注册进去 之后会在每次 gc 之前都会调用，因此 sync.Pool 缓存的期限只是两次gc之间这段时间 。 sync.Map Go 语言自带的字典类型 map 并不是并发安全的。换句话说，在同一时间段内，让不同 goroutine 中的代码，对同一个字典进行读写操 作是不安全的。 Go 语言官方终于在 2017 年发布的 Go 1.9 中正式加入了并发安全的字典类型 sync.Map 。 使用 sync.Map 可以显著地减少锁的争用。 sync.Map 本身虽然也用到了锁，但是，它其实在尽可能地避免使用锁。 使用锁就意味着要把一些并发的操作强制串行化。这往往会降低程序的性能，尤其是在计算机拥有多个 CPU 核心的情况下 。 由于 并发安全字典内部使用的存储介质正是原生字典，又因为它使用的原生字典键类型也是可以包罗万象的 interface{} ，所以， 我们绝对不能带着任何实际类型为函数类型、字典类型或切片类型的键值去操作并发安全字典 。 因为 这些键值的实际类型只有在程序运行期间才能够确定，所以 Go 语言编译器是无法在编译期对它们进行检查的，不正确的键值实际类 型肯定会引发 panic 。 因此，我们在这里首先要做的一件事就是：一定不要违反上述规则。我们应该在每次操作并发安全字典的时候，都去显式地检查键值的实际 类型。无论是存、取还是删，都应该如此 。 更好的做法是，把针对同一个并发安全字典的这几种操作都集中起来，然后统一地编写检查代码。除此之外，把并发安全字典封装在一 个结构体类型中，往往是一个很好的选择 。如果你实在拿不准，那么可以先通过调用 reflect.TypeOf 函数得到一个键值对应的反射类 型值（即： reflect.Type 类型的值），然后再调用这个值的 Comparable 方法，得到确切的判断结果。 并发安全字典如何做到尽量避免使用锁 sync.Map 类型在内部使用了 大量的原子操作来存取键和值，并使用了两个原生的 map 作为存储介质 。 其中一个原生 map 被存在了 sync.Map 的 read 字段中，该字段是 sync/atomic.Value 类型的。简称它为 只读字典 。 只读字典虽然不会增减其中的键，但却允许变更其中的键所对应的值 。所以，它并不是传统意义上的快照，它的只读特性只是对于其中键 的集合而言的。 由 read 字段的类型可知， sync.Map 在替换只读字典的时候根本用不着锁。另外，这个只读字典在存储键值对的时候，还在值之上 封装了一层。 它先把值转换为了 unsafe.Pointer 类型的值，然后再把后者封装，并储存在其中的原生字典中。如此一来，在变更某个键所对应的值 的时候，就也可以使用原子操作了。 sync.Map 中的另一个原生字典由它的 dirty 字段代表。它存储键值对的方式与 read 字段中的原生字典一致，它的键类型 也是 interface{} ，并且同样是把值先做转换和封装后再进行储存的。称为 脏字典 。 脏字典和只读字典如果都存有同一个键值对，那么这里的两个键指的肯定是同一个基本值，对于两个值来说也是如此。正如前文所述， 这两个字典在存储键和值的时候都只会存入它们的某个指针，而不是基本值。 sync.Map 在查找指定的键所对应的值的时候，总会先去只读字典中寻找，并不需要锁定互斥锁。只有当确定 只读字典中没有，但脏 字典中可能会有这个键 的时候，它才会在锁的保护下去访问脏字典。 相对应的， sync.Map 在存储键值对的时候，只要只读字典中已存有这个键，并且该键值对未被标记为“已删除”，就会把新值存到里面并 直接返回，这种情况下也不需要用到锁。 否则，它才会在锁的保护下把键值对存储到脏字典中。这个时候，该键值对的“已删除”标记会被抹去。 只有当一个键值对应该被删除，但却仍然存在于只读字典中的时候，才会被用标记为“已删除”的方式进行逻辑删除，而不会直接被物理删除。 这种情况会在重建脏字典以后的一段时间内出现。不过，过不了多久，它们就会被真正删除掉。在查找和遍历键值对的时候，已被逻 辑删除的键值对永远会被无视。 最后， sync.Map 会把该键值对中指向值的那个指针置为 nil ，这是另一种逻辑删除的方式。 除此之外，还有一个细节需要注意，只读字典和脏字典之间是会互相转换的。在脏字典中查找键值对次数足够多的时候， sync.Map 会把 脏字典直接作为只读字典，保存在它的 read 字段中，然后把代表脏字典的 dirty 字段的值置为 nil 。 在这之后，一旦再有新的键值对存入，它就会依据只读字典去重建脏字典。这个时候，它会把只读字典中已被逻辑删除的键值对过滤掉。 理所当然，这些转换操作肯定都需要在锁的保护下进行。 sync.Map 的只读字典和脏字典中的键值对集合并不是实时同步的，它们在某些时间段内可能会有不同 。 可以看出，在读操作有很多但写操作却很少的情况下，并发安全字典的性能往往会更好。在几个写操作当中，新增键值对的操作对并发安 全字典的性能影响是最大的，其次是删除操作，最后才是修改操作。 如果被操作的键值对已经存在于 sync.Map 的只读字典中，并且没有被逻辑删除，那么修改它并不会使用到锁，对其性能的影响就会很小。 竞争检查器 在 go build ， go run 或者 go test 命令后面加上 -race ，就会使编译器创建一个你的应用的“修改”版。 会记录下每一个读或者写共享变量的 goroutine 的身份信息。记录下所有的同步事件，比如 go 语句， channel 操作， 以及对 (*sync.Mutex).Lock ， (*sync.WaitGroup).Wait 等等的调用。 由于需要额外的记录，因此构建时加了竞争检测的程序跑起来会慢一些，且需要更大的内存，即使是这样，这些代价对于很多生产环境的 工作来说还是可以接受的。"},"concurrent/sync_lock.html#同步和锁":{"title":"&#x540C;&#x6B65;&#x548C;&#x9501;","path":"\\golang-learn\\concurrent\\sync_lock.html#同步和锁","body":""},"concurrent/sync_lock.html#共享变量":{"title":"&#x5171;&#x4EAB;&#x53D8;&#x91CF;","path":"\\golang-learn\\concurrent\\sync_lock.html#共享变量","body":"&#x65E0;&#x8BBA;&#x4EFB;&#x4F55;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x8981;&#x6709;&#x4E24;&#x4E2A;&#x4EE5;&#x4E0A; goroutine &#x5E76;&#x53D1;&#x8BBF;&#x95EE;&#x540C;&#x4E00;&#x53D8;&#x91CF;&#xFF0C;&#x4E14;&#x81F3;&#x5C11;&#x5176;&#x4E2D;&#x7684;&#x4E00;&#x4E2A;&#x662F;&#x5199;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#x5C31;&#x4F1A;&#x53D1;&#x751F;&#x6570;&#x636E;&#x7ADE;&#x4E89;&#x3002; &#x907F;&#x514D;&#x6570;&#x636E;&#x7ADE;&#x4E89;&#x7684;&#x4E09;&#x79CD;&#x65B9;&#x5F0F;&#xFF1A; &#x4E0D;&#x53BB;&#x5199;&#x53D8;&#x91CF;&#x3002;&#x8BFB;&#x53D6;&#x4E0D;&#x53EF;&#x80FD;&#x51FA;&#x73B0;&#x6570;&#x636E;&#x7ADE;&#x4E89;&#x3002; &#x907F;&#x514D;&#x4ECE;&#x591A;&#x4E2A; goroutine &#x8BBF;&#x95EE;&#x53D8;&#x91CF;&#xFF0C;&#x5C3D;&#x91CF;&#x628A;&#x53D8;&#x91CF;&#x9650;&#x5B9A;&#x5728;&#x4E86;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684; goroutine &#x4E2D;&#x3002;( &#x4E0D;&#x8981;&#x4F7F;&#x7528;&#x5171;&#x4EAB;&#x6570;&#x636E;&#x6765;&#x901A;&#x4FE1;&#xFF0C;&#x4F7F;&#x7528;&#x901A;&#x4FE1; &#x6765;&#x5171;&#x4EAB;&#x6570;&#x636E; ) &#x4E92;&#x65A5;&#x9501;"},"concurrent/sync_lock.html#同步锁":{"title":"&#x540C;&#x6B65;&#x9501;","path":"\\golang-learn\\concurrent\\sync_lock.html#同步锁","body":"Go &#x8BED;&#x8A00;&#x5305;&#x4E2D;&#x7684; sync &#x5305;&#x63D0;&#x4F9B;&#x4E86;&#x4E24;&#x79CD;&#x9501;&#x7C7B;&#x578B;&#xFF1A; sync.Mutex &#x548C; sync.RWMutex &#xFF0C;&#x524D;&#x8005;&#x662F;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x540E;&#x8005;&#x662F;&#x8BFB;&#x5199;&#x9501;&#x3002; &#x4E92;&#x65A5;&#x9501; &#x4F7F;&#x7528; channel &#x5B9E;&#x73B0;&#x4E92;&#x65A5;&#x6240; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5BB9;&#x91CF;&#x53EA;&#x6709; 1 &#x7684; channel &#x6765;&#x4FDD;&#x8BC1;&#x6700;&#x591A;&#x53EA;&#x6709;&#x4E00;&#x4E2A; goroutine &#x5728;&#x540C;&#x4E00;&#x65F6;&#x523B;&#x8BBF;&#x95EE;&#x4E00;&#x4E2A;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 var ( sema = make ( chan struct {}, 1 ) // a binary semaphore guarding balance balance int ) func Deposit (amount int ) { sema - struct {}{} // acquire lock balance = balance + amount -sema // release lock } func Balance () int { sema - struct {}{} // acquire lock b := balance -sema // release lock return b } sync.Mutex &#x4F7F;&#x7528; sync.Mutex &#x4E92;&#x65A5;&#x9501;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 import sync var ( mu sync.Mutex // guards balance balance int ) func Deposit (amount int ) { mu.Lock() balance = balance + amount mu.Unlock() } func Balance () int { mu.Lock() b := balance mu.Unlock() return b } mutex &#x4F1A;&#x4FDD;&#x62A4;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#xFF0C;&#x5F53;&#x5DF2;&#x7ECF;&#x6709; goroutine &#x83B7;&#x5F97;&#x8FD9;&#x4E2A;&#x9501;&#xFF0C;&#x518D;&#x6709; goroutine &#x8BBF;&#x95EE;&#x8FD9;&#x4E2A;&#x52A0;&#x9501;&#x7684;&#x53D8;&#x91CF;&#x5C31;&#x4F1A;&#x88AB;&#x963B;&#x585E;&#xFF0C; &#x76F4;&#x5230;&#x6301;&#x6709;&#x8FD9;&#x4E2A;&#x9501;&#x7684; goroutine unlock &#x8FD9;&#x4E2A;&#x9501;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5; &#x4F7F;&#x7528; defer &#x6765; unlock &#x9501;&#xFF0C;&#x4FDD;&#x8BC1;&#x5728;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x4E4B;&#x540E;&#x6216;&#x8005;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#x8FD4;&#x56DE;&#x65F6;&#x4E00;&#x5B9A;&#x4F1A;&#x6267;&#x884C; unlock &#x3002; &#x8BFB;&#x5199;&#x9501; sync.RWMutex &#x5982;&#x679C;&#x6709;&#x591A;&#x4E2A; goroutine &#x8BFB;&#x53D6;&#x53D8;&#x91CF;&#xFF0C;&#x90A3;&#x4E48;&#x662F;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x4F7F;&#x7528; sync.Mutex &#x52A0;&#x9501;&#x5C31;&#x6CA1;&#x6709;&#x5FC5;&#x8981;&#x3002;&#x53EF;&#x4EE5;&#x4F7F; &#x7528; sync.RWMutex &#x8BFB;&#x5199;&#x9501;&#xFF08;&#x591A;&#x8BFB;&#x5355;&#x5199;&#x9501;&#xFF09;&#x3002; &#x8BFB;&#x5199;&#x9501;&#x662F;&#x628A;&#x5BF9;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x201C;&#x8BFB;&#x64CD;&#x4F5C;&#x201D;&#x548C;&#x201C;&#x5199;&#x64CD;&#x4F5C;&#x201D;&#x533A;&#x522B;&#x5BF9;&#x5F85;&#x4E86;&#x3002;&#x5B83;&#x53EF;&#x4EE5;&#x5BF9;&#x8FD9;&#x4E24;&#x79CD;&#x64CD;&#x4F5C;&#x65BD;&#x52A0;&#x4E0D;&#x540C;&#x7A0B;&#x5EA6;&#x7684;&#x4FDD;&#x62A4; &#x3002; &#x4E00;&#x4E2A;&#x8BFB;&#x5199;&#x9501;&#x4E2D;&#x5B9E;&#x9645;&#x4E0A;&#x5305;&#x542B;&#x4E86;&#x4E24;&#x4E2A;&#x9501;&#xFF0C;&#x5373;&#xFF1A;&#x8BFB;&#x9501;&#x548C;&#x5199;&#x9501;&#x3002; sync.RWMutex &#x7C7B;&#x578B;&#x4E2D;&#x7684; Lock &#x65B9;&#x6CD5;&#x548C; Unlock &#x65B9;&#x6CD5;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5BF9;&#x5199;&#x9501;&#x8FDB;&#x884C; &#x9501;&#x5B9A;&#x548C;&#x89E3;&#x9501;&#xFF0C;&#x800C;&#x5B83;&#x7684; RLock &#x65B9;&#x6CD5;&#x548C; RUnlock &#x65B9;&#x6CD5;&#x5219;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5BF9;&#x8BFB;&#x9501;&#x8FDB;&#x884C;&#x9501;&#x5B9A;&#x548C;&#x89E3;&#x9501;&#x3002; &#x5BF9;&#x4E8E;&#x67D0;&#x4E2A;&#x53D7;&#x5230;&#x8BFB;&#x5199;&#x9501;&#x4FDD;&#x62A4;&#x7684;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#xFF0C;&#x591A;&#x4E2A;&#x5199;&#x64CD;&#x4F5C;&#x4E0D;&#x80FD;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#xFF0C;&#x5199;&#x64CD;&#x4F5C;&#x548C;&#x8BFB;&#x64CD;&#x4F5C;&#x4E5F;&#x4E0D;&#x80FD;&#x540C;&#x65F6;&#x8FDB;&#x884C;&#xFF0C;&#x4F46;&#x591A;&#x4E2A;&#x8BFB;&#x64CD;&#x4F5C;&#x5374;&#x53EF;&#x4EE5;&#x540C;&#x65F6;&#x8FDB;&#x884C; &#x3002; 1 2 3 4 5 6 7 var mu sync.RWMutex var balance int func Balance () int { mu.RLock() // readers lock defer mu.RUnlock() return balance } RLock &#x53EA;&#x80FD;&#x5728;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x5199;&#x5165;&#x64CD;&#x4F5C;&#x65F6;&#x53EF;&#x7528; &#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x53EA;&#x8BFB;&#x64CD;&#x4F5C;&#x4E5F;&#x9700;&#x8981;&#x52A0;&#x9501; &#xFF1F; 1 2 3 4 5 6 7 8 9 var x, y int go func () { x = 1 // A1 fmt.Print( y: , y,   ) // A2 }() go func () { y = 1 // B1 fmt.Print( x: , x,   ) // B2 }() &#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x6253;&#x5370;&#x7684;&#x7ED3;&#x679C;&#x53EF;&#x80FD;&#x662F;&#xFF1A; 1 2 3 4 5 6 7 8 y:0 x:1 x:0 y:1 x:1 y:1 y:1 x:1 # &#x8FD8;&#x53EF;&#x80FD;&#x662F; x:0 y:0 y:0 x:0 &#x4E3A;&#x4EC0;&#x4E48;&#x4F1A;&#x6709; x:0 y:0 &#x8FD9;&#x79CD;&#x7ED3;&#x679C;&#xFF0C;&#x5728;&#x4E00;&#x4E2A; goroutine &#x4E2D;&#xFF0C;&#x8BED;&#x53E5;&#x7684;&#x6267;&#x884C;&#x987A;&#x5E8F;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1;&#xFF0C;&#x5728;&#x58F0;&#x660E;&#x7684;&#x4F8B;&#x5B50;&#xFF0C;&#x53EF;&#x4EE5;&#x4FDD;&#x8BC1; &#x6267;&#x884C; x = 1 &#x540E;&#x6253;&#x5370; y: &#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x80FD;&#x4FDD;&#x8BC1;&#x6253;&#x5370; y: &#x65F6;&#xFF0C;&#x53E6;&#x4E00;&#x4E2A; goroutine &#x4E2D; y = 1 &#x662F;&#x5426;&#x5DF2;&#x7ECF;&#x6267;&#x884C;&#x3002; &#x6240;&#x4EE5;&#x53EF;&#x80FD;&#x7684;&#x8BDD;&#xFF0C;&#x5C06;&#x53D8;&#x91CF;&#x9650;&#x5B9A;&#x5728; goroutine &#x5185;&#x90E8;&#xFF1B;&#x5982;&#x679C;&#x662F;&#x591A;&#x4E2A; goroutine &#x90FD;&#x9700;&#x8981;&#x8BBF;&#x95EE;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x4F7F;&#x7528;&#x4E92;&#x65A5;&#x6761;&#x4EF6;&#x6765;&#x8BBF;&#x95EE;&#x3002; &#x6CE8;&#x610F;&#x4E8B;&#x9879; &#x4E0D;&#x8981;&#x91CD;&#x590D;&#x9501;&#x5B9A;&#x4E92;&#x65A5;&#x9501;&#xFF1B; &#x5BF9;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;&#x88AB;&#x9501;&#x5B9A;&#x7684;&#x4E92;&#x65A5;&#x9501;&#x8FDB;&#x884C;&#x9501;&#x5B9A;&#xFF0C;&#x662F;&#x4F1A;&#x7ACB;&#x5373;&#x963B;&#x585E;&#x5F53;&#x524D;&#x7684; goroutine &#x7684; &#x3002;&#x8FD9;&#x4E2A; goroutine &#x6240;&#x6267;&#x884C;&#x7684;&#x6D41;&#x7A0B;&#xFF0C; &#x4F1A;&#x4E00;&#x76F4;&#x505C;&#x6EDE;&#x5728;&#x8C03;&#x7528;&#x8BE5;&#x4E92;&#x65A5;&#x9501;&#x7684; Lock &#x65B9;&#x6CD5;&#x7684;&#x90A3;&#x884C;&#x4EE3;&#x7801;&#x4E0A;&#x3002;&#x76F4;&#x5230;&#x8BE5;&#x4E92;&#x65A5;&#x9501;&#x7684; Unlock &#x65B9;&#x6CD5;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x91CC;&#x7684;&#x9501;&#x5B9A;&#x64CD;&#x4F5C;&#x6210;&#x529F;&#x5B8C;&#x6210;&#xFF0C;&#x540E;&#x7EED;&#x7684;&#x4EE3;&#x7801; &#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x4E34;&#x754C;&#x533A;&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#xFF09;&#x624D;&#x4F1A;&#x5F00;&#x59CB;&#x6267;&#x884C;&#x3002;&#x8FD9;&#x4E5F;&#x6B63;&#x662F;&#x4E92;&#x65A5;&#x9501;&#x80FD;&#x591F;&#x4FDD;&#x62A4;&#x4E34;&#x754C;&#x533A;&#x7684;&#x539F;&#x56E0;&#x6240;&#x5728;&#x3002; &#x4E0D;&#x8981;&#x5FD8;&#x8BB0;&#x89E3;&#x9501;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x5FC5;&#x8981;&#x65F6;&#x4F7F;&#x7528; defer &#x8BED;&#x53E5;&#xFF1B;&#x907F;&#x514D;&#x91CD;&#x590D;&#x9501;&#x5B9A;&#x3002; &#x4E0D;&#x8981;&#x5BF9;&#x5C1A;&#x672A;&#x9501;&#x5B9A;&#x6216;&#x8005;&#x5DF2;&#x89E3;&#x9501;&#x7684;&#x4E92;&#x65A5;&#x9501;&#x89E3;&#x9501;&#xFF1B; &#x89E3;&#x9501;&#x201C;&#x8BFB;&#x5199;&#x9501;&#x4E2D;&#x672A;&#x88AB;&#x9501;&#x5B9A;&#x7684;&#x5199;&#x9501;&#x201D;&#xFF0C;&#x4F1A;&#x7ACB;&#x5373;&#x5F15;&#x53D1; panic &#xFF0C;&#x5BF9;&#x4E8E;&#x5176;&#x4E2D;&#x7684;&#x8BFB;&#x9501;&#x4E5F;&#x662F;&#x5982;&#x6B64;&#xFF0C;&#x5E76;&#x4E14;&#x540C; &#x6837;&#x662F;&#x4E0D;&#x53EF;&#x6062;&#x590D;&#x7684;&#x3002; &#x4E0D;&#x8981;&#x5728;&#x591A;&#x4E2A;&#x51FD;&#x6570;&#x4E4B;&#x95F4;&#x76F4;&#x63A5;&#x4F20;&#x9012;&#x4E92;&#x65A5;&#x9501;&#x3002;&#x4E00;&#x65E6;&#xFF0C;&#x4F60;&#x628A;&#x4E00;&#x4E2A;&#x4E92;&#x65A5;&#x9501;&#x540C;&#x65F6;&#x7528;&#x5728;&#x4E86;&#x591A;&#x4E2A;&#x5730;&#x65B9;&#xFF0C;&#x5C31;&#x5FC5;&#x7136;&#x4F1A;&#x6709;&#x66F4;&#x591A;&#x7684; goroutine &#x4E89;&#x7528;&#x8FD9;&#x628A;&#x9501;&#x3002; &#x8FD9;&#x4E0D;&#x4F46;&#x4F1A;&#x8BA9;&#x4F60;&#x7684;&#x7A0B;&#x5E8F;&#x53D8;&#x6162;&#xFF0C;&#x8FD8;&#x4F1A;&#x5927;&#x5927;&#x589E;&#x52A0;&#x6B7B;&#x9501;&#xFF08; deadloc k&#xFF09;&#x7684;&#x53EF;&#x80FD;&#x6027;&#x3002; &#x6240;&#x8C13;&#x7684; &#x6B7B;&#x9501; &#xFF0C;&#x6307;&#x7684;&#x5C31;&#x662F;&#x5F53;&#x524D;&#x7A0B;&#x5E8F;&#x4E2D;&#x7684;&#x4E3B; goroutine &#xFF0C;&#x4EE5;&#x53CA;&#x6211;&#x4EEC;&#x542F;&#x7528;&#x7684;&#x90A3;&#x4E9B; goroutine &#x90FD;&#x5DF2;&#x7ECF;&#x88AB;&#x963B;&#x585E;&#x3002;&#x8FD9;&#x4E9B; goroutine &#x53EF;&#x4EE5;&#x88AB;&#x7EDF; &#x79F0;&#x4E3A;&#x7528;&#x6237;&#x7EA7;&#x7684; goroutine &#x3002;&#x8FD9;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x6574;&#x4E2A;&#x7A0B;&#x5E8F;&#x90FD;&#x5DF2;&#x7ECF;&#x505C;&#x6EDE;&#x4E0D;&#x524D;&#x4E86;&#x3002; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x662F;&#x4E0D;&#x5141;&#x8BB8;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x51FA;&#x73B0;&#x7684;&#xFF0C;&#x53EA;&#x8981;&#x5B83;&#x53D1;&#x73B0;&#x6240;&#x6709;&#x7684;&#x7528;&#x6237;&#x7EA7; goroutine &#x90FD;&#x5904;&#x4E8E;&#x7B49;&#x5F85;&#x72B6;&#x6001;&#xFF0C;&#x5C31;&#x4F1A;&#x81EA;&#x884C;&#x629B;&#x51FA;&#x4E00;&#x4E2A;&#x5E26;&#x6709;&#x5982;&#x4E0B; &#x4FE1;&#x606F;&#x7684; panic&#xFF1A; fatal error: all goroutines are asleep - deadlock! &#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x79CD;&#x7531; Go &#x8BED;&#x8A00;&#x8FD0;&#x884C;&#x65F6;&#x7CFB;&#x7EDF;&#x81EA;&#x884C;&#x629B;&#x51FA;&#x7684; panic &#x90FD;&#x5C5E;&#x4E8E;&#x81F4;&#x547D;&#x9519;&#x8BEF;&#xFF0C;&#x90FD;&#x662F;&#x65E0;&#x6CD5;&#x88AB;&#x6062;&#x590D;&#x7684;&#xFF0C;&#x8C03;&#x7528; recover &#x51FD;&#x6570;&#x5BF9;&#x5B83;&#x4EEC;&#x8D77;&#x4E0D;&#x5230;&#x4EFB;&#x4F55;&#x4F5C;&#x7528;&#x3002; &#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x4E00;&#x65E6;&#x4EA7;&#x751F;&#x6B7B;&#x9501;&#xFF0C;&#x7A0B;&#x5E8F;&#x5FC5;&#x7136;&#x5D29;&#x6E83; &#x3002; &#x6700;&#x7B80;&#x5355;&#x3001;&#x6709;&#x6548;&#x7684;&#x65B9;&#x5F0F;&#x5C31;&#x662F;&#x8BA9;&#x6BCF;&#x4E00;&#x4E2A;&#x4E92;&#x65A5;&#x9501;&#x90FD;&#x53EA;&#x4FDD;&#x62A4;&#x4E00;&#x4E2A;&#x4E34;&#x754C;&#x533A;&#x6216;&#x4E00;&#x7EC4;&#x76F8;&#x5173;&#x4E34;&#x754C;&#x533A; &#x3002;"},"concurrent/sync_lock.html#条件变量-sync-Cond":{"title":"&#x6761;&#x4EF6;&#x53D8;&#x91CF; sync.Cond","path":"\\golang-learn\\concurrent\\sync_lock.html#条件变量-sync-Cond","body":"&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x662F;&#x57FA;&#x4E8E;&#x4E92;&#x65A5;&#x9501;&#x7684;&#xFF0C;&#x5B83;&#x5FC5;&#x987B;&#x6709;&#x4E92;&#x65A5;&#x9501;&#x7684;&#x652F;&#x6491;&#x624D;&#x80FD;&#x53D1;&#x6325;&#x4F5C;&#x7528;&#x3002;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x5E76;&#x4E0D;&#x662F;&#x88AB;&#x7528;&#x6765;&#x4FDD;&#x62A4;&#x4E34;&#x754C;&#x533A;&#x548C;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#xFF0C;&#x5B83;&#x662F;&#x7528;&#x4E8E;&#x534F;&#x8C03;&#x60F3;&#x8981;&#x8BBF;&#x95EE;&#x5171;&#x4EAB; &#x8D44;&#x6E90;&#x7684;&#x90A3;&#x4E9B;&#x7EBF;&#x7A0B;&#x7684;&#x3002; &#x5F53;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#x53D1;&#x751F;&#x53D8;&#x5316;&#x65F6;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;&#x901A;&#x77E5;&#x88AB;&#x4E92;&#x65A5;&#x9501;&#x963B;&#x585E;&#x7684;&#x7EBF;&#x7A0B; &#x3002; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x5728;&#x8FD9;&#x91CC;&#x7684;&#x6700;&#x5927;&#x4F18;&#x52BF;&#x5C31;&#x662F;&#x5728;&#x6548;&#x7387;&#x65B9;&#x9762;&#x7684;&#x63D0;&#x5347;&#x3002;&#x5F53;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#x4E0D;&#x6EE1;&#x8DB3;&#x6761;&#x4EF6;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x60F3;&#x64CD;&#x4F5C;&#x5B83;&#x7684;&#x7EBF;&#x7A0B;&#x518D;&#x4E5F;&#x4E0D;&#x7528;&#x5FAA;&#x73AF;&#x5F80;&#x590D;&#x5730;&#x505A;&#x68C0;&#x67E5;&#x4E86;&#xFF0C; &#x53EA;&#x8981;&#x7B49;&#x5F85;&#x901A;&#x77E5;&#x5C31;&#x597D;&#x4E86;&#x3002; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x600E;&#x6837;&#x4E0E;&#x4E92;&#x65A5;&#x9501;&#x914D;&#x5408;&#x4F7F;&#x7528; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684;&#x521D;&#x59CB;&#x5316;&#x79BB;&#x4E0D;&#x5F00;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x7684;&#x65B9;&#x6CD5;&#x6709;&#x7684;&#x4E5F;&#x662F;&#x57FA;&#x4E8E;&#x4E92;&#x65A5;&#x9501;&#x7684;&#x3002; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x63D0;&#x4F9B;&#x7684;&#x65B9;&#x6CD5;&#x6709;&#x4E09;&#x4E2A;&#xFF1A;&#x7B49;&#x5F85;&#x901A;&#x77E5;&#xFF08;wait&#xFF09;&#x3001;&#x5355;&#x53D1;&#x901A;&#x77E5;&#xFF08;signal&#xFF09;&#x548C;&#x5E7F;&#x64AD;&#x901A;&#x77E5;&#xFF08;broadcast&#xFF09;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x5229;&#x7528;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7B49;&#x5F85;&#x901A;&#x77E5;&#x7684;&#x65F6;&#x5019;&#xFF0C; &#x9700;&#x8981;&#x5728;&#x5B83;&#x57FA;&#x4E8E;&#x7684;&#x90A3;&#x4E2A;&#x4E92;&#x65A5;&#x9501;&#x4FDD;&#x62A4;&#x4E0B;&#x8FDB;&#x884C;&#x3002;&#x800C;&#x5728;&#x8FDB;&#x884C;&#x5355;&#x53D1;&#x901A;&#x77E5;&#x6216;&#x5E7F;&#x64AD;&#x901A;&#x77E5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5374;&#x662F;&#x6070;&#x6070;&#x76F8;&#x53CD;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x9700;&#x8981;&#x5728;&#x5BF9;&#x5E94;&#x7684;&#x4E92;&#x65A5;&#x9501;&#x89E3;&#x9501;&#x4E4B;&#x540E; &#x518D;&#x505A;&#x8FD9;&#x4E24;&#x79CD;&#x64CD;&#x4F5C;&#x3002; 1 2 3 4 var mailbox uint8 var lock sync.RWMutex sendCond := sync.NewCond(&amp;lock) recvCond := sync.NewCond(lock.RLocker()) lock &#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x4E3A; sync.RWMutex &#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x662F;&#x4E00;&#x4E2A;&#x8BFB;&#x5199;&#x9501;&#x3002;&#x57FA;&#x4E8E;&#x8FD9;&#x628A;&#x9501;&#xFF0C;&#x6211;&#x8FD8;&#x521B;&#x5EFA;&#x4E86;&#x4E24;&#x4E2A;&#x4EE3;&#x8868;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684;&#x53D8;&#x91CF;&#xFF0C;&#x540D;&#x5B57;&#x5206;&#x522B; &#x53EB; sendCond &#x548C; recvCond &#x3002; sync.Cond &#x7C7B;&#x578B;&#x5E76;&#x4E0D;&#x662F;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x7684;&#x3002;&#x53EA;&#x80FD;&#x5229;&#x7528; sync.NewCond &#x51FD;&#x6570;&#x521B;&#x5EFA;&#x5B83;&#x7684;&#x6307;&#x9488;&#x503C; &#x3002; lock &#x53D8;&#x91CF;&#x7684; Lock &#x65B9;&#x6CD5;&#x548C; Unlock &#x65B9;&#x6CD5;&#x5206;&#x522B;&#x7528;&#x4E8E;&#x5BF9;&#x5176;&#x4E2D;&#x5199;&#x9501;&#x7684;&#x9501;&#x5B9A;&#x548C;&#x89E3;&#x9501;&#xFF0C;&#x5B83;&#x4EEC;&#x4E0E; sendCond &#x53D8;&#x91CF;&#x7684;&#x542B;&#x4E49;&#x662F;&#x5BF9;&#x5E94;&#x7684;&#x3002; &#x88AB;&#x89C6;&#x4E3A;&#x5BF9;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x5199;&#x64CD;&#x4F5C;&#x3002; &#x521D;&#x59CB;&#x5316; recvCond &#x8FD9; &#x4E2A;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7684;&#x662F; lock &#x53D8;&#x91CF;&#x4E2D;&#x7684;&#x8BFB;&#x9501;&#xFF0C; sync.RWMutex &#x7C7B;&#x578B;&#x7684; RLocker &#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x8FD9;&#x4E00;&#x9700;&#x6C42;&#x3002; lock.RLocker() &#xFF0C;&#x5728;&#x5176;&#x5185;&#x90E8;&#x4F1A;&#x5206;&#x522B;&#x8C03;&#x7528; lock &#x53D8;&#x91CF;&#x7684; RLock &#x65B9;&#x6CD5;&#x548C; RUnlock &#x65B9;&#x6CD5;&#x3002; &#x4E0B;&#x9762;&#x662F;&#x4E00;&#x4E2A;&#x4F8B;&#x5B50;&#xFF1A; mailbox &#x662F;&#x4E00;&#x4E2A;&#x4FE1;&#x7BB1;&#xFF0C;&#x5982;&#x679C;&#x5728;&#x653E;&#x7F6E;&#x7684;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#x4FE1;&#x7BB1;&#x91CC;&#x8FD8;&#x6709;&#x672A;&#x88AB;&#x53D6;&#x8D70;&#x7684;&#x60C5;&#x62A5;&#xFF0C;&#x90A3;&#x5C31;&#x4E0D;&#x518D;&#x653E;&#x7F6E;&#xFF0C;&#x800C;&#x5148;&#x8FD4;&#x56DE;&#x3002;&#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x5728;&#x83B7;&#x53D6;&#x7684;&#x65F6;&#x5019;&#x53D1;&#x73B0;&#x4FE1; &#x7BB1;&#x91CC;&#x6CA1;&#x6709;&#x60C5;&#x62A5;&#xFF0C;&#x90A3;&#x4E5F;&#x53EA;&#x80FD;&#x5148;&#x56DE;&#x53BB;&#x4E86;&#x3002; 1 2 3 4 5 6 7 lock.Lock() for mailbox == 1 { sendCond.Wait() } mailbox = 1 lock.Unlock() recvCond.Signal() &#x5148;&#x8C03;&#x7528; lock &#x53D8;&#x91CF;&#x7684; Lock &#x65B9;&#x6CD5;&#x3002;&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x4E2A; Lock &#x65B9;&#x6CD5;&#x5728;&#x8FD9;&#x91CC;&#x610F;&#x5473;&#x7684;&#x662F;&#xFF1A;&#x6301;&#x6709;&#x4FE1;&#x7BB1;&#x4E0A;&#x7684;&#x9501;&#xFF0C;&#x5E76;&#x4E14;&#x6709;&#x6253;&#x5F00;&#x4FE1;&#x7BB1;&#x7684;&#x6743;&#x5229;&#xFF0C; &#x800C;&#x4E0D;&#x662F;&#x9501;&#x4E0A;&#x8FD9;&#x4E2A;&#x9501;&#x3002; &#x68C0;&#x67E5; mailbox &#x53D8;&#x91CF;&#x7684;&#x503C;&#x662F;&#x5426;&#x7B49;&#x4E8E; 1&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x8981;&#x770B;&#x770B;&#x4FE1;&#x7BB1;&#x91CC;&#x662F;&#x4E0D;&#x662F;&#x8FD8;&#x5B58;&#x6709;&#x60C5;&#x62A5;&#x3002;&#x5982;&#x679C;&#x8FD8;&#x6709;&#x60C5;&#x62A5;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x5C31;&#x56DE;&#x5BB6;&#x53BB;&#x7B49;&#x901A;&#x77E5;&#x3002; &#x5982;&#x679C;&#x4FE1;&#x7BB1;&#x91CC;&#x6CA1;&#x6709;&#x60C5;&#x62A5;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x5C31;&#x628A;&#x65B0;&#x60C5;&#x62A5;&#x653E;&#x8FDB;&#x53BB;&#xFF0C;&#x5173;&#x4E0A;&#x4FE1;&#x7BB1;&#x3001;&#x9501;&#x4E0A;&#x9501;&#xFF0C;&#x7136;&#x540E;&#x79BB;&#x5F00;&#x3002;&#x7528;&#x4EE3;&#x7801;&#x8868;&#x8FBE;&#x51FA;&#x6765;&#x5C31;&#x662F; mailbox = 1 &#x548C; lock.Unlock() &#x3002; &#x7136;&#x540E;&#x53D1;&#x901A;&#x77E5;&#xFF0C;&#x201C;&#x4FE1;&#x7BB1;&#x91CC;&#x5DF2;&#x7ECF;&#x6709;&#x65B0;&#x60C5;&#x62A5;&#x4E86;&#x201D;&#xFF0C;&#x6211;&#x4EEC;&#x8C03;&#x7528; recvCond &#x7684; Signal &#x65B9;&#x6CD5;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x8FD9;&#x4E00;&#x6B65;&#x9AA4;&#x3002; &#x53E6;&#x4E00;&#x65B9;&#x9762;&#xFF0C;&#x4F60;&#x73B0;&#x5728;&#x662F;&#x53E6;&#x4E00;&#x4E2A; goroutine &#xFF0C;&#x60F3;&#x8981;&#x9002;&#x65F6;&#x5730;&#x4ECE;&#x4FE1;&#x7BB1;&#x4E2D;&#x83B7;&#x53D6;&#x60C5;&#x62A5;&#xFF0C;&#x7136;&#x540E;&#x901A;&#x77E5;&#x6211;&#x3002; 1 2 3 4 5 6 7 lock.RLock() for mailbox == 0 { recvCond.Wait() } mailbox = 0 lock.RUnlock() sendCond.Signal() &#x4E8B;&#x60C5;&#x5728;&#x6D41;&#x7A0B;&#x4E0A;&#x5176;&#x5B9E;&#x57FA;&#x672C;&#x4E00;&#x81F4;&#xFF0C;&#x53EA;&#x4E0D;&#x8FC7;&#x6BCF;&#x4E00;&#x6B65;&#x64CD;&#x4F5C;&#x7684;&#x5BF9;&#x8C61;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x5148;&#x8981;&#x9501;&#x5B9A;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x57FA;&#x4E8E;&#x7684;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x624D;&#x80FD;&#x8C03;&#x7528;&#x5B83;&#x7684; Wait &#x65B9;&#x6CD5;&#xFF1F; Wait &#x65B9;&#x6CD5;&#x4E3B;&#x8981;&#x505A;&#x4E86;&#x56DB;&#x4EF6;&#x4E8B;&#x3002; &#x628A;&#x8C03;&#x7528;&#x5B83;&#x7684; goroutine &#xFF08;&#x4E5F;&#x5C31;&#x662F;&#x5F53;&#x524D;&#x7684; goroutine &#xFF09;&#x52A0;&#x5165;&#x5230;&#x5F53;&#x524D;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684;&#x901A;&#x77E5;&#x961F;&#x5217;&#x4E2D;&#x3002; &#x89E3;&#x9501;&#x5F53;&#x524D;&#x7684;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x57FA;&#x4E8E;&#x7684;&#x90A3;&#x4E2A;&#x4E92;&#x65A5;&#x9501;&#x3002; &#x8BA9;&#x5F53;&#x524D;&#x7684; goroutine &#x5904;&#x4E8E;&#x7B49;&#x5F85;&#x72B6;&#x6001;&#xFF0C;&#x7B49;&#x5230;&#x901A;&#x77E5;&#x5230;&#x6765;&#x65F6;&#x518D;&#x51B3;&#x5B9A;&#x662F;&#x5426;&#x5524;&#x9192;&#x5B83;&#x3002;&#x6B64;&#x65F6;&#xFF0C;&#x8FD9;&#x4E2A; goroutine &#x5C31;&#x4F1A;&#x963B;&#x585E;&#x5728;&#x8C03;&#x7528;&#x8FD9; &#x4E2A; Wait &#x65B9;&#x6CD5;&#x7684;&#x90A3;&#x884C;&#x4EE3;&#x7801;&#x4E0A;&#x3002; &#x5982;&#x679C;&#x901A;&#x77E5;&#x5230;&#x6765;&#x5E76;&#x4E14;&#x51B3;&#x5B9A;&#x5524;&#x9192;&#x8FD9;&#x4E2A; goroutine &#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x5728;&#x5524;&#x9192;&#x5B83;&#x4E4B;&#x540E;&#x91CD;&#x65B0;&#x9501;&#x5B9A;&#x5F53;&#x524D;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x57FA;&#x4E8E;&#x7684;&#x4E92;&#x65A5;&#x9501;&#x3002;&#x81EA;&#x6B64;&#x4E4B;&#x540E;&#xFF0C;&#x5F53;&#x524D; &#x7684; goroutine &#x5C31;&#x4F1A;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#x540E;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E86;&#x3002; &#x56E0;&#x4E3A;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Wait &#x65B9;&#x6CD5;&#x5728;&#x963B;&#x585E;&#x5F53;&#x524D;&#x7684; goroutine &#x4E4B;&#x524D;&#x4F1A;&#x89E3;&#x9501;&#x5B83;&#x57FA;&#x4E8E;&#x7684;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x6240;&#x4EE5;&#x5728;&#x8C03;&#x7528;&#x8BE5; Wait &#x65B9;&#x6CD5;&#x4E4B;&#x524D;&#x6211;&#x4EEC;&#x5FC5;&#x987B;&#x5148; &#x9501;&#x5B9A;&#x90A3;&#x4E2A;&#x4E92;&#x65A5;&#x9501;&#xFF0C;&#x5426;&#x5219;&#x5728;&#x8C03;&#x7528;&#x8FD9;&#x4E2A; Wait &#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x5C31;&#x4F1A;&#x5F15;&#x53D1;&#x4E00;&#x4E2A;&#x4E0D;&#x53EF;&#x6062;&#x590D;&#x7684; panic&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Wait &#x65B9;&#x6CD5;&#x8981;&#x8FD9;&#x4E48;&#x505A;&#x5462;&#xFF1F;&#x4F60;&#x53EF;&#x4EE5;&#x60F3;&#x8C61;&#x4E00;&#x4E0B;&#xFF0C;&#x5982;&#x679C; Wait &#x65B9;&#x6CD5;&#x5728;&#x4E92;&#x65A5;&#x9501;&#x5DF2;&#x7ECF;&#x9501;&#x5B9A;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x963B;&#x585E;&#x4E86;&#x5F53;&#x524D;&#x7684; goroutine &#xFF0C; &#x90A3;&#x4E48;&#x53C8;&#x7531;&#x8C01;&#x6765;&#x89E3;&#x9501;&#x5462;&#xFF1F;&#x522B;&#x7684; goroutine &#x5417;&#xFF1F; &#x5148;&#x4E0D;&#x8BF4;&#x8FD9;&#x8FDD;&#x80CC;&#x4E86;&#x4E92;&#x65A5;&#x9501;&#x7684;&#x91CD;&#x8981;&#x4F7F;&#x7528;&#x539F;&#x5219;&#xFF0C;&#x5373;&#xFF1A;&#x6210;&#x5BF9;&#x7684;&#x9501;&#x5B9A;&#x548C;&#x89E3;&#x9501;&#xFF0C;&#x5C31;&#x7B97;&#x522B;&#x7684; goroutine &#x53EF;&#x4EE5;&#x6765;&#x89E3;&#x9501;&#xFF0C;&#x90A3;&#x4E07;&#x4E00;&#x89E3;&#x9501;&#x91CD;&#x590D;&#x4E86;&#x600E;&#x4E48;&#x529E;&#xFF1F; &#x7531;&#x6B64;&#x5F15;&#x53D1;&#x7684; panic &#x53EF;&#x662F;&#x65E0;&#x6CD5;&#x6062;&#x590D;&#x7684;&#x3002; &#x5982;&#x679C;&#x5F53;&#x524D;&#x7684; goroutine &#x65E0;&#x6CD5;&#x89E3;&#x9501;&#xFF0C;&#x522B;&#x7684; goroutine &#x4E5F;&#x90FD;&#x4E0D;&#x6765;&#x89E3;&#x9501;&#xFF0C;&#x90A3;&#x4E48;&#x53C8;&#x7531;&#x8C01;&#x6765;&#x8FDB;&#x5165;&#x4E34;&#x754C;&#x533A;&#xFF0C;&#x5E76;&#x6539;&#x53D8;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#x5462;&#xFF1F;&#x53EA;&#x8981;&#x5171;&#x4EAB;&#x8D44;&#x6E90; &#x7684;&#x72B6;&#x6001;&#x4E0D;&#x53D8;&#xFF0C;&#x5373;&#x4F7F;&#x5F53;&#x524D;&#x7684; goroutine &#x56E0;&#x6536;&#x5230;&#x901A;&#x77E5;&#x800C;&#x88AB;&#x5524;&#x9192;&#xFF0C;&#x4E5F;&#x4F9D;&#x7136;&#x4F1A;&#x518D;&#x6B21;&#x6267;&#x884C;&#x8FD9;&#x4E2A; Wait &#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x518D;&#x6B21;&#x88AB;&#x963B;&#x585E;&#x3002; &#x6240;&#x4EE5;&#x8BF4;&#xFF0C;&#x5982;&#x679C;&#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Wait &#x65B9;&#x6CD5;&#x4E0D;&#x5148;&#x89E3;&#x9501;&#x4E92;&#x65A5;&#x9501;&#x7684;&#x8BDD;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x53EA;&#x4F1A;&#x9020;&#x6210;&#x4E24;&#x79CD;&#x540E;&#x679C;&#xFF1A;&#x4E0D;&#x662F;&#x5F53;&#x524D;&#x7684;&#x7A0B;&#x5E8F;&#x56E0; panic &#x800C;&#x5D29;&#x6E83;&#xFF0C;&#x5C31;&#x662F;&#x76F8;&#x5173;&#x7684; goroutine &#x5168;&#x9762;&#x963B;&#x585E;&#x3002; &#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x7528; for &#x8BED;&#x53E5;&#x6765;&#x5305;&#x88F9;&#x8C03;&#x7528;&#x5176; Wait &#x65B9;&#x6CD5;&#x7684;&#x8868;&#x8FBE;&#x5F0F;&#xFF0C;&#x7528; if &#x8BED;&#x53E5;&#x4E0D;&#x884C;&#x5417;&#xFF1F; if &#x8BED;&#x53E5;&#x53EA;&#x4F1A;&#x5BF9;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#x68C0;&#x67E5;&#x4E00;&#x6B21;&#xFF0C;&#x800C; for &#x8BED;&#x53E5;&#x5374;&#x53EF;&#x4EE5;&#x505A;&#x591A;&#x6B21;&#x68C0;&#x67E5;&#xFF0C;&#x76F4;&#x5230;&#x8FD9;&#x4E2A;&#x72B6;&#x6001;&#x6539;&#x53D8;&#x4E3A;&#x6B62;&#x3002; &#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x505A;&#x591A;&#x6B21;&#x68C0;&#x67E5;&#x5462;&#xFF1F; &#x4E3A;&#x4E86;&#x4FDD;&#x9669;&#x8D77;&#x89C1;&#x3002;&#x5982;&#x679C;&#x4E00;&#x4E2A; goroutine &#x56E0;&#x6536;&#x5230;&#x901A;&#x77E5;&#x800C;&#x88AB;&#x5524;&#x9192;&#xFF0C;&#x4F46;&#x5374;&#x53D1;&#x73B0;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#xFF0C;&#x4F9D;&#x7136;&#x4E0D;&#x7B26;&#x5408;&#x5B83;&#x7684;&#x8981;&#x6C42;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x5E94;&#x8BE5;&#x518D;&#x6B21;&#x8C03;&#x7528; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Wait &#x65B9;&#x6CD5;&#xFF0C;&#x5E76;&#x7EE7;&#x7EED;&#x7B49;&#x5F85;&#x4E0B;&#x6B21;&#x901A;&#x77E5;&#x7684;&#x5230;&#x6765;&#x3002; &#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x662F;&#x5F88;&#x6709;&#x53EF;&#x80FD;&#x53D1;&#x751F;&#x7684;&#x3002; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Signal &#x65B9;&#x6CD5;&#x548C; Broadcast &#x65B9;&#x6CD5;&#x6709;&#x54EA;&#x4E9B;&#x5F02;&#x540C; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Signal &#x65B9;&#x6CD5;&#x548C; Broadcast &#x65B9;&#x6CD5;&#x90FD;&#x662F;&#x88AB;&#x7528;&#x6765;&#x53D1;&#x9001;&#x901A;&#x77E5;&#x7684;&#xFF0C;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;&#x524D;&#x8005;&#x7684;&#x901A;&#x77E5;&#x53EA;&#x4F1A;&#x5524;&#x9192;&#x4E00;&#x4E2A;&#x56E0;&#x6B64;&#x800C;&#x7B49;&#x5F85;&#x7684; goroutine &#xFF0C; &#x800C;&#x540E;&#x8005;&#x7684;&#x901A;&#x77E5;&#x5374;&#x4F1A;&#x5524;&#x9192;&#x6240;&#x6709;&#x4E3A;&#x6B64;&#x7B49;&#x5F85;&#x7684; goroutine &#x3002; &#x6761;&#x4EF6;&#x53D8;&#x91CF;&#x7684; Wait &#x65B9;&#x6CD5;&#x603B;&#x4F1A;&#x628A;&#x5F53;&#x524D;&#x7684; goroutine &#x6DFB;&#x52A0;&#x5230;&#x901A;&#x77E5;&#x961F;&#x5217;&#x7684;&#x961F;&#x5C3E;&#xFF0C;&#x800C;&#x5B83;&#x7684; Signal &#x65B9;&#x6CD5;&#x603B;&#x4F1A;&#x4ECE;&#x901A;&#x77E5;&#x961F;&#x5217;&#x7684;&#x961F;&#x9996;&#x5F00;&#x59CB;&#x67E5;&#x627E;&#x53EF;&#x88AB; &#x5524;&#x9192;&#x7684; goroutine &#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x56E0; Signal &#x65B9;&#x6CD5;&#x7684;&#x901A;&#x77E5;&#x800C;&#x88AB;&#x5524;&#x9192;&#x7684; goroutine &#x4E00;&#x822C;&#x90FD;&#x662F;&#x6700;&#x65E9;&#x7B49;&#x5F85;&#x7684;&#x90A3;&#x4E00;&#x4E2A;&#x3002;"},"concurrent/sync_lock.html#原子操作":{"title":"&#x539F;&#x5B50;&#x64CD;&#x4F5C;","path":"\\golang-learn\\concurrent\\sync_lock.html#原子操作","body":"Go &#x8BED;&#x8A00;&#x7684;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x5F53;&#x7136;&#x662F;&#x57FA;&#x4E8E; CPU &#x548C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x4E5F;&#x53EA;&#x9488;&#x5BF9;&#x5C11;&#x6570;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x63D0;&#x4F9B;&#x4E86;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x3002;&#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x90FD;&#x5B58;&#x5728;&#x4E8E;&#x6807;&#x51C6;&#x5E93;&#x4EE3; &#x7801;&#x5305; sync/atomic &#x4E2D;&#x3002; sync/atomic &#x5305;&#x4E2D;&#x7684;&#x51FD;&#x6570;&#x53EF;&#x4EE5;&#x505A;&#x7684;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x6709;&#xFF1A;&#x52A0;&#x6CD5;&#xFF08;add&#xFF09;&#x3001;&#x6BD4;&#x8F83;&#x5E76;&#x4EA4;&#x6362;&#xFF08;compare and swap&#xFF0C;&#x7B80;&#x79F0; CAS&#xFF09;&#x3001;&#x52A0;&#x8F7D;&#xFF08;load&#xFF09;&#x3001; &#x5B58;&#x50A8;&#xFF08;store&#xFF09;&#x548C;&#x4EA4;&#x6362;&#xFF08;swap&#xFF09;&#x3002; &#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x9488;&#x5BF9;&#x7684;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x5E76;&#x4E0D;&#x591A;&#x3002;&#x5BF9;&#x8FD9;&#x4E9B;&#x7C7B;&#x578B;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#xFF0C; sync/atomic &#x5305;&#x90FD;&#x4F1A;&#x6709;&#x4E00;&#x5957;&#x51FD;&#x6570;&#x7ED9;&#x4E88;&#x652F;&#x6301;&#x3002;&#x8FD9;&#x4E9B;&#x6570;&#x636E;&#x7C7B;&#x578B;&#x6709;&#xFF1A; int32 &#x3001; int64 &#x3001; uint32 &#x3001; uint64 &#x3001; uintptr &#xFF0C;&#x4EE5;&#x53CA; unsafe &#x5305;&#x4E2D;&#x7684; Pointer &#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x9488;&#x5BF9; unsafe.Pointer &#x7C7B;&#x578B;&#xFF0C;&#x8BE5;&#x5305;&#x5E76;&#x672A;&#x63D0;&#x4F9B;&#x8FDB;&#x884C;&#x539F;&#x5B50;&#x52A0;&#x6CD5;&#x64CD;&#x4F5C;&#x7684;&#x51FD;&#x6570;&#x3002; sync/atomic &#x5305;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x540D;&#x4E3A; Value &#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; atomic.AddInt32 &#x51FD;&#x6570;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x662F; int32 &#x800C;&#x662F; *int32 &#x5462;&#xFF1F; &#x56E0;&#x4E3A; &#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x9700;&#x8981;&#x7684;&#x662F;&#x88AB;&#x64CD;&#x4F5C;&#x503C;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x8FD9;&#x4E2A;&#x503C;&#x672C;&#x8EAB; &#xFF1B;&#x88AB;&#x4F20;&#x5165;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#x503C;&#x90FD;&#x4F1A;&#x88AB;&#x590D;&#x5236;&#xFF0C;&#x50CF;&#x8FD9;&#x79CD;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x4E00;&#x65E6;&#x88AB;&#x4F20;&#x5165;&#x51FD;&#x6570;&#xFF0C; &#x5C31;&#x5DF2;&#x7ECF;&#x4E0E;&#x51FD;&#x6570;&#x5916;&#x7684;&#x90A3;&#x4E2A;&#x503C;&#x6BEB;&#x65E0;&#x5173;&#x7CFB;&#x4E86;&#x3002; &#x6240;&#x4EE5;&#xFF0C;&#x4F20;&#x5165;&#x503C;&#x672C;&#x8EAB;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x610F;&#x4E49;&#x3002; unsafe.Pointer &#x7C7B;&#x578B;&#x867D;&#x7136;&#x662F;&#x6307;&#x9488;&#x7C7B;&#x578B;&#xFF0C;&#x4F46;&#x662F;&#x90A3;&#x4E9B;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x8981;&#x64CD;&#x4F5C;&#x7684;&#x662F;&#x8FD9;&#x4E2A;&#x6307;&#x9488;&#x503C;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5B83;&#x6307;&#x5411; &#x7684;&#x90A3;&#x4E2A;&#x503C;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x7684;&#x4ECD;&#x7136;&#x662F;&#x6307;&#x5411;&#x8FD9;&#x4E2A;&#x6307;&#x9488;&#x503C;&#x7684;&#x6307;&#x9488;&#x3002; &#x53EA;&#x8981;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x51FD;&#x6570;&#x62FF;&#x5230;&#x4E86;&#x88AB;&#x64CD;&#x4F5C;&#x503C;&#x7684;&#x6307;&#x9488;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5B9A;&#x4F4D;&#x5230;&#x5B58;&#x50A8;&#x8BE5;&#x503C;&#x7684;&#x5185;&#x5B58;&#x5730;&#x5740;&#x3002;&#x53EA;&#x6709;&#x8FD9;&#x6837;&#xFF0C;&#x5B83;&#x4EEC;&#x624D;&#x80FD;&#x591F;&#x901A;&#x8FC7;&#x5E95;&#x5C42;&#x7684;&#x6307;&#x4EE4;&#xFF0C;&#x51C6;&#x786E;&#x5730;&#x64CD;&#x4F5C;&#x8FD9;&#x4E2A;&#x5185; &#x5B58;&#x5730;&#x5740;&#x4E0A;&#x7684;&#x6570;&#x636E;&#x3002;"},"concurrent/sync_lock.html#比较并交换操作与交换操作相比有什么不同":{"title":"&#x6BD4;&#x8F83;&#x5E76;&#x4EA4;&#x6362;&#x64CD;&#x4F5C;&#x4E0E;&#x4EA4;&#x6362;&#x64CD;&#x4F5C;&#x76F8;&#x6BD4;&#x6709;&#x4EC0;&#x4E48;&#x4E0D;&#x540C;","path":"\\golang-learn\\concurrent\\sync_lock.html#比较并交换操作与交换操作相比有什么不同","body":"&#x6BD4;&#x8F83;&#x5E76;&#x4EA4;&#x6362;&#x64CD;&#x4F5C;&#x5373; CAS &#x64CD;&#x4F5C; &#xFF0C;&#x662F;&#x6709;&#x6761;&#x4EF6;&#x7684;&#x4EA4;&#x6362;&#x64CD;&#x4F5C;&#xFF0C; &#x53EA;&#x6709;&#x5728;&#x6761;&#x4EF6;&#x6EE1;&#x8DB3;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x624D;&#x4F1A;&#x8FDB;&#x884C;&#x503C;&#x7684;&#x4EA4;&#x6362; &#x3002; &#x6240;&#x8C13;&#x7684;&#x4EA4;&#x6362;&#x6307;&#x7684;&#x662F;&#xFF0C;&#x628A;&#x65B0;&#x503C;&#x8D4B;&#x7ED9;&#x53D8;&#x91CF;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x53D8;&#x91CF;&#x7684;&#x65E7;&#x503C; &#x3002; CAS &#x64CD;&#x4F5C;&#x7528;&#x9014;&#x8981;&#x66F4;&#x5E7F;&#x6CDB;&#x4E00;&#x4E9B;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x5B83;&#x4E0E; for &#x8BED;&#x53E5;&#x8054;&#x7528;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x4E00;&#x79CD;&#x7B80;&#x6613;&#x7684;&#x81EA;&#x65CB;&#x9501;&#xFF08;spinlock&#xFF09;&#x3002; 1 2 3 4 5 6 7 for { if atomic.CompareAndSwapInt32(&amp;num2, 10 , 0 ) { fmt.Println( The second number has gone to zero. ) break } time.Sleep(time.Millisecond * 500 ) } &#x5728; for &#x8BED;&#x53E5;&#x4E2D;&#x7684; CAS &#x64CD;&#x4F5C;&#x53EF;&#x4EE5;&#x4E0D;&#x505C;&#x5730;&#x68C0;&#x67E5;&#x67D0;&#x4E2A;&#x9700;&#x8981;&#x6EE1;&#x8DB3;&#x7684;&#x6761;&#x4EF6;&#xFF0C;&#x4E00;&#x65E6;&#x6761;&#x4EF6;&#x6EE1;&#x8DB3;&#x5C31;&#x9000;&#x51FA; for &#x5FAA;&#x73AF;&#x3002;&#x8FD9;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#xFF0C;&#x53EA;&#x8981;&#x6761;&#x4EF6;&#x672A;&#x88AB;&#x6EE1;&#x8DB3;&#xFF0C; &#x5F53;&#x524D;&#x7684;&#x6D41;&#x7A0B;&#x5C31;&#x4F1A;&#x88AB;&#x4E00;&#x76F4;&#x201C;&#x963B;&#x585E;&#x201D;&#x5728;&#x8FD9;&#x91CC;&#x3002; &#x8FD9;&#x5728;&#x6548;&#x679C;&#x4E0A;&#x4E0E;&#x4E92;&#x65A5;&#x9501;&#x6709;&#x4E9B;&#x7C7B;&#x4F3C;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x5B83;&#x4EEC;&#x7684;&#x9002;&#x7528;&#x573A;&#x666F;&#x662F;&#x4E0D;&#x540C;&#x7684;&#x3002;&#x6211;&#x4EEC;&#x5728;&#x4F7F;&#x7528;&#x4E92;&#x65A5;&#x9501;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x603B;&#x662F;&#x5047;&#x8BBE;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x7684;&#x72B6;&#x6001;&#x4F1A;&#x88AB;&#x5176;&#x4ED6; &#x7684; goroutine &#x9891;&#x7E41;&#x5730;&#x6539;&#x53D8;&#x3002; &#x800C; for &#x8BED;&#x53E5;&#x52A0; CAS &#x64CD;&#x4F5C;&#x7684;&#x5047;&#x8BBE;&#x5F80;&#x5F80;&#x662F;&#xFF1A;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x72B6;&#x6001;&#x7684;&#x6539;&#x53D8;&#x5E76;&#x4E0D;&#x9891;&#x7E41;&#xFF0C;&#x6216;&#x8005;&#xFF0C;&#x5B83;&#x7684;&#x72B6;&#x6001;&#x603B;&#x4F1A;&#x53D8;&#x6210;&#x671F;&#x671B;&#x7684;&#x90A3;&#x6837;&#x3002;&#x8FD9;&#x662F;&#x4E00;&#x79CD;&#x66F4;&#x52A0;&#x4E50;&#x89C2;&#xFF0C; &#x6216;&#x8005;&#x8BF4;&#x66F4;&#x52A0;&#x5BBD;&#x677E;&#x7684;&#x505A;&#x6CD5;&#x3002; &#x5047;&#x8BBE;&#x6211;&#x5DF2;&#x7ECF;&#x4FDD;&#x8BC1;&#x4E86;&#x5BF9;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x7684;&#x5199;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#xFF0C;&#x6BD4;&#x5982;&#xFF1A;&#x52A0;&#x6216;&#x51CF;&#x3001;&#x5B58;&#x50A8;&#x3001;&#x4EA4;&#x6362;&#x7B49;&#x7B49;&#xFF0C;&#x90A3;&#x6211;&#x5BF9;&#x5B83;&#x8FDB;&#x884C;&#x8BFB;&#x64CD;&#x4F5C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x6709;&#x5FC5;&#x8981;&#x4F7F;&#x7528;&#x539F; &#x5B50;&#x64CD;&#x4F5C;&#x5417; &#xFF1F; &#x5F88;&#x6709;&#x5FC5;&#x8981;&#x3002;&#x5176;&#x4E2D;&#x7684;&#x9053;&#x7406;&#x4F60;&#x53EF;&#x4EE5;&#x5BF9;&#x7167;&#x4E00;&#x4E0B;&#x8BFB;&#x5199;&#x9501;&#x3002;&#x4E3A;&#x4EC0;&#x4E48;&#x5728;&#x8BFB;&#x5199;&#x9501;&#x4FDD;&#x62A4;&#x4E0B;&#x7684;&#x5199;&#x64CD;&#x4F5C;&#x548C;&#x8BFB;&#x64CD;&#x4F5C;&#x4E4B;&#x95F4;&#x662F;&#x4E92;&#x65A5;&#x7684;&#xFF1F;&#x8FD9;&#x662F;&#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x8BFB;&#x64CD;&#x4F5C;&#x8BFB;&#x5230;&#x6CA1;&#x6709; &#x88AB;&#x4FEE;&#x6539;&#x5B8C;&#x7684;&#x503C;&#xFF0C;&#x5BF9;&#x5417;&#xFF1F; &#x5982;&#x679C;&#x5199;&#x64CD;&#x4F5C;&#x8FD8;&#x6CA1;&#x6709;&#x8FDB;&#x884C;&#x5B8C;&#xFF0C;&#x8BFB;&#x64CD;&#x4F5C;&#x5C31;&#x6765;&#x8BFB;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x53EA;&#x80FD;&#x8BFB;&#x5230;&#x4EC5;&#x4FEE;&#x6539;&#x4E86;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x503C;&#x3002;&#x8FD9;&#x663E;&#x7136;&#x7834;&#x574F;&#x4E86;&#x503C;&#x7684;&#x5B8C;&#x6574;&#x6027;&#xFF0C;&#x8BFB;&#x51FA;&#x6765;&#x7684;&#x503C;&#x4E5F;&#x662F;&#x5B8C;&#x5168;&#x9519;&#x8BEF;&#x7684;&#x3002; &#x6240;&#x4EE5;&#xFF0C;&#x4E00;&#x65E6;&#x4F60;&#x51B3;&#x5B9A;&#x4E86;&#x8981;&#x5BF9;&#x4E00;&#x4E2A;&#x5171;&#x4EAB;&#x8D44;&#x6E90;&#x8FDB;&#x884C;&#x4FDD;&#x62A4;&#xFF0C;&#x90A3;&#x5C31;&#x8981;&#x505A;&#x5230;&#x5B8C;&#x5168;&#x7684;&#x4FDD;&#x62A4;&#x3002;&#x4E0D;&#x5B8C;&#x5168;&#x7684;&#x4FDD;&#x62A4;&#x57FA;&#x672C;&#x4E0A;&#x4E0E;&#x4E0D;&#x4FDD;&#x62A4;&#x6CA1;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;&#x3002;"},"concurrent/sync_lock.html#sync-atomic-Value":{"title":"sync/atomic.Value","path":"\\golang-learn\\concurrent\\sync_lock.html#sync-atomic-Value","body":"&#x6B64;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x76F8;&#x5F53;&#x4E8E;&#x4E00;&#x4E2A;&#x5BB9;&#x5668;&#xFF0C;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;&#x201C;&#x539F;&#x5B50;&#x5730;&#x201D;&#x5B58;&#x50A8;&#x548C;&#x52A0;&#x8F7D;&#x4EFB;&#x610F;&#x7684;&#x503C;&#x3002;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x3002; &#x5B83;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#x2014;&#x2014; Store &#x548C; Load &#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x867D;&#x7136;&#x7B80;&#x5355;&#xFF0C;&#x4F46;&#x8FD8;&#x662F;&#x6709;&#x4E00;&#x4E9B;&#x503C;&#x5F97;&#x6CE8;&#x610F;&#x7684;&#x5730;&#x65B9;&#x7684;&#x3002; &#x4E00;&#x65E6; atomic.Value &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x539F;&#x5B50;&#x503C;&#xFF09;&#x88AB;&#x771F;&#x6B63;&#x4F7F;&#x7528;&#xFF0C;&#x5B83;&#x5C31;&#x4E0D;&#x5E94;&#x8BE5;&#x518D;&#x88AB;&#x590D;&#x5236;&#x4E86;&#x3002;&#x53EA;&#x8981;&#x7528;&#x5B83;&#x6765;&#x5B58;&#x50A8;&#x503C;&#x4E86;&#xFF0C;&#x5C31;&#x76F8;&#x5F53;&#x4E8E;&#x5F00;&#x59CB;&#x771F;&#x6B63;&#x4F7F;&#x7528;&#x4E86;&#x3002; atomic.Value &#x7C7B;&#x578B;&#x5C5E;&#x4E8E;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#xFF0C;&#x800C;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x5C5E;&#x4E8E;&#x503C;&#x7C7B;&#x578B;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x590D;&#x5236;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x5B8C;&#x5168;&#x5206;&#x79BB;&#x7684;&#x65B0;&#x503C;&#x3002;&#x8FD9;&#x4E2A;&#x65B0;&#x503C;&#x76F8;&#x5F53;&#x4E8E;&#x88AB; &#x590D;&#x5236;&#x7684;&#x90A3;&#x4E2A;&#x503C;&#x7684;&#x4E00;&#x4E2A;&#x5FEB;&#x7167;&#x3002;&#x4E4B;&#x540E;&#xFF0C;&#x4E0D;&#x8BBA;&#x540E;&#x8005;&#x5B58;&#x50A8;&#x7684;&#x503C;&#x600E;&#x6837;&#x6539;&#x53D8;&#xFF0C;&#x90FD;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x524D;&#x8005;&#x3002; &#x4E0D;&#x80FD;&#x7528;&#x539F;&#x5B50;&#x503C;&#x5B58;&#x50A8; nil &#x3002; &#x6211;&#x4EEC;&#x5411;&#x539F;&#x5B50;&#x503C;&#x5B58;&#x50A8;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x51B3;&#x5B9A;&#x4E86;&#x5B83;&#x4ECA;&#x540E;&#x80FD;&#x4E14;&#x53EA;&#x80FD;&#x5B58;&#x50A8;&#x54EA;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; &#x5C3D;&#x91CF;&#x4E0D;&#x8981;&#x5411;&#x539F;&#x5B50;&#x503C;&#x4E2D;&#x5B58;&#x50A8;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002;&#x56E0;&#x4E3A;&#x8FD9;&#x5F88;&#x5BB9;&#x6613;&#x9020;&#x6210;&#x5B89;&#x5168;&#x6F0F;&#x6D1E;&#x3002; 1 2 3 4 var box6 atomic.Value v6 := [] int { 1 , 2 , 3 } box6.Store(v6) v6[ 1 ] = 4 // &#x6CE8;&#x610F;&#xFF0C;&#x6B64;&#x5904;&#x7684;&#x64CD;&#x4F5C;&#x4E0D;&#x662F;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#xFF01; &#x5207;&#x7247;&#x7C7B;&#x578B;&#x5C5E;&#x4E8E;&#x5F15;&#x7528;&#x7C7B;&#x578B;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x5728;&#x5916;&#x9762;&#x6539;&#x52A8;&#x8FD9;&#x4E2A;&#x5207;&#x7247;&#x503C;&#xFF0C;&#x5C31;&#x7B49;&#x4E8E;&#x4FEE;&#x6539;&#x4E86; box6 &#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x90A3;&#x4E2A;&#x503C;&#x3002;&#x8FD9;&#x76F8;&#x5F53;&#x4E8E;&#x7ED5;&#x8FC7;&#x4E86;&#x539F;&#x5B50;&#x503C;&#x800C;&#x8FDB;&#x884C;&#x4E86;&#x975E;&#x5E76;&#x53D1; &#x5B89;&#x5168;&#x7684;&#x64CD;&#x4F5C;&#x3002;&#x600E;&#x6837;&#x4FEE;&#x8865;&#xFF1A; 1 2 3 4 5 6 7 store := func (v [] int ) { replica := make ([] int , len (v)) copy (replica, v) box6.Store(replica) } store(v6) v6[ 2 ] = 5 // &#x6B64;&#x5904;&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x5B89;&#x5168;&#x7684;&#x3002; &#x5148;&#x4E3A;&#x5207;&#x7247;&#x503C; v6 &#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x5B8C;&#x5168;&#x7684;&#x526F;&#x672C;&#x3002;&#x8FD9;&#x4E2A;&#x526F;&#x672C;&#x6D89;&#x53CA;&#x7684;&#x6570;&#x636E;&#x5DF2;&#x7ECF;&#x4E0E;&#x539F;&#x503C;&#x6BEB;&#x4E0D;&#x76F8;&#x5E72;&#x4E86;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x6211;&#x518D;&#x628A;&#x8FD9;&#x4E2A;&#x526F;&#x672C;&#x5B58;&#x5165; box6 &#x3002;&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C; &#x65E0;&#x8BBA;&#x6211;&#x518D;&#x5BF9; v6 &#x7684;&#x503C;&#x505A;&#x600E;&#x6837;&#x7684;&#x4FEE;&#x6539;&#xFF0C;&#x90FD;&#x4E0D;&#x4F1A;&#x7834;&#x574F; box6 &#x63D0;&#x4F9B;&#x7684;&#x5B89;&#x5168;&#x4FDD;&#x62A4;&#x3002;"},"concurrent/sync_lock.html#sync-WaitGroup":{"title":"sync.WaitGroup","path":"\\golang-learn\\concurrent\\sync_lock.html#sync-WaitGroup","body":"&#x5728;&#x4E00;&#x4E9B;&#x573A;&#x5408;&#x4E0B;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x901A;&#x9053;&#x7684;&#x65B9;&#x5F0F;&#x770B;&#x8D77;&#x6765;&#x90FD;&#x4F3C;&#x4E4E;&#x6709;&#x4E9B;&#x8E69;&#x811A;&#x3002;&#x6BD4;&#x5982;&#xFF1A;&#x58F0;&#x660E;&#x4E00;&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x4F7F;&#x5B83;&#x7684;&#x5BB9;&#x91CF;&#x4E0E;&#x6211;&#x4EEC;&#x624B;&#x52A8;&#x542F;&#x7528;&#x7684; goroutine &#x7684;&#x6570;&#x91CF;&#x76F8;&#x540C;&#x3002; &#x4E4B;&#x540E;&#x5229;&#x7528;&#x8FD9;&#x4E2A;&#x901A;&#x9053;&#xFF0C;&#x8BA9;&#x4E3B; goroutine &#x7B49;&#x5F85;&#x5176;&#x4ED6; goroutine &#x7684;&#x8FD0;&#x884C;&#x7ED3;&#x675F;&#x3002;&#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#x5C31;&#x662F;&#xFF1A;&#x8BA9;&#x5176;&#x4ED6;&#x7684; goroutine &#x5728;&#x8FD0;&#x884C;&#x7ED3;&#x675F;&#x4E4B;&#x524D;&#xFF0C; &#x90FD;&#x5411;&#x8FD9;&#x4E2A;&#x901A;&#x9053;&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x5E76;&#x4E14;&#xFF0C;&#x8BA9;&#x4E3B; goroutine &#x5728;&#x6700;&#x540E;&#x4ECE;&#x8FD9;&#x4E2A;&#x901A;&#x9053;&#x4E2D;&#x63A5;&#x6536;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x63A5;&#x6536;&#x7684;&#x6B21;&#x6570;&#x9700;&#x8981;&#x4E0E;&#x5176;&#x4ED6;&#x7684; goroutine &#x7684;&#x6570;&#x91CF;&#x76F8;&#x540C;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 func coordinateWithChan () { sign := make ( chan struct {}, 2 ) num := int32 ( 0 ) fmt.Printf( The number: %d [with chan struct{}]\\n , num) max := int32 ( 10 ) go addNum(&amp;num, 1 , max, func () { sign - struct {}{} }) go addNum(&amp;num, 2 , max, func () { sign - struct {}{} }) -sign -sign } coordinateWithChan &#x51FD;&#x6570;&#x4E2D;&#x6700;&#x540E;&#x7684;&#x90A3;&#x4E24;&#x884C;&#x4EE3;&#x7801;&#x4E86;&#x5417;&#xFF1F;&#x91CD;&#x590D;&#x7684;&#x4E24;&#x4E2A;&#x63A5;&#x6536;&#x8868;&#x8FBE;&#x5F0F; -sign &#xFF0C;&#x5F88;&#x4E11;&#x964B;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x9009;&#x7528;&#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x540C;&#x6B65;&#x5DE5;&#x5177;&#xFF0C;&#x5373;&#xFF1A; sync &#x5305;&#x7684; WaitGroup &#x7C7B;&#x578B;&#x3002;&#x5B83;&#x6BD4;&#x901A;&#x9053;&#x66F4;&#x52A0;&#x9002;&#x5408;&#x5B9E;&#x73B0;&#x8FD9;&#x79CD;&#x4E00;&#x5BF9;&#x591A;&#x7684; goroutine &#x534F;&#x4F5C;&#x6D41;&#x7A0B;&#x3002; sync.WaitGroup &#x7C7B;&#x578B;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0; WaitGroup &#x7C7B;&#x578B;&#xFF09;&#x662F;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x7684;&#xFF0C;&#x4E5F;&#x662F;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#x3002; WaitGroup &#x7C7B;&#x578B;&#x62E5;&#x6709;&#x4E09;&#x4E2A;&#x6307;&#x9488;&#x65B9;&#x6CD5;&#xFF1A; Add &#x3001; Done &#x548C; Wait &#x3002; &#x4F60;&#x53EF;&#x4EE5;&#x60F3;&#x8C61;&#x8BE5;&#x7C7B;&#x578B;&#x4E2D;&#x6709;&#x4E00;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#xFF0C;&#x5B83;&#x7684;&#x9ED8;&#x8BA4;&#x503C;&#x662F; 0 &#x3002;&#x6211;&#x4EEC;&#x53EF; &#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x8BE5;&#x7C7B;&#x578B;&#x503C;&#x7684; Add &#x65B9;&#x6CD5;&#x6765;&#x589E;&#x52A0;&#xFF0C;&#x6216;&#x8005;&#x51CF;&#x5C11;&#x8FD9;&#x4E2A;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x503C; &#x3002; &#x4E00;&#x822C;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x6211;&#x4F1A;&#x7528;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x6765;&#x8BB0;&#x5F55;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x7684; goroutine &#x7684;&#x6570;&#x91CF;&#x3002;&#x76F8;&#x5BF9;&#x5E94;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x7684; Done &#x65B9;&#x6CD5;&#xFF0C;&#x7528;&#x4E8E;&#x5BF9;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x4E2D;&#x8BA1;&#x6570;&#x5668; &#x7684;&#x503C;&#x8FDB;&#x884C;&#x51CF;&#x4E00;&#x64CD;&#x4F5C; &#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x9700;&#x8981;&#x7B49;&#x5F85;&#x7684; goroutine &#x4E2D;&#xFF0C;&#x901A;&#x8FC7; defer &#x8BED;&#x53E5;&#x8C03;&#x7528;&#x5B83;&#x3002; &#x800C; &#x6B64;&#x7C7B;&#x578B;&#x7684; Wait &#x65B9;&#x6CD5;&#x7684;&#x529F;&#x80FD;&#x662F;&#xFF0C;&#x963B;&#x585E;&#x5F53;&#x524D;&#x7684; goroutine &#xFF0C;&#x76F4;&#x5230;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x4E2D;&#x7684;&#x8BA1;&#x6570;&#x5668;&#x5F52;&#x96F6; &#x3002; &#x6539;&#x9020;&#x7248;&#x672C;&#xFF1A; 1 2 3 4 5 6 7 8 9 10 func coordinateWithWaitGroup () { \t var wg sync.WaitGroup \twg.Add( 2 ) \tnum := int32 ( 0 ) \tfmt.Printf( The number: %d [with sync.WaitGroup]\\n , num) \tmax := int32 ( 10 ) \t go addNum(&amp;num, 3 , max, wg.Done) \t go addNum(&amp;num, 4 , max, wg.Done) \twg.Wait() } &#x5C3D;&#x91CF;&#x4E0D;&#x8981;&#x5728; go &#x51FD;&#x6570;&#x5185;&#x90E8;&#x8C03;&#x7528; Add &#xFF0C;&#x4EE5;&#x514D; Add &#x8FD8;&#x672A;&#x6267;&#x884C;&#xFF0C; Wait &#x5DF2;&#x7ECF;&#x9000;&#x51FA; &#xFF1A; 1 2 3 4 5 6 7 8 var wg sync.WaitGroup go func () { \twg.Add( 1 ) \tfmt.Println( test ) }() wg.Wait() fmt.Println( exit. ) sync.WaitGroup &#x7C7B;&#x578B;&#x503C;&#x4E2D;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x5C0F;&#x4E8E; 0 &#x5417; &#x4E0D;&#x53EF;&#x4EE5;&#x3002; &#x5C0F;&#x4E8E; 0&#xFF0C;&#x4F1A;&#x5F15;&#x53D1;&#x4E00;&#x4E2A; panic &#x3002; WaitGroup &#x503C;&#x662F;&#x53EF;&#x4EE5;&#x88AB;&#x590D;&#x7528;&#x7684;&#xFF0C;&#x4F46;&#x9700;&#x8981;&#x4FDD;&#x8BC1;&#x5176;&#x8BA1;&#x6570;&#x5468;&#x671F;&#x7684;&#x5B8C;&#x6574;&#x6027; &#x3002;&#x8FD9;&#x91CC;&#x7684;&#x8BA1;&#x6570;&#x5468;&#x671F;&#x6307;&#x7684;&#x662F;&#x8FD9;&#x6837;&#x4E00;&#x4E2A;&#x8FC7;&#x7A0B;&#xFF1A;&#x8BE5;&#x503C;&#x4E2D;&#x7684;&#x8BA1;&#x6570;&#x5668;&#x503C;&#x7531; 0 &#x53D8;&#x4E3A; &#x4E86;&#x67D0;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#xFF0C;&#x800C;&#x540E;&#x53C8;&#x7ECF;&#x8FC7;&#x4E00;&#x7CFB;&#x5217;&#x7684;&#x53D8;&#x5316;&#xFF0C;&#x6700;&#x7EC8;&#x7531;&#x67D0;&#x4E2A;&#x6B63;&#x6574;&#x6570;&#x53C8;&#x53D8;&#x56DE;&#x4E86; 0&#x3002; &#x5982;&#x679C;&#x5728;&#x4E00;&#x4E2A;&#x6B64;&#x7C7B;&#x503C;&#x7684; Wait &#x65B9;&#x6CD5;&#x88AB;&#x6267;&#x884C;&#x671F;&#x95F4;&#xFF0C;&#x8DE8;&#x8D8A;&#x4E86;&#x4E24;&#x4E2A;&#x8BA1;&#x6570;&#x5468;&#x671F;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x5F15;&#x53D1;&#x4E00;&#x4E2A; panic&#x3002; &#x4F7F;&#x7528;&#x6CE8;&#x610F; &#x4E0D;&#x8981;&#x628A;&#x589E;&#x52A0;&#x5176;&#x8BA1;&#x6570;&#x5668;&#x503C;&#x7684;&#x64CD;&#x4F5C;&#x548C;&#x8C03;&#x7528;&#x5176; Wait &#x65B9;&#x6CD5;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x653E;&#x5728;&#x4E0D;&#x540C;&#x7684; goroutine &#x4E2D;&#x6267;&#x884C;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x8981; &#x675C;&#x7EDD;&#x5BF9;&#x540C;&#x4E00;&#x4E2A; WaitGroup &#x503C;&#x7684;&#x4E24;&#x79CD;&#x64CD;&#x4F5C;&#x7684;&#x5E76;&#x53D1;&#x6267;&#x884C; &#x3002;"},"concurrent/sync_lock.html#sync-Once":{"title":"sync.Once","path":"\\golang-learn\\concurrent\\sync_lock.html#sync-Once","body":"&#x4E0E; sync.WaitGroup &#x7C7B;&#x578B;&#x4E00;&#x6837;&#xFF0C; sync.Once &#x7C7B;&#x578B;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0; Once &#x7C7B;&#x578B;&#xFF09;&#x4E5F;&#x5C5E;&#x4E8E;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#xFF0C;&#x540C;&#x6837;&#x4E5F;&#x662F;&#x5F00;&#x7BB1;&#x5373;&#x7528;&#x548C;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#x3002; &#x7531;&#x4E8E;&#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x4E2D;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x4E2A; sync.Mutex &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x590D;&#x5236;&#x8BE5;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x4E5F;&#x4F1A;&#x5BFC;&#x81F4;&#x529F;&#x80FD;&#x7684;&#x5931;&#x6548;&#x3002; 1 2 3 4 5 6 7 var loadIconsOnce sync.Once var icons map [ string ]image.Image // Concurrency-safe. func Icon (name string ) image . Image { loadIconsOnce.Do(loadIcons) return icons[name] } Once &#x7C7B;&#x578B;&#x7684; Do &#x65B9;&#x6CD5;&#x53EA;&#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x662F; func() &#xFF0C;&#x5373;&#xFF1A;&#x65E0;&#x53C2;&#x6570;&#x58F0;&#x660E;&#x548C;&#x7ED3;&#x679C;&#x58F0;&#x660E;&#x7684;&#x51FD;&#x6570;&#x3002;&#x8BE5;&#x65B9;&#x6CD5;&#x7684;&#x529F;&#x80FD;&#x5E76; &#x4E0D;&#x662F;&#x5BF9;&#x6BCF;&#x4E00;&#x79CD;&#x53C2;&#x6570;&#x51FD;&#x6570;&#x90FD;&#x53EA;&#x6267;&#x884C;&#x4E00;&#x6B21;&#xFF0C;&#x800C;&#x662F;&#x53EA; &#x6267;&#x884C;&#x201C;&#x9996;&#x6B21;&#x88AB;&#x8C03;&#x7528;&#x65F6;&#x4F20;&#x5165;&#x7684;&#x201D;&#x90A3;&#x4E2A;&#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x4E14;&#x4E4B;&#x540E;&#x4E0D;&#x4F1A;&#x518D;&#x6267;&#x884C;&#x4EFB;&#x4F55;&#x53C2;&#x6570;&#x51FD;&#x6570; &#x3002; &#x6240;&#x4EE5;&#xFF0C; &#x5982;&#x679C;&#x4F60;&#x6709;&#x591A;&#x4E2A;&#x53EA;&#x9700;&#x8981;&#x6267;&#x884C;&#x4E00;&#x6B21;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x5E94;&#x8BE5;&#x4E3A;&#x5B83;&#x4EEC;&#x4E2D;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x90FD;&#x5206;&#x914D;&#x4E00;&#x4E2A; sync.Once &#x7C7B;&#x578B;&#x7684;&#x503C; &#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0; Once &#x503C;&#xFF09;&#x3002; Once &#x7C7B;&#x578B;&#x4E2D;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x540D;&#x53EB; done &#x7684; uint32 &#x7C7B;&#x578B;&#x7684;&#x5B57;&#x6BB5;&#x3002; &#x5B83;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x8BB0;&#x5F55;&#x5176;&#x6240;&#x5C5E;&#x503C;&#x7684; Do &#x65B9;&#x6CD5;&#x88AB;&#x8C03;&#x7528;&#x7684;&#x6B21;&#x6570;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8BE5;&#x5B57;&#x6BB5;&#x7684;&#x503C; &#x53EA;&#x53EF;&#x80FD;&#x662F; 0 &#x6216;&#x8005; 1&#x3002;&#x4E00;&#x65E6; Do &#x65B9;&#x6CD5;&#x7684;&#x9996;&#x6B21;&#x8C03;&#x7528;&#x5B8C;&#x6210;&#xFF0C;&#x5B83;&#x7684;&#x503C;&#x5C31;&#x4F1A;&#x4ECE; 0 &#x53D8;&#x4E3A; 1 &#x3002; &#x65E2;&#x7136; done &#x5B57;&#x6BB5;&#x7684;&#x503C;&#x4E0D;&#x662F; 0 &#x5C31;&#x662F; 1&#xFF0C;&#x90A3;&#x4E3A;&#x4EC0;&#x4E48;&#x8FD8;&#x8981;&#x4F7F;&#x7528;&#x9700;&#x8981;&#x56DB;&#x4E2A;&#x5B57;&#x8282;&#x7684; uint32 &#x7C7B;&#x578B;&#x5462; &#xFF1F; &#x539F;&#x56E0;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x56E0;&#x4E3A;&#x5BF9;&#x5B83;&#x7684;&#x64CD;&#x4F5C;&#x5FC5;&#x987B;&#x662F;&#x201C;&#x539F;&#x5B50;&#x201D;&#x7684;&#x3002; Do &#x65B9;&#x6CD5;&#x5728;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x4F1A;&#x901A;&#x8FC7;&#x8C03;&#x7528; atomic.LoadUint32 &#x51FD;&#x6570;&#x6765;&#x83B7;&#x53D6;&#x8BE5;&#x5B57;&#x6BB5;&#x7684;&#x503C;&#xFF0C;&#x5E76;&#x4E14;&#x4E00;&#x65E6; &#x53D1;&#x73B0;&#x8BE5;&#x503C;&#x4E3A; 1 &#x5C31;&#x4F1A;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x3002;&#x8FD9;&#x4E5F;&#x521D;&#x6B65;&#x4FDD;&#x8BC1;&#x4E86;&#x201C; Do &#x65B9;&#x6CD5;&#xFF0C;&#x53EA;&#x4F1A;&#x6267;&#x884C;&#x9996;&#x6B21;&#x88AB;&#x8C03;&#x7528;&#x65F6;&#x4F20;&#x5165;&#x7684;&#x51FD;&#x6570;&#x201D;&#x3002; Do &#x65B9;&#x6CD5;&#x5728;&#x529F;&#x80FD;&#x65B9;&#x9762;&#x7684;&#x4E24;&#x4E2A;&#x7279;&#x70B9; &#x7531;&#x4E8E; Do &#x65B9;&#x6CD5;&#x53EA;&#x4F1A;&#x5728;&#x53C2;&#x6570;&#x51FD;&#x6570;&#x6267;&#x884C;&#x7ED3;&#x675F;&#x4E4B;&#x540E;&#x628A; done &#x5B57;&#x6BB5;&#x7684;&#x503C;&#x53D8;&#x4E3A; 1&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x5982;&#x679C;&#x53C2;&#x6570;&#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x9700;&#x8981;&#x5F88;&#x957F;&#x65F6;&#x95F4;&#x6216;&#x8005;&#x6839;&#x672C;&#x5C31;&#x4E0D;&#x4F1A;&#x7ED3;&#x675F; &#xFF08;&#x6BD4;&#x5982;&#x6267;&#x884C;&#x4E00;&#x4E9B;&#x5B88;&#x62A4;&#x4EFB;&#x52A1;&#xFF09;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x5BFC;&#x81F4;&#x76F8;&#x5173; goroutine &#x7684;&#x540C;&#x65F6;&#x963B;&#x585E; Do &#x65B9;&#x6CD5;&#x5728;&#x53C2;&#x6570;&#x51FD;&#x6570;&#x6267;&#x884C;&#x7ED3;&#x675F;&#x540E;&#xFF0C;&#x5BF9; done &#x5B57;&#x6BB5;&#x7684;&#x8D4B;&#x503C;&#x7528;&#x7684;&#x662F;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x4E14;&#xFF0C;&#x8FD9;&#x4E00;&#x64CD;&#x4F5C;&#x662F;&#x88AB;&#x6302;&#x5728; defer &#x8BED;&#x53E5;&#x4E2D;&#x7684;&#x3002;&#x56E0;&#x6B64;&#xFF0C;&#x4E0D;&#x8BBA;&#x53C2;&#x6570; &#x51FD;&#x6570;&#x7684;&#x6267;&#x884C;&#x4F1A;&#x4EE5;&#x600E;&#x6837;&#x7684;&#x65B9;&#x5F0F;&#x7ED3;&#x675F;&#xFF0C; done &#x5B57;&#x6BB5;&#x7684;&#x503C;&#x90FD;&#x4F1A;&#x53D8;&#x4E3A; 1&#x3002;"},"concurrent/sync_lock.html#context-Context-类型":{"title":"context.Context &#x7C7B;&#x578B;","path":"\\golang-learn\\concurrent\\sync_lock.html#context-Context-类型","body":"&#x4F7F;&#x7528; WaitGroup &#x503C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x6700;&#x597D;&#x7528; &#x5148;&#x7EDF;&#x4E00; Add &#xFF0C;&#x518D;&#x5E76;&#x53D1; Done &#xFF0C;&#x6700;&#x540E; Wait &#x7684;&#x6807;&#x51C6;&#x6A21;&#x5F0F;&#x6765;&#x6784;&#x5EFA;&#x534F;&#x4F5C;&#x6D41;&#x7A0B;&#x3002;&#x5982;&#x679C;&#x5728;&#x8C03;&#x7528; &#x8BE5;&#x503C;&#x7684; Wait &#x65B9;&#x6CD5;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x4E3A;&#x4E86;&#x589E;&#x5927;&#x5176;&#x8BA1;&#x6570;&#x5668;&#x7684;&#x503C;&#xFF0C;&#x800C;&#x5E76;&#x53D1;&#x5730;&#x8C03;&#x7528;&#x8BE5;&#x503C;&#x7684; Add &#x65B9;&#x6CD5;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x5F88;&#x53EF;&#x80FD;&#x4F1A;&#x5F15;&#x53D1; panic&#x3002; &#x4F46;&#x662F; &#x5982;&#x679C;&#xFF0C;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x5728;&#x4E00;&#x5F00;&#x59CB;&#x5C31;&#x786E;&#x5B9A;&#x6267;&#x884C;&#x5B50;&#x4EFB;&#x52A1;&#x7684; goroutine &#x7684;&#x6570;&#x91CF;&#xFF0C;&#x90A3;&#x4E48;&#x4F7F;&#x7528; WaitGroup &#x503C;&#x6765;&#x534F;&#x8C03;&#x5B83;&#x4EEC;&#x548C;&#x5206;&#x53D1;&#x5B50;&#x4EFB; &#x52A1;&#x7684; goroutine &#xFF0C;&#x5C31;&#x662F;&#x6709;&#x4E00;&#x5B9A;&#x98CE;&#x9669;&#x7684; &#x3002;&#x4E00;&#x4E2A;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x662F;&#xFF1A; &#x5206;&#x6279;&#x5730;&#x542F;&#x7528;&#x6267;&#x884C;&#x5B50;&#x4EFB;&#x52A1;&#x7684; goroutine &#x3002; &#x53EA;&#x8981;&#x6211;&#x4EEC;&#x5728;&#x4E25;&#x683C;&#x9075;&#x5FAA;&#x4E0A;&#x8FF0;&#x89C4;&#x5219;&#x7684;&#x524D;&#x63D0;&#x4E0B;&#xFF0C;&#x5206;&#x6279;&#x5730;&#x542F;&#x7528;&#x6267;&#x884C;&#x5B50;&#x4EFB;&#x52A1;&#x7684; goroutine &#xFF0C;&#x5C31;&#x80AF;&#x5B9A;&#x4E0D;&#x4F1A;&#x6709;&#x95EE;&#x9898;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 func coordinateWithWaitGroup () { total := 12 stride := 3 var num int32 fmt.Printf( The number: %d [with sync.WaitGroup]\\n , num) var wg sync.WaitGroup for i := 1 ; i = total; i = i + stride { wg.Add(stride) for j := 0 ; j  stride; j++ { go addNum(&amp;num, i+j, wg.Done) } wg.Wait() } fmt.Println( End. ) } &#x4F7F;&#x7528; context &#x5305;&#x4E2D;&#x7684;&#x7A0B;&#x5E8F;&#x5B9E;&#x4F53;&#xFF0C;&#x5B9E;&#x73B0;&#x4E00;&#x5BF9;&#x591A;&#x7684; goroutine &#x534F;&#x4F5C;&#x6D41;&#x7A0B; &#x7528; context &#x5305;&#x4E2D;&#x7684;&#x51FD;&#x6570;&#x548C; Context &#x7C7B;&#x578B;&#x4F5C;&#x4E3A;&#x5B9E;&#x73B0;&#x5DE5;&#x5177;&#xFF0C;&#x5B9E;&#x73B0; coordinateWithContext &#x7684;&#x51FD;&#x6570;&#x3002;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x5E94;&#x8BE5;&#x5177;&#x6709;&#x4E0A; &#x9762; coordinateWithWaitGroup &#x51FD;&#x6570;&#x76F8;&#x540C;&#x7684;&#x529F;&#x80FD;&#x3002; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 func coordinateWithContext () { \ttotal := 12 \t var num int32 \tfmt.Printf( The number: %d [with context.Context]\\n , num) \tcxt, cancelFunc := context.WithCancel(context.Background()) \t for i := 1 ; i = total; i++ { \t\t go addNum(&amp;num, i, func () { \t\t\t if atomic.LoadInt32(&amp;num) == int32 (total) { \t\t\t\tcancelFunc() \t\t\t} \t\t}) \t} \t-cxt.Done() \tfmt.Println( End. ) } &#x5148;&#x540E;&#x8C03;&#x7528;&#x4E86; context.Background &#x51FD;&#x6570;&#x548C; context.WithCancel &#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x5F97;&#x5230;&#x4E86;&#x4E00;&#x4E2A;&#x53EF;&#x64A4;&#x9500;&#x7684; context.Context &#x7C7B;&#x578B;&#x7684;&#x503C; &#xFF08;&#x7531;&#x53D8;&#x91CF; cxt &#x4EE3;&#x8868;&#xFF09;&#xFF0C;&#x4EE5;&#x53CA;&#x4E00;&#x4E2A; context.CancelFunc &#x7C7B;&#x578B;&#x7684;&#x64A4;&#x9500;&#x51FD;&#x6570;&#xFF08;&#x7531;&#x53D8;&#x91CF; cancelFunc &#x4EE3;&#x8868;&#xFF09;&#x3002; &#x6CE8;&#x610F;&#x6211;&#x7ED9;&#x4E88; addNum &#x51FD;&#x6570;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x503C;&#x3002;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x51FD;&#x6570;&#xFF0C;&#x5176;&#x4E2D;&#x53EA;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x6761; if &#x8BED;&#x53E5;&#x3002;&#x8FD9;&#x6761; if &#x8BED;&#x53E5;&#x4F1A; &#x539F;&#x5B50;&#x5730; &#x52A0;&#x8F7D; num &#x53D8;&#x91CF;&#x7684;&#x503C;&#xFF0C;&#x5E76;&#x5224;&#x65AD;&#x5B83;&#x662F;&#x5426;&#x7B49;&#x4E8E; total &#x53D8;&#x91CF;&#x7684;&#x503C;&#x3002; &#x5982;&#x679C;&#x4E24;&#x4E2A;&#x503C;&#x76F8;&#x7B49;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x8C03;&#x7528; cancelFunc &#x51FD;&#x6570;&#x3002;&#x5176;&#x542B;&#x4E49;&#x662F;&#xFF0C;&#x5982;&#x679C;&#x6240;&#x6709;&#x7684; addNum &#x51FD;&#x6570;&#x90FD;&#x6267;&#x884C;&#x5B8C;&#x6BD5;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x7ACB;&#x5373;&#x901A;&#x77E5;&#x5206;&#x53D1;&#x5B50;&#x4EFB;&#x52A1; &#x7684; goroutine &#x3002; &#x8FD9;&#x91CC;&#x5206;&#x53D1;&#x5B50;&#x4EFB;&#x52A1;&#x7684; goroutine &#xFF0C;&#x5373;&#x4E3A;&#x6267;&#x884C; coordinateWithContext &#x51FD;&#x6570;&#x7684; goroutine &#x3002;&#x5B83;&#x5728;&#x6267;&#x884C;&#x5B8C; for &#x8BED;&#x53E5;&#x540E;&#xFF0C;&#x4F1A; &#x7ACB;&#x5373;&#x8C03;&#x7528; cxt &#x53D8;&#x91CF;&#x7684; Done &#x51FD;&#x6570;&#xFF0C;&#x5E76;&#x8BD5;&#x56FE;&#x9488;&#x5BF9;&#x8BE5;&#x51FD;&#x6570;&#x8FD4;&#x56DE;&#x7684;&#x901A;&#x9053;&#xFF0C;&#x8FDB;&#x884C;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x3002; &#x4E00;&#x65E6; cancelFunc &#x51FD;&#x6570;&#x88AB;&#x8C03;&#x7528;&#xFF0C;&#x9488;&#x5BF9;&#x8BE5;&#x901A;&#x9053;&#x7684;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x5C31;&#x4F1A;&#x9A6C;&#x4E0A;&#x7ED3;&#x675F;&#xFF0C;&#x6240;&#x4EE5;&#xFF0C;&#x8FD9;&#x6837;&#x505A;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x201C;&#x7B49;&#x5F85;&#x6240;&#x6709;&#x7684; addNum &#x51FD;&#x6570;&#x90FD;&#x6267; &#x884C;&#x5B8C;&#x6BD5;&#x201D;&#x7684;&#x529F;&#x80FD;&#x3002; context.Context &#x7C7B;&#x578B; Context &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0; Context &#x503C;&#xFF09;&#x662F;&#x53EF;&#x4EE5;&#x7E41;&#x884D;&#x7684;&#xFF0C;&#x8FD9;&#x610F;&#x5473;&#x7740;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x4E00;&#x4E2A; Context &#x503C;&#x4EA7;&#x751F;&#x51FA;&#x4EFB;&#x610F;&#x4E2A;&#x5B50;&#x503C;&#x3002;&#x8FD9;&#x4E9B;&#x5B50;&#x503C; &#x53EF;&#x4EE5;&#x643A;&#x5E26;&#x5176;&#x7236;&#x503C;&#x7684;&#x5C5E;&#x6027;&#x548C;&#x6570;&#x636E;&#xFF0C;&#x4E5F;&#x53EF;&#x4EE5;&#x54CD;&#x5E94;&#x901A;&#x8FC7;&#x5176;&#x7236;&#x503C;&#x4F20;&#x8FBE;&#x7684;&#x4FE1;&#x53F7;&#x3002; &#x6B63;&#x56E0;&#x4E3A;&#x5982;&#x6B64;&#xFF0C;&#x6240;&#x6709;&#x7684; Context &#x503C;&#x5171;&#x540C;&#x6784;&#x6210;&#x4E86;&#x4E00;&#x9897;&#x4EE3;&#x8868;&#x4E86;&#x4E0A;&#x4E0B;&#x6587;&#x5168;&#x8C8C;&#x7684;&#x6811;&#x5F62;&#x7ED3;&#x6784;&#x3002;&#x8FD9;&#x68F5;&#x6811;&#x7684; &#x6811;&#x6839;&#xFF08;&#x6216;&#x8005;&#x79F0;&#x4E0A;&#x4E0B;&#x6587;&#x6839;&#x8282;&#x70B9;&#xFF09;&#x662F;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF; &#x5728; context &#x5305;&#x4E2D;&#x9884;&#x5B9A;&#x4E49;&#x597D;&#x7684; Context &#x503C; &#xFF0C;&#x5B83;&#x662F; &#x5168;&#x5C40;&#x552F;&#x4E00; &#x7684;&#x3002;&#x901A;&#x8FC7;&#x8C03;&#x7528; context.Background &#x51FD;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x83B7;&#x53D6;&#x5230; &#x5B83;&#xFF08;&#x5728; coordinateWithContext &#x51FD;&#x6570;&#x4E2D;&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x505A;&#x7684;&#xFF09;&#x3002; &#x6CE8;&#x610F;&#x4E00;&#x4E0B;&#xFF0C;&#x8FD9;&#x4E2A; &#x4E0A;&#x4E0B;&#x6587;&#x6839;&#x8282;&#x70B9;&#x4EC5;&#x4EC5;&#x662F;&#x4E00;&#x4E2A;&#x6700;&#x57FA;&#x672C;&#x7684;&#x652F;&#x70B9;&#xFF0C;&#x5B83;&#x4E0D;&#x63D0;&#x4F9B;&#x4EFB;&#x4F55;&#x989D;&#x5916;&#x7684;&#x529F;&#x80FD; &#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;&#x5B83;&#x65E2;&#x4E0D;&#x53EF;&#x4EE5;&#x88AB;&#x64A4;&#x9500;&#xFF08; cancel &#xFF09;&#xFF0C; &#x4E5F;&#x4E0D;&#x80FD;&#x643A;&#x5E26;&#x4EFB;&#x4F55;&#x6570;&#x636E;&#x3002; context &#x5305;&#x4E2D;&#x8FD8;&#x5305;&#x542B;&#x4E86; &#x56DB;&#x4E2A;&#x7528;&#x4E8E;&#x7E41;&#x884D; Context &#x503C;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x5373;&#xFF1A; WithCancel &#x3001; WithDeadline &#x3001; WithTimeout &#x548C; WithValue &#x3002; &#x8FD9;&#x4E9B;&#x51FD;&#x6570;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x7684;&#x7C7B;&#x578B;&#x90FD;&#x662F; context.Context &#xFF0C;&#x800C;&#x540D;&#x79F0;&#x90FD;&#x4E3A; parent &#x3002;&#x987E;&#x540D;&#x601D;&#x4E49;&#xFF0C; &#x8FD9;&#x4E2A;&#x4F4D;&#x7F6E;&#x4E0A;&#x7684;&#x53C2;&#x6570;&#x5BF9;&#x5E94;&#x7684;&#x90FD;&#x662F;&#x5B83;&#x4EEC;&#x5C06;&#x4F1A;&#x4EA7;&#x751F; &#x7684; Context &#x503C;&#x7684;&#x7236;&#x503C; &#x3002; WithCancel &#x51FD;&#x6570;&#x7528;&#x4E8E;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x53EF;&#x64A4;&#x9500;&#x7684; parent &#x7684;&#x5B50;&#x503C; &#x3002; &#x5728; coordinateWithContext &#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#xFF0C;&#x83B7;&#x5F97;&#x4E86;&#x4E00;&#x4E2A;&#x884D;&#x751F;&#x81EA;&#x4E0A;&#x4E0B;&#x6587;&#x6839;&#x8282;&#x70B9;&#x7684; Context &#x503C;&#xFF0C;&#x548C;&#x4E00;&#x4E2A;&#x7528;&#x4E8E;&#x89E6;&#x53D1;&#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x7684;&#x51FD;&#x6570;&#x3002; WithDeadline &#x51FD;&#x6570;&#x548C; WithTimeout &#x51FD;&#x6570;&#x5219;&#x90FD;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x4F1A; &#x5B9A;&#x65F6;&#x64A4;&#x9500; &#x7684; parent &#x7684;&#x5B50;&#x503C;&#x3002;&#x81F3;&#x4E8E; WithValue &#x51FD;&#x6570;&#xFF0C; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x8C03;&#x7528;&#x5B83;&#xFF0C;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x4F1A;&#x643A;&#x5E26;&#x989D;&#x5916;&#x6570;&#x636E;&#x7684; parent &#x7684;&#x5B50;&#x503C;&#x3002; &#x201C;&#x53EF;&#x64A4;&#x9500;&#x7684;&#x201D;&#x5728; context &#x5305;&#x4E2D;&#x4EE3;&#x8868;&#x7740;&#x4EC0;&#x4E48;&#xFF1F;&#x201C;&#x64A4;&#x9500;&#x201D;&#x4E00;&#x4E2A; Context &#x503C;&#x53C8;&#x610F;&#x5473;&#x7740;&#x4EC0;&#x4E48;&#xFF1F; &#x8FD9;&#x9700;&#x8981;&#x4ECE; Context &#x7C7B;&#x578B;&#x7684;&#x58F0;&#x660E;&#x8BB2;&#x8D77;&#x3002;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x4E2D;&#x6709;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x4E0E;&#x201C;&#x64A4;&#x9500;&#x201D;&#x606F;&#x606F;&#x76F8;&#x5173;&#x3002; Done &#x65B9;&#x6CD5;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x7C7B;&#x578B;&#x4E3A; struct{} &#x7684;&#x63A5; &#x6536;&#x901A;&#x9053;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FD9;&#x4E2A;&#x63A5;&#x6536;&#x901A;&#x9053;&#x7684;&#x7528;&#x9014;&#x5E76;&#x4E0D;&#x662F;&#x4F20;&#x9012;&#x5143;&#x7D20;&#x503C;&#xFF0C;&#x800C;&#x662F; &#x8BA9;&#x8C03;&#x7528;&#x65B9;&#x53BB;&#x611F;&#x77E5;&#x201C;&#x64A4;&#x9500;&#x201D;&#x5F53;&#x524D;Context&#x503C;&#x7684;&#x90A3;&#x4E2A;&#x4FE1;&#x53F7; &#x3002; &#x4E00;&#x65E6;&#x5F53;&#x524D;&#x7684; Context &#x503C;&#x88AB;&#x64A4;&#x9500;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x63A5;&#x6536;&#x901A;&#x9053;&#x5C31;&#x4F1A;&#x88AB;&#x7ACB;&#x5373;&#x5173;&#x95ED;&#x3002;&#x6211;&#x4EEC;&#x90FD;&#x77E5;&#x9053;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x672A;&#x5305;&#x542B;&#x4EFB;&#x4F55;&#x5143;&#x7D20;&#x503C;&#x7684;&#x901A;&#x9053;&#x6765;&#x8BF4;&#xFF0C;&#x5B83;&#x7684;&#x5173;&#x95ED;&#x4F1A; &#x4F7F;&#x4EFB;&#x4F55;&#x9488;&#x5BF9;&#x5B83;&#x7684;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#x7ACB;&#x5373;&#x7ED3;&#x675F;&#x3002; &#x6B63;&#x56E0;&#x4E3A;&#x5982;&#x6B64;&#xFF0C;&#x5728; coordinateWithContext &#x51FD;&#x6570;&#x4E2D;&#xFF0C;&#x57FA;&#x4E8E;&#x8C03;&#x7528;&#x8868;&#x8FBE;&#x5F0F; cxt.Done() &#x7684;&#x63A5;&#x6536;&#x64CD;&#x4F5C;&#xFF0C;&#x624D;&#x80FD;&#x591F;&#x8D77;&#x5230;&#x611F;&#x77E5;&#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x7684;&#x4F5C;&#x7528;&#x3002; &#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x662F;&#x5982;&#x4F55;&#x5728;&#x4E0A;&#x4E0B;&#x6587;&#x6811;&#x4E2D;&#x4F20;&#x64AD;&#x7684; context &#x5305;&#x7684; WithCancel &#x51FD;&#x6570;&#x5728;&#x88AB;&#x8C03;&#x7528;&#x540E;&#x4F1A;&#x4EA7;&#x751F;&#x4E24;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x3002;&#x7B2C;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x5C31;&#x662F;&#x90A3;&#x4E2A;&#x53EF;&#x64A4;&#x9500;&#x7684; Context &#x503C;&#xFF0C;&#x800C;&#x7B2C;&#x4E8C;&#x4E2A;&#x7ED3;&#x679C;&#x503C;&#x5219;&#x662F; &#x7528;&#x4E8E;&#x89E6;&#x53D1;&#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x7684;&#x51FD;&#x6570;&#x3002; &#x5728;&#x64A4;&#x9500;&#x51FD;&#x6570;&#x88AB;&#x8C03;&#x7528;&#x4E4B;&#x540E;&#xFF0C;&#x5BF9;&#x5E94;&#x7684; Context &#x503C;&#x4F1A;&#x5148;&#x5173;&#x95ED;&#x5B83;&#x5185;&#x90E8;&#x7684;&#x63A5;&#x6536;&#x901A;&#x9053;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x5B83;&#x7684; Done &#x65B9;&#x6CD5;&#x4F1A;&#x8FD4;&#x56DE;&#x7684;&#x90A3;&#x4E2A;&#x901A;&#x9053;&#x3002; &#x7136;&#x540E;&#xFF0C;&#x5B83;&#x4F1A;&#x5411;&#x5B83;&#x7684;&#x6240;&#x6709;&#x5B50;&#x503C;&#xFF08;&#x6216;&#x8005;&#x8BF4;&#x5B50;&#x8282;&#x70B9;&#xFF09;&#x4F20;&#x8FBE;&#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x3002;&#x8FD9;&#x4E9B;&#x5B50;&#x503C;&#x4F1A;&#x5982;&#x6CD5;&#x70AE;&#x5236;&#xFF0C;&#x628A;&#x64A4;&#x9500;&#x4FE1;&#x53F7;&#x7EE7;&#x7EED;&#x4F20;&#x64AD;&#x4E0B;&#x53BB;&#x3002;&#x6700;&#x540E;&#xFF0C;&#x8FD9;&#x4E2A; Context &#x503C;&#x4F1A; &#x65AD;&#x5F00;&#x5B83;&#x4E0E;&#x5176;&#x7236;&#x503C;&#x4E4B;&#x95F4;&#x7684;&#x5173;&#x8054;&#x3002; &#x901A;&#x8FC7;&#x8C03;&#x7528; context.WithValue &#x51FD;&#x6570;&#x5F97;&#x5230;&#x7684; Context &#x503C;&#x662F;&#x4E0D;&#x53EF;&#x64A4;&#x9500;&#x7684; &#x3002; &#x600E;&#x6837;&#x901A;&#x8FC7; Context &#x503C;&#x643A;&#x5E26;&#x6570;&#x636E; WithValue &#x51FD;&#x6570;&#x5728;&#x4EA7;&#x751F;&#x65B0;&#x7684; Context &#x503C;&#xFF08;&#x4EE5;&#x4E0B;&#x7B80;&#x79F0;&#x542B;&#x6570;&#x636E;&#x7684; Context &#x503C;&#xFF09;&#x7684;&#x65F6;&#x5019;&#x9700;&#x8981;&#x4E09;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5373;&#xFF1A;&#x7236;&#x503C;&#x3001;&#x952E;&#x548C;&#x503C; &#x3002; &#x201C;&#x5B57;&#x5178;&#x5BF9;&#x4E8E;&#x952E;&#x7684;&#x7EA6;&#x675F;&#x201D;&#x7C7B;&#x4F3C;&#xFF0C;&#x8FD9;&#x91CC; &#x952E;&#x7684;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x662F;&#x53EF;&#x5224;&#x7B49; &#x7684;&#x3002; &#x539F;&#x56E0;&#x5F88;&#x7B80;&#x5355;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x4ECE;&#x4E2D;&#x83B7;&#x53D6;&#x6570;&#x636E;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x9700;&#x8981;&#x6839;&#x636E;&#x7ED9;&#x5B9A;&#x7684;&#x952E;&#x6765;&#x67E5;&#x627E;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FD9;&#x79CD; Context &#x503C;&#x5E76;&#x4E0D;&#x662F;&#x7528;&#x5B57;&#x5178;&#x6765;&#x5B58;&#x50A8;&#x952E;&#x548C;&#x503C;&#x7684;&#xFF0C; &#x540E;&#x4E24;&#x8005;&#x53EA;&#x662F;&#x88AB;&#x7B80;&#x5355;&#x5730;&#x5B58;&#x50A8;&#x5728;&#x524D;&#x8005;&#x7684;&#x76F8;&#x5E94;&#x5B57;&#x6BB5;&#x4E2D;&#x800C;&#x5DF2;&#x3002;"},"concurrent/sync_lock.html#临时对象池-sync-Pool":{"title":"&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60; sync.Pool","path":"\\golang-learn\\concurrent\\sync_lock.html#临时对象池-sync-Pool","body":"Go &#x8BED;&#x8A00;&#x6807;&#x51C6;&#x5E93;&#x4E2D;&#x6700;&#x91CD;&#x8981;&#x7684;&#x90A3;&#x51E0;&#x4E2A;&#x540C;&#x6B65;&#x5DE5;&#x5177;&#xFF0C;&#x8FD9;&#x5305;&#x62EC;: &#x4E92;&#x65A5;&#x9501; &#x8BFB;&#x5199;&#x9501; &#x6761;&#x4EF6;&#x53D8;&#x91CF; &#x539F;&#x5B50;&#x64CD;&#x4F5C; sync/atomic.Value sync.Once sync.WaitGroup context.Context Go &#x8BED;&#x8A00;&#x6807;&#x51C6;&#x5E93;&#x4E2D;&#x7684;&#x8FD8;&#x6709;&#x53E6;&#x4E00;&#x4E2A;&#x540C;&#x6B65;&#x5DE5;&#x5177;&#xFF1A; sync.Pool &#x3002; sync.Pool &#x7C7B;&#x578B;&#x53EF;&#x4EE5;&#x88AB;&#x79F0;&#x4E3A;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#xFF0C;&#x5B83;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x88AB;&#x7528;&#x6765;&#x5B58;&#x50A8;&#x4E34;&#x65F6;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x4E0E; Go &#x8BED;&#x8A00;&#x7684;&#x5F88;&#x591A;&#x540C;&#x6B65;&#x5DE5;&#x5177;&#x4E00;&#x6837;&#xFF0C; sync.Pool &#x7C7B;&#x578B;&#x4E5F;&#x5C5E; &#x4E8E;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#xFF0C;&#x5B83;&#x7684;&#x503C;&#x5728;&#x88AB;&#x771F;&#x6B63;&#x4F7F;&#x7528;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x4E0D;&#x5E94;&#x8BE5;&#x518D;&#x88AB;&#x590D;&#x5236;&#x4E86;&#x3002; &#x4E34;&#x65F6;&#x5BF9;&#x8C61; &#x7684;&#x610F;&#x601D;&#x662F;&#xFF1A;&#x4E0D;&#x9700;&#x8981;&#x6301;&#x4E45;&#x4F7F;&#x7528;&#x7684;&#x67D0;&#x4E00;&#x7C7B;&#x503C;&#x3002;&#x8FD9;&#x7C7B;&#x503C;&#x5BF9;&#x4E8E;&#x7A0B;&#x5E8F;&#x6765;&#x8BF4;&#x53EF;&#x6709;&#x53EF;&#x65E0;&#xFF0C;&#x4F46;&#x5982;&#x679C;&#x6709;&#x7684;&#x8BDD;&#x4F1A;&#x660E;&#x663E;&#x66F4;&#x597D;&#x3002;&#x5B83;&#x4EEC;&#x7684;&#x521B;&#x5EFA;&#x548C;&#x9500;&#x6BC1;&#x53EF;&#x4EE5;&#x5728; &#x4EFB;&#x4F55;&#x65F6;&#x5019;&#x53D1;&#x751F;&#xFF0C;&#x5E76;&#x4E14;&#x5B8C;&#x5168;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x5230;&#x7A0B;&#x5E8F;&#x7684;&#x529F;&#x80FD;&#x3002; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x628A;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#x5F53;&#x4F5C;&#x9488;&#x5BF9;&#x67D0;&#x79CD;&#x6570;&#x636E;&#x7684;&#x7F13;&#x5B58;&#x6765;&#x7528; &#x3002; sync.Pool &#x7C7B;&#x578B;&#x53EA;&#x6709;&#x4E24;&#x4E2A;&#x65B9;&#x6CD5;&#x2014;&#x2014; Put &#x548C; Get &#x3002;&#x524D;&#x8005;&#x7528;&#x4E8E;&#x5728;&#x5F53;&#x524D;&#x7684;&#x6C60;&#x4E2D;&#x5B58;&#x653E;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x63A5;&#x53D7;&#x4E00;&#x4E2A; interface{} &#x7C7B;&#x578B;&#x7684;&#x53C2;&#x6570;&#xFF1B; &#x800C;&#x540E;&#x8005;&#x5219;&#x88AB;&#x7528;&#x4E8E;&#x4ECE;&#x5F53;&#x524D;&#x7684;&#x6C60;&#x4E2D;&#x83B7;&#x53D6;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#xFF0C;&#x5B83;&#x4F1A;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; interface{} &#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; &#x66F4;&#x5177;&#x4F53;&#x5730;&#x8BF4;&#xFF0C; &#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x7684; Get &#x65B9;&#x6CD5;&#x53EF;&#x80FD;&#x4F1A;&#x4ECE;&#x5F53;&#x524D;&#x7684;&#x6C60;&#x4E2D;&#x5220;&#x9664;&#x6389;&#x4EFB;&#x4F55;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x8FD9;&#x4E2A;&#x503C;&#x4F5C;&#x4E3A;&#x7ED3;&#x679C;&#x8FD4;&#x56DE;&#x3002;&#x5982;&#x679C;&#x6B64;&#x65F6;&#x5F53;&#x524D;&#x7684;&#x6C60;&#x4E2D;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x503C;&#xFF0C; &#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x5C31;&#x4F1A;&#x4F7F;&#x7528;&#x5F53;&#x524D;&#x6C60;&#x7684; New &#x5B57;&#x6BB5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x503C;&#xFF0C;&#x5E76;&#x76F4;&#x63A5;&#x5C06;&#x5176;&#x8FD4;&#x56DE; &#x3002; sync.Pool &#x7C7B;&#x578B;&#x7684; New &#x5B57;&#x6BB5;&#x4EE3;&#x8868;&#x7740;&#x521B;&#x5EFA;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x7684;&#x51FD;&#x6570;&#x3002;&#x5B83;&#x7684;&#x7C7B;&#x578B;&#x662F;&#x6CA1;&#x6709;&#x53C2;&#x6570;&#x4F46;&#x6709;&#x552F;&#x4E00;&#x7ED3;&#x679C;&#x7684;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#xFF0C;&#x5373;&#xFF1A; func() interface{} &#x3002; &#x521D;&#x59CB;&#x5316;&#x8FD9;&#x4E2A;&#x6C60;&#x7684;&#x65F6;&#x5019;&#x6700;&#x597D;&#x7ED9;&#x5B9A;&#x5B83; &#x3002; &#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x662F; Get &#x65B9;&#x6CD5;&#x6700;&#x540E;&#x7684;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x83B7;&#x53D6;&#x624B;&#x6BB5;&#x3002; Get &#x65B9;&#x6CD5;&#x5982;&#x679C;&#x5230;&#x4E86;&#x6700;&#x540E;&#xFF0C;&#x4ECD;&#x7136;&#x65E0;&#x6CD5;&#x83B7;&#x53D6;&#x5230;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x90A3;&#x4E48;&#x5C31;&#x4F1A;&#x8C03;&#x7528;&#x8BE5;&#x51FD;&#x6570;&#x3002;&#x8BE5;&#x51FD;&#x6570;&#x7684;&#x7ED3; &#x503C;&#x5E76;&#x4E0D;&#x4F1A;&#x88AB;&#x5B58;&#x5165;&#x5F53;&#x524D;&#x7684;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#x4E2D;&#xFF0C;&#x800C;&#x662F;&#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#x7ED9; Get &#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528;&#x65B9;&#x3002; &#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#x4E2D;&#x5B58;&#x50A8;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x503C;&#x90FD;&#x5E94;&#x8BE5;&#x662F;&#x72EC;&#x7ACB;&#x7684;&#x3001;&#x5E73;&#x7B49;&#x7684;&#x548C;&#x53EF;&#x91CD;&#x7528;&#x7684; &#x3002; sync.Pool &#x7684;&#x5B9A;&#x4F4D;&#x4E0D;&#x662F;&#x505A;&#x7C7B;&#x4F3C;&#x8FDE;&#x63A5;&#x6C60;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x5B83;&#x7684;&#x7528;&#x9014;&#x4EC5;&#x4EC5;&#x662F;&#x589E;&#x52A0; &#x5BF9;&#x8C61;&#x91CD;&#x7528;&#x7684;&#x51E0;&#x7387;&#xFF0C;&#x51CF;&#x5C11; gc &#x7684;&#x8D1F;&#x62C5;&#x3002;&#x56E0;&#x4E3A; gc &#x5E26;&#x6765;&#x4E86;&#x7F16;&#x7A0B;&#x7684;&#x65B9;&#x4FBF;&#x4F46;&#x540C;&#x65F6;&#x4E5F;&#x589E;&#x52A0;&#x4E86;&#x8FD0;&#x884C;&#x65F6;&#x5F00;&#x9500;&#xFF0C;&#x4F7F;&#x7528;&#x4E0D;&#x5F53;&#x751A;&#x81F3;&#x4F1A;&#x4E25;&#x91CD;&#x5F71;&#x54CD;&#x7A0B;&#x5E8F;&#x7684;&#x6027;&#x80FD;&#x3002;&#x56E0;&#x6B64;&#x6027;&#x80FD; &#x8981;&#x6C42;&#x9AD8;&#x7684;&#x573A;&#x666F;&#x4E0D;&#x80FD;&#x4EFB;&#x610F;&#x4EA7;&#x751F;&#x592A;&#x591A;&#x7684;&#x5783;&#x573E;&#x3002;&#x5982;&#x4F55;&#x89E3;&#x51B3;&#x5462;&#xFF1F;&#x90A3;&#x5C31;&#x662F;&#x8981;&#x91CD;&#x7528;&#x5BF9;&#x8C61;&#x4E86;&#x3002; &#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x597D;&#x7684;&#x4F8B;&#x5B50;&#x662F; fmt &#x5305;&#xFF0C; fmt &#x5305;&#x603B;&#x662F;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E00;&#x4E9B; []byte &#x4E4B;&#x7C7B;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;golang &#x5EFA;&#x7ACB;&#x4E86;&#x4E00;&#x4E2A;&#x4E34;&#x65F6;&#x5BF9;&#x8C61;&#x6C60;&#xFF0C;&#x5B58;&#x653E;&#x7740;&#x8FD9;&#x4E9B;&#x5BF9;&#x8C61;&#xFF0C; &#x5982;&#x679C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E00;&#x4E2A; []byte &#xFF0C;&#x5C31;&#x53BB; Pool &#x91CC;&#x9762;&#x62FF;&#xFF0C;&#x5982;&#x679C;&#x62FF;&#x4E0D;&#x5230;&#x5C31;&#x5206;&#x914D;&#x4E00;&#x4EFD;&#x3002;&#x8FD9;&#x6BD4;&#x8D77;&#x4E0D;&#x505C;&#x751F;&#x6210;&#x65B0;&#x7684; []byte &#xFF0C;&#x7528;&#x5B8C;&#x4E86;&#x518D;&#x7B49;&#x5F85; gc &#x56DE;&#x6536; &#x6765;&#x8981;&#x9AD8;&#x6548;&#x5F97;&#x591A;&#x3002; sync.Pool &#x7F13;&#x5B58;&#x5BF9;&#x8C61;&#x7684;&#x671F;&#x9650;&#x662F;&#x5F88;&#x8BE1;&#x5F02;&#x7684;&#xFF0C;&#x5148;&#x770B;&#x4E00;&#x4E0B; src/pkg/sync/pool.go &#x91CC;&#x9762;&#x7684;&#x4E00;&#x6BB5;&#x5B9E;&#x73B0;&#x4EE3;&#x7801;&#xFF1A; 1 2 3 func init () { runtime_registerPoolCleanup(poolCleanup) } &#x53EF;&#x4EE5;&#x770B;&#x5230; pool &#x5305;&#x5728; init &#x7684;&#x65F6;&#x5019;&#x6CE8;&#x518C;&#x4E86;&#x4E00;&#x4E2A; poolCleanup &#x51FD;&#x6570;&#xFF0C;&#x5B83;&#x4F1A;&#x6E05;&#x9664;&#x6240;&#x6709;&#x7684; pool &#x91CC;&#x9762;&#x7684;&#x6240;&#x6709;&#x7F13;&#x5B58;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x8BE5;&#x51FD;&#x6570;&#x6CE8;&#x518C;&#x8FDB;&#x53BB; &#x4E4B;&#x540E;&#x4F1A;&#x5728;&#x6BCF;&#x6B21; gc &#x4E4B;&#x524D;&#x90FD;&#x4F1A;&#x8C03;&#x7528;&#xFF0C;&#x56E0;&#x6B64; sync.Pool &#x7F13;&#x5B58;&#x7684;&#x671F;&#x9650;&#x53EA;&#x662F;&#x4E24;&#x6B21;gc&#x4E4B;&#x95F4;&#x8FD9;&#x6BB5;&#x65F6;&#x95F4; &#x3002;"},"concurrent/sync_lock.html#sync-Map":{"title":"sync.Map","path":"\\golang-learn\\concurrent\\sync_lock.html#sync-Map","body":"Go &#x8BED;&#x8A00;&#x81EA;&#x5E26;&#x7684;&#x5B57;&#x5178;&#x7C7B;&#x578B; map &#x5E76;&#x4E0D;&#x662F;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#x3002;&#x6362;&#x53E5;&#x8BDD;&#x8BF4;&#xFF0C;&#x5728;&#x540C;&#x4E00;&#x65F6;&#x95F4;&#x6BB5;&#x5185;&#xFF0C;&#x8BA9;&#x4E0D;&#x540C; goroutine &#x4E2D;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x5BF9;&#x540C;&#x4E00;&#x4E2A;&#x5B57;&#x5178;&#x8FDB;&#x884C;&#x8BFB;&#x5199;&#x64CD; &#x4F5C;&#x662F;&#x4E0D;&#x5B89;&#x5168;&#x7684;&#x3002; Go &#x8BED;&#x8A00;&#x5B98;&#x65B9;&#x7EC8;&#x4E8E;&#x5728; 2017 &#x5E74;&#x53D1;&#x5E03;&#x7684; Go 1.9 &#x4E2D;&#x6B63;&#x5F0F;&#x52A0;&#x5165;&#x4E86;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x7684;&#x5B57;&#x5178;&#x7C7B;&#x578B; sync.Map &#x3002; &#x4F7F;&#x7528; sync.Map &#x53EF;&#x4EE5;&#x663E;&#x8457;&#x5730;&#x51CF;&#x5C11;&#x9501;&#x7684;&#x4E89;&#x7528;&#x3002; sync.Map &#x672C;&#x8EAB;&#x867D;&#x7136;&#x4E5F;&#x7528;&#x5230;&#x4E86;&#x9501;&#xFF0C;&#x4F46;&#x662F;&#xFF0C;&#x5B83;&#x5176;&#x5B9E;&#x5728;&#x5C3D;&#x53EF;&#x80FD;&#x5730;&#x907F;&#x514D;&#x4F7F;&#x7528;&#x9501;&#x3002; &#x4F7F;&#x7528;&#x9501;&#x5C31;&#x610F;&#x5473;&#x7740;&#x8981;&#x628A;&#x4E00;&#x4E9B;&#x5E76;&#x53D1;&#x7684;&#x64CD;&#x4F5C;&#x5F3A;&#x5236;&#x4E32;&#x884C;&#x5316;&#x3002;&#x8FD9;&#x5F80;&#x5F80;&#x4F1A;&#x964D;&#x4F4E;&#x7A0B;&#x5E8F;&#x7684;&#x6027;&#x80FD;&#xFF0C;&#x5C24;&#x5176;&#x662F;&#x5728;&#x8BA1;&#x7B97;&#x673A;&#x62E5;&#x6709;&#x591A;&#x4E2A; CPU &#x6838;&#x5FC3;&#x7684;&#x60C5;&#x51B5;&#x4E0B; &#x3002; &#x7531;&#x4E8E; &#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#x7684;&#x5B58;&#x50A8;&#x4ECB;&#x8D28;&#x6B63;&#x662F;&#x539F;&#x751F;&#x5B57;&#x5178;&#xFF0C;&#x53C8;&#x56E0;&#x4E3A;&#x5B83;&#x4F7F;&#x7528;&#x7684;&#x539F;&#x751F;&#x5B57;&#x5178;&#x952E;&#x7C7B;&#x578B;&#x4E5F;&#x662F;&#x53EF;&#x4EE5;&#x5305;&#x7F57;&#x4E07;&#x8C61;&#x7684; interface{} &#xFF0C;&#x6240;&#x4EE5;&#xFF0C; &#x6211;&#x4EEC;&#x7EDD;&#x5BF9;&#x4E0D;&#x80FD;&#x5E26;&#x7740;&#x4EFB;&#x4F55;&#x5B9E;&#x9645;&#x7C7B;&#x578B;&#x4E3A;&#x51FD;&#x6570;&#x7C7B;&#x578B;&#x3001;&#x5B57;&#x5178;&#x7C7B;&#x578B;&#x6216;&#x5207;&#x7247;&#x7C7B;&#x578B;&#x7684;&#x952E;&#x503C;&#x53BB;&#x64CD;&#x4F5C;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178; &#x3002; &#x56E0;&#x4E3A; &#x8FD9;&#x4E9B;&#x952E;&#x503C;&#x7684;&#x5B9E;&#x9645;&#x7C7B;&#x578B;&#x53EA;&#x6709;&#x5728;&#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#x624D;&#x80FD;&#x591F;&#x786E;&#x5B9A;&#xFF0C;&#x6240;&#x4EE5; Go &#x8BED;&#x8A00;&#x7F16;&#x8BD1;&#x5668;&#x662F;&#x65E0;&#x6CD5;&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x5BF9;&#x5B83;&#x4EEC;&#x8FDB;&#x884C;&#x68C0;&#x67E5;&#x7684;&#xFF0C;&#x4E0D;&#x6B63;&#x786E;&#x7684;&#x952E;&#x503C;&#x5B9E;&#x9645;&#x7C7B; &#x578B;&#x80AF;&#x5B9A;&#x4F1A;&#x5F15;&#x53D1; panic &#x3002; &#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x5728;&#x8FD9;&#x91CC;&#x9996;&#x5148;&#x8981;&#x505A;&#x7684;&#x4E00;&#x4EF6;&#x4E8B;&#x5C31;&#x662F;&#xFF1A;&#x4E00;&#x5B9A;&#x4E0D;&#x8981;&#x8FDD;&#x53CD;&#x4E0A;&#x8FF0;&#x89C4;&#x5219;&#x3002;&#x6211;&#x4EEC;&#x5E94;&#x8BE5;&#x5728;&#x6BCF;&#x6B21;&#x64CD;&#x4F5C;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x90FD;&#x53BB;&#x663E;&#x5F0F;&#x5730;&#x68C0;&#x67E5;&#x952E;&#x503C;&#x7684;&#x5B9E;&#x9645; &#x7C7B;&#x578B;&#x3002;&#x65E0;&#x8BBA;&#x662F;&#x5B58;&#x3001;&#x53D6;&#x8FD8;&#x662F;&#x5220;&#xFF0C;&#x90FD;&#x5E94;&#x8BE5;&#x5982;&#x6B64; &#x3002; &#x66F4;&#x597D;&#x7684;&#x505A;&#x6CD5;&#x662F;&#xFF0C;&#x628A;&#x9488;&#x5BF9;&#x540C;&#x4E00;&#x4E2A;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x7684;&#x8FD9;&#x51E0;&#x79CD;&#x64CD;&#x4F5C;&#x90FD;&#x96C6;&#x4E2D;&#x8D77;&#x6765;&#xFF0C;&#x7136;&#x540E;&#x7EDF;&#x4E00;&#x5730;&#x7F16;&#x5199;&#x68C0;&#x67E5;&#x4EE3;&#x7801;&#x3002;&#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x628A;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x5C01;&#x88C5;&#x5728;&#x4E00; &#x4E2A;&#x7ED3;&#x6784;&#x4F53;&#x7C7B;&#x578B;&#x4E2D;&#xFF0C;&#x5F80;&#x5F80;&#x662F;&#x4E00;&#x4E2A;&#x5F88;&#x597D;&#x7684;&#x9009;&#x62E9; &#x3002;&#x5982;&#x679C;&#x4F60;&#x5B9E;&#x5728;&#x62FF;&#x4E0D;&#x51C6;&#xFF0C;&#x90A3;&#x4E48;&#x53EF;&#x4EE5;&#x5148;&#x901A;&#x8FC7;&#x8C03;&#x7528; reflect.TypeOf &#x51FD;&#x6570;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x952E;&#x503C;&#x5BF9;&#x5E94;&#x7684;&#x53CD;&#x5C04;&#x7C7B; &#x578B;&#x503C;&#xFF08;&#x5373;&#xFF1A; reflect.Type &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF09;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x8C03;&#x7528;&#x8FD9;&#x4E2A;&#x503C;&#x7684; Comparable &#x65B9;&#x6CD5;&#xFF0C;&#x5F97;&#x5230;&#x786E;&#x5207;&#x7684;&#x5224;&#x65AD;&#x7ED3;&#x679C;&#x3002; &#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x5982;&#x4F55;&#x505A;&#x5230;&#x5C3D;&#x91CF;&#x907F;&#x514D;&#x4F7F;&#x7528;&#x9501; sync.Map &#x7C7B;&#x578B;&#x5728;&#x5185;&#x90E8;&#x4F7F;&#x7528;&#x4E86; &#x5927;&#x91CF;&#x7684;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x6765;&#x5B58;&#x53D6;&#x952E;&#x548C;&#x503C;&#xFF0C;&#x5E76;&#x4F7F;&#x7528;&#x4E86;&#x4E24;&#x4E2A;&#x539F;&#x751F;&#x7684; map &#x4F5C;&#x4E3A;&#x5B58;&#x50A8;&#x4ECB;&#x8D28; &#x3002; &#x5176;&#x4E2D;&#x4E00;&#x4E2A;&#x539F;&#x751F; map &#x88AB;&#x5B58;&#x5728;&#x4E86; sync.Map &#x7684; read &#x5B57;&#x6BB5;&#x4E2D;&#xFF0C;&#x8BE5;&#x5B57;&#x6BB5;&#x662F; sync/atomic.Value &#x7C7B;&#x578B;&#x7684;&#x3002;&#x7B80;&#x79F0;&#x5B83;&#x4E3A; &#x53EA;&#x8BFB;&#x5B57;&#x5178; &#x3002; &#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x867D;&#x7136;&#x4E0D;&#x4F1A;&#x589E;&#x51CF;&#x5176;&#x4E2D;&#x7684;&#x952E;&#xFF0C;&#x4F46;&#x5374;&#x5141;&#x8BB8;&#x53D8;&#x66F4;&#x5176;&#x4E2D;&#x7684;&#x952E;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x503C; &#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x5B83;&#x5E76;&#x4E0D;&#x662F;&#x4F20;&#x7EDF;&#x610F;&#x4E49;&#x4E0A;&#x7684;&#x5FEB;&#x7167;&#xFF0C;&#x5B83;&#x7684;&#x53EA;&#x8BFB;&#x7279;&#x6027;&#x53EA;&#x662F;&#x5BF9;&#x4E8E;&#x5176;&#x4E2D;&#x952E; &#x7684;&#x96C6;&#x5408;&#x800C;&#x8A00;&#x7684;&#x3002; &#x7531; read &#x5B57;&#x6BB5;&#x7684;&#x7C7B;&#x578B;&#x53EF;&#x77E5;&#xFF0C; sync.Map &#x5728;&#x66FF;&#x6362;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x7684;&#x65F6;&#x5019;&#x6839;&#x672C;&#x7528;&#x4E0D;&#x7740;&#x9501;&#x3002;&#x53E6;&#x5916;&#xFF0C;&#x8FD9;&#x4E2A;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x5728;&#x5B58;&#x50A8;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8FD8;&#x5728;&#x503C;&#x4E4B;&#x4E0A; &#x5C01;&#x88C5;&#x4E86;&#x4E00;&#x5C42;&#x3002; &#x5B83;&#x5148;&#x628A;&#x503C;&#x8F6C;&#x6362;&#x4E3A;&#x4E86; unsafe.Pointer &#x7C7B;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x7136;&#x540E;&#x518D;&#x628A;&#x540E;&#x8005;&#x5C01;&#x88C5;&#xFF0C;&#x5E76;&#x50A8;&#x5B58;&#x5728;&#x5176;&#x4E2D;&#x7684;&#x539F;&#x751F;&#x5B57;&#x5178;&#x4E2D;&#x3002;&#x5982;&#x6B64;&#x4E00;&#x6765;&#xFF0C;&#x5728;&#x53D8;&#x66F4;&#x67D0;&#x4E2A;&#x952E;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x503C; &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5C31;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x539F;&#x5B50;&#x64CD;&#x4F5C;&#x4E86;&#x3002; sync.Map &#x4E2D;&#x7684;&#x53E6;&#x4E00;&#x4E2A;&#x539F;&#x751F;&#x5B57;&#x5178;&#x7531;&#x5B83;&#x7684; dirty &#x5B57;&#x6BB5;&#x4EE3;&#x8868;&#x3002;&#x5B83;&#x5B58;&#x50A8;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x65B9;&#x5F0F;&#x4E0E; read &#x5B57;&#x6BB5;&#x4E2D;&#x7684;&#x539F;&#x751F;&#x5B57;&#x5178;&#x4E00;&#x81F4;&#xFF0C;&#x5B83;&#x7684;&#x952E;&#x7C7B;&#x578B; &#x4E5F;&#x662F; interface{} &#xFF0C;&#x5E76;&#x4E14;&#x540C;&#x6837;&#x662F;&#x628A;&#x503C;&#x5148;&#x505A;&#x8F6C;&#x6362;&#x548C;&#x5C01;&#x88C5;&#x540E;&#x518D;&#x8FDB;&#x884C;&#x50A8;&#x5B58;&#x7684;&#x3002;&#x79F0;&#x4E3A; &#x810F;&#x5B57;&#x5178; &#x3002; &#x810F;&#x5B57;&#x5178;&#x548C;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x5982;&#x679C;&#x90FD;&#x5B58;&#x6709;&#x540C;&#x4E00;&#x4E2A;&#x952E;&#x503C;&#x5BF9;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x91CC;&#x7684;&#x4E24;&#x4E2A;&#x952E;&#x6307;&#x7684;&#x80AF;&#x5B9A;&#x662F;&#x540C;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x503C;&#xFF0C;&#x5BF9;&#x4E8E;&#x4E24;&#x4E2A;&#x503C;&#x6765;&#x8BF4;&#x4E5F;&#x662F;&#x5982;&#x6B64;&#x3002;&#x6B63;&#x5982;&#x524D;&#x6587;&#x6240;&#x8FF0;&#xFF0C; &#x8FD9;&#x4E24;&#x4E2A;&#x5B57;&#x5178;&#x5728;&#x5B58;&#x50A8;&#x952E;&#x548C;&#x503C;&#x7684;&#x65F6;&#x5019;&#x90FD;&#x53EA;&#x4F1A;&#x5B58;&#x5165;&#x5B83;&#x4EEC;&#x7684;&#x67D0;&#x4E2A;&#x6307;&#x9488;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x57FA;&#x672C;&#x503C;&#x3002; sync.Map &#x5728;&#x67E5;&#x627E;&#x6307;&#x5B9A;&#x7684;&#x952E;&#x6240;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x603B;&#x4F1A;&#x5148;&#x53BB;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#x5BFB;&#x627E;&#xFF0C;&#x5E76;&#x4E0D;&#x9700;&#x8981;&#x9501;&#x5B9A;&#x4E92;&#x65A5;&#x9501;&#x3002;&#x53EA;&#x6709;&#x5F53;&#x786E;&#x5B9A; &#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#x6CA1;&#x6709;&#xFF0C;&#x4F46;&#x810F; &#x5B57;&#x5178;&#x4E2D;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x8FD9;&#x4E2A;&#x952E; &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x624D;&#x4F1A;&#x5728;&#x9501;&#x7684;&#x4FDD;&#x62A4;&#x4E0B;&#x53BB;&#x8BBF;&#x95EE;&#x810F;&#x5B57;&#x5178;&#x3002; &#x76F8;&#x5BF9;&#x5E94;&#x7684;&#xFF0C; sync.Map &#x5728;&#x5B58;&#x50A8;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EA;&#x8981;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#x5DF2;&#x5B58;&#x6709;&#x8FD9;&#x4E2A;&#x952E;&#xFF0C;&#x5E76;&#x4E14;&#x8BE5;&#x952E;&#x503C;&#x5BF9;&#x672A;&#x88AB;&#x6807;&#x8BB0;&#x4E3A;&#x201C;&#x5DF2;&#x5220;&#x9664;&#x201D;&#xFF0C;&#x5C31;&#x4F1A;&#x628A;&#x65B0;&#x503C;&#x5B58;&#x5230;&#x91CC;&#x9762;&#x5E76; &#x76F4;&#x63A5;&#x8FD4;&#x56DE;&#xFF0C;&#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4E0B;&#x4E5F;&#x4E0D;&#x9700;&#x8981;&#x7528;&#x5230;&#x9501;&#x3002; &#x5426;&#x5219;&#xFF0C;&#x5B83;&#x624D;&#x4F1A;&#x5728;&#x9501;&#x7684;&#x4FDD;&#x62A4;&#x4E0B;&#x628A;&#x952E;&#x503C;&#x5BF9;&#x5B58;&#x50A8;&#x5230;&#x810F;&#x5B57;&#x5178;&#x4E2D;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x8BE5;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x201C;&#x5DF2;&#x5220;&#x9664;&#x201D;&#x6807;&#x8BB0;&#x4F1A;&#x88AB;&#x62B9;&#x53BB;&#x3002; &#x53EA;&#x6709;&#x5F53;&#x4E00;&#x4E2A;&#x952E;&#x503C;&#x5BF9;&#x5E94;&#x8BE5;&#x88AB;&#x5220;&#x9664;&#xFF0C;&#x4F46;&#x5374;&#x4ECD;&#x7136;&#x5B58;&#x5728;&#x4E8E;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x624D;&#x4F1A;&#x88AB;&#x7528;&#x6807;&#x8BB0;&#x4E3A;&#x201C;&#x5DF2;&#x5220;&#x9664;&#x201D;&#x7684;&#x65B9;&#x5F0F;&#x8FDB;&#x884C;&#x903B;&#x8F91;&#x5220;&#x9664;&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x76F4;&#x63A5;&#x88AB;&#x7269;&#x7406;&#x5220;&#x9664;&#x3002; &#x8FD9;&#x79CD;&#x60C5;&#x51B5;&#x4F1A;&#x5728;&#x91CD;&#x5EFA;&#x810F;&#x5B57;&#x5178;&#x4EE5;&#x540E;&#x7684;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5185;&#x51FA;&#x73B0;&#x3002;&#x4E0D;&#x8FC7;&#xFF0C;&#x8FC7;&#x4E0D;&#x4E86;&#x591A;&#x4E45;&#xFF0C;&#x5B83;&#x4EEC;&#x5C31;&#x4F1A;&#x88AB;&#x771F;&#x6B63;&#x5220;&#x9664;&#x6389;&#x3002;&#x5728;&#x67E5;&#x627E;&#x548C;&#x904D;&#x5386;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5DF2;&#x88AB;&#x903B; &#x8F91;&#x5220;&#x9664;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x6C38;&#x8FDC;&#x4F1A;&#x88AB;&#x65E0;&#x89C6;&#x3002; &#x6700;&#x540E;&#xFF0C; sync.Map &#x4F1A;&#x628A;&#x8BE5;&#x952E;&#x503C;&#x5BF9;&#x4E2D;&#x6307;&#x5411;&#x503C;&#x7684;&#x90A3;&#x4E2A;&#x6307;&#x9488;&#x7F6E;&#x4E3A; nil &#xFF0C;&#x8FD9;&#x662F;&#x53E6;&#x4E00;&#x79CD;&#x903B;&#x8F91;&#x5220;&#x9664;&#x7684;&#x65B9;&#x5F0F;&#x3002; &#x9664;&#x6B64;&#x4E4B;&#x5916;&#xFF0C;&#x8FD8;&#x6709;&#x4E00;&#x4E2A;&#x7EC6;&#x8282;&#x9700;&#x8981;&#x6CE8;&#x610F;&#xFF0C;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x548C;&#x810F;&#x5B57;&#x5178;&#x4E4B;&#x95F4;&#x662F;&#x4F1A;&#x4E92;&#x76F8;&#x8F6C;&#x6362;&#x7684;&#x3002;&#x5728;&#x810F;&#x5B57;&#x5178;&#x4E2D;&#x67E5;&#x627E;&#x952E;&#x503C;&#x5BF9;&#x6B21;&#x6570;&#x8DB3;&#x591F;&#x591A;&#x7684;&#x65F6;&#x5019;&#xFF0C; sync.Map &#x4F1A;&#x628A; &#x810F;&#x5B57;&#x5178;&#x76F4;&#x63A5;&#x4F5C;&#x4E3A;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#xFF0C;&#x4FDD;&#x5B58;&#x5728;&#x5B83;&#x7684; read &#x5B57;&#x6BB5;&#x4E2D;&#xFF0C;&#x7136;&#x540E;&#x628A;&#x4EE3;&#x8868;&#x810F;&#x5B57;&#x5178;&#x7684; dirty &#x5B57;&#x6BB5;&#x7684;&#x503C;&#x7F6E;&#x4E3A; nil &#x3002; &#x5728;&#x8FD9;&#x4E4B;&#x540E;&#xFF0C;&#x4E00;&#x65E6;&#x518D;&#x6709;&#x65B0;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x5B58;&#x5165;&#xFF0C;&#x5B83;&#x5C31;&#x4F1A;&#x4F9D;&#x636E;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x53BB;&#x91CD;&#x5EFA;&#x810F;&#x5B57;&#x5178;&#x3002;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x4F1A;&#x628A;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#x5DF2;&#x88AB;&#x903B;&#x8F91;&#x5220;&#x9664;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x8FC7;&#x6EE4;&#x6389;&#x3002; &#x7406;&#x6240;&#x5F53;&#x7136;&#xFF0C;&#x8FD9;&#x4E9B;&#x8F6C;&#x6362;&#x64CD;&#x4F5C;&#x80AF;&#x5B9A;&#x90FD;&#x9700;&#x8981;&#x5728;&#x9501;&#x7684;&#x4FDD;&#x62A4;&#x4E0B;&#x8FDB;&#x884C;&#x3002; sync.Map &#x7684;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x548C;&#x810F;&#x5B57;&#x5178;&#x4E2D;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x96C6;&#x5408;&#x5E76;&#x4E0D;&#x662F;&#x5B9E;&#x65F6;&#x540C;&#x6B65;&#x7684;&#xFF0C;&#x5B83;&#x4EEC;&#x5728;&#x67D0;&#x4E9B;&#x65F6;&#x95F4;&#x6BB5;&#x5185;&#x53EF;&#x80FD;&#x4F1A;&#x6709;&#x4E0D;&#x540C; &#x3002; &#x53EF;&#x4EE5;&#x770B;&#x51FA;&#xFF0C;&#x5728;&#x8BFB;&#x64CD;&#x4F5C;&#x6709;&#x5F88;&#x591A;&#x4F46;&#x5199;&#x64CD;&#x4F5C;&#x5374;&#x5F88;&#x5C11;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x5E76;&#x53D1;&#x5B89;&#x5168;&#x5B57;&#x5178;&#x7684;&#x6027;&#x80FD;&#x5F80;&#x5F80;&#x4F1A;&#x66F4;&#x597D;&#x3002;&#x5728;&#x51E0;&#x4E2A;&#x5199;&#x64CD;&#x4F5C;&#x5F53;&#x4E2D;&#xFF0C;&#x65B0;&#x589E;&#x952E;&#x503C;&#x5BF9;&#x7684;&#x64CD;&#x4F5C;&#x5BF9;&#x5E76;&#x53D1;&#x5B89; &#x5168;&#x5B57;&#x5178;&#x7684;&#x6027;&#x80FD;&#x5F71;&#x54CD;&#x662F;&#x6700;&#x5927;&#x7684;&#xFF0C;&#x5176;&#x6B21;&#x662F;&#x5220;&#x9664;&#x64CD;&#x4F5C;&#xFF0C;&#x6700;&#x540E;&#x624D;&#x662F;&#x4FEE;&#x6539;&#x64CD;&#x4F5C;&#x3002; &#x5982;&#x679C;&#x88AB;&#x64CD;&#x4F5C;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x4E8E; sync.Map &#x7684;&#x53EA;&#x8BFB;&#x5B57;&#x5178;&#x4E2D;&#xFF0C;&#x5E76;&#x4E14;&#x6CA1;&#x6709;&#x88AB;&#x903B;&#x8F91;&#x5220;&#x9664;&#xFF0C;&#x90A3;&#x4E48;&#x4FEE;&#x6539;&#x5B83;&#x5E76;&#x4E0D;&#x4F1A;&#x4F7F;&#x7528;&#x5230;&#x9501;&#xFF0C;&#x5BF9;&#x5176;&#x6027;&#x80FD;&#x7684;&#x5F71;&#x54CD;&#x5C31;&#x4F1A;&#x5F88;&#x5C0F;&#x3002;"},"concurrent/sync_lock.html#竞争检查器":{"title":"&#x7ADE;&#x4E89;&#x68C0;&#x67E5;&#x5668;","path":"\\golang-learn\\concurrent\\sync_lock.html#竞争检查器","body":"&#x5728; go build &#xFF0C; go run &#x6216;&#x8005; go test &#x547D;&#x4EE4;&#x540E;&#x9762;&#x52A0;&#x4E0A; -race &#xFF0C;&#x5C31;&#x4F1A;&#x4F7F;&#x7F16;&#x8BD1;&#x5668;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x7684;&#x201C;&#x4FEE;&#x6539;&#x201D;&#x7248;&#x3002; &#x4F1A;&#x8BB0;&#x5F55;&#x4E0B;&#x6BCF;&#x4E00;&#x4E2A;&#x8BFB;&#x6216;&#x8005;&#x5199;&#x5171;&#x4EAB;&#x53D8;&#x91CF;&#x7684; goroutine &#x7684;&#x8EAB;&#x4EFD;&#x4FE1;&#x606F;&#x3002;&#x8BB0;&#x5F55;&#x4E0B;&#x6240;&#x6709;&#x7684;&#x540C;&#x6B65;&#x4E8B;&#x4EF6;&#xFF0C;&#x6BD4;&#x5982; go &#x8BED;&#x53E5;&#xFF0C; channel &#x64CD;&#x4F5C;&#xFF0C; &#x4EE5;&#x53CA;&#x5BF9; (*sync.Mutex).Lock &#xFF0C; (*sync.WaitGroup).Wait &#x7B49;&#x7B49;&#x7684;&#x8C03;&#x7528;&#x3002; &#x7531;&#x4E8E;&#x9700;&#x8981;&#x989D;&#x5916;&#x7684;&#x8BB0;&#x5F55;&#xFF0C;&#x56E0;&#x6B64;&#x6784;&#x5EFA;&#x65F6;&#x52A0;&#x4E86;&#x7ADE;&#x4E89;&#x68C0;&#x6D4B;&#x7684;&#x7A0B;&#x5E8F;&#x8DD1;&#x8D77;&#x6765;&#x4F1A;&#x6162;&#x4E00;&#x4E9B;&#xFF0C;&#x4E14;&#x9700;&#x8981;&#x66F4;&#x5927;&#x7684;&#x5185;&#x5B58;&#xFF0C;&#x5373;&#x4F7F;&#x662F;&#x8FD9;&#x6837;&#xFF0C;&#x8FD9;&#x4E9B;&#x4EE3;&#x4EF7;&#x5BF9;&#x4E8E;&#x5F88;&#x591A;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x7684; &#x5DE5;&#x4F5C;&#x6765;&#x8BF4;&#x8FD8;&#x662F;&#x53EF;&#x4EE5;&#x63A5;&#x53D7;&#x7684;&#x3002;"}}}